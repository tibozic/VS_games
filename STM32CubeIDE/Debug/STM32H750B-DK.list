
STM32H750B-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   0000227c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vector   00000298  90000000  90000000  00020000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         00027144  900002a0  900002a0  000202a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00003954  900273e4  900273e4  000473e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000658  9002ad38  9002ad38  0004ad38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  9002b390  9002b390  000d718c  2**0
                  CONTENTS
  6 .ARM          00000000  9002b390  9002b390  000d718c  2**0
                  CONTENTS
  7 .preinit_array 00000000  9002b390  9002b390  000d718c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   00000018  9002b390  9002b390  0004b390  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000008  9002b3a8  9002b3a8  0004b3a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000154  24000000  9002b3b0  00050000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 11 .bss          00024090  24000158  9002b504  00050158  2**3
                  ALLOC
 12 ._user_heap_stack 00002000  240241e8  9002b504  000541e8  2**0
                  ALLOC
 13 .ARM.attributes 0000002e  00000000  00000000  000d718c  2**0
                  CONTENTS, READONLY
 14 FontFlashSection 00015818  90200000  90200000  00060000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 00000064  90215818  90215818  00075818  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 ExtFlashSection 00061910  9021587c  9021587c  0007587c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 TouchGFX_Framebuffer 000bf400  d0000000  d0000000  000e0000  2**2
                  ALLOC
 18 Video_RGB_Buffer 00043800  d00bf400  d00bf400  000e0000  2**2
                  ALLOC
 19 .comment      000000c2  00000000  00000000  000d71ba  2**0
                  CONTENTS, READONLY
 20 .debug_line   00073d9d  00000000  00000000  000d727c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005f  00000000  00000000  0014b019  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_info   000f81f7  00000000  00000000  0014b078  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_abbrev 0001868a  00000000  00000000  0024326f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_aranges 00003590  00000000  00000000  0025b900  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_str    001a1b99  00000000  00000000  0025ee90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_rnglists 000076c3  00000000  00000000  00400a29  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_macro  0004863e  00000000  00000000  004080ec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_frame  0000acbc  00000000  00000000  0045072c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_loclists 00034857  00000000  00000000  0045b3e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900002a0 <__do_global_dtors_aux>:
900002a0:	b510      	push	{r4, lr}
900002a2:	4c05      	ldr	r4, [pc, #20]	; (900002b8 <__do_global_dtors_aux+0x18>)
900002a4:	7823      	ldrb	r3, [r4, #0]
900002a6:	b933      	cbnz	r3, 900002b6 <__do_global_dtors_aux+0x16>
900002a8:	4b04      	ldr	r3, [pc, #16]	; (900002bc <__do_global_dtors_aux+0x1c>)
900002aa:	b113      	cbz	r3, 900002b2 <__do_global_dtors_aux+0x12>
900002ac:	4804      	ldr	r0, [pc, #16]	; (900002c0 <__do_global_dtors_aux+0x20>)
900002ae:	f3af 8000 	nop.w
900002b2:	2301      	movs	r3, #1
900002b4:	7023      	strb	r3, [r4, #0]
900002b6:	bd10      	pop	{r4, pc}
900002b8:	24000158 	.word	0x24000158
900002bc:	00000000 	.word	0x00000000
900002c0:	900273cc 	.word	0x900273cc

900002c4 <frame_dummy>:
900002c4:	b508      	push	{r3, lr}
900002c6:	4b03      	ldr	r3, [pc, #12]	; (900002d4 <frame_dummy+0x10>)
900002c8:	b11b      	cbz	r3, 900002d2 <frame_dummy+0xe>
900002ca:	4903      	ldr	r1, [pc, #12]	; (900002d8 <frame_dummy+0x14>)
900002cc:	4803      	ldr	r0, [pc, #12]	; (900002dc <frame_dummy+0x18>)
900002ce:	f3af 8000 	nop.w
900002d2:	bd08      	pop	{r3, pc}
900002d4:	00000000 	.word	0x00000000
900002d8:	2400015c 	.word	0x2400015c
900002dc:	900273cc 	.word	0x900273cc

900002e0 <memchr>:
900002e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
900002e4:	2a10      	cmp	r2, #16
900002e6:	db2b      	blt.n	90000340 <memchr+0x60>
900002e8:	f010 0f07 	tst.w	r0, #7
900002ec:	d008      	beq.n	90000300 <memchr+0x20>
900002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
900002f2:	3a01      	subs	r2, #1
900002f4:	428b      	cmp	r3, r1
900002f6:	d02d      	beq.n	90000354 <memchr+0x74>
900002f8:	f010 0f07 	tst.w	r0, #7
900002fc:	b342      	cbz	r2, 90000350 <memchr+0x70>
900002fe:	d1f6      	bne.n	900002ee <memchr+0xe>
90000300:	b4f0      	push	{r4, r5, r6, r7}
90000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
9000030a:	f022 0407 	bic.w	r4, r2, #7
9000030e:	f07f 0700 	mvns.w	r7, #0
90000312:	2300      	movs	r3, #0
90000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90000318:	3c08      	subs	r4, #8
9000031a:	ea85 0501 	eor.w	r5, r5, r1
9000031e:	ea86 0601 	eor.w	r6, r6, r1
90000322:	fa85 f547 	uadd8	r5, r5, r7
90000326:	faa3 f587 	sel	r5, r3, r7
9000032a:	fa86 f647 	uadd8	r6, r6, r7
9000032e:	faa5 f687 	sel	r6, r5, r7
90000332:	b98e      	cbnz	r6, 90000358 <memchr+0x78>
90000334:	d1ee      	bne.n	90000314 <memchr+0x34>
90000336:	bcf0      	pop	{r4, r5, r6, r7}
90000338:	f001 01ff 	and.w	r1, r1, #255	; 0xff
9000033c:	f002 0207 	and.w	r2, r2, #7
90000340:	b132      	cbz	r2, 90000350 <memchr+0x70>
90000342:	f810 3b01 	ldrb.w	r3, [r0], #1
90000346:	3a01      	subs	r2, #1
90000348:	ea83 0301 	eor.w	r3, r3, r1
9000034c:	b113      	cbz	r3, 90000354 <memchr+0x74>
9000034e:	d1f8      	bne.n	90000342 <memchr+0x62>
90000350:	2000      	movs	r0, #0
90000352:	4770      	bx	lr
90000354:	3801      	subs	r0, #1
90000356:	4770      	bx	lr
90000358:	2d00      	cmp	r5, #0
9000035a:	bf06      	itte	eq
9000035c:	4635      	moveq	r5, r6
9000035e:	3803      	subeq	r0, #3
90000360:	3807      	subne	r0, #7
90000362:	f015 0f01 	tst.w	r5, #1
90000366:	d107      	bne.n	90000378 <memchr+0x98>
90000368:	3001      	adds	r0, #1
9000036a:	f415 7f80 	tst.w	r5, #256	; 0x100
9000036e:	bf02      	ittt	eq
90000370:	3001      	addeq	r0, #1
90000372:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
90000376:	3001      	addeq	r0, #1
90000378:	bcf0      	pop	{r4, r5, r6, r7}
9000037a:	3801      	subs	r0, #1
9000037c:	4770      	bx	lr
9000037e:	bf00      	nop

90000380 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
90000380:	f8df d034 	ldr.w	sp, [pc, #52]	; 900003b8 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
90000384:	2100      	movs	r1, #0
  b  LoopCopyDataInit
90000386:	e003      	b.n	90000390 <LoopCopyDataInit>

90000388 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
90000388:	4b0c      	ldr	r3, [pc, #48]	; (900003bc <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
9000038a:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
9000038c:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
9000038e:	3104      	adds	r1, #4

90000390 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
90000390:	480b      	ldr	r0, [pc, #44]	; (900003c0 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
90000392:	4b0c      	ldr	r3, [pc, #48]	; (900003c4 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
90000394:	1842      	adds	r2, r0, r1
  cmp  r2, r3
90000396:	429a      	cmp	r2, r3
  bcc  CopyDataInit
90000398:	d3f6      	bcc.n	90000388 <CopyDataInit>
  ldr  r2, =_sbss
9000039a:	4a0b      	ldr	r2, [pc, #44]	; (900003c8 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
9000039c:	e002      	b.n	900003a4 <LoopFillZerobss>

9000039e <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
9000039e:	2300      	movs	r3, #0
  str  r3, [r2], #4
900003a0:	f842 3b04 	str.w	r3, [r2], #4

900003a4 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
900003a4:	4b09      	ldr	r3, [pc, #36]	; (900003cc <LoopFillZerobss+0x28>)
  cmp  r2, r3
900003a6:	429a      	cmp	r2, r3
  bcc  FillZerobss
900003a8:	d3f9      	bcc.n	9000039e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
900003aa:	f007 fc01 	bl	90007bb0 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
900003ae:	f026 fb19 	bl	900269e4 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
900003b2:	f002 fc3f 	bl	90002c34 <main>
  bx  lr    
900003b6:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
900003b8:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
900003bc:	9002b3b0 	.word	0x9002b3b0
  ldr  r0, =_sdata
900003c0:	24000000 	.word	0x24000000
  ldr  r3, =_edata
900003c4:	24000154 	.word	0x24000154
  ldr  r2, =_sbss
900003c8:	24000158 	.word	0x24000158
  ldr  r3, = _ebss
900003cc:	240241e8 	.word	0x240241e8

900003d0 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
900003d0:	e7fe      	b.n	900003d0 <ADC3_IRQHandler>
	...

900003d4 <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
900003d4:	4770      	bx	lr
900003d6:	bf00      	nop

900003d8 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
900003d8:	4770      	bx	lr
900003da:	bf00      	nop

900003dc <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
900003dc:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
900003de:	f001 ff87 	bl	900022f0 <touchgfx_components_init>
    touchgfx_init();
}
900003e2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
900003e6:	f001 bf07 	b.w	900021f8 <touchgfx_init>
900003ea:	bf00      	nop

900003ec <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
900003ec:	f001 bf82 	b.w	900022f4 <touchgfx_taskEntry>

900003f0 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
900003f0:	6840      	ldr	r0, [r0, #4]
    }
900003f2:	4770      	bx	lr

900003f4 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
900003f4:	6041      	str	r1, [r0, #4]
    }
900003f6:	4770      	bx	lr

900003f8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
900003f8:	f04f 20e0 	mov.w	r0, #3758153728	; 0xe000e000
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
900003fc:	4b08      	ldr	r3, [pc, #32]	; (90000420 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
900003fe:	4a09      	ldr	r2, [pc, #36]	; (90000424 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000400:	f8d0 1dfc 	ldr.w	r1, [r0, #3580]	; 0xdfc
90000404:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
90000408:	f8c0 1dfc 	str.w	r1, [r0, #3580]	; 0xdfc
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
9000040c:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	; 0xfb0
90000410:	430a      	orrs	r2, r1
90000412:	f8c3 2fb0 	str.w	r2, [r3, #4016]	; 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
90000416:	681a      	ldr	r2, [r3, #0]
90000418:	f042 0201 	orr.w	r2, r2, #1
9000041c:	601a      	str	r2, [r3, #0]
}
9000041e:	4770      	bx	lr
90000420:	e0001000 	.word	0xe0001000
90000424:	c5acce55 	.word	0xc5acce55

90000428 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
90000428:	1a51      	subs	r1, r2, r1
9000042a:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
9000042e:	fbb1 f0f3 	udiv	r0, r1, r3
90000432:	4770      	bx	lr

90000434 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
90000434:	4b01      	ldr	r3, [pc, #4]	; (9000043c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
90000436:	6858      	ldr	r0, [r3, #4]
}
90000438:	4770      	bx	lr
9000043a:	bf00      	nop
9000043c:	e0001000 	.word	0xe0001000

90000440 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
90000440:	4770      	bx	lr
90000442:	bf00      	nop

90000444 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
90000444:	b510      	push	{r4, lr}
90000446:	4604      	mov	r4, r0
90000448:	210c      	movs	r1, #12
9000044a:	f025 ff0a 	bl	90026262 <_ZdlPvj>
9000044e:	4620      	mov	r0, r4
90000450:	bd10      	pop	{r4, pc}
90000452:	bf00      	nop

90000454 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000454:	6803      	ldr	r3, [r0, #0]
90000456:	4a0c      	ldr	r2, [pc, #48]	; (90000488 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x34>)
90000458:	691b      	ldr	r3, [r3, #16]
{
9000045a:	b510      	push	{r4, lr}
9000045c:	4604      	mov	r4, r0
    if (active) //idle task sched out
9000045e:	b149      	cbz	r1, 90000474 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x20>
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000460:	4293      	cmp	r3, r2
90000462:	d10d      	bne.n	90000480 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x2c>
    return *((volatile unsigned int*)0xE0001004);
90000464:	4b09      	ldr	r3, [pc, #36]	; (9000048c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000466:	6858      	ldr	r0, [r3, #4]
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000468:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
9000046a:	6863      	ldr	r3, [r4, #4]
9000046c:	1a9b      	subs	r3, r3, r2
9000046e:	4403      	add	r3, r0
90000470:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
90000472:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
90000474:	4293      	cmp	r3, r2
90000476:	d105      	bne.n	90000484 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x30>
    return *((volatile unsigned int*)0xE0001004);
90000478:	4b04      	ldr	r3, [pc, #16]	; (9000048c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
9000047a:	6858      	ldr	r0, [r3, #4]
        cc_in = getCPUCycles();
9000047c:	60a0      	str	r0, [r4, #8]
}
9000047e:	bd10      	pop	{r4, pc}
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000480:	4798      	blx	r3
90000482:	e7f1      	b.n	90000468 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x14>
        cc_in = getCPUCycles();
90000484:	4798      	blx	r3
90000486:	e7f9      	b.n	9000047c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x28>
90000488:	90000435 	.word	0x90000435
9000048c:	e0001000 	.word	0xe0001000

90000490 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
90000490:	4770      	bx	lr
90000492:	bf00      	nop
90000494:	0000      	movs	r0, r0
	...

90000498 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "stm32h750b_discovery_ts.h"

void STM32TouchController::init()
{
90000498:	b500      	push	{lr}
9000049a:	b085      	sub	sp, #20
     *
     */
    TS_Init_t hTS;
    hTS.Orientation = TS_SWAP_XY;
    hTS.Accuracy = 0;
    hTS.Width = 480;
9000049c:	2208      	movs	r2, #8
9000049e:	2300      	movs	r3, #0
    hTS.Height = 272;
    BSP_TS_Init(0, &hTS);
900004a0:	2000      	movs	r0, #0
900004a2:	4669      	mov	r1, sp
    hTS.Width = 480;
900004a4:	ed9f 7b06 	vldr	d7, [pc, #24]	; 900004c0 <_ZN20STM32TouchController4initEv+0x28>
900004a8:	e9cd 2302 	strd	r2, r3, [sp, #8]
900004ac:	ed8d 7b00 	vstr	d7, [sp]
    BSP_TS_Init(0, &hTS);
900004b0:	f007 fa8c 	bl	900079cc <BSP_TS_Init>
}
900004b4:	b005      	add	sp, #20
900004b6:	f85d fb04 	ldr.w	pc, [sp], #4
900004ba:	bf00      	nop
900004bc:	f3af 8000 	nop.w
900004c0:	000001e0 	.word	0x000001e0
900004c4:	00000110 	.word	0x00000110

900004c8 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
900004c8:	b530      	push	{r4, r5, lr}
900004ca:	b085      	sub	sp, #20
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_State_t  TS_State = { 0 };
900004cc:	2000      	movs	r0, #0
{
900004ce:	460d      	mov	r5, r1
900004d0:	4614      	mov	r4, r2
    BSP_TS_GetState(0, &TS_State);
900004d2:	a901      	add	r1, sp, #4
    TS_State_t  TS_State = { 0 };
900004d4:	9001      	str	r0, [sp, #4]
900004d6:	e9cd 0002 	strd	r0, r0, [sp, #8]
    BSP_TS_GetState(0, &TS_State);
900004da:	f007 fb05 	bl	90007ae8 <BSP_TS_GetState>
    if (TS_State.TouchDetected)
900004de:	9801      	ldr	r0, [sp, #4]
900004e0:	b120      	cbz	r0, 900004ec <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        x = TS_State.TouchX;
        y = TS_State.TouchY;
        return true;
900004e2:	2001      	movs	r0, #1
        y = TS_State.TouchY;
900004e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        x = TS_State.TouchX;
900004e8:	602a      	str	r2, [r5, #0]
        y = TS_State.TouchY;
900004ea:	6023      	str	r3, [r4, #0]
    }

    return false;
}
900004ec:	b005      	add	sp, #20
900004ee:	bd30      	pop	{r4, r5, pc}

900004f0 <_ZN20STM32TouchControllerD0Ev>:
900004f0:	b510      	push	{r4, lr}
900004f2:	4604      	mov	r4, r0
900004f4:	2104      	movs	r1, #4
900004f6:	f025 feb4 	bl	90026262 <_ZdlPvj>
900004fa:	4620      	mov	r0, r4
900004fc:	bd10      	pop	{r4, pc}
900004fe:	bf00      	nop

90000500 <_ZN8touchgfx4GPIO4initEv>:
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000500:	2108      	movs	r1, #8
90000502:	4810      	ldr	r0, [pc, #64]	; (90000544 <_ZN8touchgfx4GPIO4initEv+0x44>)
{
90000504:	b508      	push	{r3, lr}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000506:	f008 f855 	bl	900085b4 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000050a:	2801      	cmp	r0, #1
9000050c:	d101      	bne.n	90000512 <_ZN8touchgfx4GPIO4initEv+0x12>
            GPIO_InvertedLevels[id] = 1;
9000050e:	4b0e      	ldr	r3, [pc, #56]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000510:	6018      	str	r0, [r3, #0]
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000512:	2180      	movs	r1, #128	; 0x80
90000514:	480d      	ldr	r0, [pc, #52]	; (9000054c <_ZN8touchgfx4GPIO4initEv+0x4c>)
90000516:	f008 f84d 	bl	900085b4 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000051a:	2801      	cmp	r0, #1
9000051c:	d101      	bne.n	90000522 <_ZN8touchgfx4GPIO4initEv+0x22>
            GPIO_InvertedLevels[id] = 1;
9000051e:	4b0a      	ldr	r3, [pc, #40]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000520:	6058      	str	r0, [r3, #4]
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000522:	2140      	movs	r1, #64	; 0x40
90000524:	4809      	ldr	r0, [pc, #36]	; (9000054c <_ZN8touchgfx4GPIO4initEv+0x4c>)
90000526:	f008 f845 	bl	900085b4 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000052a:	2801      	cmp	r0, #1
9000052c:	d101      	bne.n	90000532 <_ZN8touchgfx4GPIO4initEv+0x32>
            GPIO_InvertedLevels[id] = 1;
9000052e:	4b06      	ldr	r3, [pc, #24]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000530:	6098      	str	r0, [r3, #8]
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000532:	2140      	movs	r1, #64	; 0x40
90000534:	4806      	ldr	r0, [pc, #24]	; (90000550 <_ZN8touchgfx4GPIO4initEv+0x50>)
90000536:	f008 f83d 	bl	900085b4 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000053a:	2801      	cmp	r0, #1
9000053c:	d101      	bne.n	90000542 <_ZN8touchgfx4GPIO4initEv+0x42>
            GPIO_InvertedLevels[id] = 1;
9000053e:	4b02      	ldr	r3, [pc, #8]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000540:	60d8      	str	r0, [r3, #12]
}
90000542:	bd08      	pop	{r3, pc}
90000544:	58021800 	.word	0x58021800
90000548:	24000174 	.word	0x24000174
9000054c:	58020400 	.word	0x58020400
90000550:	58020000 	.word	0x58020000

90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
    switch (id)
90000554:	2803      	cmp	r0, #3
90000556:	d827      	bhi.n	900005a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>
90000558:	e8df f000 	tbb	[pc, r0]
9000055c:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
90000560:	4b12      	ldr	r3, [pc, #72]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000562:	2140      	movs	r1, #64	; 0x40
90000564:	4812      	ldr	r0, [pc, #72]	; (900005b0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
90000566:	68da      	ldr	r2, [r3, #12]
90000568:	fab2 f282 	clz	r2, r2
9000056c:	0952      	lsrs	r2, r2, #5
9000056e:	f008 b827 	b.w	900085c0 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
90000572:	4b0e      	ldr	r3, [pc, #56]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000574:	2140      	movs	r1, #64	; 0x40
90000576:	480f      	ldr	r0, [pc, #60]	; (900005b4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000578:	689a      	ldr	r2, [r3, #8]
9000057a:	fab2 f282 	clz	r2, r2
9000057e:	0952      	lsrs	r2, r2, #5
90000580:	f008 b81e 	b.w	900085c0 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
90000584:	4b09      	ldr	r3, [pc, #36]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000586:	2180      	movs	r1, #128	; 0x80
90000588:	480a      	ldr	r0, [pc, #40]	; (900005b4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
9000058a:	685a      	ldr	r2, [r3, #4]
9000058c:	fab2 f282 	clz	r2, r2
90000590:	0952      	lsrs	r2, r2, #5
90000592:	f008 b815 	b.w	900085c0 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
90000596:	4b05      	ldr	r3, [pc, #20]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000598:	2108      	movs	r1, #8
9000059a:	4807      	ldr	r0, [pc, #28]	; (900005b8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x64>)
9000059c:	681a      	ldr	r2, [r3, #0]
9000059e:	fab2 f282 	clz	r2, r2
900005a2:	0952      	lsrs	r2, r2, #5
900005a4:	f008 b80c 	b.w	900085c0 <HAL_GPIO_WritePin>
}
900005a8:	4770      	bx	lr
900005aa:	bf00      	nop
900005ac:	24000174 	.word	0x24000174
900005b0:	58020000 	.word	0x58020000
900005b4:	58020400 	.word	0x58020400
900005b8:	58021800 	.word	0x58021800

900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
    switch (id)
900005bc:	2803      	cmp	r0, #3
900005be:	d827      	bhi.n	90000610 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>
900005c0:	e8df f000 	tbb	[pc, r0]
900005c4:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
900005c8:	4b12      	ldr	r3, [pc, #72]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005ca:	2140      	movs	r1, #64	; 0x40
900005cc:	4812      	ldr	r0, [pc, #72]	; (90000618 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
900005ce:	68da      	ldr	r2, [r3, #12]
900005d0:	3a00      	subs	r2, #0
900005d2:	bf18      	it	ne
900005d4:	2201      	movne	r2, #1
900005d6:	f007 bff3 	b.w	900085c0 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
900005da:	4b0e      	ldr	r3, [pc, #56]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005dc:	2140      	movs	r1, #64	; 0x40
900005de:	480f      	ldr	r0, [pc, #60]	; (9000061c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
900005e0:	689a      	ldr	r2, [r3, #8]
900005e2:	3a00      	subs	r2, #0
900005e4:	bf18      	it	ne
900005e6:	2201      	movne	r2, #1
900005e8:	f007 bfea 	b.w	900085c0 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
900005ec:	4b09      	ldr	r3, [pc, #36]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005ee:	2180      	movs	r1, #128	; 0x80
900005f0:	480a      	ldr	r0, [pc, #40]	; (9000061c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
900005f2:	685a      	ldr	r2, [r3, #4]
900005f4:	3a00      	subs	r2, #0
900005f6:	bf18      	it	ne
900005f8:	2201      	movne	r2, #1
900005fa:	f007 bfe1 	b.w	900085c0 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
900005fe:	4b05      	ldr	r3, [pc, #20]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000600:	2108      	movs	r1, #8
90000602:	4807      	ldr	r0, [pc, #28]	; (90000620 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x64>)
90000604:	681a      	ldr	r2, [r3, #0]
90000606:	3a00      	subs	r2, #0
90000608:	bf18      	it	ne
9000060a:	2201      	movne	r2, #1
9000060c:	f007 bfd8 	b.w	900085c0 <HAL_GPIO_WritePin>
}
90000610:	4770      	bx	lr
90000612:	bf00      	nop
90000614:	24000174 	.word	0x24000174
90000618:	58020000 	.word	0x58020000
9000061c:	58020400 	.word	0x58020400
90000620:	58021800 	.word	0x58021800

90000624 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
    switch (id)
90000624:	2803      	cmp	r0, #3
90000626:	d813      	bhi.n	90000650 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>
90000628:	e8df f000 	tbb	[pc, r0]
9000062c:	02060a0e 	.word	0x02060a0e
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000630:	2140      	movs	r1, #64	; 0x40
90000632:	4808      	ldr	r0, [pc, #32]	; (90000654 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
90000634:	f007 bfc8 	b.w	900085c8 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000638:	2140      	movs	r1, #64	; 0x40
9000063a:	4807      	ldr	r0, [pc, #28]	; (90000658 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
9000063c:	f007 bfc4 	b.w	900085c8 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000640:	2180      	movs	r1, #128	; 0x80
90000642:	4805      	ldr	r0, [pc, #20]	; (90000658 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000644:	f007 bfc0 	b.w	900085c8 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000648:	2108      	movs	r1, #8
9000064a:	4804      	ldr	r0, [pc, #16]	; (9000065c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x38>)
9000064c:	f007 bfbc 	b.w	900085c8 <HAL_GPIO_TogglePin>
}
90000650:	4770      	bx	lr
90000652:	bf00      	nop
90000654:	58020000 	.word	0x58020000
90000658:	58020400 	.word	0x58020400
9000065c:	58021800 	.word	0x58021800

90000660 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
90000660:	2000      	movs	r0, #0
90000662:	4770      	bx	lr

90000664 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
90000664:	2301      	movs	r3, #1
        requestedOrientation = orientation;
90000666:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
9000066a:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
9000066e:	4770      	bx	lr

90000670 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
90000670:	2000      	movs	r0, #0
90000672:	4770      	bx	lr

90000674 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000674:	1e0a      	subs	r2, r1, #0
90000676:	4b03      	ldr	r3, [pc, #12]	; (90000684 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000678:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
9000067a:	bf18      	it	ne
9000067c:	2201      	movne	r2, #1
9000067e:	701a      	strb	r2, [r3, #0]
    }
90000680:	4770      	bx	lr
90000682:	bf00      	nop
90000684:	240235ab 	.word	0x240235ab

90000688 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
90000688:	2000      	movs	r0, #0
9000068a:	4770      	bx	lr

9000068c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
9000068c:	6b83      	ldr	r3, [r0, #56]	; 0x38
    virtual void taskDelay(uint16_t ms)
9000068e:	4608      	mov	r0, r1
        if (taskDelayFunc)
90000690:	b103      	cbz	r3, 90000694 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
90000692:	4718      	bx	r3
        }
    }
90000694:	4770      	bx	lr
90000696:	bf00      	nop

90000698 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
90000698:	f64f 70ff 	movw	r0, #65535	; 0xffff
9000069c:	4770      	bx	lr
9000069e:	bf00      	nop

900006a0 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
900006a0:	4770      	bx	lr
900006a2:	bf00      	nop

900006a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
900006a4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
900006a6:	4b09      	ldr	r3, [pc, #36]	; (900006cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
900006a8:	881b      	ldrh	r3, [r3, #0]
900006aa:	428b      	cmp	r3, r1
900006ac:	d808      	bhi.n	900006c0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
900006ae:	4b08      	ldr	r3, [pc, #32]	; (900006d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
900006b0:	881b      	ldrh	r3, [r3, #0]
900006b2:	4293      	cmp	r3, r2
900006b4:	d804      	bhi.n	900006c0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
        FRAME_BUFFER_WIDTH = width;
900006b6:	4807      	ldr	r0, [pc, #28]	; (900006d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
        FRAME_BUFFER_HEIGHT = height;
900006b8:	4b07      	ldr	r3, [pc, #28]	; (900006d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
        FRAME_BUFFER_WIDTH = width;
900006ba:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = height;
900006bc:	801a      	strh	r2, [r3, #0]
    }
900006be:	bd08      	pop	{r3, pc}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
900006c0:	4b06      	ldr	r3, [pc, #24]	; (900006dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
900006c2:	219e      	movs	r1, #158	; 0x9e
900006c4:	4a06      	ldr	r2, [pc, #24]	; (900006e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
900006c6:	4807      	ldr	r0, [pc, #28]	; (900006e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
900006c8:	f025 fdfa 	bl	900262c0 <__assert_func>
900006cc:	240235a0 	.word	0x240235a0
900006d0:	240235a2 	.word	0x240235a2
900006d4:	240235a6 	.word	0x240235a6
900006d8:	240235a8 	.word	0x240235a8
900006dc:	90027464 	.word	0x90027464
900006e0:	900274c8 	.word	0x900274c8
900006e4:	9002750c 	.word	0x9002750c

900006e8 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
900006e8:	b510      	push	{r4, lr}
900006ea:	4604      	mov	r4, r0
        swapFrameBuffers();
900006ec:	f010 fc0a 	bl	90010f04 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
900006f0:	6823      	ldr	r3, [r4, #0]
900006f2:	4620      	mov	r0, r4
900006f4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
900006f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
900006fc:	4718      	bx	r3
900006fe:	bf00      	nop

90000700 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
90000700:	f001 bef0 	b.w	900024e4 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

90000704 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
90000704:	f001 bef4 	b.w	900024f0 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

90000708 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90000708:	b510      	push	{r4, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
9000070a:	f001 ffdd 	bl	900026c8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
9000070e:	4812      	ldr	r0, [pc, #72]	; (90000758 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x50>)
90000710:	2300      	movs	r3, #0
90000712:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
90000716:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
9000071a:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000071e:	f643 74e0 	movw	r4, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90000722:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000726:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
9000072a:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000072e:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000732:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000734:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90000738:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000073a:	f8c0 2274 	str.w	r2, [r0, #628]	; 0x274
      } while (ways-- != 0U);
9000073e:	1c5a      	adds	r2, r3, #1
90000740:	d1f8      	bne.n	90000734 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2c>
    } while(sets-- != 0U);
90000742:	f1ac 0c20 	sub.w	ip, ip, #32
90000746:	f11c 0f20 	cmn.w	ip, #32
9000074a:	d1f0      	bne.n	9000072e <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x26>
9000074c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000750:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
90000754:	bd10      	pop	{r4, pc}
90000756:	bf00      	nop
90000758:	e000ed00 	.word	0xe000ed00

9000075c <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
9000075c:	f001 be9e 	b.w	9000249c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

90000760 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
90000760:	f002 b8b0 	b.w	900028c4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

90000764 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
90000764:	f002 b89a 	b.w	9000289c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

90000768 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
90000768:	f001 bea2 	b.w	900024b0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

9000076c <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * @brief Unlocks the framebuffer.
     *
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
9000076c:	b510      	push	{r4, lr}
9000076e:	4604      	mov	r4, r0
    {
        HAL::unlockFrameBuffer();
90000770:	f00f ff44 	bl	900105fc <_ZN8touchgfx3HAL17unlockFrameBufferEv>
        dma.start();
90000774:	6860      	ldr	r0, [r4, #4]
90000776:	6803      	ldr	r3, [r0, #0]
    }
90000778:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        dma.start();
9000077c:	691b      	ldr	r3, [r3, #16]
9000077e:	4718      	bx	r3

90000780 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
90000780:	f00f be12 	b.w	900103a8 <_ZN8touchgfx3HAL16flushFrameBufferEv>

90000784 <_ZN11TouchGFXHALD0Ev>:
90000784:	b510      	push	{r4, lr}
90000786:	4604      	mov	r4, r0
90000788:	2188      	movs	r1, #136	; 0x88
9000078a:	f025 fd6a 	bl	90026262 <_ZdlPvj>
9000078e:	4620      	mov	r0, r4
90000790:	bd10      	pop	{r4, pc}
90000792:	bf00      	nop

90000794 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
90000794:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
90000798:	b11b      	cbz	r3, 900007a2 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
9000079a:	6840      	ldr	r0, [r0, #4]
9000079c:	6803      	ldr	r3, [r0, #0]
9000079e:	681b      	ldr	r3, [r3, #0]
900007a0:	4718      	bx	r3
    }
900007a2:	4618      	mov	r0, r3
900007a4:	4770      	bx	lr
900007a6:	bf00      	nop

900007a8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
900007a8:	f890 2078 	ldrb.w	r2, [r0, #120]	; 0x78
900007ac:	f890 3034 	ldrb.w	r3, [r0, #52]	; 0x34
900007b0:	429a      	cmp	r2, r3
        {
            if (DISPLAY_ROTATION == rotate0)
900007b2:	4b0b      	ldr	r3, [pc, #44]	; (900007e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x38>)
900007b4:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
900007b6:	d00b      	beq.n	900007d0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x28>
            if (DISPLAY_ROTATION == rotate0)
900007b8:	b94a      	cbnz	r2, 900007ce <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
900007ba:	4a0a      	ldr	r2, [pc, #40]	; (900007e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
                DISPLAY_WIDTH = tmp;
                DISPLAY_ROTATION = rotate90;
900007bc:	f04f 0c01 	mov.w	ip, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007c0:	4909      	ldr	r1, [pc, #36]	; (900007e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            }
        }
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
900007c2:	8810      	ldrh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
900007c4:	f883 c000 	strb.w	ip, [r3]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007c8:	880b      	ldrh	r3, [r1, #0]
            DISPLAY_WIDTH = tmp;
900007ca:	8008      	strh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007cc:	8013      	strh	r3, [r2, #0]
        }
    }
900007ce:	4770      	bx	lr
        else if (DISPLAY_ROTATION != rotate0)
900007d0:	2a00      	cmp	r2, #0
900007d2:	d0fc      	beq.n	900007ce <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            const uint16_t tmp = DISPLAY_HEIGHT;
900007d4:	4a03      	ldr	r2, [pc, #12]	; (900007e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
            DISPLAY_ROTATION = rotate0;
900007d6:	f04f 0c00 	mov.w	ip, #0
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007da:	4903      	ldr	r1, [pc, #12]	; (900007e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
900007dc:	e7f1      	b.n	900007c2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x1a>
900007de:	bf00      	nop
900007e0:	240235a4 	.word	0x240235a4
900007e4:	240235a2 	.word	0x240235a2
900007e8:	240235a0 	.word	0x240235a0

900007ec <_ZN8touchgfx3HAL10getDMATypeEv>:
        return dma.getDMAType();
900007ec:	6840      	ldr	r0, [r0, #4]
900007ee:	4a04      	ldr	r2, [pc, #16]	; (90000800 <_ZN8touchgfx3HAL10getDMATypeEv+0x14>)
900007f0:	6803      	ldr	r3, [r0, #0]
900007f2:	699b      	ldr	r3, [r3, #24]
900007f4:	4293      	cmp	r3, r2
900007f6:	d101      	bne.n	900007fc <_ZN8touchgfx3HAL10getDMATypeEv+0x10>
    }
900007f8:	2000      	movs	r0, #0
900007fa:	4770      	bx	lr
        return dma.getDMAType();
900007fc:	4718      	bx	r3
900007fe:	bf00      	nop
90000800:	90000661 	.word	0x90000661

90000804 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000804:	b1a9      	cbz	r1, 90000832 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2e>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90000806:	6402      	str	r2, [r0, #64]	; 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000808:	3a00      	subs	r2, #0
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
9000080a:	63c1      	str	r1, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000080c:	bf18      	it	ne
9000080e:	2201      	movne	r2, #1
90000810:	490c      	ldr	r1, [pc, #48]	; (90000844 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
90000812:	700a      	strb	r2, [r1, #0]
        setAnimationStorage(animationStorage);
90000814:	6802      	ldr	r2, [r0, #0]
90000816:	490c      	ldr	r1, [pc, #48]	; (90000848 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x44>)
90000818:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
9000081c:	428a      	cmp	r2, r1
9000081e:	d106      	bne.n	9000082e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2a>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000820:	1e19      	subs	r1, r3, #0
90000822:	4a0a      	ldr	r2, [pc, #40]	; (9000084c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x48>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000824:	6443      	str	r3, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000826:	bf18      	it	ne
90000828:	2101      	movne	r1, #1
9000082a:	7011      	strb	r1, [r2, #0]
9000082c:	4770      	bx	lr
        setAnimationStorage(animationStorage);
9000082e:	4619      	mov	r1, r3
90000830:	4710      	bx	r2
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000832:	4b07      	ldr	r3, [pc, #28]	; (90000850 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x4c>)
90000834:	f240 21d2 	movw	r1, #722	; 0x2d2
90000838:	4a06      	ldr	r2, [pc, #24]	; (90000854 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x50>)
9000083a:	4807      	ldr	r0, [pc, #28]	; (90000858 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
9000083c:	b510      	push	{r4, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
9000083e:	f025 fd3f 	bl	900262c0 <__assert_func>
90000842:	bf00      	nop
90000844:	240235aa 	.word	0x240235aa
90000848:	90000675 	.word	0x90000675
9000084c:	240235ab 	.word	0x240235ab
90000850:	90027554 	.word	0x90027554
90000854:	9002758c 	.word	0x9002758c
90000858:	9002750c 	.word	0x9002750c

9000085c <_ZN11TouchGFXHAL9taskEntryEv>:
{
9000085c:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
9000085e:	6803      	ldr	r3, [r0, #0]
{
90000860:	4604      	mov	r4, r0
90000862:	4d17      	ldr	r5, [pc, #92]	; (900008c0 <_ZN11TouchGFXHAL9taskEntryEv+0x64>)
    enableLCDControllerInterrupt();
90000864:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90000868:	4798      	blx	r3
    enableInterrupts();
9000086a:	6823      	ldr	r3, [r4, #0]
9000086c:	4620      	mov	r0, r4
9000086e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
90000870:	4798      	blx	r3
    OSWrappers::waitForVSync();
90000872:	f001 f8e3 	bl	90001a3c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
90000876:	6823      	ldr	r3, [r4, #0]
90000878:	4620      	mov	r0, r4
9000087a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
9000087c:	4798      	blx	r3
    HAL_GPIO_WritePin(LCD_RESET_GPIO_Port, LCD_RESET_Pin, GPIO_PIN_SET);
9000087e:	2201      	movs	r2, #1
90000880:	2104      	movs	r1, #4
90000882:	4810      	ldr	r0, [pc, #64]	; (900008c4 <_ZN11TouchGFXHAL9taskEntryEv+0x68>)
90000884:	f007 fe9c 	bl	900085c0 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_SET);
90000888:	2201      	movs	r2, #1
9000088a:	2180      	movs	r1, #128	; 0x80
9000088c:	480e      	ldr	r0, [pc, #56]	; (900008c8 <_ZN11TouchGFXHAL9taskEntryEv+0x6c>)
9000088e:	f007 fe97 	bl	900085c0 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90000892:	2201      	movs	r2, #1
90000894:	480d      	ldr	r0, [pc, #52]	; (900008cc <_ZN11TouchGFXHAL9taskEntryEv+0x70>)
90000896:	4611      	mov	r1, r2
90000898:	f007 fe92 	bl	900085c0 <HAL_GPIO_WritePin>
        OSWrappers::waitForVSync();
9000089c:	f001 f8ce 	bl	90001a3c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
900008a0:	6823      	ldr	r3, [r4, #0]
        swapFrameBuffers();
900008a2:	4620      	mov	r0, r4
900008a4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
900008a6:	42ab      	cmp	r3, r5
900008a8:	d107      	bne.n	900008ba <_ZN11TouchGFXHAL9taskEntryEv+0x5e>
900008aa:	f010 fb2b 	bl	90010f04 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
900008ae:	6823      	ldr	r3, [r4, #0]
900008b0:	4620      	mov	r0, r4
900008b2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
900008b6:	4798      	blx	r3
    }
900008b8:	e7f0      	b.n	9000089c <_ZN11TouchGFXHAL9taskEntryEv+0x40>
900008ba:	4798      	blx	r3
900008bc:	e7ee      	b.n	9000089c <_ZN11TouchGFXHAL9taskEntryEv+0x40>
900008be:	bf00      	nop
900008c0:	900006e9 	.word	0x900006e9
900008c4:	58020000 	.word	0x58020000
900008c8:	58020c00 	.word	0x58020c00
900008cc:	58022800 	.word	0x58022800

900008d0 <_ZN11TouchGFXHAL10initializeEv>:
{
900008d0:	b538      	push	{r3, r4, r5, lr}
900008d2:	4604      	mov	r4, r0
    TouchGFXGeneratedHAL::initialize();
900008d4:	f002 f800 	bl	900028d8 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationBuffer);
900008d8:	4817      	ldr	r0, [pc, #92]	; (90000938 <_ZN11TouchGFXHAL10initializeEv+0x68>)
900008da:	6823      	ldr	r3, [r4, #0]
900008dc:	6be1      	ldr	r1, [r4, #60]	; 0x3c
900008de:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
900008e2:	6c22      	ldr	r2, [r4, #64]	; 0x40
900008e4:	4285      	cmp	r5, r0
900008e6:	d119      	bne.n	9000091c <_ZN11TouchGFXHAL10initializeEv+0x4c>
        assert(frameBuffer != 0 && "A framebuffer address must be set");
900008e8:	b1f9      	cbz	r1, 9000092a <_ZN11TouchGFXHAL10initializeEv+0x5a>
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008ea:	3a00      	subs	r2, #0
900008ec:	4913      	ldr	r1, [pc, #76]	; (9000093c <_ZN11TouchGFXHAL10initializeEv+0x6c>)
        setAnimationStorage(animationStorage);
900008ee:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008f2:	bf18      	it	ne
900008f4:	2201      	movne	r2, #1
900008f6:	4812      	ldr	r0, [pc, #72]	; (90000940 <_ZN11TouchGFXHAL10initializeEv+0x70>)
900008f8:	428b      	cmp	r3, r1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900008fa:	4912      	ldr	r1, [pc, #72]	; (90000944 <_ZN11TouchGFXHAL10initializeEv+0x74>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008fc:	7002      	strb	r2, [r0, #0]
        setAnimationStorage(animationStorage);
900008fe:	d111      	bne.n	90000924 <_ZN11TouchGFXHAL10initializeEv+0x54>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000900:	4b11      	ldr	r3, [pc, #68]	; (90000948 <_ZN11TouchGFXHAL10initializeEv+0x78>)
90000902:	2201      	movs	r2, #1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000904:	6461      	str	r1, [r4, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000906:	701a      	strb	r2, [r3, #0]
    instrumentation.init();
90000908:	f104 057c 	add.w	r5, r4, #124	; 0x7c
9000090c:	4628      	mov	r0, r5
9000090e:	f7ff fd73 	bl	900003f8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
90000912:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
90000914:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
90000916:	f884 3070 	strb.w	r3, [r4, #112]	; 0x70
}
9000091a:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationBuffer);
9000091c:	4b09      	ldr	r3, [pc, #36]	; (90000944 <_ZN11TouchGFXHAL10initializeEv+0x74>)
9000091e:	4620      	mov	r0, r4
90000920:	47a8      	blx	r5
90000922:	e7f1      	b.n	90000908 <_ZN11TouchGFXHAL10initializeEv+0x38>
        setAnimationStorage(animationStorage);
90000924:	4620      	mov	r0, r4
90000926:	4798      	blx	r3
90000928:	e7ee      	b.n	90000908 <_ZN11TouchGFXHAL10initializeEv+0x38>
        assert(frameBuffer != 0 && "A framebuffer address must be set");
9000092a:	4b08      	ldr	r3, [pc, #32]	; (9000094c <_ZN11TouchGFXHAL10initializeEv+0x7c>)
9000092c:	f240 21d2 	movw	r1, #722	; 0x2d2
90000930:	4a07      	ldr	r2, [pc, #28]	; (90000950 <_ZN11TouchGFXHAL10initializeEv+0x80>)
90000932:	4808      	ldr	r0, [pc, #32]	; (90000954 <_ZN11TouchGFXHAL10initializeEv+0x84>)
90000934:	f025 fcc4 	bl	900262c0 <__assert_func>
90000938:	90000805 	.word	0x90000805
9000093c:	90000675 	.word	0x90000675
90000940:	240235aa 	.word	0x240235aa
90000944:	d0000000 	.word	0xd0000000
90000948:	240235ab 	.word	0x240235ab
9000094c:	90027554 	.word	0x90027554
90000950:	9002758c 	.word	0x9002758c
90000954:	9002750c 	.word	0x9002750c

90000958 <IdleTaskHook>:
}

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
90000958:	b508      	push	{r3, lr}
        return instance;
9000095a:	4b07      	ldr	r3, [pc, #28]	; (90000978 <IdleTaskHook+0x20>)
        if ((int)p) //idle task sched out
9000095c:	b128      	cbz	r0, 9000096a <IdleTaskHook+0x12>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
9000095e:	6818      	ldr	r0, [r3, #0]
90000960:	2101      	movs	r1, #1
90000962:	f010 fae9 	bl	90010f38 <_ZN8touchgfx3HAL12setMCUActiveEb>
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
        }
        return pdTRUE;
    }
90000966:	2001      	movs	r0, #1
90000968:	bd08      	pop	{r3, pc}
            touchgfx::HAL::getInstance()->setMCUActive(false);
9000096a:	4601      	mov	r1, r0
9000096c:	6818      	ldr	r0, [r3, #0]
9000096e:	f010 fae3 	bl	90010f38 <_ZN8touchgfx3HAL12setMCUActiveEb>
    }
90000972:	2001      	movs	r0, #1
90000974:	bd08      	pop	{r3, pc}
90000976:	bf00      	nop
90000978:	240235ac 	.word	0x240235ac

9000097c <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
9000097c:	6940      	ldr	r0, [r0, #20]
9000097e:	4770      	bx	lr

90000980 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
90000980:	f890 0040 	ldrb.w	r0, [r0, #64]	; 0x40
90000984:	4770      	bx	lr
90000986:	bf00      	nop

90000988 <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
90000988:	6b03      	ldr	r3, [r0, #48]	; 0x30
9000098a:	b10b      	cbz	r3, 90000990 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0x8>
9000098c:	2001      	movs	r0, #1
}
9000098e:	4770      	bx	lr
    return (reader != 0) || (movieData != 0);
90000990:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
90000992:	3800      	subs	r0, #0
90000994:	bf18      	it	ne
90000996:	2001      	movne	r0, #1
90000998:	4770      	bx	lr
9000099a:	bf00      	nop

9000099c <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
9000099c:	6880      	ldr	r0, [r0, #8]
9000099e:	4770      	bx	lr

900009a0 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
900009a0:	4770      	bx	lr
900009a2:	bf00      	nop

900009a4 <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
    *data = videoInfo;
900009a4:	3004      	adds	r0, #4
{
900009a6:	468c      	mov	ip, r1
    *data = videoInfo;
900009a8:	c80f      	ldmia	r0, {r0, r1, r2, r3}
900009aa:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
}
900009ae:	4770      	bx	lr

900009b0 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
900009b0:	4770      	bx	lr
900009b2:	bf00      	nop

900009b4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
900009b4:	b508      	push	{r3, lr}
    assert(0);
900009b6:	4a03      	ldr	r2, [pc, #12]	; (900009c4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
900009b8:	f240 11c5 	movw	r1, #453	; 0x1c5
900009bc:	4b02      	ldr	r3, [pc, #8]	; (900009c8 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
900009be:	4803      	ldr	r0, [pc, #12]	; (900009cc <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
900009c0:	f025 fc7e 	bl	900262c0 <__assert_func>
900009c4:	900276b8 	.word	0x900276b8
900009c8:	900276b4 	.word	0x900276b4
900009cc:	90027714 	.word	0x90027714

900009d0 <_ZN20HardwareMJPEGDecoderD0Ev>:
900009d0:	b510      	push	{r4, lr}
900009d2:	4604      	mov	r4, r0
900009d4:	2148      	movs	r1, #72	; 0x48
900009d6:	f025 fc44 	bl	90026262 <_ZdlPvj>
900009da:	4620      	mov	r0, r4
900009dc:	bd10      	pop	{r4, pc}
900009de:	bf00      	nop

900009e0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>:
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009e4:	4d4a      	ldr	r5, [pc, #296]	; (90000b10 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x130>)
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009e6:	4683      	mov	fp, r0
900009e8:	461c      	mov	r4, r3
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900009ea:	68c0      	ldr	r0, [r0, #12]
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009ec:	2302      	movs	r3, #2
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009ee:	b083      	sub	sp, #12
     * @retval None
     */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
        FrameBufferAddress = output;
        JPEG_output_is_paused = 0;
900009f0:	4f48      	ldr	r7, [pc, #288]	; (90000b14 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x134>)
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009f2:	612b      	str	r3, [r5, #16]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
900009f4:	0703      	lsls	r3, r0, #28
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
900009f6:	f44f 7370 	mov.w	r3, #960	; 0x3c0
        MCU_BlockIndex = 0;

        /* Init buffers */
        for (uint32_t i = 0; i < NB_OUTPUT_DATA_BUFFERS; ++i)
        {
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
900009fa:	4e47      	ldr	r6, [pc, #284]	; (90000b18 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x138>)
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
900009fc:	bf18      	it	ne
900009fe:	f020 000f 	bicne.w	r0, r0, #15
        JPEG_OUT_Write_BufferIndex = 0;
90000a02:	f8df a140 	ldr.w	sl, [pc, #320]	; 90000b44 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x164>
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90000a06:	606b      	str	r3, [r5, #4]
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90000a08:	bf18      	it	ne
90000a0a:	3010      	addne	r0, #16
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a0c:	f8db 3010 	ldr.w	r3, [fp, #16]
        DMA2D_reference = dma;
90000a10:	f8df 8134 	ldr.w	r8, [pc, #308]	; 90000b48 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x168>
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90000a14:	6028      	str	r0, [r5, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90000a16:	0900      	lsrs	r0, r0, #4
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a18:	f013 030f 	ands.w	r3, r3, #15
90000a1c:	f8df 912c 	ldr.w	r9, [pc, #300]	; 90000b4c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x16c>
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90000a20:	60e8      	str	r0, [r5, #12]
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a22:	eb00 0040 	add.w	r0, r0, r0, lsl #1
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a26:	bf18      	it	ne
90000a28:	f1c3 0310 	rsbne	r3, r3, #16
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a2c:	01c0      	lsls	r0, r0, #7
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a2e:	60ab      	str	r3, [r5, #8]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a30:	9000      	str	r0, [sp, #0]
        JPEG_output_is_paused = 0;
90000a32:	2000      	movs	r0, #0
        JPEG_OUT_Read_BufferIndex = 0;
90000a34:	4b39      	ldr	r3, [pc, #228]	; (90000b1c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x13c>)
        FrameBufferAddress = output;
90000a36:	4d3a      	ldr	r5, [pc, #232]	; (90000b20 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x140>)
        JPEG_output_is_paused = 0;
90000a38:	6038      	str	r0, [r7, #0]
        FrameBufferAddress = output;
90000a3a:	602c      	str	r4, [r5, #0]
        JPEG_OUT_Read_BufferIndex = 0;
90000a3c:	6018      	str	r0, [r3, #0]
        JPEG_InputImageIndex = 0;
90000a3e:	4c39      	ldr	r4, [pc, #228]	; (90000b24 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x144>)
        MCU_BlockIndex = 0;
90000a40:	4b39      	ldr	r3, [pc, #228]	; (90000b28 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x148>)
        JPEG_OUT_Write_BufferIndex = 0;
90000a42:	f8ca 0000 	str.w	r0, [sl]
        JPEG_InputImageIndex = 0;
90000a46:	6020      	str	r0, [r4, #0]
        MCU_BlockIndex = 0;
90000a48:	6018      	str	r0, [r3, #0]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000a4a:	7030      	strb	r0, [r6, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a4c:	f8da 3000 	ldr.w	r3, [sl]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000a50:	7430      	strb	r0, [r6, #16]
        JPEG_InputImageAddress = (uint32_t)input;
90000a52:	4836      	ldr	r0, [pc, #216]	; (90000b2c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x14c>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a54:	eb06 1303 	add.w	r3, r6, r3, lsl #4
90000a58:	4d35      	ldr	r5, [pc, #212]	; (90000b30 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x150>)
        JPEG_InputImageAddress = (uint32_t)input;
90000a5a:	6001      	str	r1, [r0, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000a5c:	4835      	ldr	r0, [pc, #212]	; (90000b34 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x154>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a5e:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000a60:	6002      	str	r2, [r0, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a62:	f44f 4250 	mov.w	r2, #53248	; 0xd000
90000a66:	4834      	ldr	r0, [pc, #208]	; (90000b38 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x158>)
90000a68:	4c34      	ldr	r4, [pc, #208]	; (90000b3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x15c>)
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90000a6a:	ed9f 7b27 	vldr	d7, [pc, #156]	; 90000b08 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x128>
90000a6e:	ed86 7b02 	vstr	d7, [r6, #8]
90000a72:	ed86 7b06 	vstr	d7, [r6, #24]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a76:	f008 fed3 	bl	90009820 <HAL_JPEG_Decode_DMA>
        DMA2D_reference = dma;
90000a7a:	f8db 3044 	ldr.w	r3, [fp, #68]	; 0x44
90000a7e:	f8c8 3000 	str.w	r3, [r8]
 * @retval 1 : if JPEG processing has finished, 0 : if JPEG processing still ongoing
 */
uint32_t JPEG_OutputHandler(JPEG_HandleTypeDef* hjpeg)
{
    /* Decode frame complete */
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90000a82:	682b      	ldr	r3, [r5, #0]
90000a84:	b113      	cbz	r3, 90000a8c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xac>
90000a86:	f8d9 3000 	ldr.w	r3, [r9]
90000a8a:	bb63      	cbnz	r3, 90000ae6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x106>
    {
        return 1;
    }

    /* Try to start DMA2D video transfer if next buffer if full */
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000a8c:	f8d8 0000 	ldr.w	r0, [r8]
90000a90:	7a03      	ldrb	r3, [r0, #8]
90000a92:	b92b      	cbnz	r3, 90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
90000a94:	4b21      	ldr	r3, [pc, #132]	; (90000b1c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x13c>)
90000a96:	681b      	ldr	r3, [r3, #0]
90000a98:	011b      	lsls	r3, r3, #4
90000a9a:	5cf3      	ldrb	r3, [r6, r3]
90000a9c:	2b01      	cmp	r3, #1
90000a9e:	d024      	beq.n	90000aea <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10a>
    {
        DMA2D_reference->start();
    }

    /* Start JPEG IP if paused and next buffer is empty */
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90000aa0:	683b      	ldr	r3, [r7, #0]
90000aa2:	2b01      	cmp	r3, #1
90000aa4:	d106      	bne.n	90000ab4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd4>
90000aa6:	f8da 3000 	ldr.w	r3, [sl]
90000aaa:	011b      	lsls	r3, r3, #4
90000aac:	5cf3      	ldrb	r3, [r6, r3]
90000aae:	b90b      	cbnz	r3, 90000ab4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd4>
90000ab0:	682b      	ldr	r3, [r5, #0]
90000ab2:	b313      	cbz	r3, 90000afa <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x11a>
    {
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
90000ab4:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000ab6:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90000ab8:	6823      	ldr	r3, [r4, #0]
90000aba:	2b02      	cmp	r3, #2
90000abc:	d009      	beq.n	90000ad2 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xf2>
        } while (JpegProcessing_End != 1);
90000abe:	6823      	ldr	r3, [r4, #0]
90000ac0:	2b01      	cmp	r3, #1
90000ac2:	d1de      	bne.n	90000a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xa2>
        Jpeg_HWDecodingEnd = 0;
90000ac4:	2300      	movs	r3, #0
90000ac6:	602b      	str	r3, [r5, #0]
        DMA2D_CopyBufferEnd = 0;
90000ac8:	f8c9 3000 	str.w	r3, [r9]
}
90000acc:	b003      	add	sp, #12
90000ace:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
                SEM_WAIT(semDecodingDone);
90000ad2:	4b1b      	ldr	r3, [pc, #108]	; (90000b40 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x160>)
90000ad4:	f04f 31ff 	mov.w	r1, #4294967295
90000ad8:	6818      	ldr	r0, [r3, #0]
90000ada:	f00c fb07 	bl	9000d0ec <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
90000ade:	6823      	ldr	r3, [r4, #0]
90000ae0:	2b01      	cmp	r3, #1
90000ae2:	d1ce      	bne.n	90000a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xa2>
90000ae4:	e7ee      	b.n	90000ac4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xe4>
        return 1;
90000ae6:	2301      	movs	r3, #1
90000ae8:	e7e5      	b.n	90000ab6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd6>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000aea:	f8d9 3000 	ldr.w	r3, [r9]
90000aee:	2b00      	cmp	r3, #0
90000af0:	d1d6      	bne.n	90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
        DMA2D_reference->start();
90000af2:	6803      	ldr	r3, [r0, #0]
90000af4:	691b      	ldr	r3, [r3, #16]
90000af6:	4798      	blx	r3
90000af8:	e7d2      	b.n	90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000afa:	2102      	movs	r1, #2
90000afc:	480e      	ldr	r0, [pc, #56]	; (90000b38 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x158>)
        JPEG_output_is_paused = 0;
90000afe:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000b00:	f008 ffd6 	bl	90009ab0 <HAL_JPEG_Resume>
90000b04:	2302      	movs	r3, #2
90000b06:	e7d6      	b.n	90000ab6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd6>
	...
90000b10:	24005b90 	.word	0x24005b90
90000b14:	24005bbc 	.word	0x24005bbc
90000b18:	24000008 	.word	0x24000008
90000b1c:	24000188 	.word	0x24000188
90000b20:	24005bac 	.word	0x24005bac
90000b24:	24005bb8 	.word	0x24005bb8
90000b28:	2400018c 	.word	0x2400018c
90000b2c:	24005bc0 	.word	0x24005bc0
90000b30:	24005bb4 	.word	0x24005bb4
90000b34:	24005bc4 	.word	0x24005bc4
90000b38:	24009280 	.word	0x24009280
90000b3c:	24005bb0 	.word	0x24005bb0
90000b40:	24005bcc 	.word	0x24005bcc
90000b44:	24005bc8 	.word	0x24005bc8
90000b48:	24005ba8 	.word	0x24005ba8
90000b4c:	24000184 	.word	0x24000184

90000b50 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
{
90000b50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (frameNumber > getNumberOfFrames())
90000b52:	6803      	ldr	r3, [r0, #0]
90000b54:	2901      	cmp	r1, #1
90000b56:	4e2f      	ldr	r6, [pc, #188]	; (90000c14 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc4>)
{
90000b58:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
90000b5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90000b5c:	bf38      	it	cc
90000b5e:	2101      	movcc	r1, #1
90000b60:	42b3      	cmp	r3, r6
90000b62:	460d      	mov	r5, r1
90000b64:	d142      	bne.n	90000bec <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x9c>
    return videoInfo.number_of_frames;
90000b66:	6883      	ldr	r3, [r0, #8]
    if (frameNumber > getNumberOfFrames())
90000b68:	4299      	cmp	r1, r3
90000b6a:	d82a      	bhi.n	90000bc2 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x72>
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b6c:	1e6b      	subs	r3, r5, #1
90000b6e:	69e2      	ldr	r2, [r4, #28]
    if (reader != 0)
90000b70:	6b20      	ldr	r0, [r4, #48]	; 0x30
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b72:	eb02 1703 	add.w	r7, r2, r3, lsl #4
    if (reader != 0)
90000b76:	b350      	cbz	r0, 90000bce <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x7e>
        if (length > aviBufferLength)
90000b78:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000b7a:	2b0f      	cmp	r3, #15
90000b7c:	d941      	bls.n	90000c02 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb2>
        reader->seek(offset);
90000b7e:	6803      	ldr	r3, [r0, #0]
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b80:	f107 0608 	add.w	r6, r7, #8
        reader->seek(offset);
90000b84:	68db      	ldr	r3, [r3, #12]
90000b86:	4631      	mov	r1, r6
90000b88:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000b8a:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000b8c:	2210      	movs	r2, #16
90000b8e:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000b90:	6803      	ldr	r3, [r0, #0]
90000b92:	691b      	ldr	r3, [r3, #16]
90000b94:	4798      	blx	r3
90000b96:	b1b0      	cbz	r0, 90000bc6 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x76>
    if (reader != 0)
90000b98:	6b23      	ldr	r3, [r4, #48]	; 0x30
        aviBufferStartOffset = offset;
90000b9a:	63e6      	str	r6, [r4, #60]	; 0x3c
    if (reader != 0)
90000b9c:	b1bb      	cbz	r3, 90000bce <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x7e>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000b9e:	6b62      	ldr	r2, [r4, #52]	; 0x34
90000ba0:	7a93      	ldrb	r3, [r2, #10]
90000ba2:	7a51      	ldrb	r1, [r2, #9]
90000ba4:	041b      	lsls	r3, r3, #16
90000ba6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
90000baa:	7a11      	ldrb	r1, [r2, #8]
90000bac:	7ad2      	ldrb	r2, [r2, #11]
90000bae:	430b      	orrs	r3, r1
90000bb0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bb4:	6a22      	ldr	r2, [r4, #32]
    this->frameNumber = frameNumber;
90000bb6:	6165      	str	r5, [r4, #20]
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bb8:	3a04      	subs	r2, #4
90000bba:	441a      	add	r2, r3
90000bbc:	61a2      	str	r2, [r4, #24]
}
90000bbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return videoInfo.number_of_frames;
90000bc0:	68a3      	ldr	r3, [r4, #8]
{
90000bc2:	461d      	mov	r5, r3
90000bc4:	e7d2      	b.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_EOF_REACHED;
90000bc6:	230d      	movs	r3, #13
90000bc8:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90000bcc:	e7e4      	b.n	90000b98 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x48>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bce:	f107 0310 	add.w	r3, r7, #16
        volatile const uint8_t* const d = movieData + offset;
90000bd2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90000bd4:	18d1      	adds	r1, r2, r3
        val |= d[0];
90000bd6:	5cd2      	ldrb	r2, [r2, r3]
        val |= d[1] << 8;
90000bd8:	7848      	ldrb	r0, [r1, #1]
        val |= d[2] << 16;
90000bda:	788b      	ldrb	r3, [r1, #2]
        val |= d[3] << 24;
90000bdc:	78c9      	ldrb	r1, [r1, #3]
        val |= d[2] << 16;
90000bde:	041b      	lsls	r3, r3, #16
        val |= d[3] << 24;
90000be0:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
90000be4:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90000be8:	4313      	orrs	r3, r2
        return val;
90000bea:	e7e3      	b.n	90000bb4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x64>
    if (frameNumber > getNumberOfFrames())
90000bec:	4798      	blx	r3
90000bee:	4285      	cmp	r5, r0
90000bf0:	d9bc      	bls.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
        frameNumber = getNumberOfFrames();
90000bf2:	6823      	ldr	r3, [r4, #0]
90000bf4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90000bf6:	42b3      	cmp	r3, r6
90000bf8:	d0e2      	beq.n	90000bc0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x70>
90000bfa:	4620      	mov	r0, r4
90000bfc:	4798      	blx	r3
90000bfe:	4605      	mov	r5, r0
90000c00:	e7b4      	b.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000c02:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000c04:	4b04      	ldr	r3, [pc, #16]	; (90000c18 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc8>)
90000c06:	4a05      	ldr	r2, [pc, #20]	; (90000c1c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xcc>)
90000c08:	219f      	movs	r1, #159	; 0x9f
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000c0a:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
90000c0e:	4804      	ldr	r0, [pc, #16]	; (90000c20 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd0>)
90000c10:	f025 fb56 	bl	900262c0 <__assert_func>
90000c14:	9000099d 	.word	0x9000099d
90000c18:	90027764 	.word	0x90027764
90000c1c:	90027778 	.word	0x90027778
90000c20:	90027714 	.word	0x90027714
90000c24:	00000000 	.word	0x00000000

90000c28 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
90000c28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90000c2c:	4604      	mov	r4, r0
    if (reader != 0)
90000c2e:	6b00      	ldr	r0, [r0, #48]	; 0x30
{
90000c30:	b083      	sub	sp, #12
90000c32:	4615      	mov	r5, r2
    readData(currentMovieOffset, 8);
90000c34:	69a6      	ldr	r6, [r4, #24]
    if (reader != 0)
90000c36:	2800      	cmp	r0, #0
90000c38:	f000 80ad 	beq.w	90000d96 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16e>
        if (length > aviBufferLength)
90000c3c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000c3e:	2b07      	cmp	r3, #7
90000c40:	f240 80b9 	bls.w	90000db6 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x18e>
        reader->seek(offset);
90000c44:	6803      	ldr	r3, [r0, #0]
90000c46:	4631      	mov	r1, r6
90000c48:	68db      	ldr	r3, [r3, #12]
90000c4a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000c4c:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000c4e:	2208      	movs	r2, #8
90000c50:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000c52:	6803      	ldr	r3, [r0, #0]
90000c54:	691b      	ldr	r3, [r3, #16]
90000c56:	4798      	blx	r3
90000c58:	2800      	cmp	r0, #0
90000c5a:	f000 8091 	beq.w	90000d80 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x158>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000c5e:	69a7      	ldr	r7, [r4, #24]
    if (reader != 0)
90000c60:	6b20      	ldr	r0, [r4, #48]	; 0x30
    const uint32_t length = getU32(currentMovieOffset + 4);
90000c62:	1d3b      	adds	r3, r7, #4
        aviBufferStartOffset = offset;
90000c64:	63e6      	str	r6, [r4, #60]	; 0x3c
    if (reader != 0)
90000c66:	2800      	cmp	r0, #0
90000c68:	f000 80ae 	beq.w	90000dc8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a0>
        const uint32_t index = offset - aviBufferStartOffset;
90000c6c:	1b9b      	subs	r3, r3, r6
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90000c6e:	3708      	adds	r7, #8
        if (length > aviBufferLength)
90000c70:	e9d4 620d 	ldrd	r6, r2, [r4, #52]	; 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000c74:	18f1      	adds	r1, r6, r3
90000c76:	5cf3      	ldrb	r3, [r6, r3]
90000c78:	788e      	ldrb	r6, [r1, #2]
90000c7a:	f891 c001 	ldrb.w	ip, [r1, #1]
90000c7e:	0436      	lsls	r6, r6, #16
90000c80:	ea46 260c 	orr.w	r6, r6, ip, lsl #8
90000c84:	431e      	orrs	r6, r3
90000c86:	78cb      	ldrb	r3, [r1, #3]
90000c88:	ea46 6603 	orr.w	r6, r6, r3, lsl #24
        if (length > aviBufferLength)
90000c8c:	42b2      	cmp	r2, r6
90000c8e:	f0c0 8092 	bcc.w	90000db6 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x18e>
        reader->seek(offset);
90000c92:	6803      	ldr	r3, [r0, #0]
90000c94:	4639      	mov	r1, r7
90000c96:	68db      	ldr	r3, [r3, #12]
90000c98:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000c9a:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000c9c:	4632      	mov	r2, r6
90000c9e:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000ca0:	6803      	ldr	r3, [r0, #0]
90000ca2:	691b      	ldr	r3, [r3, #16]
90000ca4:	4798      	blx	r3
90000ca6:	b910      	cbnz	r0, 90000cae <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x86>
            lastError = AVI_ERROR_EOF_REACHED;
90000ca8:	230d      	movs	r3, #13
90000caa:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        return aviBuffer;
90000cae:	6b61      	ldr	r1, [r4, #52]	; 0x34
        aviBufferStartOffset = offset;
90000cb0:	63e7      	str	r7, [r4, #60]	; 0x3c
    if (frameBuffer) /* only decode if buffers are assigned. */
90000cb2:	2d00      	cmp	r5, #0
90000cb4:	d058      	beq.n	90000d68 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
        FrameBufferAddress = output;
90000cb6:	4b48      	ldr	r3, [pc, #288]	; (90000dd8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b0>)
        JPEG_output_is_paused = 0;
90000cb8:	2200      	movs	r2, #0
90000cba:	4f48      	ldr	r7, [pc, #288]	; (90000ddc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b4>)
        FrameBufferAddress = output;
90000cbc:	601d      	str	r5, [r3, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cbe:	4b48      	ldr	r3, [pc, #288]	; (90000de0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b8>)
        JPEG_output_is_paused = 0;
90000cc0:	603a      	str	r2, [r7, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cc2:	68db      	ldr	r3, [r3, #12]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000cc4:	4d47      	ldr	r5, [pc, #284]	; (90000de4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1bc>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cc6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
        JPEG_OUT_Write_BufferIndex = 0;
90000cca:	f8df a144 	ldr.w	sl, [pc, #324]	; 90000e10 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e8>
        JPEG_OUT_Read_BufferIndex = 0;
90000cce:	f8df b144 	ldr.w	fp, [pc, #324]	; 90000e14 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1ec>
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cd2:	01db      	lsls	r3, r3, #7
        JPEG_InputImageIndex = 0;
90000cd4:	4844      	ldr	r0, [pc, #272]	; (90000de8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c0>)
        JPEG_OUT_Read_BufferIndex = 0;
90000cd6:	f8cb 2000 	str.w	r2, [fp]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cda:	9300      	str	r3, [sp, #0]
        MCU_BlockIndex = 0;
90000cdc:	4b43      	ldr	r3, [pc, #268]	; (90000dec <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c4>)
        JPEG_OUT_Write_BufferIndex = 0;
90000cde:	f8ca 2000 	str.w	r2, [sl]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000ce2:	702a      	strb	r2, [r5, #0]
        MCU_BlockIndex = 0;
90000ce4:	601a      	str	r2, [r3, #0]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000ce6:	742a      	strb	r2, [r5, #16]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000ce8:	f8da 3000 	ldr.w	r3, [sl]
        JPEG_InputImageIndex = 0;
90000cec:	6002      	str	r2, [r0, #0]
        JPEG_InputImageAddress = (uint32_t)input;
90000cee:	4a40      	ldr	r2, [pc, #256]	; (90000df0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c8>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cf0:	eb05 1303 	add.w	r3, r5, r3, lsl #4
90000cf4:	483f      	ldr	r0, [pc, #252]	; (90000df4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1cc>)
        JPEG_InputImageAddress = (uint32_t)input;
90000cf6:	6011      	str	r1, [r2, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000cf8:	4a3f      	ldr	r2, [pc, #252]	; (90000df8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d0>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cfa:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000cfc:	6016      	str	r6, [r2, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cfe:	f44f 4250 	mov.w	r2, #53248	; 0xd000
90000d02:	4e3e      	ldr	r6, [pc, #248]	; (90000dfc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d4>)
90000d04:	4c3e      	ldr	r4, [pc, #248]	; (90000e00 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d8>)
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000d06:	f8df 8110 	ldr.w	r8, [pc, #272]	; 90000e18 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1f0>
90000d0a:	f8df 9110 	ldr.w	r9, [pc, #272]	; 90000e1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1f4>
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90000d0e:	ed9f 7b30 	vldr	d7, [pc, #192]	; 90000dd0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a8>
90000d12:	ed85 7b02 	vstr	d7, [r5, #8]
90000d16:	ed85 7b06 	vstr	d7, [r5, #24]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000d1a:	f008 fd81 	bl	90009820 <HAL_JPEG_Decode_DMA>
        return 0;
90000d1e:	e017      	b.n	90000d50 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x128>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000d20:	f8d8 0000 	ldr.w	r0, [r8]
90000d24:	7a03      	ldrb	r3, [r0, #8]
90000d26:	b92b      	cbnz	r3, 90000d34 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
90000d28:	f8db 3000 	ldr.w	r3, [fp]
90000d2c:	011b      	lsls	r3, r3, #4
90000d2e:	5ceb      	ldrb	r3, [r5, r3]
90000d30:	2b01      	cmp	r3, #1
90000d32:	d01d      	beq.n	90000d70 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x148>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90000d34:	683b      	ldr	r3, [r7, #0]
90000d36:	2b01      	cmp	r3, #1
90000d38:	d106      	bne.n	90000d48 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x120>
90000d3a:	f8da 3000 	ldr.w	r3, [sl]
90000d3e:	011b      	lsls	r3, r3, #4
90000d40:	5ceb      	ldrb	r3, [r5, r3]
90000d42:	b90b      	cbnz	r3, 90000d48 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x120>
90000d44:	6833      	ldr	r3, [r6, #0]
90000d46:	b1fb      	cbz	r3, 90000d88 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x160>
    return 2;
90000d48:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000d4a:	6023      	str	r3, [r4, #0]
        } while (JpegProcessing_End == 0);
90000d4c:	6823      	ldr	r3, [r4, #0]
90000d4e:	b95b      	cbnz	r3, 90000d68 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90000d50:	6833      	ldr	r3, [r6, #0]
90000d52:	2b00      	cmp	r3, #0
90000d54:	d0e4      	beq.n	90000d20 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xf8>
90000d56:	f8d9 3000 	ldr.w	r3, [r9]
90000d5a:	2b00      	cmp	r3, #0
90000d5c:	d0e0      	beq.n	90000d20 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xf8>
        return 1;
90000d5e:	2301      	movs	r3, #1
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000d60:	6023      	str	r3, [r4, #0]
        } while (JpegProcessing_End == 0);
90000d62:	6823      	ldr	r3, [r4, #0]
90000d64:	2b00      	cmp	r3, #0
90000d66:	d0f3      	beq.n	90000d50 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x128>
}
90000d68:	2001      	movs	r0, #1
90000d6a:	b003      	add	sp, #12
90000d6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000d70:	f8d9 3000 	ldr.w	r3, [r9]
90000d74:	2b00      	cmp	r3, #0
90000d76:	d1dd      	bne.n	90000d34 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
        DMA2D_reference->start();
90000d78:	6803      	ldr	r3, [r0, #0]
90000d7a:	691b      	ldr	r3, [r3, #16]
90000d7c:	4798      	blx	r3
90000d7e:	e7d9      	b.n	90000d34 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
            lastError = AVI_ERROR_EOF_REACHED;
90000d80:	230d      	movs	r3, #13
90000d82:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90000d86:	e76a      	b.n	90000c5e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x36>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000d88:	2102      	movs	r1, #2
90000d8a:	481a      	ldr	r0, [pc, #104]	; (90000df4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1cc>)
        JPEG_output_is_paused = 0;
90000d8c:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000d8e:	f008 fe8f 	bl	90009ab0 <HAL_JPEG_Resume>
90000d92:	2302      	movs	r3, #2
90000d94:	e7d9      	b.n	90000d4a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x122>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000d96:	1d33      	adds	r3, r6, #4
    if (reader != 0)
90000d98:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90000d9a:	3608      	adds	r6, #8
        volatile const uint8_t* const d = movieData + offset;
90000d9c:	18ca      	adds	r2, r1, r3
        val |= d[0];
90000d9e:	5ccb      	ldrb	r3, [r1, r3]
    return movieData + offset;
90000da0:	4431      	add	r1, r6
        val |= d[1] << 8;
90000da2:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
90000da4:	7896      	ldrb	r6, [r2, #2]
        val |= d[3] << 24;
90000da6:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90000da8:	0436      	lsls	r6, r6, #16
        val |= d[3] << 24;
90000daa:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
90000dae:	ea46 2600 	orr.w	r6, r6, r0, lsl #8
90000db2:	431e      	orrs	r6, r3
    return movieData + offset;
90000db4:	e77d      	b.n	90000cb2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x8a>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000db6:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000db8:	4b12      	ldr	r3, [pc, #72]	; (90000e04 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1dc>)
90000dba:	4a13      	ldr	r2, [pc, #76]	; (90000e08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e0>)
90000dbc:	219f      	movs	r1, #159	; 0x9f
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000dbe:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
90000dc2:	4812      	ldr	r0, [pc, #72]	; (90000e0c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e4>)
90000dc4:	f025 fa7c 	bl	900262c0 <__assert_func>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000dc8:	463e      	mov	r6, r7
90000dca:	e7e5      	b.n	90000d98 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
90000dcc:	f3af 8000 	nop.w
	...
90000dd8:	24005bac 	.word	0x24005bac
90000ddc:	24005bbc 	.word	0x24005bbc
90000de0:	24005b90 	.word	0x24005b90
90000de4:	24000008 	.word	0x24000008
90000de8:	24005bb8 	.word	0x24005bb8
90000dec:	2400018c 	.word	0x2400018c
90000df0:	24005bc0 	.word	0x24005bc0
90000df4:	24009280 	.word	0x24009280
90000df8:	24005bc4 	.word	0x24005bc4
90000dfc:	24005bb4 	.word	0x24005bb4
90000e00:	24005bb0 	.word	0x24005bb0
90000e04:	90027764 	.word	0x90027764
90000e08:	90027778 	.word	0x90027778
90000e0c:	90027714 	.word	0x90027714
90000e10:	24005bc8 	.word	0x24005bc8
90000e14:	24000188 	.word	0x24000188
90000e18:	24005ba8 	.word	0x24005ba8
90000e1c:	24000184 	.word	0x24000184

90000e20 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000e20:	6943      	ldr	r3, [r0, #20]
{
90000e22:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000e26:	2b00      	cmp	r3, #0
90000e28:	f000 80c0 	beq.w	90000fac <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18c>
    readData(currentMovieOffset, 8);
90000e2c:	4605      	mov	r5, r0
    if (reader != 0)
90000e2e:	6b00      	ldr	r0, [r0, #48]	; 0x30
    readData(currentMovieOffset, 8);
90000e30:	69ac      	ldr	r4, [r5, #24]
    if (reader != 0)
90000e32:	2800      	cmp	r0, #0
90000e34:	f000 80a0 	beq.w	90000f78 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x158>
        if (length > aviBufferLength)
90000e38:	6bab      	ldr	r3, [r5, #56]	; 0x38
90000e3a:	2b07      	cmp	r3, #7
90000e3c:	f240 80ab 	bls.w	90000f96 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x176>
        reader->seek(offset);
90000e40:	6803      	ldr	r3, [r0, #0]
90000e42:	4621      	mov	r1, r4
90000e44:	68db      	ldr	r3, [r3, #12]
90000e46:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000e48:	6b28      	ldr	r0, [r5, #48]	; 0x30
90000e4a:	2208      	movs	r2, #8
90000e4c:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000e4e:	6803      	ldr	r3, [r0, #0]
90000e50:	691b      	ldr	r3, [r3, #16]
90000e52:	4798      	blx	r3
90000e54:	2800      	cmp	r0, #0
90000e56:	f000 808b 	beq.w	90000f70 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x150>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000e5a:	69ab      	ldr	r3, [r5, #24]
    if (reader != 0)
90000e5c:	6b28      	ldr	r0, [r5, #48]	; 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000e5e:	1d1a      	adds	r2, r3, #4
        aviBufferStartOffset = offset;
90000e60:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90000e62:	2800      	cmp	r0, #0
90000e64:	f000 808a 	beq.w	90000f7c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15c>
        const uint32_t index = offset - aviBufferStartOffset;
90000e68:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000e6a:	6b6c      	ldr	r4, [r5, #52]	; 0x34
90000e6c:	18a1      	adds	r1, r4, r2
90000e6e:	5ca2      	ldrb	r2, [r4, r2]
90000e70:	788c      	ldrb	r4, [r1, #2]
90000e72:	784e      	ldrb	r6, [r1, #1]
90000e74:	0424      	lsls	r4, r4, #16
90000e76:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
90000e7a:	4314      	orrs	r4, r2
90000e7c:	78ca      	ldrb	r2, [r1, #3]
90000e7e:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
            lastError = AVI_ERROR_EOF_REACHED;
90000e82:	270d      	movs	r7, #13
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90000e84:	f243 0630 	movw	r6, #12336	; 0x3030
90000e88:	e03a      	b.n	90000f00 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xe0>
        if (length > aviBufferLength)
90000e8a:	6bab      	ldr	r3, [r5, #56]	; 0x38
90000e8c:	2b07      	cmp	r3, #7
90000e8e:	f240 8082 	bls.w	90000f96 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x176>
        reader->seek(offset);
90000e92:	6803      	ldr	r3, [r0, #0]
90000e94:	4621      	mov	r1, r4
90000e96:	68db      	ldr	r3, [r3, #12]
90000e98:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000e9a:	6b28      	ldr	r0, [r5, #48]	; 0x30
90000e9c:	2208      	movs	r2, #8
90000e9e:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000ea0:	6803      	ldr	r3, [r0, #0]
90000ea2:	691b      	ldr	r3, [r3, #16]
90000ea4:	4798      	blx	r3
90000ea6:	b908      	cbnz	r0, 90000eac <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x8c>
            lastError = AVI_ERROR_EOF_REACHED;
90000ea8:	f885 7040 	strb.w	r7, [r5, #64]	; 0x40
    if (reader != 0)
90000eac:	6b28      	ldr	r0, [r5, #48]	; 0x30
        uint32_t streamNo  = getU16(currentMovieOffset);
90000eae:	69ab      	ldr	r3, [r5, #24]
        aviBufferStartOffset = offset;
90000eb0:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90000eb2:	2800      	cmp	r0, #0
90000eb4:	d078      	beq.n	90000fa8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x188>
        const uint32_t index = offset - aviBufferStartOffset;
90000eb6:	1b1b      	subs	r3, r3, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000eb8:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000eba:	18ca      	adds	r2, r1, r3
90000ebc:	5ccb      	ldrb	r3, [r1, r3]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000ebe:	7994      	ldrb	r4, [r2, #6]
90000ec0:	f892 a005 	ldrb.w	sl, [r2, #5]
90000ec4:	0424      	lsls	r4, r4, #16
90000ec6:	f892 c004 	ldrb.w	ip, [r2, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000eca:	f892 9001 	ldrb.w	r9, [r2, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000ece:	ea44 240a 	orr.w	r4, r4, sl, lsl #8
90000ed2:	79d1      	ldrb	r1, [r2, #7]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000ed4:	f892 8003 	ldrb.w	r8, [r2, #3]
90000ed8:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90000edc:	f892 e002 	ldrb.w	lr, [r2, #2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000ee0:	ea44 040c 	orr.w	r4, r4, ip
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000ee4:	ea4e 2208 	orr.w	r2, lr, r8, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000ee8:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90000eec:	f246 3164 	movw	r1, #25444	; 0x6364
90000ef0:	42b3      	cmp	r3, r6
90000ef2:	bf08      	it	eq
90000ef4:	428a      	cmpeq	r2, r1
90000ef6:	bf0c      	ite	eq
90000ef8:	2301      	moveq	r3, #1
90000efa:	2300      	movne	r3, #0
90000efc:	d035      	beq.n	90000f6a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x14a>
    while (currentMovieOffset + 8 + chunkSize < movieLength)
90000efe:	69ab      	ldr	r3, [r5, #24]
90000f00:	441c      	add	r4, r3
90000f02:	6aab      	ldr	r3, [r5, #40]	; 0x28
90000f04:	f104 0208 	add.w	r2, r4, #8
90000f08:	429a      	cmp	r2, r3
90000f0a:	d229      	bcs.n	90000f60 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x140>
        frameNumber++;
90000f0c:	696b      	ldr	r3, [r5, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90000f0e:	3409      	adds	r4, #9
        frameNumber++;
90000f10:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90000f12:	f024 0401 	bic.w	r4, r4, #1
90000f16:	e9c5 3405 	strd	r3, r4, [r5, #20]
    if (reader != 0)
90000f1a:	2800      	cmp	r0, #0
90000f1c:	d1b5      	bne.n	90000e8a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x6a>
        volatile const uint8_t* const d = movieData + offset;
90000f1e:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
        chunkSize = getU32(currentMovieOffset + 4);
90000f20:	f104 0e04 	add.w	lr, r4, #4
        uint32_t chunkType = getU16(currentMovieOffset + 2);
90000f24:	1ca2      	adds	r2, r4, #2
        volatile const uint8_t* const d = movieData + offset;
90000f26:	eb01 0c04 	add.w	ip, r1, r4
        val |= d[0];
90000f2a:	5d0b      	ldrb	r3, [r1, r4]
        val |= d[1] << 8;
90000f2c:	f89c 4001 	ldrb.w	r4, [ip, #1]
        volatile const uint8_t* const d = movieData + offset;
90000f30:	eb01 0c0e 	add.w	ip, r1, lr
        val |= d[1] << 8;
90000f34:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
        volatile const uint8_t* const d = movieData + offset;
90000f38:	188c      	adds	r4, r1, r2
        val |= d[0];
90000f3a:	5c8a      	ldrb	r2, [r1, r2]
        val |= d[1] << 8;
90000f3c:	7864      	ldrb	r4, [r4, #1]
        val |= d[0];
90000f3e:	f811 100e 	ldrb.w	r1, [r1, lr]
        val |= d[1] << 8;
90000f42:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
        val |= d[1] << 8;
90000f46:	f89c e001 	ldrb.w	lr, [ip, #1]
        val |= d[2] << 16;
90000f4a:	f89c 4002 	ldrb.w	r4, [ip, #2]
        val |= d[3] << 24;
90000f4e:	f89c c003 	ldrb.w	ip, [ip, #3]
        val |= d[2] << 16;
90000f52:	0424      	lsls	r4, r4, #16
        val |= d[3] << 24;
90000f54:	ea41 610c 	orr.w	r1, r1, ip, lsl #24
90000f58:	ea44 240e 	orr.w	r4, r4, lr, lsl #8
90000f5c:	430c      	orrs	r4, r1
        return val;
90000f5e:	e7c5      	b.n	90000eec <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xcc>
    frameNumber = 1;
90000f60:	2101      	movs	r1, #1
    currentMovieOffset = firstFrameOffset; /* start over */
90000f62:	6a2a      	ldr	r2, [r5, #32]
    return false;
90000f64:	2300      	movs	r3, #0
    currentMovieOffset = firstFrameOffset; /* start over */
90000f66:	e9c5 1205 	strd	r1, r2, [r5, #20]
}
90000f6a:	4618      	mov	r0, r3
90000f6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90000f70:	230d      	movs	r3, #13
90000f72:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
90000f76:	e770      	b.n	90000e5a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x3a>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000f78:	1d22      	adds	r2, r4, #4
90000f7a:	4623      	mov	r3, r4
        volatile const uint8_t* const d = movieData + offset;
90000f7c:	6aec      	ldr	r4, [r5, #44]	; 0x2c
90000f7e:	18a1      	adds	r1, r4, r2
        val |= d[0];
90000f80:	5ca2      	ldrb	r2, [r4, r2]
        val |= d[1] << 8;
90000f82:	784e      	ldrb	r6, [r1, #1]
        val |= d[2] << 16;
90000f84:	788c      	ldrb	r4, [r1, #2]
        val |= d[3] << 24;
90000f86:	78c9      	ldrb	r1, [r1, #3]
        val |= d[2] << 16;
90000f88:	0424      	lsls	r4, r4, #16
        val |= d[3] << 24;
90000f8a:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
90000f8e:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
90000f92:	4314      	orrs	r4, r2
        return val;
90000f94:	e775      	b.n	90000e82 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x62>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000f96:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000f98:	4b07      	ldr	r3, [pc, #28]	; (90000fb8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x198>)
90000f9a:	4a08      	ldr	r2, [pc, #32]	; (90000fbc <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x19c>)
90000f9c:	219f      	movs	r1, #159	; 0x9f
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000f9e:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
            assert(!"Buffer to small");
90000fa2:	4807      	ldr	r0, [pc, #28]	; (90000fc0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a0>)
90000fa4:	f025 f98c 	bl	900262c0 <__assert_func>
        uint32_t streamNo  = getU16(currentMovieOffset);
90000fa8:	461c      	mov	r4, r3
90000faa:	e7b8      	b.n	90000f1e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xfe>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000fac:	4b05      	ldr	r3, [pc, #20]	; (90000fc4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
90000fae:	21e5      	movs	r1, #229	; 0xe5
90000fb0:	4a05      	ldr	r2, [pc, #20]	; (90000fc8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a8>)
90000fb2:	4803      	ldr	r0, [pc, #12]	; (90000fc0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a0>)
90000fb4:	f025 f984 	bl	900262c0 <__assert_func>
90000fb8:	90027764 	.word	0x90027764
90000fbc:	90027778 	.word	0x90027778
90000fc0:	90027714 	.word	0x90027714
90000fc4:	900277bc 	.word	0x900277bc
90000fc8:	90027808 	.word	0x90027808

90000fcc <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000fcc:	6943      	ldr	r3, [r0, #20]
{
90000fce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000fd2:	2b00      	cmp	r3, #0
90000fd4:	f000 80ad 	beq.w	90001132 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x166>
    readData(currentMovieOffset, 8);
90000fd8:	4604      	mov	r4, r0
    if (reader != 0)
90000fda:	6b00      	ldr	r0, [r0, #48]	; 0x30
90000fdc:	460e      	mov	r6, r1
    readData(currentMovieOffset, 8);
90000fde:	69a5      	ldr	r5, [r4, #24]
    if (reader != 0)
90000fe0:	2800      	cmp	r0, #0
90000fe2:	d05f      	beq.n	900010a4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd8>
        if (length > aviBufferLength)
90000fe4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000fe6:	2b07      	cmp	r3, #7
90000fe8:	f240 80a9 	bls.w	9000113e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90000fec:	6803      	ldr	r3, [r0, #0]
90000fee:	4629      	mov	r1, r5
90000ff0:	68db      	ldr	r3, [r3, #12]
90000ff2:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000ff4:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000ff6:	2208      	movs	r2, #8
90000ff8:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000ffa:	6803      	ldr	r3, [r0, #0]
90000ffc:	691b      	ldr	r3, [r3, #16]
90000ffe:	4798      	blx	r3
90001000:	2800      	cmp	r0, #0
90001002:	d04a      	beq.n	9000109a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xce>
    if (reader != 0)
90001004:	6b20      	ldr	r0, [r4, #48]	; 0x30
    uint32_t streamNo  = getU16(currentMovieOffset);
90001006:	69a1      	ldr	r1, [r4, #24]
        aviBufferStartOffset = offset;
90001008:	63e5      	str	r5, [r4, #60]	; 0x3c
    if (reader != 0)
9000100a:	2800      	cmp	r0, #0
9000100c:	d049      	beq.n	900010a2 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd6>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
9000100e:	f101 0c04 	add.w	ip, r1, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001012:	1c8a      	adds	r2, r1, #2
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001014:	6b63      	ldr	r3, [r4, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001016:	ebac 0c05 	sub.w	ip, ip, r5
        const uint32_t index = offset - aviBufferStartOffset;
9000101a:	1b52      	subs	r2, r2, r5
9000101c:	1b4d      	subs	r5, r1, r5
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000101e:	eb03 070c 	add.w	r7, r3, ip
90001022:	f813 e00c 	ldrb.w	lr, [r3, ip]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001026:	eb03 0805 	add.w	r8, r3, r5
9000102a:	f813 c005 	ldrb.w	ip, [r3, r5]
9000102e:	f898 5001 	ldrb.w	r5, [r8, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001032:	f897 8001 	ldrb.w	r8, [r7, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001036:	ea4c 2c05 	orr.w	ip, ip, r5, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000103a:	78bd      	ldrb	r5, [r7, #2]
9000103c:	78ff      	ldrb	r7, [r7, #3]
9000103e:	042d      	lsls	r5, r5, #16
90001040:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
90001044:	ea45 050e 	orr.w	r5, r5, lr
90001048:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
9000104c:	189f      	adds	r7, r3, r2
9000104e:	5c9b      	ldrb	r3, [r3, r2]
90001050:	787a      	ldrb	r2, [r7, #1]
90001052:	ea43 2702 	orr.w	r7, r3, r2, lsl #8
    if (currentMovieOffset + 8 + chunkSize < movieLength)
90001056:	194a      	adds	r2, r1, r5
90001058:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000105a:	f102 0e08 	add.w	lr, r2, #8
9000105e:	459e      	cmp	lr, r3
90001060:	d214      	bcs.n	9000108c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
90001062:	f243 0330 	movw	r3, #12336	; 0x3030
90001066:	459c      	cmp	ip, r3
90001068:	d139      	bne.n	900010de <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
9000106a:	f246 3364 	movw	r3, #25444	; 0x6364
9000106e:	429f      	cmp	r7, r3
90001070:	d135      	bne.n	900010de <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001072:	2d00      	cmp	r5, #0
90001074:	d137      	bne.n	900010e6 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x11a>
            currentMovieOffset += 8;
90001076:	4672      	mov	r2, lr
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001078:	3201      	adds	r2, #1
        if (currentMovieOffset == lastFrameEnd)
9000107a:	6a63      	ldr	r3, [r4, #36]	; 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
9000107c:	f022 0201 	bic.w	r2, r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001080:	429a      	cmp	r2, r3
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001082:	61a2      	str	r2, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
90001084:	d002      	beq.n	9000108c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
90001086:	2001      	movs	r0, #1
}
90001088:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        frameNumber = 1;
9000108c:	2201      	movs	r2, #1
        currentMovieOffset = firstFrameOffset; /* start over */
9000108e:	6a23      	ldr	r3, [r4, #32]
90001090:	2000      	movs	r0, #0
90001092:	e9c4 2305 	strd	r2, r3, [r4, #20]
}
90001096:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            lastError = AVI_ERROR_EOF_REACHED;
9000109a:	230d      	movs	r3, #13
9000109c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
900010a0:	e7b0      	b.n	90001004 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x38>
    uint32_t streamNo  = getU16(currentMovieOffset);
900010a2:	460d      	mov	r5, r1
        volatile const uint8_t* const d = movieData + offset;
900010a4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    uint32_t chunkType = getU16(currentMovieOffset + 2);
900010a6:	1caf      	adds	r7, r5, #2
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
900010a8:	1d2a      	adds	r2, r5, #4
        volatile const uint8_t* const d = movieData + offset;
900010aa:	1959      	adds	r1, r3, r5
        val |= d[0];
900010ac:	f813 c005 	ldrb.w	ip, [r3, r5]
        volatile const uint8_t* const d = movieData + offset;
900010b0:	1898      	adds	r0, r3, r2
        val |= d[1] << 8;
900010b2:	7849      	ldrb	r1, [r1, #1]
900010b4:	ea4c 2c01 	orr.w	ip, ip, r1, lsl #8
        val |= d[3] << 24;
900010b8:	4629      	mov	r1, r5
        volatile const uint8_t* const d = movieData + offset;
900010ba:	19dd      	adds	r5, r3, r7
        val |= d[0];
900010bc:	5ddf      	ldrb	r7, [r3, r7]
        val |= d[1] << 8;
900010be:	786d      	ldrb	r5, [r5, #1]
        val |= d[0];
900010c0:	5c9a      	ldrb	r2, [r3, r2]
        val |= d[1] << 8;
900010c2:	ea47 2705 	orr.w	r7, r7, r5, lsl #8
        val |= d[1] << 8;
900010c6:	f890 e001 	ldrb.w	lr, [r0, #1]
        val |= d[2] << 16;
900010ca:	7885      	ldrb	r5, [r0, #2]
        val |= d[3] << 24;
900010cc:	78c3      	ldrb	r3, [r0, #3]
900010ce:	2000      	movs	r0, #0
        val |= d[2] << 16;
900010d0:	042d      	lsls	r5, r5, #16
        val |= d[3] << 24;
900010d2:	ea42 6303 	orr.w	r3, r2, r3, lsl #24
900010d6:	ea45 250e 	orr.w	r5, r5, lr, lsl #8
900010da:	431d      	orrs	r5, r3
        return val;
900010dc:	e7bb      	b.n	90001056 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
        currentMovieOffset += chunkSize;
900010de:	61a2      	str	r2, [r4, #24]
        if (chunkSize == 0) /* Empty frame - Skip */
900010e0:	2d00      	cmp	r5, #0
900010e2:	d1c9      	bne.n	90001078 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
900010e4:	e7c7      	b.n	90001076 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xaa>
            currentMovieOffset += 8;
900010e6:	f101 0708 	add.w	r7, r1, #8
900010ea:	61a7      	str	r7, [r4, #24]
    if (reader != 0)
900010ec:	b1f0      	cbz	r0, 9000112c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x160>
        if (length > aviBufferLength)
900010ee:	6ba3      	ldr	r3, [r4, #56]	; 0x38
900010f0:	429d      	cmp	r5, r3
900010f2:	d824      	bhi.n	9000113e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
900010f4:	6803      	ldr	r3, [r0, #0]
900010f6:	4639      	mov	r1, r7
900010f8:	68db      	ldr	r3, [r3, #12]
900010fa:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900010fc:	6b20      	ldr	r0, [r4, #48]	; 0x30
900010fe:	462a      	mov	r2, r5
90001100:	6b61      	ldr	r1, [r4, #52]	; 0x34
90001102:	6803      	ldr	r3, [r0, #0]
90001104:	691b      	ldr	r3, [r3, #16]
90001106:	4798      	blx	r3
90001108:	b910      	cbnz	r0, 90001110 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x144>
            lastError = AVI_ERROR_EOF_REACHED;
9000110a:	230d      	movs	r3, #13
9000110c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        return aviBuffer;
90001110:	6b61      	ldr	r1, [r4, #52]	; 0x34
        aviBufferStartOffset = offset;
90001112:	63e7      	str	r7, [r4, #60]	; 0x3c
    if (outputBuffer) /* only decode if buffers are assigned. */
90001114:	b126      	cbz	r6, 90001120 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x154>
90001116:	4633      	mov	r3, r6
90001118:	462a      	mov	r2, r5
9000111a:	4620      	mov	r0, r4
9000111c:	f7ff fc60 	bl	900009e0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>
        currentMovieOffset += chunkSize;
90001120:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
            frameNumber++;
90001124:	3301      	adds	r3, #1
        currentMovieOffset += chunkSize;
90001126:	442a      	add	r2, r5
            frameNumber++;
90001128:	6163      	str	r3, [r4, #20]
        if (chunkSize == 0) /* Empty frame - Skip */
9000112a:	e7a5      	b.n	90001078 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
    return movieData + offset;
9000112c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
9000112e:	4439      	add	r1, r7
90001130:	e7f0      	b.n	90001114 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x148>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001132:	4b07      	ldr	r3, [pc, #28]	; (90001150 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x184>)
90001134:	21b1      	movs	r1, #177	; 0xb1
90001136:	4a07      	ldr	r2, [pc, #28]	; (90001154 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x188>)
90001138:	4807      	ldr	r0, [pc, #28]	; (90001158 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
9000113a:	f025 f8c1 	bl	900262c0 <__assert_func>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000113e:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001140:	4b06      	ldr	r3, [pc, #24]	; (9000115c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x190>)
90001142:	4a07      	ldr	r2, [pc, #28]	; (90001160 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x194>)
90001144:	219f      	movs	r1, #159	; 0x9f
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001146:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
9000114a:	4803      	ldr	r0, [pc, #12]	; (90001158 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
9000114c:	f025 f8b8 	bl	900262c0 <__assert_func>
90001150:	900277bc 	.word	0x900277bc
90001154:	9002783c 	.word	0x9002783c
90001158:	90027714 	.word	0x90027714
9000115c:	90027764 	.word	0x90027764
90001160:	90027778 	.word	0x90027778

90001164 <_ZN20HardwareMJPEGDecoderC1Ev>:
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
90001164:	b510      	push	{r4, lr}
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
90001166:	2200      	movs	r2, #0
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
90001168:	4604      	mov	r4, r0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
9000116a:	4b0e      	ldr	r3, [pc, #56]	; (900011a4 <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
    semDecodingDone = SEM_CREATE();
9000116c:	2001      	movs	r0, #1
9000116e:	4611      	mov	r1, r2
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
90001170:	63e2      	str	r2, [r4, #60]	; 0x3c
90001172:	6023      	str	r3, [r4, #0]
90001174:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
90001178:	e9c4 2205 	strd	r2, r2, [r4, #20]
9000117c:	e9c4 2207 	strd	r2, r2, [r4, #28]
90001180:	e9c4 2209 	strd	r2, r2, [r4, #36]	; 0x24
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
90001184:	e9c4 220b 	strd	r2, r2, [r4, #44]	; 0x2c
90001188:	e9c4 220d 	strd	r2, r2, [r4, #52]	; 0x34
    videoInfo.frame_width = 0;
9000118c:	e9c4 2203 	strd	r2, r2, [r4, #12]
    videoInfo.number_of_frames = 0;
90001190:	e9c4 2201 	strd	r2, r2, [r4, #4]
    semDecodingDone = SEM_CREATE();
90001194:	f00b ff5a 	bl	9000d04c <osSemaphoreNew>
90001198:	4b03      	ldr	r3, [pc, #12]	; (900011a8 <_ZN20HardwareMJPEGDecoderC1Ev+0x44>)
9000119a:	4602      	mov	r2, r0
}
9000119c:	4620      	mov	r0, r4
    semDecodingDone = SEM_CREATE();
9000119e:	601a      	str	r2, [r3, #0]
}
900011a0:	bd10      	pop	{r4, pc}
900011a2:	bf00      	nop
900011a4:	90027960 	.word	0x90027960
900011a8:	24005bcc 	.word	0x24005bcc

900011ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
{
900011ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    currentMovieOffset = 0;
900011b0:	2100      	movs	r1, #0
    if (reader != 0)
900011b2:	6b06      	ldr	r6, [r0, #48]	; 0x30
{
900011b4:	b083      	sub	sp, #12
900011b6:	4605      	mov	r5, r0
    currentMovieOffset = 0;
900011b8:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
900011ba:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
    if (reader != 0)
900011be:	2e00      	cmp	r6, #0
900011c0:	f000 81b4 	beq.w	9000152c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x380>
        if (length > aviBufferLength)
900011c4:	6b83      	ldr	r3, [r0, #56]	; 0x38
900011c6:	2b47      	cmp	r3, #71	; 0x47
900011c8:	f240 8265 	bls.w	90001696 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ea>
        reader->seek(offset);
900011cc:	6833      	ldr	r3, [r6, #0]
900011ce:	4630      	mov	r0, r6
900011d0:	68db      	ldr	r3, [r3, #12]
900011d2:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900011d4:	6b28      	ldr	r0, [r5, #48]	; 0x30
900011d6:	2248      	movs	r2, #72	; 0x48
900011d8:	6b69      	ldr	r1, [r5, #52]	; 0x34
900011da:	6803      	ldr	r3, [r0, #0]
900011dc:	691b      	ldr	r3, [r3, #16]
900011de:	4798      	blx	r3
900011e0:	2800      	cmp	r0, #0
900011e2:	f000 80ce 	beq.w	90001382 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d6>
        aviBufferStartOffset = offset;
900011e6:	2300      	movs	r3, #0
    if (reader != 0)
900011e8:	6b2e      	ldr	r6, [r5, #48]	; 0x30
    if (compare(currentMovieOffset, "RIFF", 4))
900011ea:	69af      	ldr	r7, [r5, #24]
    if (reader != 0)
900011ec:	46b1      	mov	r9, r6
        aviBufferStartOffset = offset;
900011ee:	63eb      	str	r3, [r5, #60]	; 0x3c
    if (reader != 0)
900011f0:	2e00      	cmp	r6, #0
900011f2:	f000 819c 	beq.w	9000152e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x382>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900011f6:	f8d5 a034 	ldr.w	sl, [r5, #52]	; 0x34
    return strncmp(src, str, num);
900011fa:	2204      	movs	r2, #4
900011fc:	49c3      	ldr	r1, [pc, #780]	; (9000150c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x360>)
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900011fe:	eb0a 0b07 	add.w	fp, sl, r7
    return strncmp(src, str, num);
90001202:	4658      	mov	r0, fp
90001204:	f025 fb3c 	bl	90026880 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
90001208:	2800      	cmp	r0, #0
9000120a:	f040 824d 	bne.w	900016a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fc>
    currentMovieOffset += 8;
9000120e:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
90001212:	2204      	movs	r2, #4
90001214:	49be      	ldr	r1, [pc, #760]	; (90001510 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x364>)
    currentMovieOffset += 8;
90001216:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
90001218:	4450      	add	r0, sl
9000121a:	f025 fb31 	bl	90026880 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
9000121e:	2800      	cmp	r0, #0
90001220:	f040 825d 	bne.w	900016de <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
    currentMovieOffset += 4;
90001224:	f107 080c 	add.w	r8, r7, #12
    return strncmp(src, str, num);
90001228:	2204      	movs	r2, #4
9000122a:	49ba      	ldr	r1, [pc, #744]	; (90001514 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x368>)
9000122c:	eb0a 0008 	add.w	r0, sl, r8
    currentMovieOffset += 4;
90001230:	f8c5 8018 	str.w	r8, [r5, #24]
    return strncmp(src, str, num);
90001234:	f025 fb24 	bl	90026880 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
90001238:	9001      	str	r0, [sp, #4]
9000123a:	2800      	cmp	r0, #0
9000123c:	f040 8245 	bne.w	900016ca <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001240:	f89b 4012 	ldrb.w	r4, [fp, #18]
90001244:	f89b 2011 	ldrb.w	r2, [fp, #17]
90001248:	0424      	lsls	r4, r4, #16
9000124a:	f89b 3013 	ldrb.w	r3, [fp, #19]
9000124e:	ea44 2402 	orr.w	r4, r4, r2, lsl #8
90001252:	f89b 2010 	ldrb.w	r2, [fp, #16]
90001256:	4314      	orrs	r4, r2
    assert(aviListSize);
90001258:	ea54 6403 	orrs.w	r4, r4, r3, lsl #24
9000125c:	f000 822e 	beq.w	900016bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
90001260:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
90001264:	2204      	movs	r2, #4
90001266:	49ac      	ldr	r1, [pc, #688]	; (90001518 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36c>)
90001268:	4450      	add	r0, sl
9000126a:	f025 fb09 	bl	90026880 <strncmp>
    if (compare(offset, "hdrl", 4))
9000126e:	2800      	cmp	r0, #0
90001270:	f000 808b 	beq.w	9000138a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1de>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001274:	2306      	movs	r3, #6
        foundFrame = false;
90001276:	f8dd b004 	ldr.w	fp, [sp, #4]
    offset += 4;
9000127a:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
9000127e:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001282:	4450      	add	r0, sl
    return strncmp(src, str, num);
90001284:	2204      	movs	r2, #4
90001286:	49a5      	ldr	r1, [pc, #660]	; (9000151c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x370>)
90001288:	f025 fafa 	bl	90026880 <strncmp>
    if (compare(offset, "avih", 4))
9000128c:	2800      	cmp	r0, #0
9000128e:	f000 808f 	beq.w	900013b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x204>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
90001292:	2307      	movs	r3, #7
90001294:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
    uint32_t listOffset = aviListOffset + aviListSize + 8;
90001298:	4444      	add	r4, r8
9000129a:	3408      	adds	r4, #8
    if (reader != 0)
9000129c:	f1b9 0f00 	cmp.w	r9, #0
900012a0:	d015      	beq.n	900012ce <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x122>
        if (length > aviBufferLength)
900012a2:	6bab      	ldr	r3, [r5, #56]	; 0x38
900012a4:	2b0b      	cmp	r3, #11
900012a6:	f240 81f6 	bls.w	90001696 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ea>
        reader->seek(offset);
900012aa:	f8d9 3000 	ldr.w	r3, [r9]
900012ae:	4621      	mov	r1, r4
900012b0:	4648      	mov	r0, r9
900012b2:	68db      	ldr	r3, [r3, #12]
900012b4:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900012b6:	6b28      	ldr	r0, [r5, #48]	; 0x30
900012b8:	220c      	movs	r2, #12
900012ba:	6b69      	ldr	r1, [r5, #52]	; 0x34
900012bc:	6803      	ldr	r3, [r0, #0]
900012be:	691b      	ldr	r3, [r3, #16]
900012c0:	4798      	blx	r3
900012c2:	b910      	cbnz	r0, 900012ca <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x11e>
            lastError = AVI_ERROR_EOF_REACHED;
900012c4:	230d      	movs	r3, #13
900012c6:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
900012ca:	6b2e      	ldr	r6, [r5, #48]	; 0x30
900012cc:	63ec      	str	r4, [r5, #60]	; 0x3c
        return aviBuffer;
900012ce:	f895 9040 	ldrb.w	r9, [r5, #64]	; 0x40
    return strncmp(src, str, num);
900012d2:	4f93      	ldr	r7, [pc, #588]	; (90001520 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x374>)
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900012d4:	f104 0808 	add.w	r8, r4, #8
    if (reader != 0)
900012d8:	2e00      	cmp	r6, #0
900012da:	d041      	beq.n	90001360 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b4>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900012dc:	6beb      	ldr	r3, [r5, #60]	; 0x3c
    return strncmp(src, str, num);
900012de:	2204      	movs	r2, #4
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900012e0:	6b68      	ldr	r0, [r5, #52]	; 0x34
    return strncmp(src, str, num);
900012e2:	4639      	mov	r1, r7
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900012e4:	eba8 0303 	sub.w	r3, r8, r3
900012e8:	4418      	add	r0, r3
    return strncmp(src, str, num);
900012ea:	f025 fac9 	bl	90026880 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900012ee:	2800      	cmp	r0, #0
900012f0:	d03e      	beq.n	90001370 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1c4>
900012f2:	f1b9 0f00 	cmp.w	r9, #0
900012f6:	d13e      	bne.n	90001376 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ca>
900012f8:	6aab      	ldr	r3, [r5, #40]	; 0x28
900012fa:	42a3      	cmp	r3, r4
900012fc:	f240 80b1 	bls.w	90001462 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2b6>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
90001300:	3404      	adds	r4, #4
    if (reader != 0)
90001302:	2e00      	cmp	r6, #0
90001304:	d046      	beq.n	90001394 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1e8>
        const uint32_t index = offset - aviBufferStartOffset;
90001306:	6bea      	ldr	r2, [r5, #60]	; 0x3c
        if (length > aviBufferLength)
90001308:	e9d5 130d 	ldrd	r1, r3, [r5, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
9000130c:	1aa4      	subs	r4, r4, r2
        if (length > aviBufferLength)
9000130e:	2b0b      	cmp	r3, #11
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001310:	eb01 0204 	add.w	r2, r1, r4
90001314:	5d09      	ldrb	r1, [r1, r4]
90001316:	7894      	ldrb	r4, [r2, #2]
90001318:	7850      	ldrb	r0, [r2, #1]
9000131a:	ea4f 4404 	mov.w	r4, r4, lsl #16
9000131e:	78d2      	ldrb	r2, [r2, #3]
90001320:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
90001324:	ea44 0401 	orr.w	r4, r4, r1
90001328:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        listOffset += listSize;
9000132c:	4444      	add	r4, r8
        if (length > aviBufferLength)
9000132e:	f240 81b2 	bls.w	90001696 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ea>
        reader->seek(offset);
90001332:	6833      	ldr	r3, [r6, #0]
90001334:	4621      	mov	r1, r4
90001336:	4630      	mov	r0, r6
90001338:	68db      	ldr	r3, [r3, #12]
9000133a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000133c:	6b28      	ldr	r0, [r5, #48]	; 0x30
9000133e:	220c      	movs	r2, #12
90001340:	6b69      	ldr	r1, [r5, #52]	; 0x34
90001342:	6803      	ldr	r3, [r0, #0]
90001344:	691b      	ldr	r3, [r3, #16]
90001346:	4798      	blx	r3
90001348:	b910      	cbnz	r0, 90001350 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a4>
            lastError = AVI_ERROR_EOF_REACHED;
9000134a:	230d      	movs	r3, #13
9000134c:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
90001350:	6b2e      	ldr	r6, [r5, #48]	; 0x30
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001352:	f104 0808 	add.w	r8, r4, #8
90001356:	f895 9040 	ldrb.w	r9, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
9000135a:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
9000135c:	2e00      	cmp	r6, #0
9000135e:	d1bd      	bne.n	900012dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x130>
        src = (const char*)movieData + offset;
90001360:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
    return strncmp(src, str, num);
90001362:	2204      	movs	r2, #4
90001364:	4639      	mov	r1, r7
        src = (const char*)movieData + offset;
90001366:	4440      	add	r0, r8
    return strncmp(src, str, num);
90001368:	f025 fa8a 	bl	90026880 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
9000136c:	2800      	cmp	r0, #0
9000136e:	d1c0      	bne.n	900012f2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x146>
    if (lastError != AVI_NO_ERROR)
90001370:	f1b9 0f00 	cmp.w	r9, #0
90001374:	d075      	beq.n	90001462 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2b6>
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
90001376:	230a      	movs	r3, #10
90001378:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
}
9000137c:	b003      	add	sp, #12
9000137e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001382:	230d      	movs	r3, #13
90001384:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
90001388:	e72d      	b.n	900011e6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3a>
    offset += 4;
9000138a:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
9000138e:	f04f 0b01 	mov.w	fp, #1
90001392:	e776      	b.n	90001282 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xd6>
        volatile const uint8_t* const d = movieData + offset;
90001394:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
90001396:	191a      	adds	r2, r3, r4
        val |= d[0];
90001398:	5d1b      	ldrb	r3, [r3, r4]
        val |= d[1] << 8;
9000139a:	7851      	ldrb	r1, [r2, #1]
        val |= d[2] << 16;
9000139c:	7894      	ldrb	r4, [r2, #2]
        val |= d[3] << 24;
9000139e:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
900013a0:	0424      	lsls	r4, r4, #16
        val |= d[3] << 24;
900013a2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
900013a6:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
900013aa:	431c      	orrs	r4, r3
        listOffset += listSize;
900013ac:	4444      	add	r4, r8
    return movieData + offset;
900013ae:	e791      	b.n	900012d4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x128>
    if (foundFrame)
900013b0:	f1bb 0f00 	cmp.w	fp, #0
900013b4:	f43f af70 	beq.w	90001298 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xec>
        offset += 8; /* skip fourcc and cb in AVIMAINHEADER */
900013b8:	f107 0120 	add.w	r1, r7, #32
    if (reader != 0)
900013bc:	f1b9 0f00 	cmp.w	r9, #0
900013c0:	f000 8125 	beq.w	9000160e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x462>
        const uint32_t index = offset - aviBufferStartOffset;
900013c4:	6beb      	ldr	r3, [r5, #60]	; 0x3c
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013c6:	6b6a      	ldr	r2, [r5, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
900013c8:	1ac9      	subs	r1, r1, r3
900013ca:	f1c3 0030 	rsb	r0, r3, #48	; 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900013ce:	f8df c158 	ldr.w	ip, [pc, #344]	; 90001528 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37c>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013d2:	f812 a001 	ldrb.w	sl, [r2, r1]
900013d6:	eb02 0e01 	add.w	lr, r2, r1
        const uint32_t index = offset - aviBufferStartOffset;
900013da:	f1c3 0140 	rsb	r1, r3, #64	; 0x40
900013de:	f1c3 0344 	rsb	r3, r3, #68	; 0x44
900013e2:	4438      	add	r0, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013e4:	f89e b001 	ldrb.w	fp, [lr, #1]
        const uint32_t index = offset - aviBufferStartOffset;
900013e8:	4439      	add	r1, r7
900013ea:	441f      	add	r7, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013ec:	f89e 3002 	ldrb.w	r3, [lr, #2]
900013f0:	f89e e003 	ldrb.w	lr, [lr, #3]
900013f4:	041b      	lsls	r3, r3, #16
900013f6:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
900013fa:	ea43 030a 	orr.w	r3, r3, sl
900013fe:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001402:	fbac c303 	umull	ip, r3, ip, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001406:	eb02 0c00 	add.w	ip, r2, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000140a:	099b      	lsrs	r3, r3, #6
9000140c:	606b      	str	r3, [r5, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000140e:	f89c 3002 	ldrb.w	r3, [ip, #2]
90001412:	f89c a001 	ldrb.w	sl, [ip, #1]
90001416:	041b      	lsls	r3, r3, #16
90001418:	f812 e000 	ldrb.w	lr, [r2, r0]
9000141c:	f89c c003 	ldrb.w	ip, [ip, #3]
90001420:	1850      	adds	r0, r2, r1
90001422:	ea43 230a 	orr.w	r3, r3, sl, lsl #8
90001426:	ea43 030e 	orr.w	r3, r3, lr
9000142a:	ea43 630c 	orr.w	r3, r3, ip, lsl #24
        videoInfo.number_of_frames = getU32(offset + 16);
9000142e:	60ab      	str	r3, [r5, #8]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001430:	7883      	ldrb	r3, [r0, #2]
90001432:	f890 c001 	ldrb.w	ip, [r0, #1]
90001436:	041b      	lsls	r3, r3, #16
90001438:	5c51      	ldrb	r1, [r2, r1]
9000143a:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000143e:	430b      	orrs	r3, r1
90001440:	78c1      	ldrb	r1, [r0, #3]
90001442:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
90001446:	19d1      	adds	r1, r2, r7
        videoInfo.frame_width = getU32(offset + 32);
90001448:	60eb      	str	r3, [r5, #12]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000144a:	788b      	ldrb	r3, [r1, #2]
9000144c:	7848      	ldrb	r0, [r1, #1]
9000144e:	041b      	lsls	r3, r3, #16
90001450:	5dd2      	ldrb	r2, [r2, r7]
90001452:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001456:	4313      	orrs	r3, r2
90001458:	78ca      	ldrb	r2, [r1, #3]
9000145a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
9000145e:	612b      	str	r3, [r5, #16]
90001460:	e71a      	b.n	90001298 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xec>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
90001462:	f104 030c 	add.w	r3, r4, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001466:	3404      	adds	r4, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
90001468:	61ab      	str	r3, [r5, #24]
    if (reader != 0)
9000146a:	2e00      	cmp	r6, #0
9000146c:	f000 80b4 	beq.w	900015d8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x42c>
        const uint32_t index = offset - aviBufferStartOffset;
90001470:	6beb      	ldr	r3, [r5, #60]	; 0x3c
90001472:	1ae4      	subs	r4, r4, r3
        if (length > aviBufferLength)
90001474:	e9d5 120d 	ldrd	r1, r2, [r5, #52]	; 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001478:	f104 0c02 	add.w	ip, r4, #2
9000147c:	1c67      	adds	r7, r4, #1
9000147e:	f811 e004 	ldrb.w	lr, [r1, r4]
90001482:	1ce0      	adds	r0, r4, #3
90001484:	f811 300c 	ldrb.w	r3, [r1, ip]
        if (length > aviBufferLength)
90001488:	2a03      	cmp	r2, #3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000148a:	f811 9007 	ldrb.w	r9, [r1, r7]
9000148e:	ea4f 4303 	mov.w	r3, r3, lsl #16
90001492:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90001496:	ea43 030e 	orr.w	r3, r3, lr
9000149a:	f811 e000 	ldrb.w	lr, [r1, r0]
9000149e:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900014a2:	4443      	add	r3, r8
900014a4:	626b      	str	r3, [r5, #36]	; 0x24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900014a6:	f811 300c 	ldrb.w	r3, [r1, ip]
900014aa:	f811 c007 	ldrb.w	ip, [r1, r7]
900014ae:	5d0f      	ldrb	r7, [r1, r4]
900014b0:	ea4f 4403 	mov.w	r4, r3, lsl #16
900014b4:	5c09      	ldrb	r1, [r1, r0]
900014b6:	ea44 240c 	orr.w	r4, r4, ip, lsl #8
900014ba:	ea44 0407 	orr.w	r4, r4, r7
900014be:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
    listOffset += listSize;
900014c2:	4444      	add	r4, r8
        if (length > aviBufferLength)
900014c4:	f240 80e7 	bls.w	90001696 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ea>
        reader->seek(offset);
900014c8:	6833      	ldr	r3, [r6, #0]
900014ca:	4621      	mov	r1, r4
900014cc:	4630      	mov	r0, r6
900014ce:	68db      	ldr	r3, [r3, #12]
900014d0:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900014d2:	6b28      	ldr	r0, [r5, #48]	; 0x30
900014d4:	2204      	movs	r2, #4
900014d6:	6b69      	ldr	r1, [r5, #52]	; 0x34
900014d8:	6803      	ldr	r3, [r0, #0]
900014da:	691b      	ldr	r3, [r3, #16]
900014dc:	4798      	blx	r3
900014de:	2800      	cmp	r0, #0
900014e0:	d06a      	beq.n	900015b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x40c>
    if (reader != 0)
900014e2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
        aviBufferStartOffset = offset;
900014e4:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
900014e6:	2b00      	cmp	r3, #0
900014e8:	f000 8103 	beq.w	900016f2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900014ec:	6b68      	ldr	r0, [r5, #52]	; 0x34
    return strncmp(src, str, num);
900014ee:	2204      	movs	r2, #4
900014f0:	490c      	ldr	r1, [pc, #48]	; (90001524 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x378>)
900014f2:	f025 f9c5 	bl	90026880 <strncmp>
    if (!compare(listOffset, "idx1", 4))
900014f6:	2800      	cmp	r0, #0
900014f8:	d168      	bne.n	900015cc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x420>
    frameNumber = 1; /* next frame number is 1 */
900014fa:	2201      	movs	r2, #1
    firstFrameOffset = currentMovieOffset;
900014fc:	69ab      	ldr	r3, [r5, #24]
        indexOffset = listOffset;
900014fe:	61ec      	str	r4, [r5, #28]
    frameNumber = 1; /* next frame number is 1 */
90001500:	616a      	str	r2, [r5, #20]
    firstFrameOffset = currentMovieOffset;
90001502:	622b      	str	r3, [r5, #32]
}
90001504:	b003      	add	sp, #12
90001506:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000150a:	bf00      	nop
9000150c:	90027898 	.word	0x90027898
90001510:	90027950 	.word	0x90027950
90001514:	90027948 	.word	0x90027948
90001518:	90027940 	.word	0x90027940
9000151c:	90027928 	.word	0x90027928
90001520:	90027930 	.word	0x90027930
90001524:	90027938 	.word	0x90027938
90001528:	10624dd3 	.word	0x10624dd3
    if (compare(currentMovieOffset, "RIFF", 4))
9000152c:	4637      	mov	r7, r6
        src = (const char*)movieData + offset;
9000152e:	f8d5 902c 	ldr.w	r9, [r5, #44]	; 0x2c
    return strncmp(src, str, num);
90001532:	2204      	movs	r2, #4
90001534:	4970      	ldr	r1, [pc, #448]	; (900016f8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x54c>)
90001536:	eb09 0007 	add.w	r0, r9, r7
9000153a:	f025 f9a1 	bl	90026880 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
9000153e:	2800      	cmp	r0, #0
90001540:	f040 80b2 	bne.w	900016a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fc>
    currentMovieOffset += 8;
90001544:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
90001548:	2204      	movs	r2, #4
9000154a:	496c      	ldr	r1, [pc, #432]	; (900016fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x550>)
    currentMovieOffset += 8;
9000154c:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
9000154e:	4448      	add	r0, r9
90001550:	f025 f996 	bl	90026880 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
90001554:	2800      	cmp	r0, #0
90001556:	f040 80c2 	bne.w	900016de <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
    currentMovieOffset += 4;
9000155a:	f107 080c 	add.w	r8, r7, #12
    return strncmp(src, str, num);
9000155e:	2204      	movs	r2, #4
90001560:	4967      	ldr	r1, [pc, #412]	; (90001700 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x554>)
90001562:	eb09 0008 	add.w	r0, r9, r8
    currentMovieOffset += 4;
90001566:	f8c5 8018 	str.w	r8, [r5, #24]
    return strncmp(src, str, num);
9000156a:	f025 f989 	bl	90026880 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
9000156e:	4683      	mov	fp, r0
90001570:	2800      	cmp	r0, #0
90001572:	f040 80aa 	bne.w	900016ca <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    const uint32_t aviListSize = getU32(currentMovieOffset + 4);
90001576:	f107 0310 	add.w	r3, r7, #16
        volatile const uint8_t* const d = movieData + offset;
9000157a:	eb09 0203 	add.w	r2, r9, r3
        val |= d[0];
9000157e:	f819 3003 	ldrb.w	r3, [r9, r3]
        val |= d[1] << 8;
90001582:	7851      	ldrb	r1, [r2, #1]
        val |= d[2] << 16;
90001584:	7894      	ldrb	r4, [r2, #2]
        val |= d[3] << 24;
90001586:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90001588:	0424      	lsls	r4, r4, #16
        val |= d[3] << 24;
9000158a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000158e:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
    assert(aviListSize);
90001592:	431c      	orrs	r4, r3
90001594:	f000 8092 	beq.w	900016bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
90001598:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
9000159c:	2204      	movs	r2, #4
9000159e:	4959      	ldr	r1, [pc, #356]	; (90001704 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x558>)
900015a0:	4448      	add	r0, r9
900015a2:	f025 f96d 	bl	90026880 <strncmp>
    if (compare(offset, "hdrl", 4))
900015a6:	b958      	cbnz	r0, 900015c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x414>
    offset += 4;
900015a8:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
900015ac:	f04f 0b01 	mov.w	fp, #1
        src = (const char*)movieData + offset;
900015b0:	4448      	add	r0, r9
900015b2:	f04f 0900 	mov.w	r9, #0
900015b6:	e665      	b.n	90001284 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xd8>
            lastError = AVI_ERROR_EOF_REACHED;
900015b8:	230d      	movs	r3, #13
900015ba:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
900015be:	e790      	b.n	900014e2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x336>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900015c0:	2306      	movs	r3, #6
    offset += 4;
900015c2:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900015c6:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
    if (reader != 0)
900015ca:	e7f1      	b.n	900015b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x404>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
900015cc:	230b      	movs	r3, #11
900015ce:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
}
900015d2:	b003      	add	sp, #12
900015d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900015d8:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
        volatile const uint8_t* const d = movieData + offset;
900015da:	1902      	adds	r2, r0, r4
        val |= d[0];
900015dc:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
900015de:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
900015e0:	7893      	ldrb	r3, [r2, #2]
900015e2:	041b      	lsls	r3, r3, #16
        val |= d[3] << 24;
900015e4:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
900015e8:	78d6      	ldrb	r6, [r2, #3]
900015ea:	ea41 6106 	orr.w	r1, r1, r6, lsl #24
900015ee:	430b      	orrs	r3, r1
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900015f0:	4443      	add	r3, r8
900015f2:	626b      	str	r3, [r5, #36]	; 0x24
        val |= d[0];
900015f4:	5d03      	ldrb	r3, [r0, r4]
        val |= d[1] << 8;
900015f6:	7851      	ldrb	r1, [r2, #1]
        val |= d[2] << 16;
900015f8:	7894      	ldrb	r4, [r2, #2]
        val |= d[3] << 24;
900015fa:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
900015fc:	0424      	lsls	r4, r4, #16
        val |= d[3] << 24;
900015fe:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
90001602:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
90001606:	431c      	orrs	r4, r3
    listOffset += listSize;
90001608:	4444      	add	r4, r8
        src = (const char*)movieData + offset;
9000160a:	4420      	add	r0, r4
9000160c:	e76f      	b.n	900014ee <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x342>
9000160e:	6aea      	ldr	r2, [r5, #44]	; 0x2c
        videoInfo.number_of_frames = getU32(offset + 16);
90001610:	f107 0e30 	add.w	lr, r7, #48	; 0x30
        videoInfo.frame_width = getU32(offset + 32);
90001614:	f107 0c40 	add.w	ip, r7, #64	; 0x40
        videoInfo.frame_height = getU32(offset + 36);
90001618:	3744      	adds	r7, #68	; 0x44
        volatile const uint8_t* const d = movieData + offset;
9000161a:	1850      	adds	r0, r2, r1
        val |= d[0];
9000161c:	f812 b001 	ldrb.w	fp, [r2, r1]
        volatile const uint8_t* const d = movieData + offset;
90001620:	eb02 010e 	add.w	r1, r2, lr
        val |= d[1] << 8;
90001624:	f890 a001 	ldrb.w	sl, [r0, #1]
        val |= d[2] << 16;
90001628:	7883      	ldrb	r3, [r0, #2]
        val |= d[3] << 24;
9000162a:	78c0      	ldrb	r0, [r0, #3]
        val |= d[2] << 16;
9000162c:	041b      	lsls	r3, r3, #16
        val |= d[3] << 24;
9000162e:	ea4b 6000 	orr.w	r0, fp, r0, lsl #24
90001632:	ea43 230a 	orr.w	r3, r3, sl, lsl #8
90001636:	4303      	orrs	r3, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001638:	4833      	ldr	r0, [pc, #204]	; (90001708 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x55c>)
9000163a:	fba0 0303 	umull	r0, r3, r0, r3
9000163e:	099b      	lsrs	r3, r3, #6
90001640:	606b      	str	r3, [r5, #4]
        val |= d[0];
90001642:	f812 000e 	ldrb.w	r0, [r2, lr]
        val |= d[1] << 8;
90001646:	f891 e001 	ldrb.w	lr, [r1, #1]
        val |= d[2] << 16;
9000164a:	788b      	ldrb	r3, [r1, #2]
        val |= d[3] << 24;
9000164c:	78c9      	ldrb	r1, [r1, #3]
        val |= d[2] << 16;
9000164e:	041b      	lsls	r3, r3, #16
        val |= d[3] << 24;
90001650:	ea40 6101 	orr.w	r1, r0, r1, lsl #24
90001654:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
        volatile const uint8_t* const d = movieData + offset;
90001658:	eb02 0e0c 	add.w	lr, r2, ip
        val |= d[3] << 24;
9000165c:	430b      	orrs	r3, r1
        volatile const uint8_t* const d = movieData + offset;
9000165e:	19d1      	adds	r1, r2, r7
        videoInfo.number_of_frames = getU32(offset + 16);
90001660:	60ab      	str	r3, [r5, #8]
        val |= d[0];
90001662:	f812 000c 	ldrb.w	r0, [r2, ip]
        val |= d[1] << 8;
90001666:	f89e c001 	ldrb.w	ip, [lr, #1]
        val |= d[2] << 16;
9000166a:	f89e 3002 	ldrb.w	r3, [lr, #2]
        val |= d[3] << 24;
9000166e:	f89e e003 	ldrb.w	lr, [lr, #3]
        val |= d[2] << 16;
90001672:	041b      	lsls	r3, r3, #16
        val |= d[3] << 24;
90001674:	ea40 600e 	orr.w	r0, r0, lr, lsl #24
90001678:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000167c:	4303      	orrs	r3, r0
        videoInfo.frame_width = getU32(offset + 32);
9000167e:	60eb      	str	r3, [r5, #12]
        val |= d[0];
90001680:	5dd2      	ldrb	r2, [r2, r7]
        val |= d[1] << 8;
90001682:	7848      	ldrb	r0, [r1, #1]
        val |= d[2] << 16;
90001684:	788b      	ldrb	r3, [r1, #2]
        val |= d[3] << 24;
90001686:	78c9      	ldrb	r1, [r1, #3]
        val |= d[2] << 16;
90001688:	041b      	lsls	r3, r3, #16
        val |= d[3] << 24;
9000168a:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
9000168e:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001692:	4313      	orrs	r3, r2
        return val;
90001694:	e6e3      	b.n	9000145e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2b2>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001696:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001698:	4b1c      	ldr	r3, [pc, #112]	; (9000170c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x560>)
9000169a:	4a1d      	ldr	r2, [pc, #116]	; (90001710 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x564>)
9000169c:	219f      	movs	r1, #159	; 0x9f
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000169e:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
            assert(!"Buffer to small");
900016a2:	481c      	ldr	r0, [pc, #112]	; (90001714 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
900016a4:	f024 fe0c 	bl	900262c0 <__assert_func>
        lastError = AVI_ERROR_NOT_RIFF;
900016a8:	2003      	movs	r0, #3
        assert(!"RIFF header not found");
900016aa:	4b1b      	ldr	r3, [pc, #108]	; (90001718 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x56c>)
900016ac:	4a1b      	ldr	r2, [pc, #108]	; (9000171c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
900016ae:	f240 112d 	movw	r1, #301	; 0x12d
        lastError = AVI_ERROR_NOT_RIFF;
900016b2:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"RIFF header not found");
900016b6:	4817      	ldr	r0, [pc, #92]	; (90001714 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
900016b8:	f024 fe02 	bl	900262c0 <__assert_func>
    assert(aviListSize);
900016bc:	4b18      	ldr	r3, [pc, #96]	; (90001720 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x574>)
900016be:	f44f 71a1 	mov.w	r1, #322	; 0x142
900016c2:	4a16      	ldr	r2, [pc, #88]	; (9000171c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
900016c4:	4813      	ldr	r0, [pc, #76]	; (90001714 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
900016c6:	f024 fdfb 	bl	900262c0 <__assert_func>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
900016ca:	2005      	movs	r0, #5
        assert(!"AVI LIST not found");
900016cc:	4b15      	ldr	r3, [pc, #84]	; (90001724 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
900016ce:	4a13      	ldr	r2, [pc, #76]	; (9000171c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
900016d0:	f44f 719e 	mov.w	r1, #316	; 0x13c
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
900016d4:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"AVI LIST not found");
900016d8:	480e      	ldr	r0, [pc, #56]	; (90001714 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
900016da:	f024 fdf1 	bl	900262c0 <__assert_func>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
900016de:	2004      	movs	r0, #4
        assert(!"AVI header not found");
900016e0:	4b11      	ldr	r3, [pc, #68]	; (90001728 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x57c>)
900016e2:	4a0e      	ldr	r2, [pc, #56]	; (9000171c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
900016e4:	f240 1135 	movw	r1, #309	; 0x135
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
900016e8:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"AVI header not found");
900016ec:	4809      	ldr	r0, [pc, #36]	; (90001714 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
900016ee:	f024 fde7 	bl	900262c0 <__assert_func>
        src = (const char*)movieData + offset;
900016f2:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
900016f4:	4420      	add	r0, r4
900016f6:	e6fa      	b.n	900014ee <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x342>
900016f8:	90027898 	.word	0x90027898
900016fc:	90027950 	.word	0x90027950
90001700:	90027948 	.word	0x90027948
90001704:	90027940 	.word	0x90027940
90001708:	10624dd3 	.word	0x10624dd3
9000170c:	90027764 	.word	0x90027764
90001710:	90027778 	.word	0x90027778
90001714:	90027714 	.word	0x90027714
90001718:	900278a0 	.word	0x900278a0
9000171c:	900278bc 	.word	0x900278bc
90001720:	9002791c 	.word	0x9002791c
90001724:	90027904 	.word	0x90027904
90001728:	900278ec 	.word	0x900278ec

9000172c <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
{
9000172c:	b410      	push	{r4}
    reader = 0; /* not using reader */
9000172e:	2400      	movs	r4, #0
    movieLength = length;
90001730:	e9c0 210a 	strd	r2, r1, [r0, #40]	; 0x28
    reader = 0; /* not using reader */
90001734:	6304      	str	r4, [r0, #48]	; 0x30
}
90001736:	f85d 4b04 	ldr.w	r4, [sp], #4
    readVideoHeader();
9000173a:	f7ff bd37 	b.w	900011ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
9000173e:	bf00      	nop

90001740 <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
90001740:	b510      	push	{r4, lr}
    movieLength = reader.getDataLength();
90001742:	680b      	ldr	r3, [r1, #0]
{
90001744:	4604      	mov	r4, r0
    movieData = 0;
90001746:	2200      	movs	r2, #0
    movieLength = reader.getDataLength();
90001748:	4608      	mov	r0, r1
9000174a:	689b      	ldr	r3, [r3, #8]
    movieData = 0;
9000174c:	e9c4 210b 	strd	r2, r1, [r4, #44]	; 0x2c
    movieLength = reader.getDataLength();
90001750:	4798      	blx	r3
90001752:	4603      	mov	r3, r0
    readVideoHeader();
90001754:	4620      	mov	r0, r4
    movieLength = reader.getDataLength();
90001756:	62a3      	str	r3, [r4, #40]	; 0x28
}
90001758:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
9000175c:	f7ff bd26 	b.w	900011ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

90001760 <HAL_JPEG_InfoReadyCallback>:
        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
90001760:	684b      	ldr	r3, [r1, #4]
90001762:	2b01      	cmp	r3, #1
90001764:	d015      	beq.n	90001792 <HAL_JPEG_InfoReadyCallback+0x32>
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
90001766:	2b02      	cmp	r3, #2
90001768:	d00b      	beq.n	90001782 <HAL_JPEG_InfoReadyCallback+0x22>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
9000176a:	b94b      	cbnz	r3, 90001780 <HAL_JPEG_InfoReadyCallback+0x20>
                if ((pInfo->ImageWidth % 8) != 0)
9000176c:	68cb      	ldr	r3, [r1, #12]
9000176e:	0758      	lsls	r0, r3, #29
90001770:	d124      	bne.n	900017bc <HAL_JPEG_InfoReadyCallback+0x5c>
                if ((pInfo->ImageHeight % 8) != 0)
90001772:	688b      	ldr	r3, [r1, #8]
90001774:	075a      	lsls	r2, r3, #29
90001776:	d003      	beq.n	90001780 <HAL_JPEG_InfoReadyCallback+0x20>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
90001778:	f023 0307 	bic.w	r3, r3, #7
9000177c:	3308      	adds	r3, #8
9000177e:	608b      	str	r3, [r1, #8]
    }
90001780:	4770      	bx	lr
                if ((pInfo->ImageWidth % 16) != 0)
90001782:	68cb      	ldr	r3, [r1, #12]
90001784:	071a      	lsls	r2, r3, #28
90001786:	d0f4      	beq.n	90001772 <HAL_JPEG_InfoReadyCallback+0x12>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001788:	f023 030f 	bic.w	r3, r3, #15
9000178c:	3310      	adds	r3, #16
9000178e:	60cb      	str	r3, [r1, #12]
90001790:	e7ef      	b.n	90001772 <HAL_JPEG_InfoReadyCallback+0x12>
            if ((pInfo->ImageWidth % 16) != 0)
90001792:	68cb      	ldr	r3, [r1, #12]
90001794:	071a      	lsls	r2, r3, #28
90001796:	d003      	beq.n	900017a0 <HAL_JPEG_InfoReadyCallback+0x40>
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001798:	f023 030f 	bic.w	r3, r3, #15
9000179c:	3310      	adds	r3, #16
9000179e:	60cb      	str	r3, [r1, #12]
            if ((pInfo->ImageHeight % 16) != 0)
900017a0:	688a      	ldr	r2, [r1, #8]
900017a2:	0710      	lsls	r0, r2, #28
900017a4:	d003      	beq.n	900017ae <HAL_JPEG_InfoReadyCallback+0x4e>
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
900017a6:	f022 020f 	bic.w	r2, r2, #15
900017aa:	3210      	adds	r2, #16
900017ac:	608a      	str	r2, [r1, #8]
            hMCU = (pInfo->ImageWidth / MCU_WIDTH_PIXELS);
900017ae:	091b      	lsrs	r3, r3, #4
            MCU_TotalNb = (hMCU * vMCU);
900017b0:	4905      	ldr	r1, [pc, #20]	; (900017c8 <HAL_JPEG_InfoReadyCallback+0x68>)
            vMCU = (pInfo->ImageHeight / MCU_HEIGHT_PIXELS);
900017b2:	0912      	lsrs	r2, r2, #4
            MCU_TotalNb = (hMCU * vMCU);
900017b4:	fb02 f303 	mul.w	r3, r2, r3
900017b8:	600b      	str	r3, [r1, #0]
900017ba:	4770      	bx	lr
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
900017bc:	f023 0307 	bic.w	r3, r3, #7
900017c0:	3308      	adds	r3, #8
900017c2:	60cb      	str	r3, [r1, #12]
900017c4:	e7d5      	b.n	90001772 <HAL_JPEG_InfoReadyCallback+0x12>
900017c6:	bf00      	nop
900017c8:	24005ba4 	.word	0x24005ba4

900017cc <HAL_JPEG_GetDataCallback>:
    {
900017cc:	b410      	push	{r4}
        JPEG_InputImageIndex += NbDecodedData;
900017ce:	4c0c      	ldr	r4, [pc, #48]	; (90001800 <HAL_JPEG_GetDataCallback+0x34>)
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
900017d0:	4a0c      	ldr	r2, [pc, #48]	; (90001804 <HAL_JPEG_GetDataCallback+0x38>)
        JPEG_InputImageIndex += NbDecodedData;
900017d2:	6823      	ldr	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
900017d4:	6812      	ldr	r2, [r2, #0]
        JPEG_InputImageIndex += NbDecodedData;
900017d6:	440b      	add	r3, r1
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
900017d8:	4293      	cmp	r3, r2
        JPEG_InputImageIndex += NbDecodedData;
900017da:	6023      	str	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
900017dc:	d302      	bcc.n	900017e4 <HAL_JPEG_GetDataCallback+0x18>
    }
900017de:	f85d 4b04 	ldr.w	r4, [sp], #4
900017e2:	4770      	bx	lr
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
900017e4:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
900017e6:	4b08      	ldr	r3, [pc, #32]	; (90001808 <HAL_JPEG_GetDataCallback+0x3c>)
900017e8:	681c      	ldr	r4, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
900017ea:	f5b2 4f50 	cmp.w	r2, #53248	; 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
900017ee:	4421      	add	r1, r4
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
900017f0:	bf28      	it	cs
900017f2:	f44f 4250 	movcs.w	r2, #53248	; 0xd000
    }
900017f6:	f85d 4b04 	ldr.w	r4, [sp], #4
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
900017fa:	6019      	str	r1, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
900017fc:	f008 b88a 	b.w	90009914 <HAL_JPEG_ConfigInputBuffer>
90001800:	24005bb8 	.word	0x24005bb8
90001804:	24005bc4 	.word	0x24005bc4
90001808:	24005bc0 	.word	0x24005bc0

9000180c <HAL_JPEG_DataReadyCallback>:
    {
9000180c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
9000180e:	4c22      	ldr	r4, [pc, #136]	; (90001898 <HAL_JPEG_DataReadyCallback+0x8c>)
    {
90001810:	4606      	mov	r6, r0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001812:	4d22      	ldr	r5, [pc, #136]	; (9000189c <HAL_JPEG_DataReadyCallback+0x90>)
90001814:	6823      	ldr	r3, [r4, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001816:	6820      	ldr	r0, [r4, #0]
        const uint32_t MCU = MCU_BlockIndex;
90001818:	4921      	ldr	r1, [pc, #132]	; (900018a0 <HAL_JPEG_DataReadyCallback+0x94>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
9000181a:	011b      	lsls	r3, r3, #4
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
9000181c:	eb05 1000 	add.w	r0, r5, r0, lsl #4
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
90001820:	4f20      	ldr	r7, [pc, #128]	; (900018a4 <HAL_JPEG_DataReadyCallback+0x98>)
        const uint32_t MCU = MCU_BlockIndex;
90001822:	f8d1 c000 	ldr.w	ip, [r1]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001826:	6082      	str	r2, [r0, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_index = MCU;
90001828:	6820      	ldr	r0, [r4, #0]
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
9000182a:	68fa      	ldr	r2, [r7, #12]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_index = MCU;
9000182c:	eb05 1000 	add.w	r0, r5, r0, lsl #4
90001830:	f8c0 c00c 	str.w	ip, [r0, #12]
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
90001834:	6808      	ldr	r0, [r1, #0]
90001836:	4410      	add	r0, r2
90001838:	6008      	str	r0, [r1, #0]
        JPEG_OUT_Write_BufferIndex++;
9000183a:	6821      	ldr	r1, [r4, #0]
9000183c:	3101      	adds	r1, #1
9000183e:	6021      	str	r1, [r4, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001840:	2101      	movs	r1, #1
90001842:	54e9      	strb	r1, [r5, r3]
        if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
90001844:	6823      	ldr	r3, [r4, #0]
90001846:	428b      	cmp	r3, r1
90001848:	d901      	bls.n	9000184e <HAL_JPEG_DataReadyCallback+0x42>
            JPEG_OUT_Write_BufferIndex = 0;
9000184a:	2300      	movs	r3, #0
9000184c:	6023      	str	r3, [r4, #0]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
9000184e:	6823      	ldr	r3, [r4, #0]
90001850:	011b      	lsls	r3, r3, #4
90001852:	5ceb      	ldrb	r3, [r5, r3]
90001854:	b983      	cbnz	r3, 90001878 <HAL_JPEG_DataReadyCallback+0x6c>
        HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001856:	6823      	ldr	r3, [r4, #0]
90001858:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9000185c:	4630      	mov	r0, r6
9000185e:	eb05 1503 	add.w	r5, r5, r3, lsl #4
90001862:	01d2      	lsls	r2, r2, #7
90001864:	6869      	ldr	r1, [r5, #4]
90001866:	f008 f859 	bl	9000991c <HAL_JPEG_ConfigOutputBuffer>
        if (!DMA2D_reference->isDMARunning() && !DMA2D_reference->getReserved())
9000186a:	4b0f      	ldr	r3, [pc, #60]	; (900018a8 <HAL_JPEG_DataReadyCallback+0x9c>)
9000186c:	681b      	ldr	r3, [r3, #0]
9000186e:	7a1a      	ldrb	r2, [r3, #8]
90001870:	b90a      	cbnz	r2, 90001876 <HAL_JPEG_DataReadyCallback+0x6a>
        return isReserved;
90001872:	7a9b      	ldrb	r3, [r3, #10]
90001874:	b14b      	cbz	r3, 9000188a <HAL_JPEG_DataReadyCallback+0x7e>
    }
90001876:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001878:	2102      	movs	r1, #2
9000187a:	4630      	mov	r0, r6
9000187c:	f008 f812 	bl	900098a4 <HAL_JPEG_Pause>
            JPEG_output_is_paused = 1;
90001880:	4b0a      	ldr	r3, [pc, #40]	; (900018ac <HAL_JPEG_DataReadyCallback+0xa0>)
90001882:	2101      	movs	r1, #1
        HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001884:	68fa      	ldr	r2, [r7, #12]
            JPEG_output_is_paused = 1;
90001886:	6019      	str	r1, [r3, #0]
90001888:	e7e5      	b.n	90001856 <HAL_JPEG_DataReadyCallback+0x4a>
            SEM_POST(semDecodingDone);
9000188a:	4b09      	ldr	r3, [pc, #36]	; (900018b0 <HAL_JPEG_DataReadyCallback+0xa4>)
9000188c:	6818      	ldr	r0, [r3, #0]
    }
9000188e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
            SEM_POST(semDecodingDone);
90001892:	f00b bc5f 	b.w	9000d154 <osSemaphoreRelease>
90001896:	bf00      	nop
90001898:	24005bc8 	.word	0x24005bc8
9000189c:	24000008 	.word	0x24000008
900018a0:	2400018c 	.word	0x2400018c
900018a4:	24005b90 	.word	0x24005b90
900018a8:	24005ba8 	.word	0x24005ba8
900018ac:	24005bbc 	.word	0x24005bbc
900018b0:	24005bcc 	.word	0x24005bcc

900018b4 <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
900018b4:	b672      	cpsid	i
        while (1)
900018b6:	e7fe      	b.n	900018b6 <HAL_JPEG_ErrorCallback+0x2>

900018b8 <HAL_JPEG_DecodeCpltCallback>:
        Jpeg_HWDecodingEnd = 1;
900018b8:	4b01      	ldr	r3, [pc, #4]	; (900018c0 <HAL_JPEG_DecodeCpltCallback+0x8>)
900018ba:	2201      	movs	r2, #1
900018bc:	601a      	str	r2, [r3, #0]
    }
900018be:	4770      	bx	lr
900018c0:	24005bb4 	.word	0x24005bb4

900018c4 <DMA2D_CopyBuffer>:
 * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
900018c4:	b570      	push	{r4, r5, r6, lr}
    uint32_t xRef, yRef, refline;

    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
900018c6:	491c      	ldr	r1, [pc, #112]	; (90001938 <DMA2D_CopyBuffer+0x74>)
    xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) % JPEG_ConvertorParams.WidthExtend);

    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900018c8:	2302      	movs	r3, #2
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
900018ca:	68c5      	ldr	r5, [r0, #12]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900018cc:	4c1b      	ldr	r4, [pc, #108]	; (9000193c <DMA2D_CopyBuffer+0x78>)
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
900018ce:	680a      	ldr	r2, [r1, #0]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900018d0:	6363      	str	r3, [r4, #52]	; 0x34
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
900018d2:	012b      	lsls	r3, r5, #4

    /* Configure DMA2D data size */
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
900018d4:	4e1a      	ldr	r6, [pc, #104]	; (90001940 <DMA2D_CopyBuffer+0x7c>)
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
900018d6:	fbb3 fcf2 	udiv	ip, r3, r2
    xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) % JPEG_ConvertorParams.WidthExtend);
900018da:	fb02 321c 	mls	r2, r2, ip, r3
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
900018de:	684b      	ldr	r3, [r1, #4]
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
900018e0:	6836      	ldr	r6, [r6, #0]
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
900018e2:	fb03 fc0c 	mul.w	ip, r3, ip
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
900018e6:	68cb      	ldr	r3, [r1, #12]
900018e8:	eba6 0e03 	sub.w	lr, r6, r3
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
900018ec:	690e      	ldr	r6, [r1, #16]
900018ee:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
900018f2:	4575      	cmp	r5, lr
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
900018f4:	fb06 f202 	mul.w	r2, r6, r2
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
900018f8:	d318      	bcc.n	9000192c <DMA2D_CopyBuffer+0x68>
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.LastLineHeight | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
900018fa:	6889      	ldr	r1, [r1, #8]
900018fc:	f1c1 0110 	rsb	r1, r1, #16
90001900:	ea41 5103 	orr.w	r1, r1, r3, lsl #20
90001904:	6461      	str	r1, [r4, #68]	; 0x44
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
90001906:	490f      	ldr	r1, [pc, #60]	; (90001944 <DMA2D_CopyBuffer+0x80>)

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
90001908:	f1c3 031e 	rsb	r3, r3, #30

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer));
9000190c:	6840      	ldr	r0, [r0, #4]
    WRITE_REG(DMA2D->FGOR, 0);
9000190e:	2400      	movs	r4, #0
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
90001910:	6809      	ldr	r1, [r1, #0]
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
90001912:	011b      	lsls	r3, r3, #4
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
90001914:	4411      	add	r1, r2
90001916:	4a09      	ldr	r2, [pc, #36]	; (9000193c <DMA2D_CopyBuffer+0x78>)
90001918:	4461      	add	r1, ip
9000191a:	63d1      	str	r1, [r2, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
9000191c:	6413      	str	r3, [r2, #64]	; 0x40
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
9000191e:	490a      	ldr	r1, [pc, #40]	; (90001948 <DMA2D_CopyBuffer+0x84>)

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001920:	4b0a      	ldr	r3, [pc, #40]	; (9000194c <DMA2D_CopyBuffer+0x88>)
    WRITE_REG(DMA2D->FGOR, 0);
90001922:	6114      	str	r4, [r2, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90001924:	61d1      	str	r1, [r2, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer));
90001926:	60d0      	str	r0, [r2, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001928:	6013      	str	r3, [r2, #0]
}
9000192a:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
9000192c:	0519      	lsls	r1, r3, #20
9000192e:	f041 0110 	orr.w	r1, r1, #16
90001932:	6461      	str	r1, [r4, #68]	; 0x44
90001934:	e7e7      	b.n	90001906 <DMA2D_CopyBuffer+0x42>
90001936:	bf00      	nop
90001938:	24005b90 	.word	0x24005b90
9000193c:	52001000 	.word	0x52001000
90001940:	24005ba4 	.word	0x24005ba4
90001944:	24005bac 	.word	0x24005bac
90001948:	ff09000b 	.word	0xff09000b
9000194c:	00010201 	.word	0x00010201

90001950 <DMA2D_ExternalJobCompleted>:
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    job.State = JPEG_BUFFER_EMPTY;
    job.DataBufferSize = 0;

    JPEG_OUT_Read_BufferIndex++;
90001950:	4b0c      	ldr	r3, [pc, #48]	; (90001984 <DMA2D_ExternalJobCompleted+0x34>)
    job.State = JPEG_BUFFER_EMPTY;
90001952:	2100      	movs	r1, #0
90001954:	7001      	strb	r1, [r0, #0]
    JPEG_OUT_Read_BufferIndex++;
90001956:	681a      	ldr	r2, [r3, #0]
    job.DataBufferSize = 0;
90001958:	6081      	str	r1, [r0, #8]
    JPEG_OUT_Read_BufferIndex++;
9000195a:	3201      	adds	r2, #1
9000195c:	601a      	str	r2, [r3, #0]
    if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
9000195e:	681a      	ldr	r2, [r3, #0]
90001960:	2a01      	cmp	r2, #1
90001962:	d900      	bls.n	90001966 <DMA2D_ExternalJobCompleted+0x16>
    {
        JPEG_OUT_Read_BufferIndex = 0;
90001964:	6019      	str	r1, [r3, #0]
    }

    /* Check if last line */
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))
90001966:	4b08      	ldr	r3, [pc, #32]	; (90001988 <DMA2D_ExternalJobCompleted+0x38>)
90001968:	4908      	ldr	r1, [pc, #32]	; (9000198c <DMA2D_ExternalJobCompleted+0x3c>)
9000196a:	681b      	ldr	r3, [r3, #0]
9000196c:	68c9      	ldr	r1, [r1, #12]
9000196e:	68c2      	ldr	r2, [r0, #12]
90001970:	1a5b      	subs	r3, r3, r1
90001972:	429a      	cmp	r2, r3
90001974:	d302      	bcc.n	9000197c <DMA2D_ExternalJobCompleted+0x2c>
    {
        DMA2D_CopyBufferEnd = 1;
90001976:	4b06      	ldr	r3, [pc, #24]	; (90001990 <DMA2D_ExternalJobCompleted+0x40>)
90001978:	2201      	movs	r2, #1
9000197a:	601a      	str	r2, [r3, #0]
    }

    /* Signal decoder thread to wake up and continue decoding */
    SEM_POST(semDecodingDone);
9000197c:	4b05      	ldr	r3, [pc, #20]	; (90001994 <DMA2D_ExternalJobCompleted+0x44>)
9000197e:	6818      	ldr	r0, [r3, #0]
90001980:	f00b bbe8 	b.w	9000d154 <osSemaphoreRelease>
90001984:	24000188 	.word	0x24000188
90001988:	24005ba4 	.word	0x24005ba4
9000198c:	24005b90 	.word	0x24005b90
90001990:	24000184 	.word	0x24000184
90001994:	24005bcc 	.word	0x24005bcc

90001998 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
90001998:	2101      	movs	r1, #1
9000199a:	2200      	movs	r2, #0
{
9000199c:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
9000199e:	4608      	mov	r0, r1
900019a0:	f00b fb54 	bl	9000d04c <osSemaphoreNew>
900019a4:	4b0b      	ldr	r3, [pc, #44]	; (900019d4 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
900019a6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
900019a8:	b140      	cbz	r0, 900019bc <_ZN8touchgfx10OSWrappers10initializeEv+0x24>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
900019aa:	2200      	movs	r2, #0
900019ac:	2104      	movs	r1, #4
900019ae:	2001      	movs	r0, #1
900019b0:	f00b fc06 	bl	9000d1c0 <osMessageQueueNew>
900019b4:	4b08      	ldr	r3, [pc, #32]	; (900019d8 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
900019b6:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
900019b8:	b130      	cbz	r0, 900019c8 <_ZN8touchgfx10OSWrappers10initializeEv+0x30>
}
900019ba:	bd08      	pop	{r3, pc}
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
900019bc:	4b07      	ldr	r3, [pc, #28]	; (900019dc <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
900019be:	2128      	movs	r1, #40	; 0x28
900019c0:	4a07      	ldr	r2, [pc, #28]	; (900019e0 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
900019c2:	4808      	ldr	r0, [pc, #32]	; (900019e4 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
900019c4:	f024 fc7c 	bl	900262c0 <__assert_func>
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
900019c8:	4b07      	ldr	r3, [pc, #28]	; (900019e8 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
900019ca:	212c      	movs	r1, #44	; 0x2c
900019cc:	4a04      	ldr	r2, [pc, #16]	; (900019e0 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
900019ce:	4805      	ldr	r0, [pc, #20]	; (900019e4 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
900019d0:	f024 fc76 	bl	900262c0 <__assert_func>
900019d4:	24005bd4 	.word	0x24005bd4
900019d8:	24005bd0 	.word	0x24005bd0
900019dc:	9002799c 	.word	0x9002799c
900019e0:	900279e8 	.word	0x900279e8
900019e4:	90027a18 	.word	0x90027a18
900019e8:	90027a60 	.word	0x90027a60

900019ec <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
900019ec:	4b02      	ldr	r3, [pc, #8]	; (900019f8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
900019ee:	f04f 31ff 	mov.w	r1, #4294967295
900019f2:	6818      	ldr	r0, [r3, #0]
900019f4:	f00b bb7a 	b.w	9000d0ec <osSemaphoreAcquire>
900019f8:	24005bd4 	.word	0x24005bd4

900019fc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
900019fc:	4b01      	ldr	r3, [pc, #4]	; (90001a04 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
900019fe:	6818      	ldr	r0, [r3, #0]
90001a00:	f00b bba8 	b.w	9000d154 <osSemaphoreRelease>
90001a04:	24005bd4 	.word	0x24005bd4

90001a08 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
90001a08:	4b02      	ldr	r3, [pc, #8]	; (90001a14 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
90001a0a:	2100      	movs	r1, #0
90001a0c:	6818      	ldr	r0, [r3, #0]
90001a0e:	f00b bb6d 	b.w	9000d0ec <osSemaphoreAcquire>
90001a12:	bf00      	nop
90001a14:	24005bd4 	.word	0x24005bd4

90001a18 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
90001a18:	4b01      	ldr	r3, [pc, #4]	; (90001a20 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x8>)
90001a1a:	6818      	ldr	r0, [r3, #0]
90001a1c:	f00b bb9a 	b.w	9000d154 <osSemaphoreRelease>
90001a20:	24005bd4 	.word	0x24005bd4

90001a24 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
90001a24:	4803      	ldr	r0, [pc, #12]	; (90001a34 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
90001a26:	2300      	movs	r3, #0
90001a28:	4903      	ldr	r1, [pc, #12]	; (90001a38 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
90001a2a:	461a      	mov	r2, r3
90001a2c:	6800      	ldr	r0, [r0, #0]
90001a2e:	f00b bc05 	b.w	9000d23c <osMessageQueuePut>
90001a32:	bf00      	nop
90001a34:	24005bd0 	.word	0x24005bd0
90001a38:	24000028 	.word	0x24000028

90001a3c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
90001a3c:	b510      	push	{r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
90001a3e:	2300      	movs	r3, #0
{
90001a40:	b082      	sub	sp, #8
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
90001a42:	4c07      	ldr	r4, [pc, #28]	; (90001a60 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
90001a44:	461a      	mov	r2, r3
90001a46:	a901      	add	r1, sp, #4
90001a48:	6820      	ldr	r0, [r4, #0]
90001a4a:	f00b fc39 	bl	9000d2c0 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
90001a4e:	f04f 33ff 	mov.w	r3, #4294967295
90001a52:	2200      	movs	r2, #0
90001a54:	a901      	add	r1, sp, #4
90001a56:	6820      	ldr	r0, [r4, #0]
90001a58:	f00b fc32 	bl	9000d2c0 <osMessageQueueGet>
}
90001a5c:	b002      	add	sp, #8
90001a5e:	bd10      	pop	{r4, pc}
90001a60:	24005bd0 	.word	0x24005bd0

90001a64 <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
90001a64:	6803      	ldr	r3, [r0, #0]
90001a66:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90001a68:	4718      	bx	r3
90001a6a:	bf00      	nop

90001a6c <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
90001a6c:	2001      	movs	r0, #1
90001a6e:	4770      	bx	lr

90001a70 <_ZN8STM32DMAD1Ev>:
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
{
    mutexIsRunning = MUTEX_CREATE();
}

STM32DMA::~STM32DMA()
90001a70:	4905      	ldr	r1, [pc, #20]	; (90001a88 <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90001a72:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90001a76:	4b05      	ldr	r3, [pc, #20]	; (90001a8c <_ZN8STM32DMAD1Ev+0x1c>)
90001a78:	6001      	str	r1, [r0, #0]
90001a7a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90001a7e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90001a82:	f3bf 8f6f 	isb	sy
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}
90001a86:	4770      	bx	lr
90001a88:	90027c00 	.word	0x90027c00
90001a8c:	e000e100 	.word	0xe000e100

90001a90 <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
90001a90:	4b0f      	ldr	r3, [pc, #60]	; (90001ad0 <_ZN8STM32DMA10initializeEv+0x40>)
{
90001a92:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_FORCE_RESET();
    __HAL_RCC_DMA2D_RELEASE_RESET();

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90001a94:	490f      	ldr	r1, [pc, #60]	; (90001ad4 <_ZN8STM32DMA10initializeEv+0x44>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
90001a96:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90001a9a:	480f      	ldr	r0, [pc, #60]	; (90001ad8 <_ZN8STM32DMA10initializeEv+0x48>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
90001a9c:	f042 0210 	orr.w	r2, r2, #16
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90001aa0:	6208      	str	r0, [r1, #32]
    __HAL_RCC_DMA2D_CLK_ENABLE();
90001aa2:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
90001aa6:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90001aaa:	f002 0210 	and.w	r2, r2, #16
90001aae:	9201      	str	r2, [sp, #4]
90001ab0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
90001ab2:	6fda      	ldr	r2, [r3, #124]	; 0x7c
90001ab4:	f042 0210 	orr.w	r2, r2, #16
90001ab8:	67da      	str	r2, [r3, #124]	; 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
90001aba:	6fda      	ldr	r2, [r3, #124]	; 0x7c
90001abc:	f022 0210 	bic.w	r2, r2, #16
90001ac0:	67da      	str	r2, [r3, #124]	; 0x7c
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90001ac2:	4b06      	ldr	r3, [pc, #24]	; (90001adc <_ZN8STM32DMA10initializeEv+0x4c>)
90001ac4:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90001ac8:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
90001aca:	b002      	add	sp, #8
90001acc:	4770      	bx	lr
90001ace:	bf00      	nop
90001ad0:	58024400 	.word	0x58024400
90001ad4:	24009218 	.word	0x24009218
90001ad8:	90001ec1 	.word	0x90001ec1
90001adc:	e000e100 	.word	0xe000e100

90001ae0 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
90001ae0:	f240 30ef 	movw	r0, #1007	; 0x3ef
90001ae4:	4770      	bx	lr
90001ae6:	bf00      	nop

90001ae8 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
90001ae8:	4909      	ldr	r1, [pc, #36]	; (90001b10 <_ZN8STM32DMAD0Ev+0x28>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90001aea:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90001aee:	4b09      	ldr	r3, [pc, #36]	; (90001b14 <_ZN8STM32DMAD0Ev+0x2c>)
90001af0:	b510      	push	{r4, lr}
90001af2:	6001      	str	r1, [r0, #0]
90001af4:	4604      	mov	r4, r0
90001af6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90001afa:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90001afe:	f3bf 8f6f 	isb	sy
}
90001b02:	f640 51a8 	movw	r1, #3496	; 0xda8
90001b06:	f024 fbac 	bl	90026262 <_ZdlPvj>
90001b0a:	4620      	mov	r0, r4
90001b0c:	bd10      	pop	{r4, pc}
90001b0e:	bf00      	nop
90001b10:	90027c00 	.word	0x90027c00
90001b14:	e000e100 	.word	0xe000e100

90001b18 <_ZN8STM32DMA5startEv>:
                execute();
            }
        }
    }

    virtual void start()
90001b18:	b510      	push	{r4, lr}
90001b1a:	4604      	mov	r4, r0
    {
        MUTEX_LOCK(mutexIsRunning);
90001b1c:	f04f 31ff 	mov.w	r1, #4294967295
90001b20:	f8d0 0da4 	ldr.w	r0, [r0, #3492]	; 0xda4
90001b24:	f00b fa4c 	bl	9000cfc0 <osMutexAcquire>
        if (!queue.isEmpty() && isAllowed && !isRunning)
90001b28:	6860      	ldr	r0, [r4, #4]
90001b2a:	6803      	ldr	r3, [r0, #0]
90001b2c:	681b      	ldr	r3, [r3, #0]
90001b2e:	4798      	blx	r3
90001b30:	b978      	cbnz	r0, 90001b52 <_ZN8STM32DMA5startEv+0x3a>
90001b32:	7a63      	ldrb	r3, [r4, #9]
90001b34:	b16b      	cbz	r3, 90001b52 <_ZN8STM32DMA5startEv+0x3a>
90001b36:	7a23      	ldrb	r3, [r4, #8]
90001b38:	bb0b      	cbnz	r3, 90001b7e <_ZN8STM32DMA5startEv+0x66>
        {
            started_by_external_job = false;
            execute();
90001b3a:	6822      	ldr	r2, [r4, #0]
90001b3c:	4620      	mov	r0, r4
            started_by_external_job = false;
90001b3e:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
            execute();
90001b42:	6a53      	ldr	r3, [r2, #36]	; 0x24
90001b44:	4798      	blx	r3
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning && !isReserved)
        {
            started_by_external_job = true;
            externalJobExecute();
        }
        MUTEX_UNLOCK(mutexIsRunning);
90001b46:	f8d4 0da4 	ldr.w	r0, [r4, #3492]	; 0xda4
    }
90001b4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        MUTEX_UNLOCK(mutexIsRunning);
90001b4e:	f00b ba5b 	b.w	9000d008 <osMutexRelease>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning && !isReserved)
90001b52:	490f      	ldr	r1, [pc, #60]	; (90001b90 <_ZN8STM32DMA5startEv+0x78>)
90001b54:	4a0f      	ldr	r2, [pc, #60]	; (90001b94 <_ZN8STM32DMA5startEv+0x7c>)
90001b56:	680b      	ldr	r3, [r1, #0]
90001b58:	011b      	lsls	r3, r3, #4
90001b5a:	5cd3      	ldrb	r3, [r2, r3]
90001b5c:	2b01      	cmp	r3, #1
90001b5e:	d1f2      	bne.n	90001b46 <_ZN8STM32DMA5startEv+0x2e>
90001b60:	7a20      	ldrb	r0, [r4, #8]
90001b62:	2800      	cmp	r0, #0
90001b64:	d1ef      	bne.n	90001b46 <_ZN8STM32DMA5startEv+0x2e>
90001b66:	7aa0      	ldrb	r0, [r4, #10]
90001b68:	2800      	cmp	r0, #0
90001b6a:	d1ec      	bne.n	90001b46 <_ZN8STM32DMA5startEv+0x2e>
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001b6c:	6808      	ldr	r0, [r1, #0]
            started_by_external_job = true;
90001b6e:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001b72:	eb02 1000 	add.w	r0, r2, r0, lsl #4
        isRunning = true;
90001b76:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001b78:	f7ff fea4 	bl	900018c4 <DMA2D_CopyBuffer>
    }
90001b7c:	e7e3      	b.n	90001b46 <_ZN8STM32DMA5startEv+0x2e>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning && !isReserved)
90001b7e:	4b04      	ldr	r3, [pc, #16]	; (90001b90 <_ZN8STM32DMA5startEv+0x78>)
        MUTEX_UNLOCK(mutexIsRunning);
90001b80:	f8d4 0da4 	ldr.w	r0, [r4, #3492]	; 0xda4
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning && !isReserved)
90001b84:	681b      	ldr	r3, [r3, #0]
    }
90001b86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        MUTEX_UNLOCK(mutexIsRunning);
90001b8a:	f00b ba3d 	b.w	9000d008 <osMutexRelease>
90001b8e:	bf00      	nop
90001b90:	24000188 	.word	0x24000188
90001b94:	24000008 	.word	0x24000008

90001b98 <_ZN8STM32DMA18signalDMAInterruptEv>:
        if (!started_by_external_job)
90001b98:	f890 3da0 	ldrb.w	r3, [r0, #3488]	; 0xda0
    virtual void signalDMAInterrupt()
90001b9c:	b510      	push	{r4, lr}
90001b9e:	4604      	mov	r4, r0
        if (!started_by_external_job)
90001ba0:	b953      	cbnz	r3, 90001bb8 <_ZN8STM32DMA18signalDMAInterruptEv+0x20>
            executeCompleted();
90001ba2:	6803      	ldr	r3, [r0, #0]
90001ba4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90001ba6:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning && !isReserved)
90001ba8:	491c      	ldr	r1, [pc, #112]	; (90001c1c <_ZN8STM32DMA18signalDMAInterruptEv+0x84>)
90001baa:	4a1d      	ldr	r2, [pc, #116]	; (90001c20 <_ZN8STM32DMA18signalDMAInterruptEv+0x88>)
90001bac:	680b      	ldr	r3, [r1, #0]
90001bae:	011b      	lsls	r3, r3, #4
90001bb0:	5cd3      	ldrb	r3, [r2, r3]
90001bb2:	2b01      	cmp	r3, #1
90001bb4:	d014      	beq.n	90001be0 <_ZN8STM32DMA18signalDMAInterruptEv+0x48>
    }
90001bb6:	bd10      	pop	{r4, pc}
        if (isRunning)
90001bb8:	7a03      	ldrb	r3, [r0, #8]
90001bba:	bb2b      	cbnz	r3, 90001c08 <_ZN8STM32DMA18signalDMAInterruptEv+0x70>
            if (!queue.isEmpty() && isAllowed)
90001bbc:	6860      	ldr	r0, [r4, #4]
90001bbe:	6803      	ldr	r3, [r0, #0]
90001bc0:	681b      	ldr	r3, [r3, #0]
90001bc2:	4798      	blx	r3
90001bc4:	4603      	mov	r3, r0
90001bc6:	2800      	cmp	r0, #0
90001bc8:	d1f5      	bne.n	90001bb6 <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001bca:	7a62      	ldrb	r2, [r4, #9]
90001bcc:	2a00      	cmp	r2, #0
90001bce:	d0f2      	beq.n	90001bb6 <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
                execute();
90001bd0:	6822      	ldr	r2, [r4, #0]
90001bd2:	4620      	mov	r0, r4
                started_by_external_job = false;
90001bd4:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
                execute();
90001bd8:	6a53      	ldr	r3, [r2, #36]	; 0x24
    }
90001bda:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
90001bde:	4718      	bx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning && !isReserved)
90001be0:	4810      	ldr	r0, [pc, #64]	; (90001c24 <_ZN8STM32DMA18signalDMAInterruptEv+0x8c>)
90001be2:	6800      	ldr	r0, [r0, #0]
90001be4:	2800      	cmp	r0, #0
90001be6:	d1e6      	bne.n	90001bb6 <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001be8:	7a20      	ldrb	r0, [r4, #8]
90001bea:	2800      	cmp	r0, #0
90001bec:	d1e3      	bne.n	90001bb6 <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001bee:	7aa0      	ldrb	r0, [r4, #10]
90001bf0:	2800      	cmp	r0, #0
90001bf2:	d1e0      	bne.n	90001bb6 <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001bf4:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
90001bf6:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        isRunning = true;
90001bfa:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001bfc:	eb02 1000 	add.w	r0, r2, r0, lsl #4
    }
90001c00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001c04:	f7ff be5e 	b.w	900018c4 <DMA2D_CopyBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001c08:	4904      	ldr	r1, [pc, #16]	; (90001c1c <_ZN8STM32DMA18signalDMAInterruptEv+0x84>)
            isRunning = false;
90001c0a:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001c0c:	4b04      	ldr	r3, [pc, #16]	; (90001c20 <_ZN8STM32DMA18signalDMAInterruptEv+0x88>)
90001c0e:	6808      	ldr	r0, [r1, #0]
            isRunning = false;
90001c10:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001c12:	eb03 1000 	add.w	r0, r3, r0, lsl #4
90001c16:	f7ff fe9b 	bl	90001950 <DMA2D_ExternalJobCompleted>
90001c1a:	e7cf      	b.n	90001bbc <_ZN8STM32DMA18signalDMAInterruptEv+0x24>
90001c1c:	24000188 	.word	0x24000188
90001c20:	24000008 	.word	0x24000008
90001c24:	24000184 	.word	0x24000184

90001c28 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
90001c28:	b538      	push	{r3, r4, r5, lr}
    switch (format)
90001c2a:	7f8b      	ldrb	r3, [r1, #30]
90001c2c:	2b0a      	cmp	r3, #10
90001c2e:	d83e      	bhi.n	90001cae <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x86>
90001c30:	e8df f003 	tbb	[pc, r3]
90001c34:	3d2a063b 	.word	0x3d2a063b
90001c38:	063d3d3d 	.word	0x063d3d3d
90001c3c:	0606      	.short	0x0606
90001c3e:	06          	.byte	0x06
90001c3f:	00          	.byte	0x00
90001c40:	2401      	movs	r4, #1

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001c42:	f8b1 c014 	ldrh.w	ip, [r1, #20]
90001c46:	8ac8      	ldrh	r0, [r1, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001c48:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001c4a:	4b1c      	ldr	r3, [pc, #112]	; (90001cbc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001c4c:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001c50:	eba2 020c 	sub.w	r2, r2, ip
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001c54:	635c      	str	r4, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001c56:	6458      	str	r0, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c58:	6908      	ldr	r0, [r1, #16]
90001c5a:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001c5c:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
90001c5e:	680d      	ldr	r5, [r1, #0]
90001c60:	2d08      	cmp	r5, #8
90001c62:	d013      	beq.n	90001c8c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x64>
    {
        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, 0);
90001c64:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90001c66:	61dc      	str	r4, [r3, #28]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
90001c68:	4c15      	ldr	r4, [pc, #84]	; (90001cc0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
        WRITE_REG(DMA2D->FGOR, 0);
90001c6a:	611a      	str	r2, [r3, #16]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
90001c6c:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90001c6e:	0a0a      	lsrs	r2, r1, #8
90001c70:	0948      	lsrs	r0, r1, #5
90001c72:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90001c76:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90001c7a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90001c7e:	4302      	orrs	r2, r0
90001c80:	430a      	orrs	r2, r1
90001c82:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
90001c84:	601c      	str	r4, [r3, #0]
    }
}
90001c86:	bd38      	pop	{r3, r4, r5, pc}
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90001c88:	2400      	movs	r4, #0
90001c8a:	e7da      	b.n	90001c42 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001c8c:	619a      	str	r2, [r3, #24]
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001c8e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c90:	625c      	str	r4, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001c92:	4a0c      	ldr	r2, [pc, #48]	; (90001cc4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x9c>)
90001c94:	7f0c      	ldrb	r4, [r1, #28]
90001c96:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
90001c9a:	4c0b      	ldr	r4, [pc, #44]	; (90001cc8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa0>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001c9c:	61da      	str	r2, [r3, #28]
90001c9e:	68ca      	ldr	r2, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90001ca0:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001ca2:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001ca4:	60d8      	str	r0, [r3, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
90001ca6:	601c      	str	r4, [r3, #0]
}
90001ca8:	bd38      	pop	{r3, r4, r5, pc}
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90001caa:	2402      	movs	r4, #2
90001cac:	e7c9      	b.n	90001c42 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        assert(0 && "Unsupported Format!");
90001cae:	4b07      	ldr	r3, [pc, #28]	; (90001ccc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa4>)
90001cb0:	2187      	movs	r1, #135	; 0x87
90001cb2:	4a07      	ldr	r2, [pc, #28]	; (90001cd0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>)
90001cb4:	4807      	ldr	r0, [pc, #28]	; (90001cd4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xac>)
90001cb6:	f024 fb03 	bl	900262c0 <__assert_func>
90001cba:	bf00      	nop
90001cbc:	52001000 	.word	0x52001000
90001cc0:	00030201 	.word	0x00030201
90001cc4:	00010009 	.word	0x00010009
90001cc8:	00020201 	.word	0x00020201
90001ccc:	90027aa4 	.word	0x90027aa4
90001cd0:	90027ac0 	.word	0x90027ac0
90001cd4:	90027b0c 	.word	0x90027b0c

90001cd8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
90001cd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
90001cda:	f891 e01d 	ldrb.w	lr, [r1, #29]
    switch (format)
90001cde:	f1be 0f0b 	cmp.w	lr, #11
90001ce2:	f200 80c1 	bhi.w	90001e68 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>
90001ce6:	e8df f01e 	tbh	[pc, lr, lsl #1]
90001cea:	0063      	.short	0x0063
90001cec:	004c0065 	.word	0x004c0065
90001cf0:	00bf00bf 	.word	0x00bf00bf
90001cf4:	00bf00bf 	.word	0x00bf00bf
90001cf8:	000c000c 	.word	0x000c000c
90001cfc:	000c000c 	.word	0x000c000c
90001d00:	000c      	.short	0x000c
        dma2dColorMode = DMA2D_INPUT_L8;
90001d02:	2505      	movs	r5, #5
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
90001d04:	f891 c01e 	ldrb.w	ip, [r1, #30]
    switch (format)
90001d08:	f1bc 0f0b 	cmp.w	ip, #11
90001d0c:	f200 80ac 	bhi.w	90001e68 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>
90001d10:	e8df f00c 	tbb	[pc, ip]
90001d14:	aa0e4b52 	.word	0xaa0e4b52
90001d18:	06aaaaaa 	.word	0x06aaaaaa
90001d1c:	06060606 	.word	0x06060606
    switch (format)
90001d20:	f1ac 0307 	sub.w	r3, ip, #7
90001d24:	2b03      	cmp	r3, #3
90001d26:	f200 80a5 	bhi.w	90001e74 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>
90001d2a:	2605      	movs	r6, #5
90001d2c:	2701      	movs	r7, #1
90001d2e:	e001      	b.n	90001d34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90001d30:	2600      	movs	r6, #0
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90001d32:	4637      	mov	r7, r6
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001d34:	8a8b      	ldrh	r3, [r1, #20]
90001d36:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001d38:	8b0c      	ldrh	r4, [r1, #24]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001d3a:	8ac8      	ldrh	r0, [r1, #22]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001d3c:	1ad2      	subs	r2, r2, r3
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001d3e:	1ae4      	subs	r4, r4, r3
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001d40:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001d44:	4b52      	ldr	r3, [pc, #328]	; (90001e90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001d46:	641a      	str	r2, [r3, #64]	; 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001d48:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001d4a:	611c      	str	r4, [r3, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90001d4c:	684a      	ldr	r2, [r1, #4]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001d4e:	635f      	str	r7, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001d50:	6458      	str	r0, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001d52:	6908      	ldr	r0, [r1, #16]
90001d54:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90001d56:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
90001d58:	680a      	ldr	r2, [r1, #0]
90001d5a:	2a80      	cmp	r2, #128	; 0x80
90001d5c:	d03b      	beq.n	90001dd6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
90001d5e:	d812      	bhi.n	90001d86 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xae>
90001d60:	2a20      	cmp	r2, #32
90001d62:	d02c      	beq.n	90001dbe <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
90001d64:	2a40      	cmp	r2, #64	; 0x40
90001d66:	d02a      	beq.n	90001dbe <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
90001d68:	2a04      	cmp	r2, #4
90001d6a:	d169      	bne.n	90001e40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001d6c:	7f0a      	ldrb	r2, [r1, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001d6e:	4949      	ldr	r1, [pc, #292]	; (90001e94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001d70:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
90001d74:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
90001d78:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001d7a:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001d7c:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001d7e:	6019      	str	r1, [r3, #0]
}
90001d80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90001d82:	2500      	movs	r5, #0
90001d84:	e7be      	b.n	90001d04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
    switch (blitOp.operation)
90001d86:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
90001d8a:	d067      	beq.n	90001e5c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x184>
90001d8c:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
90001d90:	d156      	bne.n	90001e40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001d92:	7f0c      	ldrb	r4, [r1, #28]
90001d94:	4a40      	ldr	r2, [pc, #256]	; (90001e98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c0>)
90001d96:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
90001d9a:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001d9c:	4a3d      	ldr	r2, [pc, #244]	; (90001e94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
90001d9e:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90001da0:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001da2:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001da4:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001da6:	601a      	str	r2, [r3, #0]
}
90001da8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (format)
90001daa:	2601      	movs	r6, #1
90001dac:	4637      	mov	r7, r6
90001dae:	e7c1      	b.n	90001d34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
90001db0:	2502      	movs	r5, #2
90001db2:	e7a7      	b.n	90001d04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
        dma2dColorMode = DMA2D_INPUT_RGB888;
90001db4:	2501      	movs	r5, #1
90001db6:	e7a5      	b.n	90001d04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
        dma2dColorMode = DMA2D_INPUT_RGB565;
90001db8:	2602      	movs	r6, #2
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90001dba:	4637      	mov	r7, r6
90001dbc:	e7ba      	b.n	90001d34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001dbe:	7f0b      	ldrb	r3, [r1, #28]
90001dc0:	4a33      	ldr	r2, [pc, #204]	; (90001e90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001dc2:	ea45 6303 	orr.w	r3, r5, r3, lsl #24
90001dc6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90001dca:	61d3      	str	r3, [r2, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001dcc:	4b31      	ldr	r3, [pc, #196]	; (90001e94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001dce:	6256      	str	r6, [r2, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001dd0:	6150      	str	r0, [r2, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001dd2:	6013      	str	r3, [r2, #0]
}
90001dd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
90001dd6:	688a      	ldr	r2, [r1, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
90001dd8:	1d14      	adds	r4, r2, #4
90001dda:	62dc      	str	r4, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001ddc:	7f0c      	ldrb	r4, [r1, #28]
            switch ((Bitmap::ClutFormat)palette->format)
90001dde:	7811      	ldrb	r1, [r2, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001de0:	ea45 6504 	orr.w	r5, r5, r4, lsl #24
90001de4:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
90001de8:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001dea:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001dec:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
90001dee:	b9b1      	cbnz	r1, 90001e1e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x146>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90001df0:	8851      	ldrh	r1, [r2, #2]
            bool blend = true;
90001df2:	2401      	movs	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90001df4:	69d8      	ldr	r0, [r3, #28]
90001df6:	4a29      	ldr	r2, [pc, #164]	; (90001e9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c4>)
90001df8:	3901      	subs	r1, #1
90001dfa:	4002      	ands	r2, r0
90001dfc:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90001e00:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
90001e02:	4a23      	ldr	r2, [pc, #140]	; (90001e90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001e04:	69d3      	ldr	r3, [r2, #28]
90001e06:	f043 0320 	orr.w	r3, r3, #32
90001e0a:	61d3      	str	r3, [r2, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
90001e0c:	69d3      	ldr	r3, [r2, #28]
90001e0e:	069b      	lsls	r3, r3, #26
90001e10:	d4fc      	bmi.n	90001e0c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
90001e12:	2310      	movs	r3, #16
90001e14:	6093      	str	r3, [r2, #8]
            if (blend)
90001e16:	b324      	cbz	r4, 90001e62 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18a>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001e18:	4b1e      	ldr	r3, [pc, #120]	; (90001e94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
90001e1a:	6013      	str	r3, [r2, #0]
}
90001e1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90001e1e:	2901      	cmp	r1, #1
90001e20:	d12e      	bne.n	90001e80 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001e22:	8851      	ldrh	r1, [r2, #2]
                if (blitOp.alpha == 255)
90001e24:	3cff      	subs	r4, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001e26:	69d8      	ldr	r0, [r3, #28]
90001e28:	4a1c      	ldr	r2, [pc, #112]	; (90001e9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c4>)
90001e2a:	f101 31ff 	add.w	r1, r1, #4294967295
                if (blitOp.alpha == 255)
90001e2e:	bf18      	it	ne
90001e30:	2401      	movne	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001e32:	4002      	ands	r2, r0
90001e34:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90001e38:	f042 0210 	orr.w	r2, r2, #16
90001e3c:	61da      	str	r2, [r3, #28]
                break;
90001e3e:	e7e0      	b.n	90001e02 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12a>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001e40:	7f0a      	ldrb	r2, [r1, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
90001e42:	45e6      	cmp	lr, ip
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001e44:	4b12      	ldr	r3, [pc, #72]	; (90001e90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001e46:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001e4a:	bf14      	ite	ne
90001e4c:	4a14      	ldrne	r2, [pc, #80]	; (90001ea0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c8>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
90001e4e:	f240 2201 	movweq	r2, #513	; 0x201
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001e52:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
90001e56:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
90001e58:	601a      	str	r2, [r3, #0]
}
90001e5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001e5c:	7f0c      	ldrb	r4, [r1, #28]
90001e5e:	4a11      	ldr	r2, [pc, #68]	; (90001ea4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1cc>)
90001e60:	e799      	b.n	90001d96 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbe>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001e62:	4b0f      	ldr	r3, [pc, #60]	; (90001ea0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c8>)
90001e64:	6013      	str	r3, [r2, #0]
}
90001e66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        assert(0 && "Unsupported Format!");
90001e68:	4b0f      	ldr	r3, [pc, #60]	; (90001ea8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d0>)
90001e6a:	2166      	movs	r1, #102	; 0x66
90001e6c:	4a0f      	ldr	r2, [pc, #60]	; (90001eac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d4>)
90001e6e:	4810      	ldr	r0, [pc, #64]	; (90001eb0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001e70:	f024 fa26 	bl	900262c0 <__assert_func>
        assert(0 && "Unsupported Format!");
90001e74:	4b0c      	ldr	r3, [pc, #48]	; (90001ea8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d0>)
90001e76:	2187      	movs	r1, #135	; 0x87
90001e78:	4a0e      	ldr	r2, [pc, #56]	; (90001eb4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1dc>)
90001e7a:	480d      	ldr	r0, [pc, #52]	; (90001eb0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001e7c:	f024 fa20 	bl	900262c0 <__assert_func>
                assert(0 && "Unsupported format");
90001e80:	4b0d      	ldr	r3, [pc, #52]	; (90001eb8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1e0>)
90001e82:	f240 1111 	movw	r1, #273	; 0x111
90001e86:	4a0d      	ldr	r2, [pc, #52]	; (90001ebc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1e4>)
90001e88:	4809      	ldr	r0, [pc, #36]	; (90001eb0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001e8a:	f024 fa19 	bl	900262c0 <__assert_func>
90001e8e:	bf00      	nop
90001e90:	52001000 	.word	0x52001000
90001e94:	00020201 	.word	0x00020201
90001e98:	00020009 	.word	0x00020009
90001e9c:	ffff00ef 	.word	0xffff00ef
90001ea0:	00010201 	.word	0x00010201
90001ea4:	0002000a 	.word	0x0002000a
90001ea8:	90027aa4 	.word	0x90027aa4
90001eac:	90027b50 	.word	0x90027b50
90001eb0:	90027b0c 	.word	0x90027b0c
90001eb4:	90027ac0 	.word	0x90027ac0
90001eb8:	90027b9c 	.word	0x90027b9c
90001ebc:	90027bb8 	.word	0x90027bb8

90001ec0 <DMA2D_XferCpltCallback>:
        dma.signalDMAInterrupt();
90001ec0:	4b25      	ldr	r3, [pc, #148]	; (90001f58 <DMA2D_XferCpltCallback+0x98>)
90001ec2:	4926      	ldr	r1, [pc, #152]	; (90001f5c <DMA2D_XferCpltCallback+0x9c>)
90001ec4:	681b      	ldr	r3, [r3, #0]
    {
90001ec6:	b510      	push	{r4, lr}
90001ec8:	685c      	ldr	r4, [r3, #4]
90001eca:	6823      	ldr	r3, [r4, #0]
90001ecc:	695a      	ldr	r2, [r3, #20]
90001ece:	428a      	cmp	r2, r1
90001ed0:	d120      	bne.n	90001f14 <DMA2D_XferCpltCallback+0x54>
        if (!started_by_external_job)
90001ed2:	f894 2da0 	ldrb.w	r2, [r4, #3488]	; 0xda0
90001ed6:	b192      	cbz	r2, 90001efe <DMA2D_XferCpltCallback+0x3e>
        if (isRunning)
90001ed8:	7a23      	ldrb	r3, [r4, #8]
90001eda:	2b00      	cmp	r3, #0
90001edc:	d132      	bne.n	90001f44 <DMA2D_XferCpltCallback+0x84>
            if (!queue.isEmpty() && isAllowed)
90001ede:	6860      	ldr	r0, [r4, #4]
90001ee0:	6803      	ldr	r3, [r0, #0]
90001ee2:	681b      	ldr	r3, [r3, #0]
90001ee4:	4798      	blx	r3
90001ee6:	4603      	mov	r3, r0
90001ee8:	b998      	cbnz	r0, 90001f12 <DMA2D_XferCpltCallback+0x52>
90001eea:	7a62      	ldrb	r2, [r4, #9]
90001eec:	b18a      	cbz	r2, 90001f12 <DMA2D_XferCpltCallback+0x52>
                execute();
90001eee:	6822      	ldr	r2, [r4, #0]
90001ef0:	4620      	mov	r0, r4
                started_by_external_job = false;
90001ef2:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
                execute();
90001ef6:	6a53      	ldr	r3, [r2, #36]	; 0x24
    }
90001ef8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001efc:	4718      	bx	r3
            executeCompleted();
90001efe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90001f00:	4620      	mov	r0, r4
90001f02:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning && !isReserved)
90001f04:	4916      	ldr	r1, [pc, #88]	; (90001f60 <DMA2D_XferCpltCallback+0xa0>)
90001f06:	4a17      	ldr	r2, [pc, #92]	; (90001f64 <DMA2D_XferCpltCallback+0xa4>)
90001f08:	680b      	ldr	r3, [r1, #0]
90001f0a:	011b      	lsls	r3, r3, #4
90001f0c:	5cd3      	ldrb	r3, [r2, r3]
90001f0e:	2b01      	cmp	r3, #1
90001f10:	d004      	beq.n	90001f1c <DMA2D_XferCpltCallback+0x5c>
90001f12:	bd10      	pop	{r4, pc}
90001f14:	4620      	mov	r0, r4
90001f16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001f1a:	4710      	bx	r2
90001f1c:	4812      	ldr	r0, [pc, #72]	; (90001f68 <DMA2D_XferCpltCallback+0xa8>)
90001f1e:	6800      	ldr	r0, [r0, #0]
90001f20:	2800      	cmp	r0, #0
90001f22:	d1f6      	bne.n	90001f12 <DMA2D_XferCpltCallback+0x52>
90001f24:	7a20      	ldrb	r0, [r4, #8]
90001f26:	2800      	cmp	r0, #0
90001f28:	d1f3      	bne.n	90001f12 <DMA2D_XferCpltCallback+0x52>
90001f2a:	7aa0      	ldrb	r0, [r4, #10]
90001f2c:	2800      	cmp	r0, #0
90001f2e:	d1f0      	bne.n	90001f12 <DMA2D_XferCpltCallback+0x52>
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001f30:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
90001f32:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        isRunning = true;
90001f36:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001f38:	eb02 1000 	add.w	r0, r2, r0, lsl #4
90001f3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001f40:	f7ff bcc0 	b.w	900018c4 <DMA2D_CopyBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001f44:	4906      	ldr	r1, [pc, #24]	; (90001f60 <DMA2D_XferCpltCallback+0xa0>)
            isRunning = false;
90001f46:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001f48:	4b06      	ldr	r3, [pc, #24]	; (90001f64 <DMA2D_XferCpltCallback+0xa4>)
90001f4a:	6808      	ldr	r0, [r1, #0]
            isRunning = false;
90001f4c:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001f4e:	eb03 1000 	add.w	r0, r3, r0, lsl #4
90001f52:	f7ff fcfd 	bl	90001950 <DMA2D_ExternalJobCompleted>
90001f56:	e7c2      	b.n	90001ede <DMA2D_XferCpltCallback+0x1e>
90001f58:	240235ac 	.word	0x240235ac
90001f5c:	90001b99 	.word	0x90001b99
90001f60:	24000188 	.word	0x24000188
90001f64:	24000008 	.word	0x24000008
90001f68:	24000184 	.word	0x24000184

90001f6c <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
90001f6c:	b570      	push	{r4, r5, r6, lr}
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001f6e:	4b10      	ldr	r3, [pc, #64]	; (90001fb0 <_ZN8STM32DMAC1Ev+0x44>)
STM32DMA::STM32DMA()
90001f70:	4606      	mov	r6, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001f72:	4604      	mov	r4, r0
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
90001f74:	2500      	movs	r5, #0
90001f76:	300c      	adds	r0, #12
90001f78:	2260      	movs	r2, #96	; 0x60
90001f7a:	7235      	strb	r5, [r6, #8]
90001f7c:	7275      	strb	r5, [r6, #9]
90001f7e:	6070      	str	r0, [r6, #4]
90001f80:	f844 3b20 	str.w	r3, [r4], #32
90001f84:	4621      	mov	r1, r4
90001f86:	f00f f91b 	bl	900111c0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
90001f8a:	4621      	mov	r1, r4
90001f8c:	f506 635a 	add.w	r3, r6, #3488	; 0xda0
        : color(0)
90001f90:	60cd      	str	r5, [r1, #12]
90001f92:	3124      	adds	r1, #36	; 0x24
90001f94:	428b      	cmp	r3, r1
90001f96:	d1fb      	bne.n	90001f90 <_ZN8STM32DMAC1Ev+0x24>
90001f98:	f886 5da0 	strb.w	r5, [r6, #3488]	; 0xda0
    mutexIsRunning = MUTEX_CREATE();
90001f9c:	2000      	movs	r0, #0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001f9e:	f8c6 5da4 	str.w	r5, [r6, #3492]	; 0xda4
    mutexIsRunning = MUTEX_CREATE();
90001fa2:	f00a ffcd 	bl	9000cf40 <osMutexNew>
90001fa6:	4603      	mov	r3, r0
}
90001fa8:	4630      	mov	r0, r6
    mutexIsRunning = MUTEX_CREATE();
90001faa:	f8c6 3da4 	str.w	r3, [r6, #3492]	; 0xda4
}
90001fae:	bd70      	pop	{r4, r5, r6, pc}
90001fb0:	90027c00 	.word	0x90027c00

90001fb4 <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90001fb4:	4a03      	ldr	r2, [pc, #12]	; (90001fc4 <_ZN8touchgfx5paint8tearDownEv+0x10>)
90001fb6:	6813      	ldr	r3, [r2, #0]
90001fb8:	07db      	lsls	r3, r3, #31
90001fba:	d4fc      	bmi.n	90001fb6 <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001fbc:	2323      	movs	r3, #35	; 0x23
90001fbe:	6093      	str	r3, [r2, #8]
}
90001fc0:	4770      	bx	lr
90001fc2:	bf00      	nop
90001fc4:	52001000 	.word	0x52001000

90001fc8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
90001fc8:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90001fca:	4c11      	ldr	r4, [pc, #68]	; (90002010 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
90001fcc:	6825      	ldr	r5, [r4, #0]
90001fce:	07ed      	lsls	r5, r5, #31
90001fd0:	d4fc      	bmi.n	90001fcc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001fd2:	2523      	movs	r5, #35	; 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001fd4:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
90001fd6:	2bff      	cmp	r3, #255	; 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001fd8:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001fda:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90001fde:	f04f 0502 	mov.w	r5, #2
90001fe2:	6365      	str	r5, [r4, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001fe4:	6461      	str	r1, [r4, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90001fe6:	63e0      	str	r0, [r4, #60]	; 0x3c
    if (alpha < 0xFF)
90001fe8:	d00b      	beq.n	90002002 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x3a>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001fea:	490a      	ldr	r1, [pc, #40]	; (90002014 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001fec:	6265      	str	r5, [r4, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001fee:	ea41 6303 	orr.w	r3, r1, r3, lsl #24

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90001ff2:	4909      	ldr	r1, [pc, #36]	; (90002018 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001ff4:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->FGCOLR, color);
90001ff6:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
90001ff8:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
90001ffa:	60e0      	str	r0, [r4, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90001ffc:	6021      	str	r1, [r4, #0]
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
90001ffe:	bc30      	pop	{r4, r5}
90002000:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90002002:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
90002004:	9a02      	ldr	r2, [sp, #8]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90002006:	4b05      	ldr	r3, [pc, #20]	; (9000201c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x54>)
        WRITE_REG(DMA2D->OCOLR, color565);
90002008:	63a2      	str	r2, [r4, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
9000200a:	6023      	str	r3, [r4, #0]
}
9000200c:	bc30      	pop	{r4, r5}
9000200e:	4770      	bx	lr
90002010:	52001000 	.word	0x52001000
90002014:	00010009 	.word	0x00010009
90002018:	00020001 	.word	0x00020001
9000201c:	00030001 	.word	0x00030001

90002020 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
90002020:	2001      	movs	r0, #1
90002022:	4770      	bx	lr

90002024 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
90002024:	2040      	movs	r0, #64	; 0x40
90002026:	4770      	bx	lr

90002028 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
90002028:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
9000202c:	3008      	adds	r0, #8
9000202e:	4770      	bx	lr

90002030 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
90002030:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
90002034:	3008      	adds	r0, #8
90002036:	4770      	bx	lr

90002038 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002038:	2001      	movs	r0, #1
9000203a:	4770      	bx	lr

9000203c <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
9000203c:	f242 40c4 	movw	r0, #9412	; 0x24c4
90002040:	4770      	bx	lr
90002042:	bf00      	nop

90002044 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002044:	f242 43c4 	movw	r3, #9412	; 0x24c4
90002048:	fb03 0001 	mla	r0, r3, r1, r0
    }
9000204c:	3008      	adds	r0, #8
9000204e:	4770      	bx	lr

90002050 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002050:	f242 43c4 	movw	r3, #9412	; 0x24c4
90002054:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002058:	3008      	adds	r0, #8
9000205a:	4770      	bx	lr

9000205c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
9000205c:	2001      	movs	r0, #1
9000205e:	4770      	bx	lr

90002060 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002060:	2020      	movs	r0, #32
90002062:	4770      	bx	lr

90002064 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002064:	eb00 1041 	add.w	r0, r0, r1, lsl #5
    }
90002068:	3008      	adds	r0, #8
9000206a:	4770      	bx	lr

9000206c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
9000206c:	eb00 1041 	add.w	r0, r0, r1, lsl #5
    }
90002070:	3008      	adds	r0, #8
90002072:	4770      	bx	lr

90002074 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoscreen_game_selectScreenNoTransition();
90002074:	4608      	mov	r0, r1
90002076:	f002 b93b 	b.w	900042f0 <_ZN23FrontendApplicationBase40gotoscreen_game_selectScreenNoTransitionEv>
9000207a:	bf00      	nop

9000207c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
9000207c:	4b03      	ldr	r3, [pc, #12]	; (9000208c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
9000207e:	b510      	push	{r4, lr}
90002080:	4604      	mov	r4, r0
90002082:	6003      	str	r3, [r0, #0]
90002084:	f00d fee9 	bl	9000fe5a <_ZN8touchgfx17AbstractPartitionD1Ev>
90002088:	4620      	mov	r0, r4
9000208a:	bd10      	pop	{r4, pc}
9000208c:	90027cb8 	.word	0x90027cb8

90002090 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
90002090:	4b05      	ldr	r3, [pc, #20]	; (900020a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev+0x18>)
90002092:	b510      	push	{r4, lr}
90002094:	4604      	mov	r4, r0
90002096:	6003      	str	r3, [r0, #0]
90002098:	f00d fedf 	bl	9000fe5a <_ZN8touchgfx17AbstractPartitionD1Ev>
9000209c:	2148      	movs	r1, #72	; 0x48
9000209e:	4620      	mov	r0, r4
900020a0:	f024 f8df 	bl	90026262 <_ZdlPvj>
900020a4:	4620      	mov	r0, r4
900020a6:	bd10      	pop	{r4, pc}
900020a8:	90027cb8 	.word	0x90027cb8

900020ac <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
900020ac:	4b03      	ldr	r3, [pc, #12]	; (900020bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
900020ae:	b510      	push	{r4, lr}
900020b0:	4604      	mov	r4, r0
900020b2:	6003      	str	r3, [r0, #0]
900020b4:	f00d fed1 	bl	9000fe5a <_ZN8touchgfx17AbstractPartitionD1Ev>
900020b8:	4620      	mov	r0, r4
900020ba:	bd10      	pop	{r4, pc}
900020bc:	90027c84 	.word	0x90027c84

900020c0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
900020c0:	4b06      	ldr	r3, [pc, #24]	; (900020dc <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x1c>)
900020c2:	b510      	push	{r4, lr}
900020c4:	4604      	mov	r4, r0
900020c6:	6003      	str	r3, [r0, #0]
900020c8:	f00d fec7 	bl	9000fe5a <_ZN8touchgfx17AbstractPartitionD1Ev>
900020cc:	f242 41cc 	movw	r1, #9420	; 0x24cc
900020d0:	4620      	mov	r0, r4
900020d2:	f024 f8c6 	bl	90026262 <_ZdlPvj>
900020d6:	4620      	mov	r0, r4
900020d8:	bd10      	pop	{r4, pc}
900020da:	bf00      	nop
900020dc:	90027c84 	.word	0x90027c84

900020e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
900020e0:	4b03      	ldr	r3, [pc, #12]	; (900020f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
900020e2:	b510      	push	{r4, lr}
900020e4:	4604      	mov	r4, r0
900020e6:	6003      	str	r3, [r0, #0]
900020e8:	f00d feb7 	bl	9000fe5a <_ZN8touchgfx17AbstractPartitionD1Ev>
900020ec:	4620      	mov	r0, r4
900020ee:	bd10      	pop	{r4, pc}
900020f0:	90027c50 	.word	0x90027c50

900020f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
900020f4:	4b05      	ldr	r3, [pc, #20]	; (9000210c <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
900020f6:	b510      	push	{r4, lr}
900020f8:	4604      	mov	r4, r0
900020fa:	6003      	str	r3, [r0, #0]
900020fc:	f00d fead 	bl	9000fe5a <_ZN8touchgfx17AbstractPartitionD1Ev>
90002100:	2128      	movs	r1, #40	; 0x28
90002102:	4620      	mov	r0, r4
90002104:	f024 f8ad 	bl	90026262 <_ZdlPvj>
90002108:	4620      	mov	r0, r4
9000210a:	bd10      	pop	{r4, pc}
9000210c:	90027c50 	.word	0x90027c50

90002110 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
90002110:	b510      	push	{r4, lr}
90002112:	4604      	mov	r4, r0
90002114:	490c      	ldr	r1, [pc, #48]	; (90002148 <_ZN12FrontendHeapD1Ev+0x38>)
90002116:	4a0d      	ldr	r2, [pc, #52]	; (9000214c <_ZN12FrontendHeapD1Ev+0x3c>)
90002118:	f242 5008 	movw	r0, #9480	; 0x2508
9000211c:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
90002120:	6021      	str	r1, [r4, #0]
90002122:	4420      	add	r0, r4
90002124:	f8c3 2508 	str.w	r2, [r3, #1288]	; 0x508
90002128:	f00d fe97 	bl	9000fe5a <_ZN8touchgfx17AbstractPartitionD1Ev>
9000212c:	4620      	mov	r0, r4
9000212e:	4b08      	ldr	r3, [pc, #32]	; (90002150 <_ZN12FrontendHeapD1Ev+0x40>)
90002130:	f840 3f3c 	str.w	r3, [r0, #60]!
90002134:	f00d fe91 	bl	9000fe5a <_ZN8touchgfx17AbstractPartitionD1Ev>
90002138:	4620      	mov	r0, r4
9000213a:	4b06      	ldr	r3, [pc, #24]	; (90002154 <_ZN12FrontendHeapD1Ev+0x44>)
9000213c:	f840 3f14 	str.w	r3, [r0, #20]!
90002140:	f00d fe8b 	bl	9000fe5a <_ZN8touchgfx17AbstractPartitionD1Ev>
90002144:	4620      	mov	r0, r4
90002146:	bd10      	pop	{r4, pc}
90002148:	90027cec 	.word	0x90027cec
9000214c:	90027cb8 	.word	0x90027cb8
90002150:	90027c84 	.word	0x90027c84
90002154:	90027c50 	.word	0x90027c50

90002158 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
90002158:	b510      	push	{r4, lr}
class FrontendHeap : public FrontendHeapBase
9000215a:	4c0c      	ldr	r4, [pc, #48]	; (9000218c <__tcf_0+0x34>)
9000215c:	4a0c      	ldr	r2, [pc, #48]	; (90002190 <__tcf_0+0x38>)
9000215e:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
90002162:	490c      	ldr	r1, [pc, #48]	; (90002194 <__tcf_0+0x3c>)
90002164:	480c      	ldr	r0, [pc, #48]	; (90002198 <__tcf_0+0x40>)
90002166:	f8c3 2508 	str.w	r2, [r3, #1288]	; 0x508
9000216a:	6021      	str	r1, [r4, #0]
9000216c:	f00d fe75 	bl	9000fe5a <_ZN8touchgfx17AbstractPartitionD1Ev>
90002170:	4620      	mov	r0, r4
90002172:	4b0a      	ldr	r3, [pc, #40]	; (9000219c <__tcf_0+0x44>)
90002174:	f840 3f3c 	str.w	r3, [r0, #60]!
90002178:	f00d fe6f 	bl	9000fe5a <_ZN8touchgfx17AbstractPartitionD1Ev>
9000217c:	4620      	mov	r0, r4
9000217e:	4b08      	ldr	r3, [pc, #32]	; (900021a0 <__tcf_0+0x48>)
        static FrontendHeap instance;
90002180:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002184:	f840 3f14 	str.w	r3, [r0, #20]!
90002188:	f00d be67 	b.w	9000fe5a <_ZN8touchgfx17AbstractPartitionD1Ev>
9000218c:	24005bdc 	.word	0x24005bdc
90002190:	90027cb8 	.word	0x90027cb8
90002194:	90027cec 	.word	0x90027cec
90002198:	240080e4 	.word	0x240080e4
9000219c:	90027c84 	.word	0x90027c84
900021a0:	90027c50 	.word	0x90027c50

900021a4 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
900021a4:	b510      	push	{r4, lr}
900021a6:	4604      	mov	r4, r0
900021a8:	4a0f      	ldr	r2, [pc, #60]	; (900021e8 <_ZN12FrontendHeapD0Ev+0x44>)
900021aa:	4910      	ldr	r1, [pc, #64]	; (900021ec <_ZN12FrontendHeapD0Ev+0x48>)
900021ac:	f242 5008 	movw	r0, #9480	; 0x2508
900021b0:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
900021b4:	6021      	str	r1, [r4, #0]
900021b6:	4420      	add	r0, r4
900021b8:	f8c3 2508 	str.w	r2, [r3, #1288]	; 0x508
900021bc:	f00d fe4d 	bl	9000fe5a <_ZN8touchgfx17AbstractPartitionD1Ev>
900021c0:	4620      	mov	r0, r4
900021c2:	4b0b      	ldr	r3, [pc, #44]	; (900021f0 <_ZN12FrontendHeapD0Ev+0x4c>)
900021c4:	f840 3f3c 	str.w	r3, [r0, #60]!
900021c8:	f00d fe47 	bl	9000fe5a <_ZN8touchgfx17AbstractPartitionD1Ev>
900021cc:	4b09      	ldr	r3, [pc, #36]	; (900021f4 <_ZN12FrontendHeapD0Ev+0x50>)
900021ce:	4620      	mov	r0, r4
900021d0:	f840 3f14 	str.w	r3, [r0, #20]!
900021d4:	f00d fe41 	bl	9000fe5a <_ZN8touchgfx17AbstractPartitionD1Ev>
900021d8:	4620      	mov	r0, r4
900021da:	f242 61b0 	movw	r1, #9904	; 0x26b0
900021de:	f024 f840 	bl	90026262 <_ZdlPvj>
900021e2:	4620      	mov	r0, r4
900021e4:	bd10      	pop	{r4, pc}
900021e6:	bf00      	nop
900021e8:	90027cb8 	.word	0x90027cb8
900021ec:	90027cec 	.word	0x90027cec
900021f0:	90027c84 	.word	0x90027c84
900021f4:	90027c50 	.word	0x90027c50

900021f8 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
900021f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900021fc:	b082      	sub	sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
900021fe:	2400      	movs	r4, #0
90002200:	f001 fb06 	bl	90003810 <_ZN14BitmapDatabase11getInstanceEv>
90002204:	4605      	mov	r5, r0
90002206:	f001 fb07 	bl	90003818 <_ZN14BitmapDatabase15getInstanceSizeEv>
9000220a:	4623      	mov	r3, r4
9000220c:	4601      	mov	r1, r0
9000220e:	4622      	mov	r2, r4
90002210:	4628      	mov	r0, r5
90002212:	9400      	str	r4, [sp, #0]
90002214:	f016 f804 	bl	90018220 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
90002218:	4b29      	ldr	r3, [pc, #164]	; (900022c0 <touchgfx_init+0xc8>)
9000221a:	4a2a      	ldr	r2, [pc, #168]	; (900022c4 <touchgfx_init+0xcc>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
9000221c:	4620      	mov	r0, r4
        static FrontendHeap instance;
9000221e:	4c2a      	ldr	r4, [pc, #168]	; (900022c8 <touchgfx_init+0xd0>)
90002220:	601a      	str	r2, [r3, #0]
90002222:	f002 fa35 	bl	90004690 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
90002226:	4829      	ldr	r0, [pc, #164]	; (900022cc <touchgfx_init+0xd4>)
90002228:	f015 ff62 	bl	900180f0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
9000222c:	6823      	ldr	r3, [r4, #0]
9000222e:	f3bf 8f5b 	dmb	ish
90002232:	07db      	lsls	r3, r3, #31
90002234:	d505      	bpl.n	90002242 <touchgfx_init+0x4a>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
90002236:	4826      	ldr	r0, [pc, #152]	; (900022d0 <touchgfx_init+0xd8>)
}
90002238:	b002      	add	sp, #8
9000223a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
9000223e:	f7fe bb47 	b.w	900008d0 <_ZN11TouchGFXHAL10initializeEv>
90002242:	4620      	mov	r0, r4
90002244:	f024 f80f 	bl	90026266 <__cxa_guard_acquire>
90002248:	2800      	cmp	r0, #0
9000224a:	d0f4      	beq.n	90002236 <touchgfx_init+0x3e>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
9000224c:	4d21      	ldr	r5, [pc, #132]	; (900022d4 <touchgfx_init+0xdc>)
          screenStorage(scr),
          transitionStorage(tra),
9000224e:	4f22      	ldr	r7, [pc, #136]	; (900022d8 <touchgfx_init+0xe0>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
90002250:	4b22      	ldr	r3, [pc, #136]	; (900022dc <touchgfx_init+0xe4>)
        : presenterStorage(pres),
90002252:	f105 0014 	add.w	r0, r5, #20
          frontendApplication(app)
90002256:	f107 064c 	add.w	r6, r7, #76	; 0x4c
          screenStorage(scr),
9000225a:	f105 083c 	add.w	r8, r5, #60	; 0x3c
9000225e:	602b      	str	r3, [r5, #0]
          transitionStorage(tra),
90002260:	60ef      	str	r7, [r5, #12]
        : presenterStorage(pres),
90002262:	6068      	str	r0, [r5, #4]
          frontendApplication(app)
90002264:	612e      	str	r6, [r5, #16]
          screenStorage(scr),
90002266:	f8c5 8008 	str.w	r8, [r5, #8]
9000226a:	f00d fdf7 	bl	9000fe5c <_ZN8touchgfx17AbstractPartitionC1Ev>
9000226e:	4b1c      	ldr	r3, [pc, #112]	; (900022e0 <touchgfx_init+0xe8>)
90002270:	4640      	mov	r0, r8
90002272:	616b      	str	r3, [r5, #20]
90002274:	f00d fdf2 	bl	9000fe5c <_ZN8touchgfx17AbstractPartitionC1Ev>
90002278:	4b1a      	ldr	r3, [pc, #104]	; (900022e4 <touchgfx_init+0xec>)
9000227a:	4638      	mov	r0, r7
9000227c:	63eb      	str	r3, [r5, #60]	; 0x3c
9000227e:	f00d fded 	bl	9000fe5c <_ZN8touchgfx17AbstractPartitionC1Ev>
90002282:	f505 5300 	add.w	r3, r5, #8192	; 0x2000
90002286:	4a18      	ldr	r2, [pc, #96]	; (900022e8 <touchgfx_init+0xf0>)
90002288:	f503 60aa 	add.w	r0, r3, #1360	; 0x550
9000228c:	f8c3 2508 	str.w	r2, [r3, #1288]	; 0x508
90002290:	f003 fb2c 	bl	900058ec <_ZN5ModelC1Ev>
90002294:	462a      	mov	r2, r5
90002296:	f107 0148 	add.w	r1, r7, #72	; 0x48
9000229a:	4630      	mov	r0, r6
9000229c:	f003 fb0c 	bl	900058b8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
900022a0:	4630      	mov	r0, r6
900022a2:	f002 f825 	bl	900042f0 <_ZN23FrontendApplicationBase40gotoscreen_game_selectScreenNoTransitionEv>
        static FrontendHeap instance;
900022a6:	4811      	ldr	r0, [pc, #68]	; (900022ec <touchgfx_init+0xf4>)
900022a8:	f024 f828 	bl	900262fc <atexit>
900022ac:	4620      	mov	r0, r4
900022ae:	f023 ffe6 	bl	9002627e <__cxa_guard_release>
900022b2:	4807      	ldr	r0, [pc, #28]	; (900022d0 <touchgfx_init+0xd8>)
}
900022b4:	b002      	add	sp, #8
900022b6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
900022ba:	f7fe bb09 	b.w	900008d0 <_ZN11TouchGFXHAL10initializeEv>
900022be:	bf00      	nop
900022c0:	24023610 	.word	0x24023610
900022c4:	240090c0 	.word	0x240090c0
900022c8:	24005bd8 	.word	0x24005bd8
900022cc:	2400002c 	.word	0x2400002c
900022d0:	24009038 	.word	0x24009038
900022d4:	24005bdc 	.word	0x24005bdc
900022d8:	240080e4 	.word	0x240080e4
900022dc:	90027cec 	.word	0x90027cec
900022e0:	90027c50 	.word	0x90027c50
900022e4:	90027c84 	.word	0x90027c84
900022e8:	90027cb8 	.word	0x90027cb8
900022ec:	90002159 	.word	0x90002159

900022f0 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
900022f0:	4770      	bx	lr
900022f2:	bf00      	nop

900022f4 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
900022f4:	4801      	ldr	r0, [pc, #4]	; (900022fc <touchgfx_taskEntry+0x8>)
900022f6:	f7fe bab1 	b.w	9000085c <_ZN11TouchGFXHAL9taskEntryEv>
900022fa:	bf00      	nop
900022fc:	24009038 	.word	0x24009038

90002300 <_GLOBAL__sub_I_touchgfx_init>:
}
90002300:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
90002302:	4b25      	ldr	r3, [pc, #148]	; (90002398 <_GLOBAL__sub_I_touchgfx_init+0x98>)
90002304:	4c25      	ldr	r4, [pc, #148]	; (9000239c <_GLOBAL__sub_I_touchgfx_init+0x9c>)
static STM32DMA dma;
90002306:	4e26      	ldr	r6, [pc, #152]	; (900023a0 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
static LCD16bpp display;
90002308:	4d26      	ldr	r5, [pc, #152]	; (900023a4 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
9000230a:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
9000230c:	4630      	mov	r0, r6
9000230e:	f7ff fe2d 	bl	90001f6c <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
90002312:	4628      	mov	r0, r5
90002314:	f01a fa5c 	bl	9001c7d0 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
90002318:	4b23      	ldr	r3, [pc, #140]	; (900023a8 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
          mcuInstrumentation(0),
9000231a:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
9000231c:	f44f 70f0 	mov.w	r0, #480	; 0x1e0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002320:	f44f 7188 	mov.w	r1, #272	; 0x110
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
90002324:	62da      	str	r2, [r3, #44]	; 0x2c
90002326:	861a      	strh	r2, [r3, #48]	; 0x30
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
90002328:	655a      	str	r2, [r3, #84]	; 0x54
          useAuxiliaryLCD(false),
9000232a:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
          lastY(0),
9000232e:	665a      	str	r2, [r3, #100]	; 0x64
          vSyncCompensationEnabled(false),
90002330:	66da      	str	r2, [r3, #108]	; 0x6c
          updateMCULoad(0),
90002332:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
          mcuInstrumentation(0),
90002336:	e9c3 4203 	strd	r4, r2, [r3, #12]
          touchSampleRate(1),
9000233a:	4c1c      	ldr	r4, [pc, #112]	; (900023ac <_GLOBAL__sub_I_touchgfx_init+0xac>)
9000233c:	669c      	str	r4, [r3, #104]	; 0x68
        instance = this;
9000233e:	4c1c      	ldr	r4, [pc, #112]	; (900023b0 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
90002340:	6023      	str	r3, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002342:	4c1c      	ldr	r4, [pc, #112]	; (900023b4 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
90002344:	8020      	strh	r0, [r4, #0]
90002346:	4c1c      	ldr	r4, [pc, #112]	; (900023b8 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
90002348:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
9000234a:	4c1c      	ldr	r4, [pc, #112]	; (900023bc <_GLOBAL__sub_I_touchgfx_init+0xbc>)
9000234c:	481c      	ldr	r0, [pc, #112]	; (900023c0 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
9000234e:	8021      	strh	r1, [r4, #0]
90002350:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
90002352:	4c1c      	ldr	r4, [pc, #112]	; (900023c4 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
90002354:	491c      	ldr	r1, [pc, #112]	; (900023c8 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002356:	481d      	ldr	r0, [pc, #116]	; (900023cc <_GLOBAL__sub_I_touchgfx_init+0xcc>)
          lcdRef(display),
90002358:	e9c3 6501 	strd	r6, r5, [r3, #4]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
9000235c:	f44f 7580 	mov.w	r5, #256	; 0x100
          frameBufferAllocator(0),
90002360:	e9c3 2205 	strd	r2, r2, [r3, #20]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002364:	649d      	str	r5, [r3, #72]	; 0x48
            : startX(0),
90002366:	e9c3 2207 	strd	r2, r2, [r3, #28]
        : drag(), listener(0), dragThresholdValue(0)
9000236a:	e9c3 2209 	strd	r2, r2, [r3, #36]	; 0x24
          frameBuffer0(0),
9000236e:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
90002372:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
90002376:	e9c3 2213 	strd	r2, r2, [r3, #76]	; 0x4c
          lastX(0),
9000237a:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
        DISPLAY_ROTATION = rotate0;
9000237e:	7022      	strb	r2, [r4, #0]
90002380:	6019      	str	r1, [r3, #0]
90002382:	4913      	ldr	r1, [pc, #76]	; (900023d0 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
        : cc_consumed(0),
90002384:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
90002388:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          cc_in(0)
9000238c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
90002390:	67d9      	str	r1, [r3, #124]	; 0x7c
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002392:	e9c3 201d 	strd	r2, r0, [r3, #116]	; 0x74
}
90002396:	bd70      	pop	{r4, r5, r6, pc}
90002398:	90027454 	.word	0x90027454
9000239c:	2400828c 	.word	0x2400828c
900023a0:	24008290 	.word	0x24008290
900023a4:	240090c4 	.word	0x240090c4
900023a8:	24009038 	.word	0x24009038
900023ac:	01000001 	.word	0x01000001
900023b0:	240235ac 	.word	0x240235ac
900023b4:	240235a0 	.word	0x240235a0
900023b8:	240235a6 	.word	0x240235a6
900023bc:	240235a2 	.word	0x240235a2
900023c0:	240235a8 	.word	0x240235a8
900023c4:	240235a4 	.word	0x240235a4
900023c8:	900275e4 	.word	0x900275e4
900023cc:	01010000 	.word	0x01010000
900023d0:	9002742c 	.word	0x9002742c

900023d4 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
900023d4:	4801      	ldr	r0, [pc, #4]	; (900023dc <_GLOBAL__sub_D_touchgfx_init+0x8>)
900023d6:	f7ff bb4b 	b.w	90001a70 <_ZN8STM32DMAD1Ev>
900023da:	bf00      	nop
900023dc:	24008290 	.word	0x24008290

900023e0 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * drawn by the widget.
     */
    virtual void invalidateContent() const
    {
        // Consider checking if *this is in the draw chain
        if (visible)
900023e0:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
900023e4:	b112      	cbz	r2, 900023ec <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
        {
            invalidate();
900023e6:	6803      	ldr	r3, [r0, #0]
900023e8:	695b      	ldr	r3, [r3, #20]
900023ea:	4718      	bx	r3
        }
    }
900023ec:	4770      	bx	lr
900023ee:	bf00      	nop

900023f0 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
900023f0:	2000      	movs	r0, #0
900023f2:	4770      	bx	lr

900023f4 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
900023f4:	8081      	strh	r1, [r0, #4]
    }
900023f6:	4770      	bx	lr

900023f8 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
900023f8:	80c1      	strh	r1, [r0, #6]
    }
900023fa:	4770      	bx	lr

900023fc <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
900023fc:	8101      	strh	r1, [r0, #8]
    }
900023fe:	4770      	bx	lr

90002400 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
90002400:	8141      	strh	r1, [r0, #10]
    }
90002402:	4770      	bx	lr

90002404 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
90002404:	4770      	bx	lr
90002406:	bf00      	nop

90002408 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
90002408:	4770      	bx	lr
9000240a:	bf00      	nop

9000240c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
9000240c:	4770      	bx	lr
9000240e:	bf00      	nop

90002410 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
90002410:	4770      	bx	lr
90002412:	bf00      	nop

90002414 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
90002414:	4770      	bx	lr
90002416:	bf00      	nop

90002418 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
90002418:	f8b0 c006 	ldrh.w	ip, [r0, #6]
9000241c:	6803      	ldr	r3, [r0, #0]
9000241e:	eba2 020c 	sub.w	r2, r2, ip
90002422:	f8b0 c004 	ldrh.w	ip, [r0, #4]
90002426:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90002428:	eba1 010c 	sub.w	r1, r1, ip
9000242c:	b212      	sxth	r2, r2
9000242e:	b209      	sxth	r1, r1
90002430:	4718      	bx	r3
90002432:	bf00      	nop

90002434 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
90002434:	6813      	ldr	r3, [r2, #0]
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002436:	f64f 7cff 	movw	ip, #65535	; 0xffff
        cachedAbsX = UNCACHED_INDICATOR;
9000243a:	f04f 31ff 	mov.w	r1, #4294967295
        cachedVisibleRect.x = UNCACHED_INDICATOR;
9000243e:	f8a0 c00c 	strh.w	ip, [r0, #12]
        nextDrawChainElement = *nextPreviousElement;
90002442:	e9c0 3107 	strd	r3, r1, [r0, #28]
        *nextPreviousElement = this;
90002446:	6010      	str	r0, [r2, #0]
    }
90002448:	4770      	bx	lr
9000244a:	bf00      	nop

9000244c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
9000244c:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
90002450:	b11a      	cbz	r2, 9000245a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
90002452:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
90002456:	b102      	cbz	r2, 9000245a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
90002458:	6018      	str	r0, [r3, #0]
        }
    }
9000245a:	4770      	bx	lr

9000245c <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
9000245c:	2000      	movs	r0, #0
9000245e:	4770      	bx	lr

90002460 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
90002460:	4603      	mov	r3, r0
    {
        widgetWidth = widgetRect.width;
90002462:	888a      	ldrh	r2, [r1, #4]
        return true;
    }
90002464:	2001      	movs	r0, #1
        widgetWidth = widgetRect.width;
90002466:	809a      	strh	r2, [r3, #4]
    }
90002468:	4770      	bx	lr
9000246a:	bf00      	nop

9000246c <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
9000246c:	4770      	bx	lr
9000246e:	bf00      	nop

90002470 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90002470:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
90002474:	4770      	bx	lr
90002476:	bf00      	nop

90002478 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
90002478:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
9000247c:	4770      	bx	lr
9000247e:	bf00      	nop

90002480 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90002480:	f04f 0c00 	mov.w	ip, #0
        return rect.width;
90002484:	688a      	ldr	r2, [r1, #8]
90002486:	f8c0 c000 	str.w	ip, [r0]
9000248a:	6042      	str	r2, [r0, #4]
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
9000248c:	4770      	bx	lr
9000248e:	bf00      	nop

90002490 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
90002490:	2200      	movs	r2, #0
90002492:	6002      	str	r2, [r0, #0]
90002494:	6042      	str	r2, [r0, #4]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
90002496:	4770      	bx	lr

90002498 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
    }

    virtual Bitmap::BitmapFormat framebufferFormat() const
    {
        return Bitmap::RGB565;
    }
90002498:	2000      	movs	r0, #0
9000249a:	4770      	bx	lr

9000249c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000249c:	4b03      	ldr	r3, [pc, #12]	; (900024ac <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
9000249e:	2290      	movs	r2, #144	; 0x90
900024a0:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
900024a4:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
900024a8:	4770      	bx	lr
900024aa:	bf00      	nop
900024ac:	e000e100 	.word	0xe000e100

900024b0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
900024b0:	4a09      	ldr	r2, [pc, #36]	; (900024d8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
900024b2:	490a      	ldr	r1, [pc, #40]	; (900024dc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
900024b4:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
900024b6:	480a      	ldr	r0, [pc, #40]	; (900024e0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
900024b8:	f3c3 030a 	ubfx	r3, r3, #0, #11
900024bc:	3b01      	subs	r3, #1
900024be:	b29b      	uxth	r3, r3
900024c0:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
900024c2:	6911      	ldr	r1, [r2, #16]
900024c4:	f3c1 010a 	ubfx	r1, r1, #0, #11
900024c8:	3901      	subs	r1, #1
900024ca:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
900024cc:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
900024ce:	6b53      	ldr	r3, [r2, #52]	; 0x34
900024d0:	f043 0301 	orr.w	r3, r3, #1
900024d4:	6353      	str	r3, [r2, #52]	; 0x34
}
900024d6:	4770      	bx	lr
900024d8:	50001000 	.word	0x50001000
900024dc:	24009196 	.word	0x24009196
900024e0:	24009194 	.word	0x24009194

900024e4 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    dma.start();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
900024e4:	4b01      	ldr	r3, [pc, #4]	; (900024ec <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
900024e6:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
900024ea:	4770      	bx	lr
900024ec:	50001000 	.word	0x50001000

900024f0 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
900024f0:	4b02      	ldr	r3, [pc, #8]	; (900024fc <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
900024f2:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
900024f4:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
900024f8:	625a      	str	r2, [r3, #36]	; 0x24
}
900024fa:	4770      	bx	lr
900024fc:	50001000 	.word	0x50001000

90002500 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setRGBBufferEPhj>:

    virtual void setRGBBuffer(uint8_t* buffer, size_t sizeOfBuffer)
    {
        // Running in UI thread / main

        bufferRGB = buffer;
90002500:	e9c0 120c 	strd	r1, r2, [r0, #48]	; 0x30
        topBufferRGB = bufferRGB;
90002504:	6381      	str	r1, [r0, #56]	; 0x38
        sizeBufferRGB = sizeOfBuffer;
    }
90002506:	4770      	bx	lr

90002508 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
class DedicatedBufferController : public touchgfx::VideoController
90002508:	4770      	bx	lr
9000250a:	bf00      	nop

9000250c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
        mjpegDecoders[handle]->setVideoData(reader);
9000250c:	eb00 0081 	add.w	r0, r0, r1, lsl #2
90002510:	4611      	mov	r1, r2
90002512:	6840      	ldr	r0, [r0, #4]
90002514:	6803      	ldr	r3, [r0, #0]
90002516:	68db      	ldr	r3, [r3, #12]
90002518:	4718      	bx	r3
9000251a:	bf00      	nop

9000251c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE29setVideoFrameRateCompensationEb>:
        return stream.isPlaying;
    }

    virtual void setVideoFrameRateCompensation(bool allow)
    {
        allowSkipFrames = allow;
9000251c:	f880 103c 	strb.w	r1, [r0, #60]	; 0x3c
    }
90002520:	4770      	bx	lr
90002522:	bf00      	nop

90002524 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DedicatedBufferController : public touchgfx::VideoController
90002524:	b510      	push	{r4, lr}
90002526:	4604      	mov	r4, r0
90002528:	2148      	movs	r1, #72	; 0x48
9000252a:	f023 fe9a 	bl	90026262 <_ZdlPvj>
9000252e:	4620      	mov	r0, r4
90002530:	bd10      	pop	{r4, pc}
90002532:	bf00      	nop

90002534 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
        assert(handle < no_streams);
90002534:	b911      	cbnz	r1, 9000253c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x8>
    }
90002536:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
9000253a:	4770      	bx	lr
    virtual bool getIsPlaying(const Handle handle)
9000253c:	b508      	push	{r3, lr}
        assert(handle < no_streams);
9000253e:	4a03      	ldr	r2, [pc, #12]	; (9000254c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
90002540:	f44f 71b8 	mov.w	r1, #368	; 0x170
90002544:	4b02      	ldr	r3, [pc, #8]	; (90002550 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
90002546:	4803      	ldr	r0, [pc, #12]	; (90002554 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
90002548:	f023 feba 	bl	900262c0 <__assert_func>
9000254c:	90027d0c 	.word	0x90027d0c
90002550:	90027cf8 	.word	0x90027cf8
90002554:	90027e98 	.word	0x90027e98

90002558 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
        assert(handle < no_streams);
90002558:	b921      	cbnz	r1, 90002564 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0xc>
        mjpegDecoders[handle]->getVideoInfo(data);
9000255a:	6840      	ldr	r0, [r0, #4]
9000255c:	4611      	mov	r1, r2
9000255e:	6803      	ldr	r3, [r0, #0]
90002560:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90002562:	4718      	bx	r3
        assert(handle < no_streams);
90002564:	4b03      	ldr	r3, [pc, #12]	; (90002574 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x1c>)
90002566:	f44f 71b5 	mov.w	r1, #362	; 0x16a
9000256a:	4a03      	ldr	r2, [pc, #12]	; (90002578 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
9000256c:	4803      	ldr	r0, [pc, #12]	; (9000257c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
9000256e:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002570:	f023 fea6 	bl	900262c0 <__assert_func>
90002574:	90027cf8 	.word	0x90027cf8
90002578:	90027edc 	.word	0x90027edc
9000257c:	90027e98 	.word	0x90027e98

90002580 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
        assert(handle < no_streams);
90002580:	b909      	cbnz	r1, 90002586 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x6>
    }
90002582:	68c0      	ldr	r0, [r0, #12]
90002584:	4770      	bx	lr
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
90002586:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002588:	4a02      	ldr	r2, [pc, #8]	; (90002594 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x14>)
9000258a:	2179      	movs	r1, #121	; 0x79
9000258c:	4b02      	ldr	r3, [pc, #8]	; (90002598 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
9000258e:	4803      	ldr	r0, [pc, #12]	; (9000259c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
90002590:	f023 fe96 	bl	900262c0 <__assert_func>
90002594:	9002808c 	.word	0x9002808c
90002598:	90027cf8 	.word	0x90027cf8
9000259c:	90027e98 	.word	0x90027e98

900025a0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
900025a0:	b510      	push	{r4, lr}
        assert(handle < no_streams);
900025a2:	460c      	mov	r4, r1
900025a4:	b949      	cbnz	r1, 900025ba <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x1a>
900025a6:	4611      	mov	r1, r2
900025a8:	461a      	mov	r2, r3
        mjpegDecoders[handle]->setVideoData(movie, length);
900025aa:	6843      	ldr	r3, [r0, #4]
        stream.frameNumber = 0;
900025ac:	60c4      	str	r4, [r0, #12]
        mjpegDecoders[handle]->setVideoData(movie, length);
900025ae:	681c      	ldr	r4, [r3, #0]
900025b0:	4618      	mov	r0, r3
900025b2:	68a3      	ldr	r3, [r4, #8]
    }
900025b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        mjpegDecoders[handle]->setVideoData(movie, length);
900025b8:	4718      	bx	r3
        assert(handle < no_streams);
900025ba:	4b03      	ldr	r3, [pc, #12]	; (900025c8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x28>)
900025bc:	2190      	movs	r1, #144	; 0x90
900025be:	4a03      	ldr	r2, [pc, #12]	; (900025cc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x2c>)
900025c0:	4803      	ldr	r0, [pc, #12]	; (900025d0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x30>)
900025c2:	f023 fe7d 	bl	900262c0 <__assert_func>
900025c6:	bf00      	nop
900025c8:	90027cf8 	.word	0x90027cf8
900025cc:	90028240 	.word	0x90028240
900025d0:	90027e98 	.word	0x90027e98

900025d4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
        assert(handle < no_streams);
900025d4:	b921      	cbnz	r1, 900025e0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0xc>
        stream.tickCount = 0;
900025d6:	e9c0 1104 	strd	r1, r1, [r0, #16]
        stream.frame_rate_video = video_frames;
900025da:	e9c0 3206 	strd	r3, r2, [r0, #24]
900025de:	4770      	bx	lr
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
900025e0:	b508      	push	{r3, lr}
        assert(handle < no_streams);
900025e2:	4a03      	ldr	r2, [pc, #12]	; (900025f0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
900025e4:	2182      	movs	r1, #130	; 0x82
900025e6:	4b03      	ldr	r3, [pc, #12]	; (900025f4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
900025e8:	4803      	ldr	r0, [pc, #12]	; (900025f8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
900025ea:	f023 fe69 	bl	900262c0 <__assert_func>
900025ee:	bf00      	nop
900025f0:	9002841c 	.word	0x9002841c
900025f4:	90027cf8 	.word	0x90027cf8
900025f8:	90027e98 	.word	0x90027e98

900025fc <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
900025fc:	f00d bf10 	b.w	90010420 <_ZN8touchgfx3HAL10beginFrameEv>

90002600 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
        if (firstDrawThisFrame)
90002600:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
90002604:	b903      	cbnz	r3, 90002608 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x8>
90002606:	4770      	bx	lr
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
90002608:	b510      	push	{r4, lr}
            MUTEX_LOCK(mutexBuffers);
9000260a:	f04f 31ff 	mov.w	r1, #4294967295
9000260e:	4604      	mov	r4, r0
90002610:	6c40      	ldr	r0, [r0, #68]	; 0x44
90002612:	f00a fcd5 	bl	9000cfc0 <osMutexAcquire>
            firstDrawThisFrame = false;
90002616:	f44f 7380 	mov.w	r3, #256	; 0x100
9000261a:	f8a4 303d 	strh.w	r3, [r4, #61]	; 0x3d
    }
9000261e:	bd10      	pop	{r4, pc}

90002620 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
    virtual void unregisterVideoWidget(const Handle handle)
90002620:	b538      	push	{r3, r4, r5, lr}
90002622:	460c      	mov	r4, r1
90002624:	4605      	mov	r5, r0
        MUTEX_LOCK(mutexBuffers);
90002626:	f04f 31ff 	mov.w	r1, #4294967295
9000262a:	6c40      	ldr	r0, [r0, #68]	; 0x44
        streams[handle].isActive = false;
9000262c:	eb04 04c4 	add.w	r4, r4, r4, lsl #3
        MUTEX_LOCK(mutexBuffers);
90002630:	f00a fcc6 	bl	9000cfc0 <osMutexAcquire>
        MUTEX_UNLOCK(mutexBuffers);
90002634:	6c68      	ldr	r0, [r5, #68]	; 0x44
90002636:	f00a fce7 	bl	9000d008 <osMutexRelease>
        streams[handle].isActive = false;
9000263a:	2300      	movs	r3, #0
9000263c:	eb05 0484 	add.w	r4, r5, r4, lsl #2
90002640:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        if (oneIsActive == false)
90002644:	f895 3028 	ldrb.w	r3, [r5, #40]	; 0x28
90002648:	b90b      	cbnz	r3, 9000264e <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm+0x2e>
            topBufferRGB = bufferRGB;
9000264a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
9000264c:	63ab      	str	r3, [r5, #56]	; 0x38
    }
9000264e:	bd38      	pop	{r3, r4, r5, pc}

90002650 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
{
90002650:	b570      	push	{r4, r5, r6, lr}
            if (stream.isPlaying || stream.isShowingOneFrame)
90002652:	4c1c      	ldr	r4, [pc, #112]	; (900026c4 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x74>)
90002654:	4605      	mov	r5, r0
    HAL::endFrame();
90002656:	f00d feef 	bl	90010438 <_ZN8touchgfx3HAL8endFrameEv>
9000265a:	f894 3029 	ldrb.w	r3, [r4, #41]	; 0x29
9000265e:	b98b      	cbnz	r3, 90002684 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x34>
90002660:	f894 302a 	ldrb.w	r3, [r4, #42]	; 0x2a
90002664:	b973      	cbnz	r3, 90002684 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x34>
        firstDrawThisFrame = true;
90002666:	2301      	movs	r3, #1
        SEM_POST(semDecode);
90002668:	6c20      	ldr	r0, [r4, #64]	; 0x40
        firstDrawThisFrame = true;
9000266a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        SEM_POST(semDecode);
9000266e:	f00a fd71 	bl	9000d154 <osSemaphoreRelease>
        if (uiHasMutex)
90002672:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
90002676:	b9f3      	cbnz	r3, 900026b6 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x66>
    dma.start();
90002678:	6868      	ldr	r0, [r5, #4]
9000267a:	6803      	ldr	r3, [r0, #0]
}
9000267c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    dma.start();
90002680:	691b      	ldr	r3, [r3, #16]
90002682:	4718      	bx	r3
    bool decodeForNextTick(Stream& stream)
    {
        // Running in UI thread

        // Compare tickCount/frameCount to frame_rate_ticks/frame_rate_video
        if ((stream.tickCount * stream.frame_rate_video) >= (stream.frame_rate_ticks * stream.frameCount))
90002684:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
90002688:	69e1      	ldr	r1, [r4, #28]
9000268a:	6922      	ldr	r2, [r4, #16]
9000268c:	fb00 f303 	mul.w	r3, r0, r3
90002690:	fb01 f202 	mul.w	r2, r1, r2
90002694:	4293      	cmp	r3, r2
90002696:	d3e6      	bcc.n	90002666 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x16>
        {
            if (allowSkipFrames)
90002698:	f894 003c 	ldrb.w	r0, [r4, #60]	; 0x3c
9000269c:	b138      	cbz	r0, 900026ae <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x5e>
            {
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
9000269e:	1a9b      	subs	r3, r3, r2
900026a0:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
900026a4:	4299      	cmp	r1, r3
                {
                    stream.skip_frames--;
900026a6:	bf98      	it	ls
900026a8:	f102 32ff 	addls.w	r2, r2, #4294967295
900026ac:	6262      	str	r2, [r4, #36]	; 0x24
                    stream.doDecode = true;
900026ae:	2301      	movs	r3, #1
900026b0:	f884 302e 	strb.w	r3, [r4, #46]	; 0x2e
        for (uint32_t i = 0; i < no_streams; i++)
900026b4:	e7d7      	b.n	90002666 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x16>
            MUTEX_UNLOCK(mutexBuffers);
900026b6:	6c60      	ldr	r0, [r4, #68]	; 0x44
900026b8:	f00a fca6 	bl	9000d008 <osMutexRelease>
            uiHasMutex = false;
900026bc:	2300      	movs	r3, #0
900026be:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
900026c2:	e7d9      	b.n	90002678 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x28>
900026c4:	2400914c 	.word	0x2400914c

900026c8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
900026c8:	f00d be74 	b.w	900103b4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

900026cc <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
900026cc:	f00d bfd5 	b.w	9001067a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

900026d0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
{
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
900026d0:	4814      	ldr	r0, [pc, #80]	; (90002724 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x54>)
900026d2:	6943      	ldr	r3, [r0, #20]
900026d4:	03d9      	lsls	r1, r3, #15
900026d6:	d523      	bpl.n	90002720 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x50>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
900026d8:	2300      	movs	r3, #0
{
900026da:	b510      	push	{r4, lr}
900026dc:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
900026e0:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
900026e4:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900026e8:	f643 74e0 	movw	r4, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
900026ec:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
900026f0:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
900026f4:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900026f8:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
900026fc:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900026fe:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90002702:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002704:	f8c0 2274 	str.w	r2, [r0, #628]	; 0x274
      } while (ways-- != 0U);
90002708:	1c5a      	adds	r2, r3, #1
9000270a:	d1f8      	bne.n	900026fe <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2e>
    } while(sets-- != 0U);
9000270c:	f1ac 0c20 	sub.w	ip, ip, #32
90002710:	f11c 0f20 	cmn.w	ip, #32
90002714:	d1f0      	bne.n	900026f8 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x28>
90002716:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000271a:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
9000271e:	bd10      	pop	{r4, pc}
90002720:	4770      	bx	lr
90002722:	bf00      	nop
90002724:	e000ed00 	.word	0xe000ed00

90002728 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
90002728:	b510      	push	{r4, lr}
        assert(handle < no_streams);
9000272a:	2900      	cmp	r1, #0
9000272c:	d133      	bne.n	90002796 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
9000272e:	4604      	mov	r4, r0
        switch (cmd)
90002730:	2a05      	cmp	r2, #5
90002732:	d809      	bhi.n	90002748 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x20>
90002734:	e8df f002 	tbb	[pc, r2]
90002738:	27221e0f 	.word	0x27221e0f
9000273c:	0903      	.short	0x0903
            stream.isPlaying = false;
9000273e:	2200      	movs	r2, #0
            stream.seek_to_frame = 1;
90002740:	2301      	movs	r3, #1
            stream.isPlaying = false;
90002742:	f880 2029 	strb.w	r2, [r0, #41]	; 0x29
            stream.seek_to_frame = 1;
90002746:	6203      	str	r3, [r0, #32]
    }
90002748:	bd10      	pop	{r4, pc}
            stream.repeat = (param > 0);
9000274a:	3b00      	subs	r3, #0
9000274c:	bf18      	it	ne
9000274e:	2301      	movne	r3, #1
90002750:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
    }
90002754:	bd10      	pop	{r4, pc}
            if (mjpegDecoders[handle]->hasVideo())
90002756:	6840      	ldr	r0, [r0, #4]
90002758:	6803      	ldr	r3, [r0, #0]
9000275a:	691b      	ldr	r3, [r3, #16]
9000275c:	4798      	blx	r3
9000275e:	2800      	cmp	r0, #0
90002760:	d0f2      	beq.n	90002748 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x20>
                stream.isPlaying = true;
90002762:	2201      	movs	r2, #1
                stream.frameCount = 0;
90002764:	2300      	movs	r3, #0
                stream.isPlaying = true;
90002766:	f884 2029 	strb.w	r2, [r4, #41]	; 0x29
                stream.hasMoreFrames = true; // Assume more frames, lowered on end
9000276a:	f884 202c 	strb.w	r2, [r4, #44]	; 0x2c
                stream.tickCount = 0;
9000276e:	e9c4 3304 	strd	r3, r3, [r4, #16]
    }
90002772:	bd10      	pop	{r4, pc}
            stream.isPlaying = false;
90002774:	2300      	movs	r3, #0
90002776:	f880 3029 	strb.w	r3, [r0, #41]	; 0x29
    }
9000277a:	bd10      	pop	{r4, pc}
            stream.frameCount = 0;
9000277c:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
9000277e:	6203      	str	r3, [r0, #32]
            stream.tickCount = 0;
90002780:	e9c0 2204 	strd	r2, r2, [r0, #16]
    }
90002784:	bd10      	pop	{r4, pc}
            stream.frameCount = 0;
90002786:	2200      	movs	r2, #0
            stream.isShowingOneFrame = true;
90002788:	2101      	movs	r1, #1
            stream.seek_to_frame = param;
9000278a:	6203      	str	r3, [r0, #32]
            stream.isShowingOneFrame = true;
9000278c:	f880 102a 	strb.w	r1, [r0, #42]	; 0x2a
            stream.tickCount = 0;
90002790:	e9c0 2204 	strd	r2, r2, [r0, #16]
    }
90002794:	bd10      	pop	{r4, pc}
        assert(handle < no_streams);
90002796:	4b03      	ldr	r3, [pc, #12]	; (900027a4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x7c>)
90002798:	21a2      	movs	r1, #162	; 0xa2
9000279a:	4a03      	ldr	r2, [pc, #12]	; (900027a8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x80>)
9000279c:	4803      	ldr	r0, [pc, #12]	; (900027ac <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x84>)
9000279e:	f023 fd8f 	bl	900262c0 <__assert_func>
900027a2:	bf00      	nop
900027a4:	90027cf8 	.word	0x90027cf8
900027a8:	900285d8 	.word	0x900285d8
900027ac:	90027e98 	.word	0x90027e98

900027b0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
900027b0:	b510      	push	{r4, lr}
        assert(handle < no_streams);
900027b2:	bb39      	cbnz	r1, 90002804 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x54>
        if (stream.isPlaying)
900027b4:	f890 3029 	ldrb.w	r3, [r0, #41]	; 0x29
900027b8:	4604      	mov	r4, r0
900027ba:	b923      	cbnz	r3, 900027c6 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x16>
        if (stream.doInvalidateOnNextTick)
900027bc:	f894 302b 	ldrb.w	r3, [r4, #43]	; 0x2b
900027c0:	b963      	cbnz	r3, 900027dc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x2c>
        return true;
900027c2:	2001      	movs	r0, #1
    }
900027c4:	bd10      	pop	{r4, pc}
        return vSyncForFrame;
900027c6:	4912      	ldr	r1, [pc, #72]	; (90002810 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x60>)
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900027c8:	6943      	ldr	r3, [r0, #20]
900027ca:	6809      	ldr	r1, [r1, #0]
900027cc:	f891 106b 	ldrb.w	r1, [r1, #107]	; 0x6b
900027d0:	440b      	add	r3, r1
900027d2:	6143      	str	r3, [r0, #20]
        if (stream.doInvalidateOnNextTick)
900027d4:	f894 302b 	ldrb.w	r3, [r4, #43]	; 0x2b
900027d8:	2b00      	cmp	r3, #0
900027da:	d0f2      	beq.n	900027c2 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12>
     *
     * @param [in] videoBuffer Video buffer.
     */
    void setVideoBuffer(uint8_t* const videoBuffer)
    {
        buffer = videoBuffer;
900027dc:	68a1      	ldr	r1, [r4, #8]
            widget.invalidate();
900027de:	4610      	mov	r0, r2
900027e0:	6813      	ldr	r3, [r2, #0]
900027e2:	695b      	ldr	r3, [r3, #20]
900027e4:	6311      	str	r1, [r2, #48]	; 0x30
900027e6:	4798      	blx	r3
            stream.doInvalidateOnNextTick = false;
900027e8:	2300      	movs	r3, #0
            if (!stream.hasMoreFrames && !stream.repeat)
900027ea:	f894 002c 	ldrb.w	r0, [r4, #44]	; 0x2c
            stream.doInvalidateOnNextTick = false;
900027ee:	f884 302b 	strb.w	r3, [r4, #43]	; 0x2b
            if (!stream.hasMoreFrames && !stream.repeat)
900027f2:	2800      	cmp	r0, #0
900027f4:	d1e5      	bne.n	900027c2 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12>
900027f6:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
900027fa:	2b00      	cmp	r3, #0
900027fc:	d1e2      	bne.n	900027c4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14>
                stream.isPlaying = false;
900027fe:	f884 0029 	strb.w	r0, [r4, #41]	; 0x29
    }
90002802:	bd10      	pop	{r4, pc}
        assert(handle < no_streams);
90002804:	4b03      	ldr	r3, [pc, #12]	; (90002814 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x64>)
90002806:	21d0      	movs	r1, #208	; 0xd0
90002808:	4a03      	ldr	r2, [pc, #12]	; (90002818 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x68>)
9000280a:	4804      	ldr	r0, [pc, #16]	; (9000281c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x6c>)
9000280c:	f023 fd58 	bl	900262c0 <__assert_func>
90002810:	240235ac 	.word	0x240235ac
90002814:	90027cf8 	.word	0x90027cf8
90002818:	900287ac 	.word	0x900287ac
9000281c:	90027e98 	.word	0x90027e98

90002820 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    {
        // Running in UI thread

        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
90002820:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
90002824:	b570      	push	{r4, r5, r6, lr}
            if (streams[i].isActive == false)
90002826:	b9fb      	cbnz	r3, 90002868 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x48>
            {
                // Reset stream parameters
                streams[i] = Stream();
90002828:	2201      	movs	r2, #1
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
9000282a:	6b85      	ldr	r5, [r0, #56]	; 0x38
                streams[i] = Stream();
9000282c:	60c3      	str	r3, [r0, #12]
9000282e:	f8a0 202d 	strh.w	r2, [r0, #45]	; 0x2d
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
90002832:	f505 2487 	add.w	r4, r5, #276480	; 0x43800
        streams[handle].isActive = true;
90002836:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
                streams[i] = Stream();
9000283a:	6103      	str	r3, [r0, #16]
9000283c:	6143      	str	r3, [r0, #20]
9000283e:	6183      	str	r3, [r0, #24]
90002840:	61c3      	str	r3, [r0, #28]
90002842:	6203      	str	r3, [r0, #32]
90002844:	6243      	str	r3, [r0, #36]	; 0x24
90002846:	f8c0 3029 	str.w	r3, [r0, #41]	; 0x29
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
9000284a:	e9d0 260c 	ldrd	r2, r6, [r0, #48]	; 0x30
9000284e:	4432      	add	r2, r6
90002850:	4294      	cmp	r4, r2
90002852:	d810      	bhi.n	90002876 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x56>
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
        bufferWidth = width;
90002854:	4a0b      	ldr	r2, [pc, #44]	; (90002884 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x64>)
        decodeBuffers[handle] = (uint32_t*)topBufferRGB;
90002856:	6085      	str	r5, [r0, #8]
        topBufferRGB += sizeOfOneDecodeBuffer;
90002858:	6384      	str	r4, [r0, #56]	; 0x38
    }
9000285a:	4618      	mov	r0, r3
        format = bufferFormat;
9000285c:	f881 3034 	strb.w	r3, [r1, #52]	; 0x34
        bufferWidth = width;
90002860:	f8c1 2036 	str.w	r2, [r1, #54]	; 0x36
        buffer = videoBuffer;
90002864:	630b      	str	r3, [r1, #48]	; 0x30
90002866:	bd70      	pop	{r4, r5, r6, pc}

                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
90002868:	4b07      	ldr	r3, [pc, #28]	; (90002888 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x68>)
9000286a:	f240 11c5 	movw	r1, #453	; 0x1c5
9000286e:	4a07      	ldr	r2, [pc, #28]	; (9000288c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x6c>)
90002870:	4807      	ldr	r0, [pc, #28]	; (90002890 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x70>)
90002872:	f023 fd25 	bl	900262c0 <__assert_func>
            assert(0 && "registerVideoWidget: Unable to allocate RGB buffer!");
90002876:	4b07      	ldr	r3, [pc, #28]	; (90002894 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x74>)
90002878:	2152      	movs	r1, #82	; 0x52
9000287a:	4a07      	ldr	r2, [pc, #28]	; (90002898 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x78>)
9000287c:	4804      	ldr	r0, [pc, #16]	; (90002890 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x70>)
9000287e:	f023 fd1f 	bl	900262c0 <__assert_func>
90002882:	bf00      	nop
90002884:	012001e0 	.word	0x012001e0
90002888:	9002894c 	.word	0x9002894c
9000288c:	9002897c 	.word	0x9002897c
90002890:	90027e98 	.word	0x90027e98
90002894:	90028b04 	.word	0x90028b04
90002898:	90028b40 	.word	0x90028b40

9000289c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000289c:	4b08      	ldr	r3, [pc, #32]	; (900028c0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
9000289e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
900028a2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900028a6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900028aa:	f3bf 8f6f 	isb	sy
900028ae:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
900028b2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900028b6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900028ba:	f3bf 8f6f 	isb	sy
}
900028be:	4770      	bx	lr
900028c0:	e000e100 	.word	0xe000e100

900028c4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900028c4:	4b03      	ldr	r3, [pc, #12]	; (900028d4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
900028c6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
900028ca:	609a      	str	r2, [r3, #8]
900028cc:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
900028d0:	609a      	str	r2, [r3, #8]
}
900028d2:	4770      	bx	lr
900028d4:	e000e100 	.word	0xe000e100

900028d8 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
900028d8:	b538      	push	{r3, r4, r5, lr}
900028da:	4604      	mov	r4, r0
    HAL::initialize();
900028dc:	f00d fdb9 	bl	90010452 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
900028e0:	6823      	ldr	r3, [r4, #0]
900028e2:	6e5d      	ldr	r5, [r3, #100]	; 0x64
900028e4:	f012 fb70 	bl	90014fc8 <_ZN8touchgfx11Application11getInstanceEv>
900028e8:	4601      	mov	r1, r0
900028ea:	4620      	mov	r0, r4
900028ec:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
900028ee:	6823      	ldr	r3, [r4, #0]
900028f0:	4a16      	ldr	r2, [pc, #88]	; (9000294c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x74>)
900028f2:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
900028f6:	4295      	cmp	r5, r2
900028f8:	d11c      	bne.n	90002934 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
900028fa:	4a15      	ldr	r2, [pc, #84]	; (90002950 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x78>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900028fc:	2501      	movs	r5, #1
        setAnimationStorage(animationStorage);
900028fe:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90002902:	f502 317f 	add.w	r1, r2, #261120	; 0x3fc00
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90002906:	4813      	ldr	r0, [pc, #76]	; (90002954 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x7c>)
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90002908:	e9c4 210f 	strd	r2, r1, [r4, #60]	; 0x3c
        setAnimationStorage(animationStorage);
9000290c:	4a12      	ldr	r2, [pc, #72]	; (90002958 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x80>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000290e:	7005      	strb	r5, [r0, #0]
90002910:	4293      	cmp	r3, r2
90002912:	d116      	bne.n	90002942 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6a>
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90002914:	2300      	movs	r3, #0
        USE_ANIMATION_STORAGE = animationStorage != 0;
90002916:	4a11      	ldr	r2, [pc, #68]	; (9000295c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x84>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90002918:	6463      	str	r3, [r4, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
9000291a:	7013      	strb	r3, [r2, #0]
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
9000291c:	6864      	ldr	r4, [r4, #4]
        sizeBufferRGB = sizeOfBuffer;
9000291e:	f44f 2087 	mov.w	r0, #276480	; 0x43800
        mjpegDecoders[index] = &decoder;
90002922:	4b0f      	ldr	r3, [pc, #60]	; (90002960 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x88>)
90002924:	490f      	ldr	r1, [pc, #60]	; (90002964 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x8c>)
        bufferRGB = buffer;
90002926:	4a10      	ldr	r2, [pc, #64]	; (90002968 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x90>)
90002928:	644c      	str	r4, [r1, #68]	; 0x44
        mjpegDecoders[index] = &decoder;
9000292a:	6059      	str	r1, [r3, #4]
        bufferRGB = buffer;
9000292c:	631a      	str	r2, [r3, #48]	; 0x30
        sizeBufferRGB = sizeOfBuffer;
9000292e:	e9c3 020d 	strd	r0, r2, [r3, #52]	; 0x34
}
90002932:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
90002934:	4a0d      	ldr	r2, [pc, #52]	; (9000296c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x94>)
90002936:	2300      	movs	r3, #0
90002938:	4620      	mov	r0, r4
9000293a:	f5a2 317f 	sub.w	r1, r2, #261120	; 0x3fc00
9000293e:	47a8      	blx	r5
90002940:	e7ec      	b.n	9000291c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
        setAnimationStorage(animationStorage);
90002942:	2100      	movs	r1, #0
90002944:	4620      	mov	r0, r4
90002946:	4798      	blx	r3
90002948:	e7e8      	b.n	9000291c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
9000294a:	bf00      	nop
9000294c:	90000805 	.word	0x90000805
90002950:	d003fc00 	.word	0xd003fc00
90002954:	240235aa 	.word	0x240235aa
90002958:	90000675 	.word	0x90000675
9000295c:	240235ab 	.word	0x240235ab
90002960:	2400914c 	.word	0x2400914c
90002964:	24009198 	.word	0x24009198
90002968:	d00bf400 	.word	0xd00bf400
9000296c:	d007f800 	.word	0xd007f800

90002970 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
90002970:	b510      	push	{r4, lr}
        return instance;
90002972:	4c14      	ldr	r4, [pc, #80]	; (900029c4 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
90002974:	6823      	ldr	r3, [r4, #0]
90002976:	b323      	cbz	r3, 900029c2 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
90002978:	4b13      	ldr	r3, [pc, #76]	; (900029c8 <HAL_LTDC_LineEventCallback+0x58>)
9000297a:	4a14      	ldr	r2, [pc, #80]	; (900029cc <HAL_LTDC_LineEventCallback+0x5c>)
9000297c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
9000297e:	8811      	ldrh	r1, [r2, #0]
90002980:	428b      	cmp	r3, r1
90002982:	d00a      	beq.n	9000299a <HAL_LTDC_LineEventCallback+0x2a>
            GPIO::set(GPIO::VSYNC_FREQ);
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
90002984:	f007 ffe8 	bl	9000a958 <HAL_LTDC_ProgramLineEvent>
90002988:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
9000298a:	6803      	ldr	r3, [r0, #0]
9000298c:	6a1b      	ldr	r3, [r3, #32]
9000298e:	4798      	blx	r3

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
90002990:	2000      	movs	r0, #0
        }
    }
90002992:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
90002996:	f7fd be11 	b.w	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
9000299a:	4b0d      	ldr	r3, [pc, #52]	; (900029d0 <HAL_LTDC_LineEventCallback+0x60>)
9000299c:	8819      	ldrh	r1, [r3, #0]
9000299e:	f007 ffdb 	bl	9000a958 <HAL_LTDC_ProgramLineEvent>
        return instance;
900029a2:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
900029a4:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
900029a8:	3301      	adds	r3, #1
900029aa:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            OSWrappers::signalVSync();
900029ae:	f7ff f839 	bl	90001a24 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            HAL::getInstance()->swapFrameBuffers();
900029b2:	6820      	ldr	r0, [r4, #0]
900029b4:	f00e faa6 	bl	90010f04 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
900029b8:	2000      	movs	r0, #0
    }
900029ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
900029be:	f7fd bdc9 	b.w	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
    }
900029c2:	bd10      	pop	{r4, pc}
900029c4:	240235ac 	.word	0x240235ac
900029c8:	50001000 	.word	0x50001000
900029cc:	24009196 	.word	0x24009196
900029d0:	24009194 	.word	0x24009194

900029d4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv>:
    void decoderTaskEntry()
900029d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900029d8:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 90002a94 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xc0>
900029dc:	b083      	sub	sp, #12
                    stream.doInvalidateOnNextTick = true;
900029de:	2601      	movs	r6, #1
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
900029e0:	f44f 7770 	mov.w	r7, #960	; 0x3c0
    void decoderTaskEntry()
900029e4:	4604      	mov	r4, r0
900029e6:	e024      	b.n	90002a32 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x5e>
                        decoder->gotoFrame(stream.seek_to_frame);
900029e8:	682b      	ldr	r3, [r5, #0]
900029ea:	4628      	mov	r0, r5
900029ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900029ee:	4798      	blx	r3
                        stream.seek_to_frame = 0;
900029f0:	2300      	movs	r3, #0
900029f2:	6223      	str	r3, [r4, #32]
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
900029f4:	6829      	ldr	r1, [r5, #0]
900029f6:	f44f 7390 	mov.w	r3, #288	; 0x120
900029fa:	9700      	str	r7, [sp, #0]
900029fc:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
90002a00:	f8d1 9014 	ldr.w	r9, [r1, #20]
90002a04:	4628      	mov	r0, r5
90002a06:	68a1      	ldr	r1, [r4, #8]
90002a08:	47c8      	blx	r9
                    stream.frameCount++;
90002a0a:	6923      	ldr	r3, [r4, #16]
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
90002a0c:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c
                    stream.frameCount++;
90002a10:	3301      	adds	r3, #1
90002a12:	6123      	str	r3, [r4, #16]
                    if (stream.hasMoreFrames)
90002a14:	2800      	cmp	r0, #0
90002a16:	d033      	beq.n	90002a80 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xac>
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
90002a18:	682b      	ldr	r3, [r5, #0]
90002a1a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90002a1c:	4543      	cmp	r3, r8
90002a1e:	d131      	bne.n	90002a84 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xb0>
        return frameNumber;
90002a20:	6968      	ldr	r0, [r5, #20]
90002a22:	3801      	subs	r0, #1
                    stream.doDecode = false;
90002a24:	2200      	movs	r2, #0
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
90002a26:	60e0      	str	r0, [r4, #12]
                    stream.doDecode = false;
90002a28:	f884 202e 	strb.w	r2, [r4, #46]	; 0x2e
            MUTEX_UNLOCK(mutexBuffers);
90002a2c:	6c60      	ldr	r0, [r4, #68]	; 0x44
90002a2e:	f00a faeb 	bl	9000d008 <osMutexRelease>
            SEM_WAIT(semDecode);
90002a32:	f04f 31ff 	mov.w	r1, #4294967295
90002a36:	6c20      	ldr	r0, [r4, #64]	; 0x40
90002a38:	f00a fb58 	bl	9000d0ec <osSemaphoreAcquire>
            MUTEX_LOCK(mutexBuffers);
90002a3c:	f04f 31ff 	mov.w	r1, #4294967295
90002a40:	6c60      	ldr	r0, [r4, #68]	; 0x44
90002a42:	f00a fabd 	bl	9000cfc0 <osMutexAcquire>
                if (stream.doDecode)
90002a46:	f894 302e 	ldrb.w	r3, [r4, #46]	; 0x2e
90002a4a:	2b00      	cmp	r3, #0
90002a4c:	d0ee      	beq.n	90002a2c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x58>
                    if (stream.seek_to_frame > 0)
90002a4e:	6a21      	ldr	r1, [r4, #32]
                    MJPEGDecoder* const decoder = mjpegDecoders[i];
90002a50:	6865      	ldr	r5, [r4, #4]
                    stream.doInvalidateOnNextTick = true;
90002a52:	f884 602b 	strb.w	r6, [r4, #43]	; 0x2b
                    if (stream.seek_to_frame > 0)
90002a56:	2900      	cmp	r1, #0
90002a58:	d1c6      	bne.n	900029e8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x14>
                        if (stream.skip_frames > 0)
90002a5a:	6a63      	ldr	r3, [r4, #36]	; 0x24
90002a5c:	2b00      	cmp	r3, #0
90002a5e:	d0c9      	beq.n	900029f4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x20>
                            decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
90002a60:	682a      	ldr	r2, [r5, #0]
90002a62:	e9d2 9109 	ldrd	r9, r1, [r2, #36]	; 0x24
90002a66:	4541      	cmp	r1, r8
90002a68:	d10f      	bne.n	90002a8a <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xb6>
90002a6a:	6968      	ldr	r0, [r5, #20]
90002a6c:	18c1      	adds	r1, r0, r3
90002a6e:	4628      	mov	r0, r5
90002a70:	47c8      	blx	r9
                            stream.frameCount += stream.skip_frames;
90002a72:	6923      	ldr	r3, [r4, #16]
90002a74:	6a61      	ldr	r1, [r4, #36]	; 0x24
                            stream.skip_frames = 0;
90002a76:	2200      	movs	r2, #0
                            stream.frameCount += stream.skip_frames;
90002a78:	440b      	add	r3, r1
                            stream.skip_frames = 0;
90002a7a:	6262      	str	r2, [r4, #36]	; 0x24
                            stream.frameCount += stream.skip_frames;
90002a7c:	6123      	str	r3, [r4, #16]
90002a7e:	e7b9      	b.n	900029f4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x20>
90002a80:	2001      	movs	r0, #1
90002a82:	e7cf      	b.n	90002a24 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x50>
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
90002a84:	4628      	mov	r0, r5
90002a86:	4798      	blx	r3
90002a88:	e7cb      	b.n	90002a22 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x4e>
                            decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
90002a8a:	4628      	mov	r0, r5
90002a8c:	4788      	blx	r1
90002a8e:	6a63      	ldr	r3, [r4, #36]	; 0x24
90002a90:	e7ec      	b.n	90002a6c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x98>
90002a92:	bf00      	nop
90002a94:	9000097d 	.word	0x9000097d

90002a98 <videoTaskFunc>:
    videoController.decoderTaskEntry();
90002a98:	4801      	ldr	r0, [pc, #4]	; (90002aa0 <videoTaskFunc+0x8>)
{
90002a9a:	b508      	push	{r3, lr}
    videoController.decoderTaskEntry();
90002a9c:	f7ff ff9a 	bl	900029d4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv>
90002aa0:	2400914c 	.word	0x2400914c

90002aa4 <_GLOBAL__sub_I_mjpegdecoder1>:
}
90002aa4:	b538      	push	{r3, r4, r5, lr}
HardwareMJPEGDecoder mjpegdecoder1;
90002aa6:	4815      	ldr	r0, [pc, #84]	; (90002afc <_GLOBAL__sub_I_mjpegdecoder1+0x58>)
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90002aa8:	2500      	movs	r5, #0
90002aaa:	f7fe fb5b 	bl	90001164 <_ZN20HardwareMJPEGDecoderC1Ev>
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002aae:	4c14      	ldr	r4, [pc, #80]	; (90002b00 <_GLOBAL__sub_I_mjpegdecoder1+0x5c>)
90002ab0:	4914      	ldr	r1, [pc, #80]	; (90002b04 <_GLOBAL__sub_I_mjpegdecoder1+0x60>)
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
90002ab2:	f44f 7380 	mov.w	r3, #256	; 0x100
        semDecode = SEM_CREATE(); // Binary semaphore
90002ab6:	462a      	mov	r2, r5
90002ab8:	2001      	movs	r0, #1
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002aba:	6021      	str	r1, [r4, #0]
        semDecode = SEM_CREATE(); // Binary semaphore
90002abc:	4629      	mov	r1, r5
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
90002abe:	85a3      	strh	r3, [r4, #44]	; 0x2c
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002ac0:	87a3      	strh	r3, [r4, #60]	; 0x3c
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90002ac2:	60e5      	str	r5, [r4, #12]
            isActive(false), isPlaying(false), isShowingOneFrame(false),
90002ac4:	62a5      	str	r5, [r4, #40]	; 0x28
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
90002ac6:	f884 502e 	strb.w	r5, [r4, #46]	; 0x2e
        : VideoController(), bufferRGB(0), sizeBufferRGB(0), topBufferRGB(0),
90002aca:	63a5      	str	r5, [r4, #56]	; 0x38
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002acc:	f884 503e 	strb.w	r5, [r4, #62]	; 0x3e
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90002ad0:	e9c4 5504 	strd	r5, r5, [r4, #16]
90002ad4:	e9c4 5506 	strd	r5, r5, [r4, #24]
            seek_to_frame(0), skip_frames(0),
90002ad8:	e9c4 5508 	strd	r5, r5, [r4, #32]
        : VideoController(), bufferRGB(0), sizeBufferRGB(0), topBufferRGB(0),
90002adc:	e9c4 550c 	strd	r5, r5, [r4, #48]	; 0x30
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002ae0:	e9c4 5510 	strd	r5, r5, [r4, #64]	; 0x40
90002ae4:	e9c4 5501 	strd	r5, r5, [r4, #4]
        semDecode = SEM_CREATE(); // Binary semaphore
90002ae8:	f00a fab0 	bl	9000d04c <osSemaphoreNew>
90002aec:	4603      	mov	r3, r0
        mutexBuffers = MUTEX_CREATE();
90002aee:	4628      	mov	r0, r5
        semDecode = SEM_CREATE(); // Binary semaphore
90002af0:	6423      	str	r3, [r4, #64]	; 0x40
        mutexBuffers = MUTEX_CREATE();
90002af2:	f00a fa25 	bl	9000cf40 <osMutexNew>
90002af6:	6460      	str	r0, [r4, #68]	; 0x44
}
90002af8:	bd38      	pop	{r3, r4, r5, pc}
90002afa:	bf00      	nop
90002afc:	24009198 	.word	0x24009198
90002b00:	2400914c 	.word	0x2400914c
90002b04:	90028d0c 	.word	0x90028d0c

90002b08 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
90002b08:	4901      	ldr	r1, [pc, #4]	; (90002b10 <vApplicationIdleHook+0x8>)
90002b0a:	2000      	movs	r0, #0
90002b0c:	f00c bce8 	b.w	9000f4e0 <vTaskSetApplicationTaskTag>
90002b10:	90000959 	.word	0x90000959

90002b14 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
90002b14:	b508      	push	{r3, lr}
  for(;;)
  {
	  check_suspend_asteroids_task();
	  check_resume_asteroids_task();

	  osDelay(100);
90002b16:	2064      	movs	r0, #100	; 0x64
90002b18:	f00a fa04 	bl	9000cf24 <osDelay>
  for(;;)
90002b1c:	e7fb      	b.n	90002b16 <StartDefaultTask+0x2>
90002b1e:	bf00      	nop

90002b20 <bullet_timer_task_function>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_bullet_timer_task_function */
void bullet_timer_task_function(void *argument)
{
90002b20:	4d09      	ldr	r5, [pc, #36]	; (90002b48 <bullet_timer_task_function+0x28>)
90002b22:	4e0a      	ldr	r6, [pc, #40]	; (90002b4c <bullet_timer_task_function+0x2c>)
90002b24:	b508      	push	{r3, lr}
  /* USER CODE BEGIN bullet_timer_task_function */
  /* Infinite loop */

  for(;;)
  {
	  if( osSemaphoreGetCount(bullet_timer_started_semaphoreHandle) == 0 ) {
90002b26:	6828      	ldr	r0, [r5, #0]
90002b28:	f00a fb40 	bl	9000d1ac <osSemaphoreGetCount>
90002b2c:	4604      	mov	r4, r0
90002b2e:	2800      	cmp	r0, #0
90002b30:	d1f9      	bne.n	90002b26 <bullet_timer_task_function+0x6>
		  osDelay(100);
90002b32:	2064      	movs	r0, #100	; 0x64
90002b34:	f00a f9f6 	bl	9000cf24 <osDelay>
		  osSemaphoreRelease(bullet_timer_started_semaphoreHandle);
90002b38:	6828      	ldr	r0, [r5, #0]
90002b3a:	f00a fb0b 	bl	9000d154 <osSemaphoreRelease>
		  osSemaphoreAcquire(bullet_timer_ended_semaphoreHandle, 0U);
90002b3e:	4621      	mov	r1, r4
90002b40:	6830      	ldr	r0, [r6, #0]
90002b42:	f00a fad3 	bl	9000d0ec <osSemaphoreAcquire>
90002b46:	e7ee      	b.n	90002b26 <bullet_timer_task_function+0x6>
90002b48:	240091e8 	.word	0x240091e8
90002b4c:	240091e4 	.word	0x240091e4

90002b50 <invincibility_timer_task_function>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_invincibility_timer_task_function */
void invincibility_timer_task_function(void *argument)
{
90002b50:	4d0a      	ldr	r5, [pc, #40]	; (90002b7c <invincibility_timer_task_function+0x2c>)
90002b52:	4e0b      	ldr	r6, [pc, #44]	; (90002b80 <invincibility_timer_task_function+0x30>)
90002b54:	b508      	push	{r3, lr}
  /* USER CODE BEGIN invincibility_timer_task_function */
  /* Infinite loop */
  for(;;)
  {
	  if( osSemaphoreGetCount(invincibility_timer_started_semaphoreHandle) == 0 ) {
90002b56:	6828      	ldr	r0, [r5, #0]
90002b58:	f00a fb28 	bl	9000d1ac <osSemaphoreGetCount>
90002b5c:	4604      	mov	r4, r0
90002b5e:	2800      	cmp	r0, #0
90002b60:	d1f9      	bne.n	90002b56 <invincibility_timer_task_function+0x6>
		  osDelay(1000);
90002b62:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
90002b66:	f00a f9dd 	bl	9000cf24 <osDelay>
		  osSemaphoreRelease(invincibility_timer_started_semaphoreHandle);
90002b6a:	6828      	ldr	r0, [r5, #0]
90002b6c:	f00a faf2 	bl	9000d154 <osSemaphoreRelease>
		  osSemaphoreAcquire(invincibility_timer_ended_semaphoreHandle, 0U);
90002b70:	4621      	mov	r1, r4
90002b72:	6830      	ldr	r0, [r6, #0]
90002b74:	f00a faba 	bl	9000d0ec <osSemaphoreAcquire>
90002b78:	e7ed      	b.n	90002b56 <invincibility_timer_task_function+0x6>
90002b7a:	bf00      	nop
90002b7c:	24009494 	.word	0x24009494
90002b80:	24009490 	.word	0x24009490

90002b84 <SystemClock_Config>:
{
90002b84:	b570      	push	{r4, r5, r6, lr}
90002b86:	b09e      	sub	sp, #120	; 0x78
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
90002b88:	224c      	movs	r2, #76	; 0x4c
90002b8a:	2100      	movs	r1, #0
90002b8c:	a80a      	add	r0, sp, #40	; 0x28
90002b8e:	f023 fe6f 	bl	90026870 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
90002b92:	2220      	movs	r2, #32
90002b94:	2100      	movs	r1, #0
90002b96:	a802      	add	r0, sp, #8
90002b98:	f023 fe6a 	bl	90026870 <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
90002b9c:	2002      	movs	r0, #2
90002b9e:	f008 f919 	bl	9000add4 <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
90002ba2:	4b22      	ldr	r3, [pc, #136]	; (90002c2c <SystemClock_Config+0xa8>)
90002ba4:	2100      	movs	r1, #0
90002ba6:	4a22      	ldr	r2, [pc, #136]	; (90002c30 <SystemClock_Config+0xac>)
90002ba8:	9101      	str	r1, [sp, #4]
90002baa:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
90002bac:	f021 0101 	bic.w	r1, r1, #1
90002bb0:	62d9      	str	r1, [r3, #44]	; 0x2c
90002bb2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90002bb4:	f003 0301 	and.w	r3, r3, #1
90002bb8:	9301      	str	r3, [sp, #4]
90002bba:	6993      	ldr	r3, [r2, #24]
90002bbc:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
90002bc0:	6193      	str	r3, [r2, #24]
90002bc2:	6993      	ldr	r3, [r2, #24]
90002bc4:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
90002bc8:	9301      	str	r3, [sp, #4]
90002bca:	9b01      	ldr	r3, [sp, #4]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
90002bcc:	6993      	ldr	r3, [r2, #24]
90002bce:	0499      	lsls	r1, r3, #18
90002bd0:	d5fc      	bpl.n	90002bcc <SystemClock_Config+0x48>
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90002bd2:	2201      	movs	r2, #1
90002bd4:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
90002bd8:	2402      	movs	r4, #2
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90002bda:	2608      	movs	r6, #8
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90002bdc:	2500      	movs	r5, #0
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90002bde:	a80a      	add	r0, sp, #40	; 0x28
  RCC_OscInitStruct.PLL.PLLP = 2;
90002be0:	9417      	str	r4, [sp, #92]	; 0x5c
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90002be2:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLN = 160;
90002be6:	2205      	movs	r2, #5
90002be8:	23a0      	movs	r3, #160	; 0xa0
90002bea:	e9cd 2315 	strd	r2, r3, [sp, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLQ = 4;
90002bee:	2304      	movs	r3, #4
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
90002bf0:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLQ = 4;
90002bf4:	9318      	str	r3, [sp, #96]	; 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90002bf6:	e9cd 4619 	strd	r4, r6, [sp, #100]	; 0x64
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
90002bfa:	e9cd 551b 	strd	r5, r5, [sp, #108]	; 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90002bfe:	f008 f991 	bl	9000af24 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90002c02:	2340      	movs	r3, #64	; 0x40
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90002c04:	223f      	movs	r2, #63	; 0x3f
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002c06:	4621      	mov	r1, r4
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
90002c08:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002c0a:	eb0d 0006 	add.w	r0, sp, r6
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90002c0e:	9202      	str	r2, [sp, #8]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90002c10:	2203      	movs	r2, #3
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
90002c12:	9309      	str	r3, [sp, #36]	; 0x24
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
90002c14:	9504      	str	r5, [sp, #16]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90002c16:	9203      	str	r2, [sp, #12]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90002c18:	e9cd 6305 	strd	r6, r3, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90002c1c:	f44f 6380 	mov.w	r3, #1024	; 0x400
90002c20:	9308      	str	r3, [sp, #32]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002c22:	f008 fd13 	bl	9000b64c <HAL_RCC_ClockConfig>
}
90002c26:	b01e      	add	sp, #120	; 0x78
90002c28:	bd70      	pop	{r4, r5, r6, pc}
90002c2a:	bf00      	nop
90002c2c:	58000400 	.word	0x58000400
90002c30:	58024800 	.word	0x58024800

90002c34 <main>:
{
90002c34:	b580      	push	{r7, lr}

/* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90002c36:	2400      	movs	r4, #0
{
90002c38:	b098      	sub	sp, #96	; 0x60
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90002c3a:	2501      	movs	r5, #1

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002c3c:	271b      	movs	r7, #27

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002c3e:	2603      	movs	r6, #3
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90002c40:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90002c44:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_MPU_Disable();
90002c48:	f005 f8ac 	bl	90007da4 <HAL_MPU_Disable>
  MPU_InitStruct.BaseAddress = 0x24000000;
90002c4c:	f04f 5310 	mov.w	r3, #603979776	; 0x24000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002c50:	49d4      	ldr	r1, [pc, #848]	; (90002fa4 <main+0x370>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002c52:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.BaseAddress = 0x24000000;
90002c54:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002c56:	4bd4      	ldr	r3, [pc, #848]	; (90002fa8 <main+0x374>)
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90002c58:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002c5c:	e9cd 130d 	strd	r1, r3, [sp, #52]	; 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002c60:	f005 f8be 	bl	90007de0 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
90002c64:	f04f 4310 	mov.w	r3, #2415919104	; 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002c68:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002c6a:	f88d 4037 	strb.w	r4, [sp, #55]	; 0x37
  MPU_InitStruct.BaseAddress = 0x90000000;
90002c6e:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90002c70:	f8ad 403a 	strh.w	r4, [sp, #58]	; 0x3a
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
90002c74:	f88d 502d 	strb.w	r5, [sp, #45]	; 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002c78:	f88d 7034 	strb.w	r7, [sp, #52]	; 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002c7c:	f005 f8b0 	bl	90007de0 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90002c80:	2302      	movs	r3, #2
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002c82:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002c84:	f8ad 6037 	strh.w	r6, [sp, #55]	; 0x37
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90002c88:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
90002c8c:	231a      	movs	r3, #26
90002c8e:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90002c92:	f240 1301 	movw	r3, #257	; 0x101
90002c96:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002c9a:	f005 f8a1 	bl	90007de0 <HAL_MPU_ConfigRegion>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0xD0000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002c9e:	f44f 7380 	mov.w	r3, #256	; 0x100
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002ca2:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90002ca4:	f8ad 403a 	strh.w	r4, [sp, #58]	; 0x3a

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90002ca8:	2404      	movs	r4, #4
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002caa:	f8ad 3037 	strh.w	r3, [sp, #55]	; 0x37
  MPU_InitStruct.BaseAddress = 0xD0000000;
90002cae:	f04f 4350 	mov.w	r3, #3489660928	; 0xd0000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002cb2:	f88d 7034 	strb.w	r7, [sp, #52]	; 0x34
  MPU_InitStruct.BaseAddress = 0xD0000000;
90002cb6:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
90002cb8:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002cbc:	f005 f890 	bl	90007de0 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90002cc0:	2318      	movs	r3, #24
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002cc2:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002cc4:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90002cc8:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90002ccc:	f88d 402d 	strb.w	r4, [sp, #45]	; 0x2d
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90002cd0:	f88d 503a 	strb.w	r5, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002cd4:	f005 f884 	bl	90007de0 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
90002cd8:	4620      	mov	r0, r4
90002cda:	f005 f871 	bl	90007dc0 <HAL_MPU_Enable>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
90002cde:	4ab3      	ldr	r2, [pc, #716]	; (90002fac <main+0x378>)
90002ce0:	6953      	ldr	r3, [r2, #20]
90002ce2:	f413 3300 	ands.w	r3, r3, #131072	; 0x20000
90002ce6:	d111      	bne.n	90002d0c <main+0xd8>
  __ASM volatile ("dsb 0xF":::"memory");
90002ce8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002cec:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
90002cf0:	f8c2 3250 	str.w	r3, [r2, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
90002cf4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002cf8:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
90002cfc:	6953      	ldr	r3, [r2, #20]
90002cfe:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90002d02:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
90002d04:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002d08:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
90002d0c:	48a7      	ldr	r0, [pc, #668]	; (90002fac <main+0x378>)
90002d0e:	6943      	ldr	r3, [r0, #20]
90002d10:	f413 3380 	ands.w	r3, r3, #65536	; 0x10000
90002d14:	d124      	bne.n	90002d60 <main+0x12c>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90002d16:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90002d1a:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90002d1e:	f8d0 5080 	ldr.w	r5, [r0, #128]	; 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002d22:	f643 76e0 	movw	r6, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90002d26:	f3c5 344e 	ubfx	r4, r5, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002d2a:	f3c5 05c9 	ubfx	r5, r5, #3, #10
90002d2e:	0164      	lsls	r4, r4, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002d30:	ea04 0106 	and.w	r1, r4, r6
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002d34:	462b      	mov	r3, r5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002d36:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90002d3a:	3b01      	subs	r3, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002d3c:	f8c0 2260 	str.w	r2, [r0, #608]	; 0x260
      } while (ways-- != 0U);
90002d40:	1c5a      	adds	r2, r3, #1
90002d42:	d1f8      	bne.n	90002d36 <main+0x102>
    } while(sets-- != 0U);
90002d44:	3c20      	subs	r4, #32
90002d46:	f114 0f20 	cmn.w	r4, #32
90002d4a:	d1f1      	bne.n	90002d30 <main+0xfc>
90002d4c:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
90002d50:	6943      	ldr	r3, [r0, #20]
90002d52:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
90002d56:	6143      	str	r3, [r0, #20]
90002d58:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002d5c:	f3bf 8f6f 	isb	sy
  HAL_Init();
90002d60:	f004 ff68 	bl	90007c34 <HAL_Init>
  SystemClock_Config();
90002d64:	f7ff ff0e 	bl	90002b84 <SystemClock_Config>
  __ASM volatile ("cpsie i" : : : "memory");
90002d68:	b662      	cpsie	i
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002d6a:	2400      	movs	r4, #0
  __HAL_RCC_GPIOK_CLK_ENABLE();
90002d6c:	4d90      	ldr	r5, [pc, #576]	; (90002fb0 <main+0x37c>)
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002d6e:	21c0      	movs	r1, #192	; 0xc0
90002d70:	4890      	ldr	r0, [pc, #576]	; (90002fb4 <main+0x380>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002d72:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002d74:	4622      	mov	r2, r4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002d76:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002d78:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90002d7c:	2708      	movs	r7, #8
  GPIO_InitStruct.Pin = LCD_RESET_Pin;
90002d7e:	f04f 0804 	mov.w	r8, #4
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90002d82:	f04f 0a05 	mov.w	sl, #5
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002d86:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90002d8a:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  __HAL_RCC_GPIOK_CLK_ENABLE();
90002d8e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002d92:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
90002d96:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002d9a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002d9e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
90002da2:	9301      	str	r3, [sp, #4]
90002da4:	9b01      	ldr	r3, [sp, #4]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90002da6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002daa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
90002dae:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002db2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002db6:	f003 0340 	and.w	r3, r3, #64	; 0x40
90002dba:	9302      	str	r3, [sp, #8]
90002dbc:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOI_CLK_ENABLE();
90002dbe:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002dc2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
90002dc6:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002dca:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002dce:	f403 7380 	and.w	r3, r3, #256	; 0x100
90002dd2:	9303      	str	r3, [sp, #12]
90002dd4:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90002dd6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002dda:	f043 0310 	orr.w	r3, r3, #16
90002dde:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002de2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002de6:	f003 0310 	and.w	r3, r3, #16
90002dea:	9304      	str	r3, [sp, #16]
90002dec:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
90002dee:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002df2:	f043 0302 	orr.w	r3, r3, #2
90002df6:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002dfa:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002dfe:	f003 0302 	and.w	r3, r3, #2
90002e02:	9305      	str	r3, [sp, #20]
90002e04:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
90002e06:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e0a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
90002e0e:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002e12:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e16:	f403 7300 	and.w	r3, r3, #512	; 0x200
90002e1a:	9306      	str	r3, [sp, #24]
90002e1c:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90002e1e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e22:	f043 0308 	orr.w	r3, r3, #8
90002e26:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002e2a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e2e:	f003 0308 	and.w	r3, r3, #8
90002e32:	9307      	str	r3, [sp, #28]
90002e34:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90002e36:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e3a:	f043 0320 	orr.w	r3, r3, #32
90002e3e:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002e42:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e46:	f003 0320 	and.w	r3, r3, #32
90002e4a:	9308      	str	r3, [sp, #32]
90002e4c:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90002e4e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e52:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90002e56:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002e5a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e5e:	f003 0380 	and.w	r3, r3, #128	; 0x80
90002e62:	9309      	str	r3, [sp, #36]	; 0x24
90002e64:	9b09      	ldr	r3, [sp, #36]	; 0x24
  __HAL_RCC_GPIOA_CLK_ENABLE();
90002e66:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e6a:	f043 0301 	orr.w	r3, r3, #1
90002e6e:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002e72:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e76:	f003 0301 	and.w	r3, r3, #1
90002e7a:	930a      	str	r3, [sp, #40]	; 0x28
90002e7c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002e7e:	f005 fb9f 	bl	900085c0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90002e82:	4622      	mov	r2, r4
90002e84:	2180      	movs	r1, #128	; 0x80
90002e86:	484c      	ldr	r0, [pc, #304]	; (90002fb8 <main+0x384>)
90002e88:	f005 fb9a 	bl	900085c0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LED_RED_GPIO_Port, LED_RED_Pin, GPIO_PIN_SET);
90002e8c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
90002e90:	484a      	ldr	r0, [pc, #296]	; (90002fbc <main+0x388>)
90002e92:	2201      	movs	r2, #1
90002e94:	f005 fb94 	bl	900085c0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
90002e98:	4622      	mov	r2, r4
90002e9a:	2108      	movs	r1, #8
90002e9c:	4848      	ldr	r0, [pc, #288]	; (90002fc0 <main+0x38c>)
90002e9e:	f005 fb8f 	bl	900085c0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90002ea2:	2201      	movs	r2, #1
90002ea4:	4847      	ldr	r0, [pc, #284]	; (90002fc4 <main+0x390>)
90002ea6:	4611      	mov	r1, r2
90002ea8:	f005 fb8a 	bl	900085c0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOA, LCD_RESET_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
90002eac:	4622      	mov	r2, r4
90002eae:	2144      	movs	r1, #68	; 0x44
90002eb0:	4845      	ldr	r0, [pc, #276]	; (90002fc8 <main+0x394>)
90002eb2:	f005 fb85 	bl	900085c0 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
90002eb6:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90002eb8:	a90b      	add	r1, sp, #44	; 0x2c
90002eba:	483e      	ldr	r0, [pc, #248]	; (90002fb4 <main+0x380>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002ebc:	e9cd 360b 	strd	r3, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002ec0:	e9cd 490d 	strd	r4, r9, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90002ec4:	f005 f97c 	bl	900081c0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90002ec8:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90002eca:	a90b      	add	r1, sp, #44	; 0x2c
90002ecc:	483a      	ldr	r0, [pc, #232]	; (90002fb8 <main+0x384>)
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90002ece:	930b      	str	r3, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002ed0:	940e      	str	r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002ed2:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90002ed6:	f005 f973 	bl	900081c0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LED_RED_Pin;
90002eda:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  HAL_GPIO_Init(LED_RED_GPIO_Port, &GPIO_InitStruct);
90002ede:	a90b      	add	r1, sp, #44	; 0x2c
90002ee0:	4836      	ldr	r0, [pc, #216]	; (90002fbc <main+0x388>)
  GPIO_InitStruct.Pin = LED_RED_Pin;
90002ee2:	930b      	str	r3, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002ee4:	940e      	str	r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002ee6:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(LED_RED_GPIO_Port, &GPIO_InitStruct);
90002eea:	f005 f969 	bl	900081c0 <HAL_GPIO_Init>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90002eee:	a90b      	add	r1, sp, #44	; 0x2c
90002ef0:	4833      	ldr	r0, [pc, #204]	; (90002fc0 <main+0x38c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002ef2:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90002ef6:	970b      	str	r7, [sp, #44]	; 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002ef8:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90002efc:	f005 f960 	bl	900081c0 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90002f00:	a90b      	add	r1, sp, #44	; 0x2c
90002f02:	4830      	ldr	r0, [pc, #192]	; (90002fc4 <main+0x390>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002f04:	e9cd 660b 	strd	r6, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002f08:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90002f0c:	f005 f958 	bl	900081c0 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
90002f10:	a90b      	add	r1, sp, #44	; 0x2c
90002f12:	482d      	ldr	r0, [pc, #180]	; (90002fc8 <main+0x394>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002f14:	e9cd 860b 	strd	r8, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002f18:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
90002f1c:	f005 f950 	bl	900081c0 <HAL_GPIO_Init>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002f20:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90002f24:	f04f 0940 	mov.w	r9, #64	; 0x40
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90002f28:	a90b      	add	r1, sp, #44	; 0x2c
90002f2a:	4827      	ldr	r0, [pc, #156]	; (90002fc8 <main+0x394>)
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90002f2c:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002f30:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90002f34:	f005 f944 	bl	900081c0 <HAL_GPIO_Init>
  __HAL_RCC_MDMA_CLK_ENABLE();
90002f38:	f8d5 30d4 	ldr.w	r3, [r5, #212]	; 0xd4
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002f3c:	4622      	mov	r2, r4
90002f3e:	2105      	movs	r1, #5
  __HAL_RCC_MDMA_CLK_ENABLE();
90002f40:	4333      	orrs	r3, r6
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002f42:	207a      	movs	r0, #122	; 0x7a
  __HAL_RCC_MDMA_CLK_ENABLE();
90002f44:	f8c5 30d4 	str.w	r3, [r5, #212]	; 0xd4
90002f48:	f8d5 30d4 	ldr.w	r3, [r5, #212]	; 0xd4
  hltdc.Instance = LTDC;
90002f4c:	4d1f      	ldr	r5, [pc, #124]	; (90002fcc <main+0x398>)
  __HAL_RCC_MDMA_CLK_ENABLE();
90002f4e:	4033      	ands	r3, r6
90002f50:	9300      	str	r3, [sp, #0]
90002f52:	9b00      	ldr	r3, [sp, #0]
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002f54:	f004 fec8 	bl	90007ce8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(MDMA_IRQn);
90002f58:	207a      	movs	r0, #122	; 0x7a
90002f5a:	f004 ff03 	bl	90007d64 <HAL_NVIC_EnableIRQ>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
90002f5e:	2234      	movs	r2, #52	; 0x34
90002f60:	4621      	mov	r1, r4
90002f62:	a80b      	add	r0, sp, #44	; 0x2c
90002f64:	f023 fc84 	bl	90026870 <memset>
  hltdc.Instance = LTDC;
90002f68:	4b19      	ldr	r3, [pc, #100]	; (90002fd0 <main+0x39c>)
  hltdc.Init.AccumulatedVBP = 11;
90002f6a:	202a      	movs	r0, #42	; 0x2a
  hltdc.Init.VerticalSync = 8;
90002f6c:	61af      	str	r7, [r5, #24]
  hltdc.Instance = LTDC;
90002f6e:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 39;
90002f70:	2327      	movs	r3, #39	; 0x27
  hltdc.Init.AccumulatedActiveH = 283;
90002f72:	f240 270a 	movw	r7, #522	; 0x20a
  hltdc.Init.TotalHeigh = 285;
90002f76:	f44f 7c04 	mov.w	ip, #528	; 0x210
  hltdc.Init.HorizontalSync = 39;
90002f7a:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
90002f7c:	230b      	movs	r3, #11
  hltdc.Init.Backcolor.Blue = 0;
90002f7e:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.Backcolor.Red = 0;
90002f80:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  hltdc.Init.AccumulatedVBP = 11;
90002f84:	e9c5 0307 	strd	r0, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
90002f88:	f240 131b 	movw	r3, #283	; 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90002f8c:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
90002f8e:	e9c5 7309 	strd	r7, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 285;
90002f92:	f240 131d 	movw	r3, #285	; 0x11d
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90002f96:	2702      	movs	r7, #2
  hltdc.Init.TotalHeigh = 285;
90002f98:	e9c5 c30b 	strd	ip, r3, [r5, #44]	; 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
90002f9c:	e9c5 4401 	strd	r4, r4, [r5, #4]
90002fa0:	e018      	b.n	90002fd4 <main+0x3a0>
90002fa2:	bf00      	nop
90002fa4:	03000012 	.word	0x03000012
90002fa8:	01010001 	.word	0x01010001
90002fac:	e000ed00 	.word	0xe000ed00
90002fb0:	58024400 	.word	0x58024400
90002fb4:	58020400 	.word	0x58020400
90002fb8:	58020c00 	.word	0x58020c00
90002fbc:	58022000 	.word	0x58022000
90002fc0:	58021800 	.word	0x58021800
90002fc4:	58022800 	.word	0x58022800
90002fc8:	58020000 	.word	0x58020000
90002fcc:	240092d8 	.word	0x240092d8
90002fd0:	50001000 	.word	0x50001000
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
90002fd4:	e9c5 4403 	strd	r4, r4, [r5, #12]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90002fd8:	f007 fb18 	bl	9000a60c <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 480;
90002fdc:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90002fe0:	4622      	mov	r2, r4
90002fe2:	a90b      	add	r1, sp, #44	; 0x2c
  pLayerCfg.WindowX1 = 480;
90002fe4:	930c      	str	r3, [sp, #48]	; 0x30
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90002fe6:	4628      	mov	r0, r5
  pLayerCfg.ImageWidth = 480;
90002fe8:	9315      	str	r3, [sp, #84]	; 0x54
  pLayerCfg.WindowY1 = 272;
90002fea:	f44f 7388 	mov.w	r3, #272	; 0x110
  hdma2d.Instance = DMA2D;
90002fee:	4d55      	ldr	r5, [pc, #340]	; (90003144 <main+0x510>)
  pLayerCfg.WindowY1 = 272;
90002ff0:	930e      	str	r3, [sp, #56]	; 0x38
  pLayerCfg.ImageHeight = 272;
90002ff2:	9316      	str	r3, [sp, #88]	; 0x58
  pLayerCfg.Alpha = 255;
90002ff4:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.WindowX0 = 0;
90002ff6:	940b      	str	r4, [sp, #44]	; 0x2c
  pLayerCfg.Alpha = 255;
90002ff8:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90002ffa:	f44f 6380 	mov.w	r3, #1024	; 0x400
  pLayerCfg.WindowY0 = 0;
90002ffe:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90003000:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.Alpha0 = 0;
90003002:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.FBStartAdress = 0;
90003004:	9414      	str	r4, [sp, #80]	; 0x50
  pLayerCfg.Backcolor.Blue = 0;
90003006:	f8ad 405c 	strh.w	r4, [sp, #92]	; 0x5c
  pLayerCfg.Backcolor.Red = 0;
9000300a:	f88d 405e 	strb.w	r4, [sp, #94]	; 0x5e
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
9000300e:	970f      	str	r7, [sp, #60]	; 0x3c
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90003010:	f8cd a04c 	str.w	sl, [sp, #76]	; 0x4c
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003014:	f007 fbce 	bl	9000a7b4 <HAL_LTDC_ConfigLayer>
  hdma2d.Instance = DMA2D;
90003018:	4b4b      	ldr	r3, [pc, #300]	; (90003148 <main+0x514>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
9000301a:	4628      	mov	r0, r5
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
9000301c:	65ec      	str	r4, [r5, #92]	; 0x5c
  hdma2d.Instance = DMA2D;
9000301e:	602b      	str	r3, [r5, #0]
  hdma2d.Init.OutputOffset = 0;
90003020:	60ec      	str	r4, [r5, #12]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
90003022:	e9c5 4711 	strd	r4, r7, [r5, #68]	; 0x44
  hdma2d.LayerCfg[1].InputAlpha = 0;
90003026:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
9000302a:	e9c5 4415 	strd	r4, r4, [r5, #84]	; 0x54
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
9000302e:	e9c5 4701 	strd	r4, r7, [r5, #4]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90003032:	f004 ff7d 	bl	90007f30 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90003036:	4631      	mov	r1, r6
90003038:	4628      	mov	r0, r5
9000303a:	f005 f851 	bl	900080e0 <HAL_DMA2D_ConfigLayer>
  hsdram2.Instance = FMC_SDRAM_DEVICE;
9000303e:	4843      	ldr	r0, [pc, #268]	; (9000314c <main+0x518>)
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90003040:	f44f 73c0 	mov.w	r3, #384	; 0x180
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90003044:	a90b      	add	r1, sp, #44	; 0x2c
  SdramTiming.WriteRecoveryTime = 5;
90003046:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  SdramTiming.LoadToActiveDelay = 2;
9000304a:	970b      	str	r7, [sp, #44]	; 0x2c
  SdramTiming.SelfRefreshTime = 4;
9000304c:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
90003050:	f8c0 800c 	str.w	r8, [r0, #12]
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90003054:	f8c0 9014 	str.w	r9, [r0, #20]
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
90003058:	6284      	str	r4, [r0, #40]	; 0x28
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
9000305a:	e9c0 3406 	strd	r3, r4, [r0, #24]
  hsdram2.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
9000305e:	f44f 6300 	mov.w	r3, #2048	; 0x800
90003062:	6203      	str	r3, [r0, #32]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90003064:	f44f 5380 	mov.w	r3, #4096	; 0x1000
90003068:	6243      	str	r3, [r0, #36]	; 0x24
  SdramTiming.ExitSelfRefreshDelay = 7;
9000306a:	2307      	movs	r3, #7
9000306c:	930c      	str	r3, [sp, #48]	; 0x30
  SdramTiming.RowCycleDelay = 7;
9000306e:	930e      	str	r3, [sp, #56]	; 0x38
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003070:	4b37      	ldr	r3, [pc, #220]	; (90003150 <main+0x51c>)
90003072:	6003      	str	r3, [r0, #0]
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90003074:	2310      	movs	r3, #16
  SdramTiming.RCDDelay = 2;
90003076:	e9cd 7710 	strd	r7, r7, [sp, #64]	; 0x40
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
9000307a:	6103      	str	r3, [r0, #16]
  hsdram2.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
9000307c:	e9c0 6401 	strd	r6, r4, [r0, #4]
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90003080:	f009 fbbc 	bl	9000c7fc <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit(0);
90003084:	4620      	mov	r0, r4
90003086:	f004 fb67 	bl	90007758 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
9000308a:	4620      	mov	r0, r4
9000308c:	f004 fbae 	bl	900077ec <BSP_SDRAM_Init>
  MX_LIBJPEG_Init();
90003090:	f7fd f9a0 	bl	900003d4 <MX_LIBJPEG_Init>
  hjpeg.Instance = JPEG;
90003094:	4b2f      	ldr	r3, [pc, #188]	; (90003154 <main+0x520>)
90003096:	4830      	ldr	r0, [pc, #192]	; (90003158 <main+0x524>)
90003098:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
9000309a:	f006 fa8b 	bl	900095b4 <HAL_JPEG_Init>
  hcrc.Instance = CRC;
9000309e:	482f      	ldr	r0, [pc, #188]	; (9000315c <main+0x528>)
900030a0:	4b2f      	ldr	r3, [pc, #188]	; (90003160 <main+0x52c>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
900030a2:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
900030a4:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
900030a6:	6206      	str	r6, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
900030a8:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
900030ac:	f004 feca 	bl	90007e44 <HAL_CRC_Init>
  MX_TouchGFX_Init();
900030b0:	f7fd f994 	bl	900003dc <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
900030b4:	f7fd f990 	bl	900003d8 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
900030b8:	f009 febe 	bl	9000ce38 <osKernelInitialize>
  bullet_timer_started_semaphoreHandle = osSemaphoreNew(1, 0, &bullet_timer_started_semaphore_attributes);
900030bc:	4a29      	ldr	r2, [pc, #164]	; (90003164 <main+0x530>)
900030be:	4621      	mov	r1, r4
900030c0:	4630      	mov	r0, r6
900030c2:	f009 ffc3 	bl	9000d04c <osSemaphoreNew>
900030c6:	4b28      	ldr	r3, [pc, #160]	; (90003168 <main+0x534>)
  bullet_timer_ended_semaphoreHandle = osSemaphoreNew(1, 0, &bullet_timer_ended_semaphore_attributes);
900030c8:	4a28      	ldr	r2, [pc, #160]	; (9000316c <main+0x538>)
900030ca:	4621      	mov	r1, r4
  bullet_timer_started_semaphoreHandle = osSemaphoreNew(1, 0, &bullet_timer_started_semaphore_attributes);
900030cc:	6018      	str	r0, [r3, #0]
  bullet_timer_ended_semaphoreHandle = osSemaphoreNew(1, 0, &bullet_timer_ended_semaphore_attributes);
900030ce:	4630      	mov	r0, r6
900030d0:	f009 ffbc 	bl	9000d04c <osSemaphoreNew>
900030d4:	4b26      	ldr	r3, [pc, #152]	; (90003170 <main+0x53c>)
  invincibility_timer_started_semaphoreHandle = osSemaphoreNew(1, 0, &invincibility_timer_started_semaphore_attributes);
900030d6:	4a27      	ldr	r2, [pc, #156]	; (90003174 <main+0x540>)
900030d8:	4621      	mov	r1, r4
  bullet_timer_ended_semaphoreHandle = osSemaphoreNew(1, 0, &bullet_timer_ended_semaphore_attributes);
900030da:	6018      	str	r0, [r3, #0]
  invincibility_timer_started_semaphoreHandle = osSemaphoreNew(1, 0, &invincibility_timer_started_semaphore_attributes);
900030dc:	4630      	mov	r0, r6
900030de:	f009 ffb5 	bl	9000d04c <osSemaphoreNew>
900030e2:	4b25      	ldr	r3, [pc, #148]	; (90003178 <main+0x544>)
900030e4:	4601      	mov	r1, r0
  invincibility_timer_ended_semaphoreHandle = osSemaphoreNew(1, 0, &invincibility_timer_ended_semaphore_attributes);
900030e6:	4a25      	ldr	r2, [pc, #148]	; (9000317c <main+0x548>)
900030e8:	4630      	mov	r0, r6
  invincibility_timer_started_semaphoreHandle = osSemaphoreNew(1, 0, &invincibility_timer_started_semaphore_attributes);
900030ea:	6019      	str	r1, [r3, #0]
  invincibility_timer_ended_semaphoreHandle = osSemaphoreNew(1, 0, &invincibility_timer_ended_semaphore_attributes);
900030ec:	4621      	mov	r1, r4
900030ee:	f009 ffad 	bl	9000d04c <osSemaphoreNew>
900030f2:	4b23      	ldr	r3, [pc, #140]	; (90003180 <main+0x54c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
900030f4:	4a23      	ldr	r2, [pc, #140]	; (90003184 <main+0x550>)
900030f6:	4621      	mov	r1, r4
  invincibility_timer_ended_semaphoreHandle = osSemaphoreNew(1, 0, &invincibility_timer_ended_semaphore_attributes);
900030f8:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
900030fa:	4823      	ldr	r0, [pc, #140]	; (90003188 <main+0x554>)
900030fc:	f009 fec8 	bl	9000ce90 <osThreadNew>
90003100:	4b22      	ldr	r3, [pc, #136]	; (9000318c <main+0x558>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003102:	4a23      	ldr	r2, [pc, #140]	; (90003190 <main+0x55c>)
90003104:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90003106:	6018      	str	r0, [r3, #0]
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003108:	4822      	ldr	r0, [pc, #136]	; (90003194 <main+0x560>)
9000310a:	f009 fec1 	bl	9000ce90 <osThreadNew>
9000310e:	4b22      	ldr	r3, [pc, #136]	; (90003198 <main+0x564>)
  videoTaskHandle = osThreadNew(videoTaskFunc, NULL, &videoTask_attributes);
90003110:	4a22      	ldr	r2, [pc, #136]	; (9000319c <main+0x568>)
90003112:	4621      	mov	r1, r4
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003114:	6018      	str	r0, [r3, #0]
  videoTaskHandle = osThreadNew(videoTaskFunc, NULL, &videoTask_attributes);
90003116:	4822      	ldr	r0, [pc, #136]	; (900031a0 <main+0x56c>)
90003118:	f009 feba 	bl	9000ce90 <osThreadNew>
9000311c:	4b21      	ldr	r3, [pc, #132]	; (900031a4 <main+0x570>)
  bullet_timer_taHandle = osThreadNew(bullet_timer_task_function, NULL, &bullet_timer_ta_attributes);
9000311e:	4a22      	ldr	r2, [pc, #136]	; (900031a8 <main+0x574>)
90003120:	4621      	mov	r1, r4
  videoTaskHandle = osThreadNew(videoTaskFunc, NULL, &videoTask_attributes);
90003122:	6018      	str	r0, [r3, #0]
  bullet_timer_taHandle = osThreadNew(bullet_timer_task_function, NULL, &bullet_timer_ta_attributes);
90003124:	4821      	ldr	r0, [pc, #132]	; (900031ac <main+0x578>)
90003126:	f009 feb3 	bl	9000ce90 <osThreadNew>
9000312a:	4b21      	ldr	r3, [pc, #132]	; (900031b0 <main+0x57c>)
9000312c:	4605      	mov	r5, r0
  invincibility_tHandle = osThreadNew(invincibility_timer_task_function, NULL, &invincibility_t_attributes);
9000312e:	4a21      	ldr	r2, [pc, #132]	; (900031b4 <main+0x580>)
90003130:	4621      	mov	r1, r4
90003132:	4821      	ldr	r0, [pc, #132]	; (900031b8 <main+0x584>)
  bullet_timer_taHandle = osThreadNew(bullet_timer_task_function, NULL, &bullet_timer_ta_attributes);
90003134:	601d      	str	r5, [r3, #0]
  invincibility_tHandle = osThreadNew(invincibility_timer_task_function, NULL, &invincibility_t_attributes);
90003136:	f009 feab 	bl	9000ce90 <osThreadNew>
9000313a:	4b20      	ldr	r3, [pc, #128]	; (900031bc <main+0x588>)
9000313c:	6018      	str	r0, [r3, #0]
  osKernelStart();
9000313e:	f009 fe8d 	bl	9000ce5c <osKernelStart>
  while (1)
90003142:	e7fe      	b.n	90003142 <main+0x50e>
90003144:	24009218 	.word	0x24009218
90003148:	52001000 	.word	0x52001000
9000314c:	24009458 	.word	0x24009458
90003150:	52004140 	.word	0x52004140
90003154:	52003000 	.word	0x52003000
90003158:	24009280 	.word	0x24009280
9000315c:	240091f4 	.word	0x240091f4
90003160:	58024c00 	.word	0x58024c00
90003164:	90028e48 	.word	0x90028e48
90003168:	240091e8 	.word	0x240091e8
9000316c:	90028e38 	.word	0x90028e38
90003170:	240091e4 	.word	0x240091e4
90003174:	90028ed4 	.word	0x90028ed4
90003178:	24009494 	.word	0x24009494
9000317c:	90028ec4 	.word	0x90028ec4
90003180:	24009490 	.word	0x24009490
90003184:	90028e7c 	.word	0x90028e7c
90003188:	90002b15 	.word	0x90002b15
9000318c:	240091f0 	.word	0x240091f0
90003190:	90028e14 	.word	0x90028e14
90003194:	900003ed 	.word	0x900003ed
90003198:	240091e0 	.word	0x240091e0
9000319c:	90028ee4 	.word	0x90028ee4
900031a0:	90002a99 	.word	0x90002a99
900031a4:	24009498 	.word	0x24009498
900031a8:	90028e58 	.word	0x90028e58
900031ac:	90002b21 	.word	0x90002b21
900031b0:	240091ec 	.word	0x240091ec
900031b4:	90028ea0 	.word	0x90028ea0
900031b8:	90002b51 	.word	0x90002b51
900031bc:	2400948c 	.word	0x2400948c

900031c0 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
900031c0:	4b03      	ldr	r3, [pc, #12]	; (900031d0 <HAL_TIM_PeriodElapsedCallback+0x10>)
900031c2:	6802      	ldr	r2, [r0, #0]
900031c4:	429a      	cmp	r2, r3
900031c6:	d000      	beq.n	900031ca <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
900031c8:	4770      	bx	lr
    HAL_IncTick();
900031ca:	f004 bd63 	b.w	90007c94 <HAL_IncTick>
900031ce:	bf00      	nop
900031d0:	40001000 	.word	0x40001000

900031d4 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
900031d4:	4770      	bx	lr
900031d6:	bf00      	nop

900031d8 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
900031d8:	4b0b      	ldr	r3, [pc, #44]	; (90003208 <HAL_MspInit+0x30>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
900031da:	2200      	movs	r2, #0
900031dc:	210f      	movs	r1, #15
900031de:	f06f 0001 	mvn.w	r0, #1
{
900031e2:	b410      	push	{r4}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
900031e4:	f8d3 40f4 	ldr.w	r4, [r3, #244]	; 0xf4
{
900031e8:	b083      	sub	sp, #12
  __HAL_RCC_SYSCFG_CLK_ENABLE();
900031ea:	f044 0402 	orr.w	r4, r4, #2
900031ee:	f8c3 40f4 	str.w	r4, [r3, #244]	; 0xf4
900031f2:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
900031f6:	f003 0302 	and.w	r3, r3, #2
900031fa:	9301      	str	r3, [sp, #4]
900031fc:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
900031fe:	b003      	add	sp, #12
90003200:	f85d 4b04 	ldr.w	r4, [sp], #4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90003204:	f004 bd70 	b.w	90007ce8 <HAL_NVIC_SetPriority>
90003208:	58024400 	.word	0x58024400

9000320c <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
9000320c:	4b0a      	ldr	r3, [pc, #40]	; (90003238 <HAL_CRC_MspInit+0x2c>)
9000320e:	6802      	ldr	r2, [r0, #0]
90003210:	429a      	cmp	r2, r3
90003212:	d000      	beq.n	90003216 <HAL_CRC_MspInit+0xa>
90003214:	4770      	bx	lr
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
90003216:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
{
9000321a:	b082      	sub	sp, #8
    __HAL_RCC_CRC_CLK_ENABLE();
9000321c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90003220:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
90003224:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90003228:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
9000322c:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
90003230:	9301      	str	r3, [sp, #4]
90003232:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
90003234:	b002      	add	sp, #8
90003236:	4770      	bx	lr
90003238:	58024c00 	.word	0x58024c00

9000323c <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
9000323c:	4b0f      	ldr	r3, [pc, #60]	; (9000327c <HAL_DMA2D_MspInit+0x40>)
9000323e:	6802      	ldr	r2, [r0, #0]
90003240:	429a      	cmp	r2, r3
90003242:	d000      	beq.n	90003246 <HAL_DMA2D_MspInit+0xa>
90003244:	4770      	bx	lr
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
90003246:	4b0e      	ldr	r3, [pc, #56]	; (90003280 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90003248:	205a      	movs	r0, #90	; 0x5a
9000324a:	2200      	movs	r2, #0
9000324c:	2105      	movs	r1, #5
{
9000324e:	b510      	push	{r4, lr}
    __HAL_RCC_DMA2D_CLK_ENABLE();
90003250:	f8d3 40d4 	ldr.w	r4, [r3, #212]	; 0xd4
{
90003254:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
90003256:	f044 0410 	orr.w	r4, r4, #16
9000325a:	f8c3 40d4 	str.w	r4, [r3, #212]	; 0xd4
9000325e:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
90003262:	f003 0310 	and.w	r3, r3, #16
90003266:	9301      	str	r3, [sp, #4]
90003268:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
9000326a:	f004 fd3d 	bl	90007ce8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
9000326e:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
90003270:	b002      	add	sp, #8
90003272:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90003276:	f004 bd75 	b.w	90007d64 <HAL_NVIC_EnableIRQ>
9000327a:	bf00      	nop
9000327c:	52001000 	.word	0x52001000
90003280:	58024400 	.word	0x58024400

90003284 <HAL_JPEG_MspInit>:
* @param hjpeg: JPEG handle pointer
* @retval None
*/
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
  if(hjpeg->Instance==JPEG)
90003284:	4b3f      	ldr	r3, [pc, #252]	; (90003384 <HAL_JPEG_MspInit+0x100>)
90003286:	6802      	ldr	r2, [r0, #0]
90003288:	429a      	cmp	r2, r3
9000328a:	d000      	beq.n	9000328e <HAL_JPEG_MspInit+0xa>
9000328c:	4770      	bx	lr
{
9000328e:	b570      	push	{r4, r5, r6, lr}
  /* USER CODE BEGIN JPEG_MspInit 0 */
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
  /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
90003290:	4b3d      	ldr	r3, [pc, #244]	; (90003388 <HAL_JPEG_MspInit+0x104>)
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90003292:	2211      	movs	r2, #17
90003294:	4e3d      	ldr	r6, [pc, #244]	; (9000338c <HAL_JPEG_MspInit+0x108>)
{
90003296:	b082      	sub	sp, #8
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003298:	4d3d      	ldr	r5, [pc, #244]	; (90003390 <HAL_JPEG_MspInit+0x10c>)
9000329a:	4604      	mov	r4, r0
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
9000329c:	6072      	str	r2, [r6, #4]
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
    hmdma_jpeg_infifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
9000329e:	4630      	mov	r0, r6
    __HAL_RCC_JPEG_CLK_ENABLE();
900032a0:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
900032a4:	493b      	ldr	r1, [pc, #236]	; (90003394 <HAL_JPEG_MspInit+0x110>)
    __HAL_RCC_JPEG_CLK_ENABLE();
900032a6:	f042 0220 	orr.w	r2, r2, #32
900032aa:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
900032ae:	2280      	movs	r2, #128	; 0x80
    __HAL_RCC_JPEG_CLK_ENABLE();
900032b0:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
900032b4:	6232      	str	r2, [r6, #32]
    __HAL_RCC_JPEG_CLK_ENABLE();
900032b6:	f003 0320 	and.w	r3, r3, #32
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
900032ba:	6031      	str	r1, [r6, #0]
    __HAL_RCC_JPEG_CLK_ENABLE();
900032bc:	9301      	str	r3, [sp, #4]
    hmdma_jpeg_infifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
900032be:	2300      	movs	r3, #0
    __HAL_RCC_JPEG_CLK_ENABLE();
900032c0:	9901      	ldr	r1, [sp, #4]
    hmdma_jpeg_infifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
900032c2:	6133      	str	r3, [r6, #16]
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
900032c4:	e9c6 3202 	strd	r3, r2, [r6, #8]
    hmdma_jpeg_infifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900032c8:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
900032cc:	6272      	str	r2, [r6, #36]	; 0x24
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
900032ce:	2220      	movs	r2, #32
    hmdma_jpeg_infifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_BYTE;
900032d0:	e9c6 3306 	strd	r3, r3, [r6, #24]
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
900032d4:	e9c6 330d 	strd	r3, r3, [r6, #52]	; 0x34
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
900032d8:	62b2      	str	r2, [r6, #40]	; 0x28
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
900032da:	f44f 3300 	mov.w	r3, #131072	; 0x20000
900032de:	f44f 42a0 	mov.w	r2, #20480	; 0x5000
900032e2:	e9c6 230b 	strd	r2, r3, [r6, #44]	; 0x2c
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
900032e6:	2313      	movs	r3, #19
900032e8:	606b      	str	r3, [r5, #4]
    hmdma_jpeg_infifo_th.Init.SourceInc = MDMA_SRC_INC_BYTE;
900032ea:	2302      	movs	r3, #2
900032ec:	6173      	str	r3, [r6, #20]
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
900032ee:	f007 fb55 	bl	9000a99c <HAL_MDMA_Init>
900032f2:	2800      	cmp	r0, #0
900032f4:	d13a      	bne.n	9000336c <HAL_JPEG_MspInit+0xe8>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_infifo_th, 0, 0) != HAL_OK)
900032f6:	2200      	movs	r2, #0
900032f8:	4824      	ldr	r0, [pc, #144]	; (9000338c <HAL_JPEG_MspInit+0x108>)
900032fa:	4611      	mov	r1, r2
900032fc:	f007 fbec 	bl	9000aad8 <HAL_MDMA_ConfigPostRequestMask>
90003300:	2800      	cmp	r0, #0
90003302:	d13c      	bne.n	9000337e <HAL_JPEG_MspInit+0xfa>
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
    hmdma_jpeg_outfifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90003304:	2220      	movs	r2, #32
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90003306:	2300      	movs	r3, #0
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90003308:	6326      	str	r6, [r4, #48]	; 0x30
    hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
9000330a:	2013      	movs	r0, #19
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
9000330c:	61ea      	str	r2, [r5, #28]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
    hmdma_jpeg_outfifo_th.Init.BufferTransferLength = 32;
9000330e:	62aa      	str	r2, [r5, #40]	; 0x28
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90003310:	f44f 3220 	mov.w	r2, #163840	; 0x28000
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
90003314:	4920      	ldr	r1, [pc, #128]	; (90003398 <HAL_JPEG_MspInit+0x114>)
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90003316:	60ab      	str	r3, [r5, #8]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
90003318:	622b      	str	r3, [r5, #32]
    hmdma_jpeg_outfifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_outfifo_th.Init.DestBlockAddressOffset = 0;
9000331a:	63ab      	str	r3, [r5, #56]	; 0x38
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
9000331c:	6434      	str	r4, [r6, #64]	; 0x40
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
9000331e:	e9c5 230c 	strd	r2, r3, [r5, #48]	; 0x30
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
90003322:	e9c5 3304 	strd	r3, r3, [r5, #16]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
90003326:	2308      	movs	r3, #8
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
90003328:	22c0      	movs	r2, #192	; 0xc0
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
9000332a:	e9c5 1000 	strd	r1, r0, [r5]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
9000332e:	61ab      	str	r3, [r5, #24]
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
90003330:	f44f 41a0 	mov.w	r1, #20480	; 0x5000
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90003334:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
90003338:	4815      	ldr	r0, [pc, #84]	; (90003390 <HAL_JPEG_MspInit+0x10c>)
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
9000333a:	62e9      	str	r1, [r5, #44]	; 0x2c
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
9000333c:	60ea      	str	r2, [r5, #12]
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
9000333e:	626b      	str	r3, [r5, #36]	; 0x24
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
90003340:	f007 fb2c 	bl	9000a99c <HAL_MDMA_Init>
90003344:	b9c0      	cbnz	r0, 90003378 <HAL_JPEG_MspInit+0xf4>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_outfifo_th, 0, 0) != HAL_OK)
90003346:	2200      	movs	r2, #0
90003348:	4811      	ldr	r0, [pc, #68]	; (90003390 <HAL_JPEG_MspInit+0x10c>)
9000334a:	4611      	mov	r1, r2
9000334c:	f007 fbc4 	bl	9000aad8 <HAL_MDMA_ConfigPostRequestMask>
90003350:	b978      	cbnz	r0, 90003372 <HAL_JPEG_MspInit+0xee>
    {
      Error_Handler();
    }

    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
90003352:	6365      	str	r5, [r4, #52]	; 0x34

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
90003354:	2079      	movs	r0, #121	; 0x79
90003356:	2200      	movs	r2, #0
90003358:	2105      	movs	r1, #5
    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
9000335a:	642c      	str	r4, [r5, #64]	; 0x40
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
9000335c:	f004 fcc4 	bl	90007ce8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
90003360:	2079      	movs	r0, #121	; 0x79
  /* USER CODE BEGIN JPEG_MspInit 1 */

  /* USER CODE END JPEG_MspInit 1 */
  }

}
90003362:	b002      	add	sp, #8
90003364:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
90003368:	f004 bcfc 	b.w	90007d64 <HAL_NVIC_EnableIRQ>
      Error_Handler();
9000336c:	f7ff ff32 	bl	900031d4 <Error_Handler>
90003370:	e7c1      	b.n	900032f6 <HAL_JPEG_MspInit+0x72>
      Error_Handler();
90003372:	f7ff ff2f 	bl	900031d4 <Error_Handler>
90003376:	e7ec      	b.n	90003352 <HAL_JPEG_MspInit+0xce>
      Error_Handler();
90003378:	f7ff ff2c 	bl	900031d4 <Error_Handler>
9000337c:	e7e3      	b.n	90003346 <HAL_JPEG_MspInit+0xc2>
      Error_Handler();
9000337e:	f7ff ff29 	bl	900031d4 <Error_Handler>
90003382:	e7bf      	b.n	90003304 <HAL_JPEG_MspInit+0x80>
90003384:	52003000 	.word	0x52003000
90003388:	58024400 	.word	0x58024400
9000338c:	24009380 	.word	0x24009380
90003390:	240093ec 	.word	0x240093ec
90003394:	52000200 	.word	0x52000200
90003398:	520001c0 	.word	0x520001c0

9000339c <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
9000339c:	b570      	push	{r4, r5, r6, lr}
9000339e:	b0ba      	sub	sp, #232	; 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900033a0:	2100      	movs	r1, #0
{
900033a2:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900033a4:	22c0      	movs	r2, #192	; 0xc0
900033a6:	a80a      	add	r0, sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900033a8:	9109      	str	r1, [sp, #36]	; 0x24
900033aa:	e9cd 1105 	strd	r1, r1, [sp, #20]
900033ae:	e9cd 1107 	strd	r1, r1, [sp, #28]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900033b2:	f023 fa5d 	bl	90026870 <memset>
  if(hltdc->Instance==LTDC)
900033b6:	4b4a      	ldr	r3, [pc, #296]	; (900034e0 <HAL_LTDC_MspInit+0x144>)
900033b8:	6822      	ldr	r2, [r4, #0]
900033ba:	429a      	cmp	r2, r3
900033bc:	d001      	beq.n	900033c2 <HAL_LTDC_MspInit+0x26>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
900033be:	b03a      	add	sp, #232	; 0xe8
900033c0:	bd70      	pop	{r4, r5, r6, pc}
    PeriphClkInitStruct.PLL3.PLL3P = 2;
900033c2:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3M = 5;
900033c4:	2205      	movs	r2, #5
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
900033c6:	f04f 5400 	mov.w	r4, #536870912	; 0x20000000
900033ca:	2500      	movs	r5, #0
    PeriphClkInitStruct.PLL3.PLL3N = 160;
900033cc:	21a0      	movs	r1, #160	; 0xa0
    PeriphClkInitStruct.PLL3.PLL3P = 2;
900033ce:	9316      	str	r3, [sp, #88]	; 0x58
    PeriphClkInitStruct.PLL3.PLL3M = 5;
900033d0:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLL3.PLL3R = 83;
900033d2:	2253      	movs	r2, #83	; 0x53
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
900033d4:	9317      	str	r3, [sp, #92]	; 0x5c
    PeriphClkInitStruct.PLL3.PLL3R = 83;
900033d6:	f44f 6300 	mov.w	r3, #2048	; 0x800
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900033da:	a80a      	add	r0, sp, #40	; 0x28
    PeriphClkInitStruct.PLL3.PLL3N = 160;
900033dc:	9115      	str	r1, [sp, #84]	; 0x54
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
900033de:	e9cd 450a 	strd	r4, r5, [sp, #40]	; 0x28
    PeriphClkInitStruct.PLL3.PLL3R = 83;
900033e2:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900033e6:	f008 fc09 	bl	9000bbfc <HAL_RCCEx_PeriphCLKConfig>
900033ea:	2800      	cmp	r0, #0
900033ec:	d174      	bne.n	900034d8 <HAL_LTDC_MspInit+0x13c>
    __HAL_RCC_LTDC_CLK_ENABLE();
900033ee:	4b3d      	ldr	r3, [pc, #244]	; (900034e4 <HAL_LTDC_MspInit+0x148>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
900033f0:	2402      	movs	r4, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900033f2:	2500      	movs	r5, #0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900033f4:	260e      	movs	r6, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
900033f6:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
900033fa:	a905      	add	r1, sp, #20
900033fc:	483a      	ldr	r0, [pc, #232]	; (900034e8 <HAL_LTDC_MspInit+0x14c>)
    __HAL_RCC_LTDC_CLK_ENABLE();
900033fe:	f042 0208 	orr.w	r2, r2, #8
90003402:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
90003406:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
9000340a:	f002 0208 	and.w	r2, r2, #8
9000340e:	9200      	str	r2, [sp, #0]
90003410:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOK_CLK_ENABLE();
90003412:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90003416:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
9000341a:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000341e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90003422:	f402 6280 	and.w	r2, r2, #1024	; 0x400
90003426:	9201      	str	r2, [sp, #4]
90003428:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
9000342a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000342e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
90003432:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90003436:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000343a:	f402 7280 	and.w	r2, r2, #256	; 0x100
9000343e:	9202      	str	r2, [sp, #8]
90003440:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
90003442:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90003446:	f442 7200 	orr.w	r2, r2, #512	; 0x200
9000344a:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000344e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90003452:	f402 7200 	and.w	r2, r2, #512	; 0x200
90003456:	9203      	str	r2, [sp, #12]
90003458:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOH_CLK_ENABLE();
9000345a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000345e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
90003462:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90003466:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
9000346a:	9408      	str	r4, [sp, #32]
    __HAL_RCC_GPIOH_CLK_ENABLE();
9000346c:	f003 0380 	and.w	r3, r3, #128	; 0x80
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003470:	9609      	str	r6, [sp, #36]	; 0x24
    __HAL_RCC_GPIOH_CLK_ENABLE();
90003472:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
90003474:	23fc      	movs	r3, #252	; 0xfc
    __HAL_RCC_GPIOH_CLK_ENABLE();
90003476:	9a04      	ldr	r2, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
90003478:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
9000347a:	e9cd 4506 	strd	r4, r5, [sp, #24]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
9000347e:	f004 fe9f 	bl	900081c0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
90003482:	f24d 2303 	movw	r3, #53763	; 0xd203
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90003486:	a905      	add	r1, sp, #20
90003488:	4818      	ldr	r0, [pc, #96]	; (900034ec <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
9000348a:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
9000348c:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003490:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90003494:	f004 fe94 	bl	900081c0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90003498:	f64f 73fb 	movw	r3, #65531	; 0xfffb
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
9000349c:	a905      	add	r1, sp, #20
9000349e:	4814      	ldr	r0, [pc, #80]	; (900034f0 <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
900034a0:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900034a2:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900034a6:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
900034aa:	f004 fe89 	bl	900081c0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
900034ae:	f44f 7300 	mov.w	r3, #512	; 0x200
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900034b2:	a905      	add	r1, sp, #20
900034b4:	480f      	ldr	r0, [pc, #60]	; (900034f4 <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900034b6:	9609      	str	r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_9;
900034b8:	e9cd 3405 	strd	r3, r4, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
900034bc:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900034c0:	f004 fe7e 	bl	900081c0 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
900034c4:	462a      	mov	r2, r5
900034c6:	2105      	movs	r1, #5
900034c8:	2058      	movs	r0, #88	; 0x58
900034ca:	f004 fc0d 	bl	90007ce8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
900034ce:	2058      	movs	r0, #88	; 0x58
900034d0:	f004 fc48 	bl	90007d64 <HAL_NVIC_EnableIRQ>
}
900034d4:	b03a      	add	sp, #232	; 0xe8
900034d6:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
900034d8:	f7ff fe7c 	bl	900031d4 <Error_Handler>
900034dc:	e787      	b.n	900033ee <HAL_LTDC_MspInit+0x52>
900034de:	bf00      	nop
900034e0:	50001000 	.word	0x50001000
900034e4:	58024400 	.word	0x58024400
900034e8:	58022800 	.word	0x58022800
900034ec:	58022000 	.word	0x58022000
900034f0:	58022400 	.word	0x58022400
900034f4:	58021c00 	.word	0x58021c00

900034f8 <HAL_SDRAM_MspInit>:
static void HAL_FMC_MspInit(void){
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
  if (FMC_Initialized) {
900034f8:	4836      	ldr	r0, [pc, #216]	; (900035d4 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitTypeDef GPIO_InitStruct ={0};
900034fa:	2300      	movs	r3, #0
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
900034fc:	b5d0      	push	{r4, r6, r7, lr}
  if (FMC_Initialized) {
900034fe:	6801      	ldr	r1, [r0, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90003500:	b0b8      	sub	sp, #224	; 0xe0
  GPIO_InitTypeDef GPIO_InitStruct ={0};
90003502:	e9cd 3302 	strd	r3, r3, [sp, #8]
90003506:	e9cd 3304 	strd	r3, r3, [sp, #16]
9000350a:	9306      	str	r3, [sp, #24]
  if (FMC_Initialized) {
9000350c:	b109      	cbz	r1, 90003512 <HAL_SDRAM_MspInit+0x1a>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
9000350e:	b038      	add	sp, #224	; 0xe0
90003510:	bdd0      	pop	{r4, r6, r7, pc}
  FMC_Initialized = 1;
90003512:	2301      	movs	r3, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003514:	22b8      	movs	r2, #184	; 0xb8
  FMC_Initialized = 1;
90003516:	6003      	str	r3, [r0, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003518:	a80a      	add	r0, sp, #40	; 0x28
9000351a:	f023 f9a9 	bl	90026870 <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
9000351e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
90003522:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90003524:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
90003526:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000352a:	f008 fb67 	bl	9000bbfc <HAL_RCCEx_PeriphCLKConfig>
9000352e:	2800      	cmp	r0, #0
90003530:	d14c      	bne.n	900035cc <HAL_SDRAM_MspInit+0xd4>
  __HAL_RCC_FMC_CLK_ENABLE();
90003532:	4b29      	ldr	r3, [pc, #164]	; (900035d8 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90003534:	f64f 7083 	movw	r0, #65411	; 0xff83
90003538:	2102      	movs	r1, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000353a:	240c      	movs	r4, #12
  __HAL_RCC_FMC_CLK_ENABLE();
9000353c:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90003540:	2600      	movs	r6, #0
90003542:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
90003544:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
90003548:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
9000354c:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003550:	9406      	str	r4, [sp, #24]
  __HAL_RCC_FMC_CLK_ENABLE();
90003552:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90003556:	e9cd 0102 	strd	r0, r1, [sp, #8]
  __HAL_RCC_FMC_CLK_ENABLE();
9000355a:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
9000355c:	a902      	add	r1, sp, #8
9000355e:	481f      	ldr	r0, [pc, #124]	; (900035dc <HAL_SDRAM_MspInit+0xe4>)
  __HAL_RCC_FMC_CLK_ENABLE();
90003560:	9b01      	ldr	r3, [sp, #4]
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90003562:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
90003566:	f004 fe2b 	bl	900081c0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
9000356a:	f248 1233 	movw	r2, #33075	; 0x8133
9000356e:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
90003570:	a902      	add	r1, sp, #8
90003572:	481b      	ldr	r0, [pc, #108]	; (900035e0 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003574:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90003576:	e9cd 2302 	strd	r2, r3, [sp, #8]
9000357a:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
9000357e:	f004 fe1f 	bl	900081c0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90003582:	f24c 7203 	movw	r2, #50947	; 0xc703
90003586:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90003588:	a902      	add	r1, sp, #8
9000358a:	4816      	ldr	r0, [pc, #88]	; (900035e4 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000358c:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
9000358e:	e9cd 2302 	strd	r2, r3, [sp, #8]
90003592:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90003596:	f004 fe13 	bl	900081c0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
9000359a:	f64f 023f 	movw	r2, #63551	; 0xf83f
9000359e:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
900035a0:	a902      	add	r1, sp, #8
900035a2:	4811      	ldr	r0, [pc, #68]	; (900035e8 <HAL_SDRAM_MspInit+0xf0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900035a4:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
900035a6:	e9cd 2302 	strd	r2, r3, [sp, #8]
900035aa:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
900035ae:	f004 fe07 	bl	900081c0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
900035b2:	22e0      	movs	r2, #224	; 0xe0
900035b4:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900035b6:	a902      	add	r1, sp, #8
900035b8:	480c      	ldr	r0, [pc, #48]	; (900035ec <HAL_SDRAM_MspInit+0xf4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900035ba:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
900035bc:	e9cd 6704 	strd	r6, r7, [sp, #16]
900035c0:	e9cd 2302 	strd	r2, r3, [sp, #8]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900035c4:	f004 fdfc 	bl	900081c0 <HAL_GPIO_Init>
}
900035c8:	b038      	add	sp, #224	; 0xe0
900035ca:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
900035cc:	f7ff fe02 	bl	900031d4 <Error_Handler>
900035d0:	e7af      	b.n	90003532 <HAL_SDRAM_MspInit+0x3a>
900035d2:	bf00      	nop
900035d4:	240094a0 	.word	0x240094a0
900035d8:	58024400 	.word	0x58024400
900035dc:	58021000 	.word	0x58021000
900035e0:	58021800 	.word	0x58021800
900035e4:	58020c00 	.word	0x58020c00
900035e8:	58021400 	.word	0x58021400
900035ec:	58021c00 	.word	0x58021c00

900035f0 <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
900035f0:	4b13      	ldr	r3, [pc, #76]	; (90003640 <HAL_SDRAM_MspDeInit+0x50>)
900035f2:	681a      	ldr	r2, [r3, #0]
900035f4:	b102      	cbz	r2, 900035f8 <HAL_SDRAM_MspDeInit+0x8>
900035f6:	4770      	bx	lr
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
900035f8:	b510      	push	{r4, lr}
  __HAL_RCC_FMC_CLK_DISABLE();
900035fa:	4a12      	ldr	r2, [pc, #72]	; (90003644 <HAL_SDRAM_MspDeInit+0x54>)
  FMC_DeInitialized = 1;
900035fc:	2401      	movs	r4, #1
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900035fe:	f64f 7183 	movw	r1, #65411	; 0xff83
90003602:	4811      	ldr	r0, [pc, #68]	; (90003648 <HAL_SDRAM_MspDeInit+0x58>)
  FMC_DeInitialized = 1;
90003604:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
90003606:	f8d2 30d4 	ldr.w	r3, [r2, #212]	; 0xd4
9000360a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9000360e:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90003612:	f004 ff07 	bl	90008424 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90003616:	f248 1133 	movw	r1, #33075	; 0x8133
9000361a:	480c      	ldr	r0, [pc, #48]	; (9000364c <HAL_SDRAM_MspDeInit+0x5c>)
9000361c:	f004 ff02 	bl	90008424 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90003620:	f24c 7103 	movw	r1, #50947	; 0xc703
90003624:	480a      	ldr	r0, [pc, #40]	; (90003650 <HAL_SDRAM_MspDeInit+0x60>)
90003626:	f004 fefd 	bl	90008424 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
9000362a:	f64f 013f 	movw	r1, #63551	; 0xf83f
9000362e:	4809      	ldr	r0, [pc, #36]	; (90003654 <HAL_SDRAM_MspDeInit+0x64>)
90003630:	f004 fef8 	bl	90008424 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
90003634:	21e0      	movs	r1, #224	; 0xe0
90003636:	4808      	ldr	r0, [pc, #32]	; (90003658 <HAL_SDRAM_MspDeInit+0x68>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
90003638:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
9000363c:	f004 bef2 	b.w	90008424 <HAL_GPIO_DeInit>
90003640:	2400949c 	.word	0x2400949c
90003644:	58024400 	.word	0x58024400
90003648:	58021000 	.word	0x58021000
9000364c:	58021800 	.word	0x58021800
90003650:	58020c00 	.word	0x58020c00
90003654:	58021400 	.word	0x58021400
90003658:	58021c00 	.word	0x58021c00

9000365c <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;

  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;
/*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
9000365c:	280f      	cmp	r0, #15
9000365e:	d901      	bls.n	90003664 <HAL_InitTick+0x8>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
    uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
90003660:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
90003662:	4770      	bx	lr
{
90003664:	b530      	push	{r4, r5, lr}
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
90003666:	4601      	mov	r1, r0
{
90003668:	b08b      	sub	sp, #44	; 0x2c
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
9000366a:	2200      	movs	r2, #0
9000366c:	4604      	mov	r4, r0
9000366e:	2036      	movs	r0, #54	; 0x36
90003670:	f004 fb3a 	bl	90007ce8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
90003674:	2036      	movs	r0, #54	; 0x36
90003676:	f004 fb75 	bl	90007d64 <HAL_NVIC_EnableIRQ>
  __HAL_RCC_TIM6_CLK_ENABLE();
9000367a:	4b1a      	ldr	r3, [pc, #104]	; (900036e4 <HAL_InitTick+0x88>)
    uwTickPrio = TickPriority;
9000367c:	4a1a      	ldr	r2, [pc, #104]	; (900036e8 <HAL_InitTick+0x8c>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
9000367e:	4669      	mov	r1, sp
90003680:	a802      	add	r0, sp, #8
    uwTickPrio = TickPriority;
90003682:	6014      	str	r4, [r2, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
90003684:	f8d3 20e8 	ldr.w	r2, [r3, #232]	; 0xe8
90003688:	f042 0210 	orr.w	r2, r2, #16
9000368c:	f8c3 20e8 	str.w	r2, [r3, #232]	; 0xe8
90003690:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
90003694:	f003 0310 	and.w	r3, r3, #16
90003698:	9301      	str	r3, [sp, #4]
9000369a:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
9000369c:	f008 f98e 	bl	9000b9bc <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
900036a0:	9b07      	ldr	r3, [sp, #28]
900036a2:	b9bb      	cbnz	r3, 900036d4 <HAL_InitTick+0x78>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
900036a4:	f008 f8fa 	bl	9000b89c <HAL_RCC_GetPCLK1Freq>
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
900036a8:	4b10      	ldr	r3, [pc, #64]	; (900036ec <HAL_InitTick+0x90>)
  htim6.Init.ClockDivision = 0;
900036aa:	2200      	movs	r2, #0
  htim6.Instance = TIM6;
900036ac:	4c10      	ldr	r4, [pc, #64]	; (900036f0 <HAL_InitTick+0x94>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
900036ae:	fba3 1300 	umull	r1, r3, r3, r0
  htim6.Instance = TIM6;
900036b2:	4d10      	ldr	r5, [pc, #64]	; (900036f4 <HAL_InitTick+0x98>)
  htim6.Init.Period = (1000000U / 1000U) - 1U;
900036b4:	f240 31e7 	movw	r1, #999	; 0x3e7
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
900036b8:	4620      	mov	r0, r4
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
900036ba:	0c9b      	lsrs	r3, r3, #18
  htim6.Instance = TIM6;
900036bc:	6025      	str	r5, [r4, #0]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
900036be:	60a2      	str	r2, [r4, #8]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
900036c0:	3b01      	subs	r3, #1
  htim6.Init.Period = (1000000U / 1000U) - 1U;
900036c2:	e9c4 1203 	strd	r1, r2, [r4, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
900036c6:	6063      	str	r3, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
900036c8:	f009 f90a 	bl	9000c8e0 <HAL_TIM_Base_Init>
900036cc:	b130      	cbz	r0, 900036dc <HAL_InitTick+0x80>
    return HAL_ERROR;
900036ce:	2001      	movs	r0, #1
}
900036d0:	b00b      	add	sp, #44	; 0x2c
900036d2:	bd30      	pop	{r4, r5, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
900036d4:	f008 f8e2 	bl	9000b89c <HAL_RCC_GetPCLK1Freq>
900036d8:	0040      	lsls	r0, r0, #1
900036da:	e7e5      	b.n	900036a8 <HAL_InitTick+0x4c>
    return HAL_TIM_Base_Start_IT(&htim6);
900036dc:	4620      	mov	r0, r4
900036de:	f009 f9b5 	bl	9000ca4c <HAL_TIM_Base_Start_IT>
900036e2:	e7f5      	b.n	900036d0 <HAL_InitTick+0x74>
900036e4:	58024400 	.word	0x58024400
900036e8:	2400006c 	.word	0x2400006c
900036ec:	431bde83 	.word	0x431bde83
900036f0:	240094a4 	.word	0x240094a4
900036f4:	40001000 	.word	0x40001000

900036f8 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
900036f8:	4770      	bx	lr
900036fa:	bf00      	nop

900036fc <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
900036fc:	e7fe      	b.n	900036fc <HardFault_Handler>
900036fe:	bf00      	nop

90003700 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
90003700:	e7fe      	b.n	90003700 <MemManage_Handler>
90003702:	bf00      	nop

90003704 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
90003704:	e7fe      	b.n	90003704 <BusFault_Handler>
90003706:	bf00      	nop

90003708 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
90003708:	e7fe      	b.n	90003708 <UsageFault_Handler>
9000370a:	bf00      	nop

9000370c <DebugMon_Handler>:
9000370c:	4770      	bx	lr
9000370e:	bf00      	nop

90003710 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
90003710:	4801      	ldr	r0, [pc, #4]	; (90003718 <TIM6_DAC_IRQHandler+0x8>)
90003712:	f009 b9ff 	b.w	9000cb14 <HAL_TIM_IRQHandler>
90003716:	bf00      	nop
90003718:	240094a4 	.word	0x240094a4

9000371c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
9000371c:	4801      	ldr	r0, [pc, #4]	; (90003724 <LTDC_IRQHandler+0x8>)
9000371e:	f006 bfe7 	b.w	9000a6f0 <HAL_LTDC_IRQHandler>
90003722:	bf00      	nop
90003724:	240092d8 	.word	0x240092d8

90003728 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
90003728:	4801      	ldr	r0, [pc, #4]	; (90003730 <DMA2D_IRQHandler+0x8>)
9000372a:	f004 bc45 	b.w	90007fb8 <HAL_DMA2D_IRQHandler>
9000372e:	bf00      	nop
90003730:	24009218 	.word	0x24009218

90003734 <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
90003734:	4801      	ldr	r0, [pc, #4]	; (9000373c <JPEG_IRQHandler+0x8>)
90003736:	f006 bec7 	b.w	9000a4c8 <HAL_JPEG_IRQHandler>
9000373a:	bf00      	nop
9000373c:	24009280 	.word	0x24009280

90003740 <MDMA_IRQHandler>:
void MDMA_IRQHandler(void)
{
  /* USER CODE BEGIN MDMA_IRQn 0 */

  /* USER CODE END MDMA_IRQn 0 */
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
90003740:	4804      	ldr	r0, [pc, #16]	; (90003754 <MDMA_IRQHandler+0x14>)
{
90003742:	b508      	push	{r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
90003744:	f007 fa88 	bl	9000ac58 <HAL_MDMA_IRQHandler>
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
90003748:	4803      	ldr	r0, [pc, #12]	; (90003758 <MDMA_IRQHandler+0x18>)
  /* USER CODE BEGIN MDMA_IRQn 1 */

  /* USER CODE END MDMA_IRQn 1 */
}
9000374a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
9000374e:	f007 ba83 	b.w	9000ac58 <HAL_MDMA_IRQHandler>
90003752:	bf00      	nop
90003754:	240093ec 	.word	0x240093ec
90003758:	24009380 	.word	0x24009380

9000375c <_getpid>:
}

int _getpid(void)
{
	return 1;
}
9000375c:	2001      	movs	r0, #1
9000375e:	4770      	bx	lr

90003760 <_kill>:

int _kill(int pid, int sig)
{
90003760:	b508      	push	{r3, lr}
	errno = EINVAL;
90003762:	f023 f939 	bl	900269d8 <__errno>
90003766:	2216      	movs	r2, #22
90003768:	4603      	mov	r3, r0
	return -1;
}
9000376a:	f04f 30ff 	mov.w	r0, #4294967295
	errno = EINVAL;
9000376e:	601a      	str	r2, [r3, #0]
}
90003770:	bd08      	pop	{r3, pc}
90003772:	bf00      	nop

90003774 <_exit>:

void _exit (int status)
{
90003774:	b508      	push	{r3, lr}
	errno = EINVAL;
90003776:	f023 f92f 	bl	900269d8 <__errno>
9000377a:	2316      	movs	r3, #22
9000377c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
9000377e:	e7fe      	b.n	9000377e <_exit+0xa>

90003780 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
90003780:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
90003782:	1e16      	subs	r6, r2, #0
90003784:	dd07      	ble.n	90003796 <_read+0x16>
90003786:	460c      	mov	r4, r1
90003788:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
9000378a:	f3af 8000 	nop.w
9000378e:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
90003792:	42a5      	cmp	r5, r4
90003794:	d1f9      	bne.n	9000378a <_read+0xa>
	}

return len;
}
90003796:	4630      	mov	r0, r6
90003798:	bd70      	pop	{r4, r5, r6, pc}
9000379a:	bf00      	nop

9000379c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
9000379c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000379e:	1e16      	subs	r6, r2, #0
900037a0:	dd07      	ble.n	900037b2 <_write+0x16>
900037a2:	460c      	mov	r4, r1
900037a4:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
900037a6:	f814 0b01 	ldrb.w	r0, [r4], #1
900037aa:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
900037ae:	42ac      	cmp	r4, r5
900037b0:	d1f9      	bne.n	900037a6 <_write+0xa>
	}
	return len;
}
900037b2:	4630      	mov	r0, r6
900037b4:	bd70      	pop	{r4, r5, r6, pc}
900037b6:	bf00      	nop

900037b8 <_close>:

int _close(int file)
{
	return -1;
}
900037b8:	f04f 30ff 	mov.w	r0, #4294967295
900037bc:	4770      	bx	lr
900037be:	bf00      	nop

900037c0 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
900037c0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	return 0;
}
900037c4:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
900037c6:	604b      	str	r3, [r1, #4]
}
900037c8:	4770      	bx	lr
900037ca:	bf00      	nop

900037cc <_isatty>:

int _isatty(int file)
{
	return 1;
}
900037cc:	2001      	movs	r0, #1
900037ce:	4770      	bx	lr

900037d0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
900037d0:	2000      	movs	r0, #0
900037d2:	4770      	bx	lr

900037d4 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
900037d4:	4770      	bx	lr
900037d6:	bf00      	nop

900037d8 <_ZN23ApplicationFontProviderD0Ev>:
900037d8:	b510      	push	{r4, lr}
900037da:	4604      	mov	r4, r0
900037dc:	2104      	movs	r1, #4
900037de:	f022 fd40 	bl	90026262 <_ZdlPvj>
900037e2:	4620      	mov	r0, r4
900037e4:	bd10      	pop	{r4, pc}
900037e6:	bf00      	nop

900037e8 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
900037e8:	2901      	cmp	r1, #1
{
900037ea:	b508      	push	{r3, lr}
    switch (typography)
900037ec:	d004      	beq.n	900037f8 <_ZN23ApplicationFontProvider7getFontEt+0x10>
900037ee:	2902      	cmp	r1, #2
900037f0:	d00a      	beq.n	90003808 <_ZN23ApplicationFontProvider7getFontEt+0x20>
900037f2:	b129      	cbz	r1, 90003800 <_ZN23ApplicationFontProvider7getFontEt+0x18>
900037f4:	2000      	movs	r0, #0
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
900037f6:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
900037f8:	f000 ff98 	bl	9000472c <_ZN17TypedTextDatabase8getFontsEv>
900037fc:	6840      	ldr	r0, [r0, #4]
}
900037fe:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
90003800:	f000 ff94 	bl	9000472c <_ZN17TypedTextDatabase8getFontsEv>
90003804:	6800      	ldr	r0, [r0, #0]
}
90003806:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
90003808:	f000 ff90 	bl	9000472c <_ZN17TypedTextDatabase8getFontsEv>
9000380c:	6880      	ldr	r0, [r0, #8]
}
9000380e:	bd08      	pop	{r3, pc}

90003810 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
90003810:	4800      	ldr	r0, [pc, #0]	; (90003814 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
90003812:	4770      	bx	lr
90003814:	90028f1c 	.word	0x90028f1c

90003818 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
90003818:	200c      	movs	r0, #12
9000381a:	4770      	bx	lr

9000381c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
    {
        if (unicode == 0)
9000381c:	b169      	cbz	r1, 9000383a <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
9000381e:	6802      	ldr	r2, [r0, #0]
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
90003820:	b530      	push	{r4, r5, lr}
90003822:	b083      	sub	sp, #12
        const uint8_t* dummyPixelDataPointer = 0;
90003824:	2400      	movs	r4, #0
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90003826:	6895      	ldr	r5, [r2, #8]
90003828:	f10d 0303 	add.w	r3, sp, #3
9000382c:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
9000382e:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
90003830:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90003834:	47a8      	blx	r5
        return glyph;
    }
90003836:	b003      	add	sp, #12
90003838:	bd30      	pop	{r4, r5, pc}
            return 0;
9000383a:	4608      	mov	r0, r1
    }
9000383c:	4770      	bx	lr
9000383e:	bf00      	nop

90003840 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
90003840:	89c0      	ldrh	r0, [r0, #14]
90003842:	4770      	bx	lr

90003844 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
90003844:	8a00      	ldrh	r0, [r0, #16]
90003846:	4770      	bx	lr

90003848 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
90003848:	88c0      	ldrh	r0, [r0, #6]
9000384a:	4770      	bx	lr

9000384c <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
9000384c:	8880      	ldrh	r0, [r0, #4]
9000384e:	4770      	bx	lr

90003850 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
90003850:	7a80      	ldrb	r0, [r0, #10]
    }
90003852:	f000 007f 	and.w	r0, r0, #127	; 0x7f
90003856:	4770      	bx	lr

90003858 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
90003858:	7a80      	ldrb	r0, [r0, #10]
    }
9000385a:	09c0      	lsrs	r0, r0, #7
9000385c:	4770      	bx	lr
9000385e:	bf00      	nop

90003860 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
90003860:	2000      	movs	r0, #0
90003862:	4770      	bx	lr

90003864 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
90003864:	ed9f 0a01 	vldr	s0, [pc, #4]	; 9000386c <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
90003868:	4770      	bx	lr
9000386a:	bf00      	nop
9000386c:	00000000 	.word	0x00000000

90003870 <_ZN8touchgfx9TypedTextD1Ev>:
    }
90003870:	4770      	bx	lr
90003872:	bf00      	nop

90003874 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
90003874:	b510      	push	{r4, lr}
90003876:	4604      	mov	r4, r0
    }
90003878:	2108      	movs	r1, #8
9000387a:	f022 fcf2 	bl	90026262 <_ZdlPvj>
9000387e:	4620      	mov	r0, r4
90003880:	bd10      	pop	{r4, pc}
90003882:	bf00      	nop

90003884 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
90003884:	4770      	bx	lr
90003886:	bf00      	nop

90003888 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
90003888:	f500 7398 	add.w	r3, r0, #304	; 0x130
9000388c:	6808      	ldr	r0, [r1, #0]
9000388e:	6849      	ldr	r1, [r1, #4]
90003890:	c303      	stmia	r3!, {r0, r1}
    }
90003892:	4770      	bx	lr

90003894 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
90003894:	6a80      	ldr	r0, [r0, #40]	; 0x28
90003896:	4770      	bx	lr

90003898 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
90003898:	4770      	bx	lr
9000389a:	bf00      	nop

9000389c <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
9000389c:	4770      	bx	lr
9000389e:	bf00      	nop

900038a0 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
900038a0:	6041      	str	r1, [r0, #4]
    }
900038a2:	4770      	bx	lr

900038a4 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
900038a4:	4770      	bx	lr
900038a6:	bf00      	nop

900038a8 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
900038a8:	4905      	ldr	r1, [pc, #20]	; (900038c0 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x18>)
900038aa:	2200      	movs	r2, #0
// screen_game_select

void FrontendApplicationBase::gotoscreen_game_selectScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_game_selectScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
900038ac:	f500 73a2 	add.w	r3, r0, #324	; 0x144
900038b0:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
900038b4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
900038b8:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148

    virtual void changeToStartScreen()
    {
        gotoscreen_game_selectScreenNoTransition();
    }
900038bc:	4770      	bx	lr
900038be:	bf00      	nop
900038c0:	90003c1d 	.word	0x90003c1d

900038c4 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
900038c4:	2301      	movs	r3, #1
900038c6:	7203      	strb	r3, [r0, #8]
    }
900038c8:	4770      	bx	lr
900038ca:	bf00      	nop

900038cc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
 * Screen transitioning to.
 *
 * @see Transition
 */
template <Direction templateDirection>
class SlideTransition : public Transition
900038cc:	4770      	bx	lr
900038ce:	bf00      	nop

900038d0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED1Ev>:
900038d0:	4770      	bx	lr
900038d2:	bf00      	nop

900038d4 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
900038d4:	4770      	bx	lr
900038d6:	bf00      	nop

900038d8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
900038d8:	4770      	bx	lr
900038da:	bf00      	nop

900038dc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
    {
        (pobject->*pmemfun)();
900038dc:	68c2      	ldr	r2, [r0, #12]
    virtual void execute()
900038de:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
900038e0:	6841      	ldr	r1, [r0, #4]
900038e2:	ea4f 0c62 	mov.w	ip, r2, asr #1
900038e6:	eb01 0062 	add.w	r0, r1, r2, asr #1
900038ea:	07d2      	lsls	r2, r2, #31
900038ec:	d401      	bmi.n	900038f2 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x16>
900038ee:	689b      	ldr	r3, [r3, #8]
900038f0:	4718      	bx	r3
900038f2:	f851 200c 	ldr.w	r2, [r1, ip]
900038f6:	689b      	ldr	r3, [r3, #8]
900038f8:	58d3      	ldr	r3, [r2, r3]
900038fa:	4718      	bx	r3

900038fc <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
900038fc:	6843      	ldr	r3, [r0, #4]
900038fe:	b13b      	cbz	r3, 90003910 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
90003900:	6883      	ldr	r3, [r0, #8]
90003902:	b10b      	cbz	r3, 90003908 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0xc>
90003904:	2001      	movs	r0, #1
    }
90003906:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90003908:	68c0      	ldr	r0, [r0, #12]
9000390a:	f000 0001 	and.w	r0, r0, #1
9000390e:	4770      	bx	lr
90003910:	4618      	mov	r0, r3
90003912:	4770      	bx	lr

90003914 <_ZN8touchgfx12NoTransitionD0Ev>:
90003914:	b510      	push	{r4, lr}
90003916:	4604      	mov	r4, r0
90003918:	210c      	movs	r1, #12
9000391a:	f022 fca2 	bl	90026262 <_ZdlPvj>
9000391e:	4620      	mov	r0, r4
90003920:	bd10      	pop	{r4, pc}
90003922:	bf00      	nop

90003924 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90003924:	b510      	push	{r4, lr}
90003926:	4604      	mov	r4, r0
90003928:	2110      	movs	r1, #16
9000392a:	f022 fc9a 	bl	90026262 <_ZdlPvj>
9000392e:	4620      	mov	r0, r4
90003930:	bd10      	pop	{r4, pc}
90003932:	bf00      	nop

90003934 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
90003934:	b510      	push	{r4, lr}
90003936:	4604      	mov	r4, r0
90003938:	f44f 71ae 	mov.w	r1, #348	; 0x15c
9000393c:	f022 fc91 	bl	90026262 <_ZdlPvj>
90003940:	4620      	mov	r0, r4
90003942:	bd10      	pop	{r4, pc}

90003944 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
90003944:	b510      	push	{r4, lr}
90003946:	4604      	mov	r4, r0
90003948:	2140      	movs	r1, #64	; 0x40
9000394a:	f022 fc8a 	bl	90026262 <_ZdlPvj>
9000394e:	4620      	mov	r0, r4
90003950:	bd10      	pop	{r4, pc}
90003952:	bf00      	nop

90003954 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED0Ev>:
90003954:	b510      	push	{r4, lr}
90003956:	4604      	mov	r4, r0
90003958:	2140      	movs	r1, #64	; 0x40
9000395a:	f022 fc82 	bl	90026262 <_ZdlPvj>
9000395e:	4620      	mov	r0, r4
90003960:	bd10      	pop	{r4, pc}
90003962:	bf00      	nop

90003964 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
90003964:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
90003966:	f011 fb2f 	bl	90014fc8 <_ZN8touchgfx11Application11getInstanceEv>
9000396a:	6803      	ldr	r3, [r0, #0]
    }
9000396c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
90003970:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90003972:	4718      	bx	r3

90003974 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
        screenContainer->invalidate();
    }

    virtual void tearDown()
    {
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
90003974:	4b05      	ldr	r3, [pc, #20]	; (9000398c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x18>)
90003976:	781b      	ldrb	r3, [r3, #0]
90003978:	b13b      	cbz	r3, 9000398a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x16>
9000397a:	6843      	ldr	r3, [r0, #4]
9000397c:	b12b      	cbz	r3, 9000398a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x16>
        {
            screenContainer->remove(snapshot);
9000397e:	681a      	ldr	r2, [r3, #0]
90003980:	f100 010c 	add.w	r1, r0, #12
90003984:	4618      	mov	r0, r3
90003986:	6e53      	ldr	r3, [r2, #100]	; 0x64
90003988:	4718      	bx	r3
        }
    }
9000398a:	4770      	bx	lr
9000398c:	240235ab 	.word	0x240235ab

90003990 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv>:
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
90003990:	4b05      	ldr	r3, [pc, #20]	; (900039a8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x18>)
90003992:	781b      	ldrb	r3, [r3, #0]
90003994:	b13b      	cbz	r3, 900039a6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x16>
90003996:	6843      	ldr	r3, [r0, #4]
90003998:	b12b      	cbz	r3, 900039a6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x16>
            screenContainer->remove(snapshot);
9000399a:	681a      	ldr	r2, [r3, #0]
9000399c:	f100 010c 	add.w	r1, r0, #12
900039a0:	4618      	mov	r0, r3
900039a2:	6e53      	ldr	r3, [r2, #100]	; 0x64
900039a4:	4718      	bx	r3
    }
900039a6:	4770      	bx	lr
900039a8:	240235ab 	.word	0x240235ab

900039ac <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
900039ac:	b570      	push	{r4, r5, r6, lr}
900039ae:	4605      	mov	r5, r0
        animationCounter++;
900039b0:	f890 0039 	ldrb.w	r0, [r0, #57]	; 0x39
900039b4:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
900039b6:	f895 3038 	ldrb.w	r3, [r5, #56]	; 0x38
        animationCounter++;
900039ba:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
900039bc:	4298      	cmp	r0, r3
        animationCounter++;
900039be:	f885 0039 	strb.w	r0, [r5, #57]	; 0x39
        if (animationCounter > animationSteps)
900039c2:	d905      	bls.n	900039d0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x24>
            done = true;
900039c4:	2201      	movs	r2, #1
            animationCounter = 0;
900039c6:	2300      	movs	r3, #0
            done = true;
900039c8:	722a      	strb	r2, [r5, #8]
            animationCounter = 0;
900039ca:	f885 3039 	strb.w	r3, [r5, #57]	; 0x39
    }
900039ce:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
900039d0:	f9b5 203a 	ldrsh.w	r2, [r5, #58]	; 0x3a
900039d4:	2100      	movs	r1, #0
900039d6:	f013 f877 	bl	90016ac8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
900039da:	f010 0201 	ands.w	r2, r0, #1
900039de:	b283      	uxth	r3, r0
900039e0:	d006      	beq.n	900039f0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x44>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
900039e2:	f64f 71ff 	movw	r1, #65535	; 0xffff
900039e6:	2800      	cmp	r0, #0
900039e8:	bfd8      	it	le
900039ea:	460a      	movle	r2, r1
900039ec:	4413      	add	r3, r2
900039ee:	b29b      	uxth	r3, r3
        Drawable* d = screenContainer->getFirstChild();
900039f0:	6868      	ldr	r0, [r5, #4]
            relativeValue = calculatedValue - snapshot.getX();
900039f2:	8a2c      	ldrh	r4, [r5, #16]
        Drawable* d = screenContainer->getFirstChild();
900039f4:	6802      	ldr	r2, [r0, #0]
900039f6:	4912      	ldr	r1, [pc, #72]	; (90003a40 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
            relativeValue = calculatedValue - snapshot.getX();
900039f8:	1b1b      	subs	r3, r3, r4
        Drawable* d = screenContainer->getFirstChild();
900039fa:	69d2      	ldr	r2, [r2, #28]
            relativeValue = calculatedValue - snapshot.getX();
900039fc:	87ab      	strh	r3, [r5, #60]	; 0x3c
900039fe:	428a      	cmp	r2, r1
90003a00:	d11b      	bne.n	90003a3a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x8e>
        return firstChild;
90003a02:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90003a04:	b164      	cbz	r4, 90003a20 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x74>
90003a06:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
90003a08:	4e0e      	ldr	r6, [pc, #56]	; (90003a44 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                d->setX(d->getX() + relativeValue);
90003a0a:	6823      	ldr	r3, [r4, #0]
90003a0c:	88a1      	ldrh	r1, [r4, #4]
90003a0e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90003a10:	4411      	add	r1, r2
90003a12:	42b3      	cmp	r3, r6
90003a14:	b209      	sxth	r1, r1
        rect.x = x;
90003a16:	d109      	bne.n	90003a2c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x80>
90003a18:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90003a1a:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003a1c:	2c00      	cmp	r4, #0
90003a1e:	d1f4      	bne.n	90003a0a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5e>
        screenContainer->invalidate();
90003a20:	6868      	ldr	r0, [r5, #4]
90003a22:	6803      	ldr	r3, [r0, #0]
    }
90003a24:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
90003a28:	695b      	ldr	r3, [r3, #20]
90003a2a:	4718      	bx	r3
                d->setX(d->getX() + relativeValue);
90003a2c:	4620      	mov	r0, r4
90003a2e:	4798      	blx	r3
90003a30:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003a32:	2c00      	cmp	r4, #0
90003a34:	d0f4      	beq.n	90003a20 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x74>
90003a36:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
90003a38:	e7e7      	b.n	90003a0a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5e>
        Drawable* d = screenContainer->getFirstChild();
90003a3a:	4790      	blx	r2
90003a3c:	4604      	mov	r4, r0
90003a3e:	e7e1      	b.n	90003a04 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x58>
90003a40:	90003895 	.word	0x90003895
90003a44:	900023f5 	.word	0x900023f5

90003a48 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
90003a48:	b570      	push	{r4, r5, r6, lr}
90003a4a:	4605      	mov	r5, r0
        animationCounter++;
90003a4c:	f890 0039 	ldrb.w	r0, [r0, #57]	; 0x39
90003a50:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
90003a52:	f895 3038 	ldrb.w	r3, [r5, #56]	; 0x38
        animationCounter++;
90003a56:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
90003a58:	4298      	cmp	r0, r3
        animationCounter++;
90003a5a:	f885 0039 	strb.w	r0, [r5, #57]	; 0x39
        if (animationCounter > animationSteps)
90003a5e:	d905      	bls.n	90003a6c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x24>
            done = true;
90003a60:	2201      	movs	r2, #1
            animationCounter = 0;
90003a62:	2300      	movs	r3, #0
            done = true;
90003a64:	722a      	strb	r2, [r5, #8]
            animationCounter = 0;
90003a66:	f885 3039 	strb.w	r3, [r5, #57]	; 0x39
    }
90003a6a:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
90003a6c:	f9b5 203a 	ldrsh.w	r2, [r5, #58]	; 0x3a
90003a70:	2100      	movs	r1, #0
90003a72:	f013 f829 	bl	90016ac8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
90003a76:	f010 0201 	ands.w	r2, r0, #1
90003a7a:	b283      	uxth	r3, r0
90003a7c:	d006      	beq.n	90003a8c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x44>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
90003a7e:	f64f 71ff 	movw	r1, #65535	; 0xffff
90003a82:	2800      	cmp	r0, #0
90003a84:	bfd8      	it	le
90003a86:	460a      	movle	r2, r1
90003a88:	4413      	add	r3, r2
90003a8a:	b29b      	uxth	r3, r3
        Drawable* d = screenContainer->getFirstChild();
90003a8c:	6868      	ldr	r0, [r5, #4]
            relativeValue = calculatedValue - snapshot.getX();
90003a8e:	8a2c      	ldrh	r4, [r5, #16]
        Drawable* d = screenContainer->getFirstChild();
90003a90:	6802      	ldr	r2, [r0, #0]
90003a92:	4912      	ldr	r1, [pc, #72]	; (90003adc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x94>)
            relativeValue = calculatedValue - snapshot.getX();
90003a94:	1b1b      	subs	r3, r3, r4
        Drawable* d = screenContainer->getFirstChild();
90003a96:	69d2      	ldr	r2, [r2, #28]
            relativeValue = calculatedValue - snapshot.getX();
90003a98:	87ab      	strh	r3, [r5, #60]	; 0x3c
90003a9a:	428a      	cmp	r2, r1
90003a9c:	d11b      	bne.n	90003ad6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x8e>
90003a9e:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90003aa0:	b164      	cbz	r4, 90003abc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x74>
90003aa2:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
90003aa4:	4e0e      	ldr	r6, [pc, #56]	; (90003ae0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
                d->setX(d->getX() + relativeValue);
90003aa6:	6823      	ldr	r3, [r4, #0]
90003aa8:	88a1      	ldrh	r1, [r4, #4]
90003aaa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90003aac:	4411      	add	r1, r2
90003aae:	42b3      	cmp	r3, r6
90003ab0:	b209      	sxth	r1, r1
        rect.x = x;
90003ab2:	d109      	bne.n	90003ac8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x80>
90003ab4:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90003ab6:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003ab8:	2c00      	cmp	r4, #0
90003aba:	d1f4      	bne.n	90003aa6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x5e>
        screenContainer->invalidate();
90003abc:	6868      	ldr	r0, [r5, #4]
90003abe:	6803      	ldr	r3, [r0, #0]
    }
90003ac0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
90003ac4:	695b      	ldr	r3, [r3, #20]
90003ac6:	4718      	bx	r3
                d->setX(d->getX() + relativeValue);
90003ac8:	4620      	mov	r0, r4
90003aca:	4798      	blx	r3
90003acc:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003ace:	2c00      	cmp	r4, #0
90003ad0:	d0f4      	beq.n	90003abc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x74>
90003ad2:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
90003ad4:	e7e7      	b.n	90003aa6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x5e>
        Drawable* d = screenContainer->getFirstChild();
90003ad6:	4790      	blx	r2
90003ad8:	4604      	mov	r4, r0
90003ada:	e7e1      	b.n	90003aa0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x58>
90003adc:	90003895 	.word	0x90003895
90003ae0:	900023f5 	.word	0x900023f5

90003ae4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:

    virtual void init()
    {
        Transition::init();

        if (done)
90003ae4:	7a03      	ldrb	r3, [r0, #8]
90003ae6:	bb2b      	cbnz	r3, 90003b34 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x50>
90003ae8:	4a14      	ldr	r2, [pc, #80]	; (90003b3c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x58>)
    virtual void init()
90003aea:	b570      	push	{r4, r5, r6, lr}
90003aec:	4605      	mov	r5, r0
        {
            return;
        }

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
90003aee:	6840      	ldr	r0, [r0, #4]
90003af0:	6803      	ldr	r3, [r0, #0]
90003af2:	69db      	ldr	r3, [r3, #28]
90003af4:	4293      	cmp	r3, r2
90003af6:	d11e      	bne.n	90003b36 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x52>
90003af8:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90003afa:	b164      	cbz	r4, 90003b16 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x32>
90003afc:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003afe:	4e10      	ldr	r6, [pc, #64]	; (90003b40 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x5c>)
        {
            switch (templateDirection)
            {
            case EAST:
            case WEST:
                d->setX(d->getX() - targetValue);
90003b00:	6823      	ldr	r3, [r4, #0]
90003b02:	88a1      	ldrh	r1, [r4, #4]
90003b04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90003b06:	1a89      	subs	r1, r1, r2
90003b08:	42b3      	cmp	r3, r6
90003b0a:	b209      	sxth	r1, r1
        rect.x = x;
90003b0c:	d10b      	bne.n	90003b26 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x42>
90003b0e:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90003b10:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003b12:	2c00      	cmp	r4, #0
90003b14:	d1f4      	bne.n	90003b00 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x1c>
            }

            d = d->getNextSibling();
        }

        screenContainer->add(snapshot);
90003b16:	6868      	ldr	r0, [r5, #4]
90003b18:	f105 010c 	add.w	r1, r5, #12
90003b1c:	6803      	ldr	r3, [r0, #0]
    }
90003b1e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
90003b22:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90003b24:	4718      	bx	r3
                d->setX(d->getX() - targetValue);
90003b26:	4620      	mov	r0, r4
90003b28:	4798      	blx	r3
90003b2a:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003b2c:	2c00      	cmp	r4, #0
90003b2e:	d0f2      	beq.n	90003b16 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x32>
90003b30:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003b32:	e7e5      	b.n	90003b00 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x1c>
90003b34:	4770      	bx	lr
        Drawable* d = screenContainer->getFirstChild();
90003b36:	4798      	blx	r3
90003b38:	4604      	mov	r4, r0
90003b3a:	e7de      	b.n	90003afa <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x16>
90003b3c:	90003895 	.word	0x90003895
90003b40:	900023f5 	.word	0x900023f5

90003b44 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv>:
        if (done)
90003b44:	7a03      	ldrb	r3, [r0, #8]
90003b46:	bb2b      	cbnz	r3, 90003b94 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x50>
90003b48:	4a14      	ldr	r2, [pc, #80]	; (90003b9c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x58>)
    virtual void init()
90003b4a:	b570      	push	{r4, r5, r6, lr}
90003b4c:	4605      	mov	r5, r0
        Drawable* d = screenContainer->getFirstChild();
90003b4e:	6840      	ldr	r0, [r0, #4]
90003b50:	6803      	ldr	r3, [r0, #0]
90003b52:	69db      	ldr	r3, [r3, #28]
90003b54:	4293      	cmp	r3, r2
90003b56:	d11e      	bne.n	90003b96 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x52>
90003b58:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90003b5a:	b164      	cbz	r4, 90003b76 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x32>
90003b5c:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003b5e:	4e10      	ldr	r6, [pc, #64]	; (90003ba0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x5c>)
                d->setX(d->getX() - targetValue);
90003b60:	6823      	ldr	r3, [r4, #0]
90003b62:	88a1      	ldrh	r1, [r4, #4]
90003b64:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90003b66:	1a89      	subs	r1, r1, r2
90003b68:	42b3      	cmp	r3, r6
90003b6a:	b209      	sxth	r1, r1
        rect.x = x;
90003b6c:	d10b      	bne.n	90003b86 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x42>
90003b6e:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90003b70:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003b72:	2c00      	cmp	r4, #0
90003b74:	d1f4      	bne.n	90003b60 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x1c>
        screenContainer->add(snapshot);
90003b76:	6868      	ldr	r0, [r5, #4]
90003b78:	f105 010c 	add.w	r1, r5, #12
90003b7c:	6803      	ldr	r3, [r0, #0]
    }
90003b7e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
90003b82:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90003b84:	4718      	bx	r3
                d->setX(d->getX() - targetValue);
90003b86:	4620      	mov	r0, r4
90003b88:	4798      	blx	r3
90003b8a:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003b8c:	2c00      	cmp	r4, #0
90003b8e:	d0f2      	beq.n	90003b76 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x32>
90003b90:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003b92:	e7e5      	b.n	90003b60 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x1c>
90003b94:	4770      	bx	lr
        Drawable* d = screenContainer->getFirstChild();
90003b96:	4798      	blx	r3
90003b98:	4604      	mov	r4, r0
90003b9a:	e7de      	b.n	90003b5a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x16>
90003b9c:	90003895 	.word	0x90003895
90003ba0:	900023f5 	.word	0x900023f5

90003ba4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003ba4:	f8d0 3140 	ldr.w	r3, [r0, #320]	; 0x140
90003ba8:	b1d3      	cbz	r3, 90003be0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3c>
90003baa:	681a      	ldr	r2, [r3, #0]
    virtual void handlePendingScreenTransition()
90003bac:	b570      	push	{r4, r5, r6, lr}
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003bae:	68d1      	ldr	r1, [r2, #12]
90003bb0:	4604      	mov	r4, r0
90003bb2:	4818      	ldr	r0, [pc, #96]	; (90003c14 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x70>)
90003bb4:	4281      	cmp	r1, r0
90003bb6:	d118      	bne.n	90003bea <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x46>
        return (pobject != 0) && (pmemfun != 0);
90003bb8:	6858      	ldr	r0, [r3, #4]
90003bba:	b180      	cbz	r0, 90003bde <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90003bbc:	6899      	ldr	r1, [r3, #8]
90003bbe:	b1e1      	cbz	r1, 90003bfa <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
90003bc0:	6892      	ldr	r2, [r2, #8]
90003bc2:	4915      	ldr	r1, [pc, #84]	; (90003c18 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x74>)
90003bc4:	428a      	cmp	r2, r1
90003bc6:	d122      	bne.n	90003c0e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6a>
        (pobject->*pmemfun)();
90003bc8:	68da      	ldr	r2, [r3, #12]
90003bca:	6858      	ldr	r0, [r3, #4]
90003bcc:	eb00 0062 	add.w	r0, r0, r2, asr #1
90003bd0:	07d2      	lsls	r2, r2, #31
90003bd2:	d406      	bmi.n	90003be2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3e>
90003bd4:	689b      	ldr	r3, [r3, #8]
90003bd6:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
90003bd8:	2300      	movs	r3, #0
90003bda:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
90003bde:	bd70      	pop	{r4, r5, r6, pc}
90003be0:	4770      	bx	lr
90003be2:	6899      	ldr	r1, [r3, #8]
90003be4:	6803      	ldr	r3, [r0, #0]
90003be6:	585b      	ldr	r3, [r3, r1]
90003be8:	e7f5      	b.n	90003bd6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x32>
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003bea:	4618      	mov	r0, r3
90003bec:	4788      	blx	r1
90003bee:	2800      	cmp	r0, #0
90003bf0:	d0f5      	beq.n	90003bde <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
90003bf2:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
90003bf6:	681a      	ldr	r2, [r3, #0]
90003bf8:	e7e2      	b.n	90003bc0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x1c>
        return (pobject != 0) && (pmemfun != 0);
90003bfa:	68dd      	ldr	r5, [r3, #12]
90003bfc:	07ee      	lsls	r6, r5, #31
90003bfe:	d5ee      	bpl.n	90003bde <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90003c00:	6892      	ldr	r2, [r2, #8]
90003c02:	4e05      	ldr	r6, [pc, #20]	; (90003c18 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x74>)
90003c04:	42b2      	cmp	r2, r6
90003c06:	d102      	bne.n	90003c0e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6a>
        (pobject->*pmemfun)();
90003c08:	eb00 0065 	add.w	r0, r0, r5, asr #1
90003c0c:	e7ea      	b.n	90003be4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x40>
90003c0e:	4618      	mov	r0, r3
90003c10:	4790      	blx	r2
90003c12:	e7e1      	b.n	90003bd8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x34>
90003c14:	900038fd 	.word	0x900038fd
90003c18:	900038dd 	.word	0x900038dd

90003c1c <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoscreen_game_selectScreenNoTransitionImpl()
{
90003c1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_game_selectView, screen_game_selectPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90003c20:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
90003c24:	4607      	mov	r7, r0
90003c26:	b081      	sub	sp, #4
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003c28:	68a0      	ldr	r0, [r4, #8]
90003c2a:	6803      	ldr	r3, [r0, #0]
90003c2c:	6a1b      	ldr	r3, [r3, #32]
90003c2e:	4798      	blx	r3
90003c30:	f5b0 7fca 	cmp.w	r0, #404	; 0x194
90003c34:	f0c0 809e 	bcc.w	90003d74 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x158>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003c38:	6860      	ldr	r0, [r4, #4]
90003c3a:	6803      	ldr	r3, [r0, #0]
90003c3c:	6a1b      	ldr	r3, [r3, #32]
90003c3e:	4798      	blx	r3
90003c40:	280f      	cmp	r0, #15
90003c42:	f240 80a3 	bls.w	90003d8c <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x170>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003c46:	68e0      	ldr	r0, [r4, #12]
90003c48:	6803      	ldr	r3, [r0, #0]
90003c4a:	6a1b      	ldr	r3, [r3, #32]
90003c4c:	4798      	blx	r3
90003c4e:	280b      	cmp	r0, #11
90003c50:	f240 8096 	bls.w	90003d80 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x164>
    if (*currentTrans)
90003c54:	f8df 9160 	ldr.w	r9, [pc, #352]	; 90003db8 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
90003c58:	f011 f9b6 	bl	90014fc8 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
90003c5c:	3004      	adds	r0, #4
90003c5e:	f011 f9d8 	bl	90015012 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90003c62:	f8d9 0000 	ldr.w	r0, [r9]
90003c66:	b140      	cbz	r0, 90003c7a <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x5e>
        (*currentTrans)->tearDown();
90003c68:	6803      	ldr	r3, [r0, #0]
90003c6a:	68db      	ldr	r3, [r3, #12]
90003c6c:	4798      	blx	r3
    if (*currentTrans)
90003c6e:	f8d9 0000 	ldr.w	r0, [r9]
90003c72:	b110      	cbz	r0, 90003c7a <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x5e>
        (*currentTrans)->~Transition();
90003c74:	6803      	ldr	r3, [r0, #0]
90003c76:	681b      	ldr	r3, [r3, #0]
90003c78:	4798      	blx	r3
    if (*currentScreen)
90003c7a:	f8df 8140 	ldr.w	r8, [pc, #320]	; 90003dbc <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x1a0>
90003c7e:	f8d8 0000 	ldr.w	r0, [r8]
90003c82:	2800      	cmp	r0, #0
90003c84:	d063      	beq.n	90003d4e <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x132>
        (*currentScreen)->tearDownScreen();
90003c86:	6803      	ldr	r3, [r0, #0]
90003c88:	695b      	ldr	r3, [r3, #20]
90003c8a:	4798      	blx	r3
    if (*currentPresenter)
90003c8c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003c90:	2800      	cmp	r0, #0
90003c92:	d057      	beq.n	90003d44 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x128>
        (*currentPresenter)->deactivate();
90003c94:	6803      	ldr	r3, [r0, #0]
90003c96:	685b      	ldr	r3, [r3, #4]
90003c98:	4798      	blx	r3
    if (*currentScreen)
90003c9a:	f8d8 0000 	ldr.w	r0, [r8]
90003c9e:	b110      	cbz	r0, 90003ca6 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x8a>
        (*currentScreen)->~Screen();
90003ca0:	6803      	ldr	r3, [r0, #0]
90003ca2:	681b      	ldr	r3, [r3, #0]
90003ca4:	4798      	blx	r3
    if (*currentPresenter)
90003ca6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003caa:	b110      	cbz	r0, 90003cb2 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x96>
        (*currentPresenter)->~Presenter();
90003cac:	6803      	ldr	r3, [r0, #0]
90003cae:	689b      	ldr	r3, [r3, #8]
90003cb0:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003cb2:	68e0      	ldr	r0, [r4, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
90003cb4:	2100      	movs	r1, #0
90003cb6:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90003cb8:	468b      	mov	fp, r1
90003cba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003cbc:	4798      	blx	r3
90003cbe:	4b36      	ldr	r3, [pc, #216]	; (90003d98 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x17c>)
90003cc0:	4605      	mov	r5, r0
90003cc2:	f8c0 b004 	str.w	fp, [r0, #4]
90003cc6:	f880 b008 	strb.w	fp, [r0, #8]
90003cca:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90003ccc:	68a0      	ldr	r0, [r4, #8]
90003cce:	602b      	str	r3, [r5, #0]
90003cd0:	6803      	ldr	r3, [r0, #0]
90003cd2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003cd4:	4798      	blx	r3
90003cd6:	4606      	mov	r6, r0
90003cd8:	f002 fe78 	bl	900069cc <_ZN22screen_game_selectViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90003cdc:	6860      	ldr	r0, [r4, #4]
90003cde:	4659      	mov	r1, fp
90003ce0:	6803      	ldr	r3, [r0, #0]
90003ce2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003ce4:	4798      	blx	r3
90003ce6:	4604      	mov	r4, r0
90003ce8:	4631      	mov	r1, r6
90003cea:	f002 fe43 	bl	90006974 <_ZN27screen_game_selectPresenterC1ER22screen_game_selectView>
    *currentTrans = newTransition;
90003cee:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
90003cf2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
90003cf6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
90003cfa:	2c00      	cmp	r4, #0
90003cfc:	d02c      	beq.n	90003d58 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x13c>
90003cfe:	1d23      	adds	r3, r4, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
90003d00:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90003d04:	4630      	mov	r0, r6
90003d06:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
90003d08:	f8c4 a008 	str.w	sl, [r4, #8]
90003d0c:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
90003d0e:	63f4      	str	r4, [r6, #60]	; 0x3c
90003d10:	4798      	blx	r3
    newPresenter->activate();
90003d12:	6823      	ldr	r3, [r4, #0]
90003d14:	4620      	mov	r0, r4
90003d16:	681b      	ldr	r3, [r3, #0]
90003d18:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90003d1a:	4629      	mov	r1, r5
90003d1c:	4630      	mov	r0, r6
90003d1e:	f012 fecd 	bl	90016abc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90003d22:	682b      	ldr	r3, [r5, #0]
90003d24:	491d      	ldr	r1, [pc, #116]	; (90003d9c <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x180>)
90003d26:	691a      	ldr	r2, [r3, #16]
90003d28:	428a      	cmp	r2, r1
90003d2a:	d117      	bne.n	90003d5c <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x140>
    newTransition->invalidate();
90003d2c:	695b      	ldr	r3, [r3, #20]
90003d2e:	4a1c      	ldr	r2, [pc, #112]	; (90003da0 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x184>)
90003d30:	4293      	cmp	r3, r2
90003d32:	d11a      	bne.n	90003d6a <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x14e>
        Application::getInstance()->invalidate();
90003d34:	f011 f948 	bl	90014fc8 <_ZN8touchgfx11Application11getInstanceEv>
90003d38:	6803      	ldr	r3, [r0, #0]
90003d3a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
90003d3c:	b001      	add	sp, #4
90003d3e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003d42:	4718      	bx	r3
    if (*currentScreen)
90003d44:	f8d8 0000 	ldr.w	r0, [r8]
90003d48:	2800      	cmp	r0, #0
90003d4a:	d1a9      	bne.n	90003ca0 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x84>
90003d4c:	e7b1      	b.n	90003cb2 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x96>
    if (*currentPresenter)
90003d4e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003d52:	2800      	cmp	r0, #0
90003d54:	d19e      	bne.n	90003c94 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x78>
90003d56:	e7ac      	b.n	90003cb2 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x96>
    model->bind(newPresenter);
90003d58:	4623      	mov	r3, r4
90003d5a:	e7d1      	b.n	90003d00 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0xe4>
    newTransition->init();
90003d5c:	4628      	mov	r0, r5
90003d5e:	4790      	blx	r2
    newTransition->invalidate();
90003d60:	682b      	ldr	r3, [r5, #0]
90003d62:	4a0f      	ldr	r2, [pc, #60]	; (90003da0 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x184>)
90003d64:	695b      	ldr	r3, [r3, #20]
90003d66:	4293      	cmp	r3, r2
90003d68:	d0e4      	beq.n	90003d34 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x118>
90003d6a:	4628      	mov	r0, r5
90003d6c:	b001      	add	sp, #4
90003d6e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003d72:	4718      	bx	r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003d74:	4b0b      	ldr	r3, [pc, #44]	; (90003da4 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x188>)
90003d76:	21a3      	movs	r1, #163	; 0xa3
90003d78:	4a0b      	ldr	r2, [pc, #44]	; (90003da8 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x18c>)
90003d7a:	480c      	ldr	r0, [pc, #48]	; (90003dac <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x190>)
90003d7c:	f022 faa0 	bl	900262c0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003d80:	4b0b      	ldr	r3, [pc, #44]	; (90003db0 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x194>)
90003d82:	21a5      	movs	r1, #165	; 0xa5
90003d84:	4a08      	ldr	r2, [pc, #32]	; (90003da8 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x18c>)
90003d86:	4809      	ldr	r0, [pc, #36]	; (90003dac <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x190>)
90003d88:	f022 fa9a 	bl	900262c0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003d8c:	4b09      	ldr	r3, [pc, #36]	; (90003db4 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x198>)
90003d8e:	21a4      	movs	r1, #164	; 0xa4
90003d90:	4a05      	ldr	r2, [pc, #20]	; (90003da8 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x18c>)
90003d92:	4806      	ldr	r0, [pc, #24]	; (90003dac <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x190>)
90003d94:	f022 fa94 	bl	900262c0 <__assert_func>
90003d98:	90029628 	.word	0x90029628
90003d9c:	9000389d 	.word	0x9000389d
90003da0:	90003965 	.word	0x90003965
90003da4:	9002901c 	.word	0x9002901c
90003da8:	900290ac 	.word	0x900290ac
90003dac:	900291c8 	.word	0x900291c8
90003db0:	900292b4 	.word	0x900292b4
90003db4:	90029210 	.word	0x90029210
90003db8:	240235f4 	.word	0x240235f4
90003dbc:	240235f0 	.word	0x240235f0

90003dc0 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_game_selectScreenSlideTransitionWestImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoscreen_game_selectScreenSlideTransitionWestImpl()
{
90003dc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_game_selectView, screen_game_selectPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90003dc4:	e9d0 4b55 	ldrd	r4, fp, [r0, #340]	; 0x154
{
90003dc8:	4680      	mov	r8, r0
90003dca:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003dcc:	68a0      	ldr	r0, [r4, #8]
90003dce:	6803      	ldr	r3, [r0, #0]
90003dd0:	6a1b      	ldr	r3, [r3, #32]
90003dd2:	4798      	blx	r3
90003dd4:	f5b0 7fca 	cmp.w	r0, #404	; 0x194
90003dd8:	f0c0 80e0 	bcc.w	90003f9c <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1dc>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003ddc:	6860      	ldr	r0, [r4, #4]
90003dde:	6803      	ldr	r3, [r0, #0]
90003de0:	6a1b      	ldr	r3, [r3, #32]
90003de2:	4798      	blx	r3
90003de4:	280f      	cmp	r0, #15
90003de6:	f240 80e5 	bls.w	90003fb4 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1f4>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003dea:	68e0      	ldr	r0, [r4, #12]
90003dec:	6803      	ldr	r3, [r0, #0]
90003dee:	6a1b      	ldr	r3, [r3, #32]
90003df0:	4798      	blx	r3
90003df2:	283f      	cmp	r0, #63	; 0x3f
90003df4:	f240 80d8 	bls.w	90003fa8 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1e8>
    if (*currentTrans)
90003df8:	f8df a1f8 	ldr.w	sl, [pc, #504]	; 90003ff4 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x234>
    Application::getInstance()->clearAllTimerWidgets();
90003dfc:	f011 f8e4 	bl	90014fc8 <_ZN8touchgfx11Application11getInstanceEv>
90003e00:	3004      	adds	r0, #4
90003e02:	f011 f906 	bl	90015012 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90003e06:	f8da 0000 	ldr.w	r0, [sl]
90003e0a:	b140      	cbz	r0, 90003e1e <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x5e>
        (*currentTrans)->tearDown();
90003e0c:	6803      	ldr	r3, [r0, #0]
90003e0e:	68db      	ldr	r3, [r3, #12]
90003e10:	4798      	blx	r3
    if (*currentTrans)
90003e12:	f8da 0000 	ldr.w	r0, [sl]
90003e16:	b110      	cbz	r0, 90003e1e <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x5e>
        (*currentTrans)->~Transition();
90003e18:	6803      	ldr	r3, [r0, #0]
90003e1a:	681b      	ldr	r3, [r3, #0]
90003e1c:	4798      	blx	r3
    if (*currentScreen)
90003e1e:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 90003ff8 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x238>
90003e22:	f8d9 0000 	ldr.w	r0, [r9]
90003e26:	2800      	cmp	r0, #0
90003e28:	f000 80a4 	beq.w	90003f74 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1b4>
        (*currentScreen)->tearDownScreen();
90003e2c:	6803      	ldr	r3, [r0, #0]
90003e2e:	695b      	ldr	r3, [r3, #20]
90003e30:	4798      	blx	r3
    if (*currentPresenter)
90003e32:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90003e36:	2800      	cmp	r0, #0
90003e38:	f000 8081 	beq.w	90003f3e <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x17e>
        (*currentPresenter)->deactivate();
90003e3c:	6803      	ldr	r3, [r0, #0]
90003e3e:	685b      	ldr	r3, [r3, #4]
90003e40:	4798      	blx	r3
    if (*currentScreen)
90003e42:	f8d9 0000 	ldr.w	r0, [r9]
90003e46:	b110      	cbz	r0, 90003e4e <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x8e>
        (*currentScreen)->~Screen();
90003e48:	6803      	ldr	r3, [r0, #0]
90003e4a:	681b      	ldr	r3, [r3, #0]
90003e4c:	4798      	blx	r3
    if (*currentPresenter)
90003e4e:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90003e52:	b110      	cbz	r0, 90003e5a <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x9a>
        (*currentPresenter)->~Presenter();
90003e54:	6803      	ldr	r3, [r0, #0]
90003e56:	689b      	ldr	r3, [r3, #8]
90003e58:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003e5a:	68e0      	ldr	r0, [r4, #12]
90003e5c:	2100      	movs	r1, #0
90003e5e:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90003e60:	460f      	mov	r7, r1
90003e62:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003e64:	4798      	blx	r3
          relativeValue(0)
90003e66:	4b56      	ldr	r3, [pc, #344]	; (90003fc0 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x200>)
90003e68:	4606      	mov	r6, r0
90003e6a:	4605      	mov	r5, r0
90003e6c:	6047      	str	r7, [r0, #4]
90003e6e:	7207      	strb	r7, [r0, #8]
90003e70:	f846 3b0c 	str.w	r3, [r6], #12
          snapshot(),
90003e74:	4630      	mov	r0, r6
90003e76:	f00d fc9f 	bl	900117b8 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
90003e7a:	4b52      	ldr	r3, [pc, #328]	; (90003fc4 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x204>)
          animationSteps(transitionSteps),
90003e7c:	2214      	movs	r2, #20
          relativeValue(0)
90003e7e:	87af      	strh	r7, [r5, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
90003e80:	781b      	ldrb	r3, [r3, #0]
          animationSteps(transitionSteps),
90003e82:	872a      	strh	r2, [r5, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
90003e84:	2b00      	cmp	r3, #0
90003e86:	d166      	bne.n	90003f56 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x196>
            done = true;
90003e88:	2301      	movs	r3, #1
90003e8a:	722b      	strb	r3, [r5, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90003e8c:	68a0      	ldr	r0, [r4, #8]
90003e8e:	2100      	movs	r1, #0
90003e90:	6803      	ldr	r3, [r0, #0]
90003e92:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003e94:	4798      	blx	r3
90003e96:	4607      	mov	r7, r0
90003e98:	f002 fd98 	bl	900069cc <_ZN22screen_game_selectViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90003e9c:	6860      	ldr	r0, [r4, #4]
90003e9e:	2100      	movs	r1, #0
90003ea0:	6803      	ldr	r3, [r0, #0]
90003ea2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003ea4:	4798      	blx	r3
90003ea6:	4604      	mov	r4, r0
90003ea8:	4639      	mov	r1, r7
90003eaa:	f002 fd63 	bl	90006974 <_ZN27screen_game_selectPresenterC1ER22screen_game_selectView>
    *currentTrans = newTransition;
90003eae:	f8ca 5000 	str.w	r5, [sl]
    *currentPresenter = newPresenter;
90003eb2:	f8c8 413c 	str.w	r4, [r8, #316]	; 0x13c
    *currentScreen = newScreen;
90003eb6:	f8c9 7000 	str.w	r7, [r9]
    model->bind(newPresenter);
90003eba:	2c00      	cmp	r4, #0
90003ebc:	d060      	beq.n	90003f80 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1c0>
90003ebe:	1d23      	adds	r3, r4, #4
90003ec0:	f8cb 3000 	str.w	r3, [fp]
    newScreen->setupScreen();
90003ec4:	4638      	mov	r0, r7
90003ec6:	683b      	ldr	r3, [r7, #0]
90003ec8:	f8c4 b008 	str.w	fp, [r4, #8]
90003ecc:	68db      	ldr	r3, [r3, #12]
90003ece:	63fc      	str	r4, [r7, #60]	; 0x3c
90003ed0:	4798      	blx	r3
    newPresenter->activate();
90003ed2:	6823      	ldr	r3, [r4, #0]
90003ed4:	4620      	mov	r0, r4
90003ed6:	681b      	ldr	r3, [r3, #0]
90003ed8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90003eda:	4629      	mov	r1, r5
90003edc:	4638      	mov	r0, r7
90003ede:	f012 fded 	bl	90016abc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90003ee2:	682b      	ldr	r3, [r5, #0]
90003ee4:	4938      	ldr	r1, [pc, #224]	; (90003fc8 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x208>)
90003ee6:	691a      	ldr	r2, [r3, #16]
90003ee8:	428a      	cmp	r2, r1
90003eea:	d153      	bne.n	90003f94 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1d4>
        if (done)
90003eec:	7a2a      	ldrb	r2, [r5, #8]
90003eee:	b9d2      	cbnz	r2, 90003f26 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x166>
        Drawable* d = screenContainer->getFirstChild();
90003ef0:	6868      	ldr	r0, [r5, #4]
90003ef2:	4a36      	ldr	r2, [pc, #216]	; (90003fcc <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x20c>)
90003ef4:	6803      	ldr	r3, [r0, #0]
90003ef6:	69db      	ldr	r3, [r3, #28]
90003ef8:	4293      	cmp	r3, r2
90003efa:	d143      	bne.n	90003f84 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1c4>
90003efc:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90003efe:	b164      	cbz	r4, 90003f1a <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x15a>
90003f00:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003f02:	4f33      	ldr	r7, [pc, #204]	; (90003fd0 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x210>)
                d->setX(d->getX() - targetValue);
90003f04:	6823      	ldr	r3, [r4, #0]
90003f06:	88a1      	ldrh	r1, [r4, #4]
90003f08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90003f0a:	1a89      	subs	r1, r1, r2
90003f0c:	42bb      	cmp	r3, r7
90003f0e:	b209      	sxth	r1, r1
90003f10:	d11a      	bne.n	90003f48 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x188>
        rect.x = x;
90003f12:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90003f14:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003f16:	2c00      	cmp	r4, #0
90003f18:	d1f4      	bne.n	90003f04 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x144>
        screenContainer->add(snapshot);
90003f1a:	6868      	ldr	r0, [r5, #4]
90003f1c:	4631      	mov	r1, r6
90003f1e:	6803      	ldr	r3, [r0, #0]
90003f20:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90003f22:	4798      	blx	r3
    newTransition->invalidate();
90003f24:	682b      	ldr	r3, [r5, #0]
90003f26:	695b      	ldr	r3, [r3, #20]
90003f28:	4a2a      	ldr	r2, [pc, #168]	; (90003fd4 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x214>)
90003f2a:	4293      	cmp	r3, r2
90003f2c:	d12d      	bne.n	90003f8a <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1ca>
        Application::getInstance()->invalidate();
90003f2e:	f011 f84b 	bl	90014fc8 <_ZN8touchgfx11Application11getInstanceEv>
90003f32:	6803      	ldr	r3, [r0, #0]
90003f34:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
90003f36:	b001      	add	sp, #4
90003f38:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003f3c:	4718      	bx	r3
    if (*currentScreen)
90003f3e:	f8d9 0000 	ldr.w	r0, [r9]
90003f42:	2800      	cmp	r0, #0
90003f44:	d180      	bne.n	90003e48 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x88>
90003f46:	e788      	b.n	90003e5a <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x9a>
                d->setX(d->getX() - targetValue);
90003f48:	4620      	mov	r0, r4
90003f4a:	4798      	blx	r3
90003f4c:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003f4e:	2c00      	cmp	r4, #0
90003f50:	d0e3      	beq.n	90003f1a <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x15a>
90003f52:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003f54:	e7d6      	b.n	90003f04 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x144>
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90003f56:	4b20      	ldr	r3, [pc, #128]	; (90003fd8 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x218>)
        snapshot.makeSnapshot();
90003f58:	4630      	mov	r0, r6
        rect.x = x;
90003f5a:	612f      	str	r7, [r5, #16]
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90003f5c:	f9b3 3000 	ldrsh.w	r3, [r3]
90003f60:	4f1e      	ldr	r7, [pc, #120]	; (90003fdc <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x21c>)
        rect.height = height;
90003f62:	82eb      	strh	r3, [r5, #22]
90003f64:	f9b7 3000 	ldrsh.w	r3, [r7]
        rect.width = width;
90003f68:	82ab      	strh	r3, [r5, #20]
        snapshot.makeSnapshot();
90003f6a:	f00d fba0 	bl	900116ae <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = HAL::DISPLAY_WIDTH;
90003f6e:	883b      	ldrh	r3, [r7, #0]
90003f70:	876b      	strh	r3, [r5, #58]	; 0x3a
            break;
90003f72:	e78b      	b.n	90003e8c <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0xcc>
    if (*currentPresenter)
90003f74:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90003f78:	2800      	cmp	r0, #0
90003f7a:	f47f af5f 	bne.w	90003e3c <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x7c>
90003f7e:	e76c      	b.n	90003e5a <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x9a>
    model->bind(newPresenter);
90003f80:	4623      	mov	r3, r4
90003f82:	e79d      	b.n	90003ec0 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x100>
        Drawable* d = screenContainer->getFirstChild();
90003f84:	4798      	blx	r3
90003f86:	4604      	mov	r4, r0
90003f88:	e7b9      	b.n	90003efe <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x13e>
    newTransition->invalidate();
90003f8a:	4628      	mov	r0, r5
90003f8c:	b001      	add	sp, #4
90003f8e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003f92:	4718      	bx	r3
    newTransition->init();
90003f94:	4628      	mov	r0, r5
90003f96:	4790      	blx	r2
    newTransition->invalidate();
90003f98:	682b      	ldr	r3, [r5, #0]
90003f9a:	e7c4      	b.n	90003f26 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x166>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003f9c:	4b10      	ldr	r3, [pc, #64]	; (90003fe0 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x220>)
90003f9e:	21a3      	movs	r1, #163	; 0xa3
90003fa0:	4a10      	ldr	r2, [pc, #64]	; (90003fe4 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x224>)
90003fa2:	4811      	ldr	r0, [pc, #68]	; (90003fe8 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x228>)
90003fa4:	f022 f98c 	bl	900262c0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003fa8:	4b10      	ldr	r3, [pc, #64]	; (90003fec <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x22c>)
90003faa:	21a5      	movs	r1, #165	; 0xa5
90003fac:	4a0d      	ldr	r2, [pc, #52]	; (90003fe4 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x224>)
90003fae:	480e      	ldr	r0, [pc, #56]	; (90003fe8 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x228>)
90003fb0:	f022 f986 	bl	900262c0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003fb4:	4b0e      	ldr	r3, [pc, #56]	; (90003ff0 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x230>)
90003fb6:	21a4      	movs	r1, #164	; 0xa4
90003fb8:	4a0a      	ldr	r2, [pc, #40]	; (90003fe4 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x224>)
90003fba:	480b      	ldr	r0, [pc, #44]	; (90003fe8 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x228>)
90003fbc:	f022 f980 	bl	900262c0 <__assert_func>
90003fc0:	9002964c 	.word	0x9002964c
90003fc4:	240235ab 	.word	0x240235ab
90003fc8:	90003b45 	.word	0x90003b45
90003fcc:	90003895 	.word	0x90003895
90003fd0:	900023f5 	.word	0x900023f5
90003fd4:	90003965 	.word	0x90003965
90003fd8:	240235a2 	.word	0x240235a2
90003fdc:	240235a0 	.word	0x240235a0
90003fe0:	9002901c 	.word	0x9002901c
90003fe4:	90029358 	.word	0x90029358
90003fe8:	900291c8 	.word	0x900291c8
90003fec:	900292b4 	.word	0x900292b4
90003ff0:	90029210 	.word	0x90029210
90003ff4:	240235f4 	.word	0x240235f4
90003ff8:	240235f0 	.word	0x240235f0

90003ffc <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv>:
{
90003ffc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_asteroidsView, screen_asteroidsPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90004000:	e9d0 4b55 	ldrd	r4, fp, [r0, #340]	; 0x154
{
90004004:	4680      	mov	r8, r0
90004006:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004008:	68a0      	ldr	r0, [r4, #8]
9000400a:	6803      	ldr	r3, [r0, #0]
9000400c:	6a1b      	ldr	r3, [r3, #32]
9000400e:	4798      	blx	r3
90004010:	f242 43c3 	movw	r3, #9411	; 0x24c3
90004014:	4298      	cmp	r0, r3
90004016:	f240 80e1 	bls.w	900041dc <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1e0>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
9000401a:	6860      	ldr	r0, [r4, #4]
9000401c:	6803      	ldr	r3, [r0, #0]
9000401e:	6a1b      	ldr	r3, [r3, #32]
90004020:	4798      	blx	r3
90004022:	281f      	cmp	r0, #31
90004024:	f240 80e6 	bls.w	900041f4 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1f8>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004028:	68e0      	ldr	r0, [r4, #12]
9000402a:	6803      	ldr	r3, [r0, #0]
9000402c:	6a1b      	ldr	r3, [r3, #32]
9000402e:	4798      	blx	r3
90004030:	283f      	cmp	r0, #63	; 0x3f
90004032:	f240 80d9 	bls.w	900041e8 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1ec>
    if (*currentTrans)
90004036:	f8df a1fc 	ldr.w	sl, [pc, #508]	; 90004234 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x238>
    Application::getInstance()->clearAllTimerWidgets();
9000403a:	f010 ffc5 	bl	90014fc8 <_ZN8touchgfx11Application11getInstanceEv>
9000403e:	3004      	adds	r0, #4
90004040:	f010 ffe7 	bl	90015012 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90004044:	f8da 0000 	ldr.w	r0, [sl]
90004048:	b140      	cbz	r0, 9000405c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x60>
        (*currentTrans)->tearDown();
9000404a:	6803      	ldr	r3, [r0, #0]
9000404c:	68db      	ldr	r3, [r3, #12]
9000404e:	4798      	blx	r3
    if (*currentTrans)
90004050:	f8da 0000 	ldr.w	r0, [sl]
90004054:	b110      	cbz	r0, 9000405c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x60>
        (*currentTrans)->~Transition();
90004056:	6803      	ldr	r3, [r0, #0]
90004058:	681b      	ldr	r3, [r3, #0]
9000405a:	4798      	blx	r3
    if (*currentScreen)
9000405c:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 90004238 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x23c>
90004060:	f8d9 0000 	ldr.w	r0, [r9]
90004064:	2800      	cmp	r0, #0
90004066:	f000 80a5 	beq.w	900041b4 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1b8>
        (*currentScreen)->tearDownScreen();
9000406a:	6803      	ldr	r3, [r0, #0]
9000406c:	695b      	ldr	r3, [r3, #20]
9000406e:	4798      	blx	r3
    if (*currentPresenter)
90004070:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90004074:	2800      	cmp	r0, #0
90004076:	f000 8081 	beq.w	9000417c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x180>
        (*currentPresenter)->deactivate();
9000407a:	6803      	ldr	r3, [r0, #0]
9000407c:	685b      	ldr	r3, [r3, #4]
9000407e:	4798      	blx	r3
    if (*currentScreen)
90004080:	f8d9 0000 	ldr.w	r0, [r9]
90004084:	b110      	cbz	r0, 9000408c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x90>
        (*currentScreen)->~Screen();
90004086:	6803      	ldr	r3, [r0, #0]
90004088:	681b      	ldr	r3, [r3, #0]
9000408a:	4798      	blx	r3
    if (*currentPresenter)
9000408c:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90004090:	b110      	cbz	r0, 90004098 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x9c>
        (*currentPresenter)->~Presenter();
90004092:	6803      	ldr	r3, [r0, #0]
90004094:	689b      	ldr	r3, [r3, #8]
90004096:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90004098:	68e0      	ldr	r0, [r4, #12]
9000409a:	2100      	movs	r1, #0
9000409c:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
9000409e:	460f      	mov	r7, r1
900040a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900040a2:	4798      	blx	r3
          relativeValue(0)
900040a4:	4b56      	ldr	r3, [pc, #344]	; (90004200 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x204>)
900040a6:	4606      	mov	r6, r0
900040a8:	4605      	mov	r5, r0
900040aa:	6047      	str	r7, [r0, #4]
900040ac:	7207      	strb	r7, [r0, #8]
900040ae:	f846 3b0c 	str.w	r3, [r6], #12
          snapshot(),
900040b2:	4630      	mov	r0, r6
900040b4:	f00d fb80 	bl	900117b8 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
900040b8:	4b52      	ldr	r3, [pc, #328]	; (90004204 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x208>)
          animationSteps(transitionSteps),
900040ba:	2214      	movs	r2, #20
          relativeValue(0)
900040bc:	87af      	strh	r7, [r5, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
900040be:	781b      	ldrb	r3, [r3, #0]
          animationSteps(transitionSteps),
900040c0:	872a      	strh	r2, [r5, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
900040c2:	2b00      	cmp	r3, #0
900040c4:	d166      	bne.n	90004194 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x198>
            done = true;
900040c6:	2301      	movs	r3, #1
900040c8:	722b      	strb	r3, [r5, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
900040ca:	68a0      	ldr	r0, [r4, #8]
900040cc:	2100      	movs	r1, #0
900040ce:	6803      	ldr	r3, [r0, #0]
900040d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900040d2:	4798      	blx	r3
900040d4:	4607      	mov	r7, r0
900040d6:	f002 fab1 	bl	9000663c <_ZN20screen_asteroidsViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
900040da:	6860      	ldr	r0, [r4, #4]
900040dc:	2100      	movs	r1, #0
900040de:	6803      	ldr	r3, [r0, #0]
900040e0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900040e2:	4798      	blx	r3
900040e4:	4604      	mov	r4, r0
900040e6:	4639      	mov	r1, r7
900040e8:	f002 f83e 	bl	90006168 <_ZN25screen_asteroidsPresenterC1ER20screen_asteroidsView>
    *currentTrans = newTransition;
900040ec:	f8ca 5000 	str.w	r5, [sl]
    *currentPresenter = newPresenter;
900040f0:	f8c8 413c 	str.w	r4, [r8, #316]	; 0x13c
    *currentScreen = newScreen;
900040f4:	f8c9 7000 	str.w	r7, [r9]
    model->bind(newPresenter);
900040f8:	2c00      	cmp	r4, #0
900040fa:	d061      	beq.n	900041c0 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1c4>
900040fc:	1d23      	adds	r3, r4, #4
900040fe:	f8cb 3000 	str.w	r3, [fp]
    newScreen->setupScreen();
90004102:	4638      	mov	r0, r7
90004104:	683b      	ldr	r3, [r7, #0]
90004106:	f8c4 b008 	str.w	fp, [r4, #8]
9000410a:	68db      	ldr	r3, [r3, #12]
9000410c:	63fc      	str	r4, [r7, #60]	; 0x3c
9000410e:	4798      	blx	r3
    newPresenter->activate();
90004110:	6823      	ldr	r3, [r4, #0]
90004112:	4620      	mov	r0, r4
90004114:	681b      	ldr	r3, [r3, #0]
90004116:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90004118:	4629      	mov	r1, r5
9000411a:	4638      	mov	r0, r7
9000411c:	f012 fcce 	bl	90016abc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90004120:	682b      	ldr	r3, [r5, #0]
90004122:	4939      	ldr	r1, [pc, #228]	; (90004208 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x20c>)
90004124:	691a      	ldr	r2, [r3, #16]
90004126:	428a      	cmp	r2, r1
90004128:	d154      	bne.n	900041d4 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1d8>
        if (done)
9000412a:	7a2a      	ldrb	r2, [r5, #8]
9000412c:	b9d2      	cbnz	r2, 90004164 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x168>
        Drawable* d = screenContainer->getFirstChild();
9000412e:	6868      	ldr	r0, [r5, #4]
90004130:	4a36      	ldr	r2, [pc, #216]	; (9000420c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x210>)
90004132:	6803      	ldr	r3, [r0, #0]
90004134:	69db      	ldr	r3, [r3, #28]
90004136:	4293      	cmp	r3, r2
90004138:	d144      	bne.n	900041c4 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1c8>
9000413a:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
9000413c:	b164      	cbz	r4, 90004158 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x15c>
9000413e:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90004140:	4f33      	ldr	r7, [pc, #204]	; (90004210 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x214>)
                d->setX(d->getX() - targetValue);
90004142:	6823      	ldr	r3, [r4, #0]
90004144:	88a1      	ldrh	r1, [r4, #4]
90004146:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90004148:	1a89      	subs	r1, r1, r2
9000414a:	42bb      	cmp	r3, r7
9000414c:	b209      	sxth	r1, r1
9000414e:	d11a      	bne.n	90004186 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x18a>
        rect.x = x;
90004150:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90004152:	69a4      	ldr	r4, [r4, #24]
        while (d)
90004154:	2c00      	cmp	r4, #0
90004156:	d1f4      	bne.n	90004142 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x146>
        screenContainer->add(snapshot);
90004158:	6868      	ldr	r0, [r5, #4]
9000415a:	4631      	mov	r1, r6
9000415c:	6803      	ldr	r3, [r0, #0]
9000415e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90004160:	4798      	blx	r3
    newTransition->invalidate();
90004162:	682b      	ldr	r3, [r5, #0]
90004164:	695b      	ldr	r3, [r3, #20]
90004166:	4a2b      	ldr	r2, [pc, #172]	; (90004214 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x218>)
90004168:	4293      	cmp	r3, r2
9000416a:	d12e      	bne.n	900041ca <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1ce>
        Application::getInstance()->invalidate();
9000416c:	f010 ff2c 	bl	90014fc8 <_ZN8touchgfx11Application11getInstanceEv>
90004170:	6803      	ldr	r3, [r0, #0]
90004172:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
90004174:	b001      	add	sp, #4
90004176:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000417a:	4718      	bx	r3
    if (*currentScreen)
9000417c:	f8d9 0000 	ldr.w	r0, [r9]
90004180:	2800      	cmp	r0, #0
90004182:	d180      	bne.n	90004086 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x8a>
90004184:	e788      	b.n	90004098 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x9c>
                d->setX(d->getX() - targetValue);
90004186:	4620      	mov	r0, r4
90004188:	4798      	blx	r3
9000418a:	69a4      	ldr	r4, [r4, #24]
        while (d)
9000418c:	2c00      	cmp	r4, #0
9000418e:	d0e3      	beq.n	90004158 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x15c>
90004190:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90004192:	e7d6      	b.n	90004142 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x146>
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90004194:	4b20      	ldr	r3, [pc, #128]	; (90004218 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x21c>)
        snapshot.makeSnapshot();
90004196:	4630      	mov	r0, r6
        rect.x = x;
90004198:	612f      	str	r7, [r5, #16]
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
9000419a:	f9b3 3000 	ldrsh.w	r3, [r3]
9000419e:	4f1f      	ldr	r7, [pc, #124]	; (9000421c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x220>)
        rect.height = height;
900041a0:	82eb      	strh	r3, [r5, #22]
900041a2:	f9b7 3000 	ldrsh.w	r3, [r7]
        rect.width = width;
900041a6:	82ab      	strh	r3, [r5, #20]
        snapshot.makeSnapshot();
900041a8:	f00d fa81 	bl	900116ae <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_WIDTH;
900041ac:	883b      	ldrh	r3, [r7, #0]
900041ae:	425b      	negs	r3, r3
900041b0:	876b      	strh	r3, [r5, #58]	; 0x3a
            break;
900041b2:	e78a      	b.n	900040ca <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0xce>
    if (*currentPresenter)
900041b4:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
900041b8:	2800      	cmp	r0, #0
900041ba:	f47f af5e 	bne.w	9000407a <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x7e>
900041be:	e76b      	b.n	90004098 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x9c>
    model->bind(newPresenter);
900041c0:	4623      	mov	r3, r4
900041c2:	e79c      	b.n	900040fe <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x102>
        Drawable* d = screenContainer->getFirstChild();
900041c4:	4798      	blx	r3
900041c6:	4604      	mov	r4, r0
900041c8:	e7b8      	b.n	9000413c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x140>
    newTransition->invalidate();
900041ca:	4628      	mov	r0, r5
900041cc:	b001      	add	sp, #4
900041ce:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900041d2:	4718      	bx	r3
    newTransition->init();
900041d4:	4628      	mov	r0, r5
900041d6:	4790      	blx	r2
    newTransition->invalidate();
900041d8:	682b      	ldr	r3, [r5, #0]
900041da:	e7c3      	b.n	90004164 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x168>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
900041dc:	4b10      	ldr	r3, [pc, #64]	; (90004220 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x224>)
900041de:	21a3      	movs	r1, #163	; 0xa3
900041e0:	4a10      	ldr	r2, [pc, #64]	; (90004224 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x228>)
900041e2:	4811      	ldr	r0, [pc, #68]	; (90004228 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x22c>)
900041e4:	f022 f86c 	bl	900262c0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
900041e8:	4b10      	ldr	r3, [pc, #64]	; (9000422c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x230>)
900041ea:	21a5      	movs	r1, #165	; 0xa5
900041ec:	4a0d      	ldr	r2, [pc, #52]	; (90004224 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x228>)
900041ee:	480e      	ldr	r0, [pc, #56]	; (90004228 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x22c>)
900041f0:	f022 f866 	bl	900262c0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
900041f4:	4b0e      	ldr	r3, [pc, #56]	; (90004230 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x234>)
900041f6:	21a4      	movs	r1, #164	; 0xa4
900041f8:	4a0a      	ldr	r2, [pc, #40]	; (90004224 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x228>)
900041fa:	480b      	ldr	r0, [pc, #44]	; (90004228 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x22c>)
900041fc:	f022 f860 	bl	900262c0 <__assert_func>
90004200:	90029670 	.word	0x90029670
90004204:	240235ab 	.word	0x240235ab
90004208:	90003ae5 	.word	0x90003ae5
9000420c:	90003895 	.word	0x90003895
90004210:	900023f5 	.word	0x900023f5
90004214:	90003965 	.word	0x90003965
90004218:	240235a2 	.word	0x240235a2
9000421c:	240235a0 	.word	0x240235a0
90004220:	9002901c 	.word	0x9002901c
90004224:	90029488 	.word	0x90029488
90004228:	900291c8 	.word	0x900291c8
9000422c:	900292b4 	.word	0x900292b4
90004230:	90029210 	.word	0x90029210
90004234:	240235f4 	.word	0x240235f4
90004238:	240235f0 	.word	0x240235f0

9000423c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
9000423c:	b570      	push	{r4, r5, r6, lr}
9000423e:	4604      	mov	r4, r0
90004240:	4615      	mov	r5, r2
90004242:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
90004244:	f010 ff86 	bl	90015154 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
90004248:	4a1d      	ldr	r2, [pc, #116]	; (900042c0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x84>)
        : currentPresenter(0),
9000424a:	2300      	movs	r3, #0
      frontendHeap(heap),
9000424c:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
        instance = this;
90004250:	6014      	str	r4, [r2, #0]
        return instance;
90004252:	4d1c      	ldr	r5, [pc, #112]	; (900042c4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x88>)
      model(m)
90004254:	4a1c      	ldr	r2, [pc, #112]	; (900042c8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8c>)
90004256:	6828      	ldr	r0, [r5, #0]
90004258:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
9000425a:	4a1c      	ldr	r2, [pc, #112]	; (900042cc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x90>)
9000425c:	491c      	ldr	r1, [pc, #112]	; (900042d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x94>)
9000425e:	f8c4 2144 	str.w	r2, [r4, #324]	; 0x144
90004262:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
90004266:	f8c4 6158 	str.w	r6, [r4, #344]	; 0x158
9000426a:	e9c4 3353 	strd	r3, r3, [r4, #332]	; 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
9000426e:	6802      	ldr	r2, [r0, #0]
90004270:	6892      	ldr	r2, [r2, #8]
90004272:	428a      	cmp	r2, r1
          pendingScreenTransitionCallback(0)
90004274:	e9c4 334f 	strd	r3, r3, [r4, #316]	; 0x13c
90004278:	d11f      	bne.n	900042ba <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7e>
        requestedOrientation = orientation;
9000427a:	f44f 7380 	mov.w	r3, #256	; 0x100
9000427e:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
    touchgfx::Texts::setLanguage(GB);
90004282:	2000      	movs	r0, #0
90004284:	f000 fa04 	bl	90004690 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90004288:	682b      	ldr	r3, [r5, #0]
9000428a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
9000428e:	b192      	cbz	r2, 900042b6 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7a>
90004290:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90004292:	b180      	cbz	r0, 900042b6 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7a>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
90004294:	f01a f8cd 	bl	9001e432 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
90004298:	682b      	ldr	r3, [r5, #0]
9000429a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
9000429e:	b12a      	cbz	r2, 900042ac <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>
900042a0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900042a2:	b118      	cbz	r0, 900042ac <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
900042a4:	f01a f940 	bl	9001e528 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
900042a8:	4620      	mov	r0, r4
900042aa:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
900042ac:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
900042ae:	f01a f93b 	bl	9001e528 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
900042b2:	4620      	mov	r0, r4
900042b4:	bd70      	pop	{r4, r5, r6, pc}
900042b6:	6898      	ldr	r0, [r3, #8]
900042b8:	e7ec      	b.n	90004294 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
900042ba:	4619      	mov	r1, r3
900042bc:	4790      	blx	r2
900042be:	e7e0      	b.n	90004282 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
900042c0:	24023600 	.word	0x24023600
900042c4:	240235ac 	.word	0x240235ac
900042c8:	900295d4 	.word	0x900295d4
900042cc:	900295bc 	.word	0x900295bc
900042d0:	90000665 	.word	0x90000665

900042d4 <_ZN23FrontendApplicationBase45gotoscreen_asteroidsScreenSlideTransitionEastEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
900042d4:	4905      	ldr	r1, [pc, #20]	; (900042ec <_ZN23FrontendApplicationBase45gotoscreen_asteroidsScreenSlideTransitionEastEv+0x18>)
900042d6:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
900042d8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
900042dc:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
900042e0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
900042e4:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
900042e8:	4770      	bx	lr
900042ea:	bf00      	nop
900042ec:	90003ffd 	.word	0x90003ffd

900042f0 <_ZN23FrontendApplicationBase40gotoscreen_game_selectScreenNoTransitionEv>:
900042f0:	4905      	ldr	r1, [pc, #20]	; (90004308 <_ZN23FrontendApplicationBase40gotoscreen_game_selectScreenNoTransitionEv+0x18>)
900042f2:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
900042f4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
900042f8:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
900042fc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90004300:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
90004304:	4770      	bx	lr
90004306:	bf00      	nop
90004308:	90003c1d 	.word	0x90003c1d

9000430c <_ZN23FrontendApplicationBase47gotoscreen_game_selectScreenSlideTransitionWestEv>:
9000430c:	4905      	ldr	r1, [pc, #20]	; (90004324 <_ZN23FrontendApplicationBase47gotoscreen_game_selectScreenSlideTransitionWestEv+0x18>)
9000430e:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90004310:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90004314:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90004318:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
9000431c:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
90004320:	4770      	bx	lr
90004322:	bf00      	nop
90004324:	90003dc1 	.word	0x90003dc1

90004328 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
90004328:	6a40      	ldr	r0, [r0, #36]	; 0x24
9000432a:	4770      	bx	lr

9000432c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
9000432c:	6a80      	ldr	r0, [r0, #40]	; 0x28
9000432e:	4770      	bx	lr

90004330 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
90004330:	4770      	bx	lr
90004332:	bf00      	nop

90004334 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
90004334:	888b      	ldrh	r3, [r1, #4]
90004336:	69c0      	ldr	r0, [r0, #28]
90004338:	0adb      	lsrs	r3, r3, #11
9000433a:	680a      	ldr	r2, [r1, #0]
9000433c:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
90004340:	4410      	add	r0, r2
90004342:	4770      	bx	lr

90004344 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
    if (!glyph || glyph->kerningTableSize == 0)
90004344:	b1da      	cbz	r2, 9000437e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3a>
{
90004346:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
90004348:	7b14      	ldrb	r4, [r2, #12]
9000434a:	b1b4      	cbz	r4, 9000437a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
9000434c:	f892 c00d 	ldrb.w	ip, [r2, #13]
90004350:	f892 e00b 	ldrb.w	lr, [r2, #11]
90004354:	ea4f 220c 	mov.w	r2, ip, lsl #8
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
90004358:	6a03      	ldr	r3, [r0, #32]
9000435a:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000435e:	ea4e 0202 	orr.w	r2, lr, r2
90004362:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90004366:	eb03 0084 	add.w	r0, r3, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
9000436a:	881a      	ldrh	r2, [r3, #0]
9000436c:	428a      	cmp	r2, r1
9000436e:	d008      	beq.n	90004382 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90004370:	f103 0304 	add.w	r3, r3, #4
        {
            return kerndata->distance;
        }
        if (prevChar < kerndata->unicodePrevChar)
90004374:	d801      	bhi.n	9000437a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90004376:	4283      	cmp	r3, r0
90004378:	d1f7      	bne.n	9000436a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
9000437a:	2000      	movs	r0, #0
        {
            break;
        }
    }
    return 0;
}
9000437c:	bd10      	pop	{r4, pc}
        return 0;
9000437e:	4610      	mov	r0, r2
}
90004380:	4770      	bx	lr
            return kerndata->distance;
90004382:	f993 0002 	ldrsb.w	r0, [r3, #2]
}
90004386:	bd10      	pop	{r4, pc}

90004388 <_ZN8touchgfx13GeneratedFontD0Ev>:
90004388:	b510      	push	{r4, lr}
9000438a:	4604      	mov	r4, r0
9000438c:	212c      	movs	r1, #44	; 0x2c
9000438e:	f021 ff68 	bl	90026262 <_ZdlPvj>
90004392:	4620      	mov	r0, r4
90004394:	bd10      	pop	{r4, pc}
90004396:	bf00      	nop

90004398 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004398:	b530      	push	{r4, r5, lr}
9000439a:	b08b      	sub	sp, #44	; 0x2c
9000439c:	4604      	mov	r4, r0
9000439e:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
      arabicTable(formsTable)
900043a2:	9500      	str	r5, [sp, #0]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900043a4:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
      arabicTable(formsTable)
900043a8:	9501      	str	r5, [sp, #4]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900043aa:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
      arabicTable(formsTable)
900043ae:	9502      	str	r5, [sp, #8]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900043b0:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
      arabicTable(formsTable)
900043b4:	9503      	str	r5, [sp, #12]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900043b6:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
      arabicTable(formsTable)
900043ba:	9504      	str	r5, [sp, #16]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900043bc:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
      arabicTable(formsTable)
900043c0:	9505      	str	r5, [sp, #20]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900043c2:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
      arabicTable(formsTable)
900043c6:	9506      	str	r5, [sp, #24]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900043c8:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
      arabicTable(formsTable)
900043cc:	9507      	str	r5, [sp, #28]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900043ce:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
      arabicTable(formsTable)
900043d2:	9508      	str	r5, [sp, #32]
900043d4:	f011 ff1e 	bl	90016214 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
      glyphData(glyphDataInternalFlash),
900043d8:	9b15      	ldr	r3, [sp, #84]	; 0x54
}
900043da:	4620      	mov	r0, r4
      glyphData(glyphDataInternalFlash),
900043dc:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
900043de:	9b16      	ldr	r3, [sp, #88]	; 0x58
900043e0:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
900043e2:	9b19      	ldr	r3, [sp, #100]	; 0x64
900043e4:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
900043e6:	9b1a      	ldr	r3, [sp, #104]	; 0x68
900043e8:	62a3      	str	r3, [r4, #40]	; 0x28
900043ea:	4b02      	ldr	r3, [pc, #8]	; (900043f4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
900043ec:	6023      	str	r3, [r4, #0]
}
900043ee:	b00b      	add	sp, #44	; 0x2c
900043f0:	bd30      	pop	{r4, r5, pc}
900043f2:	bf00      	nop
900043f4:	90029694 	.word	0x90029694

900043f8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 190, 12, 10, 1, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
900043f8:	4770      	bx	lr
900043fa:	bf00      	nop

900043fc <_Z23getFont_verdana_10_4bppv>:
{
900043fc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 190, 12, 10, 1, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
900043fe:	4d19      	ldr	r5, [pc, #100]	; (90004464 <_Z23getFont_verdana_10_4bppv+0x68>)
{
90004400:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 190, 12, 10, 1, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90004402:	682c      	ldr	r4, [r5, #0]
90004404:	f3bf 8f5b 	dmb	ish
90004408:	f014 0401 	ands.w	r4, r4, #1
9000440c:	d002      	beq.n	90004414 <_Z23getFont_verdana_10_4bppv+0x18>
    return verdana_10_4bpp;
}
9000440e:	4816      	ldr	r0, [pc, #88]	; (90004468 <_Z23getFont_verdana_10_4bppv+0x6c>)
90004410:	b00f      	add	sp, #60	; 0x3c
90004412:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 190, 12, 10, 1, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90004414:	4628      	mov	r0, r5
90004416:	f021 ff26 	bl	90026266 <__cxa_guard_acquire>
9000441a:	2800      	cmp	r0, #0
9000441c:	d0f7      	beq.n	9000440e <_Z23getFont_verdana_10_4bppv+0x12>
9000441e:	213f      	movs	r1, #63	; 0x3f
90004420:	4b12      	ldr	r3, [pc, #72]	; (9000446c <_Z23getFont_verdana_10_4bppv+0x70>)
90004422:	2201      	movs	r2, #1
90004424:	200a      	movs	r0, #10
90004426:	9308      	str	r3, [sp, #32]
90004428:	2304      	movs	r3, #4
9000442a:	9000      	str	r0, [sp, #0]
9000442c:	480e      	ldr	r0, [pc, #56]	; (90004468 <_Z23getFont_verdana_10_4bppv+0x6c>)
9000442e:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
90004432:	490f      	ldr	r1, [pc, #60]	; (90004470 <_Z23getFont_verdana_10_4bppv+0x74>)
90004434:	e9cd 3203 	strd	r3, r2, [sp, #12]
90004438:	e9cd 2205 	strd	r2, r2, [sp, #20]
9000443c:	230c      	movs	r3, #12
9000443e:	9107      	str	r1, [sp, #28]
90004440:	490c      	ldr	r1, [pc, #48]	; (90004474 <_Z23getFont_verdana_10_4bppv+0x78>)
90004442:	e9cd 2401 	strd	r2, r4, [sp, #4]
90004446:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
9000444a:	22be      	movs	r2, #190	; 0xbe
9000444c:	f7ff ffa4 	bl	90004398 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90004450:	4809      	ldr	r0, [pc, #36]	; (90004478 <_Z23getFont_verdana_10_4bppv+0x7c>)
90004452:	f021 ff53 	bl	900262fc <atexit>
90004456:	4628      	mov	r0, r5
90004458:	f021 ff11 	bl	9002627e <__cxa_guard_release>
}
9000445c:	4802      	ldr	r0, [pc, #8]	; (90004468 <_Z23getFont_verdana_10_4bppv+0x6c>)
9000445e:	b00f      	add	sp, #60	; 0x3c
90004460:	bd30      	pop	{r4, r5, pc}
90004462:	bf00      	nop
90004464:	240094f0 	.word	0x240094f0
90004468:	240094f4 	.word	0x240094f4
9000446c:	9002ad38 	.word	0x9002ad38
90004470:	9002b384 	.word	0x9002b384
90004474:	902138ec 	.word	0x902138ec
90004478:	900043f9 	.word	0x900043f9

9000447c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 190, 25, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
9000447c:	4770      	bx	lr
9000447e:	bf00      	nop

90004480 <_Z23getFont_verdana_20_4bppv>:
{
90004480:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 190, 25, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90004482:	4d19      	ldr	r5, [pc, #100]	; (900044e8 <_Z23getFont_verdana_20_4bppv+0x68>)
{
90004484:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 190, 25, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90004486:	682c      	ldr	r4, [r5, #0]
90004488:	f3bf 8f5b 	dmb	ish
9000448c:	f014 0401 	ands.w	r4, r4, #1
90004490:	d002      	beq.n	90004498 <_Z23getFont_verdana_20_4bppv+0x18>
    return verdana_20_4bpp;
}
90004492:	4816      	ldr	r0, [pc, #88]	; (900044ec <_Z23getFont_verdana_20_4bppv+0x6c>)
90004494:	b00f      	add	sp, #60	; 0x3c
90004496:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 190, 25, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90004498:	4628      	mov	r0, r5
9000449a:	f021 fee4 	bl	90026266 <__cxa_guard_acquire>
9000449e:	2800      	cmp	r0, #0
900044a0:	d0f7      	beq.n	90004492 <_Z23getFont_verdana_20_4bppv+0x12>
900044a2:	213f      	movs	r1, #63	; 0x3f
900044a4:	4a12      	ldr	r2, [pc, #72]	; (900044f0 <_Z23getFont_verdana_20_4bppv+0x70>)
900044a6:	2301      	movs	r3, #1
900044a8:	2014      	movs	r0, #20
900044aa:	9208      	str	r2, [sp, #32]
900044ac:	2204      	movs	r2, #4
900044ae:	9304      	str	r3, [sp, #16]
900044b0:	9000      	str	r0, [sp, #0]
900044b2:	9401      	str	r4, [sp, #4]
900044b4:	480d      	ldr	r0, [pc, #52]	; (900044ec <_Z23getFont_verdana_20_4bppv+0x6c>)
900044b6:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
900044ba:	490e      	ldr	r1, [pc, #56]	; (900044f4 <_Z23getFont_verdana_20_4bppv+0x74>)
900044bc:	e9cd 3305 	strd	r3, r3, [sp, #20]
900044c0:	9107      	str	r1, [sp, #28]
900044c2:	2319      	movs	r3, #25
900044c4:	490c      	ldr	r1, [pc, #48]	; (900044f8 <_Z23getFont_verdana_20_4bppv+0x78>)
900044c6:	e9cd 4202 	strd	r4, r2, [sp, #8]
900044ca:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
900044ce:	22be      	movs	r2, #190	; 0xbe
900044d0:	f7ff ff62 	bl	90004398 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900044d4:	4809      	ldr	r0, [pc, #36]	; (900044fc <_Z23getFont_verdana_20_4bppv+0x7c>)
900044d6:	f021 ff11 	bl	900262fc <atexit>
900044da:	4628      	mov	r0, r5
900044dc:	f021 fecf 	bl	9002627e <__cxa_guard_release>
}
900044e0:	4802      	ldr	r0, [pc, #8]	; (900044ec <_Z23getFont_verdana_20_4bppv+0x6c>)
900044e2:	b00f      	add	sp, #60	; 0x3c
900044e4:	bd30      	pop	{r4, r5, pc}
900044e6:	bf00      	nop
900044e8:	24009520 	.word	0x24009520
900044ec:	24009524 	.word	0x24009524
900044f0:	9002ad6c 	.word	0x9002ad6c
900044f4:	9002b388 	.word	0x9002b388
900044f8:	90214350 	.word	0x90214350
900044fc:	9000447d 	.word	0x9000447d

90004500 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 190, 48, 40, 1, 0, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90004500:	4770      	bx	lr
90004502:	bf00      	nop

90004504 <_Z23getFont_verdana_40_4bppv>:
{
90004504:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 190, 48, 40, 1, 0, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90004506:	4d19      	ldr	r5, [pc, #100]	; (9000456c <_Z23getFont_verdana_40_4bppv+0x68>)
{
90004508:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 190, 48, 40, 1, 0, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
9000450a:	682c      	ldr	r4, [r5, #0]
9000450c:	f3bf 8f5b 	dmb	ish
90004510:	f014 0401 	ands.w	r4, r4, #1
90004514:	d002      	beq.n	9000451c <_Z23getFont_verdana_40_4bppv+0x18>
    return verdana_40_4bpp;
}
90004516:	4816      	ldr	r0, [pc, #88]	; (90004570 <_Z23getFont_verdana_40_4bppv+0x6c>)
90004518:	b00f      	add	sp, #60	; 0x3c
9000451a:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 190, 48, 40, 1, 0, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
9000451c:	4628      	mov	r0, r5
9000451e:	f021 fea2 	bl	90026266 <__cxa_guard_acquire>
90004522:	2800      	cmp	r0, #0
90004524:	d0f7      	beq.n	90004516 <_Z23getFont_verdana_40_4bppv+0x12>
90004526:	2302      	movs	r3, #2
90004528:	223f      	movs	r2, #63	; 0x3f
9000452a:	4812      	ldr	r0, [pc, #72]	; (90004574 <_Z23getFont_verdana_40_4bppv+0x70>)
9000452c:	2101      	movs	r1, #1
9000452e:	9402      	str	r4, [sp, #8]
90004530:	9008      	str	r0, [sp, #32]
90004532:	2028      	movs	r0, #40	; 0x28
90004534:	e9cd 2409 	strd	r2, r4, [sp, #36]	; 0x24
90004538:	e9cd 3305 	strd	r3, r3, [sp, #20]
9000453c:	2204      	movs	r2, #4
9000453e:	4b0e      	ldr	r3, [pc, #56]	; (90004578 <_Z23getFont_verdana_40_4bppv+0x74>)
90004540:	e9cd 2103 	strd	r2, r1, [sp, #12]
90004544:	e9cd 0100 	strd	r0, r1, [sp]
90004548:	22be      	movs	r2, #190	; 0xbe
9000454a:	490c      	ldr	r1, [pc, #48]	; (9000457c <_Z23getFont_verdana_40_4bppv+0x78>)
9000454c:	9307      	str	r3, [sp, #28]
9000454e:	2330      	movs	r3, #48	; 0x30
90004550:	4807      	ldr	r0, [pc, #28]	; (90004570 <_Z23getFont_verdana_40_4bppv+0x6c>)
90004552:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90004556:	f7ff ff1f 	bl	90004398 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
9000455a:	4809      	ldr	r0, [pc, #36]	; (90004580 <_Z23getFont_verdana_40_4bppv+0x7c>)
9000455c:	f021 fece 	bl	900262fc <atexit>
90004560:	4628      	mov	r0, r5
90004562:	f021 fe8c 	bl	9002627e <__cxa_guard_release>
}
90004566:	4802      	ldr	r0, [pc, #8]	; (90004570 <_Z23getFont_verdana_40_4bppv+0x6c>)
90004568:	b00f      	add	sp, #60	; 0x3c
9000456a:	bd30      	pop	{r4, r5, pc}
9000456c:	24009550 	.word	0x24009550
90004570:	24009554 	.word	0x24009554
90004574:	9002af80 	.word	0x9002af80
90004578:	9002b38c 	.word	0x9002b38c
9000457c:	90214db4 	.word	0x90214db4
90004580:	90004501 	.word	0x90004501

90004584 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
90004584:	2000      	movs	r0, #0
90004586:	4770      	bx	lr

90004588 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
90004588:	2000      	movs	r0, #0
9000458a:	4770      	bx	lr

9000458c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
9000458c:	b40e      	push	{r1, r2, r3}
9000458e:	b500      	push	{lr}
90004590:	b082      	sub	sp, #8
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
90004592:	2100      	movs	r1, #0
{
90004594:	ab03      	add	r3, sp, #12
90004596:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
9000459a:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
9000459c:	f011 fc62 	bl	90015e64 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
900045a0:	b002      	add	sp, #8
900045a2:	f85d eb04 	ldr.w	lr, [sp], #4
900045a6:	b003      	add	sp, #12
900045a8:	4770      	bx	lr
900045aa:	bf00      	nop

900045ac <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
900045ac:	b40c      	push	{r2, r3}
900045ae:	b500      	push	{lr}
900045b0:	b083      	sub	sp, #12
900045b2:	ab04      	add	r3, sp, #16
900045b4:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
900045b8:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
900045ba:	f011 fc53 	bl	90015e64 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
900045be:	b003      	add	sp, #12
900045c0:	f85d eb04 	ldr.w	lr, [sp], #4
900045c4:	b002      	add	sp, #8
900045c6:	4770      	bx	lr

900045c8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
900045c8:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
900045ca:	b510      	push	{r4, lr}
900045cc:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
900045ce:	b133      	cbz	r3, 900045de <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
900045d0:	8f03      	ldrh	r3, [r0, #56]	; 0x38
900045d2:	b39b      	cbz	r3, 9000463c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>
            return buffer[pos];
900045d4:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
900045d6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
900045da:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
900045dc:	b923      	cbnz	r3, 900045e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
900045de:	4620      	mov	r0, r4
}
900045e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
900045e4:	f012 bed0 	b.w	90017388 <_ZN8touchgfx12TextProvider11getNextCharEv>
        substituteGlyphs();
900045e8:	f012 ffcc 	bl	90017584 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
900045ec:	8f23      	ldrh	r3, [r4, #56]	; 0x38
900045ee:	2b01      	cmp	r3, #1
900045f0:	d92a      	bls.n	90004648 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>
            const uint16_t index = pos + offset;
900045f2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
900045f4:	1c53      	adds	r3, r2, #1
900045f6:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
900045f8:	2b09      	cmp	r3, #9
900045fa:	d812      	bhi.n	90004622 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x5a>
900045fc:	eb04 0143 	add.w	r1, r4, r3, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
90004600:	f640 103f 	movw	r0, #2367	; 0x93f
90004604:	8c49      	ldrh	r1, [r1, #34]	; 0x22
90004606:	4281      	cmp	r1, r0
90004608:	d1e9      	bne.n	900045de <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
9000460a:	eb04 0142 	add.w	r1, r4, r2, lsl #1
9000460e:	0052      	lsls	r2, r2, #1
90004610:	8c49      	ldrh	r1, [r1, #34]	; 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
90004612:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            buffer[pos] = newChar;
90004616:	4422      	add	r2, r4
90004618:	f640 103f 	movw	r0, #2367	; 0x93f
            buffer[index < size ? index : 0] = newChar;
9000461c:	8459      	strh	r1, [r3, #34]	; 0x22
            buffer[pos] = newChar;
9000461e:	8450      	strh	r0, [r2, #34]	; 0x22
        }
90004620:	e7dd      	b.n	900045de <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[index < size ? index : index - size];
90004622:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90004626:	f640 113f 	movw	r1, #2367	; 0x93f
9000462a:	89db      	ldrh	r3, [r3, #14]
9000462c:	428b      	cmp	r3, r1
9000462e:	d1d6      	bne.n	900045de <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90004630:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90004634:	2300      	movs	r3, #0
90004636:	0052      	lsls	r2, r2, #1
90004638:	8c49      	ldrh	r1, [r1, #34]	; 0x22
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
9000463a:	e7ea      	b.n	90004612 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x4a>
            assert(used > 0);
9000463c:	4b05      	ldr	r3, [pc, #20]	; (90004654 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x8c>)
9000463e:	21c5      	movs	r1, #197	; 0xc5
90004640:	4a05      	ldr	r2, [pc, #20]	; (90004658 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
90004642:	4806      	ldr	r0, [pc, #24]	; (9000465c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90004644:	f021 fe3c 	bl	900262c0 <__assert_func>
            assert(offset < used);
90004648:	4b05      	ldr	r3, [pc, #20]	; (90004660 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
9000464a:	21cb      	movs	r1, #203	; 0xcb
9000464c:	4a05      	ldr	r2, [pc, #20]	; (90004664 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x9c>)
9000464e:	4803      	ldr	r0, [pc, #12]	; (9000465c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90004650:	f021 fe36 	bl	900262c0 <__assert_func>
90004654:	900296f4 	.word	0x900296f4
90004658:	90029700 	.word	0x90029700
9000465c:	900297ac 	.word	0x900297ac
90004660:	900297f8 	.word	0x900297f8
90004664:	90029808 	.word	0x90029808

90004668 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
90004668:	f012 be57 	b.w	9001731a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

9000466c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
9000466c:	b510      	push	{r4, lr}
9000466e:	b086      	sub	sp, #24
90004670:	f10d 0c08 	add.w	ip, sp, #8
    va_list pArg;
    va_start(pArg, format);
90004674:	ac0a      	add	r4, sp, #40	; 0x28
{
90004676:	e88c 0006 	stmia.w	ip, {r1, r2}
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
9000467a:	461a      	mov	r2, r3
9000467c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9000467e:	4661      	mov	r1, ip
90004680:	9401      	str	r4, [sp, #4]
90004682:	9300      	str	r3, [sp, #0]
90004684:	9b08      	ldr	r3, [sp, #32]
    va_start(pArg, format);
90004686:	9405      	str	r4, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
90004688:	f010 f81e 	bl	900146c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
9000468c:	b006      	add	sp, #24
9000468e:	bd10      	pop	{r4, pc}

90004690 <_ZN8touchgfx5Texts11setLanguageEt>:
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
90004690:	b9e0      	cbnz	r0, 900046cc <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
{
90004692:	b538      	push	{r3, r4, r5, lr}
    {
        if (languagesArray[id] != 0)
90004694:	4b13      	ldr	r3, [pc, #76]	; (900046e4 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
90004696:	681b      	ldr	r3, [r3, #0]
90004698:	b1cb      	cbz	r3, 900046ce <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
9000469a:	4c13      	ldr	r4, [pc, #76]	; (900046e8 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
9000469c:	4813      	ldr	r0, [pc, #76]	; (900046ec <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
9000469e:	e9d3 1200 	ldrd	r1, r2, [r3]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900046a2:	4419      	add	r1, r3
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900046a4:	441a      	add	r2, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900046a6:	6021      	str	r1, [r4, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
900046a8:	6899      	ldr	r1, [r3, #8]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900046aa:	6002      	str	r2, [r0, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
900046ac:	185c      	adds	r4, r3, r1
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
900046ae:	4b10      	ldr	r3, [pc, #64]	; (900046f0 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
900046b0:	2200      	movs	r2, #0
900046b2:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
900046b4:	f000 f83a 	bl	9000472c <_ZN17TypedTextDatabase8getFontsEv>
900046b8:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
900046ba:	f000 f835 	bl	90004728 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
900046be:	4b0d      	ldr	r3, [pc, #52]	; (900046f4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
        fonts = f;
900046c0:	4a0d      	ldr	r2, [pc, #52]	; (900046f8 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
        typedTexts = data;
900046c2:	601c      	str	r4, [r3, #0]
        numberOfTypedTexts = n;
900046c4:	4b0d      	ldr	r3, [pc, #52]	; (900046fc <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
        fonts = f;
900046c6:	6015      	str	r5, [r2, #0]
        numberOfTypedTexts = n;
900046c8:	8018      	strh	r0, [r3, #0]
    }
}
900046ca:	bd38      	pop	{r3, r4, r5, pc}
900046cc:	4770      	bx	lr
            currentLanguageTypedText = typedTextDatabaseArray[id];
900046ce:	4c0c      	ldr	r4, [pc, #48]	; (90004700 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
            currentLanguagePtr = texts_all_languages;
900046d0:	4905      	ldr	r1, [pc, #20]	; (900046e8 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
900046d2:	6824      	ldr	r4, [r4, #0]
            currentLanguagePtr = texts_all_languages;
900046d4:	480b      	ldr	r0, [pc, #44]	; (90004704 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
            currentLanguageIndices = staticLanguageIndices[id];
900046d6:	4b05      	ldr	r3, [pc, #20]	; (900046ec <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
900046d8:	4a0b      	ldr	r2, [pc, #44]	; (90004708 <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
            currentLanguagePtr = texts_all_languages;
900046da:	6008      	str	r0, [r1, #0]
            currentLanguageIndices = staticLanguageIndices[id];
900046dc:	601a      	str	r2, [r3, #0]
    if (currentLanguageTypedText)
900046de:	2c00      	cmp	r4, #0
900046e0:	d1e5      	bne.n	900046ae <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
900046e2:	bd38      	pop	{r3, r4, r5, pc}
900046e4:	24009580 	.word	0x24009580
900046e8:	24009584 	.word	0x24009584
900046ec:	24009588 	.word	0x24009588
900046f0:	2400958c 	.word	0x2400958c
900046f4:	24023604 	.word	0x24023604
900046f8:	2402360c 	.word	0x2402360c
900046fc:	24023608 	.word	0x24023608
90004700:	90215878 	.word	0x90215878
90004704:	90215828 	.word	0x90215828
90004708:	90215818 	.word	0x90215818

9000470c <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
9000470c:	4a04      	ldr	r2, [pc, #16]	; (90004720 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
9000470e:	4b05      	ldr	r3, [pc, #20]	; (90004724 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
90004710:	6812      	ldr	r2, [r2, #0]
90004712:	681b      	ldr	r3, [r3, #0]
90004714:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
}
90004718:	eb03 0040 	add.w	r0, r3, r0, lsl #1
9000471c:	4770      	bx	lr
9000471e:	bf00      	nop
90004720:	24009588 	.word	0x24009588
90004724:	24009584 	.word	0x24009584

90004728 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
90004728:	2004      	movs	r0, #4
9000472a:	4770      	bx	lr

9000472c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
9000472c:	4800      	ldr	r0, [pc, #0]	; (90004730 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
9000472e:	4770      	bx	lr
90004730:	24009590 	.word	0x24009590

90004734 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
90004734:	b510      	push	{r4, lr}
};
90004736:	4c05      	ldr	r4, [pc, #20]	; (9000474c <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
    &(getFont_verdana_20_4bpp()),
90004738:	f7ff fea2 	bl	90004480 <_Z23getFont_verdana_20_4bppv>
};
9000473c:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
9000473e:	f7ff fee1 	bl	90004504 <_Z23getFont_verdana_40_4bppv>
};
90004742:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
90004744:	f7ff fe5a 	bl	900043fc <_Z23getFont_verdana_10_4bppv>
};
90004748:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
9000474a:	bd10      	pop	{r4, pc}
9000474c:	24009590 	.word	0x24009590

90004750 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
90004750:	4770      	bx	lr
90004752:	bf00      	nop

90004754 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
90004754:	4770      	bx	lr
90004756:	bf00      	nop

90004758 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
90004758:	4770      	bx	lr
9000475a:	bf00      	nop

9000475c <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
9000475c:	b530      	push	{r4, r5, lr}
9000475e:	b085      	sub	sp, #20
90004760:	460a      	mov	r2, r1
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
90004762:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
90004764:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
90004766:	466d      	mov	r5, sp
90004768:	4601      	mov	r1, r0
9000476a:	8102      	strh	r2, [r0, #8]
9000476c:	343c      	adds	r4, #60	; 0x3c
9000476e:	4628      	mov	r0, r5
90004770:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90004774:	4798      	blx	r3
90004776:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
9000477a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
9000477e:	b005      	add	sp, #20
90004780:	bd30      	pop	{r4, r5, pc}
90004782:	bf00      	nop

90004784 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
90004784:	b530      	push	{r4, r5, lr}
90004786:	b085      	sub	sp, #20
90004788:	460a      	mov	r2, r1
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
9000478a:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
9000478c:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
9000478e:	466d      	mov	r5, sp
90004790:	4601      	mov	r1, r0
        rect.height = height;
90004792:	8142      	strh	r2, [r0, #10]
90004794:	343c      	adds	r4, #60	; 0x3c
90004796:	4628      	mov	r0, r5
90004798:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
9000479c:	4798      	blx	r3
9000479e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900047a2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
900047a6:	b005      	add	sp, #20
900047a8:	bd30      	pop	{r4, r5, pc}
900047aa:	bf00      	nop

900047ac <_ZNK8touchgfx8TextArea12getSolidRectEv>:
900047ac:	2200      	movs	r2, #0
900047ae:	6002      	str	r2, [r0, #0]
900047b0:	6042      	str	r2, [r0, #4]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
900047b2:	4770      	bx	lr

900047b4 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
900047b4:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
900047b8:	4770      	bx	lr
900047ba:	bf00      	nop

900047bc <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
900047bc:	2000      	movs	r0, #0
900047be:	4770      	bx	lr

900047c0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
        if (visible)
900047c0:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
900047c4:	b112      	cbz	r2, 900047cc <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xc>
            invalidate();
900047c6:	6803      	ldr	r3, [r0, #0]
900047c8:	695b      	ldr	r3, [r3, #20]
900047ca:	4718      	bx	r3
    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
    {
        Widget::invalidateContent();
    }
900047cc:	4770      	bx	lr
900047ce:	bf00      	nop

900047d0 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900047d0:	2200      	movs	r2, #0
900047d2:	f04f 31ff 	mov.w	r1, #4294967295
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
900047d6:	6082      	str	r2, [r0, #8]
900047d8:	e9c0 2100 	strd	r2, r1, [r0]

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
    {
        return TextArea::BoundingArea();
    }
900047dc:	4770      	bx	lr
900047de:	bf00      	nop

900047e0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
900047e0:	6c80      	ldr	r0, [r0, #72]	; 0x48
900047e2:	4770      	bx	lr

900047e4 <_ZN24screen_asteroidsViewBase21resume_asteroids_taskEv>:
     * Virtual Action Handlers
     */
    virtual void resume_asteroids_task()
    {
        // Override and implement this function in screen_asteroids
    }
900047e4:	4770      	bx	lr
900047e6:	bf00      	nop

900047e8 <_ZN24screen_asteroidsViewBase22suspend_asteroids_taskEv>:
    virtual void suspend_asteroids_task()
    {
        // Override and implement this function in screen_asteroids
    }
900047e8:	4770      	bx	lr
900047ea:	bf00      	nop

900047ec <_ZN24screen_asteroidsViewBase20start_asteroids_gameEv>:
    virtual void start_asteroids_game()
    {
        // Override and implement this function in screen_asteroids
    }
900047ec:	4770      	bx	lr
900047ee:	bf00      	nop

900047f0 <_ZN24screen_asteroidsViewBase11setupScreenEv>:
}

void screen_asteroidsViewBase::setupScreen()
{

}
900047f0:	4770      	bx	lr
900047f2:	bf00      	nop

900047f4 <_ZN8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900047f4:	4770      	bx	lr
900047f6:	bf00      	nop

900047f8 <_ZN8touchgfx5ShapeILt3EED1Ev>:
 * scaled, rotated and moved freely. Example uses could be the hands of a clock.
 *
 * @see AbstractShape
 */
template <uint16_t POINTS>
class Shape : public AbstractShape
900047f8:	4770      	bx	lr
900047fa:	bf00      	nop

900047fc <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
900047fc:	4770      	bx	lr
900047fe:	bf00      	nop

90004800 <_ZN8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
90004800:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90004802:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
90004804:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
90004806:	6844      	ldr	r4, [r0, #4]
90004808:	f012 0f01 	tst.w	r2, #1
9000480c:	eb04 0062 	add.w	r0, r4, r2, asr #1
90004810:	d103      	bne.n	9000481a <_ZN8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1a>
90004812:	689b      	ldr	r3, [r3, #8]
    }
90004814:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90004818:	4718      	bx	r3
9000481a:	ea4f 0c62 	mov.w	ip, r2, asr #1
9000481e:	689b      	ldr	r3, [r3, #8]
90004820:	f854 200c 	ldr.w	r2, [r4, ip]
    }
90004824:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90004828:	58d3      	ldr	r3, [r2, r3]
9000482a:	4718      	bx	r3

9000482c <_ZNK8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
9000482c:	6843      	ldr	r3, [r0, #4]
9000482e:	b13b      	cbz	r3, 90004840 <_ZNK8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
90004830:	6883      	ldr	r3, [r0, #8]
90004832:	b10b      	cbz	r3, 90004838 <_ZNK8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90004834:	2001      	movs	r0, #1
    }
90004836:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90004838:	68c0      	ldr	r0, [r0, #12]
9000483a:	f000 0001 	and.w	r0, r0, #1
9000483e:	4770      	bx	lr
90004840:	4618      	mov	r0, r3
90004842:	4770      	bx	lr

90004844 <_ZNK8touchgfx5ShapeILt3EE12getNumPointsEv>:
{
public:
    virtual int getNumPoints() const
    {
        return POINTS;
    }
90004844:	2003      	movs	r0, #3
90004846:	4770      	bx	lr

90004848 <_ZN8touchgfx5ShapeILt3EE9setCornerEiNS_7CWRUtil2Q5ES3_>:

    virtual void setCorner(int i, CWRUtil::Q5 x, CWRUtil::Q5 y)
    {
        if (i >= 0 && i < POINTS)
90004848:	2902      	cmp	r1, #2
9000484a:	d803      	bhi.n	90004854 <_ZN8touchgfx5ShapeILt3EE9setCornerEiNS_7CWRUtil2Q5ES3_+0xc>
9000484c:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        {
            xCorner[i] = x, yCorner[i] = y;
90004850:	64ca      	str	r2, [r1, #76]	; 0x4c
90004852:	658b      	str	r3, [r1, #88]	; 0x58
        }
    }
90004854:	4770      	bx	lr
90004856:	bf00      	nop

90004858 <_ZNK8touchgfx5ShapeILt3EE10getCornerXEi>:

    virtual CWRUtil::Q5 getCornerX(int i) const
    {
        if (i >= 0 && i < POINTS)
90004858:	2902      	cmp	r1, #2
9000485a:	d803      	bhi.n	90004864 <_ZNK8touchgfx5ShapeILt3EE10getCornerXEi+0xc>
        {
            return xCorner[i];
9000485c:	eb00 0181 	add.w	r1, r0, r1, lsl #2
90004860:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
90004862:	4770      	bx	lr
         * Constructor from integer. No conversion is done - the integer is assumed to already
         * be in Q5 format.
         *
         * @param  i Integer pre-formattet in Q5 format.
         */
        explicit Q5(int i)
90004864:	2000      	movs	r0, #0
        }
        return CWRUtil::toQ5<int>(0);
    }
90004866:	4770      	bx	lr

90004868 <_ZNK8touchgfx5ShapeILt3EE10getCornerYEi>:

    virtual CWRUtil::Q5 getCornerY(int i) const
    {
        if (i >= 0 && i < POINTS)
90004868:	2902      	cmp	r1, #2
9000486a:	d803      	bhi.n	90004874 <_ZNK8touchgfx5ShapeILt3EE10getCornerYEi+0xc>
        {
            return yCorner[i];
9000486c:	3116      	adds	r1, #22
9000486e:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
90004872:	4770      	bx	lr
90004874:	2000      	movs	r0, #0
        }
        return CWRUtil::toQ5<int>(0);
    }
90004876:	4770      	bx	lr

90004878 <_ZN8touchgfx5ShapeILt3EE8setCacheEiNS_7CWRUtil2Q5ES3_>:

protected:
    virtual void setCache(int i, CWRUtil::Q5 x, CWRUtil::Q5 y)
    {
        if (i >= 0 && i < POINTS)
90004878:	2902      	cmp	r1, #2
9000487a:	d803      	bhi.n	90004884 <_ZN8touchgfx5ShapeILt3EE8setCacheEiNS_7CWRUtil2Q5ES3_+0xc>
9000487c:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        {
            xCache[i] = x, yCache[i] = y;
90004880:	664a      	str	r2, [r1, #100]	; 0x64
90004882:	670b      	str	r3, [r1, #112]	; 0x70
        }
    }
90004884:	4770      	bx	lr
90004886:	bf00      	nop

90004888 <_ZNK8touchgfx5ShapeILt3EE9getCacheXEi>:

    virtual CWRUtil::Q5 getCacheX(int i) const
    {
        if (i >= 0 && i < POINTS)
90004888:	2902      	cmp	r1, #2
9000488a:	d803      	bhi.n	90004894 <_ZNK8touchgfx5ShapeILt3EE9getCacheXEi+0xc>
        {
            return xCache[i];
9000488c:	eb00 0181 	add.w	r1, r0, r1, lsl #2
90004890:	6e48      	ldr	r0, [r1, #100]	; 0x64
90004892:	4770      	bx	lr
90004894:	2000      	movs	r0, #0
        }
        return CWRUtil::toQ5<int>(0);
    }
90004896:	4770      	bx	lr

90004898 <_ZNK8touchgfx5ShapeILt3EE9getCacheYEi>:

    virtual CWRUtil::Q5 getCacheY(int i) const
    {
        if (i >= 0 && i < POINTS)
90004898:	2902      	cmp	r1, #2
9000489a:	d803      	bhi.n	900048a4 <_ZNK8touchgfx5ShapeILt3EE9getCacheYEi+0xc>
        {
            return yCache[i];
9000489c:	311c      	adds	r1, #28
9000489e:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
900048a2:	4770      	bx	lr
900048a4:	2000      	movs	r0, #0
        }
        return CWRUtil::toQ5<int>(0);
    }
900048a6:	4770      	bx	lr

900048a8 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
900048a8:	b510      	push	{r4, lr}
900048aa:	4604      	mov	r4, r0
900048ac:	214c      	movs	r1, #76	; 0x4c
900048ae:	f021 fcd8 	bl	90026262 <_ZdlPvj>
900048b2:	4620      	mov	r0, r4
900048b4:	bd10      	pop	{r4, pc}
900048b6:	bf00      	nop

900048b8 <_ZN8touchgfx5ShapeILt3EED0Ev>:
class Shape : public AbstractShape
900048b8:	b510      	push	{r4, lr}
900048ba:	4604      	mov	r4, r0
900048bc:	217c      	movs	r1, #124	; 0x7c
900048be:	f021 fcd0 	bl	90026262 <_ZdlPvj>
900048c2:	4620      	mov	r0, r4
900048c4:	bd10      	pop	{r4, pc}
900048c6:	bf00      	nop

900048c8 <_ZN8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900048c8:	b510      	push	{r4, lr}
900048ca:	4604      	mov	r4, r0
900048cc:	2110      	movs	r1, #16
900048ce:	f021 fcc8 	bl	90026262 <_ZdlPvj>
900048d2:	4620      	mov	r0, r4
900048d4:	bd10      	pop	{r4, pc}
900048d6:	bf00      	nop

900048d8 <_ZN24screen_asteroidsViewBaseD1Ev>:
screen_asteroidsViewBase::~screen_asteroidsViewBase()
900048d8:	4b03      	ldr	r3, [pc, #12]	; (900048e8 <_ZN24screen_asteroidsViewBaseD1Ev+0x10>)
900048da:	b510      	push	{r4, lr}
900048dc:	4604      	mov	r4, r0
900048de:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
900048e0:	f00e fe5c 	bl	9001359c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
900048e4:	4620      	mov	r0, r4
900048e6:	bd10      	pop	{r4, pc}
900048e8:	90029c64 	.word	0x90029c64

900048ec <_ZN24screen_asteroidsViewBaseD0Ev>:
screen_asteroidsViewBase::~screen_asteroidsViewBase()
900048ec:	4b07      	ldr	r3, [pc, #28]	; (9000490c <_ZN24screen_asteroidsViewBaseD0Ev+0x20>)
900048ee:	b500      	push	{lr}
900048f0:	b083      	sub	sp, #12
900048f2:	6003      	str	r3, [r0, #0]
900048f4:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
900048f6:	f00e fe51 	bl	9001359c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
900048fa:	9801      	ldr	r0, [sp, #4]
900048fc:	f242 1154 	movw	r1, #8532	; 0x2154
90004900:	f021 fcaf 	bl	90026262 <_ZdlPvj>
90004904:	9801      	ldr	r0, [sp, #4]
90004906:	b003      	add	sp, #12
90004908:	f85d fb04 	ldr.w	pc, [sp], #4
9000490c:	90029c64 	.word	0x90029c64

90004910 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004910:	4b1b      	ldr	r3, [pc, #108]	; (90004980 <_ZN8touchgfx8TextArea12setBaselineYEs+0x70>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004912:	6802      	ldr	r2, [r0, #0]
90004914:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
90004916:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004918:	6b55      	ldr	r5, [r2, #52]	; 0x34
9000491a:	b323      	cbz	r3, 90004966 <_ZN8touchgfx8TextArea12setBaselineYEs+0x56>
9000491c:	b28e      	uxth	r6, r1
        return typedTextId < numberOfTypedTexts;
9000491e:	4919      	ldr	r1, [pc, #100]	; (90004984 <_ZN8touchgfx8TextArea12setBaselineYEs+0x74>)
90004920:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90004922:	4604      	mov	r4, r0
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004924:	8809      	ldrh	r1, [r1, #0]
90004926:	4291      	cmp	r1, r2
90004928:	d923      	bls.n	90004972 <_ZN8touchgfx8TextArea12setBaselineYEs+0x62>
        return fonts[typedTexts[typedTextId].fontIdx];
9000492a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
9000492e:	4b16      	ldr	r3, [pc, #88]	; (90004988 <_ZN8touchgfx8TextArea12setBaselineYEs+0x78>)
90004930:	681b      	ldr	r3, [r3, #0]
90004932:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90004936:	4a15      	ldr	r2, [pc, #84]	; (9000498c <_ZN8touchgfx8TextArea12setBaselineYEs+0x7c>)
90004938:	6803      	ldr	r3, [r0, #0]
9000493a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000493c:	4293      	cmp	r3, r2
9000493e:	d107      	bne.n	90004950 <_ZN8touchgfx8TextArea12setBaselineYEs+0x40>
        return baselineHeight;
90004940:	88c0      	ldrh	r0, [r0, #6]
90004942:	4b13      	ldr	r3, [pc, #76]	; (90004990 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
90004944:	1a31      	subs	r1, r6, r0
90004946:	429d      	cmp	r5, r3
90004948:	b209      	sxth	r1, r1
9000494a:	d107      	bne.n	9000495c <_ZN8touchgfx8TextArea12setBaselineYEs+0x4c>
        rect.y = y;
9000494c:	80e1      	strh	r1, [r4, #6]
    }
9000494e:	bd70      	pop	{r4, r5, r6, pc}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004950:	4798      	blx	r3
90004952:	4b0f      	ldr	r3, [pc, #60]	; (90004990 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
90004954:	1a31      	subs	r1, r6, r0
90004956:	429d      	cmp	r5, r3
90004958:	b209      	sxth	r1, r1
9000495a:	d0f7      	beq.n	9000494c <_ZN8touchgfx8TextArea12setBaselineYEs+0x3c>
9000495c:	4620      	mov	r0, r4
9000495e:	462b      	mov	r3, r5
    }
90004960:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004964:	4718      	bx	r3
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004966:	4b0b      	ldr	r3, [pc, #44]	; (90004994 <_ZN8touchgfx8TextArea12setBaselineYEs+0x84>)
90004968:	216c      	movs	r1, #108	; 0x6c
9000496a:	4a0b      	ldr	r2, [pc, #44]	; (90004998 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
9000496c:	480b      	ldr	r0, [pc, #44]	; (9000499c <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
9000496e:	f021 fca7 	bl	900262c0 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004972:	4b0b      	ldr	r3, [pc, #44]	; (900049a0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x90>)
90004974:	216d      	movs	r1, #109	; 0x6d
90004976:	4a08      	ldr	r2, [pc, #32]	; (90004998 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
90004978:	4808      	ldr	r0, [pc, #32]	; (9000499c <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
9000497a:	f021 fca1 	bl	900262c0 <__assert_func>
9000497e:	bf00      	nop
90004980:	24023604 	.word	0x24023604
90004984:	24023608 	.word	0x24023608
90004988:	2402360c 	.word	0x2402360c
9000498c:	90003849 	.word	0x90003849
90004990:	900023f9 	.word	0x900023f9
90004994:	900298dc 	.word	0x900298dc
90004998:	90029920 	.word	0x90029920
9000499c:	9002995c 	.word	0x9002995c
900049a0:	900299a4 	.word	0x900299a4

900049a4 <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void screen_asteroidsViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btn_back)
900049a4:	f500 638d 	add.w	r3, r0, #1128	; 0x468
900049a8:	4299      	cmp	r1, r3
{
900049aa:	b570      	push	{r4, r5, r6, lr}
900049ac:	4604      	mov	r4, r0
900049ae:	460d      	mov	r5, r1
    if (&src == &btn_back)
900049b0:	d00d      	beq.n	900049ce <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2a>
        //interaction_transition_to_home
        //When suspend_asteroid_task completed change screen to screen_game_select
        //Go to screen_game_select with screen transition towards West
        application().gotoscreen_game_selectScreenSlideTransitionWest();
    }
    if (&src == &btn_retry)
900049b2:	f204 432c 	addw	r3, r4, #1068	; 0x42c
900049b6:	429d      	cmp	r5, r3
900049b8:	d000      	beq.n	900049bc <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>
        //interaction_restart
        //When btn_retry clicked call virtual function
        //Call start_asteroids_game
        start_asteroids_game();
    }
}
900049ba:	bd70      	pop	{r4, r5, r6, pc}
        start_asteroids_game();
900049bc:	6823      	ldr	r3, [r4, #0]
900049be:	4a0a      	ldr	r2, [pc, #40]	; (900049e8 <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x44>)
900049c0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900049c2:	4293      	cmp	r3, r2
900049c4:	d0f9      	beq.n	900049ba <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
900049c6:	4620      	mov	r0, r4
}
900049c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        start_asteroids_game();
900049cc:	4718      	bx	r3
        suspend_asteroids_task();
900049ce:	6803      	ldr	r3, [r0, #0]
900049d0:	4a06      	ldr	r2, [pc, #24]	; (900049ec <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x48>)
900049d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900049d4:	4293      	cmp	r3, r2
900049d6:	d104      	bne.n	900049e2 <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3e>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
900049d8:	f010 faf6 	bl	90014fc8 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoscreen_game_selectScreenSlideTransitionWest();
900049dc:	f7ff fc96 	bl	9000430c <_ZN23FrontendApplicationBase47gotoscreen_game_selectScreenSlideTransitionWestEv>
900049e0:	e7e7      	b.n	900049b2 <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
        suspend_asteroids_task();
900049e2:	4798      	blx	r3
900049e4:	e7f8      	b.n	900049d8 <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x34>
900049e6:	bf00      	nop
900049e8:	900047ed 	.word	0x900047ed
900049ec:	900047e9 	.word	0x900047e9

900049f0 <_ZN24screen_asteroidsViewBase15afterTransitionEv>:
void screen_asteroidsViewBase::afterTransition()
{
    //interaction_resume_asteroids_task
    //When screen transition ends call virtual function
    //Call resume_asteroids_task
    resume_asteroids_task();
900049f0:	6803      	ldr	r3, [r0, #0]
900049f2:	490a      	ldr	r1, [pc, #40]	; (90004a1c <_ZN24screen_asteroidsViewBase15afterTransitionEv+0x2c>)
900049f4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
900049f6:	428a      	cmp	r2, r1
{
900049f8:	b510      	push	{r4, lr}
900049fa:	4604      	mov	r4, r0
900049fc:	d104      	bne.n	90004a08 <_ZN24screen_asteroidsViewBase15afterTransitionEv+0x18>

    //interaction_start_asteroids_game
    //When screen transition ends call virtual function
    //Call start_asteroids_game
    start_asteroids_game();
900049fe:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90004a00:	4a07      	ldr	r2, [pc, #28]	; (90004a20 <_ZN24screen_asteroidsViewBase15afterTransitionEv+0x30>)
90004a02:	4293      	cmp	r3, r2
90004a04:	d106      	bne.n	90004a14 <_ZN24screen_asteroidsViewBase15afterTransitionEv+0x24>
}
90004a06:	bd10      	pop	{r4, pc}
    resume_asteroids_task();
90004a08:	4790      	blx	r2
    start_asteroids_game();
90004a0a:	6823      	ldr	r3, [r4, #0]
90004a0c:	4a04      	ldr	r2, [pc, #16]	; (90004a20 <_ZN24screen_asteroidsViewBase15afterTransitionEv+0x30>)
90004a0e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90004a10:	4293      	cmp	r3, r2
90004a12:	d0f8      	beq.n	90004a06 <_ZN24screen_asteroidsViewBase15afterTransitionEv+0x16>
90004a14:	4620      	mov	r0, r4
}
90004a16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    start_asteroids_game();
90004a1a:	4718      	bx	r3
90004a1c:	900047e5 	.word	0x900047e5
90004a20:	900047ed 	.word	0x900047ed

90004a24 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
        setX(x);
90004a24:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90004a26:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90004a2a:	4f25      	ldr	r7, [pc, #148]	; (90004ac0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x9c>)
90004a2c:	4605      	mov	r5, r0
        setX(x);
90004a2e:	6b1e      	ldr	r6, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90004a30:	4690      	mov	r8, r2
90004a32:	42be      	cmp	r6, r7
90004a34:	d125      	bne.n	90004a82 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x5e>
        setBaselineY(baselineY);
90004a36:	6e5c      	ldr	r4, [r3, #100]	; 0x64
        rect.x = x;
90004a38:	80a9      	strh	r1, [r5, #4]
90004a3a:	4922      	ldr	r1, [pc, #136]	; (90004ac4 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
90004a3c:	428c      	cmp	r4, r1
90004a3e:	d126      	bne.n	90004a8e <_ZN8touchgfx8TextArea13setXBaselineYEss+0x6a>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004a40:	4921      	ldr	r1, [pc, #132]	; (90004ac8 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa4>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004a42:	fa1f f888 	uxth.w	r8, r8
90004a46:	6b5e      	ldr	r6, [r3, #52]	; 0x34
90004a48:	680b      	ldr	r3, [r1, #0]
90004a4a:	2b00      	cmp	r3, #0
90004a4c:	d032      	beq.n	90004ab4 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x90>
        return typedTextId < numberOfTypedTexts;
90004a4e:	491f      	ldr	r1, [pc, #124]	; (90004acc <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa8>)
90004a50:	8daa      	ldrh	r2, [r5, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004a52:	8809      	ldrh	r1, [r1, #0]
90004a54:	4291      	cmp	r1, r2
90004a56:	d927      	bls.n	90004aa8 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x84>
        return fonts[typedTexts[typedTextId].fontIdx];
90004a58:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90004a5c:	4b1c      	ldr	r3, [pc, #112]	; (90004ad0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xac>)
90004a5e:	681b      	ldr	r3, [r3, #0]
90004a60:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90004a64:	4a1b      	ldr	r2, [pc, #108]	; (90004ad4 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb0>)
90004a66:	6803      	ldr	r3, [r0, #0]
90004a68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90004a6a:	4293      	cmp	r3, r2
90004a6c:	d11a      	bne.n	90004aa4 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x80>
90004a6e:	88c0      	ldrh	r0, [r0, #6]
90004a70:	4b19      	ldr	r3, [pc, #100]	; (90004ad8 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
90004a72:	eba8 0200 	sub.w	r2, r8, r0
90004a76:	429e      	cmp	r6, r3
90004a78:	b211      	sxth	r1, r2
90004a7a:	d10e      	bne.n	90004a9a <_ZN8touchgfx8TextArea13setXBaselineYEss+0x76>
        rect.y = y;
90004a7c:	80e9      	strh	r1, [r5, #6]
    }
90004a7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        setX(x);
90004a82:	47b0      	blx	r6
        setBaselineY(baselineY);
90004a84:	682b      	ldr	r3, [r5, #0]
90004a86:	490f      	ldr	r1, [pc, #60]	; (90004ac4 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
90004a88:	6e5c      	ldr	r4, [r3, #100]	; 0x64
90004a8a:	428c      	cmp	r4, r1
90004a8c:	d0d8      	beq.n	90004a40 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x1c>
90004a8e:	4641      	mov	r1, r8
90004a90:	4628      	mov	r0, r5
90004a92:	4623      	mov	r3, r4
    }
90004a94:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setBaselineY(baselineY);
90004a98:	4718      	bx	r3
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004a9a:	4628      	mov	r0, r5
90004a9c:	4633      	mov	r3, r6
    }
90004a9e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004aa2:	4718      	bx	r3
90004aa4:	4798      	blx	r3
90004aa6:	e7e3      	b.n	90004a70 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x4c>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004aa8:	4b0c      	ldr	r3, [pc, #48]	; (90004adc <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
90004aaa:	216d      	movs	r1, #109	; 0x6d
90004aac:	4a0c      	ldr	r2, [pc, #48]	; (90004ae0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
90004aae:	480d      	ldr	r0, [pc, #52]	; (90004ae4 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc0>)
90004ab0:	f021 fc06 	bl	900262c0 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004ab4:	4b0c      	ldr	r3, [pc, #48]	; (90004ae8 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc4>)
90004ab6:	216c      	movs	r1, #108	; 0x6c
90004ab8:	4a09      	ldr	r2, [pc, #36]	; (90004ae0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
90004aba:	480a      	ldr	r0, [pc, #40]	; (90004ae4 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc0>)
90004abc:	f021 fc00 	bl	900262c0 <__assert_func>
90004ac0:	900023f5 	.word	0x900023f5
90004ac4:	90004911 	.word	0x90004911
90004ac8:	24023604 	.word	0x24023604
90004acc:	24023608 	.word	0x24023608
90004ad0:	2402360c 	.word	0x2402360c
90004ad4:	90003849 	.word	0x90003849
90004ad8:	900023f9 	.word	0x900023f9
90004adc:	900299a4 	.word	0x900299a4
90004ae0:	90029920 	.word	0x90029920
90004ae4:	9002995c 	.word	0x9002995c
90004ae8:	900298dc 	.word	0x900298dc

90004aec <_ZN24screen_asteroidsViewBaseC1Ev>:
screen_asteroidsViewBase::screen_asteroidsViewBase() :
90004aec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004af0:	ed2d 8b02 	vpush	{d8}
90004af4:	b097      	sub	sp, #92	; 0x5c
90004af6:	4604      	mov	r4, r0
        : presenter(0)
90004af8:	f011 fe34 	bl	90016764 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &screen_asteroidsViewBase::buttonCallbackHandler)
90004afc:	4938      	ldr	r1, [pc, #224]	; (90004be0 <_ZN24screen_asteroidsViewBaseC1Ev+0xf4>)
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
90004afe:	23ff      	movs	r3, #255	; 0xff
90004b00:	2500      	movs	r5, #0
          touchable(false),
90004b02:	f44f 7280 	mov.w	r2, #256	; 0x100
90004b06:	6021      	str	r1, [r4, #0]
90004b08:	f104 0b98 	add.w	fp, r4, #152	; 0x98
90004b0c:	4935      	ldr	r1, [pc, #212]	; (90004be4 <_ZN24screen_asteroidsViewBaseC1Ev+0xf8>)
90004b0e:	ae14      	add	r6, sp, #80	; 0x50
90004b10:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
90004b14:	f884 3092 	strb.w	r3, [r4, #146]	; 0x92
90004b18:	f104 09c4 	add.w	r9, r4, #196	; 0xc4
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
90004b1c:	f64f 73ff 	movw	r3, #65535	; 0xffff
90004b20:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
90004b24:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
90004b28:	4658      	mov	r0, fp
90004b2a:	6421      	str	r1, [r4, #64]	; 0x40
90004b2c:	66e1      	str	r1, [r4, #108]	; 0x6c
90004b2e:	4631      	mov	r1, r6
90004b30:	63e5      	str	r5, [r4, #60]	; 0x3c
        : color(col)
90004b32:	66a5      	str	r5, [r4, #104]	; 0x68
90004b34:	f8c4 5094 	str.w	r5, [r4, #148]	; 0x94
90004b38:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90004b3c:	4f2a      	ldr	r7, [pc, #168]	; (90004be8 <_ZN24screen_asteroidsViewBaseC1Ev+0xfc>)
        : x(0), y(0), width(0), height(0)
90004b3e:	e9c4 5511 	strd	r5, r5, [r4, #68]	; 0x44
90004b42:	e9c4 5513 	strd	r5, r5, [r4, #76]	; 0x4c
          nextSibling(0),
90004b46:	e9c4 5515 	strd	r5, r5, [r4, #84]	; 0x54
          cachedAbsX(0),
90004b4a:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
90004b4e:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
90004b52:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
90004b56:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
90004b5a:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
90004b5e:	f00c fe95 	bl	9001188c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90004b62:	4648      	mov	r0, r9
90004b64:	f00c fbdc 	bl	90011320 <_ZN8touchgfx13AbstractShapeC1Ev>
90004b68:	4a20      	ldr	r2, [pc, #128]	; (90004bec <_ZN24screen_asteroidsViewBaseC1Ev+0x100>)
90004b6a:	683b      	ldr	r3, [r7, #0]
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
90004b6c:	f504 71a0 	add.w	r1, r4, #320	; 0x140
90004b70:	f8c4 20c4 	str.w	r2, [r4, #196]	; 0xc4
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
        : AbstractPainter()
90004b74:	4a1e      	ldr	r2, [pc, #120]	; (90004bf0 <_ZN24screen_asteroidsViewBaseC1Ev+0x104>)
        : widgetWidth(0)
90004b76:	f8a4 5144 	strh.w	r5, [r4, #324]	; 0x144
90004b7a:	f8c4 2140 	str.w	r2, [r4, #320]	; 0x140
90004b7e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90004b82:	910b      	str	r1, [sp, #44]	; 0x2c
            : v(0)
90004b84:	e9c4 5544 	strd	r5, r5, [r4, #272]	; 0x110
90004b88:	e9c4 5546 	strd	r5, r5, [r4, #280]	; 0x118
90004b8c:	e9c4 5548 	strd	r5, r5, [r4, #288]	; 0x120
90004b90:	e9c4 554a 	strd	r5, r5, [r4, #296]	; 0x128
90004b94:	e9c4 554c 	strd	r5, r5, [r4, #304]	; 0x130
90004b98:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
90004b9c:	2a00      	cmp	r2, #0
90004b9e:	d031      	beq.n	90004c04 <_ZN24screen_asteroidsViewBaseC1Ev+0x118>
90004ba0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90004ba2:	2800      	cmp	r0, #0
90004ba4:	f000 8400 	beq.w	900053a8 <_ZN24screen_asteroidsViewBaseC1Ev+0x8bc>
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
90004ba8:	6803      	ldr	r3, [r0, #0]
90004baa:	4d12      	ldr	r5, [pc, #72]	; (90004bf4 <_ZN24screen_asteroidsViewBaseC1Ev+0x108>)
90004bac:	6ada      	ldr	r2, [r3, #44]	; 0x2c
90004bae:	42aa      	cmp	r2, r5
90004bb0:	d035      	beq.n	90004c1e <_ZN24screen_asteroidsViewBaseC1Ev+0x132>
90004bb2:	4790      	blx	r2
        return auxiliaryLCD;
90004bb4:	683b      	ldr	r3, [r7, #0]
90004bb6:	fab0 f780 	clz	r7, r0
90004bba:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90004bbc:	097f      	lsrs	r7, r7, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
90004bbe:	b140      	cbz	r0, 90004bd2 <_ZN24screen_asteroidsViewBaseC1Ev+0xe6>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90004bc0:	6803      	ldr	r3, [r0, #0]
90004bc2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90004bc4:	42ab      	cmp	r3, r5
90004bc6:	d02a      	beq.n	90004c1e <_ZN24screen_asteroidsViewBaseC1Ev+0x132>
90004bc8:	4798      	blx	r3
90004bca:	2800      	cmp	r0, #0
90004bcc:	bf08      	it	eq
90004bce:	f047 0701 	orreq.w	r7, r7, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
90004bd2:	bb27      	cbnz	r7, 90004c1e <_ZN24screen_asteroidsViewBaseC1Ev+0x132>
90004bd4:	4b08      	ldr	r3, [pc, #32]	; (90004bf8 <_ZN24screen_asteroidsViewBaseC1Ev+0x10c>)
90004bd6:	212c      	movs	r1, #44	; 0x2c
90004bd8:	4a08      	ldr	r2, [pc, #32]	; (90004bfc <_ZN24screen_asteroidsViewBaseC1Ev+0x110>)
90004bda:	4809      	ldr	r0, [pc, #36]	; (90004c00 <_ZN24screen_asteroidsViewBaseC1Ev+0x114>)
90004bdc:	f021 fb70 	bl	900262c0 <__assert_func>
90004be0:	90029c64 	.word	0x90029c64
90004be4:	9002a67c 	.word	0x9002a67c
90004be8:	240235ac 	.word	0x240235ac
90004bec:	90029bb8 	.word	0x90029bb8
90004bf0:	90028cec 	.word	0x90028cec
90004bf4:	90002499 	.word	0x90002499
90004bf8:	900299e4 	.word	0x900299e4
90004bfc:	90029a44 	.word	0x90029a44
90004c00:	90029a80 	.word	0x90029a80
        return instance->lcdRef;
90004c04:	6898      	ldr	r0, [r3, #8]
90004c06:	4ddf      	ldr	r5, [pc, #892]	; (90004f84 <_ZN24screen_asteroidsViewBaseC1Ev+0x498>)
        bool compat = HAL::lcd().framebufferFormat() == format;
90004c08:	6802      	ldr	r2, [r0, #0]
90004c0a:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90004c0c:	42aa      	cmp	r2, r5
90004c0e:	d1d0      	bne.n	90004bb2 <_ZN24screen_asteroidsViewBaseC1Ev+0xc6>
        return auxiliaryLCD;
90004c10:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
90004c12:	b120      	cbz	r0, 90004c1e <_ZN24screen_asteroidsViewBaseC1Ev+0x132>
        bool compat = HAL::lcd().framebufferFormat() == format;
90004c14:	6803      	ldr	r3, [r0, #0]
90004c16:	2701      	movs	r7, #1
90004c18:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90004c1a:	42ab      	cmp	r3, r5
90004c1c:	d1d4      	bne.n	90004bc8 <_ZN24screen_asteroidsViewBaseC1Ev+0xdc>
90004c1e:	4bda      	ldr	r3, [pc, #872]	; (90004f88 <_ZN24screen_asteroidsViewBaseC1Ev+0x49c>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
90004c20:	2500      	movs	r5, #0
        : typedTextId(id)
90004c22:	4ada      	ldr	r2, [pc, #872]	; (90004f8c <_ZN24screen_asteroidsViewBaseC1Ev+0x4a0>)
          touchable(false),
90004c24:	f44f 7a80 	mov.w	sl, #256	; 0x100
90004c28:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
90004c2c:	3324      	adds	r3, #36	; 0x24
90004c2e:	f64f 78ff 	movw	r8, #65535	; 0xffff
          firstChild(0)
90004c32:	4fd7      	ldr	r7, [pc, #860]	; (90004f90 <_ZN24screen_asteroidsViewBaseC1Ev+0x4a4>)
        : TextAreaWithWildcardBase(), wc1(0)
90004c34:	49d7      	ldr	r1, [pc, #860]	; (90004f94 <_ZN24screen_asteroidsViewBaseC1Ev+0x4a8>)
90004c36:	f504 70e6 	add.w	r0, r4, #460	; 0x1cc
90004c3a:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004c3e:	f04f 33ff 	mov.w	r3, #4294967295
90004c42:	f8c4 217c 	str.w	r2, [r4, #380]	; 0x17c
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90004c46:	22ff      	movs	r2, #255	; 0xff
90004c48:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
90004c4c:	ee08 0a10 	vmov	s16, r0
90004c50:	f8c4 218a 	str.w	r2, [r4, #394]	; 0x18a
        : color(col)
90004c54:	f8c4 5184 	str.w	r5, [r4, #388]	; 0x184
90004c58:	f8a4 5188 	strh.w	r5, [r4, #392]	; 0x188
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004c5c:	f8c4 5190 	str.w	r5, [r4, #400]	; 0x190
90004c60:	f8a4 8180 	strh.w	r8, [r4, #384]	; 0x180
90004c64:	f8c4 3194 	str.w	r3, [r4, #404]	; 0x194
90004c68:	f8c4 71a0 	str.w	r7, [r4, #416]	; 0x1a0
90004c6c:	f8c4 1154 	str.w	r1, [r4, #340]	; 0x154
90004c70:	4631      	mov	r1, r6
90004c72:	f8a4 a178 	strh.w	sl, [r4, #376]	; 0x178
90004c76:	f8a4 a1c4 	strh.w	sl, [r4, #452]	; 0x1c4
        : x(0), y(0), width(0), height(0)
90004c7a:	e9c4 5556 	strd	r5, r5, [r4, #344]	; 0x158
90004c7e:	e9c4 5558 	strd	r5, r5, [r4, #352]	; 0x160
          nextSibling(0),
90004c82:	e9c4 555a 	strd	r5, r5, [r4, #360]	; 0x168
          cachedAbsX(0),
90004c86:	e9c4 555c 	strd	r5, r5, [r4, #368]	; 0x170
90004c8a:	e9c4 5566 	strd	r5, r5, [r4, #408]	; 0x198
90004c8e:	e9c4 5569 	strd	r5, r5, [r4, #420]	; 0x1a4
90004c92:	e9c4 556b 	strd	r5, r5, [r4, #428]	; 0x1ac
          nextSibling(0),
90004c96:	e9c4 556d 	strd	r5, r5, [r4, #436]	; 0x1b4
          cachedAbsX(0),
90004c9a:	e9c4 556f 	strd	r5, r5, [r4, #444]	; 0x1bc
90004c9e:	f8c4 51c8 	str.w	r5, [r4, #456]	; 0x1c8
90004ca2:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
90004ca6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
90004caa:	9302      	str	r3, [sp, #8]
90004cac:	f00c fdee 	bl	9001188c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90004cb0:	f504 7109 	add.w	r1, r4, #548	; 0x224
90004cb4:	9802      	ldr	r0, [sp, #8]
90004cb6:	f8ad 8050 	strh.w	r8, [sp, #80]	; 0x50
90004cba:	9103      	str	r1, [sp, #12]
90004cbc:	4631      	mov	r1, r6
90004cbe:	f00c fde5 	bl	9001188c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90004cc2:	f504 731f 	add.w	r3, r4, #636	; 0x27c
90004cc6:	4631      	mov	r1, r6
90004cc8:	9803      	ldr	r0, [sp, #12]
90004cca:	9304      	str	r3, [sp, #16]
90004ccc:	f8ad 8050 	strh.w	r8, [sp, #80]	; 0x50
90004cd0:	f00c fddc 	bl	9001188c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90004cd4:	f504 712e 	add.w	r1, r4, #696	; 0x2b8
90004cd8:	f8c4 7250 	str.w	r7, [r4, #592]	; 0x250
90004cdc:	f8c4 5278 	str.w	r5, [r4, #632]	; 0x278
90004ce0:	9804      	ldr	r0, [sp, #16]
          touchable(false),
90004ce2:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
90004ce6:	9105      	str	r1, [sp, #20]
90004ce8:	e9c4 5595 	strd	r5, r5, [r4, #596]	; 0x254
90004cec:	e9c4 5597 	strd	r5, r5, [r4, #604]	; 0x25c
          nextSibling(0),
90004cf0:	e9c4 5599 	strd	r5, r5, [r4, #612]	; 0x264
          cachedAbsX(0),
90004cf4:	e9c4 559b 	strd	r5, r5, [r4, #620]	; 0x26c
90004cf8:	f00d fd2e 	bl	90012758 <_ZN8touchgfx14ButtonWithIconC1Ev>
90004cfc:	f504 733d 	add.w	r3, r4, #756	; 0x2f4
90004d00:	9805      	ldr	r0, [sp, #20]
90004d02:	9306      	str	r3, [sp, #24]
90004d04:	f00d fd28 	bl	90012758 <_ZN8touchgfx14ButtonWithIconC1Ev>
90004d08:	f504 714c 	add.w	r1, r4, #816	; 0x330
90004d0c:	9806      	ldr	r0, [sp, #24]
90004d0e:	9107      	str	r1, [sp, #28]
90004d10:	f00d fd22 	bl	90012758 <_ZN8touchgfx14ButtonWithIconC1Ev>
90004d14:	f504 735b 	add.w	r3, r4, #876	; 0x36c
90004d18:	9807      	ldr	r0, [sp, #28]
90004d1a:	9308      	str	r3, [sp, #32]
90004d1c:	f00d fd1c 	bl	90012758 <_ZN8touchgfx14ButtonWithIconC1Ev>
90004d20:	f204 412c 	addw	r1, r4, #1068	; 0x42c
90004d24:	9808      	ldr	r0, [sp, #32]
90004d26:	9109      	str	r1, [sp, #36]	; 0x24
90004d28:	f00d fd16 	bl	90012758 <_ZN8touchgfx14ButtonWithIconC1Ev>
90004d2c:	4b9a      	ldr	r3, [pc, #616]	; (90004f98 <_ZN24screen_asteroidsViewBaseC1Ev+0x4ac>)
90004d2e:	f8c4 73d4 	str.w	r7, [r4, #980]	; 0x3d4
90004d32:	f504 678d 	add.w	r7, r4, #1128	; 0x468
90004d36:	f8c4 33a8 	str.w	r3, [r4, #936]	; 0x3a8
90004d3a:	f884 83ce 	strb.w	r8, [r4, #974]	; 0x3ce
        : color(col)
90004d3e:	f8c4 53d0 	str.w	r5, [r4, #976]	; 0x3d0
90004d42:	f8c4 53fc 	str.w	r5, [r4, #1020]	; 0x3fc
        : x(0), y(0), width(0), height(0)
90004d46:	f8c4 5404 	str.w	r5, [r4, #1028]	; 0x404
90004d4a:	f8c4 5408 	str.w	r5, [r4, #1032]	; 0x408
90004d4e:	f8c4 540c 	str.w	r5, [r4, #1036]	; 0x40c
90004d52:	f8c4 5410 	str.w	r5, [r4, #1040]	; 0x410
          parent(0),
90004d56:	f8c4 5414 	str.w	r5, [r4, #1044]	; 0x414
          nextSibling(0),
90004d5a:	f8c4 5418 	str.w	r5, [r4, #1048]	; 0x418
          nextDrawChainElement(0),
90004d5e:	f8c4 541c 	str.w	r5, [r4, #1052]	; 0x41c
          cachedAbsX(0),
90004d62:	f8c4 5420 	str.w	r5, [r4, #1056]	; 0x420
          touchable(false),
90004d66:	f8a4 a3cc 	strh.w	sl, [r4, #972]	; 0x3cc
90004d6a:	f8a4 a3f8 	strh.w	sl, [r4, #1016]	; 0x3f8
90004d6e:	f8a4 a424 	strh.w	sl, [r4, #1060]	; 0x424
90004d72:	e9c4 55eb 	strd	r5, r5, [r4, #940]	; 0x3ac
90004d76:	e9c4 55ed 	strd	r5, r5, [r4, #948]	; 0x3b4
          nextSibling(0),
90004d7a:	e9c4 55ef 	strd	r5, r5, [r4, #956]	; 0x3bc
          cachedAbsX(0),
90004d7e:	e9c4 55f1 	strd	r5, r5, [r4, #964]	; 0x3c4
90004d82:	e9c4 55f6 	strd	r5, r5, [r4, #984]	; 0x3d8
90004d86:	e9c4 55f8 	strd	r5, r5, [r4, #992]	; 0x3e0
          nextSibling(0),
90004d8a:	e9c4 55fa 	strd	r5, r5, [r4, #1000]	; 0x3e8
          cachedAbsX(0),
90004d8e:	e9c4 55fc 	strd	r5, r5, [r4, #1008]	; 0x3f0
90004d92:	f8c4 3400 	str.w	r3, [r4, #1024]	; 0x400
90004d96:	f04f 33ff 	mov.w	r3, #4294967295
        : color(col)
90004d9a:	f8c4 5428 	str.w	r5, [r4, #1064]	; 0x428
90004d9e:	f884 3426 	strb.w	r3, [r4, #1062]	; 0x426
90004da2:	9809      	ldr	r0, [sp, #36]	; 0x24
90004da4:	970a      	str	r7, [sp, #40]	; 0x28
90004da6:	f00d fcd7 	bl	90012758 <_ZN8touchgfx14ButtonWithIconC1Ev>
90004daa:	980a      	ldr	r0, [sp, #40]	; 0x28
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
90004dac:	1d27      	adds	r7, r4, #4
90004dae:	f00d fcd3 	bl	90012758 <_ZN8touchgfx14ButtonWithIconC1Ev>
90004db2:	22ff      	movs	r2, #255	; 0xff
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004db4:	f04f 33ff 	mov.w	r3, #4294967295
        : x(0), y(0), width(0), height(0)
90004db8:	f8c4 54a8 	str.w	r5, [r4, #1192]	; 0x4a8
90004dbc:	f8c4 24da 	str.w	r2, [r4, #1242]	; 0x4da
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
90004dc0:	f44f 51e1 	mov.w	r1, #7200	; 0x1c20
90004dc4:	4a71      	ldr	r2, [pc, #452]	; (90004f8c <_ZN24screen_asteroidsViewBaseC1Ev+0x4a0>)
90004dc6:	f204 5024 	addw	r0, r4, #1316	; 0x524
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004dca:	f8c4 34e4 	str.w	r3, [r4, #1252]	; 0x4e4
90004dce:	f8c4 24cc 	str.w	r2, [r4, #1228]	; 0x4cc
90004dd2:	4b71      	ldr	r3, [pc, #452]	; (90004f98 <_ZN24screen_asteroidsViewBaseC1Ev+0x4ac>)
90004dd4:	4a71      	ldr	r2, [pc, #452]	; (90004f9c <_ZN24screen_asteroidsViewBaseC1Ev+0x4b0>)
90004dd6:	f8c4 34ec 	str.w	r3, [r4, #1260]	; 0x4ec
        : pobject(pObject), pmemfun(pmemfun_1)
90004dda:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
90004dde:	f8c4 24a4 	str.w	r2, [r4, #1188]	; 0x4a4
90004de2:	4a6f      	ldr	r2, [pc, #444]	; (90004fa0 <_ZN24screen_asteroidsViewBaseC1Ev+0x4b4>)
        : x(0), y(0), width(0), height(0)
90004de4:	f8c4 54ac 	str.w	r5, [r4, #1196]	; 0x4ac
90004de8:	f8c4 54b0 	str.w	r5, [r4, #1200]	; 0x4b0
90004dec:	f8c4 54b4 	str.w	r5, [r4, #1204]	; 0x4b4
          parent(0),
90004df0:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
          nextSibling(0),
90004df4:	f8c4 54bc 	str.w	r5, [r4, #1212]	; 0x4bc
          nextDrawChainElement(0),
90004df8:	f8c4 54c0 	str.w	r5, [r4, #1216]	; 0x4c0
          cachedAbsX(0),
90004dfc:	f8c4 54c4 	str.w	r5, [r4, #1220]	; 0x4c4
90004e00:	f8a4 84d0 	strh.w	r8, [r4, #1232]	; 0x4d0
90004e04:	f884 8512 	strb.w	r8, [r4, #1298]	; 0x512
        : color(col)
90004e08:	f8c4 54d4 	str.w	r5, [r4, #1236]	; 0x4d4
90004e0c:	f8a4 54d8 	strh.w	r5, [r4, #1240]	; 0x4d8
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004e10:	f8c4 54e0 	str.w	r5, [r4, #1248]	; 0x4e0
              text(0)
90004e14:	f8c4 54e8 	str.w	r5, [r4, #1256]	; 0x4e8
        : x(0), y(0), width(0), height(0)
90004e18:	f8c4 54f0 	str.w	r5, [r4, #1264]	; 0x4f0
90004e1c:	f8c4 54f4 	str.w	r5, [r4, #1268]	; 0x4f4
90004e20:	f8c4 54f8 	str.w	r5, [r4, #1272]	; 0x4f8
90004e24:	f8c4 54fc 	str.w	r5, [r4, #1276]	; 0x4fc
          parent(0),
90004e28:	f8c4 5500 	str.w	r5, [r4, #1280]	; 0x500
          nextSibling(0),
90004e2c:	f8c4 5504 	str.w	r5, [r4, #1284]	; 0x504
          nextDrawChainElement(0),
90004e30:	f8c4 5508 	str.w	r5, [r4, #1288]	; 0x508
          cachedAbsX(0),
90004e34:	f8c4 550c 	str.w	r5, [r4, #1292]	; 0x50c
        : color(col)
90004e38:	f8c4 5514 	str.w	r5, [r4, #1300]	; 0x514
          touchable(false),
90004e3c:	f8a4 a4c8 	strh.w	sl, [r4, #1224]	; 0x4c8
90004e40:	f8a4 a510 	strh.w	sl, [r4, #1296]	; 0x510
90004e44:	f8c3 2144 	str.w	r2, [r3, #324]	; 0x144
90004e48:	4a56      	ldr	r2, [pc, #344]	; (90004fa4 <_ZN24screen_asteroidsViewBaseC1Ev+0x4b8>)
90004e4a:	f8c3 4148 	str.w	r4, [r3, #328]	; 0x148
        rect.x = x;
90004e4e:	f8df 816c 	ldr.w	r8, [pc, #364]	; 90004fbc <_ZN24screen_asteroidsViewBaseC1Ev+0x4d0>
90004e52:	e9c3 2553 	strd	r2, r5, [r3, #332]	; 0x14c
90004e56:	f00e fb97 	bl	90013588 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
90004e5a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
90004e5e:	f104 0140 	add.w	r1, r4, #64	; 0x40
90004e62:	4638      	mov	r0, r7
90004e64:	6465      	str	r5, [r4, #68]	; 0x44
90004e66:	f8c4 8048 	str.w	r8, [r4, #72]	; 0x48
90004e6a:	66a3      	str	r3, [r4, #104]	; 0x68
90004e6c:	f00b f808 	bl	9000fe80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004e70:	4b4d      	ldr	r3, [pc, #308]	; (90004fa8 <_ZN24screen_asteroidsViewBaseC1Ev+0x4bc>)
90004e72:	f104 016c 	add.w	r1, r4, #108	; 0x6c
90004e76:	4638      	mov	r0, r7
90004e78:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
90004e7c:	e9c4 581c 	strd	r5, r8, [r4, #112]	; 0x70
90004e80:	f00a fffe 	bl	9000fe80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004e84:	2303      	movs	r3, #3
    icon_rock.setBitmap(touchgfx::Bitmap(BITMAP_ASTEROIDS_ROCK_ID));
90004e86:	4658      	mov	r0, fp
90004e88:	4631      	mov	r1, r6
90004e8a:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
90004e8e:	f00d fc8a 	bl	900127a6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90004e92:	4b46      	ldr	r3, [pc, #280]	; (90004fac <_ZN24screen_asteroidsViewBaseC1Ev+0x4c0>)
    icon_rock.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90004e94:	4629      	mov	r1, r5
90004e96:	f8df c128 	ldr.w	ip, [pc, #296]	; 90004fc0 <_ZN24screen_asteroidsViewBaseC1Ev+0x4d4>
90004e9a:	4658      	mov	r0, fp
    buttonCallback(this, &screen_asteroidsViewBase::buttonCallbackHandler)
90004e9c:	f504 7875 	add.w	r8, r4, #980	; 0x3d4
90004ea0:	e9c4 c327 	strd	ip, r3, [r4, #156]	; 0x9c
    icon_rock.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90004ea4:	f00c fcad 	bl	90011802 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90004ea8:	4659      	mov	r1, fp
        visible = vis;
90004eaa:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
90004eae:	4638      	mov	r0, r7
90004eb0:	f00a ffe6 	bl	9000fe80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90004eb4:	f04f 131e 	mov.w	r3, #1966110	; 0x1e001e
90004eb8:	f8df e108 	ldr.w	lr, [pc, #264]	; 90004fc4 <_ZN24screen_asteroidsViewBaseC1Ev+0x4d8>
    buttonCallback(this, &screen_asteroidsViewBase::buttonCallbackHandler)
90004ebc:	f204 42a4 	addw	r2, r4, #1188	; 0x4a4
90004ec0:	f504 7bd0 	add.w	fp, r4, #416	; 0x1a0
90004ec4:	f504 7514 	add.w	r5, r4, #592	; 0x250
90004ec8:	ee08 2a90 	vmov	s17, r2
90004ecc:	e9c4 e332 	strd	lr, r3, [r4, #200]	; 0xc8
    void setOrigin(T x, T y)
    {
        CWRUtil::Q5 dxNew = CWRUtil::toQ5<T>(x);
        CWRUtil::Q5 dyNew = CWRUtil::toQ5<T>(y);

        if (dx == dxNew && dy == dyNew)
90004ed0:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
90004ed4:	b913      	cbnz	r3, 90004edc <_ZN24screen_asteroidsViewBaseC1Ev+0x3f0>
90004ed6:	f8d4 30f8 	ldr.w	r3, [r4, #248]	; 0xf8
90004eda:	b12b      	cbz	r3, 90004ee8 <_ZN24screen_asteroidsViewBaseC1Ev+0x3fc>
        {
            return;
        }

        dx = dxNew;
90004edc:	2300      	movs	r3, #0
        dy = dyNew;

        updateAbstractShapeCache();
90004ede:	4648      	mov	r0, r9
        dy = dyNew;
90004ee0:	e9c4 333d 	strd	r3, r3, [r4, #244]	; 0xf4
        updateAbstractShapeCache();
90004ee4:	f00c fa34 	bl	90011350 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv>
     * @note The area containing the AbstractShape is not invalidated.
     */
    template <typename T>
    void setScale(T newXScale, T newYScale)
    {
        xScale = CWRUtil::toQ10<T>(newXScale);
90004ee8:	f44f 6380 	mov.w	r3, #1024	; 0x400
        yScale = CWRUtil::toQ10<T>(newYScale);
        updateAbstractShapeCache();
90004eec:	4648      	mov	r0, r9
        yScale = CWRUtil::toQ10<T>(newYScale);
90004eee:	e9c4 3340 	strd	r3, r3, [r4, #256]	; 0x100
        updateAbstractShapeCache();
90004ef2:	f00c fa2d 	bl	90011350 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv>
        if (shapeAngle != angleQ5)
90004ef6:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
90004efa:	b12b      	cbz	r3, 90004f08 <_ZN24screen_asteroidsViewBaseC1Ev+0x41c>
            shapeAngle = angleQ5;
90004efc:	2300      	movs	r3, #0
            updateAbstractShapeCache();
90004efe:	4648      	mov	r0, r9
            shapeAngle = angleQ5;
90004f00:	f8c4 30fc 	str.w	r3, [r4, #252]	; 0xfc
            updateAbstractShapeCache();
90004f04:	f00c fa24 	bl	90011350 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv>
        canvasPainter = &painter;
90004f08:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
            xCorner[i] = x, yCorner[i] = y;
90004f0a:	f44f 7270 	mov.w	r2, #960	; 0x3c0
90004f0e:	f04f 0a00 	mov.w	sl, #0
        updateAbstractShapeCache();
90004f12:	4648      	mov	r0, r9
90004f14:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
90004f18:	f04f 33ff 	mov.w	r3, #4294967295
90004f1c:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
90004f20:	f8c4 314c 	str.w	r3, [r4, #332]	; 0x14c
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
90004f24:	f8a4 3150 	strh.w	r3, [r4, #336]	; 0x150
90004f28:	e9c4 2248 	strd	r2, r2, [r4, #288]	; 0x120
90004f2c:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
90004f30:	e9c4 aa46 	strd	sl, sl, [r4, #280]	; 0x118
90004f34:	f8c4 2110 	str.w	r2, [r4, #272]	; 0x110
90004f38:	f00c fa0a 	bl	90011350 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv>
90004f3c:	4649      	mov	r1, r9
90004f3e:	4638      	mov	r0, r7
    lbl_score.setXY(338, 3);
90004f40:	f504 79aa 	add.w	r9, r4, #340	; 0x154
90004f44:	f00a ff9c 	bl	9000fe80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004f48:	4919      	ldr	r1, [pc, #100]	; (90004fb0 <_ZN24screen_asteroidsViewBaseC1Ev+0x4c4>)
        setX(x);
90004f4a:	f8d4 2154 	ldr.w	r2, [r4, #340]	; 0x154
        color = newColor;
90004f4e:	f04f 33ff 	mov.w	r3, #4294967295
        linespace = space;
90004f52:	f8a4 a188 	strh.w	sl, [r4, #392]	; 0x188
        boundingArea = calculateBoundingArea();
90004f56:	f8d2 2084 	ldr.w	r2, [r2, #132]	; 0x84
        rect.x = x;
90004f5a:	f8c4 1158 	str.w	r1, [r4, #344]	; 0x158
90004f5e:	4915      	ldr	r1, [pc, #84]	; (90004fb4 <_ZN24screen_asteroidsViewBaseC1Ev+0x4c8>)
        color = newColor;
90004f60:	f8c4 3184 	str.w	r3, [r4, #388]	; 0x184
90004f64:	428a      	cmp	r2, r1
90004f66:	f040 8228 	bne.w	900053ba <_ZN24screen_asteroidsViewBaseC1Ev+0x8ce>
        boundingArea = calculateBoundingArea();
90004f6a:	f8c4 a198 	str.w	sl, [r4, #408]	; 0x198
90004f6e:	e9c4 a364 	strd	sl, r3, [r4, #400]	; 0x190
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004f72:	4b11      	ldr	r3, [pc, #68]	; (90004fb8 <_ZN24screen_asteroidsViewBaseC1Ev+0x4cc>)
    Unicode::snprintf(lbl_scoreBuffer, LBL_SCORE_SIZE, "%s", touchgfx::TypedText(T_SCORE_VALUE).getText());
90004f74:	f504 6aa3 	add.w	sl, r4, #1304	; 0x518
90004f78:	681b      	ldr	r3, [r3, #0]
90004f7a:	2b00      	cmp	r3, #0
90004f7c:	f000 822f 	beq.w	900053de <_ZN24screen_asteroidsViewBaseC1Ev+0x8f2>
90004f80:	e022      	b.n	90004fc8 <_ZN24screen_asteroidsViewBaseC1Ev+0x4dc>
90004f82:	bf00      	nop
90004f84:	90002499 	.word	0x90002499
90004f88:	9002a30c 	.word	0x9002a30c
90004f8c:	90029014 	.word	0x90029014
90004f90:	9002a24c 	.word	0x9002a24c
90004f94:	90029b28 	.word	0x90029b28
90004f98:	9002a67c 	.word	0x9002a67c
90004f9c:	9002a5ec 	.word	0x9002a5ec
90004fa0:	90029c4c 	.word	0x90029c4c
90004fa4:	900049a5 	.word	0x900049a5
90004fa8:	ff333333 	.word	0xff333333
90004fac:	001d0022 	.word	0x001d0022
90004fb0:	00030152 	.word	0x00030152
90004fb4:	900047d1 	.word	0x900047d1
90004fb8:	24023604 	.word	0x24023604
90004fbc:	011001e0 	.word	0x011001e0
90004fc0:	004f011d 	.word	0x004f011d
90004fc4:	00e300e1 	.word	0x00e300e1
        return typedTextId < numberOfTypedTexts;
90004fc8:	4bdf      	ldr	r3, [pc, #892]	; (90005348 <_ZN24screen_asteroidsViewBaseC1Ev+0x85c>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004fca:	881b      	ldrh	r3, [r3, #0]
90004fcc:	2b01      	cmp	r3, #1
90004fce:	f240 8200 	bls.w	900053d2 <_ZN24screen_asteroidsViewBaseC1Ev+0x8e6>
        return texts->getText(typedTextId);
90004fd2:	4bde      	ldr	r3, [pc, #888]	; (9000534c <_ZN24screen_asteroidsViewBaseC1Ev+0x860>)
90004fd4:	2101      	movs	r1, #1
90004fd6:	6818      	ldr	r0, [r3, #0]
90004fd8:	f7ff fb98 	bl	9000470c <_ZNK8touchgfx5Texts7getTextEt>
90004fdc:	4adc      	ldr	r2, [pc, #880]	; (90005350 <_ZN24screen_asteroidsViewBaseC1Ev+0x864>)
90004fde:	4603      	mov	r3, r0
90004fe0:	2106      	movs	r1, #6
90004fe2:	4650      	mov	r0, sl
90004fe4:	f013 f876 	bl	900180d4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    lbl_score.resizeToCurrentText();
90004fe8:	4648      	mov	r0, r9
        wc1 = value;
90004fea:	f8c4 a19c 	str.w	sl, [r4, #412]	; 0x19c
        : typedTextId(id)
90004fee:	f04f 0a02 	mov.w	sl, #2
90004ff2:	f00d f97d 	bl	900122f0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
90004ff6:	4bd7      	ldr	r3, [pc, #860]	; (90005354 <_ZN24screen_asteroidsViewBaseC1Ev+0x868>)
    lbl_score.setTypedText(touchgfx::TypedText(T___SINGLEUSE_W1MR));
90004ff8:	4631      	mov	r1, r6
90004ffa:	4648      	mov	r0, r9
90004ffc:	9314      	str	r3, [sp, #80]	; 0x50
90004ffe:	f8ad a054 	strh.w	sl, [sp, #84]	; 0x54
90005002:	f00d f995 	bl	90012330 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90005006:	4649      	mov	r1, r9
90005008:	4638      	mov	r0, r7
9000500a:	f00a ff39 	bl	9000fe80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000500e:	4ad2      	ldr	r2, [pc, #840]	; (90005358 <_ZN24screen_asteroidsViewBaseC1Ev+0x86c>)
90005010:	4bd2      	ldr	r3, [pc, #840]	; (9000535c <_ZN24screen_asteroidsViewBaseC1Ev+0x870>)
90005012:	f04f 0904 	mov.w	r9, #4
    icon_heart1.setBitmap(touchgfx::Bitmap(BITMAP_HEART_ICON_ID));
90005016:	4631      	mov	r1, r6
90005018:	ee18 0a10 	vmov	r0, s16
9000501c:	f8ad 9050 	strh.w	r9, [sp, #80]	; 0x50
90005020:	e9c4 2369 	strd	r2, r3, [r4, #420]	; 0x1a4
90005024:	f00d fbbf 	bl	900127a6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005028:	4bcd      	ldr	r3, [pc, #820]	; (90005360 <_ZN24screen_asteroidsViewBaseC1Ev+0x874>)
9000502a:	f04f 1214 	mov.w	r2, #1310740	; 0x140014
    icon_heart1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000502e:	ee18 0a10 	vmov	r0, s16
90005032:	2100      	movs	r1, #0
90005034:	e9c4 3274 	strd	r3, r2, [r4, #464]	; 0x1d0
90005038:	f00c fbe3 	bl	90011802 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    container_health.add(icon_heart1);
9000503c:	ee18 1a10 	vmov	r1, s16
90005040:	4658      	mov	r0, fp
90005042:	f00a ff1d 	bl	9000fe80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    icon_heart2.setBitmap(touchgfx::Bitmap(BITMAP_HEART_ICON_ID));
90005046:	ed9d 8a02 	vldr	s16, [sp, #8]
9000504a:	4631      	mov	r1, r6
9000504c:	f8ad 9050 	strh.w	r9, [sp, #80]	; 0x50
90005050:	ee18 0a10 	vmov	r0, s16
90005054:	f00d fba7 	bl	900127a6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005058:	4bc2      	ldr	r3, [pc, #776]	; (90005364 <_ZN24screen_asteroidsViewBaseC1Ev+0x878>)
9000505a:	f04f 1214 	mov.w	r2, #1310740	; 0x140014
    icon_heart2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000505e:	ee18 0a10 	vmov	r0, s16
90005062:	2100      	movs	r1, #0
90005064:	e9c4 327f 	strd	r3, r2, [r4, #508]	; 0x1fc
90005068:	f00c fbcb 	bl	90011802 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    container_health.add(icon_heart2);
9000506c:	ee18 1a10 	vmov	r1, s16
90005070:	4658      	mov	r0, fp
90005072:	f00a ff05 	bl	9000fe80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005076:	f8ad 9050 	strh.w	r9, [sp, #80]	; 0x50
    icon_heart3.setBitmap(touchgfx::Bitmap(BITMAP_HEART_ICON_ID));
9000507a:	f8dd 900c 	ldr.w	r9, [sp, #12]
9000507e:	4631      	mov	r1, r6
90005080:	4648      	mov	r0, r9
90005082:	f00d fb90 	bl	900127a6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005086:	4bb8      	ldr	r3, [pc, #736]	; (90005368 <_ZN24screen_asteroidsViewBaseC1Ev+0x87c>)
90005088:	f04f 1214 	mov.w	r2, #1310740	; 0x140014
    icon_heart3.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000508c:	4648      	mov	r0, r9
9000508e:	2100      	movs	r1, #0
90005090:	e9c4 328a 	strd	r3, r2, [r4, #552]	; 0x228
90005094:	f00c fbb5 	bl	90011802 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    container_health.add(icon_heart3);
90005098:	4649      	mov	r1, r9
9000509a:	4658      	mov	r0, fp
9000509c:	f04f 0901 	mov.w	r9, #1
900050a0:	f00a feee 	bl	9000fe80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900050a4:	4659      	mov	r1, fp
900050a6:	4638      	mov	r0, r7
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
900050a8:	f06f 1b06 	mvn.w	fp, #393222	; 0x60006
900050ac:	f00a fee8 	bl	9000fe80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900050b0:	49ae      	ldr	r1, [pc, #696]	; (9000536c <_ZN24screen_asteroidsViewBaseC1Ev+0x880>)
900050b2:	4baf      	ldr	r3, [pc, #700]	; (90005370 <_ZN24screen_asteroidsViewBaseC1Ev+0x884>)
    btn_right.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID));
900050b4:	aa13      	add	r2, sp, #76	; 0x4c
900050b6:	9600      	str	r6, [sp, #0]
900050b8:	ed9d 8a04 	vldr	s16, [sp, #16]
900050bc:	f8ad a048 	strh.w	sl, [sp, #72]	; 0x48
900050c0:	ee18 0a10 	vmov	r0, s16
900050c4:	f8ad 9044 	strh.w	r9, [sp, #68]	; 0x44
900050c8:	e9c4 1395 	strd	r1, r3, [r4, #596]	; 0x254
900050cc:	4ba9      	ldr	r3, [pc, #676]	; (90005374 <_ZN24screen_asteroidsViewBaseC1Ev+0x888>)
900050ce:	a911      	add	r1, sp, #68	; 0x44
900050d0:	f8c4 3280 	str.w	r3, [r4, #640]	; 0x280
900050d4:	2308      	movs	r3, #8
900050d6:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
900050da:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
900050de:	4613      	mov	r3, r2
900050e0:	aa12      	add	r2, sp, #72	; 0x48
900050e2:	f00d fa93 	bl	9001260c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    container_controls.add(btn_right);
900050e6:	ee18 1a10 	vmov	r1, s16
900050ea:	4628      	mov	r0, r5
900050ec:	f8c4 b2b4 	str.w	fp, [r4, #692]	; 0x2b4
900050f0:	f00a fec6 	bl	9000fe80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900050f4:	4ba0      	ldr	r3, [pc, #640]	; (90005378 <_ZN24screen_asteroidsViewBaseC1Ev+0x88c>)
    btn_down.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_E8F6FB_SVG_ID));
900050f6:	ed9d 8a05 	vldr	s16, [sp, #20]
900050fa:	aa13      	add	r2, sp, #76	; 0x4c
900050fc:	9600      	str	r6, [sp, #0]
900050fe:	a911      	add	r1, sp, #68	; 0x44
90005100:	f8c4 32bc 	str.w	r3, [r4, #700]	; 0x2bc
90005104:	2306      	movs	r3, #6
90005106:	ee18 0a10 	vmov	r0, s16
9000510a:	f8ad 9044 	strh.w	r9, [sp, #68]	; 0x44
9000510e:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
90005112:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
90005116:	4613      	mov	r3, r2
90005118:	aa12      	add	r2, sp, #72	; 0x48
9000511a:	f8ad a048 	strh.w	sl, [sp, #72]	; 0x48
9000511e:	f00d fa75 	bl	9001260c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90005122:	f06f 1205 	mvn.w	r2, #327685	; 0x50005
    container_controls.add(btn_down);
90005126:	ee18 1a10 	vmov	r1, s16
9000512a:	4628      	mov	r0, r5
9000512c:	f8c4 22f0 	str.w	r2, [r4, #752]	; 0x2f0
90005130:	f00a fea6 	bl	9000fe80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005134:	4b91      	ldr	r3, [pc, #580]	; (9000537c <_ZN24screen_asteroidsViewBaseC1Ev+0x890>)
    btn_left.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
90005136:	ed9d 8a06 	vldr	s16, [sp, #24]
9000513a:	aa13      	add	r2, sp, #76	; 0x4c
9000513c:	9600      	str	r6, [sp, #0]
9000513e:	a911      	add	r1, sp, #68	; 0x44
90005140:	f8c4 32f8 	str.w	r3, [r4, #760]	; 0x2f8
90005144:	2307      	movs	r3, #7
90005146:	ee18 0a10 	vmov	r0, s16
9000514a:	f8ad 9044 	strh.w	r9, [sp, #68]	; 0x44
9000514e:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
90005152:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
90005156:	4613      	mov	r3, r2
90005158:	aa12      	add	r2, sp, #72	; 0x48
9000515a:	f8ad a048 	strh.w	sl, [sp, #72]	; 0x48
9000515e:	f00d fa55 	bl	9001260c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    container_controls.add(btn_left);
90005162:	ee18 1a10 	vmov	r1, s16
90005166:	4628      	mov	r0, r5
90005168:	f8c4 b32c 	str.w	fp, [r4, #812]	; 0x32c
9000516c:	f00a fe88 	bl	9000fe80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005170:	f240 137b 	movw	r3, #379	; 0x17b
    btn_up.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_E8F6FB_SVG_ID));
90005174:	f8dd b01c 	ldr.w	fp, [sp, #28]
90005178:	aa13      	add	r2, sp, #76	; 0x4c
9000517a:	9600      	str	r6, [sp, #0]
9000517c:	a911      	add	r1, sp, #68	; 0x44
9000517e:	f8c4 3334 	str.w	r3, [r4, #820]	; 0x334
90005182:	2309      	movs	r3, #9
90005184:	4658      	mov	r0, fp
90005186:	f8ad 9044 	strh.w	r9, [sp, #68]	; 0x44
9000518a:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
9000518e:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
90005192:	4613      	mov	r3, r2
90005194:	aa12      	add	r2, sp, #72	; 0x48
90005196:	f8ad a048 	strh.w	sl, [sp, #72]	; 0x48
9000519a:	f00d fa37 	bl	9001260c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
9000519e:	f06f 1205 	mvn.w	r2, #327685	; 0x50005
    container_controls.add(btn_up);
900051a2:	4659      	mov	r1, fp
900051a4:	4628      	mov	r0, r5
900051a6:	f8c4 2368 	str.w	r2, [r4, #872]	; 0x368
900051aa:	f00a fe69 	bl	9000fe80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900051ae:	f44f 1310 	mov.w	r3, #2359296	; 0x240000
    btn_shoot.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_MAPS_LOCAL_FIRE_DEPARTMENT_30_30_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_MAPS_LOCAL_FIRE_DEPARTMENT_30_30_E8F6FB_SVG_ID));
900051b2:	aa13      	add	r2, sp, #76	; 0x4c
900051b4:	f8ad 9044 	strh.w	r9, [sp, #68]	; 0x44
900051b8:	9600      	str	r6, [sp, #0]
900051ba:	a911      	add	r1, sp, #68	; 0x44
900051bc:	f8dd 9020 	ldr.w	r9, [sp, #32]
900051c0:	f8c4 3370 	str.w	r3, [r4, #880]	; 0x370
900051c4:	230a      	movs	r3, #10
900051c6:	4648      	mov	r0, r9
900051c8:	f8ad a048 	strh.w	sl, [sp, #72]	; 0x48
900051cc:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
900051d0:	f04f 3aff 	mov.w	sl, #4294967295
900051d4:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
900051d8:	4613      	mov	r3, r2
900051da:	aa12      	add	r2, sp, #72	; 0x48
900051dc:	f8df b1c4 	ldr.w	fp, [pc, #452]	; 900053a4 <_ZN24screen_asteroidsViewBaseC1Ev+0x8b8>
900051e0:	f00d fa14 	bl	9001260c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
900051e4:	f04f 1302 	mov.w	r3, #131074	; 0x20002
    container_controls.add(btn_shoot);
900051e8:	4649      	mov	r1, r9
900051ea:	4628      	mov	r0, r5
900051ec:	f8c4 33a4 	str.w	r3, [r4, #932]	; 0x3a4
    btn_retry.setAction(buttonCallback);
900051f0:	f242 1944 	movw	r9, #8516	; 0x2144
    container_controls.add(btn_shoot);
900051f4:	f00a fe44 	bl	9000fe80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900051f8:	4629      	mov	r1, r5
900051fa:	4638      	mov	r0, r7
        visible = vis;
900051fc:	2500      	movs	r5, #0
900051fe:	f00a fe3f 	bl	9000fe80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90005202:	f04f 1304 	mov.w	r3, #262148	; 0x40004
90005206:	485e      	ldr	r0, [pc, #376]	; (90005380 <_ZN24screen_asteroidsViewBaseC1Ev+0x894>)
90005208:	f504 716a 	add.w	r1, r4, #936	; 0x3a8
        visible = vis;
9000520c:	f884 53cd 	strb.w	r5, [r4, #973]	; 0x3cd
    btn_retry.setAction(buttonCallback);
90005210:	44a1      	add	r9, r4
90005212:	f8c4 a3d0 	str.w	sl, [r4, #976]	; 0x3d0
        rect.x = x;
90005216:	e9c4 03eb 	strd	r0, r3, [r4, #940]	; 0x3ac
9000521a:	4638      	mov	r0, r7
9000521c:	f00a fe30 	bl	9000fe80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005220:	4b58      	ldr	r3, [pc, #352]	; (90005384 <_ZN24screen_asteroidsViewBaseC1Ev+0x898>)
    container_game_over.add(bg_light_grey);
90005222:	f504 6180 	add.w	r1, r4, #1024	; 0x400
90005226:	4640      	mov	r0, r8
90005228:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
9000522c:	4b56      	ldr	r3, [pc, #344]	; (90005388 <_ZN24screen_asteroidsViewBaseC1Ev+0x89c>)
9000522e:	f8c4 53d8 	str.w	r5, [r4, #984]	; 0x3d8
90005232:	f8c4 3408 	str.w	r3, [r4, #1032]	; 0x408
90005236:	4b55      	ldr	r3, [pc, #340]	; (9000538c <_ZN24screen_asteroidsViewBaseC1Ev+0x8a0>)
        visible = vis;
90005238:	f884 53f9 	strb.w	r5, [r4, #1017]	; 0x3f9
9000523c:	f8c4 3428 	str.w	r3, [r4, #1064]	; 0x428
        rect.x = x;
90005240:	f8c4 b3dc 	str.w	fp, [r4, #988]	; 0x3dc
90005244:	f00a fe1c 	bl	9000fe80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005248:	4b51      	ldr	r3, [pc, #324]	; (90005390 <_ZN24screen_asteroidsViewBaseC1Ev+0x8a4>)
    btn_retry.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_CACHED_40_40_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_CACHED_40_40_E8F6FB_SVG_ID));
9000524a:	ed9d 8a09 	vldr	s16, [sp, #36]	; 0x24
9000524e:	aa13      	add	r2, sp, #76	; 0x4c
90005250:	9600      	str	r6, [sp, #0]
90005252:	a911      	add	r1, sp, #68	; 0x44
90005254:	f8c4 3430 	str.w	r3, [r4, #1072]	; 0x430
90005258:	2305      	movs	r3, #5
9000525a:	ee18 0a10 	vmov	r0, s16
9000525e:	f8ad 5044 	strh.w	r5, [sp, #68]	; 0x44
90005262:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
90005266:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
9000526a:	4613      	mov	r3, r2
9000526c:	aa12      	add	r2, sp, #72	; 0x48
9000526e:	f8ad 5048 	strh.w	r5, [sp, #72]	; 0x48
90005272:	f00d f9cb 	bl	9001260c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    container_game_over.add(btn_retry);
90005276:	ee18 1a10 	vmov	r1, s16
9000527a:	4640      	mov	r0, r8
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
9000527c:	f8c4 9454 	str.w	r9, [r4, #1108]	; 0x454
90005280:	f8c4 a464 	str.w	sl, [r4, #1124]	; 0x464
90005284:	f00a fdfc 	bl	9000fe80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005288:	4842      	ldr	r0, [pc, #264]	; (90005394 <_ZN24screen_asteroidsViewBaseC1Ev+0x8a8>)
    btn_back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_BACK_40_40_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_BACK_40_40_E8F6FB_SVG_ID));
9000528a:	ed9d 8a0a 	vldr	s16, [sp, #40]	; 0x28
9000528e:	aa13      	add	r2, sp, #76	; 0x4c
90005290:	9600      	str	r6, [sp, #0]
90005292:	a911      	add	r1, sp, #68	; 0x44
90005294:	f8c4 046c 	str.w	r0, [r4, #1132]	; 0x46c
90005298:	200b      	movs	r0, #11
9000529a:	4613      	mov	r3, r2
9000529c:	aa12      	add	r2, sp, #72	; 0x48
9000529e:	f8ad 004c 	strh.w	r0, [sp, #76]	; 0x4c
900052a2:	f8ad 0050 	strh.w	r0, [sp, #80]	; 0x50
900052a6:	ee18 0a10 	vmov	r0, s16
900052aa:	f8ad 5044 	strh.w	r5, [sp, #68]	; 0x44
900052ae:	f8ad 5048 	strh.w	r5, [sp, #72]	; 0x48
900052b2:	f00d f9ab 	bl	9001260c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    container_game_over.add(btn_back);
900052b6:	ee18 1a10 	vmov	r1, s16
900052ba:	4640      	mov	r0, r8
900052bc:	f8c4 9490 	str.w	r9, [r4, #1168]	; 0x490
900052c0:	f10d 0930 	add.w	r9, sp, #48	; 0x30
900052c4:	f8c4 a4a0 	str.w	sl, [r4, #1184]	; 0x4a0
900052c8:	f00a fdda 	bl	9000fe80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900052cc:	4b32      	ldr	r3, [pc, #200]	; (90005398 <_ZN24screen_asteroidsViewBaseC1Ev+0x8ac>)
900052ce:	ee18 1a90 	vmov	r1, s17
900052d2:	4648      	mov	r0, r9
900052d4:	f8c4 34a8 	str.w	r3, [r4, #1192]	; 0x4a8
        color = newColor;
900052d8:	4b30      	ldr	r3, [pc, #192]	; (9000539c <_ZN24screen_asteroidsViewBaseC1Ev+0x8b0>)
        linespace = space;
900052da:	f8a4 54d8 	strh.w	r5, [r4, #1240]	; 0x4d8
        color = newColor;
900052de:	f8c4 34d4 	str.w	r3, [r4, #1236]	; 0x4d4
        boundingArea = calculateBoundingArea();
900052e2:	f00c fd7d 	bl	90011de0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
900052e6:	4b1b      	ldr	r3, [pc, #108]	; (90005354 <_ZN24screen_asteroidsViewBaseC1Ev+0x868>)
900052e8:	f8ad 5054 	strh.w	r5, [sp, #84]	; 0x54
900052ec:	9314      	str	r3, [sp, #80]	; 0x50
900052ee:	ee18 3a90 	vmov	r3, s17
900052f2:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
900052f6:	333c      	adds	r3, #60	; 0x3c
900052f8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_over.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DW7K));
900052fc:	4631      	mov	r1, r6
900052fe:	ee18 0a90 	vmov	r0, s17
90005302:	f00d f815 	bl	90012330 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    container_game_over.add(lbl_over);
90005306:	ee18 1a90 	vmov	r1, s17
9000530a:	4640      	mov	r0, r8
9000530c:	f00a fdb8 	bl	9000fe80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005310:	4641      	mov	r1, r8
90005312:	4638      	mov	r0, r7
90005314:	f00a fdb4 	bl	9000fe80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005318:	4b21      	ldr	r3, [pc, #132]	; (900053a0 <_ZN24screen_asteroidsViewBaseC1Ev+0x8b4>)
9000531a:	4638      	mov	r0, r7
9000531c:	f204 41ec 	addw	r1, r4, #1260	; 0x4ec
90005320:	f8c4 3514 	str.w	r3, [r4, #1300]	; 0x514
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90005324:	234e      	movs	r3, #78	; 0x4e
90005326:	f8c4 54f0 	str.w	r5, [r4, #1264]	; 0x4f0
9000532a:	f8c4 b4f4 	str.w	fp, [r4, #1268]	; 0x4f4
        visible = vis;
9000532e:	f884 5511 	strb.w	r5, [r4, #1297]	; 0x511
90005332:	f884 3512 	strb.w	r3, [r4, #1298]	; 0x512
90005336:	f00a fda3 	bl	9000fe80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
9000533a:	4620      	mov	r0, r4
9000533c:	b017      	add	sp, #92	; 0x5c
9000533e:	ecbd 8b02 	vpop	{d8}
90005342:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90005346:	bf00      	nop
90005348:	24023608 	.word	0x24023608
9000534c:	24023610 	.word	0x24023610
90005350:	90029b1c 	.word	0x90029b1c
90005354:	90029014 	.word	0x90029014
90005358:	000400e9 	.word	0x000400e9
9000535c:	0014005c 	.word	0x0014005c
90005360:	00010048 	.word	0x00010048
90005364:	00010031 	.word	0x00010031
90005368:	0001001a 	.word	0x0001001a
9000536c:	009e000f 	.word	0x009e000f
90005370:	006c01c3 	.word	0x006c01c3
90005374:	0024019f 	.word	0x0024019f
90005378:	0048017b 	.word	0x0048017b
9000537c:	00240157 	.word	0x00240157
90005380:	00db00ee 	.word	0x00db00ee
90005384:	0049005d 	.word	0x0049005d
90005388:	007e0127 	.word	0x007e0127
9000538c:	ff828282 	.word	0xff828282
90005390:	00890112 	.word	0x00890112
90005394:	008900ab 	.word	0x008900ab
90005398:	00500082 	.word	0x00500082
9000539c:	ff851717 	.word	0xff851717
900053a0:	ff851313 	.word	0xff851313
900053a4:	011001e0 	.word	0x011001e0
        return instance->lcdRef;
900053a8:	6898      	ldr	r0, [r3, #8]
900053aa:	4d10      	ldr	r5, [pc, #64]	; (900053ec <_ZN24screen_asteroidsViewBaseC1Ev+0x900>)
900053ac:	6803      	ldr	r3, [r0, #0]
900053ae:	6ada      	ldr	r2, [r3, #44]	; 0x2c
900053b0:	42aa      	cmp	r2, r5
900053b2:	f43f ac34 	beq.w	90004c1e <_ZN24screen_asteroidsViewBaseC1Ev+0x132>
900053b6:	f7ff bbfc 	b.w	90004bb2 <_ZN24screen_asteroidsViewBaseC1Ev+0xc6>
900053ba:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
900053be:	4649      	mov	r1, r9
900053c0:	4650      	mov	r0, sl
900053c2:	4790      	blx	r2
900053c4:	f504 73c8 	add.w	r3, r4, #400	; 0x190
900053c8:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
900053cc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
900053d0:	e5cf      	b.n	90004f72 <_ZN24screen_asteroidsViewBaseC1Ev+0x486>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900053d2:	4b07      	ldr	r3, [pc, #28]	; (900053f0 <_ZN24screen_asteroidsViewBaseC1Ev+0x904>)
900053d4:	2161      	movs	r1, #97	; 0x61
900053d6:	4a07      	ldr	r2, [pc, #28]	; (900053f4 <_ZN24screen_asteroidsViewBaseC1Ev+0x908>)
900053d8:	4807      	ldr	r0, [pc, #28]	; (900053f8 <_ZN24screen_asteroidsViewBaseC1Ev+0x90c>)
900053da:	f020 ff71 	bl	900262c0 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900053de:	4b07      	ldr	r3, [pc, #28]	; (900053fc <_ZN24screen_asteroidsViewBaseC1Ev+0x910>)
900053e0:	2160      	movs	r1, #96	; 0x60
900053e2:	4a04      	ldr	r2, [pc, #16]	; (900053f4 <_ZN24screen_asteroidsViewBaseC1Ev+0x908>)
900053e4:	4804      	ldr	r0, [pc, #16]	; (900053f8 <_ZN24screen_asteroidsViewBaseC1Ev+0x90c>)
900053e6:	f020 ff6b 	bl	900262c0 <__assert_func>
900053ea:	bf00      	nop
900053ec:	90002499 	.word	0x90002499
900053f0:	900299a4 	.word	0x900299a4
900053f4:	90029ae4 	.word	0x90029ae4
900053f8:	9002995c 	.word	0x9002995c
900053fc:	900298dc 	.word	0x900298dc

90005400 <_ZN8touchgfx6Screen15afterTransitionEv>:
    }
90005400:	4770      	bx	lr
90005402:	bf00      	nop

90005404 <_ZN26screen_game_selectViewBaseD1Ev>:
}

screen_game_selectViewBase::~screen_game_selectViewBase()
{

}
90005404:	4770      	bx	lr
90005406:	bf00      	nop

90005408 <_ZN26screen_game_selectViewBase11setupScreenEv>:

void screen_game_selectViewBase::setupScreen()
{

}
90005408:	4770      	bx	lr
9000540a:	bf00      	nop

9000540c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
9000540c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
90005410:	b133      	cbz	r3, 90005420 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>
90005412:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005414:	f100 0374 	add.w	r3, r0, #116	; 0x74
90005418:	65c2      	str	r2, [r0, #92]	; 0x5c
9000541a:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
9000541c:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
9000541e:	4770      	bx	lr
90005420:	6e82      	ldr	r2, [r0, #104]	; 0x68
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005422:	f100 0370 	add.w	r3, r0, #112	; 0x70
90005426:	65c2      	str	r2, [r0, #92]	; 0x5c
90005428:	681b      	ldr	r3, [r3, #0]
9000542a:	6603      	str	r3, [r0, #96]	; 0x60
    }
9000542c:	4770      	bx	lr
9000542e:	bf00      	nop

90005430 <_ZN8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005430:	4770      	bx	lr
90005432:	bf00      	nop

90005434 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
90005434:	4770      	bx	lr
90005436:	bf00      	nop

90005438 <_ZN8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
90005438:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
9000543a:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
9000543c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
9000543e:	6844      	ldr	r4, [r0, #4]
90005440:	f012 0f01 	tst.w	r2, #1
90005444:	eb04 0062 	add.w	r0, r4, r2, asr #1
90005448:	d103      	bne.n	90005452 <_ZN8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x1a>
9000544a:	689b      	ldr	r3, [r3, #8]
    }
9000544c:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90005450:	4718      	bx	r3
90005452:	ea4f 0c62 	mov.w	ip, r2, asr #1
90005456:	689b      	ldr	r3, [r3, #8]
90005458:	f854 200c 	ldr.w	r2, [r4, ip]
    }
9000545c:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90005460:	58d3      	ldr	r3, [r2, r3]
90005462:	4718      	bx	r3

90005464 <_ZNK8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90005464:	6843      	ldr	r3, [r0, #4]
90005466:	b13b      	cbz	r3, 90005478 <_ZNK8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
90005468:	6883      	ldr	r3, [r0, #8]
9000546a:	b10b      	cbz	r3, 90005470 <_ZNK8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0xc>
9000546c:	2001      	movs	r0, #1
    }
9000546e:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90005470:	68c0      	ldr	r0, [r0, #12]
90005472:	f000 0001 	and.w	r0, r0, #1
90005476:	4770      	bx	lr
90005478:	4618      	mov	r0, r3
9000547a:	4770      	bx	lr

9000547c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
9000547c:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
90005480:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
90005484:	4770      	bx	lr
90005486:	bf00      	nop

90005488 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
90005488:	b510      	push	{r4, lr}
9000548a:	4604      	mov	r4, r0
9000548c:	2178      	movs	r1, #120	; 0x78
9000548e:	f020 fee8 	bl	90026262 <_ZdlPvj>
90005492:	4620      	mov	r0, r4
90005494:	bd10      	pop	{r4, pc}
90005496:	bf00      	nop

90005498 <_ZN8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005498:	b510      	push	{r4, lr}
9000549a:	4604      	mov	r4, r0
9000549c:	2110      	movs	r1, #16
9000549e:	f020 fee0 	bl	90026262 <_ZdlPvj>
900054a2:	4620      	mov	r0, r4
900054a4:	bd10      	pop	{r4, pc}
900054a6:	bf00      	nop

900054a8 <_ZN26screen_game_selectViewBaseD0Ev>:
screen_game_selectViewBase::~screen_game_selectViewBase()
900054a8:	b510      	push	{r4, lr}
900054aa:	4604      	mov	r4, r0
}
900054ac:	f44f 71ca 	mov.w	r1, #404	; 0x194
900054b0:	f020 fed7 	bl	90026262 <_ZdlPvj>
900054b4:	4620      	mov	r0, r4
900054b6:	bd10      	pop	{r4, pc}

900054b8 <_ZN26screen_game_selectViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void screen_game_selectViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &_btn_asteroids)
900054b8:	30c4      	adds	r0, #196	; 0xc4
900054ba:	4288      	cmp	r0, r1
900054bc:	d000      	beq.n	900054c0 <_ZN26screen_game_selectViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x8>
900054be:	4770      	bx	lr
{
900054c0:	b508      	push	{r3, lr}
    virtual ~screen_game_selectViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
900054c2:	f00f fd81 	bl	90014fc8 <_ZN8touchgfx11Application11getInstanceEv>
        //game_asteroids
        //When _btn_asteroids clicked change screen to screen_asteroids
        //Go to screen_asteroids with screen transition towards East
        application().gotoscreen_asteroidsScreenSlideTransitionEast();
    }
}
900054c6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoscreen_asteroidsScreenSlideTransitionEast();
900054ca:	f7fe bf03 	b.w	900042d4 <_ZN23FrontendApplicationBase45gotoscreen_asteroidsScreenSlideTransitionEastEv>
900054ce:	bf00      	nop

900054d0 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
     *
     * @see setAction
     */
    virtual void executeAction()
    {
        if (action && action->isValid())
900054d0:	6b03      	ldr	r3, [r0, #48]	; 0x30
900054d2:	b30b      	cbz	r3, 90005518 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x48>
900054d4:	681a      	ldr	r2, [r3, #0]
    virtual void executeAction()
900054d6:	b570      	push	{r4, r5, r6, lr}
        if (action && action->isValid())
900054d8:	68d1      	ldr	r1, [r2, #12]
900054da:	4604      	mov	r4, r0
900054dc:	481a      	ldr	r0, [pc, #104]	; (90005548 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x78>)
900054de:	4281      	cmp	r1, r0
900054e0:	d11b      	bne.n	9000551a <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x4a>
        return (pobject != 0) && (pmemfun != 0);
900054e2:	6858      	ldr	r0, [r3, #4]
900054e4:	b180      	cbz	r0, 90005508 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
900054e6:	6899      	ldr	r1, [r3, #8]
900054e8:	b1f1      	cbz	r1, 90005528 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x58>
        {
            action->execute(*this);
900054ea:	6892      	ldr	r2, [r2, #8]
900054ec:	4917      	ldr	r1, [pc, #92]	; (9000554c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x7c>)
900054ee:	428a      	cmp	r2, r1
900054f0:	d124      	bne.n	9000553c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x6c>
        (pobject->*pmemfun)(t1);
900054f2:	68da      	ldr	r2, [r3, #12]
900054f4:	6858      	ldr	r0, [r3, #4]
900054f6:	eb00 0062 	add.w	r0, r0, r2, asr #1
900054fa:	07d2      	lsls	r2, r2, #31
900054fc:	d405      	bmi.n	9000550a <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3a>
900054fe:	4621      	mov	r1, r4
90005500:	689b      	ldr	r3, [r3, #8]
        }
    }
90005502:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90005506:	4718      	bx	r3
90005508:	bd70      	pop	{r4, r5, r6, pc}
9000550a:	6899      	ldr	r1, [r3, #8]
9000550c:	6803      	ldr	r3, [r0, #0]
9000550e:	585b      	ldr	r3, [r3, r1]
90005510:	4621      	mov	r1, r4
90005512:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90005516:	4718      	bx	r3
90005518:	4770      	bx	lr
        if (action && action->isValid())
9000551a:	4618      	mov	r0, r3
9000551c:	4788      	blx	r1
9000551e:	2800      	cmp	r0, #0
90005520:	d0f2      	beq.n	90005508 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
            action->execute(*this);
90005522:	6b23      	ldr	r3, [r4, #48]	; 0x30
90005524:	681a      	ldr	r2, [r3, #0]
90005526:	e7e0      	b.n	900054ea <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1a>
        return (pobject != 0) && (pmemfun != 0);
90005528:	68dd      	ldr	r5, [r3, #12]
9000552a:	07ee      	lsls	r6, r5, #31
9000552c:	d5ec      	bpl.n	90005508 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
9000552e:	6892      	ldr	r2, [r2, #8]
90005530:	4e06      	ldr	r6, [pc, #24]	; (9000554c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x7c>)
90005532:	42b2      	cmp	r2, r6
90005534:	d102      	bne.n	9000553c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x6c>
        (pobject->*pmemfun)(t1);
90005536:	eb00 0065 	add.w	r0, r0, r5, asr #1
9000553a:	e7e7      	b.n	9000550c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3c>
9000553c:	4621      	mov	r1, r4
9000553e:	4618      	mov	r0, r3
    }
90005540:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            action->execute(*this);
90005544:	4710      	bx	r2
90005546:	bf00      	nop
90005548:	90005465 	.word	0x90005465
9000554c:	90005439 	.word	0x90005439

90005550 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
90005550:	790b      	ldrb	r3, [r1, #4]
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
90005552:	1e1a      	subs	r2, r3, #0
    virtual void handleClickEvent(const ClickEvent& event)
90005554:	b570      	push	{r4, r5, r6, lr}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
90005556:	bf18      	it	ne
90005558:	2201      	movne	r2, #1
        return pressed;
9000555a:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
    virtual void handleClickEvent(const ClickEvent& event)
9000555e:	460d      	mov	r5, r1
90005560:	4604      	mov	r4, r0
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
90005562:	42b2      	cmp	r2, r6
90005564:	d004      	beq.n	90005570 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x20>
        {
            setPressed(newPressedValue);
            invalidate();
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
90005566:	b116      	cbz	r6, 9000556e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
90005568:	792b      	ldrb	r3, [r5, #4]
9000556a:	2b01      	cmp	r3, #1
9000556c:	d00e      	beq.n	9000558c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
9000556e:	bd70      	pop	{r4, r5, r6, pc}
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
90005570:	fab3 f383 	clz	r3, r3
90005574:	095b      	lsrs	r3, r3, #5
90005576:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
        handlePressedUpdated();
9000557a:	6803      	ldr	r3, [r0, #0]
9000557c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
90005580:	4798      	blx	r3
            invalidate();
90005582:	6823      	ldr	r3, [r4, #0]
90005584:	4620      	mov	r0, r4
90005586:	695b      	ldr	r3, [r3, #20]
90005588:	4798      	blx	r3
9000558a:	e7ec      	b.n	90005566 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x16>
            executeAction();
9000558c:	6823      	ldr	r3, [r4, #0]
9000558e:	4a20      	ldr	r2, [pc, #128]	; (90005610 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc0>)
90005590:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
90005594:	4293      	cmp	r3, r2
90005596:	d127      	bne.n	900055e8 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x98>
        if (action && action->isValid())
90005598:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000559a:	2b00      	cmp	r3, #0
9000559c:	d0e7      	beq.n	9000556e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
9000559e:	6819      	ldr	r1, [r3, #0]
900055a0:	481c      	ldr	r0, [pc, #112]	; (90005614 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc4>)
900055a2:	68ca      	ldr	r2, [r1, #12]
900055a4:	4282      	cmp	r2, r0
900055a6:	d123      	bne.n	900055f0 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xa0>
        return (pobject != 0) && (pmemfun != 0);
900055a8:	685a      	ldr	r2, [r3, #4]
900055aa:	2a00      	cmp	r2, #0
900055ac:	d0df      	beq.n	9000556e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
900055ae:	689d      	ldr	r5, [r3, #8]
900055b0:	b175      	cbz	r5, 900055d0 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x80>
            action->execute(*this);
900055b2:	688e      	ldr	r6, [r1, #8]
900055b4:	4a18      	ldr	r2, [pc, #96]	; (90005618 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc8>)
900055b6:	4296      	cmp	r6, r2
900055b8:	d123      	bne.n	90005602 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xb2>
        (pobject->*pmemfun)(t1);
900055ba:	68d9      	ldr	r1, [r3, #12]
900055bc:	685a      	ldr	r2, [r3, #4]
900055be:	eb02 0061 	add.w	r0, r2, r1, asr #1
900055c2:	07ca      	lsls	r2, r1, #31
900055c4:	d41b      	bmi.n	900055fe <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xae>
900055c6:	689b      	ldr	r3, [r3, #8]
900055c8:	4621      	mov	r1, r4
    }
900055ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900055ce:	4718      	bx	r3
        return (pobject != 0) && (pmemfun != 0);
900055d0:	68d8      	ldr	r0, [r3, #12]
900055d2:	07c6      	lsls	r6, r0, #31
900055d4:	d5cb      	bpl.n	9000556e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
900055d6:	688e      	ldr	r6, [r1, #8]
900055d8:	490f      	ldr	r1, [pc, #60]	; (90005618 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc8>)
900055da:	428e      	cmp	r6, r1
900055dc:	d111      	bne.n	90005602 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xb2>
        (pobject->*pmemfun)(t1);
900055de:	eb02 0060 	add.w	r0, r2, r0, asr #1
900055e2:	6803      	ldr	r3, [r0, #0]
900055e4:	595b      	ldr	r3, [r3, r5]
900055e6:	e7ef      	b.n	900055c8 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x78>
            executeAction();
900055e8:	4620      	mov	r0, r4
    }
900055ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
900055ee:	4718      	bx	r3
        if (action && action->isValid())
900055f0:	4618      	mov	r0, r3
900055f2:	4790      	blx	r2
900055f4:	2800      	cmp	r0, #0
900055f6:	d0ba      	beq.n	9000556e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
            action->execute(*this);
900055f8:	6b23      	ldr	r3, [r4, #48]	; 0x30
900055fa:	6819      	ldr	r1, [r3, #0]
900055fc:	e7d9      	b.n	900055b2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x62>
900055fe:	689d      	ldr	r5, [r3, #8]
90005600:	e7ef      	b.n	900055e2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x92>
90005602:	4621      	mov	r1, r4
90005604:	4618      	mov	r0, r3
90005606:	4633      	mov	r3, r6
    }
90005608:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000560c:	4718      	bx	r3
9000560e:	bf00      	nop
90005610:	900054d1 	.word	0x900054d1
90005614:	90005465 	.word	0x90005465
90005618:	90005439 	.word	0x90005439

9000561c <_ZN26screen_game_selectViewBaseC1Ev>:
screen_game_selectViewBase::screen_game_selectViewBase() :
9000561c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90005620:	b086      	sub	sp, #24
90005622:	4604      	mov	r4, r0
90005624:	f011 f89e 	bl	90016764 <_ZN8touchgfx6ScreenC1Ev>
        : Widget(), alpha(255), color(0)
90005628:	4b87      	ldr	r3, [pc, #540]	; (90005848 <_ZN26screen_game_selectViewBaseC1Ev+0x22c>)
9000562a:	2500      	movs	r5, #0
          touchable(false),
9000562c:	f44f 7680 	mov.w	r6, #256	; 0x100
90005630:	27ff      	movs	r7, #255	; 0xff
    flexButtonCallback(this, &screen_game_selectViewBase::flexButtonCallbackHandler)
90005632:	4a86      	ldr	r2, [pc, #536]	; (9000584c <_ZN26screen_game_selectViewBaseC1Ev+0x230>)
90005634:	6423      	str	r3, [r4, #64]	; 0x40
90005636:	f104 0ac4 	add.w	sl, r4, #196	; 0xc4
9000563a:	66e3      	str	r3, [r4, #108]	; 0x6c
        T::add(borderBox);
9000563c:	f104 01f8 	add.w	r1, r4, #248	; 0xf8
90005640:	4b83      	ldr	r3, [pc, #524]	; (90005850 <_ZN26screen_game_selectViewBaseC1Ev+0x234>)
90005642:	4650      	mov	r0, sl
90005644:	6022      	str	r2, [r4, #0]
90005646:	f104 0898 	add.w	r8, r4, #152	; 0x98
9000564a:	63e5      	str	r5, [r4, #60]	; 0x3c
9000564c:	f8a4 6064 	strh.w	r6, [r4, #100]	; 0x64
90005650:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
90005654:	66a5      	str	r5, [r4, #104]	; 0x68
90005656:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
9000565a:	f884 7092 	strb.w	r7, [r4, #146]	; 0x92
9000565e:	f8c4 5094 	str.w	r5, [r4, #148]	; 0x94
        : typedTextId(id)
90005662:	f8df 9224 	ldr.w	r9, [pc, #548]	; 90005888 <_ZN26screen_game_selectViewBaseC1Ev+0x26c>
        : x(0), y(0), width(0), height(0)
90005666:	e9c4 5511 	strd	r5, r5, [r4, #68]	; 0x44
9000566a:	e9c4 5513 	strd	r5, r5, [r4, #76]	; 0x4c
          nextSibling(0),
9000566e:	e9c4 5515 	strd	r5, r5, [r4, #84]	; 0x54
          cachedAbsX(0),
90005672:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
90005676:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
9000567a:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
9000567e:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
90005682:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
90005686:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
9000568a:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
          nextSibling(0),
9000568e:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
          cachedAbsX(0),
90005692:	e9c4 552d 	strd	r5, r5, [r4, #180]	; 0xb4
90005696:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
        : pressed(false), alpha(255), action(0)
9000569a:	f44f 437f 	mov.w	r3, #65280	; 0xff00
          touchable(false),
9000569e:	f8a4 60bc 	strh.w	r6, [r4, #188]	; 0xbc
900056a2:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
        touchable = touch;
900056a6:	f240 1301 	movw	r3, #257	; 0x101
900056aa:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
900056ae:	f8a4 30e8 	strh.w	r3, [r4, #232]	; 0xe8
        : T(), up(), down()
900056b2:	4b68      	ldr	r3, [pc, #416]	; (90005854 <_ZN26screen_game_selectViewBaseC1Ev+0x238>)
900056b4:	f8c4 50ec 	str.w	r5, [r4, #236]	; 0xec
900056b8:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
        : Box(), borderColor(0), borderSize(0)
900056bc:	4b66      	ldr	r3, [pc, #408]	; (90005858 <_ZN26screen_game_selectViewBaseC1Ev+0x23c>)
900056be:	f8c4 50f4 	str.w	r5, [r4, #244]	; 0xf4
900056c2:	f8c4 30f8 	str.w	r3, [r4, #248]	; 0xf8
          touchable(false),
900056c6:	f8a4 611c 	strh.w	r6, [r4, #284]	; 0x11c
900056ca:	f884 711e 	strb.w	r7, [r4, #286]	; 0x11e
900056ce:	f8a4 5128 	strh.w	r5, [r4, #296]	; 0x128
        rect.x = x;
900056d2:	f8c4 50fc 	str.w	r5, [r4, #252]	; 0xfc
900056d6:	e9c4 5532 	strd	r5, r5, [r4, #200]	; 0xc8
900056da:	e9c4 5534 	strd	r5, r5, [r4, #208]	; 0xd0
          nextSibling(0),
900056de:	e9c4 5536 	strd	r5, r5, [r4, #216]	; 0xd8
          cachedAbsX(0),
900056e2:	e9c4 5538 	strd	r5, r5, [r4, #224]	; 0xe0
          nextSibling(0),
900056e6:	e9c4 5543 	strd	r5, r5, [r4, #268]	; 0x10c
          cachedAbsX(0),
900056ea:	e9c4 5545 	strd	r5, r5, [r4, #276]	; 0x114
        : color(col)
900056ee:	e9c4 5548 	strd	r5, r5, [r4, #288]	; 0x120
        : color(0)
900056f2:	e9c4 554b 	strd	r5, r5, [r4, #300]	; 0x12c
900056f6:	e9c4 554d 	strd	r5, r5, [r4, #308]	; 0x134
        rect.x = x;
900056fa:	e9c4 5540 	strd	r5, r5, [r4, #256]	; 0x100
900056fe:	f8c4 5108 	str.w	r5, [r4, #264]	; 0x108
        T::add(borderBox);
90005702:	f00a fbbd 	bl	9000fe80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005706:	f04f 33ff 	mov.w	r3, #4294967295
          touchable(false),
9000570a:	f8a4 6160 	strh.w	r6, [r4, #352]	; 0x160
        container.add(d);
9000570e:	f104 0140 	add.w	r1, r4, #64	; 0x40
        rect.x = x;
90005712:	4e52      	ldr	r6, [pc, #328]	; (9000585c <_ZN26screen_game_selectViewBaseC1Ev+0x240>)
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005714:	f8c4 7172 	str.w	r7, [r4, #370]	; 0x172
90005718:	1d27      	adds	r7, r4, #4
        : color(col)
9000571a:	f8c4 516c 	str.w	r5, [r4, #364]	; 0x16c
9000571e:	4638      	mov	r0, r7
90005720:	f8a4 5170 	strh.w	r5, [r4, #368]	; 0x170
              text(0)
90005724:	f8c4 5180 	str.w	r5, [r4, #384]	; 0x180
        : pobject(pObject), pmemfun(pmemfun_1)
90005728:	f8c4 5190 	str.w	r5, [r4, #400]	; 0x190
9000572c:	6465      	str	r5, [r4, #68]	; 0x44
9000572e:	f8c4 4188 	str.w	r4, [r4, #392]	; 0x188
90005732:	64a6      	str	r6, [r4, #72]	; 0x48
90005734:	f8c4 9164 	str.w	r9, [r4, #356]	; 0x164
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005738:	e9c4 535e 	strd	r5, r3, [r4, #376]	; 0x178
9000573c:	4b48      	ldr	r3, [pc, #288]	; (90005860 <_ZN26screen_game_selectViewBaseC1Ev+0x244>)
9000573e:	f8c4 3184 	str.w	r3, [r4, #388]	; 0x184
90005742:	4b48      	ldr	r3, [pc, #288]	; (90005864 <_ZN26screen_game_selectViewBaseC1Ev+0x248>)
90005744:	f8c4 318c 	str.w	r3, [r4, #396]	; 0x18c
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005748:	4b47      	ldr	r3, [pc, #284]	; (90005868 <_ZN26screen_game_selectViewBaseC1Ev+0x24c>)
9000574a:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
9000574e:	f64f 73ff 	movw	r3, #65535	; 0xffff
90005752:	f8a4 3168 	strh.w	r3, [r4, #360]	; 0x168
        color = newColor;
90005756:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        : x(0), y(0), width(0), height(0)
9000575a:	e9c4 5550 	strd	r5, r5, [r4, #320]	; 0x140
9000575e:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
          nextSibling(0),
90005762:	e9c4 5554 	strd	r5, r5, [r4, #336]	; 0x150
          cachedAbsX(0),
90005766:	e9c4 5556 	strd	r5, r5, [r4, #344]	; 0x158
9000576a:	66a3      	str	r3, [r4, #104]	; 0x68
9000576c:	f00a fb88 	bl	9000fe80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005770:	4b3e      	ldr	r3, [pc, #248]	; (9000586c <_ZN26screen_game_selectViewBaseC1Ev+0x250>)
90005772:	f104 016c 	add.w	r1, r4, #108	; 0x6c
90005776:	4638      	mov	r0, r7
90005778:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
        rect.x = x;
9000577c:	e9c4 561c 	strd	r5, r6, [r4, #112]	; 0x70
90005780:	f00a fb7e 	bl	9000fe80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderUp = borderColorReleased;
90005784:	493a      	ldr	r1, [pc, #232]	; (90005870 <_ZN26screen_game_selectViewBaseC1Ev+0x254>)
90005786:	4b3b      	ldr	r3, [pc, #236]	; (90005874 <_ZN26screen_game_selectViewBaseC1Ev+0x258>)
90005788:	f8c4 1134 	str.w	r1, [r4, #308]	; 0x134
        borderDown = borderColorPressed;
9000578c:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
90005790:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
90005794:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
90005798:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
9000579c:	4b36      	ldr	r3, [pc, #216]	; (90005878 <_ZN26screen_game_selectViewBaseC1Ev+0x25c>)
        down = colorPressed;
9000579e:	4a37      	ldr	r2, [pc, #220]	; (9000587c <_ZN26screen_game_selectViewBaseC1Ev+0x260>)
900057a0:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
        borderDown = borderColorPressed;
900057a4:	f8c4 1138 	str.w	r1, [r4, #312]	; 0x138
        down = colorPressed;
900057a8:	4b35      	ldr	r3, [pc, #212]	; (90005880 <_ZN26screen_game_selectViewBaseC1Ev+0x264>)
        borderBox.setColor(T::getPressed() ? down : up);
900057aa:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
900057ae:	f8c4 50fc 	str.w	r5, [r4, #252]	; 0xfc
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
900057b2:	f8a4 5128 	strh.w	r5, [r4, #296]	; 0x128
900057b6:	f504 759e 	add.w	r5, r4, #316	; 0x13c
        down = colorPressed;
900057ba:	e9c4 324b 	strd	r3, r2, [r4, #300]	; 0x12c
        borderBox.setColor(T::getPressed() ? down : up);
900057be:	2900      	cmp	r1, #0
900057c0:	d03e      	beq.n	90005840 <_ZN26screen_game_selectViewBaseC1Ev+0x224>
900057c2:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
900057c4:	f504 729c 	add.w	r2, r4, #312	; 0x138
900057c8:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
900057cc:	2600      	movs	r6, #0
900057ce:	6813      	ldr	r3, [r2, #0]
    btn_asteroids.add(_btn_asteroids);
900057d0:	4651      	mov	r1, sl
900057d2:	4640      	mov	r0, r8
900057d4:	f8c4 60c8 	str.w	r6, [r4, #200]	; 0xc8
        borderColor = colorBorder;
900057d8:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
    _btn_asteroids.setAction(flexButtonCallback);
900057dc:	f504 73c2 	add.w	r3, r4, #388	; 0x184
        action = &callback;
900057e0:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
900057e4:	4b23      	ldr	r3, [pc, #140]	; (90005874 <_ZN26screen_game_selectViewBaseC1Ev+0x258>)
900057e6:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
    btn_asteroids.add(_btn_asteroids);
900057ea:	f00a fb49 	bl	9000fe80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900057ee:	4b25      	ldr	r3, [pc, #148]	; (90005884 <_ZN26screen_game_selectViewBaseC1Ev+0x268>)
        linespace = space;
900057f0:	f8a4 6170 	strh.w	r6, [r4, #368]	; 0x170
        boundingArea = calculateBoundingArea();
900057f4:	466e      	mov	r6, sp
900057f6:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
        color = newColor;
900057fa:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
900057fe:	4629      	mov	r1, r5
90005800:	4630      	mov	r0, r6
        color = newColor;
90005802:	f8c4 316c 	str.w	r3, [r4, #364]	; 0x16c
        boundingArea = calculateBoundingArea();
90005806:	f00c faeb 	bl	90011de0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
9000580a:	2203      	movs	r2, #3
9000580c:	f105 033c 	add.w	r3, r5, #60	; 0x3c
90005810:	f8cd 9010 	str.w	r9, [sp, #16]
90005814:	f8ad 2014 	strh.w	r2, [sp, #20]
90005818:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
9000581c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_asteroids.setTypedText(touchgfx::TypedText(T___SINGLEUSE_19SB));
90005820:	a904      	add	r1, sp, #16
90005822:	4628      	mov	r0, r5
90005824:	f00c fd84 	bl	90012330 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    btn_asteroids.add(lbl_asteroids);
90005828:	4629      	mov	r1, r5
9000582a:	4640      	mov	r0, r8
9000582c:	f00a fb28 	bl	9000fe80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005830:	4638      	mov	r0, r7
90005832:	4641      	mov	r1, r8
90005834:	f00a fb24 	bl	9000fe80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90005838:	4620      	mov	r0, r4
9000583a:	b006      	add	sp, #24
9000583c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90005840:	f504 729a 	add.w	r2, r4, #308	; 0x134
90005844:	e7c0      	b.n	900057c8 <_ZN26screen_game_selectViewBaseC1Ev+0x1ac>
90005846:	bf00      	nop
90005848:	9002a67c 	.word	0x9002a67c
9000584c:	90029d58 	.word	0x90029d58
90005850:	9002a24c 	.word	0x9002a24c
90005854:	90029ca4 	.word	0x90029ca4
90005858:	9002a6e4 	.word	0x9002a6e4
9000585c:	011001e0 	.word	0x011001e0
90005860:	90029d40 	.word	0x90029d40
90005864:	900054b9 	.word	0x900054b9
90005868:	9002a5ec 	.word	0x9002a5ec
9000586c:	ff3d3d3d 	.word	0xff3d3d3d
90005870:	ff003366 	.word	0xff003366
90005874:	003800f0 	.word	0x003800f0
90005878:	0014000f 	.word	0x0014000f
9000587c:	ff7a7a05 	.word	0xff7a7a05
90005880:	ffc7c73c 	.word	0xffc7c73c
90005884:	0008001b 	.word	0x0008001b
90005888:	90029014 	.word	0x90029014

9000588c <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
9000588c:	4770      	bx	lr
9000588e:	bf00      	nop

90005890 <_ZN19FrontendApplicationD0Ev>:
90005890:	b510      	push	{r4, lr}
90005892:	4604      	mov	r4, r0
90005894:	f44f 71ae 	mov.w	r1, #348	; 0x15c
90005898:	f020 fce3 	bl	90026262 <_ZdlPvj>
9000589c:	4620      	mov	r0, r4
9000589e:	bd10      	pop	{r4, pc}

900058a0 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
900058a0:	b510      	push	{r4, lr}
900058a2:	4604      	mov	r4, r0
    {
        model.tick();
900058a4:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
900058a8:	f000 f892 	bl	900059d0 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
900058ac:	4620      	mov	r0, r4
    }
900058ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
900058b2:	f00f bc0b 	b.w	900150cc <_ZN8touchgfx11Application15handleTickEventEv>
900058b6:	bf00      	nop

900058b8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
900058b8:	b510      	push	{r4, lr}
900058ba:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
900058bc:	f7fe fcbe 	bl	9000423c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
900058c0:	4b01      	ldr	r3, [pc, #4]	; (900058c8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
900058c2:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
900058c4:	6023      	str	r3, [r4, #0]
}
900058c6:	bd10      	pop	{r4, pc}
900058c8:	90029d8c 	.word	0x90029d8c

900058cc <_ZN13ModelListener9move_shipEv>:
    }

    virtual void move_ship(){}
900058cc:	4770      	bx	lr
900058ce:	bf00      	nop

900058d0 <_ZN13ModelListener12move_bulletsEv>:
    virtual void move_bullets(){}
900058d0:	4770      	bx	lr
900058d2:	bf00      	nop

900058d4 <_ZN13ModelListener10move_rocksEv>:
    virtual void move_rocks(){}
900058d4:	4770      	bx	lr
900058d6:	bf00      	nop

900058d8 <_ZN13ModelListener25is_asteroids_game_startedEv>:

    virtual bool is_asteroids_game_started() {return false;}
900058d8:	2000      	movs	r0, #0
900058da:	4770      	bx	lr

900058dc <_ZN13ModelListener21check_ship_collisionsEv>:

    virtual void check_ship_collisions(){}
900058dc:	4770      	bx	lr
900058de:	bf00      	nop

900058e0 <_ZN13ModelListener23check_bullet_collisionsEv>:
    virtual void check_bullet_collisions(){}
900058e0:	4770      	bx	lr
900058e2:	bf00      	nop

900058e4 <_ZN13ModelListener20set_allowed_to_shootEb>:

    virtual void set_allowed_to_shoot(bool value){}
900058e4:	4770      	bx	lr
900058e6:	bf00      	nop

900058e8 <_ZN13ModelListener14set_invincibleEb>:

    virtual void set_invincible(bool value){}
900058e8:	4770      	bx	lr
900058ea:	bf00      	nop

900058ec <_ZN5ModelC1Ev>:

	extern osSemaphoreId_t invincibility_timer_started_semaphoreHandle;
	extern osSemaphoreId_t invincibility_timer_ended_semaphoreHandle;
}

Model::Model() : modelListener(0)
900058ec:	2200      	movs	r2, #0
900058ee:	6002      	str	r2, [r0, #0]
{

}
900058f0:	4770      	bx	lr
900058f2:	bf00      	nop

900058f4 <_ZN5Model14asteroids_tickEv>:
	if( modelListener->is_asteroids_game_started() ) {
		asteroids_tick();
	}
}

void Model::asteroids_tick() {
900058f4:	b570      	push	{r4, r5, r6, lr}
	osSemaphoreAcquire(bullet_timer_started_semaphoreHandle, 0U);
}

void Model::bullet_timer_ended()
{
	if( osSemaphoreGetCount(bullet_timer_ended_semaphoreHandle) == 0 ) {
900058f6:	4d2d      	ldr	r5, [pc, #180]	; (900059ac <_ZN5Model14asteroids_tickEv+0xb8>)
void Model::asteroids_tick() {
900058f8:	4604      	mov	r4, r0
	if( osSemaphoreGetCount(bullet_timer_ended_semaphoreHandle) == 0 ) {
900058fa:	6828      	ldr	r0, [r5, #0]
900058fc:	f007 fc56 	bl	9000d1ac <osSemaphoreGetCount>
90005900:	b1e0      	cbz	r0, 9000593c <_ZN5Model14asteroids_tickEv+0x48>
	osSemaphoreAcquire(invincibility_timer_started_semaphoreHandle, 0U);
}

void Model::invincibility_timer_ended()
{
	if( osSemaphoreGetCount(invincibility_timer_ended_semaphoreHandle) == 0 ) {
90005902:	4e2b      	ldr	r6, [pc, #172]	; (900059b0 <_ZN5Model14asteroids_tickEv+0xbc>)
90005904:	6830      	ldr	r0, [r6, #0]
90005906:	f007 fc51 	bl	9000d1ac <osSemaphoreGetCount>
9000590a:	4605      	mov	r5, r0
9000590c:	b310      	cbz	r0, 90005954 <_ZN5Model14asteroids_tickEv+0x60>
	modelListener->move_ship();
9000590e:	6820      	ldr	r0, [r4, #0]
90005910:	6803      	ldr	r3, [r0, #0]
90005912:	689a      	ldr	r2, [r3, #8]
90005914:	4927      	ldr	r1, [pc, #156]	; (900059b4 <_ZN5Model14asteroids_tickEv+0xc0>)
90005916:	428a      	cmp	r2, r1
90005918:	d128      	bne.n	9000596c <_ZN5Model14asteroids_tickEv+0x78>
	modelListener->move_bullets();
9000591a:	68da      	ldr	r2, [r3, #12]
9000591c:	4926      	ldr	r1, [pc, #152]	; (900059b8 <_ZN5Model14asteroids_tickEv+0xc4>)
9000591e:	428a      	cmp	r2, r1
90005920:	d12b      	bne.n	9000597a <_ZN5Model14asteroids_tickEv+0x86>
	modelListener->move_rocks();
90005922:	691a      	ldr	r2, [r3, #16]
90005924:	4925      	ldr	r1, [pc, #148]	; (900059bc <_ZN5Model14asteroids_tickEv+0xc8>)
90005926:	428a      	cmp	r2, r1
90005928:	d12e      	bne.n	90005988 <_ZN5Model14asteroids_tickEv+0x94>
	modelListener->check_bullet_collisions();
9000592a:	69da      	ldr	r2, [r3, #28]
9000592c:	4924      	ldr	r1, [pc, #144]	; (900059c0 <_ZN5Model14asteroids_tickEv+0xcc>)
9000592e:	428a      	cmp	r2, r1
90005930:	d131      	bne.n	90005996 <_ZN5Model14asteroids_tickEv+0xa2>
	modelListener->check_ship_collisions();
90005932:	699b      	ldr	r3, [r3, #24]
90005934:	4a23      	ldr	r2, [pc, #140]	; (900059c4 <_ZN5Model14asteroids_tickEv+0xd0>)
90005936:	4293      	cmp	r3, r2
90005938:	d134      	bne.n	900059a4 <_ZN5Model14asteroids_tickEv+0xb0>
}
9000593a:	bd70      	pop	{r4, r5, r6, pc}
		osSemaphoreRelease(bullet_timer_ended_semaphoreHandle);
9000593c:	6828      	ldr	r0, [r5, #0]
9000593e:	f007 fc09 	bl	9000d154 <osSemaphoreRelease>
		modelListener->set_allowed_to_shoot(true);
90005942:	6820      	ldr	r0, [r4, #0]
90005944:	4a20      	ldr	r2, [pc, #128]	; (900059c8 <_ZN5Model14asteroids_tickEv+0xd4>)
90005946:	6803      	ldr	r3, [r0, #0]
90005948:	6a1b      	ldr	r3, [r3, #32]
9000594a:	4293      	cmp	r3, r2
9000594c:	d0d9      	beq.n	90005902 <_ZN5Model14asteroids_tickEv+0xe>
9000594e:	2101      	movs	r1, #1
90005950:	4798      	blx	r3
90005952:	e7d6      	b.n	90005902 <_ZN5Model14asteroids_tickEv+0xe>
		osSemaphoreRelease(invincibility_timer_ended_semaphoreHandle);
90005954:	6830      	ldr	r0, [r6, #0]
90005956:	f007 fbfd 	bl	9000d154 <osSemaphoreRelease>
		modelListener->set_invincible(false);
9000595a:	6820      	ldr	r0, [r4, #0]
9000595c:	491b      	ldr	r1, [pc, #108]	; (900059cc <_ZN5Model14asteroids_tickEv+0xd8>)
9000595e:	6803      	ldr	r3, [r0, #0]
90005960:	6a5a      	ldr	r2, [r3, #36]	; 0x24
90005962:	428a      	cmp	r2, r1
90005964:	d0d5      	beq.n	90005912 <_ZN5Model14asteroids_tickEv+0x1e>
90005966:	4629      	mov	r1, r5
90005968:	4790      	blx	r2
9000596a:	e7d0      	b.n	9000590e <_ZN5Model14asteroids_tickEv+0x1a>
	modelListener->move_ship();
9000596c:	4790      	blx	r2
	modelListener->move_bullets();
9000596e:	6820      	ldr	r0, [r4, #0]
90005970:	4911      	ldr	r1, [pc, #68]	; (900059b8 <_ZN5Model14asteroids_tickEv+0xc4>)
90005972:	6803      	ldr	r3, [r0, #0]
90005974:	68da      	ldr	r2, [r3, #12]
90005976:	428a      	cmp	r2, r1
90005978:	d0d3      	beq.n	90005922 <_ZN5Model14asteroids_tickEv+0x2e>
9000597a:	4790      	blx	r2
	modelListener->move_rocks();
9000597c:	6820      	ldr	r0, [r4, #0]
9000597e:	490f      	ldr	r1, [pc, #60]	; (900059bc <_ZN5Model14asteroids_tickEv+0xc8>)
90005980:	6803      	ldr	r3, [r0, #0]
90005982:	691a      	ldr	r2, [r3, #16]
90005984:	428a      	cmp	r2, r1
90005986:	d0d0      	beq.n	9000592a <_ZN5Model14asteroids_tickEv+0x36>
90005988:	4790      	blx	r2
	modelListener->check_bullet_collisions();
9000598a:	6820      	ldr	r0, [r4, #0]
9000598c:	490c      	ldr	r1, [pc, #48]	; (900059c0 <_ZN5Model14asteroids_tickEv+0xcc>)
9000598e:	6803      	ldr	r3, [r0, #0]
90005990:	69da      	ldr	r2, [r3, #28]
90005992:	428a      	cmp	r2, r1
90005994:	d0cd      	beq.n	90005932 <_ZN5Model14asteroids_tickEv+0x3e>
90005996:	4790      	blx	r2
	modelListener->check_ship_collisions();
90005998:	6820      	ldr	r0, [r4, #0]
9000599a:	4a0a      	ldr	r2, [pc, #40]	; (900059c4 <_ZN5Model14asteroids_tickEv+0xd0>)
9000599c:	6803      	ldr	r3, [r0, #0]
9000599e:	699b      	ldr	r3, [r3, #24]
900059a0:	4293      	cmp	r3, r2
900059a2:	d0ca      	beq.n	9000593a <_ZN5Model14asteroids_tickEv+0x46>
}
900059a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	modelListener->check_ship_collisions();
900059a8:	4718      	bx	r3
900059aa:	bf00      	nop
900059ac:	240091e4 	.word	0x240091e4
900059b0:	24009490 	.word	0x24009490
900059b4:	900058cd 	.word	0x900058cd
900059b8:	900058d1 	.word	0x900058d1
900059bc:	900058d5 	.word	0x900058d5
900059c0:	900058e1 	.word	0x900058e1
900059c4:	900058dd 	.word	0x900058dd
900059c8:	900058e5 	.word	0x900058e5
900059cc:	900058e9 	.word	0x900058e9

900059d0 <_ZN5Model4tickEv>:
{
900059d0:	b510      	push	{r4, lr}
900059d2:	4604      	mov	r4, r0
	if( modelListener->is_asteroids_game_started() ) {
900059d4:	6800      	ldr	r0, [r0, #0]
900059d6:	4a07      	ldr	r2, [pc, #28]	; (900059f4 <_ZN5Model4tickEv+0x24>)
900059d8:	6803      	ldr	r3, [r0, #0]
900059da:	695b      	ldr	r3, [r3, #20]
900059dc:	4293      	cmp	r3, r2
900059de:	d100      	bne.n	900059e2 <_ZN5Model4tickEv+0x12>
}
900059e0:	bd10      	pop	{r4, pc}
	if( modelListener->is_asteroids_game_started() ) {
900059e2:	4798      	blx	r3
900059e4:	2800      	cmp	r0, #0
900059e6:	d0fb      	beq.n	900059e0 <_ZN5Model4tickEv+0x10>
		asteroids_tick();
900059e8:	4620      	mov	r0, r4
}
900059ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		asteroids_tick();
900059ee:	f7ff bf81 	b.w	900058f4 <_ZN5Model14asteroids_tickEv>
900059f2:	bf00      	nop
900059f4:	900058d9 	.word	0x900058d9

900059f8 <_ZN5Model18start_bullet_timerEv>:
	osSemaphoreAcquire(bullet_timer_started_semaphoreHandle, 0U);
900059f8:	4b02      	ldr	r3, [pc, #8]	; (90005a04 <_ZN5Model18start_bullet_timerEv+0xc>)
900059fa:	2100      	movs	r1, #0
900059fc:	6818      	ldr	r0, [r3, #0]
900059fe:	f007 bb75 	b.w	9000d0ec <osSemaphoreAcquire>
90005a02:	bf00      	nop
90005a04:	240091e8 	.word	0x240091e8

90005a08 <_ZN5Model25start_invincibility_timerEv>:
	osSemaphoreAcquire(invincibility_timer_started_semaphoreHandle, 0U);
90005a08:	4b02      	ldr	r3, [pc, #8]	; (90005a14 <_ZN5Model25start_invincibility_timerEv+0xc>)
90005a0a:	2100      	movs	r1, #0
90005a0c:	6818      	ldr	r0, [r3, #0]
90005a0e:	f007 bb6d 	b.w	9000d0ec <osSemaphoreAcquire>
90005a12:	bf00      	nop
90005a14:	24009494 	.word	0x24009494

90005a18 <_ZN25screen_asteroidsPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_asteroidsPresenter() {}
90005a18:	4770      	bx	lr
90005a1a:	bf00      	nop

90005a1c <_ZThn4_N25screen_asteroidsPresenterD1Ev>:
90005a1c:	3804      	subs	r0, #4
90005a1e:	4770      	bx	lr

90005a20 <_ZN25screen_asteroidsPresenter10deactivateEv>:
}

void screen_asteroidsPresenter::activate()
{

}
90005a20:	4770      	bx	lr
90005a22:	bf00      	nop

90005a24 <_ZN25screen_asteroidsPresenter25is_asteroids_game_startedEv>:


bool screen_asteroidsPresenter::is_asteroids_game_started()
{
	return game_started;
}
90005a24:	7e40      	ldrb	r0, [r0, #25]
90005a26:	4770      	bx	lr

90005a28 <_ZN25screen_asteroidsPresenter20start_asteroids_gameEv>:

void screen_asteroidsPresenter::start_asteroids_game()
{
	init_game();
90005a28:	6803      	ldr	r3, [r0, #0]
90005a2a:	6a1b      	ldr	r3, [r3, #32]
90005a2c:	4718      	bx	r3
90005a2e:	bf00      	nop

90005a30 <_ZN25screen_asteroidsPresenter9game_overEv>:

void screen_asteroidsPresenter::game_over()
{
	game_started = false;

	if( score > high_score )
90005a30:	e9d0 3204 	ldrd	r3, r2, [r0, #16]
	game_started = false;
90005a34:	2100      	movs	r1, #0
	if( score > high_score )
90005a36:	4293      	cmp	r3, r2
	game_started = false;
90005a38:	7641      	strb	r1, [r0, #25]
		high_score = score;
90005a3a:	bf88      	it	hi
90005a3c:	6143      	strhi	r3, [r0, #20]

	view.show_endgame_screen();
90005a3e:	69c0      	ldr	r0, [r0, #28]
90005a40:	6803      	ldr	r3, [r0, #0]
90005a42:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90005a44:	4718      	bx	r3
90005a46:	bf00      	nop

90005a48 <_ZN25screen_asteroidsPresenter9move_shipEv>:
	// start the game
	game_started = true;
}

void screen_asteroidsPresenter::move_ship()
{
90005a48:	b5f0      	push	{r4, r5, r6, r7, lr}
90005a4a:	4604      	mov	r4, r0
	int old_x, old_y;

	view.getShipPosition(&old_x, &old_y);
90005a4c:	69c0      	ldr	r0, [r0, #28]
{
90005a4e:	b083      	sub	sp, #12
	view.getShipPosition(&old_x, &old_y);
90005a50:	6803      	ldr	r3, [r0, #0]
90005a52:	aa01      	add	r2, sp, #4
90005a54:	4669      	mov	r1, sp
90005a56:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90005a58:	4798      	blx	r3

	int new_x = old_x;
	int new_y = old_y;

	ShipDirection ship_direction = view.get_ship_direction();
90005a5a:	69e0      	ldr	r0, [r4, #28]
90005a5c:	6803      	ldr	r3, [r0, #0]
90005a5e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
	int new_y = old_y;
90005a60:	e9dd 5600 	ldrd	r5, r6, [sp]
	ShipDirection ship_direction = view.get_ship_direction();
90005a64:	4798      	blx	r3

	switch(ship_direction) {
90005a66:	2803      	cmp	r0, #3
90005a68:	d805      	bhi.n	90005a76 <_ZN25screen_asteroidsPresenter9move_shipEv+0x2e>
90005a6a:	e8df f000 	tbb	[pc, r0]
90005a6e:	2629      	.short	0x2629
90005a70:	2302      	.short	0x2302
		case ShipDirection::LEFT: {
			new_x = old_x - SHIP_MOVES_PER_TICK;
90005a72:	9d00      	ldr	r5, [sp, #0]
90005a74:	3d05      	subs	r5, #5
		default: {
			break;
		}
	}

	Drawable *ship = view.get_ship_pointer();
90005a76:	69e0      	ldr	r0, [r4, #28]
90005a78:	6803      	ldr	r3, [r0, #0]
90005a7a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
90005a7c:	4798      	blx	r3

	view.move_ship((new_x > (SCREEN_WIDTH - ship->getWidth()) || new_x < 0) ? old_x : new_x, (new_y > (SCREEN_HEIGHT - ship->getHeight()) || new_y < 0) ? old_y : new_y);
90005a7e:	69e4      	ldr	r4, [r4, #28]
90005a80:	6823      	ldr	r3, [r4, #0]
90005a82:	6d1f      	ldr	r7, [r3, #80]	; 0x50
90005a84:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90005a88:	f5c3 73f0 	rsb	r3, r3, #480	; 0x1e0
90005a8c:	42ab      	cmp	r3, r5
90005a8e:	db01      	blt.n	90005a94 <_ZN25screen_asteroidsPresenter9move_shipEv+0x4c>
90005a90:	2d00      	cmp	r5, #0
90005a92:	da00      	bge.n	90005a96 <_ZN25screen_asteroidsPresenter9move_shipEv+0x4e>
90005a94:	9d00      	ldr	r5, [sp, #0]
90005a96:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90005a9a:	f5c3 7388 	rsb	r3, r3, #272	; 0x110
90005a9e:	42b3      	cmp	r3, r6
90005aa0:	db01      	blt.n	90005aa6 <_ZN25screen_asteroidsPresenter9move_shipEv+0x5e>
90005aa2:	2e00      	cmp	r6, #0
90005aa4:	da00      	bge.n	90005aa8 <_ZN25screen_asteroidsPresenter9move_shipEv+0x60>
90005aa6:	9e01      	ldr	r6, [sp, #4]
90005aa8:	4632      	mov	r2, r6
90005aaa:	4629      	mov	r1, r5
90005aac:	4620      	mov	r0, r4
90005aae:	47b8      	blx	r7
}
90005ab0:	b003      	add	sp, #12
90005ab2:	bdf0      	pop	{r4, r5, r6, r7, pc}
			new_x = old_x + SHIP_MOVES_PER_TICK;
90005ab4:	9d00      	ldr	r5, [sp, #0]
90005ab6:	3505      	adds	r5, #5
			break;
90005ab8:	e7dd      	b.n	90005a76 <_ZN25screen_asteroidsPresenter9move_shipEv+0x2e>
			new_y = old_y + SHIP_MOVES_PER_TICK;
90005aba:	9e01      	ldr	r6, [sp, #4]
90005abc:	3605      	adds	r6, #5
			break;
90005abe:	e7da      	b.n	90005a76 <_ZN25screen_asteroidsPresenter9move_shipEv+0x2e>
			new_y = old_y - SHIP_MOVES_PER_TICK;
90005ac0:	9e01      	ldr	r6, [sp, #4]
90005ac2:	3e05      	subs	r6, #5
			break;
90005ac4:	e7d7      	b.n	90005a76 <_ZN25screen_asteroidsPresenter9move_shipEv+0x2e>
90005ac6:	bf00      	nop

90005ac8 <_ZThn4_N25screen_asteroidsPresenter9move_shipEv>:
    virtual bool is_invincible();

    /*
     * SHIP STUFF
     */
    virtual void move_ship();
90005ac8:	f1a0 0004 	sub.w	r0, r0, #4
90005acc:	f7ff bfbc 	b.w	90005a48 <_ZN25screen_asteroidsPresenter9move_shipEv>

90005ad0 <_ZN25screen_asteroidsPresenter10move_rocksEv>:


void screen_asteroidsPresenter::move_rocks()
{
90005ad0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005ad4:	f242 1754 	movw	r7, #8532	; 0x2154
90005ad8:	b083      	sub	sp, #12
	for(int i = 0; i < ROCK_COUNT; i++) {
90005ada:	2500      	movs	r5, #0
        return visible;
90005adc:	f04f 092c 	mov.w	r9, #44	; 0x2c
{
90005ae0:	4682      	mov	sl, r0
        return rect.y;
90005ae2:	f242 1b5a 	movw	fp, #8538	; 0x215a
90005ae6:	9701      	str	r7, [sp, #4]
90005ae8:	e01f      	b.n	90005b2a <_ZN25screen_asteroidsPresenter10move_rocksEv+0x5a>

			continue;
		}

		// move the rock
		view.move_rock(rock, rock->getX(), rock->getY() + ROCK_MOVES_PER_TICK);
90005aea:	f936 300b 	ldrsh.w	r3, [r6, fp]
90005aee:	6827      	ldr	r7, [r4, #0]
90005af0:	3301      	adds	r3, #1
90005af2:	5eb2      	ldrsh	r2, [r6, r2]
90005af4:	6e7f      	ldr	r7, [r7, #100]	; 0x64
90005af6:	47b8      	blx	r7

		// check if rock is offscreen
		if( rock->getY() > SCREEN_HEIGHT ) {
90005af8:	f936 300b 	ldrsh.w	r3, [r6, fp]
			// remove the rock
			view.move_rock_offscreen(rock);
90005afc:	4641      	mov	r1, r8
		if( rock->getY() > SCREEN_HEIGHT ) {
90005afe:	f5b3 7f88 	cmp.w	r3, #272	; 0x110
90005b02:	dd04      	ble.n	90005b0e <_ZN25screen_asteroidsPresenter10move_rocksEv+0x3e>
			view.move_rock_offscreen(rock);
90005b04:	f8da 001c 	ldr.w	r0, [sl, #28]
90005b08:	6803      	ldr	r3, [r0, #0]
90005b0a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90005b0c:	4798      	blx	r3
        return parent;
90005b0e:	f242 1368 	movw	r3, #8552	; 0x2168
90005b12:	fb09 4405 	mla	r4, r9, r5, r4
90005b16:	58e0      	ldr	r0, [r4, r3]
		}
		rock->getParent()->invalidateContent();
90005b18:	6803      	ldr	r3, [r0, #0]
90005b1a:	699b      	ldr	r3, [r3, #24]
90005b1c:	4798      	blx	r3
	for(int i = 0; i < ROCK_COUNT; i++) {
90005b1e:	9b01      	ldr	r3, [sp, #4]
90005b20:	3501      	adds	r5, #1
90005b22:	332c      	adds	r3, #44	; 0x2c
90005b24:	2d0a      	cmp	r5, #10
90005b26:	9301      	str	r3, [sp, #4]
90005b28:	d013      	beq.n	90005b52 <_ZN25screen_asteroidsPresenter10move_rocksEv+0x82>
		touchgfx::ScalableImage *rock = &view.rocks[i];
90005b2a:	f8da 401c 	ldr.w	r4, [sl, #28]
        return rect.x;
90005b2e:	f242 1258 	movw	r2, #8536	; 0x2158
90005b32:	9b01      	ldr	r3, [sp, #4]
        return visible;
90005b34:	fb09 4605 	mla	r6, r9, r5, r4
		view.move_rock(rock, rock->getX(), rock->getY() + ROCK_MOVES_PER_TICK);
90005b38:	4620      	mov	r0, r4
		touchgfx::ScalableImage *rock = &view.rocks[i];
90005b3a:	eb04 0803 	add.w	r8, r4, r3
		if( !rock->isVisible() ) {
90005b3e:	f242 1379 	movw	r3, #8569	; 0x2179
90005b42:	5cf3      	ldrb	r3, [r6, r3]
		view.move_rock(rock, rock->getX(), rock->getY() + ROCK_MOVES_PER_TICK);
90005b44:	4641      	mov	r1, r8
		if( !rock->isVisible() ) {
90005b46:	2b00      	cmp	r3, #0
90005b48:	d1cf      	bne.n	90005aea <_ZN25screen_asteroidsPresenter10move_rocksEv+0x1a>
			view.new_rock_position(rock);
90005b4a:	6823      	ldr	r3, [r4, #0]
90005b4c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
90005b4e:	4798      	blx	r3
			continue;
90005b50:	e7e5      	b.n	90005b1e <_ZN25screen_asteroidsPresenter10move_rocksEv+0x4e>
	}
}
90005b52:	b003      	add	sp, #12
90005b54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90005b58 <_ZThn4_N25screen_asteroidsPresenter10move_rocksEv>:


    /*
     * ROCK STUFF
     */
    virtual void move_rocks();
90005b58:	f1a0 0004 	sub.w	r0, r0, #4
90005b5c:	f7ff bfb8 	b.w	90005ad0 <_ZN25screen_asteroidsPresenter10move_rocksEv>

90005b60 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv>:
}

Drawable* screen_asteroidsPresenter::get_next_invisible_bullet()
{
	for(int i = 0; i < BULLET_COUNT; i++) {
		if( !view.bullets[i].isVisible() )
90005b60:	69c2      	ldr	r2, [r0, #28]
90005b62:	f502 5300 	add.w	r3, r2, #8192	; 0x2000
90005b66:	f893 1331 	ldrb.w	r1, [r3, #817]	; 0x331
90005b6a:	b1e9      	cbz	r1, 90005ba8 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90005b6c:	f893 135d 	ldrb.w	r1, [r3, #861]	; 0x35d
90005b70:	b1c9      	cbz	r1, 90005ba6 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x46>
90005b72:	f893 1389 	ldrb.w	r1, [r3, #905]	; 0x389
90005b76:	b1f1      	cbz	r1, 90005bb6 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x56>
90005b78:	f893 13b5 	ldrb.w	r1, [r3, #949]	; 0x3b5
90005b7c:	b1e9      	cbz	r1, 90005bba <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x5a>
90005b7e:	f893 13e1 	ldrb.w	r1, [r3, #993]	; 0x3e1
90005b82:	b1e1      	cbz	r1, 90005bbe <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x5e>
90005b84:	f893 140d 	ldrb.w	r1, [r3, #1037]	; 0x40d
90005b88:	b1d9      	cbz	r1, 90005bc2 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x62>
90005b8a:	f893 1439 	ldrb.w	r1, [r3, #1081]	; 0x439
90005b8e:	b1d1      	cbz	r1, 90005bc6 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x66>
90005b90:	f893 1465 	ldrb.w	r1, [r3, #1125]	; 0x465
90005b94:	b1c9      	cbz	r1, 90005bca <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x6a>
90005b96:	f893 1491 	ldrb.w	r1, [r3, #1169]	; 0x491
90005b9a:	b1c1      	cbz	r1, 90005bce <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x6e>
90005b9c:	f893 34bd 	ldrb.w	r3, [r3, #1213]	; 0x4bd
90005ba0:	b1bb      	cbz	r3, 90005bd2 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x72>
			return &view.bullets[i];
	}

	return NULL;
90005ba2:	2000      	movs	r0, #0
}
90005ba4:	4770      	bx	lr
	for(int i = 0; i < BULLET_COUNT; i++) {
90005ba6:	2101      	movs	r1, #1
			return &view.bullets[i];
90005ba8:	232c      	movs	r3, #44	; 0x2c
90005baa:	f242 300c 	movw	r0, #8972	; 0x230c
90005bae:	fb03 2201 	mla	r2, r3, r1, r2
90005bb2:	4410      	add	r0, r2
90005bb4:	4770      	bx	lr
	for(int i = 0; i < BULLET_COUNT; i++) {
90005bb6:	2102      	movs	r1, #2
90005bb8:	e7f6      	b.n	90005ba8 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90005bba:	2103      	movs	r1, #3
90005bbc:	e7f4      	b.n	90005ba8 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90005bbe:	2104      	movs	r1, #4
90005bc0:	e7f2      	b.n	90005ba8 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90005bc2:	2105      	movs	r1, #5
90005bc4:	e7f0      	b.n	90005ba8 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90005bc6:	2106      	movs	r1, #6
90005bc8:	e7ee      	b.n	90005ba8 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90005bca:	2107      	movs	r1, #7
90005bcc:	e7ec      	b.n	90005ba8 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90005bce:	2108      	movs	r1, #8
90005bd0:	e7ea      	b.n	90005ba8 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90005bd2:	2109      	movs	r1, #9
90005bd4:	e7e8      	b.n	90005ba8 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90005bd6:	bf00      	nop

90005bd8 <_ZN25screen_asteroidsPresenter12move_bulletsEv>:

void screen_asteroidsPresenter::move_bullets()
{
90005bd8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	shoot_bullet();
90005bdc:	6803      	ldr	r3, [r0, #0]
90005bde:	f242 360c 	movw	r6, #8972	; 0x230c

	for(int i = 0; i < BULLET_COUNT; i++) {
90005be2:	2400      	movs	r4, #0
90005be4:	f04f 0a2c 	mov.w	sl, #44	; 0x2c
90005be8:	f242 3931 	movw	r9, #9009	; 0x2331
        return rect.y;
90005bec:	f242 3812 	movw	r8, #8978	; 0x2312
	shoot_bullet();
90005bf0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
{
90005bf2:	4607      	mov	r7, r0
	shoot_bullet();
90005bf4:	4798      	blx	r3
		if( !view.bullets[i].isVisible() )
90005bf6:	69fa      	ldr	r2, [r7, #28]
        return visible;
90005bf8:	fb0a f504 	mul.w	r5, sl, r4
        return rect.x;
90005bfc:	f242 3b10 	movw	fp, #8976	; 0x2310
	for(int i = 0; i < BULLET_COUNT; i++) {
90005c00:	3401      	adds	r4, #1
        return visible;
90005c02:	eb02 0c05 	add.w	ip, r2, r5
			continue;

		// move the bullet
		view.move_bullet(&view.bullets[i], view.bullets[i].getX(), view.bullets[i].getY() - BULLET_MOVES_PER_TICK);
90005c06:	1991      	adds	r1, r2, r6
90005c08:	4610      	mov	r0, r2
		if( !view.bullets[i].isVisible() )
90005c0a:	f81c 3009 	ldrb.w	r3, [ip, r9]
90005c0e:	b1a3      	cbz	r3, 90005c3a <_ZN25screen_asteroidsPresenter12move_bulletsEv+0x62>
		view.move_bullet(&view.bullets[i], view.bullets[i].getX(), view.bullets[i].getY() - BULLET_MOVES_PER_TICK);
90005c10:	f8d2 e000 	ldr.w	lr, [r2]
90005c14:	f93c 3008 	ldrsh.w	r3, [ip, r8]
90005c18:	f93c 200b 	ldrsh.w	r2, [ip, fp]
90005c1c:	3b0a      	subs	r3, #10
90005c1e:	f8de b074 	ldr.w	fp, [lr, #116]	; 0x74
90005c22:	47d8      	blx	fp

		// check if bullet is offscreen
		if( view.bullets[i].getY() < 0 ) {
90005c24:	69fb      	ldr	r3, [r7, #28]
        return rect.y;
90005c26:	441d      	add	r5, r3
			// remove the offscreen bullet
			view.move_bullet_offscreen(&view.bullets[i]);
90005c28:	1999      	adds	r1, r3, r6
90005c2a:	4618      	mov	r0, r3
		if( view.bullets[i].getY() < 0 ) {
90005c2c:	f935 2008 	ldrsh.w	r2, [r5, r8]
90005c30:	2a00      	cmp	r2, #0
90005c32:	da02      	bge.n	90005c3a <_ZN25screen_asteroidsPresenter12move_bulletsEv+0x62>
			view.move_bullet_offscreen(&view.bullets[i]);
90005c34:	681b      	ldr	r3, [r3, #0]
90005c36:	6f1b      	ldr	r3, [r3, #112]	; 0x70
90005c38:	4798      	blx	r3
	for(int i = 0; i < BULLET_COUNT; i++) {
90005c3a:	2c0a      	cmp	r4, #10
90005c3c:	f106 062c 	add.w	r6, r6, #44	; 0x2c
90005c40:	d1d9      	bne.n	90005bf6 <_ZN25screen_asteroidsPresenter12move_bulletsEv+0x1e>
		}
	}
}
90005c42:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
90005c46:	bf00      	nop

90005c48 <_ZThn4_N25screen_asteroidsPresenter12move_bulletsEv>:


    /*
     * BULLET STUFF
     */
    virtual void move_bullets();
90005c48:	f1a0 0004 	sub.w	r0, r0, #4
90005c4c:	f7ff bfc4 	b.w	90005bd8 <_ZN25screen_asteroidsPresenter12move_bulletsEv>

90005c50 <_ZN25screen_asteroidsPresenter19is_allowed_to_shootEv>:

bool screen_asteroidsPresenter::is_allowed_to_shoot()
{
	return allowed_to_shoot;
}
90005c50:	7e80      	ldrb	r0, [r0, #26]
90005c52:	4770      	bx	lr

90005c54 <_ZN25screen_asteroidsPresenter20set_allowed_to_shootEb>:

void screen_asteroidsPresenter::set_allowed_to_shoot(bool value)
{
	allowed_to_shoot = value;
90005c54:	7681      	strb	r1, [r0, #26]
}
90005c56:	4770      	bx	lr

90005c58 <_ZN25screen_asteroidsPresenter10hide_rocksEv>:
		}
	}
}

void screen_asteroidsPresenter::hide_rocks()
{
90005c58:	b570      	push	{r4, r5, r6, lr}
90005c5a:	f242 1454 	movw	r4, #8532	; 0x2154
	for(int i = 0; i < ROCK_COUNT; i++) {
90005c5e:	f242 360c 	movw	r6, #8972	; 0x230c
{
90005c62:	4605      	mov	r5, r0
		view.hide_element(&view.rocks[i]);
90005c64:	69e8      	ldr	r0, [r5, #28]
90005c66:	6803      	ldr	r3, [r0, #0]
90005c68:	1901      	adds	r1, r0, r4
	for(int i = 0; i < ROCK_COUNT; i++) {
90005c6a:	342c      	adds	r4, #44	; 0x2c
		view.hide_element(&view.rocks[i]);
90005c6c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90005c6e:	4798      	blx	r3
	for(int i = 0; i < ROCK_COUNT; i++) {
90005c70:	42b4      	cmp	r4, r6
90005c72:	d1f7      	bne.n	90005c64 <_ZN25screen_asteroidsPresenter10hide_rocksEv+0xc>
	}
}
90005c74:	bd70      	pop	{r4, r5, r6, pc}
90005c76:	bf00      	nop

90005c78 <_ZN25screen_asteroidsPresenter12hide_bulletsEv>:


void screen_asteroidsPresenter::hide_bullets()
{
90005c78:	b570      	push	{r4, r5, r6, lr}
90005c7a:	f242 340c 	movw	r4, #8972	; 0x230c
	for(int i = 0; i < BULLET_COUNT; i++) {
90005c7e:	f242 46c4 	movw	r6, #9412	; 0x24c4
{
90005c82:	4605      	mov	r5, r0
		view.hide_element(&view.bullets[i]);
90005c84:	69e8      	ldr	r0, [r5, #28]
90005c86:	6803      	ldr	r3, [r0, #0]
90005c88:	1901      	adds	r1, r0, r4
	for(int i = 0; i < BULLET_COUNT; i++) {
90005c8a:	342c      	adds	r4, #44	; 0x2c
		view.hide_element(&view.bullets[i]);
90005c8c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90005c8e:	4798      	blx	r3
	for(int i = 0; i < BULLET_COUNT; i++) {
90005c90:	42b4      	cmp	r4, r6
90005c92:	d1f7      	bne.n	90005c84 <_ZN25screen_asteroidsPresenter12hide_bulletsEv+0xc>
	}
}
90005c94:	bd70      	pop	{r4, r5, r6, pc}
90005c96:	bf00      	nop

90005c98 <_ZN25screen_asteroidsPresenter14set_invincibleEb>:

void screen_asteroidsPresenter::set_invincible(bool value)
{
	invincible = value;

	view.set_ship_invincible(invincible);
90005c98:	69c3      	ldr	r3, [r0, #28]
	invincible = value;
90005c9a:	76c1      	strb	r1, [r0, #27]
	view.set_ship_invincible(invincible);
90005c9c:	681a      	ldr	r2, [r3, #0]
90005c9e:	4618      	mov	r0, r3
90005ca0:	6e13      	ldr	r3, [r2, #96]	; 0x60
90005ca2:	4718      	bx	r3

90005ca4 <_ZN25screen_asteroidsPresenter13is_invincibleEv>:
}

bool screen_asteroidsPresenter::is_invincible()
{
	return invincible;
}
90005ca4:	7ec0      	ldrb	r0, [r0, #27]
90005ca6:	4770      	bx	lr

90005ca8 <_ZN25screen_asteroidsPresenterD0Ev>:
    virtual ~screen_asteroidsPresenter() {}
90005ca8:	b510      	push	{r4, lr}
90005caa:	4604      	mov	r4, r0
90005cac:	2120      	movs	r1, #32
90005cae:	f020 fad8 	bl	90026262 <_ZdlPvj>
90005cb2:	4620      	mov	r0, r4
90005cb4:	bd10      	pop	{r4, pc}
90005cb6:	bf00      	nop

90005cb8 <_ZThn4_N25screen_asteroidsPresenterD0Ev>:
90005cb8:	b500      	push	{lr}
90005cba:	3804      	subs	r0, #4
90005cbc:	b083      	sub	sp, #12
90005cbe:	2120      	movs	r1, #32
90005cc0:	9001      	str	r0, [sp, #4]
90005cc2:	f020 face 	bl	90026262 <_ZdlPvj>
90005cc6:	9801      	ldr	r0, [sp, #4]
90005cc8:	b003      	add	sp, #12
90005cca:	f85d fb04 	ldr.w	pc, [sp], #4
90005cce:	bf00      	nop

90005cd0 <_ZThn4_N25screen_asteroidsPresenter25is_asteroids_game_startedEv>:
90005cd0:	7d40      	ldrb	r0, [r0, #21]
90005cd2:	4770      	bx	lr

90005cd4 <_ZThn4_N25screen_asteroidsPresenter20set_allowed_to_shootEb>:
90005cd4:	7581      	strb	r1, [r0, #22]
90005cd6:	4770      	bx	lr

90005cd8 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv>:
		}
	}
}

void screen_asteroidsPresenter::check_bullet_collisions()
{
90005cd8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005cdc:	f242 370c 	movw	r7, #8972	; 0x230c
	for(int i = 0; i < BULLET_COUNT; i++) {
90005ce0:	f04f 0b00 	mov.w	fp, #0
        return visible;
90005ce4:	f04f 082c 	mov.w	r8, #44	; 0x2c
{
90005ce8:	4605      	mov	r5, r0
90005cea:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 90005da8 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0xd0>
90005cee:	e005      	b.n	90005cfc <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x24>
	for(int i = 0; i < BULLET_COUNT; i++) {
90005cf0:	f10b 0b01 	add.w	fp, fp, #1
90005cf4:	372c      	adds	r7, #44	; 0x2c
90005cf6:	f1bb 0f0a 	cmp.w	fp, #10
90005cfa:	d053      	beq.n	90005da4 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0xcc>
		if( !view.bullets[i].isVisible() )
90005cfc:	69e8      	ldr	r0, [r5, #28]
90005cfe:	f242 3331 	movw	r3, #9009	; 0x2331
90005d02:	fb08 020b 	mla	r2, r8, fp, r0
90005d06:	5cd3      	ldrb	r3, [r2, r3]
90005d08:	2b00      	cmp	r3, #0
90005d0a:	d0f1      	beq.n	90005cf0 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x18>
90005d0c:	f242 1654 	movw	r6, #8532	; 0x2154
			continue;

		for(int j = 0; j < ROCK_COUNT; j++) {
90005d10:	2400      	movs	r4, #0
90005d12:	f242 1979 	movw	r9, #8569	; 0x2179
90005d16:	e02f      	b.n	90005d78 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0xa0>
	}
}

bool screen_asteroidsPresenter::elements_collide(Drawable *element1, Drawable *element2)
{
	if( element1->getX() > (element2->getX() + element2->getWidth()) || (element1->getX() + element1->getWidth()) < element2->getX()) {
90005d18:	f9b1 2004 	ldrsh.w	r2, [r1, #4]
90005d1c:	f9b1 3008 	ldrsh.w	r3, [r1, #8]
90005d20:	f9bc e004 	ldrsh.w	lr, [ip, #4]
90005d24:	4413      	add	r3, r2
90005d26:	459e      	cmp	lr, r3
90005d28:	dc21      	bgt.n	90005d6e <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x96>
90005d2a:	f9bc 3008 	ldrsh.w	r3, [ip, #8]
90005d2e:	4473      	add	r3, lr
90005d30:	429a      	cmp	r2, r3
90005d32:	dc1c      	bgt.n	90005d6e <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x96>
		return false;
	}

	if( element1->getY() > (element2->getY() + element2->getHeight()) || (element1->getY() + element1->getHeight()) < element2->getY()) {
90005d34:	f9b1 2006 	ldrsh.w	r2, [r1, #6]
90005d38:	f9b1 300a 	ldrsh.w	r3, [r1, #10]
90005d3c:	f9bc e006 	ldrsh.w	lr, [ip, #6]
90005d40:	4413      	add	r3, r2
90005d42:	459e      	cmp	lr, r3
90005d44:	dc13      	bgt.n	90005d6e <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x96>
90005d46:	f9bc 300a 	ldrsh.w	r3, [ip, #10]
90005d4a:	4473      	add	r3, lr
90005d4c:	429a      	cmp	r2, r3
90005d4e:	dc0e      	bgt.n	90005d6e <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x96>
				view.move_rock_offscreen(&view.rocks[j]);
90005d50:	6803      	ldr	r3, [r0, #0]
90005d52:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90005d54:	4798      	blx	r3
				view.move_bullet_offscreen(&view.bullets[i]);
90005d56:	69e8      	ldr	r0, [r5, #28]
90005d58:	6803      	ldr	r3, [r0, #0]
90005d5a:	19c1      	adds	r1, r0, r7
90005d5c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
90005d5e:	4798      	blx	r3
				score++;
90005d60:	6929      	ldr	r1, [r5, #16]
				view.update_score(score);
90005d62:	69e8      	ldr	r0, [r5, #28]
				score++;
90005d64:	3101      	adds	r1, #1
				view.update_score(score);
90005d66:	6803      	ldr	r3, [r0, #0]
				score++;
90005d68:	6129      	str	r1, [r5, #16]
				view.update_score(score);
90005d6a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90005d6c:	4798      	blx	r3
		for(int j = 0; j < ROCK_COUNT; j++) {
90005d6e:	3401      	adds	r4, #1
90005d70:	362c      	adds	r6, #44	; 0x2c
90005d72:	2c0a      	cmp	r4, #10
90005d74:	d0bc      	beq.n	90005cf0 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x18>
			if( !view.rocks[j].isVisible() )
90005d76:	69e8      	ldr	r0, [r5, #28]
90005d78:	fb08 0304 	mla	r3, r8, r4, r0
90005d7c:	f813 3009 	ldrb.w	r3, [r3, r9]
90005d80:	2b00      	cmp	r3, #0
90005d82:	d0f4      	beq.n	90005d6e <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x96>
			if(elements_collide(&view.bullets[i], &view.rocks[j])) {
90005d84:	682b      	ldr	r3, [r5, #0]
90005d86:	eb00 0c07 	add.w	ip, r0, r7
90005d8a:	1981      	adds	r1, r0, r6
90005d8c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90005d8e:	4553      	cmp	r3, sl
90005d90:	d0c2      	beq.n	90005d18 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x40>
90005d92:	460a      	mov	r2, r1
90005d94:	4628      	mov	r0, r5
90005d96:	4661      	mov	r1, ip
90005d98:	4798      	blx	r3
90005d9a:	2800      	cmp	r0, #0
90005d9c:	d0e7      	beq.n	90005d6e <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x96>
				view.move_rock_offscreen(&view.rocks[j]);
90005d9e:	69e8      	ldr	r0, [r5, #28]
90005da0:	1981      	adds	r1, r0, r6
90005da2:	e7d5      	b.n	90005d50 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x78>
}
90005da4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
90005da8:	90005db5 	.word	0x90005db5

90005dac <_ZThn4_N25screen_asteroidsPresenter23check_bullet_collisionsEv>:
    virtual void hide_bullets();

    virtual Drawable* get_next_invisible_bullet();

    virtual void check_bullet_collisions();
90005dac:	f1a0 0004 	sub.w	r0, r0, #4
90005db0:	f7ff bf92 	b.w	90005cd8 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv>

90005db4 <_ZN25screen_asteroidsPresenter16elements_collideEPN8touchgfx8DrawableES2_>:
	if( element1->getX() > (element2->getX() + element2->getWidth()) || (element1->getX() + element1->getWidth()) < element2->getX()) {
90005db4:	f9b2 0004 	ldrsh.w	r0, [r2, #4]
90005db8:	f9b2 3008 	ldrsh.w	r3, [r2, #8]
90005dbc:	f9b1 c004 	ldrsh.w	ip, [r1, #4]
90005dc0:	4403      	add	r3, r0
90005dc2:	459c      	cmp	ip, r3
90005dc4:	dc15      	bgt.n	90005df2 <_ZN25screen_asteroidsPresenter16elements_collideEPN8touchgfx8DrawableES2_+0x3e>
90005dc6:	f9b1 3008 	ldrsh.w	r3, [r1, #8]
90005dca:	4463      	add	r3, ip
90005dcc:	4298      	cmp	r0, r3
90005dce:	dc10      	bgt.n	90005df2 <_ZN25screen_asteroidsPresenter16elements_collideEPN8touchgfx8DrawableES2_+0x3e>
	if( element1->getY() > (element2->getY() + element2->getHeight()) || (element1->getY() + element1->getHeight()) < element2->getY()) {
90005dd0:	f9b2 0006 	ldrsh.w	r0, [r2, #6]
90005dd4:	f9b2 300a 	ldrsh.w	r3, [r2, #10]
90005dd8:	f9b1 2006 	ldrsh.w	r2, [r1, #6]
90005ddc:	4403      	add	r3, r0
90005dde:	429a      	cmp	r2, r3
90005de0:	dc07      	bgt.n	90005df2 <_ZN25screen_asteroidsPresenter16elements_collideEPN8touchgfx8DrawableES2_+0x3e>
90005de2:	f9b1 300a 	ldrsh.w	r3, [r1, #10]
90005de6:	4413      	add	r3, r2
90005de8:	4298      	cmp	r0, r3
90005dea:	bfcc      	ite	gt
90005dec:	2000      	movgt	r0, #0
90005dee:	2001      	movle	r0, #1
90005df0:	4770      	bx	lr
		return false;
90005df2:	2000      	movs	r0, #0
	}

	return true;
}
90005df4:	4770      	bx	lr
90005df6:	bf00      	nop

90005df8 <_ZThn4_N25screen_asteroidsPresenter14set_invincibleEb>:
90005df8:	6983      	ldr	r3, [r0, #24]
90005dfa:	75c1      	strb	r1, [r0, #23]
90005dfc:	681a      	ldr	r2, [r3, #0]
90005dfe:	4618      	mov	r0, r3
90005e00:	6e13      	ldr	r3, [r2, #96]	; 0x60
90005e02:	4718      	bx	r3

90005e04 <_ZN25screen_asteroidsPresenter12shoot_bulletEv>:
	if( !is_allowed_to_shoot() )
90005e04:	6803      	ldr	r3, [r0, #0]
90005e06:	4a4a      	ldr	r2, [pc, #296]	; (90005f30 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x12c>)
90005e08:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90005e0a:	4293      	cmp	r3, r2
{
90005e0c:	b570      	push	{r4, r5, r6, lr}
90005e0e:	4604      	mov	r4, r0
90005e10:	d14d      	bne.n	90005eae <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0xaa>
	return allowed_to_shoot;
90005e12:	7e80      	ldrb	r0, [r0, #26]
	if( !is_allowed_to_shoot() )
90005e14:	b150      	cbz	r0, 90005e2c <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x28>
	Drawable *ship = view.get_ship_pointer();
90005e16:	69e0      	ldr	r0, [r4, #28]
90005e18:	6803      	ldr	r3, [r0, #0]
90005e1a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
90005e1c:	4798      	blx	r3
	if( view.bullet_button_pressed() )
90005e1e:	69e3      	ldr	r3, [r4, #28]
	Drawable *ship = view.get_ship_pointer();
90005e20:	4605      	mov	r5, r0
	if( view.bullet_button_pressed() )
90005e22:	681a      	ldr	r2, [r3, #0]
90005e24:	4618      	mov	r0, r3
90005e26:	6ed3      	ldr	r3, [r2, #108]	; 0x6c
90005e28:	4798      	blx	r3
90005e2a:	b900      	cbnz	r0, 90005e2e <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x2a>
}
90005e2c:	bd70      	pop	{r4, r5, r6, pc}
		model->start_bullet_timer();
90005e2e:	68a0      	ldr	r0, [r4, #8]
90005e30:	f7ff fde2 	bl	900059f8 <_ZN5Model18start_bullet_timerEv>
		set_allowed_to_shoot(false);
90005e34:	6823      	ldr	r3, [r4, #0]
90005e36:	493f      	ldr	r1, [pc, #252]	; (90005f34 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x130>)
90005e38:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90005e3a:	428a      	cmp	r2, r1
90005e3c:	d15a      	bne.n	90005ef4 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0xf0>
	allowed_to_shoot = value;
90005e3e:	2200      	movs	r2, #0
90005e40:	76a2      	strb	r2, [r4, #26]
		Drawable *new_bullet = get_next_invisible_bullet();
90005e42:	6d9b      	ldr	r3, [r3, #88]	; 0x58
90005e44:	4a3c      	ldr	r2, [pc, #240]	; (90005f38 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x134>)
90005e46:	4293      	cmp	r3, r2
90005e48:	d133      	bne.n	90005eb2 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0xae>
		if( !view.bullets[i].isVisible() )
90005e4a:	69e2      	ldr	r2, [r4, #28]
90005e4c:	f502 5300 	add.w	r3, r2, #8192	; 0x2000
90005e50:	f893 1331 	ldrb.w	r1, [r3, #817]	; 0x331
90005e54:	b321      	cbz	r1, 90005ea0 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
90005e56:	f893 135d 	ldrb.w	r1, [r3, #861]	; 0x35d
90005e5a:	2900      	cmp	r1, #0
90005e5c:	d057      	beq.n	90005f0e <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x10a>
90005e5e:	f893 1389 	ldrb.w	r1, [r3, #905]	; 0x389
90005e62:	2900      	cmp	r1, #0
90005e64:	d055      	beq.n	90005f12 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x10e>
90005e66:	f893 13b5 	ldrb.w	r1, [r3, #949]	; 0x3b5
90005e6a:	2900      	cmp	r1, #0
90005e6c:	d053      	beq.n	90005f16 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x112>
90005e6e:	f893 13e1 	ldrb.w	r1, [r3, #993]	; 0x3e1
90005e72:	2900      	cmp	r1, #0
90005e74:	d051      	beq.n	90005f1a <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x116>
90005e76:	f893 140d 	ldrb.w	r1, [r3, #1037]	; 0x40d
90005e7a:	2900      	cmp	r1, #0
90005e7c:	d04f      	beq.n	90005f1e <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x11a>
90005e7e:	f893 1439 	ldrb.w	r1, [r3, #1081]	; 0x439
90005e82:	2900      	cmp	r1, #0
90005e84:	d04d      	beq.n	90005f22 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x11e>
90005e86:	f893 1465 	ldrb.w	r1, [r3, #1125]	; 0x465
90005e8a:	2900      	cmp	r1, #0
90005e8c:	d04b      	beq.n	90005f26 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x122>
90005e8e:	f893 1491 	ldrb.w	r1, [r3, #1169]	; 0x491
90005e92:	2900      	cmp	r1, #0
90005e94:	d049      	beq.n	90005f2a <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x126>
90005e96:	f893 34bd 	ldrb.w	r3, [r3, #1213]	; 0x4bd
90005e9a:	2b00      	cmp	r3, #0
90005e9c:	d1c6      	bne.n	90005e2c <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x28>
	for(int i = 0; i < BULLET_COUNT; i++) {
90005e9e:	2109      	movs	r1, #9
			return &view.bullets[i];
90005ea0:	232c      	movs	r3, #44	; 0x2c
90005ea2:	f242 340c 	movw	r4, #8972	; 0x230c
90005ea6:	fb03 2201 	mla	r2, r3, r1, r2
90005eaa:	4414      	add	r4, r2
		if( new_bullet != NULL )
90005eac:	e006      	b.n	90005ebc <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0xb8>
	if( !is_allowed_to_shoot() )
90005eae:	4798      	blx	r3
90005eb0:	e7b0      	b.n	90005e14 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x10>
		Drawable *new_bullet = get_next_invisible_bullet();
90005eb2:	4620      	mov	r0, r4
90005eb4:	4798      	blx	r3
		if( new_bullet != NULL )
90005eb6:	4604      	mov	r4, r0
90005eb8:	2800      	cmp	r0, #0
90005eba:	d0b7      	beq.n	90005e2c <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x28>
        visible = vis;
90005ebc:	2301      	movs	r3, #1
			new_bullet->setX(ship->getX() + (ship->getWidth()/2) - 1);
90005ebe:	88a9      	ldrh	r1, [r5, #4]
90005ec0:	6822      	ldr	r2, [r4, #0]
90005ec2:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
90005ec6:	3901      	subs	r1, #1
90005ec8:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
90005ecc:	6b16      	ldr	r6, [r2, #48]	; 0x30
90005ece:	2b00      	cmp	r3, #0
90005ed0:	bfb8      	it	lt
90005ed2:	3301      	addlt	r3, #1
90005ed4:	eb01 0163 	add.w	r1, r1, r3, asr #1
90005ed8:	4b18      	ldr	r3, [pc, #96]	; (90005f3c <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x138>)
90005eda:	429e      	cmp	r6, r3
90005edc:	b209      	sxth	r1, r1
90005ede:	d112      	bne.n	90005f06 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x102>
        rect.x = x;
90005ee0:	80a1      	strh	r1, [r4, #4]
			new_bullet->setY(ship->getY() + 1);
90005ee2:	6b53      	ldr	r3, [r2, #52]	; 0x34
90005ee4:	88e9      	ldrh	r1, [r5, #6]
90005ee6:	4a16      	ldr	r2, [pc, #88]	; (90005f40 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x13c>)
90005ee8:	3101      	adds	r1, #1
90005eea:	4293      	cmp	r3, r2
90005eec:	b209      	sxth	r1, r1
90005eee:	d106      	bne.n	90005efe <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0xfa>
        rect.y = y;
90005ef0:	80e1      	strh	r1, [r4, #6]
}
90005ef2:	bd70      	pop	{r4, r5, r6, pc}
		set_allowed_to_shoot(false);
90005ef4:	2100      	movs	r1, #0
90005ef6:	4620      	mov	r0, r4
90005ef8:	4790      	blx	r2
		Drawable *new_bullet = get_next_invisible_bullet();
90005efa:	6823      	ldr	r3, [r4, #0]
90005efc:	e7a1      	b.n	90005e42 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x3e>
			new_bullet->setY(ship->getY() + 1);
90005efe:	4620      	mov	r0, r4
}
90005f00:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			new_bullet->setY(ship->getY() + 1);
90005f04:	4718      	bx	r3
			new_bullet->setX(ship->getX() + (ship->getWidth()/2) - 1);
90005f06:	4620      	mov	r0, r4
90005f08:	47b0      	blx	r6
			new_bullet->setY(ship->getY() + 1);
90005f0a:	6822      	ldr	r2, [r4, #0]
90005f0c:	e7e9      	b.n	90005ee2 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0xde>
	for(int i = 0; i < BULLET_COUNT; i++) {
90005f0e:	2101      	movs	r1, #1
90005f10:	e7c6      	b.n	90005ea0 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
90005f12:	2102      	movs	r1, #2
90005f14:	e7c4      	b.n	90005ea0 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
90005f16:	2103      	movs	r1, #3
90005f18:	e7c2      	b.n	90005ea0 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
90005f1a:	2104      	movs	r1, #4
90005f1c:	e7c0      	b.n	90005ea0 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
90005f1e:	2105      	movs	r1, #5
90005f20:	e7be      	b.n	90005ea0 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
90005f22:	2106      	movs	r1, #6
90005f24:	e7bc      	b.n	90005ea0 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
90005f26:	2107      	movs	r1, #7
90005f28:	e7ba      	b.n	90005ea0 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
90005f2a:	2108      	movs	r1, #8
90005f2c:	e7b8      	b.n	90005ea0 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
90005f2e:	bf00      	nop
90005f30:	90005c51 	.word	0x90005c51
90005f34:	90005c55 	.word	0x90005c55
90005f38:	90005b61 	.word	0x90005b61
90005f3c:	900023f5 	.word	0x900023f5
90005f40:	900023f9 	.word	0x900023f9

90005f44 <_ZN25screen_asteroidsPresenter9init_gameEv>:
{
90005f44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90005f48:	4604      	mov	r4, r0
	view.hide_endgame_screen();
90005f4a:	69c0      	ldr	r0, [r0, #28]
	for(int i = 0; i < BULLET_COUNT; i++ ) {
90005f4c:	2500      	movs	r5, #0
	view.move_ship(225, 227);
90005f4e:	f242 360c 	movw	r6, #8972	; 0x230c
	view.hide_endgame_screen();
90005f52:	6803      	ldr	r3, [r0, #0]
        visible = vis;
90005f54:	f04f 082c 	mov.w	r8, #44	; 0x2c
		view.move_bullet(&view.bullets[i], BULLET_OFFSCREEN_X, BULLET_OFFSCREEN_Y);
90005f58:	462f      	mov	r7, r5
	view.hide_endgame_screen();
90005f5a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90005f5c:	4798      	blx	r3
	view.move_ship(225, 227);
90005f5e:	69e0      	ldr	r0, [r4, #28]
90005f60:	22e3      	movs	r2, #227	; 0xe3
90005f62:	21e1      	movs	r1, #225	; 0xe1
90005f64:	6803      	ldr	r3, [r0, #0]
90005f66:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90005f68:	4798      	blx	r3
		view.move_bullet(&view.bullets[i], BULLET_OFFSCREEN_X, BULLET_OFFSCREEN_Y);
90005f6a:	69e0      	ldr	r0, [r4, #28]
90005f6c:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
90005f70:	2200      	movs	r2, #0
90005f72:	f8d0 c000 	ldr.w	ip, [r0]
90005f76:	1981      	adds	r1, r0, r6
	for(int i = 0; i < BULLET_COUNT; i++ ) {
90005f78:	362c      	adds	r6, #44	; 0x2c
		view.move_bullet(&view.bullets[i], BULLET_OFFSCREEN_X, BULLET_OFFSCREEN_Y);
90005f7a:	f8dc 9074 	ldr.w	r9, [ip, #116]	; 0x74
90005f7e:	47c8      	blx	r9
		view.bullets[i].setVisible(false);
90005f80:	69e3      	ldr	r3, [r4, #28]
        return parent;
90005f82:	f242 3120 	movw	r1, #8992	; 0x2320
        visible = vis;
90005f86:	f242 3231 	movw	r2, #9009	; 0x2331
90005f8a:	fb08 3305 	mla	r3, r8, r5, r3
	for(int i = 0; i < BULLET_COUNT; i++ ) {
90005f8e:	3501      	adds	r5, #1
        return parent;
90005f90:	5858      	ldr	r0, [r3, r1]
        visible = vis;
90005f92:	549f      	strb	r7, [r3, r2]
		view.bullets[i].getParent()->invalidateContent();
90005f94:	6803      	ldr	r3, [r0, #0]
90005f96:	699b      	ldr	r3, [r3, #24]
90005f98:	4798      	blx	r3
	for(int i = 0; i < BULLET_COUNT; i++ ) {
90005f9a:	2d0a      	cmp	r5, #10
90005f9c:	d1e5      	bne.n	90005f6a <_ZN25screen_asteroidsPresenter9init_gameEv+0x26>
	for(int i = 0; i < ROCK_COUNT; i++ ) {
90005f9e:	2500      	movs	r5, #0
90005fa0:	f242 1654 	movw	r6, #8532	; 0x2154
90005fa4:	f04f 092c 	mov.w	r9, #44	; 0x2c
90005fa8:	f242 1879 	movw	r8, #8569	; 0x2179
		view.move_rock(&view.rocks[i], ROCK_OFFSCREEN_X, ROCK_OFFSCREEN_Y);
90005fac:	462f      	mov	r7, r5
90005fae:	69e0      	ldr	r0, [r4, #28]
90005fb0:	2300      	movs	r3, #0
90005fb2:	f8d0 c000 	ldr.w	ip, [r0]
90005fb6:	1981      	adds	r1, r0, r6
90005fb8:	461a      	mov	r2, r3
	for(int i = 0; i < ROCK_COUNT; i++ ) {
90005fba:	362c      	adds	r6, #44	; 0x2c
		view.move_rock(&view.rocks[i], ROCK_OFFSCREEN_X, ROCK_OFFSCREEN_Y);
90005fbc:	f8dc a064 	ldr.w	sl, [ip, #100]	; 0x64
90005fc0:	47d0      	blx	sl
		view.rocks[i].setVisible(false);
90005fc2:	69e3      	ldr	r3, [r4, #28]
        return parent;
90005fc4:	f242 1268 	movw	r2, #8552	; 0x2168
        visible = vis;
90005fc8:	fb09 3305 	mla	r3, r9, r5, r3
	for(int i = 0; i < ROCK_COUNT; i++ ) {
90005fcc:	3501      	adds	r5, #1
        return parent;
90005fce:	5898      	ldr	r0, [r3, r2]
        visible = vis;
90005fd0:	f803 7008 	strb.w	r7, [r3, r8]
		view.rocks[i].getParent()->invalidateContent();
90005fd4:	6803      	ldr	r3, [r0, #0]
90005fd6:	699b      	ldr	r3, [r3, #24]
90005fd8:	4798      	blx	r3
	for(int i = 0; i < ROCK_COUNT; i++ ) {
90005fda:	2d0a      	cmp	r5, #10
90005fdc:	d1e7      	bne.n	90005fae <_ZN25screen_asteroidsPresenter9init_gameEv+0x6a>
90005fde:	f242 1554 	movw	r5, #8532	; 0x2154
	for(int i = 0; i < ROCK_COUNT; i++) {
90005fe2:	f242 360c 	movw	r6, #8972	; 0x230c
		view.new_rock_position(&view.rocks[i]);
90005fe6:	69e0      	ldr	r0, [r4, #28]
90005fe8:	6803      	ldr	r3, [r0, #0]
90005fea:	1941      	adds	r1, r0, r5
	for(int i = 0; i < ROCK_COUNT; i++) {
90005fec:	352c      	adds	r5, #44	; 0x2c
		view.new_rock_position(&view.rocks[i]);
90005fee:	6e9b      	ldr	r3, [r3, #104]	; 0x68
90005ff0:	4798      	blx	r3
	for(int i = 0; i < ROCK_COUNT; i++) {
90005ff2:	42b5      	cmp	r5, r6
90005ff4:	d1f7      	bne.n	90005fe6 <_ZN25screen_asteroidsPresenter9init_gameEv+0xa2>
	view.update_score(score);
90005ff6:	69e0      	ldr	r0, [r4, #28]
	score = 0;
90005ff8:	2500      	movs	r5, #0
	view.update_score(score);
90005ffa:	6803      	ldr	r3, [r0, #0]
90005ffc:	4629      	mov	r1, r5
	score = 0;
90005ffe:	6125      	str	r5, [r4, #16]
	view.update_score(score);
90006000:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90006002:	4798      	blx	r3
	view.update_hearts(lives);
90006004:	69e0      	ldr	r0, [r4, #28]
	lives = 3;
90006006:	2103      	movs	r1, #3
90006008:	7321      	strb	r1, [r4, #12]
	view.update_hearts(lives);
9000600a:	6803      	ldr	r3, [r0, #0]
9000600c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9000600e:	4798      	blx	r3
	set_invincible(false);
90006010:	6823      	ldr	r3, [r4, #0]
90006012:	4a0a      	ldr	r2, [pc, #40]	; (9000603c <_ZN25screen_asteroidsPresenter9init_gameEv+0xf8>)
90006014:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90006016:	4293      	cmp	r3, r2
90006018:	d109      	bne.n	9000602e <_ZN25screen_asteroidsPresenter9init_gameEv+0xea>
	view.set_ship_invincible(invincible);
9000601a:	69e0      	ldr	r0, [r4, #28]
9000601c:	4629      	mov	r1, r5
	invincible = value;
9000601e:	76e5      	strb	r5, [r4, #27]
	view.set_ship_invincible(invincible);
90006020:	6803      	ldr	r3, [r0, #0]
90006022:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90006024:	4798      	blx	r3
	game_started = true;
90006026:	2301      	movs	r3, #1
90006028:	7663      	strb	r3, [r4, #25]
}
9000602a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	set_invincible(false);
9000602e:	4629      	mov	r1, r5
90006030:	4620      	mov	r0, r4
90006032:	4798      	blx	r3
	game_started = true;
90006034:	2301      	movs	r3, #1
90006036:	7663      	strb	r3, [r4, #25]
}
90006038:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9000603c:	90005c99 	.word	0x90005c99

90006040 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv>:
{
90006040:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90006044:	4604      	mov	r4, r0
	Drawable *ship = view.get_ship_pointer();
90006046:	69c0      	ldr	r0, [r0, #28]
90006048:	f242 1a54 	movw	sl, #8532	; 0x2154
	for(int i = 0; i < ROCK_COUNT; i++) {
9000604c:	2500      	movs	r5, #0
	Drawable *ship = view.get_ship_pointer();
9000604e:	6803      	ldr	r3, [r0, #0]
90006050:	4f3f      	ldr	r7, [pc, #252]	; (90006150 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x110>)
90006052:	6d9b      	ldr	r3, [r3, #88]	; 0x58
90006054:	4798      	blx	r3
90006056:	f8df 8100 	ldr.w	r8, [pc, #256]	; 90006158 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x118>
9000605a:	f8df 9100 	ldr.w	r9, [pc, #256]	; 9000615c <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x11c>
9000605e:	4606      	mov	r6, r0
        return visible;
90006060:	69e3      	ldr	r3, [r4, #28]
90006062:	212c      	movs	r1, #44	; 0x2c
90006064:	f242 1279 	movw	r2, #8569	; 0x2179
90006068:	fb01 3305 	mla	r3, r1, r5, r3
		if( !view.rocks[i].isVisible() )
9000606c:	5c9b      	ldrb	r3, [r3, r2]
9000606e:	2b00      	cmp	r3, #0
90006070:	d045      	beq.n	900060fe <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xbe>
		if( is_invincible() )
90006072:	6823      	ldr	r3, [r4, #0]
90006074:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90006076:	42bb      	cmp	r3, r7
90006078:	d148      	bne.n	9000610c <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xcc>
	return invincible;
9000607a:	7ee0      	ldrb	r0, [r4, #27]
		if( is_invincible() )
9000607c:	2800      	cmp	r0, #0
9000607e:	d13e      	bne.n	900060fe <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xbe>
		if( elements_collide(ship, &view.rocks[i]) ) {
90006080:	6823      	ldr	r3, [r4, #0]
90006082:	69e0      	ldr	r0, [r4, #28]
90006084:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90006086:	eb00 020a 	add.w	r2, r0, sl
9000608a:	4543      	cmp	r3, r8
9000608c:	d141      	bne.n	90006112 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xd2>
	if( element1->getX() > (element2->getX() + element2->getWidth()) || (element1->getX() + element1->getWidth()) < element2->getX()) {
9000608e:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
90006092:	f9b2 3008 	ldrsh.w	r3, [r2, #8]
90006096:	f9b6 c004 	ldrsh.w	ip, [r6, #4]
9000609a:	440b      	add	r3, r1
9000609c:	459c      	cmp	ip, r3
9000609e:	dc2e      	bgt.n	900060fe <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xbe>
900060a0:	f9b6 3008 	ldrsh.w	r3, [r6, #8]
900060a4:	4463      	add	r3, ip
900060a6:	4299      	cmp	r1, r3
900060a8:	dc29      	bgt.n	900060fe <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xbe>
	if( element1->getY() > (element2->getY() + element2->getHeight()) || (element1->getY() + element1->getHeight()) < element2->getY()) {
900060aa:	f9b2 1006 	ldrsh.w	r1, [r2, #6]
900060ae:	f9b2 300a 	ldrsh.w	r3, [r2, #10]
900060b2:	f9b6 2006 	ldrsh.w	r2, [r6, #6]
900060b6:	440b      	add	r3, r1
900060b8:	429a      	cmp	r2, r3
900060ba:	dc20      	bgt.n	900060fe <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xbe>
900060bc:	f9b6 300a 	ldrsh.w	r3, [r6, #10]
900060c0:	4413      	add	r3, r2
900060c2:	4299      	cmp	r1, r3
900060c4:	dc1b      	bgt.n	900060fe <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xbe>
			lives--;
900060c6:	7b21      	ldrb	r1, [r4, #12]
900060c8:	3901      	subs	r1, #1
900060ca:	b2c9      	uxtb	r1, r1
900060cc:	7321      	strb	r1, [r4, #12]
			view.update_hearts(lives);
900060ce:	6803      	ldr	r3, [r0, #0]
900060d0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900060d2:	4798      	blx	r3
			view.move_rock_offscreen(&view.rocks[i]);
900060d4:	69e0      	ldr	r0, [r4, #28]
900060d6:	6803      	ldr	r3, [r0, #0]
900060d8:	eb00 010a 	add.w	r1, r0, sl
900060dc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
900060de:	4798      	blx	r3
			if( lives == 0 ) {
900060e0:	7b23      	ldrb	r3, [r4, #12]
900060e2:	b303      	cbz	r3, 90006126 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xe6>
			model->start_invincibility_timer();
900060e4:	68a0      	ldr	r0, [r4, #8]
900060e6:	f7ff fc8f 	bl	90005a08 <_ZN5Model25start_invincibility_timerEv>
			set_invincible(true);
900060ea:	6823      	ldr	r3, [r4, #0]
	invincible = value;
900060ec:	2101      	movs	r1, #1
			set_invincible(true);
900060ee:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900060f0:	454b      	cmp	r3, r9
900060f2:	d115      	bne.n	90006120 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xe0>
	view.set_ship_invincible(invincible);
900060f4:	69e0      	ldr	r0, [r4, #28]
	invincible = value;
900060f6:	76e1      	strb	r1, [r4, #27]
	view.set_ship_invincible(invincible);
900060f8:	6803      	ldr	r3, [r0, #0]
900060fa:	6e1b      	ldr	r3, [r3, #96]	; 0x60
900060fc:	4798      	blx	r3
	for(int i = 0; i < ROCK_COUNT; i++) {
900060fe:	3501      	adds	r5, #1
90006100:	f10a 0a2c 	add.w	sl, sl, #44	; 0x2c
90006104:	2d0a      	cmp	r5, #10
90006106:	d1ab      	bne.n	90006060 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x20>
}
90006108:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		if( is_invincible() )
9000610c:	4620      	mov	r0, r4
9000610e:	4798      	blx	r3
90006110:	e7b4      	b.n	9000607c <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x3c>
		if( elements_collide(ship, &view.rocks[i]) ) {
90006112:	4631      	mov	r1, r6
90006114:	4620      	mov	r0, r4
90006116:	4798      	blx	r3
90006118:	2800      	cmp	r0, #0
9000611a:	d0f0      	beq.n	900060fe <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xbe>
			view.update_hearts(lives);
9000611c:	69e0      	ldr	r0, [r4, #28]
9000611e:	e7d2      	b.n	900060c6 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x86>
			set_invincible(true);
90006120:	4620      	mov	r0, r4
90006122:	4798      	blx	r3
90006124:	e7eb      	b.n	900060fe <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xbe>
				game_over();
90006126:	6822      	ldr	r2, [r4, #0]
90006128:	490a      	ldr	r1, [pc, #40]	; (90006154 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x114>)
9000612a:	6a52      	ldr	r2, [r2, #36]	; 0x24
9000612c:	428a      	cmp	r2, r1
9000612e:	d10b      	bne.n	90006148 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x108>
	view.show_endgame_screen();
90006130:	69e0      	ldr	r0, [r4, #28]
	game_started = false;
90006132:	7663      	strb	r3, [r4, #25]
	view.show_endgame_screen();
90006134:	6803      	ldr	r3, [r0, #0]
	if( score > high_score )
90006136:	e9d4 2104 	ldrd	r2, r1, [r4, #16]
	view.show_endgame_screen();
9000613a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
	if( score > high_score )
9000613c:	428a      	cmp	r2, r1
		high_score = score;
9000613e:	bf88      	it	hi
90006140:	6162      	strhi	r2, [r4, #20]
}
90006142:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	view.show_endgame_screen();
90006146:	4718      	bx	r3
				game_over();
90006148:	4620      	mov	r0, r4
}
9000614a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
				game_over();
9000614e:	4710      	bx	r2
90006150:	90005ca5 	.word	0x90005ca5
90006154:	90005a31 	.word	0x90005a31
90006158:	90005db5 	.word	0x90005db5
9000615c:	90005c99 	.word	0x90005c99

90006160 <_ZThn4_N25screen_asteroidsPresenter21check_ship_collisionsEv>:
    virtual void check_ship_collisions();
90006160:	f1a0 0004 	sub.w	r0, r0, #4
90006164:	f7ff bf6c 	b.w	90006040 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv>

90006168 <_ZN25screen_asteroidsPresenterC1ER20screen_asteroidsView>:
    : view(v)
90006168:	4a09      	ldr	r2, [pc, #36]	; (90006190 <_ZN25screen_asteroidsPresenterC1ER20screen_asteroidsView+0x28>)
9000616a:	61c1      	str	r1, [r0, #28]
9000616c:	4909      	ldr	r1, [pc, #36]	; (90006194 <_ZN25screen_asteroidsPresenterC1ER20screen_asteroidsView+0x2c>)
screen_asteroidsPresenter::screen_asteroidsPresenter(screen_asteroidsView& v)
9000616e:	b410      	push	{r4}
    ModelListener() : model(0) {}
90006170:	2400      	movs	r4, #0
    : view(v)
90006172:	6181      	str	r1, [r0, #24]
90006174:	2103      	movs	r1, #3
90006176:	6084      	str	r4, [r0, #8]
90006178:	7301      	strb	r1, [r0, #12]
9000617a:	e9c0 4404 	strd	r4, r4, [r0, #16]
9000617e:	f102 0408 	add.w	r4, r2, #8
90006182:	3270      	adds	r2, #112	; 0x70
90006184:	e9c0 4200 	strd	r4, r2, [r0]
}
90006188:	f85d 4b04 	ldr.w	r4, [sp], #4
9000618c:	4770      	bx	lr
9000618e:	bf00      	nop
90006190:	90029dd8 	.word	0x90029dd8
90006194:	00010004 	.word	0x00010004

90006198 <_ZN20screen_asteroidsView14tearDownScreenEv>:
}

void screen_asteroidsView::tearDownScreen()
{
    screen_asteroidsViewBase::tearDownScreen();
}
90006198:	4770      	bx	lr
9000619a:	bf00      	nop

9000619c <_ZN20screen_asteroidsView21resume_asteroids_taskEv>:

void screen_asteroidsView::resume_asteroids_task()
{
	presenter->resume_asteroids_task();
9000619c:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
9000619e:	6803      	ldr	r3, [r0, #0]
900061a0:	691b      	ldr	r3, [r3, #16]
900061a2:	4718      	bx	r3

900061a4 <_ZN20screen_asteroidsView22suspend_asteroids_taskEv>:
}

void screen_asteroidsView::suspend_asteroids_task()
{
	presenter->suspend_asteroids_task();
900061a4:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
900061a6:	6803      	ldr	r3, [r0, #0]
900061a8:	695b      	ldr	r3, [r3, #20]
900061aa:	4718      	bx	r3

900061ac <_ZN20screen_asteroidsView20start_asteroids_gameEv>:
}

void screen_asteroidsView::start_asteroids_game()
{
	presenter->start_asteroids_game();
900061ac:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
900061ae:	6803      	ldr	r3, [r0, #0]
900061b0:	69db      	ldr	r3, [r3, #28]
900061b2:	4718      	bx	r3

900061b4 <_ZN20screen_asteroidsView19hide_endgame_screenEv>:
	container_controls.getParent()->invalidateContent();
	container_game_over.getParent()->invalidateContent();
}

void screen_asteroidsView::hide_endgame_screen()
{
900061b4:	b510      	push	{r4, lr}
        visible = vis;
900061b6:	2301      	movs	r3, #1
900061b8:	4604      	mov	r4, r0
        return parent;
900061ba:	f8d0 0264 	ldr.w	r0, [r0, #612]	; 0x264
        visible = vis;
900061be:	2200      	movs	r2, #0
900061c0:	f884 3275 	strb.w	r3, [r4, #629]	; 0x275
	container_game_over.setVisible(false);
	container_controls.setVisible(true);
	container_controls.getParent()->invalidateContent();
900061c4:	6803      	ldr	r3, [r0, #0]
900061c6:	f884 23f9 	strb.w	r2, [r4, #1017]	; 0x3f9
900061ca:	699b      	ldr	r3, [r3, #24]
900061cc:	4798      	blx	r3
        return parent;
900061ce:	f8d4 03e8 	ldr.w	r0, [r4, #1000]	; 0x3e8
	container_game_over.getParent()->invalidateContent();
900061d2:	6803      	ldr	r3, [r0, #0]
}
900061d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	container_game_over.getParent()->invalidateContent();
900061d8:	699b      	ldr	r3, [r3, #24]
900061da:	4718      	bx	r3

900061dc <_ZN20screen_asteroidsView15getShipPositionEPiS0_>:
}

void screen_asteroidsView::getShipPosition(int *x, int *y)
{
	*x = icon_ship.getX();
	*y = icon_ship.getY();
900061dc:	f9b0 30ca 	ldrsh.w	r3, [r0, #202]	; 0xca
{
900061e0:	b410      	push	{r4}
	*x = icon_ship.getX();
900061e2:	f9b0 40c8 	ldrsh.w	r4, [r0, #200]	; 0xc8
900061e6:	600c      	str	r4, [r1, #0]
}
900061e8:	f85d 4b04 	ldr.w	r4, [sp], #4
	*y = icon_ship.getY();
900061ec:	6013      	str	r3, [r2, #0]
}
900061ee:	4770      	bx	lr

900061f0 <_ZN20screen_asteroidsView16get_ship_pointerEv>:

Drawable* screen_asteroidsView::get_ship_pointer()
{
	return &icon_ship;
}
900061f0:	30c4      	adds	r0, #196	; 0xc4
900061f2:	4770      	bx	lr

900061f4 <_ZN20screen_asteroidsView9move_shipEii>:
900061f4:	f8d0 30d8 	ldr.w	r3, [r0, #216]	; 0xd8
}

void screen_asteroidsView::move_ship(int x, int y)
{
	icon_ship.setX(x);
	icon_ship.setY(y);
900061f8:	f8a0 20ca 	strh.w	r2, [r0, #202]	; 0xca
	icon_ship.getParent()->invalidateContent();
900061fc:	681a      	ldr	r2, [r3, #0]
	icon_ship.setX(x);
900061fe:	f8a0 10c8 	strh.w	r1, [r0, #200]	; 0xc8
	icon_ship.getParent()->invalidateContent();
90006202:	4618      	mov	r0, r3
90006204:	6993      	ldr	r3, [r2, #24]
90006206:	4718      	bx	r3

90006208 <_ZN20screen_asteroidsView21bullet_button_pressedEv>:
}

bool screen_asteroidsView::bullet_button_pressed()
{
	return btn_shoot.getPressedState();
}
90006208:	f890 0398 	ldrb.w	r0, [r0, #920]	; 0x398
9000620c:	4770      	bx	lr
9000620e:	bf00      	nop

90006210 <_ZN20screen_asteroidsView12hide_elementEPN8touchgfx8DrawableE>:
        visible = vis;
90006210:	2300      	movs	r3, #0
        return parent;
90006212:	6948      	ldr	r0, [r1, #20]
        visible = vis;
90006214:	f881 3025 	strb.w	r3, [r1, #37]	; 0x25

void screen_asteroidsView::hide_element(Drawable *element)
{
	element->setVisible(false);
	element->getParent()->invalidateContent();
90006218:	6803      	ldr	r3, [r0, #0]
9000621a:	699b      	ldr	r3, [r3, #24]
9000621c:	4718      	bx	r3
9000621e:	bf00      	nop

90006220 <_ZN20screen_asteroidsView12update_scoreEj>:
{
90006220:	b510      	push	{r4, lr}
90006222:	4604      	mov	r4, r0
90006224:	460b      	mov	r3, r1
	Unicode::snprintf(lbl_scoreBuffer, LBL_SCORE_SIZE, "%05u", score);
90006226:	4a08      	ldr	r2, [pc, #32]	; (90006248 <_ZN20screen_asteroidsView12update_scoreEj+0x28>)
90006228:	2106      	movs	r1, #6
9000622a:	f500 60a3 	add.w	r0, r0, #1304	; 0x518
9000622e:	f011 ff51 	bl	900180d4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        if (visible)
90006232:	f894 3179 	ldrb.w	r3, [r4, #377]	; 0x179
90006236:	b12b      	cbz	r3, 90006244 <_ZN20screen_asteroidsView12update_scoreEj+0x24>
            invalidate();
90006238:	f504 70aa 	add.w	r0, r4, #340	; 0x154
}
9000623c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90006240:	f00f bf3b 	b.w	900160ba <_ZNK8touchgfx8Drawable10invalidateEv>
90006244:	bd10      	pop	{r4, pc}
90006246:	bf00      	nop
90006248:	90029e70 	.word	0x90029e70

9000624c <_ZN20screen_asteroidsViewD1Ev>:
public:
    touchgfx::ScalableImage rocks[ROCK_COUNT];
    touchgfx::Box bullets[BULLET_COUNT];

    screen_asteroidsView();
    virtual ~screen_asteroidsView() {}
9000624c:	b570      	push	{r4, r5, r6, lr}
9000624e:	f242 340c 	movw	r4, #8972	; 0x230c
90006252:	f242 45c4 	movw	r5, #9412	; 0x24c4
90006256:	4b0d      	ldr	r3, [pc, #52]	; (9000628c <_ZN20screen_asteroidsViewD1Ev+0x40>)
90006258:	4606      	mov	r6, r0
9000625a:	4404      	add	r4, r0
9000625c:	4405      	add	r5, r0
9000625e:	6003      	str	r3, [r0, #0]
90006260:	f855 3d2c 	ldr.w	r3, [r5, #-44]!
90006264:	681b      	ldr	r3, [r3, #0]
90006266:	4628      	mov	r0, r5
90006268:	4798      	blx	r3
9000626a:	42ac      	cmp	r4, r5
9000626c:	d1f8      	bne.n	90006260 <_ZN20screen_asteroidsViewD1Ev+0x14>
9000626e:	f242 1554 	movw	r5, #8532	; 0x2154
90006272:	4435      	add	r5, r6
90006274:	f854 3d2c 	ldr.w	r3, [r4, #-44]!
90006278:	681b      	ldr	r3, [r3, #0]
9000627a:	4620      	mov	r0, r4
9000627c:	4798      	blx	r3
9000627e:	42a5      	cmp	r5, r4
90006280:	d1f8      	bne.n	90006274 <_ZN20screen_asteroidsViewD1Ev+0x28>
90006282:	4630      	mov	r0, r6
90006284:	f7fe fb28 	bl	900048d8 <_ZN24screen_asteroidsViewBaseD1Ev>
90006288:	4630      	mov	r0, r6
9000628a:	bd70      	pop	{r4, r5, r6, pc}
9000628c:	90029e80 	.word	0x90029e80

90006290 <_ZN20screen_asteroidsView18get_ship_directionEv>:
	if( btn_up.getPressedState() ) {
90006290:	f890 335c 	ldrb.w	r3, [r0, #860]	; 0x35c
90006294:	b96b      	cbnz	r3, 900062b2 <_ZN20screen_asteroidsView18get_ship_directionEv+0x22>
	else if( btn_down.getPressedState() ) {
90006296:	f890 32e4 	ldrb.w	r3, [r0, #740]	; 0x2e4
9000629a:	b943      	cbnz	r3, 900062ae <_ZN20screen_asteroidsView18get_ship_directionEv+0x1e>
	else if( btn_left.getPressedState() ) {
9000629c:	f890 3320 	ldrb.w	r3, [r0, #800]	; 0x320
900062a0:	b94b      	cbnz	r3, 900062b6 <_ZN20screen_asteroidsView18get_ship_directionEv+0x26>
	else if( btn_right.getPressedState() ) {
900062a2:	f890 02a8 	ldrb.w	r0, [r0, #680]	; 0x2a8
900062a6:	f1c0 0004 	rsb	r0, r0, #4
900062aa:	b2c0      	uxtb	r0, r0
900062ac:	4770      	bx	lr
		return ShipDirection::DOWN;
900062ae:	2001      	movs	r0, #1
900062b0:	4770      	bx	lr
		return ShipDirection::UP;
900062b2:	2000      	movs	r0, #0
900062b4:	4770      	bx	lr
		return ShipDirection::LEFT;
900062b6:	2002      	movs	r0, #2
}
900062b8:	4770      	bx	lr
900062ba:	bf00      	nop

900062bc <_ZN20screen_asteroidsView19set_ship_invincibleEb>:
{
900062bc:	4603      	mov	r3, r0
	if( value ) {
900062be:	b191      	cbz	r1, 900062e6 <_ZN20screen_asteroidsView19set_ship_invincibleEb+0x2a>
        return parent;
900062c0:	f8d0 0500 	ldr.w	r0, [r0, #1280]	; 0x500
900062c4:	f44f 62fc 	mov.w	r2, #2016	; 0x7e0
        visible = vis;
900062c8:	2101      	movs	r1, #1
{
900062ca:	b410      	push	{r4}
900062cc:	f04f 24ff 	mov.w	r4, #4278255360	; 0xff00ff00
900062d0:	f8a3 2150 	strh.w	r2, [r3, #336]	; 0x150
		cover_red.getParent()->invalidateContent();
900062d4:	6802      	ldr	r2, [r0, #0]
900062d6:	f8c3 414c 	str.w	r4, [r3, #332]	; 0x14c
900062da:	f883 1511 	strb.w	r1, [r3, #1297]	; 0x511
}
900062de:	f85d 4b04 	ldr.w	r4, [sp], #4
		cover_red.getParent()->invalidateContent();
900062e2:	6993      	ldr	r3, [r2, #24]
900062e4:	4718      	bx	r3
        return parent;
900062e6:	f8d0 0500 	ldr.w	r0, [r0, #1280]	; 0x500
900062ea:	f04f 32ff 	mov.w	r2, #4294967295
        visible = vis;
900062ee:	f883 1511 	strb.w	r1, [r3, #1297]	; 0x511
		cover_red.getParent()->invalidateContent();
900062f2:	6801      	ldr	r1, [r0, #0]
900062f4:	f8c3 214c 	str.w	r2, [r3, #332]	; 0x14c
900062f8:	f8a3 2150 	strh.w	r2, [r3, #336]	; 0x150
900062fc:	698b      	ldr	r3, [r1, #24]
900062fe:	4718      	bx	r3

90006300 <_ZN20screen_asteroidsView19show_endgame_screenEv>:
{
90006300:	b570      	push	{r4, r5, r6, lr}
90006302:	4604      	mov	r4, r0
	presenter->hide_rocks();
90006304:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
90006306:	2500      	movs	r5, #0
90006308:	6803      	ldr	r3, [r0, #0]
9000630a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9000630c:	4798      	blx	r3
	presenter->hide_bullets();
9000630e:	6be0      	ldr	r0, [r4, #60]	; 0x3c
90006310:	6803      	ldr	r3, [r0, #0]
90006312:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90006314:	4798      	blx	r3
        return parent;
90006316:	f8d4 0500 	ldr.w	r0, [r4, #1280]	; 0x500
        visible = vis;
9000631a:	f884 5511 	strb.w	r5, [r4, #1297]	; 0x511
	cover_red.getParent()->invalidateContent();
9000631e:	6803      	ldr	r3, [r0, #0]
90006320:	699b      	ldr	r3, [r3, #24]
90006322:	4798      	blx	r3
        return parent;
90006324:	f8d4 0264 	ldr.w	r0, [r4, #612]	; 0x264
        visible = vis;
90006328:	2201      	movs	r2, #1
9000632a:	f884 5275 	strb.w	r5, [r4, #629]	; 0x275
	container_controls.getParent()->invalidateContent();
9000632e:	6803      	ldr	r3, [r0, #0]
90006330:	f884 23f9 	strb.w	r2, [r4, #1017]	; 0x3f9
90006334:	699b      	ldr	r3, [r3, #24]
90006336:	4798      	blx	r3
        return parent;
90006338:	f8d4 03e8 	ldr.w	r0, [r4, #1000]	; 0x3e8
	container_game_over.getParent()->invalidateContent();
9000633c:	6803      	ldr	r3, [r0, #0]
}
9000633e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	container_game_over.getParent()->invalidateContent();
90006342:	699b      	ldr	r3, [r3, #24]
90006344:	4718      	bx	r3
90006346:	bf00      	nop

90006348 <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii>:
{
90006348:	b570      	push	{r4, r5, r6, lr}
9000634a:	460c      	mov	r4, r1
	rock->setX(x);
9000634c:	b211      	sxth	r1, r2
9000634e:	480f      	ldr	r0, [pc, #60]	; (9000638c <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x44>)
{
90006350:	461e      	mov	r6, r3
	rock->setX(x);
90006352:	6822      	ldr	r2, [r4, #0]
90006354:	6b15      	ldr	r5, [r2, #48]	; 0x30
90006356:	4285      	cmp	r5, r0
90006358:	d10c      	bne.n	90006374 <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x2c>
	rock->setY(y);
9000635a:	6b52      	ldr	r2, [r2, #52]	; 0x34
9000635c:	480c      	ldr	r0, [pc, #48]	; (90006390 <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x48>)
        rect.x = x;
9000635e:	80a1      	strh	r1, [r4, #4]
90006360:	b231      	sxth	r1, r6
90006362:	4282      	cmp	r2, r0
90006364:	d10e      	bne.n	90006384 <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x3c>
        rect.y = y;
90006366:	80e1      	strh	r1, [r4, #6]
        return parent;
90006368:	6960      	ldr	r0, [r4, #20]
	rock->getParent()->invalidateContent();
9000636a:	6803      	ldr	r3, [r0, #0]
}
9000636c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	rock->getParent()->invalidateContent();
90006370:	699b      	ldr	r3, [r3, #24]
90006372:	4718      	bx	r3
	rock->setX(x);
90006374:	4620      	mov	r0, r4
90006376:	47a8      	blx	r5
	rock->setY(y);
90006378:	6822      	ldr	r2, [r4, #0]
9000637a:	4805      	ldr	r0, [pc, #20]	; (90006390 <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x48>)
9000637c:	b231      	sxth	r1, r6
9000637e:	6b52      	ldr	r2, [r2, #52]	; 0x34
90006380:	4282      	cmp	r2, r0
90006382:	d0f0      	beq.n	90006366 <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x1e>
90006384:	4620      	mov	r0, r4
90006386:	4790      	blx	r2
90006388:	e7ee      	b.n	90006368 <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x20>
9000638a:	bf00      	nop
9000638c:	900023f5 	.word	0x900023f5
90006390:	900023f9 	.word	0x900023f9

90006394 <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii>:
{
90006394:	b570      	push	{r4, r5, r6, lr}
90006396:	460c      	mov	r4, r1
	bullet->setX(x);
90006398:	b211      	sxth	r1, r2
9000639a:	480f      	ldr	r0, [pc, #60]	; (900063d8 <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii+0x44>)
{
9000639c:	461e      	mov	r6, r3
	bullet->setX(x);
9000639e:	6822      	ldr	r2, [r4, #0]
900063a0:	6b15      	ldr	r5, [r2, #48]	; 0x30
900063a2:	4285      	cmp	r5, r0
900063a4:	d10c      	bne.n	900063c0 <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii+0x2c>
	bullet->setY(y);
900063a6:	6b52      	ldr	r2, [r2, #52]	; 0x34
900063a8:	480c      	ldr	r0, [pc, #48]	; (900063dc <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii+0x48>)
        rect.x = x;
900063aa:	80a1      	strh	r1, [r4, #4]
900063ac:	b231      	sxth	r1, r6
900063ae:	4282      	cmp	r2, r0
900063b0:	d10e      	bne.n	900063d0 <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii+0x3c>
        rect.y = y;
900063b2:	80e1      	strh	r1, [r4, #6]
        return parent;
900063b4:	6960      	ldr	r0, [r4, #20]
	bullet->getParent()->invalidateContent();
900063b6:	6803      	ldr	r3, [r0, #0]
}
900063b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	bullet->getParent()->invalidateContent();
900063bc:	699b      	ldr	r3, [r3, #24]
900063be:	4718      	bx	r3
	bullet->setX(x);
900063c0:	4620      	mov	r0, r4
900063c2:	47a8      	blx	r5
	bullet->setY(y);
900063c4:	6822      	ldr	r2, [r4, #0]
900063c6:	4805      	ldr	r0, [pc, #20]	; (900063dc <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii+0x48>)
900063c8:	b231      	sxth	r1, r6
900063ca:	6b52      	ldr	r2, [r2, #52]	; 0x34
900063cc:	4282      	cmp	r2, r0
900063ce:	d0f0      	beq.n	900063b2 <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii+0x1e>
900063d0:	4620      	mov	r0, r4
900063d2:	4790      	blx	r2
900063d4:	e7ee      	b.n	900063b4 <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii+0x20>
900063d6:	bf00      	nop
900063d8:	900023f5 	.word	0x900023f5
900063dc:	900023f9 	.word	0x900023f9

900063e0 <_ZN20screen_asteroidsView13update_heartsEc>:
{
900063e0:	b510      	push	{r4, lr}
900063e2:	4604      	mov	r4, r0
900063e4:	2903      	cmp	r1, #3
900063e6:	d839      	bhi.n	9000645c <_ZN20screen_asteroidsView13update_heartsEc+0x7c>
900063e8:	e8df f001 	tbb	[pc, r1]
900063ec:	24340221 	.word	0x24340221
    }
900063f0:	2300      	movs	r3, #0
900063f2:	2201      	movs	r2, #1
        visible = vis;
900063f4:	2100      	movs	r1, #0
900063f6:	f884 321d 	strb.w	r3, [r4, #541]	; 0x21d
900063fa:	f884 21f1 	strb.w	r2, [r4, #497]	; 0x1f1
900063fe:	f884 1249 	strb.w	r1, [r4, #585]	; 0x249

    virtual Rect getSolidRect() const;

    virtual void invalidateContent() const
    {
        if (alpha > 0)
90006402:	f894 3220 	ldrb.w	r3, [r4, #544]	; 0x220
90006406:	b133      	cbz	r3, 90006416 <_ZN20screen_asteroidsView13update_heartsEc+0x36>
        if (visible)
90006408:	f894 321d 	ldrb.w	r3, [r4, #541]	; 0x21d
9000640c:	b11b      	cbz	r3, 90006416 <_ZN20screen_asteroidsView13update_heartsEc+0x36>
            invalidate();
9000640e:	f504 70fc 	add.w	r0, r4, #504	; 0x1f8
90006412:	f00f fe52 	bl	900160ba <_ZNK8touchgfx8Drawable10invalidateEv>
90006416:	f894 31f4 	ldrb.w	r3, [r4, #500]	; 0x1f4
9000641a:	b1f3      	cbz	r3, 9000645a <_ZN20screen_asteroidsView13update_heartsEc+0x7a>
        if (visible)
9000641c:	f894 31f1 	ldrb.w	r3, [r4, #497]	; 0x1f1
90006420:	b1db      	cbz	r3, 9000645a <_ZN20screen_asteroidsView13update_heartsEc+0x7a>
            invalidate();
90006422:	f504 70e6 	add.w	r0, r4, #460	; 0x1cc
}
90006426:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000642a:	f00f be46 	b.w	900160ba <_ZNK8touchgfx8Drawable10invalidateEv>
    }
9000642e:	2300      	movs	r3, #0
90006430:	461a      	mov	r2, r3
90006432:	e7df      	b.n	900063f4 <_ZN20screen_asteroidsView13update_heartsEc+0x14>
        visible = vis;
90006434:	2301      	movs	r3, #1
90006436:	f890 224c 	ldrb.w	r2, [r0, #588]	; 0x24c
9000643a:	f880 3249 	strb.w	r3, [r0, #585]	; 0x249
9000643e:	f880 321d 	strb.w	r3, [r0, #541]	; 0x21d
90006442:	f880 31f1 	strb.w	r3, [r0, #497]	; 0x1f1
90006446:	2a00      	cmp	r2, #0
90006448:	d0db      	beq.n	90006402 <_ZN20screen_asteroidsView13update_heartsEc+0x22>
        {
            Widget::invalidateContent();
9000644a:	f500 7009 	add.w	r0, r0, #548	; 0x224
            invalidate();
9000644e:	f00f fe34 	bl	900160ba <_ZNK8touchgfx8Drawable10invalidateEv>
90006452:	e7d6      	b.n	90006402 <_ZN20screen_asteroidsView13update_heartsEc+0x22>
    }
90006454:	2301      	movs	r3, #1
90006456:	461a      	mov	r2, r3
90006458:	e7cc      	b.n	900063f4 <_ZN20screen_asteroidsView13update_heartsEc+0x14>
9000645a:	bd10      	pop	{r4, pc}
        if (alpha > 0)
9000645c:	f890 324c 	ldrb.w	r3, [r0, #588]	; 0x24c
90006460:	2b00      	cmp	r3, #0
90006462:	d0ce      	beq.n	90006402 <_ZN20screen_asteroidsView13update_heartsEc+0x22>
        if (visible)
90006464:	f890 3249 	ldrb.w	r3, [r0, #585]	; 0x249
            Widget::invalidateContent();
90006468:	f500 7009 	add.w	r0, r0, #548	; 0x224
9000646c:	2b00      	cmp	r3, #0
9000646e:	d1ee      	bne.n	9000644e <_ZN20screen_asteroidsView13update_heartsEc+0x6e>
90006470:	e7c7      	b.n	90006402 <_ZN20screen_asteroidsView13update_heartsEc+0x22>
90006472:	bf00      	nop

90006474 <_ZN20screen_asteroidsViewD0Ev>:
90006474:	b570      	push	{r4, r5, r6, lr}
90006476:	f242 340c 	movw	r4, #8972	; 0x230c
9000647a:	f242 45c4 	movw	r5, #9412	; 0x24c4
9000647e:	4b10      	ldr	r3, [pc, #64]	; (900064c0 <_ZN20screen_asteroidsViewD0Ev+0x4c>)
90006480:	4606      	mov	r6, r0
90006482:	4404      	add	r4, r0
90006484:	4405      	add	r5, r0
90006486:	6003      	str	r3, [r0, #0]
90006488:	f855 3d2c 	ldr.w	r3, [r5, #-44]!
9000648c:	681b      	ldr	r3, [r3, #0]
9000648e:	4628      	mov	r0, r5
90006490:	4798      	blx	r3
90006492:	42a5      	cmp	r5, r4
90006494:	d1f8      	bne.n	90006488 <_ZN20screen_asteroidsViewD0Ev+0x14>
90006496:	f242 1554 	movw	r5, #8532	; 0x2154
9000649a:	4435      	add	r5, r6
9000649c:	f854 3d2c 	ldr.w	r3, [r4, #-44]!
900064a0:	681b      	ldr	r3, [r3, #0]
900064a2:	4620      	mov	r0, r4
900064a4:	4798      	blx	r3
900064a6:	42a5      	cmp	r5, r4
900064a8:	d1f8      	bne.n	9000649c <_ZN20screen_asteroidsViewD0Ev+0x28>
900064aa:	4630      	mov	r0, r6
900064ac:	f7fe fa14 	bl	900048d8 <_ZN24screen_asteroidsViewBaseD1Ev>
900064b0:	4630      	mov	r0, r6
900064b2:	f242 41c4 	movw	r1, #9412	; 0x24c4
900064b6:	f01f fed4 	bl	90026262 <_ZdlPvj>
900064ba:	4630      	mov	r0, r6
900064bc:	bd70      	pop	{r4, r5, r6, pc}
900064be:	bf00      	nop
900064c0:	90029e80 	.word	0x90029e80

900064c4 <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE>:
	move_bullet(bullet, BULLET_OFFSCREEN_X, BULLET_OFFSCREEN_Y);
900064c4:	6802      	ldr	r2, [r0, #0]
900064c6:	4b18      	ldr	r3, [pc, #96]	; (90006528 <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x64>)
{
900064c8:	b570      	push	{r4, r5, r6, lr}
	move_bullet(bullet, BULLET_OFFSCREEN_X, BULLET_OFFSCREEN_Y);
900064ca:	6f55      	ldr	r5, [r2, #116]	; 0x74
{
900064cc:	460c      	mov	r4, r1
900064ce:	429d      	cmp	r5, r3
900064d0:	d11a      	bne.n	90006508 <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x44>
	bullet->setX(x);
900064d2:	680b      	ldr	r3, [r1, #0]
900064d4:	4915      	ldr	r1, [pc, #84]	; (9000652c <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x68>)
900064d6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
900064d8:	428a      	cmp	r2, r1
900064da:	d11f      	bne.n	9000651c <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x58>
        rect.x = x;
900064dc:	2200      	movs	r2, #0
900064de:	80a2      	strh	r2, [r4, #4]
	bullet->setY(y);
900064e0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900064e2:	4a13      	ldr	r2, [pc, #76]	; (90006530 <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x6c>)
900064e4:	4293      	cmp	r3, r2
900064e6:	d114      	bne.n	90006512 <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x4e>
        rect.y = y;
900064e8:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
900064ec:	80e3      	strh	r3, [r4, #6]
        return parent;
900064ee:	6960      	ldr	r0, [r4, #20]
	bullet->getParent()->invalidateContent();
900064f0:	6803      	ldr	r3, [r0, #0]
900064f2:	699b      	ldr	r3, [r3, #24]
900064f4:	4798      	blx	r3
900064f6:	6960      	ldr	r0, [r4, #20]
        visible = vis;
900064f8:	2200      	movs	r2, #0
	bullet->getParent()->invalidateContent();
900064fa:	6803      	ldr	r3, [r0, #0]
900064fc:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
90006500:	699b      	ldr	r3, [r3, #24]
}
90006502:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	bullet->getParent()->invalidateContent();
90006506:	4718      	bx	r3
	move_bullet(bullet, BULLET_OFFSCREEN_X, BULLET_OFFSCREEN_Y);
90006508:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
9000650c:	2200      	movs	r2, #0
9000650e:	47a8      	blx	r5
90006510:	e7f1      	b.n	900064f6 <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x32>
	bullet->setY(y);
90006512:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
90006516:	4620      	mov	r0, r4
90006518:	4798      	blx	r3
9000651a:	e7e8      	b.n	900064ee <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x2a>
	bullet->setX(x);
9000651c:	2100      	movs	r1, #0
9000651e:	4620      	mov	r0, r4
90006520:	4790      	blx	r2
	bullet->setY(y);
90006522:	6823      	ldr	r3, [r4, #0]
90006524:	e7dc      	b.n	900064e0 <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x1c>
90006526:	bf00      	nop
90006528:	90006395 	.word	0x90006395
9000652c:	900023f5 	.word	0x900023f5
90006530:	900023f9 	.word	0x900023f9

90006534 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE>:
	move_rock(rock, ROCK_OFFSCREEN_X, ROCK_OFFSCREEN_Y);
90006534:	6802      	ldr	r2, [r0, #0]
90006536:	4b16      	ldr	r3, [pc, #88]	; (90006590 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x5c>)
{
90006538:	b570      	push	{r4, r5, r6, lr}
	move_rock(rock, ROCK_OFFSCREEN_X, ROCK_OFFSCREEN_Y);
9000653a:	6e55      	ldr	r5, [r2, #100]	; 0x64
{
9000653c:	460c      	mov	r4, r1
9000653e:	429d      	cmp	r5, r3
90006540:	d119      	bne.n	90006576 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x42>
	rock->setX(x);
90006542:	680b      	ldr	r3, [r1, #0]
90006544:	4913      	ldr	r1, [pc, #76]	; (90006594 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x60>)
90006546:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90006548:	428a      	cmp	r2, r1
9000654a:	d11c      	bne.n	90006586 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x52>
        rect.x = x;
9000654c:	2200      	movs	r2, #0
9000654e:	80a2      	strh	r2, [r4, #4]
	rock->setY(y);
90006550:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90006552:	4a11      	ldr	r2, [pc, #68]	; (90006598 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x64>)
90006554:	4293      	cmp	r3, r2
90006556:	d112      	bne.n	9000657e <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x4a>
        rect.y = y;
90006558:	2300      	movs	r3, #0
9000655a:	80e3      	strh	r3, [r4, #6]
        return parent;
9000655c:	6960      	ldr	r0, [r4, #20]
	rock->getParent()->invalidateContent();
9000655e:	6803      	ldr	r3, [r0, #0]
90006560:	699b      	ldr	r3, [r3, #24]
90006562:	4798      	blx	r3
90006564:	6960      	ldr	r0, [r4, #20]
        visible = vis;
90006566:	2200      	movs	r2, #0
	rock->getParent()->invalidateContent();
90006568:	6803      	ldr	r3, [r0, #0]
9000656a:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
9000656e:	699b      	ldr	r3, [r3, #24]
}
90006570:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	rock->getParent()->invalidateContent();
90006574:	4718      	bx	r3
	move_rock(rock, ROCK_OFFSCREEN_X, ROCK_OFFSCREEN_Y);
90006576:	2300      	movs	r3, #0
90006578:	461a      	mov	r2, r3
9000657a:	47a8      	blx	r5
9000657c:	e7f2      	b.n	90006564 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x30>
	rock->setY(y);
9000657e:	2100      	movs	r1, #0
90006580:	4620      	mov	r0, r4
90006582:	4798      	blx	r3
90006584:	e7ea      	b.n	9000655c <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x28>
	rock->setX(x);
90006586:	2100      	movs	r1, #0
90006588:	4620      	mov	r0, r4
9000658a:	4790      	blx	r2
	rock->setY(y);
9000658c:	6823      	ldr	r3, [r4, #0]
9000658e:	e7df      	b.n	90006550 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x1c>
90006590:	90006349 	.word	0x90006349
90006594:	900023f5 	.word	0x900023f5
90006598:	900023f9 	.word	0x900023f9

9000659c <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE>:
{
9000659c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900065a0:	460d      	mov	r5, r1
900065a2:	4607      	mov	r7, r0
	int random_x = rand() % (480 - rock->getWidth());
900065a4:	f01f ff6c 	bl	90026480 <rand>
900065a8:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
900065ac:	f5c3 73f0 	rsb	r3, r3, #480	; 0x1e0
900065b0:	fb90 f2f3 	sdiv	r2, r0, r3
900065b4:	fb02 0613 	mls	r6, r2, r3, r0
	int random_y = 0 - (rand() % 272);
900065b8:	f01f ff62 	bl	90026480 <rand>
900065bc:	4b1b      	ldr	r3, [pc, #108]	; (9000662c <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x90>)
900065be:	ea4f 7ce0 	mov.w	ip, r0, asr #31
900065c2:	fb83 2300 	smull	r2, r3, r3, r0
900065c6:	ebcc 1ce3 	rsb	ip, ip, r3, asr #7
	move_rock(rock, random_x, random_y);
900065ca:	683b      	ldr	r3, [r7, #0]
900065cc:	f8d3 8064 	ldr.w	r8, [r3, #100]	; 0x64
	int random_y = 0 - (rand() % 272);
900065d0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
900065d4:	4b16      	ldr	r3, [pc, #88]	; (90006630 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x94>)
900065d6:	ebc0 140c 	rsb	r4, r0, ip, lsl #4
	move_rock(rock, random_x, random_y);
900065da:	4598      	cmp	r8, r3
900065dc:	d119      	bne.n	90006612 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x76>
	rock->setX(x);
900065de:	682b      	ldr	r3, [r5, #0]
900065e0:	b231      	sxth	r1, r6
900065e2:	4814      	ldr	r0, [pc, #80]	; (90006634 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x98>)
900065e4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
900065e6:	4282      	cmp	r2, r0
900065e8:	d11c      	bne.n	90006624 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x88>
        rect.x = x;
900065ea:	80a9      	strh	r1, [r5, #4]
	rock->setY(y);
900065ec:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900065ee:	b221      	sxth	r1, r4
900065f0:	4a11      	ldr	r2, [pc, #68]	; (90006638 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x9c>)
900065f2:	4293      	cmp	r3, r2
900065f4:	d113      	bne.n	9000661e <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x82>
        rect.y = y;
900065f6:	80e9      	strh	r1, [r5, #6]
        return parent;
900065f8:	6968      	ldr	r0, [r5, #20]
	rock->getParent()->invalidateContent();
900065fa:	6803      	ldr	r3, [r0, #0]
900065fc:	699b      	ldr	r3, [r3, #24]
900065fe:	4798      	blx	r3
90006600:	6968      	ldr	r0, [r5, #20]
        visible = vis;
90006602:	2201      	movs	r2, #1
	rock->getParent()->invalidateContent();
90006604:	6803      	ldr	r3, [r0, #0]
90006606:	f885 2025 	strb.w	r2, [r5, #37]	; 0x25
9000660a:	699b      	ldr	r3, [r3, #24]
}
9000660c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
	rock->getParent()->invalidateContent();
90006610:	4718      	bx	r3
	move_rock(rock, random_x, random_y);
90006612:	4623      	mov	r3, r4
90006614:	4632      	mov	r2, r6
90006616:	4638      	mov	r0, r7
90006618:	4629      	mov	r1, r5
9000661a:	47c0      	blx	r8
9000661c:	e7f0      	b.n	90006600 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x64>
	rock->setY(y);
9000661e:	4628      	mov	r0, r5
90006620:	4798      	blx	r3
90006622:	e7e9      	b.n	900065f8 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x5c>
	rock->setX(x);
90006624:	4628      	mov	r0, r5
90006626:	4790      	blx	r2
	rock->setY(y);
90006628:	682b      	ldr	r3, [r5, #0]
9000662a:	e7df      	b.n	900065ec <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x50>
9000662c:	78787879 	.word	0x78787879
90006630:	90006349 	.word	0x90006349
90006634:	900023f5 	.word	0x900023f5
90006638:	900023f9 	.word	0x900023f9

9000663c <_ZN20screen_asteroidsViewC1Ev>:
screen_asteroidsView::screen_asteroidsView()
9000663c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90006640:	4607      	mov	r7, r0
90006642:	f242 1454 	movw	r4, #8532	; 0x2154
90006646:	f242 350c 	movw	r5, #8972	; 0x230c
9000664a:	b082      	sub	sp, #8
9000664c:	f7fe fa4e 	bl	90004aec <_ZN24screen_asteroidsViewBaseC1Ev>
90006650:	443c      	add	r4, r7
90006652:	4b6f      	ldr	r3, [pc, #444]	; (90006810 <_ZN20screen_asteroidsViewC1Ev+0x1d4>)
90006654:	443d      	add	r5, r7
90006656:	f64f 76ff 	movw	r6, #65535	; 0xffff
9000665a:	f04f 38ff 	mov.w	r8, #4294967295
9000665e:	603b      	str	r3, [r7, #0]
90006660:	4620      	mov	r0, r4
90006662:	342c      	adds	r4, #44	; 0x2c
90006664:	a901      	add	r1, sp, #4
90006666:	f8ad 6004 	strh.w	r6, [sp, #4]
9000666a:	f00b f90f 	bl	9001188c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
9000666e:	42a5      	cmp	r5, r4
90006670:	d1f6      	bne.n	90006660 <_ZN20screen_asteroidsViewC1Ev+0x24>
90006672:	f507 5300 	add.w	r3, r7, #8192	; 0x2000
90006676:	2200      	movs	r2, #0
          touchable(false),
90006678:	f44f 7480 	mov.w	r4, #256	; 0x100
        : Widget(), alpha(255), color(0)
9000667c:	4965      	ldr	r1, [pc, #404]	; (90006814 <_ZN20screen_asteroidsViewC1Ev+0x1d8>)
9000667e:	25ff      	movs	r5, #255	; 0xff
}
90006680:	4638      	mov	r0, r7
90006682:	f883 8332 	strb.w	r8, [r3, #818]	; 0x332
90006686:	f8a3 4330 	strh.w	r4, [r3, #816]	; 0x330
9000668a:	f8c3 130c 	str.w	r1, [r3, #780]	; 0x30c
        : color(col)
9000668e:	f8c3 2334 	str.w	r2, [r3, #820]	; 0x334
90006692:	f8a3 435c 	strh.w	r4, [r3, #860]	; 0x35c
90006696:	f8c3 1338 	str.w	r1, [r3, #824]	; 0x338
9000669a:	f8c3 2360 	str.w	r2, [r3, #864]	; 0x360
9000669e:	f883 535e 	strb.w	r5, [r3, #862]	; 0x35e
        : x(0), y(0), width(0), height(0)
900066a2:	e9c3 22c4 	strd	r2, r2, [r3, #784]	; 0x310
900066a6:	e9c3 22c6 	strd	r2, r2, [r3, #792]	; 0x318
          nextSibling(0),
900066aa:	e9c3 22c8 	strd	r2, r2, [r3, #800]	; 0x320
          cachedAbsX(0),
900066ae:	e9c3 22ca 	strd	r2, r2, [r3, #808]	; 0x328
900066b2:	e9c3 22cf 	strd	r2, r2, [r3, #828]	; 0x33c
900066b6:	e9c3 22d1 	strd	r2, r2, [r3, #836]	; 0x344
          nextSibling(0),
900066ba:	e9c3 22d3 	strd	r2, r2, [r3, #844]	; 0x34c
          cachedAbsX(0),
900066be:	e9c3 22d5 	strd	r2, r2, [r3, #852]	; 0x354
900066c2:	e9c3 22da 	strd	r2, r2, [r3, #872]	; 0x368
900066c6:	e9c3 22dc 	strd	r2, r2, [r3, #880]	; 0x370
          nextSibling(0),
900066ca:	e9c3 22de 	strd	r2, r2, [r3, #888]	; 0x378
          cachedAbsX(0),
900066ce:	e9c3 22e0 	strd	r2, r2, [r3, #896]	; 0x380
          touchable(false),
900066d2:	f8a3 4388 	strh.w	r4, [r3, #904]	; 0x388
900066d6:	f8c3 1364 	str.w	r1, [r3, #868]	; 0x364
900066da:	f883 538a 	strb.w	r5, [r3, #906]	; 0x38a
        : color(col)
900066de:	f8c3 238c 	str.w	r2, [r3, #908]	; 0x38c
900066e2:	f8a3 43b4 	strh.w	r4, [r3, #948]	; 0x3b4
900066e6:	f8c3 1390 	str.w	r1, [r3, #912]	; 0x390
900066ea:	f883 53b6 	strb.w	r5, [r3, #950]	; 0x3b6
900066ee:	f8c3 23b8 	str.w	r2, [r3, #952]	; 0x3b8
900066f2:	f8a3 43e0 	strh.w	r4, [r3, #992]	; 0x3e0
900066f6:	f8c3 13bc 	str.w	r1, [r3, #956]	; 0x3bc
900066fa:	f883 53e2 	strb.w	r5, [r3, #994]	; 0x3e2
900066fe:	f8c3 23e4 	str.w	r2, [r3, #996]	; 0x3e4
          parent(0),
90006702:	f8c3 23fc 	str.w	r2, [r3, #1020]	; 0x3fc
        : x(0), y(0), width(0), height(0)
90006706:	e9c3 22e5 	strd	r2, r2, [r3, #916]	; 0x394
9000670a:	e9c3 22e7 	strd	r2, r2, [r3, #924]	; 0x39c
          nextSibling(0),
9000670e:	e9c3 22e9 	strd	r2, r2, [r3, #932]	; 0x3a4
          cachedAbsX(0),
90006712:	e9c3 22eb 	strd	r2, r2, [r3, #940]	; 0x3ac
90006716:	e9c3 22f0 	strd	r2, r2, [r3, #960]	; 0x3c0
9000671a:	e9c3 22f2 	strd	r2, r2, [r3, #968]	; 0x3c8
          nextSibling(0),
9000671e:	e9c3 22f4 	strd	r2, r2, [r3, #976]	; 0x3d0
          cachedAbsX(0),
90006722:	e9c3 22f6 	strd	r2, r2, [r3, #984]	; 0x3d8
90006726:	e9c3 22fb 	strd	r2, r2, [r3, #1004]	; 0x3ec
9000672a:	e9c3 22fd 	strd	r2, r2, [r3, #1012]	; 0x3f4
          nextSibling(0),
9000672e:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
          nextDrawChainElement(0),
90006732:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
          cachedAbsX(0),
90006736:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408
          touchable(false),
9000673a:	f8a3 440c 	strh.w	r4, [r3, #1036]	; 0x40c
9000673e:	f8c3 13e8 	str.w	r1, [r3, #1000]	; 0x3e8
90006742:	f883 540e 	strb.w	r5, [r3, #1038]	; 0x40e
        : color(col)
90006746:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
        : x(0), y(0), width(0), height(0)
9000674a:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
9000674e:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
90006752:	f8c3 2420 	str.w	r2, [r3, #1056]	; 0x420
90006756:	f8c3 2424 	str.w	r2, [r3, #1060]	; 0x424
          parent(0),
9000675a:	f8c3 2428 	str.w	r2, [r3, #1064]	; 0x428
          nextSibling(0),
9000675e:	f8c3 242c 	str.w	r2, [r3, #1068]	; 0x42c
          nextDrawChainElement(0),
90006762:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
          cachedAbsX(0),
90006766:	f8c3 2434 	str.w	r2, [r3, #1076]	; 0x434
          touchable(false),
9000676a:	f8a3 4438 	strh.w	r4, [r3, #1080]	; 0x438
9000676e:	f8c3 1414 	str.w	r1, [r3, #1044]	; 0x414
90006772:	f883 543a 	strb.w	r5, [r3, #1082]	; 0x43a
        : color(col)
90006776:	f8c3 243c 	str.w	r2, [r3, #1084]	; 0x43c
        : x(0), y(0), width(0), height(0)
9000677a:	f8c3 2444 	str.w	r2, [r3, #1092]	; 0x444
9000677e:	f8c3 2448 	str.w	r2, [r3, #1096]	; 0x448
90006782:	f8c3 244c 	str.w	r2, [r3, #1100]	; 0x44c
90006786:	f8c3 2450 	str.w	r2, [r3, #1104]	; 0x450
          parent(0),
9000678a:	f8c3 2454 	str.w	r2, [r3, #1108]	; 0x454
          nextSibling(0),
9000678e:	f8c3 2458 	str.w	r2, [r3, #1112]	; 0x458
          nextDrawChainElement(0),
90006792:	f8c3 245c 	str.w	r2, [r3, #1116]	; 0x45c
          cachedAbsX(0),
90006796:	f8c3 2460 	str.w	r2, [r3, #1120]	; 0x460
          touchable(false),
9000679a:	f8a3 4464 	strh.w	r4, [r3, #1124]	; 0x464
9000679e:	f8c3 1440 	str.w	r1, [r3, #1088]	; 0x440
900067a2:	f883 5466 	strb.w	r5, [r3, #1126]	; 0x466
        : color(col)
900067a6:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
        : x(0), y(0), width(0), height(0)
900067aa:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
900067ae:	f8c3 2474 	str.w	r2, [r3, #1140]	; 0x474
900067b2:	f8c3 2478 	str.w	r2, [r3, #1144]	; 0x478
900067b6:	f8c3 247c 	str.w	r2, [r3, #1148]	; 0x47c
          parent(0),
900067ba:	f8c3 2480 	str.w	r2, [r3, #1152]	; 0x480
          nextSibling(0),
900067be:	f8c3 2484 	str.w	r2, [r3, #1156]	; 0x484
          nextDrawChainElement(0),
900067c2:	f8c3 2488 	str.w	r2, [r3, #1160]	; 0x488
          cachedAbsX(0),
900067c6:	f8c3 248c 	str.w	r2, [r3, #1164]	; 0x48c
          touchable(false),
900067ca:	f8a3 4490 	strh.w	r4, [r3, #1168]	; 0x490
900067ce:	f8a3 44bc 	strh.w	r4, [r3, #1212]	; 0x4bc
900067d2:	f8c3 146c 	str.w	r1, [r3, #1132]	; 0x46c
900067d6:	f883 5492 	strb.w	r5, [r3, #1170]	; 0x492
        : color(col)
900067da:	f8c3 2494 	str.w	r2, [r3, #1172]	; 0x494
        : x(0), y(0), width(0), height(0)
900067de:	f8c3 249c 	str.w	r2, [r3, #1180]	; 0x49c
900067e2:	f8c3 24a0 	str.w	r2, [r3, #1184]	; 0x4a0
900067e6:	f8c3 24a4 	str.w	r2, [r3, #1188]	; 0x4a4
900067ea:	f8c3 24a8 	str.w	r2, [r3, #1192]	; 0x4a8
          parent(0),
900067ee:	f8c3 24ac 	str.w	r2, [r3, #1196]	; 0x4ac
          nextSibling(0),
900067f2:	f8c3 24b0 	str.w	r2, [r3, #1200]	; 0x4b0
          nextDrawChainElement(0),
900067f6:	f8c3 24b4 	str.w	r2, [r3, #1204]	; 0x4b4
          cachedAbsX(0),
900067fa:	f8c3 24b8 	str.w	r2, [r3, #1208]	; 0x4b8
900067fe:	f8c3 1498 	str.w	r1, [r3, #1176]	; 0x498
90006802:	f883 54be 	strb.w	r5, [r3, #1214]	; 0x4be
        : color(col)
90006806:	f8c3 24c0 	str.w	r2, [r3, #1216]	; 0x4c0
9000680a:	b002      	add	sp, #8
9000680c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90006810:	90029e80 	.word	0x90029e80
90006814:	9002a67c 	.word	0x9002a67c

90006818 <_ZN20screen_asteroidsView11setupScreenEv>:
{
90006818:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000681c:	4605      	mov	r5, r0
9000681e:	b085      	sub	sp, #20
90006820:	f242 1b54 	movw	fp, #8532	; 0x2154
90006824:	2400      	movs	r4, #0
90006826:	9001      	str	r0, [sp, #4]
    screen_asteroidsViewBase::setupScreen();
90006828:	f7fd ffe2 	bl	900047f0 <_ZN24screen_asteroidsViewBase11setupScreenEv>
9000682c:	462b      	mov	r3, r5
9000682e:	4e42      	ldr	r6, [pc, #264]	; (90006938 <_ZN20screen_asteroidsView11setupScreenEv+0x120>)
90006830:	3504      	adds	r5, #4
90006832:	4f42      	ldr	r7, [pc, #264]	; (9000693c <_ZN20screen_asteroidsView11setupScreenEv+0x124>)
90006834:	449b      	add	fp, r3
90006836:	f04f 0903 	mov.w	r9, #3
        setY(y);
9000683a:	f04f 0a4f 	mov.w	sl, #79	; 0x4f
		rocks[i].setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000683e:	46a0      	mov	r8, r4
90006840:	e023      	b.n	9000688a <_ZN20screen_asteroidsView11setupScreenEv+0x72>
90006842:	6b5a      	ldr	r2, [r3, #52]	; 0x34
        rect.x = x;
90006844:	f8ab 1004 	strh.w	r1, [fp, #4]
        rect.y = y;
90006848:	42ba      	cmp	r2, r7
9000684a:	d133      	bne.n	900068b4 <_ZN20screen_asteroidsView11setupScreenEv+0x9c>
9000684c:	f8ab a006 	strh.w	sl, [fp, #6]
        setWidth(width);
90006850:	6b9a      	ldr	r2, [r3, #56]	; 0x38
90006852:	4658      	mov	r0, fp
90006854:	2122      	movs	r1, #34	; 0x22
    for(int i = 0; i < ROCK_COUNT; i++) {
90006856:	3422      	adds	r4, #34	; 0x22
90006858:	4790      	blx	r2
        setHeight(height);
9000685a:	f8db 2000 	ldr.w	r2, [fp]
9000685e:	4658      	mov	r0, fp
90006860:	211d      	movs	r1, #29
90006862:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
90006864:	b2a4      	uxth	r4, r4
90006866:	4790      	blx	r2
		rocks[i].setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006868:	f8db 2000 	ldr.w	r2, [fp]
9000686c:	4658      	mov	r0, fp
9000686e:	2100      	movs	r1, #0
90006870:	6e52      	ldr	r2, [r2, #100]	; 0x64
90006872:	4790      	blx	r2
90006874:	4659      	mov	r1, fp
        visible = vis;
90006876:	f88b 8025 	strb.w	r8, [fp, #37]	; 0x25
9000687a:	4628      	mov	r0, r5
9000687c:	f009 fb00 	bl	9000fe80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    for(int i = 0; i < ROCK_COUNT; i++) {
90006880:	f5b4 7faa 	cmp.w	r4, #340	; 0x154
90006884:	f10b 0b2c 	add.w	fp, fp, #44	; 0x2c
90006888:	d01a      	beq.n	900068c0 <_ZN20screen_asteroidsView11setupScreenEv+0xa8>
    	rocks[i].setBitmap(touchgfx::Bitmap(BITMAP_ASTEROIDS_ROCK_ID));
9000688a:	f8db 2000 	ldr.w	r2, [fp]
9000688e:	a903      	add	r1, sp, #12
90006890:	4658      	mov	r0, fp
90006892:	f8ad 900c 	strh.w	r9, [sp, #12]
90006896:	6e12      	ldr	r2, [r2, #96]	; 0x60
90006898:	4790      	blx	r2
        setX(x);
9000689a:	f8db 3000 	ldr.w	r3, [fp]
    	rocks[i].setPosition(i*34, 79, 34, 29);
9000689e:	b221      	sxth	r1, r4
900068a0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
900068a2:	42b2      	cmp	r2, r6
900068a4:	d0cd      	beq.n	90006842 <_ZN20screen_asteroidsView11setupScreenEv+0x2a>
900068a6:	4658      	mov	r0, fp
900068a8:	4790      	blx	r2
900068aa:	f8db 3000 	ldr.w	r3, [fp]
        setY(y);
900068ae:	6b5a      	ldr	r2, [r3, #52]	; 0x34
900068b0:	42ba      	cmp	r2, r7
900068b2:	d0cb      	beq.n	9000684c <_ZN20screen_asteroidsView11setupScreenEv+0x34>
900068b4:	4658      	mov	r0, fp
900068b6:	214f      	movs	r1, #79	; 0x4f
900068b8:	4790      	blx	r2
900068ba:	f8db 3000 	ldr.w	r3, [fp]
900068be:	e7c7      	b.n	90006850 <_ZN20screen_asteroidsView11setupScreenEv+0x38>
900068c0:	9b01      	ldr	r3, [sp, #4]
900068c2:	f242 340c 	movw	r4, #8972	; 0x230c
900068c6:	f242 48c4 	movw	r8, #9412	; 0x24c4
        setX(x);
900068ca:	f04f 0aee 	mov.w	sl, #238	; 0xee
900068ce:	441c      	add	r4, r3
        setY(y);
900068d0:	f04f 09db 	mov.w	r9, #219	; 0xdb
900068d4:	4498      	add	r8, r3
900068d6:	e01c      	b.n	90006912 <_ZN20screen_asteroidsView11setupScreenEv+0xfa>
900068d8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
        rect.x = x;
900068da:	f8a4 a004 	strh.w	sl, [r4, #4]
        rect.y = y;
900068de:	42ba      	cmp	r2, r7
900068e0:	d122      	bne.n	90006928 <_ZN20screen_asteroidsView11setupScreenEv+0x110>
900068e2:	f8a4 9006 	strh.w	r9, [r4, #6]
        setWidth(width);
900068e6:	4620      	mov	r0, r4
900068e8:	2104      	movs	r1, #4
900068ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900068ec:	4798      	blx	r3
        setHeight(height);
900068ee:	6823      	ldr	r3, [r4, #0]
900068f0:	4620      	mov	r0, r4
900068f2:	2104      	movs	r1, #4
900068f4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900068f6:	4798      	blx	r3
        color = newColor;
900068f8:	f04f 32ff 	mov.w	r2, #4294967295
900068fc:	4621      	mov	r1, r4
        visible = vis;
900068fe:	2300      	movs	r3, #0
90006900:	62a2      	str	r2, [r4, #40]	; 0x28
    for(int i = 0; i < BULLET_COUNT; i++) {
90006902:	342c      	adds	r4, #44	; 0x2c
90006904:	4628      	mov	r0, r5
90006906:	f804 3c07 	strb.w	r3, [r4, #-7]
9000690a:	f009 fab9 	bl	9000fe80 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000690e:	45a0      	cmp	r8, r4
90006910:	d00f      	beq.n	90006932 <_ZN20screen_asteroidsView11setupScreenEv+0x11a>
        setX(x);
90006912:	6823      	ldr	r3, [r4, #0]
90006914:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90006916:	42b2      	cmp	r2, r6
90006918:	d0de      	beq.n	900068d8 <_ZN20screen_asteroidsView11setupScreenEv+0xc0>
9000691a:	4620      	mov	r0, r4
9000691c:	21ee      	movs	r1, #238	; 0xee
9000691e:	4790      	blx	r2
90006920:	6823      	ldr	r3, [r4, #0]
        setY(y);
90006922:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90006924:	42ba      	cmp	r2, r7
90006926:	d0dc      	beq.n	900068e2 <_ZN20screen_asteroidsView11setupScreenEv+0xca>
90006928:	4620      	mov	r0, r4
9000692a:	21db      	movs	r1, #219	; 0xdb
9000692c:	4790      	blx	r2
9000692e:	6823      	ldr	r3, [r4, #0]
90006930:	e7d9      	b.n	900068e6 <_ZN20screen_asteroidsView11setupScreenEv+0xce>
}
90006932:	b005      	add	sp, #20
90006934:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90006938:	900023f5 	.word	0x900023f5
9000693c:	900023f9 	.word	0x900023f9

90006940 <_ZN27screen_game_selectPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_game_selectPresenter() {}
90006940:	4770      	bx	lr
90006942:	bf00      	nop

90006944 <_ZThn4_N27screen_game_selectPresenterD1Ev>:
90006944:	3804      	subs	r0, #4
90006946:	4770      	bx	lr

90006948 <_ZN27screen_game_selectPresenter10deactivateEv>:
}

void screen_game_selectPresenter::activate()
{

}
90006948:	4770      	bx	lr
9000694a:	bf00      	nop

9000694c <_ZN27screen_game_selectPresenterD0Ev>:
9000694c:	b510      	push	{r4, lr}
9000694e:	4604      	mov	r4, r0
90006950:	2110      	movs	r1, #16
90006952:	f01f fc86 	bl	90026262 <_ZdlPvj>
90006956:	4620      	mov	r0, r4
90006958:	bd10      	pop	{r4, pc}
9000695a:	bf00      	nop

9000695c <_ZThn4_N27screen_game_selectPresenterD0Ev>:
9000695c:	b500      	push	{lr}
9000695e:	3804      	subs	r0, #4
90006960:	b083      	sub	sp, #12
90006962:	2110      	movs	r1, #16
90006964:	9001      	str	r0, [sp, #4]
90006966:	f01f fc7c 	bl	90026262 <_ZdlPvj>
9000696a:	9801      	ldr	r0, [sp, #4]
9000696c:	b003      	add	sp, #12
9000696e:	f85d fb04 	ldr.w	pc, [sp], #4
90006972:	bf00      	nop

90006974 <_ZN27screen_game_selectPresenterC1ER22screen_game_selectView>:
    : view(v)
90006974:	4a06      	ldr	r2, [pc, #24]	; (90006990 <_ZN27screen_game_selectPresenterC1ER22screen_game_selectView+0x1c>)
90006976:	60c1      	str	r1, [r0, #12]
screen_game_selectPresenter::screen_game_selectPresenter(screen_game_selectView& v)
90006978:	b410      	push	{r4}
9000697a:	2400      	movs	r4, #0
9000697c:	6084      	str	r4, [r0, #8]
    : view(v)
9000697e:	f102 0408 	add.w	r4, r2, #8
90006982:	3220      	adds	r2, #32
90006984:	e9c0 4200 	strd	r4, r2, [r0]
}
90006988:	f85d 4b04 	ldr.w	r4, [sp], #4
9000698c:	4770      	bx	lr
9000698e:	bf00      	nop
90006990:	90029ef8 	.word	0x90029ef8

90006994 <_ZN22screen_game_selectView14tearDownScreenEv>:
}

void screen_game_selectView::tearDownScreen()
{
    screen_game_selectViewBase::tearDownScreen();
}
90006994:	4770      	bx	lr
90006996:	bf00      	nop

90006998 <_ZN22screen_game_selectViewD1Ev>:

class screen_game_selectView : public screen_game_selectViewBase
{
public:
    screen_game_selectView();
    virtual ~screen_game_selectView() {}
90006998:	4b03      	ldr	r3, [pc, #12]	; (900069a8 <_ZN22screen_game_selectViewD1Ev+0x10>)
9000699a:	b510      	push	{r4, lr}
9000699c:	4604      	mov	r4, r0
9000699e:	6003      	str	r3, [r0, #0]
900069a0:	f7fe fd30 	bl	90005404 <_ZN26screen_game_selectViewBaseD1Ev>
900069a4:	4620      	mov	r0, r4
900069a6:	bd10      	pop	{r4, pc}
900069a8:	90029f48 	.word	0x90029f48

900069ac <_ZN22screen_game_selectViewD0Ev>:
900069ac:	4b06      	ldr	r3, [pc, #24]	; (900069c8 <_ZN22screen_game_selectViewD0Ev+0x1c>)
900069ae:	b510      	push	{r4, lr}
900069b0:	4604      	mov	r4, r0
900069b2:	6003      	str	r3, [r0, #0]
900069b4:	f7fe fd26 	bl	90005404 <_ZN26screen_game_selectViewBaseD1Ev>
900069b8:	f44f 71ca 	mov.w	r1, #404	; 0x194
900069bc:	4620      	mov	r0, r4
900069be:	f01f fc50 	bl	90026262 <_ZdlPvj>
900069c2:	4620      	mov	r0, r4
900069c4:	bd10      	pop	{r4, pc}
900069c6:	bf00      	nop
900069c8:	90029f48 	.word	0x90029f48

900069cc <_ZN22screen_game_selectViewC1Ev>:
screen_game_selectView::screen_game_selectView()
900069cc:	b510      	push	{r4, lr}
900069ce:	4604      	mov	r4, r0
900069d0:	f7fe fe24 	bl	9000561c <_ZN26screen_game_selectViewBaseC1Ev>
900069d4:	4b01      	ldr	r3, [pc, #4]	; (900069dc <_ZN22screen_game_selectViewC1Ev+0x10>)
}
900069d6:	4620      	mov	r0, r4
screen_game_selectView::screen_game_selectView()
900069d8:	6023      	str	r3, [r4, #0]
}
900069da:	bd10      	pop	{r4, pc}
900069dc:	90029f48 	.word	0x90029f48

900069e0 <_ZN22screen_game_selectView11setupScreenEv>:
    screen_game_selectViewBase::setupScreen();
900069e0:	f7fe bd12 	b.w	90005408 <_ZN26screen_game_selectViewBase11setupScreenEv>

900069e4 <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
900069e4:	f240 1c01 	movw	ip, #257	; 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
900069e8:	2005      	movs	r0, #5
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
900069ea:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
900069ee:	f44f 7388 	mov.w	r3, #272	; 0x110
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
900069f2:	7088      	strb	r0, [r1, #2]

  return FT5336_OK;
}
900069f4:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
900069f6:	f8a1 c000 	strh.w	ip, [r1]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
900069fa:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
900069fe:	4770      	bx	lr

90006a00 <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
90006a00:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
90006a04:	2b01      	cmp	r3, #1
90006a06:	d102      	bne.n	90006a0e <FT5336_DeInit+0xe>
  {
    pObj->IsInitialized = 0;
90006a08:	2300      	movs	r3, #0
90006a0a:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
  }

  return ret;
}
90006a0e:	2000      	movs	r0, #0
90006a10:	4770      	bx	lr
90006a12:	bf00      	nop

90006a14 <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
90006a14:	2000      	movs	r0, #0
90006a16:	4770      	bx	lr

90006a18 <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90006a18:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90006a1a:	6904      	ldr	r4, [r0, #16]
90006a1c:	8900      	ldrh	r0, [r0, #8]
90006a1e:	46a4      	mov	ip, r4
}
90006a20:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90006a24:	4760      	bx	ip
90006a26:	bf00      	nop

90006a28 <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90006a28:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90006a2a:	68c4      	ldr	r4, [r0, #12]
90006a2c:	8900      	ldrh	r0, [r0, #8]
90006a2e:	46a4      	mov	ip, r4
}
90006a30:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90006a34:	4760      	bx	ip
90006a36:	bf00      	nop

90006a38 <FT5336_GestureConfig>:
{
90006a38:	b570      	push	{r4, r5, r6, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90006a3a:	f100 0518 	add.w	r5, r0, #24
{
90006a3e:	460e      	mov	r6, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90006a40:	7809      	ldrb	r1, [r1, #0]
90006a42:	4628      	mov	r0, r5
90006a44:	f000 f96c 	bl	90006d20 <ft5336_radian_value>
90006a48:	4604      	mov	r4, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
90006a4a:	7931      	ldrb	r1, [r6, #4]
90006a4c:	4628      	mov	r0, r5
90006a4e:	f000 f975 	bl	90006d3c <ft5336_offset_left_right>
90006a52:	4404      	add	r4, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
90006a54:	7a31      	ldrb	r1, [r6, #8]
90006a56:	4628      	mov	r0, r5
90006a58:	f000 f97e 	bl	90006d58 <ft5336_offset_up_down>
90006a5c:	4404      	add	r4, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90006a5e:	7b31      	ldrb	r1, [r6, #12]
90006a60:	4628      	mov	r0, r5
90006a62:	f000 f987 	bl	90006d74 <ft5336_disatnce_left_right>
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90006a66:	7c31      	ldrb	r1, [r6, #16]
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90006a68:	4404      	add	r4, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90006a6a:	4628      	mov	r0, r5
90006a6c:	f000 f990 	bl	90006d90 <ft5336_distance_up_down>
90006a70:	4603      	mov	r3, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90006a72:	7d31      	ldrb	r1, [r6, #20]
90006a74:	4628      	mov	r0, r5
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90006a76:	441c      	add	r4, r3
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90006a78:	f000 f998 	bl	90006dac <ft5336_distance_zoom>
  if(ret != FT5336_OK)
90006a7c:	42c4      	cmn	r4, r0
}
90006a7e:	bf14      	ite	ne
90006a80:	f04f 30ff 	movne.w	r0, #4294967295
90006a84:	2000      	moveq	r0, #0
90006a86:	bd70      	pop	{r4, r5, r6, pc}

90006a88 <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
90006a88:	3018      	adds	r0, #24
90006a8a:	f000 b9ab 	b.w	90006de4 <ft5336_chip_id>
90006a8e:	bf00      	nop

90006a90 <FT5336_GetState>:
{
90006a90:	b530      	push	{r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006a92:	f100 0518 	add.w	r5, r0, #24
{
90006a96:	b083      	sub	sp, #12
90006a98:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006a9a:	4628      	mov	r0, r5
90006a9c:	a901      	add	r1, sp, #4
90006a9e:	f000 f931 	bl	90006d04 <ft5336_td_status>
90006aa2:	bb10      	cbnz	r0, 90006aea <FT5336_GetState+0x5a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90006aa4:	f89d 3004 	ldrb.w	r3, [sp, #4]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90006aa8:	2b05      	cmp	r3, #5
90006aaa:	bf94      	ite	ls
90006aac:	4619      	movls	r1, r3
90006aae:	2100      	movhi	r1, #0
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90006ab0:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90006ab2:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90006ab4:	4628      	mov	r0, r5
90006ab6:	2103      	movs	r1, #3
90006ab8:	eb0d 0203 	add.w	r2, sp, r3
90006abc:	f000 f910 	bl	90006ce0 <ft5336_read_reg>
90006ac0:	b9b0      	cbnz	r0, 90006af0 <FT5336_GetState+0x60>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006ac2:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006ac6:	f89d 3006 	ldrb.w	r3, [sp, #6]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006aca:	0212      	lsls	r2, r2, #8
90006acc:	f89d 1005 	ldrb.w	r1, [sp, #5]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006ad0:	021b      	lsls	r3, r3, #8
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006ad2:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006ad6:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006ada:	430a      	orrs	r2, r1
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006adc:	f89d 1007 	ldrb.w	r1, [sp, #7]
90006ae0:	430b      	orrs	r3, r1
90006ae2:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
90006ae6:	b003      	add	sp, #12
90006ae8:	bd30      	pop	{r4, r5, pc}
90006aea:	f04f 31ff 	mov.w	r1, #4294967295
90006aee:	e7df      	b.n	90006ab0 <FT5336_GetState+0x20>
    ret = FT5336_ERROR;
90006af0:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90006af4:	e7f7      	b.n	90006ae6 <FT5336_GetState+0x56>
90006af6:	bf00      	nop

90006af8 <FT5336_GetMultiTouchState>:
{
90006af8:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006afa:	f100 0518 	add.w	r5, r0, #24
{
90006afe:	b088      	sub	sp, #32
90006b00:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006b02:	4628      	mov	r0, r5
90006b04:	4669      	mov	r1, sp
90006b06:	f000 f8fd 	bl	90006d04 <ft5336_td_status>
90006b0a:	2800      	cmp	r0, #0
90006b0c:	f040 809a 	bne.w	90006c44 <FT5336_GetMultiTouchState+0x14c>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90006b10:	f89d 3000 	ldrb.w	r3, [sp]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90006b14:	2b05      	cmp	r3, #5
90006b16:	bf94      	ite	ls
90006b18:	4619      	movls	r1, r3
90006b1a:	2100      	movhi	r1, #0
90006b1c:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90006b1e:	231e      	movs	r3, #30
90006b20:	466a      	mov	r2, sp
90006b22:	4628      	mov	r0, r5
90006b24:	2103      	movs	r1, #3
90006b26:	f000 f8db 	bl	90006ce0 <ft5336_read_reg>
90006b2a:	2800      	cmp	r0, #0
90006b2c:	f040 808d 	bne.w	90006c4a <FT5336_GetMultiTouchState+0x152>
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006b30:	f89d 1000 	ldrb.w	r1, [sp]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006b34:	f89d 3002 	ldrb.w	r3, [sp, #2]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006b38:	020a      	lsls	r2, r1, #8
90006b3a:	f89d 5001 	ldrb.w	r5, [sp, #1]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006b3e:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006b40:	f89d c007 	ldrb.w	ip, [sp, #7]
90006b44:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006b48:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006b4a:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006b4e:	f89d 6011 	ldrb.w	r6, [sp, #17]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006b52:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006b54:	f89d 5003 	ldrb.w	r5, [sp, #3]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006b58:	6421      	str	r1, [r4, #64]	; 0x40
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006b5a:	0936      	lsrs	r6, r6, #4
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006b5c:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006b5e:	6062      	str	r2, [r4, #4]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006b60:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006b64:	61a3      	str	r3, [r4, #24]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006b66:	f89d 3005 	ldrb.w	r3, [sp, #5]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006b6a:	f89d 1006 	ldrb.w	r1, [sp, #6]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006b6e:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006b70:	62e2      	str	r2, [r4, #44]	; 0x2c
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006b72:	f89d 200b 	ldrb.w	r2, [sp, #11]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006b76:	020d      	lsls	r5, r1, #8
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006b78:	6563      	str	r3, [r4, #84]	; 0x54
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006b7a:	0989      	lsrs	r1, r1, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006b7c:	f89d 300c 	ldrb.w	r3, [sp, #12]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006b80:	0912      	lsrs	r2, r2, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006b82:	6461      	str	r1, [r4, #68]	; 0x44
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006b84:	f405 6570 	and.w	r5, r5, #3840	; 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006b88:	f89d 100a 	ldrb.w	r1, [sp, #10]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006b8c:	65a2      	str	r2, [r4, #88]	; 0x58
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006b8e:	021a      	lsls	r2, r3, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006b90:	6321      	str	r1, [r4, #48]	; 0x30
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006b92:	ea45 050c 	orr.w	r5, r5, ip
90006b96:	f402 6170 	and.w	r1, r2, #3840	; 0xf00
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006b9a:	f89d 2008 	ldrb.w	r2, [sp, #8]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006b9e:	099b      	lsrs	r3, r3, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006ba0:	60a5      	str	r5, [r4, #8]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006ba2:	0212      	lsls	r2, r2, #8
90006ba4:	f89d 5009 	ldrb.w	r5, [sp, #9]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006ba8:	64a3      	str	r3, [r4, #72]	; 0x48
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006baa:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006bae:	f89d 3010 	ldrb.w	r3, [sp, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006bb2:	432a      	orrs	r2, r5
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006bb4:	6363      	str	r3, [r4, #52]	; 0x34
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006bb6:	f89d 300e 	ldrb.w	r3, [sp, #14]
90006bba:	61e2      	str	r2, [r4, #28]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006bbc:	f89d 200d 	ldrb.w	r2, [sp, #13]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006bc0:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006bc2:	430a      	orrs	r2, r1
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006bc4:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006bc8:	60e2      	str	r2, [r4, #12]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006bca:	f89d 200f 	ldrb.w	r2, [sp, #15]
90006bce:	4313      	orrs	r3, r2
90006bd0:	6223      	str	r3, [r4, #32]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006bd2:	65e6      	str	r6, [r4, #92]	; 0x5c
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006bd4:	f89d 1012 	ldrb.w	r1, [sp, #18]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006bd8:	f89d 3014 	ldrb.w	r3, [sp, #20]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006bdc:	020a      	lsls	r2, r1, #8
90006bde:	f89d 5013 	ldrb.w	r5, [sp, #19]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006be2:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006be4:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006be8:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006bea:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006bee:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006bf0:	f89d 5015 	ldrb.w	r5, [sp, #21]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006bf4:	64e1      	str	r1, [r4, #76]	; 0x4c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006bf6:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006bf8:	f89d 1018 	ldrb.w	r1, [sp, #24]
90006bfc:	6122      	str	r2, [r4, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006bfe:	6263      	str	r3, [r4, #36]	; 0x24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006c00:	020b      	lsls	r3, r1, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006c02:	f89d 2016 	ldrb.w	r2, [sp, #22]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006c06:	0989      	lsrs	r1, r1, #6
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006c08:	f89d 5017 	ldrb.w	r5, [sp, #23]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006c0c:	63a2      	str	r2, [r4, #56]	; 0x38
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006c0e:	f403 6270 	and.w	r2, r3, #3840	; 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006c12:	f89d 301d 	ldrb.w	r3, [sp, #29]
90006c16:	092d      	lsrs	r5, r5, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006c18:	6521      	str	r1, [r4, #80]	; 0x50
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006c1a:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006c1c:	f89d 101c 	ldrb.w	r1, [sp, #28]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006c20:	6625      	str	r5, [r4, #96]	; 0x60
90006c22:	6663      	str	r3, [r4, #100]	; 0x64
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006c24:	f89d 301a 	ldrb.w	r3, [sp, #26]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006c28:	63e1      	str	r1, [r4, #60]	; 0x3c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006c2a:	021b      	lsls	r3, r3, #8
90006c2c:	f89d 101b 	ldrb.w	r1, [sp, #27]
90006c30:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
90006c34:	430b      	orrs	r3, r1
90006c36:	62a3      	str	r3, [r4, #40]	; 0x28
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006c38:	f89d 3019 	ldrb.w	r3, [sp, #25]
90006c3c:	4313      	orrs	r3, r2
90006c3e:	6163      	str	r3, [r4, #20]
}
90006c40:	b008      	add	sp, #32
90006c42:	bd70      	pop	{r4, r5, r6, pc}
90006c44:	f04f 31ff 	mov.w	r1, #4294967295
90006c48:	e768      	b.n	90006b1c <FT5336_GetMultiTouchState+0x24>
    ret = FT5336_ERROR;
90006c4a:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90006c4e:	e7f7      	b.n	90006c40 <FT5336_GetMultiTouchState+0x148>

90006c50 <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
90006c50:	3018      	adds	r0, #24
90006c52:	f000 b84d 	b.w	90006cf0 <ft5336_gest_id>
90006c56:	bf00      	nop

90006c58 <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
90006c58:	2101      	movs	r1, #1
90006c5a:	3018      	adds	r0, #24
90006c5c:	f000 b8b4 	b.w	90006dc8 <ft5336_g_mode>

90006c60 <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90006c60:	2100      	movs	r1, #0
90006c62:	3018      	adds	r0, #24
90006c64:	f000 b8b0 	b.w	90006dc8 <ft5336_g_mode>

90006c68 <FT5336_Init>:
{
90006c68:	b570      	push	{r4, r5, r6, lr}
  if(pObj->IsInitialized == 0U)
90006c6a:	f890 5024 	ldrb.w	r5, [r0, #36]	; 0x24
90006c6e:	b98d      	cbnz	r5, 90006c94 <FT5336_Init+0x2c>
    pObj->IO.Init();
90006c70:	4606      	mov	r6, r0
90006c72:	4604      	mov	r4, r0
90006c74:	f856 3b18 	ldr.w	r3, [r6], #24
90006c78:	4798      	blx	r3
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90006c7a:	4629      	mov	r1, r5
90006c7c:	4630      	mov	r0, r6
90006c7e:	f000 f8a3 	bl	90006dc8 <ft5336_g_mode>
  if(ret != FT5336_OK)
90006c82:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
90006c84:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
90006c88:	bf18      	it	ne
90006c8a:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
90006c8c:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
  if(ret != FT5336_OK)
90006c90:	4240      	negs	r0, r0
}
90006c92:	bd70      	pop	{r4, r5, r6, pc}
  int32_t ret = FT5336_OK;
90006c94:	2000      	movs	r0, #0
}
90006c96:	bd70      	pop	{r4, r5, r6, pc}

90006c98 <FT5336_ClearIT>:
90006c98:	2000      	movs	r0, #0
90006c9a:	4770      	bx	lr

90006c9c <FT5336_RegisterBusIO>:
  if (pObj == NULL)
90006c9c:	b1c0      	cbz	r0, 90006cd0 <FT5336_RegisterBusIO+0x34>
    pObj->IO.Address   = pIO->Address;
90006c9e:	890a      	ldrh	r2, [r1, #8]
{
90006ca0:	b430      	push	{r4, r5}
    pObj->IO.DeInit    = pIO->DeInit;
90006ca2:	e9d1 3400 	ldrd	r3, r4, [r1]
    pObj->IO.Address   = pIO->Address;
90006ca6:	8102      	strh	r2, [r0, #8]
    pObj->IO.DeInit    = pIO->DeInit;
90006ca8:	e9c0 3400 	strd	r3, r4, [r0]
    pObj->IO.WriteReg  = pIO->WriteReg;
90006cac:	694a      	ldr	r2, [r1, #20]
90006cae:	e9d1 5403 	ldrd	r5, r4, [r1, #12]
    pObj->Ctx.ReadReg  = ReadRegWrap;
90006cb2:	4909      	ldr	r1, [pc, #36]	; (90006cd8 <FT5336_RegisterBusIO+0x3c>)
    pObj->IO.WriteReg  = pIO->WriteReg;
90006cb4:	60c5      	str	r5, [r0, #12]
90006cb6:	e9c0 4204 	strd	r4, r2, [r0, #16]
    pObj->Ctx.WriteReg = WriteRegWrap;
90006cba:	4a08      	ldr	r2, [pc, #32]	; (90006cdc <FT5336_RegisterBusIO+0x40>)
    pObj->Ctx.handle   = pObj;
90006cbc:	e9c0 1007 	strd	r1, r0, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
90006cc0:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
90006cc2:	b10b      	cbz	r3, 90006cc8 <FT5336_RegisterBusIO+0x2c>
}
90006cc4:	bc30      	pop	{r4, r5}
      ret = pObj->IO.Init();
90006cc6:	4718      	bx	r3
}
90006cc8:	f04f 30ff 	mov.w	r0, #4294967295
90006ccc:	bc30      	pop	{r4, r5}
90006cce:	4770      	bx	lr
90006cd0:	f04f 30ff 	mov.w	r0, #4294967295
90006cd4:	4770      	bx	lr
90006cd6:	bf00      	nop
90006cd8:	90006a19 	.word	0x90006a19
90006cdc:	90006a29 	.word	0x90006a29

90006ce0 <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
90006ce0:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006ce2:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90006ce6:	46a4      	mov	ip, r4
}
90006ce8:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006cec:	4760      	bx	ip
90006cee:	bf00      	nop

90006cf0 <ft5336_gest_id>:
  * @param  ctx Component context 
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90006cf0:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006cf2:	2301      	movs	r3, #1
{
90006cf4:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006cf6:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90006cfa:	4619      	mov	r1, r3
90006cfc:	46a4      	mov	ip, r4
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
}
90006cfe:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006d02:	4760      	bx	ip

90006d04 <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
90006d04:	b538      	push	{r3, r4, r5, lr}
90006d06:	460c      	mov	r4, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006d08:	2301      	movs	r3, #1
90006d0a:	2102      	movs	r1, #2
90006d0c:	4622      	mov	r2, r4
90006d0e:	e9d0 5001 	ldrd	r5, r0, [r0, #4]
90006d12:	47a8      	blx	r5
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
  
  if(ret == 0)
90006d14:	b918      	cbnz	r0, 90006d1e <ft5336_td_status+0x1a>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
90006d16:	7823      	ldrb	r3, [r4, #0]
90006d18:	f003 030f 	and.w	r3, r3, #15
90006d1c:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
90006d1e:	bd38      	pop	{r3, r4, r5, pc}

90006d20 <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
90006d20:	b510      	push	{r4, lr}
90006d22:	460c      	mov	r4, r1
90006d24:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006d26:	2301      	movs	r3, #1
90006d28:	2191      	movs	r1, #145	; 0x91
{
90006d2a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006d2e:	f10d 0207 	add.w	r2, sp, #7
90006d32:	6804      	ldr	r4, [r0, #0]
90006d34:	6880      	ldr	r0, [r0, #8]
90006d36:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
}
90006d38:	b002      	add	sp, #8
90006d3a:	bd10      	pop	{r4, pc}

90006d3c <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90006d3c:	b510      	push	{r4, lr}
90006d3e:	460c      	mov	r4, r1
90006d40:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006d42:	2301      	movs	r3, #1
90006d44:	2192      	movs	r1, #146	; 0x92
{
90006d46:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006d4a:	f10d 0207 	add.w	r2, sp, #7
90006d4e:	6804      	ldr	r4, [r0, #0]
90006d50:	6880      	ldr	r0, [r0, #8]
90006d52:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
}
90006d54:	b002      	add	sp, #8
90006d56:	bd10      	pop	{r4, pc}

90006d58 <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90006d58:	b510      	push	{r4, lr}
90006d5a:	460c      	mov	r4, r1
90006d5c:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006d5e:	2301      	movs	r3, #1
90006d60:	2193      	movs	r1, #147	; 0x93
{
90006d62:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006d66:	f10d 0207 	add.w	r2, sp, #7
90006d6a:	6804      	ldr	r4, [r0, #0]
90006d6c:	6880      	ldr	r0, [r0, #8]
90006d6e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
}
90006d70:	b002      	add	sp, #8
90006d72:	bd10      	pop	{r4, pc}

90006d74 <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90006d74:	b510      	push	{r4, lr}
90006d76:	460c      	mov	r4, r1
90006d78:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006d7a:	2301      	movs	r3, #1
90006d7c:	2194      	movs	r1, #148	; 0x94
{
90006d7e:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006d82:	f10d 0207 	add.w	r2, sp, #7
90006d86:	6804      	ldr	r4, [r0, #0]
90006d88:	6880      	ldr	r0, [r0, #8]
90006d8a:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
}
90006d8c:	b002      	add	sp, #8
90006d8e:	bd10      	pop	{r4, pc}

90006d90 <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90006d90:	b510      	push	{r4, lr}
90006d92:	460c      	mov	r4, r1
90006d94:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006d96:	2301      	movs	r3, #1
90006d98:	2195      	movs	r1, #149	; 0x95
{
90006d9a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006d9e:	f10d 0207 	add.w	r2, sp, #7
90006da2:	6804      	ldr	r4, [r0, #0]
90006da4:	6880      	ldr	r0, [r0, #8]
90006da6:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
}
90006da8:	b002      	add	sp, #8
90006daa:	bd10      	pop	{r4, pc}

90006dac <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
90006dac:	b510      	push	{r4, lr}
90006dae:	460c      	mov	r4, r1
90006db0:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006db2:	2301      	movs	r3, #1
90006db4:	2196      	movs	r1, #150	; 0x96
{
90006db6:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006dba:	f10d 0207 	add.w	r2, sp, #7
90006dbe:	6804      	ldr	r4, [r0, #0]
90006dc0:	6880      	ldr	r0, [r0, #8]
90006dc2:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
}
90006dc4:	b002      	add	sp, #8
90006dc6:	bd10      	pop	{r4, pc}

90006dc8 <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
90006dc8:	b510      	push	{r4, lr}
90006dca:	460c      	mov	r4, r1
90006dcc:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006dce:	2301      	movs	r3, #1
90006dd0:	21a4      	movs	r1, #164	; 0xa4
{
90006dd2:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006dd6:	f10d 0207 	add.w	r2, sp, #7
90006dda:	6804      	ldr	r4, [r0, #0]
90006ddc:	6880      	ldr	r0, [r0, #8]
90006dde:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
}
90006de0:	b002      	add	sp, #8
90006de2:	bd10      	pop	{r4, pc}

90006de4 <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90006de4:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006de6:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
{
90006dea:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006dec:	2301      	movs	r3, #1
90006dee:	46a4      	mov	ip, r4
90006df0:	21a8      	movs	r1, #168	; 0xa8
    *value &= FT5336_CHIP_ID_BIT_MASK; 
    *value = *value >> FT5336_CHIP_ID_BIT_POSITION; 
  }
  
  return ret;
}
90006df2:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006df6:	4760      	bx	ip

90006df8 <MT48LC4M32B2_Init>:
  * @param  Ctx : Component object pointer
  * @param  pRegMode : Pointer to Register Mode stucture
  * @retval error status
  */
int32_t MT48LC4M32B2_Init(SDRAM_HandleTypeDef *Ctx, MT48LC4M32B2_Context_t *pRegMode) 
{
90006df8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  int32_t ret = MT48LC4M32B2_ERROR;
  
  /* Step 1: Configure a clock configuration enable command */
  if(MT48LC4M32B2_ClockEnable(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90006dfa:	680b      	ldr	r3, [r1, #0]
{
90006dfc:	460d      	mov	r5, r1
  * @param  Interface : Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t MT48LC4M32B2_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
90006dfe:	4c2a      	ldr	r4, [pc, #168]	; (90006ea8 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandTarget          = Interface;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006e00:	f64f 72ff 	movw	r2, #65535	; 0xffff
{
90006e04:	4607      	mov	r7, r0
  Command.CommandTarget          = Interface;
90006e06:	6063      	str	r3, [r4, #4]
  Command.ModeRegisterDefinition = 0;
90006e08:	2300      	movs	r3, #0
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006e0a:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = 0;
90006e0c:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
90006e0e:	2301      	movs	r3, #1
90006e10:	6023      	str	r3, [r4, #0]
  Command.AutoRefreshNumber      = 1;
90006e12:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006e14:	f005 fd2a 	bl	9000c86c <HAL_SDRAM_SendCommand>
90006e18:	2800      	cmp	r0, #0
90006e1a:	d142      	bne.n	90006ea2 <MT48LC4M32B2_Init+0xaa>
  * @retval MT48LC4M32B2_OK
  */
static int32_t MT48LC4M32B2_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
90006e1c:	f000 ff46 	bl	90007cac <HAL_GetTick>
90006e20:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
90006e22:	f000 ff43 	bl	90007cac <HAL_GetTick>
90006e26:	4286      	cmp	r6, r0
90006e28:	d0fb      	beq.n	90006e22 <MT48LC4M32B2_Init+0x2a>
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90006e2a:	2302      	movs	r3, #2
    if(MT48LC4M32B2_Precharge(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90006e2c:	682a      	ldr	r2, [r5, #0]
  Command.AutoRefreshNumber      = 1;
90006e2e:	2601      	movs	r6, #1
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006e30:	491d      	ldr	r1, [pc, #116]	; (90006ea8 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90006e32:	6023      	str	r3, [r4, #0]
  Command.ModeRegisterDefinition = 0;
90006e34:	2300      	movs	r3, #0
  Command.CommandTarget          = Interface;
90006e36:	6062      	str	r2, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006e38:	4638      	mov	r0, r7
90006e3a:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.AutoRefreshNumber      = 1;
90006e3e:	60a6      	str	r6, [r4, #8]
  Command.ModeRegisterDefinition = 0;
90006e40:	60e3      	str	r3, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006e42:	f005 fd13 	bl	9000c86c <HAL_SDRAM_SendCommand>
90006e46:	bb60      	cbnz	r0, 90006ea2 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006e48:	4917      	ldr	r1, [pc, #92]	; (90006ea8 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = RefreshMode;
90006e4a:	e9d5 3200 	ldrd	r3, r2, [r5]
  Command.ModeRegisterDefinition = 0;
90006e4e:	60e0      	str	r0, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006e50:	4638      	mov	r0, r7
  Command.CommandMode            = RefreshMode;
90006e52:	e9c4 2300 	strd	r2, r3, [r4]
  Command.AutoRefreshNumber      = 8;
90006e56:	2308      	movs	r3, #8
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006e58:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.AutoRefreshNumber      = 8;
90006e5c:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006e5e:	f005 fd05 	bl	9000c86c <HAL_SDRAM_SendCommand>
90006e62:	b9f0      	cbnz	r0, 90006ea2 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006e64:	4910      	ldr	r1, [pc, #64]	; (90006ea8 <MT48LC4M32B2_Init+0xb0>)
90006e66:	4638      	mov	r0, r7
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90006e68:	e9d5 3203 	ldrd	r3, r2, [r5, #12]
90006e6c:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
90006e6e:	696a      	ldr	r2, [r5, #20]
90006e70:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
90006e72:	69aa      	ldr	r2, [r5, #24]
90006e74:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90006e76:	69ea      	ldr	r2, [r5, #28]
90006e78:	4313      	orrs	r3, r2
  Command.CommandTarget          = pRegMode->TargetBank;
90006e7a:	682a      	ldr	r2, [r5, #0]
  Command.ModeRegisterDefinition = tmpmrd;
90006e7c:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90006e7e:	2304      	movs	r3, #4
  Command.CommandTarget          = pRegMode->TargetBank;
90006e80:	e9c4 2601 	strd	r2, r6, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006e84:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90006e88:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006e8a:	f005 fcef 	bl	9000c86c <HAL_SDRAM_SendCommand>
90006e8e:	b940      	cbnz	r0, 90006ea2 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
90006e90:	68a9      	ldr	r1, [r5, #8]
90006e92:	4638      	mov	r0, r7
90006e94:	f005 fd0a 	bl	9000c8ac <HAL_SDRAM_ProgramRefreshRate>
90006e98:	3800      	subs	r0, #0
90006e9a:	bf18      	it	ne
90006e9c:	2001      	movne	r0, #1
90006e9e:	4240      	negs	r0, r0
}
90006ea0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  int32_t ret = MT48LC4M32B2_ERROR;
90006ea2:	f04f 30ff 	mov.w	r0, #4294967295
}
90006ea6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90006ea8:	2400959c 	.word	0x2400959c

90006eac <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
90006eac:	4a10      	ldr	r2, [pc, #64]	; (90006ef0 <BSP_I2C4_DeInit+0x44>)
{
90006eae:	b508      	push	{r3, lr}
  I2c4InitCounter--;
90006eb0:	6813      	ldr	r3, [r2, #0]
90006eb2:	3b01      	subs	r3, #1
90006eb4:	6013      	str	r3, [r2, #0]

  if (I2c4InitCounter == 0U)
90006eb6:	b10b      	cbz	r3, 90006ebc <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
90006eb8:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
90006eba:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
90006ebc:	f44f 5180 	mov.w	r1, #4096	; 0x1000
90006ec0:	480c      	ldr	r0, [pc, #48]	; (90006ef4 <BSP_I2C4_DeInit+0x48>)
90006ec2:	f001 faaf 	bl	90008424 <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
90006ec6:	480b      	ldr	r0, [pc, #44]	; (90006ef4 <BSP_I2C4_DeInit+0x48>)
90006ec8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
90006ecc:	f001 faaa 	bl	90008424 <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
90006ed0:	4a09      	ldr	r2, [pc, #36]	; (90006ef8 <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90006ed2:	480a      	ldr	r0, [pc, #40]	; (90006efc <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
90006ed4:	f8d2 30f4 	ldr.w	r3, [r2, #244]	; 0xf4
90006ed8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
90006edc:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90006ee0:	f001 fd48 	bl	90008974 <HAL_I2C_DeInit>
90006ee4:	2800      	cmp	r0, #0
90006ee6:	d0e7      	beq.n	90006eb8 <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
90006ee8:	f06f 0007 	mvn.w	r0, #7
}
90006eec:	bd08      	pop	{r3, pc}
90006eee:	bf00      	nop
90006ef0:	240095ac 	.word	0x240095ac
90006ef4:	58020c00 	.word	0x58020c00
90006ef8:	58024400 	.word	0x58024400
90006efc:	24009fb4 	.word	0x24009fb4

90006f00 <MX_I2C4_Init>:
  hI2c->Init.OwnAddress1      = 0;
90006f00:	2300      	movs	r3, #0
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
90006f02:	2201      	movs	r2, #1
{
90006f04:	b510      	push	{r4, lr}
  hI2c->Init.OwnAddress1      = 0;
90006f06:	e9c0 1301 	strd	r1, r3, [r0, #4]
  hI2c->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
90006f0a:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hI2c->Init.OwnAddress2Masks = I2C_OA2_NOMASK;
90006f0e:	e9c0 3305 	strd	r3, r3, [r0, #20]
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
90006f12:	e9c0 3307 	strd	r3, r3, [r0, #28]
{
90006f16:	4604      	mov	r4, r0
  if (HAL_I2C_Init(hI2c) != HAL_OK)
90006f18:	f001 fcd4 	bl	900088c4 <HAL_I2C_Init>
90006f1c:	b108      	cbz	r0, 90006f22 <MX_I2C4_Init+0x22>
    status = HAL_ERROR;
90006f1e:	2001      	movs	r0, #1
}
90006f20:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
90006f22:	4601      	mov	r1, r0
90006f24:	4620      	mov	r0, r4
90006f26:	f001 ffe3 	bl	90008ef0 <HAL_I2CEx_ConfigAnalogFilter>
90006f2a:	2800      	cmp	r0, #0
90006f2c:	d1f7      	bne.n	90006f1e <MX_I2C4_Init+0x1e>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
90006f2e:	4601      	mov	r1, r0
90006f30:	4620      	mov	r0, r4
90006f32:	f002 f807 	bl	90008f44 <HAL_I2CEx_ConfigDigitalFilter>
    status = HAL_ERROR;
90006f36:	3800      	subs	r0, #0
90006f38:	bf18      	it	ne
90006f3a:	2001      	movne	r0, #1
}
90006f3c:	bd10      	pop	{r4, pc}
90006f3e:	bf00      	nop

90006f40 <BSP_I2C4_Init>:
  if (I2c4InitCounter == 0U)
90006f40:	4b99      	ldr	r3, [pc, #612]	; (900071a8 <BSP_I2C4_Init+0x268>)
  hbus_i2c4.Instance = BUS_I2C4;
90006f42:	489a      	ldr	r0, [pc, #616]	; (900071ac <BSP_I2C4_Init+0x26c>)
90006f44:	4a9a      	ldr	r2, [pc, #616]	; (900071b0 <BSP_I2C4_Init+0x270>)
  if (I2c4InitCounter == 0U)
90006f46:	6819      	ldr	r1, [r3, #0]
{
90006f48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90006f4c:	b09f      	sub	sp, #124	; 0x7c
  hbus_i2c4.Instance = BUS_I2C4;
90006f4e:	6002      	str	r2, [r0, #0]
  if (I2c4InitCounter == 0U)
90006f50:	9103      	str	r1, [sp, #12]
90006f52:	b119      	cbz	r1, 90006f5c <BSP_I2C4_Init+0x1c>
  int32_t ret = BSP_ERROR_NONE;
90006f54:	2000      	movs	r0, #0
}
90006f56:	b01f      	add	sp, #124	; 0x7c
90006f58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    I2c4InitCounter++;
90006f5c:	2201      	movs	r2, #1
90006f5e:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
90006f60:	f001 ffc0 	bl	90008ee4 <HAL_I2C_GetState>
90006f64:	2800      	cmp	r0, #0
90006f66:	d1f5      	bne.n	90006f54 <BSP_I2C4_Init+0x14>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90006f68:	4c92      	ldr	r4, [pc, #584]	; (900071b4 <BSP_I2C4_Init+0x274>)
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90006f6a:	f44f 5080 	mov.w	r0, #4096	; 0x1000
90006f6e:	2112      	movs	r1, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90006f70:	2504      	movs	r5, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90006f72:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90006f76:	2600      	movs	r6, #0
90006f78:	2702      	movs	r7, #2
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90006f7a:	f043 0308 	orr.w	r3, r3, #8
90006f7e:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
90006f82:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
90006f86:	f003 0308 	and.w	r3, r3, #8
90006f8a:	9315      	str	r3, [sp, #84]	; 0x54
90006f8c:	9b15      	ldr	r3, [sp, #84]	; 0x54
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006f8e:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
90006f92:	f043 0308 	orr.w	r3, r3, #8
90006f96:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
90006f9a:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90006f9e:	951c      	str	r5, [sp, #112]	; 0x70
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006fa0:	f003 0308 	and.w	r3, r3, #8
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90006fa4:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006fa8:	9316      	str	r3, [sp, #88]	; 0x58
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90006faa:	a918      	add	r1, sp, #96	; 0x60
90006fac:	4882      	ldr	r0, [pc, #520]	; (900071b8 <BSP_I2C4_Init+0x278>)
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006fae:	9b16      	ldr	r3, [sp, #88]	; 0x58
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90006fb0:	e9cd 671a 	strd	r6, r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90006fb4:	f001 f904 	bl	900081c0 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90006fb8:	2312      	movs	r3, #18
90006fba:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90006fbe:	a918      	add	r1, sp, #96	; 0x60
90006fc0:	487d      	ldr	r0, [pc, #500]	; (900071b8 <BSP_I2C4_Init+0x278>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
90006fc2:	951c      	str	r5, [sp, #112]	; 0x70
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90006fc4:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
90006fc8:	e9cd 671a 	strd	r6, r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90006fcc:	f001 f8f8 	bl	900081c0 <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
90006fd0:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
90006fd4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90006fd8:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
90006fdc:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
90006fe0:	f003 0380 	and.w	r3, r3, #128	; 0x80
90006fe4:	9317      	str	r3, [sp, #92]	; 0x5c
90006fe6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  BUS_I2C4_FORCE_RESET();
90006fe8:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
90006fec:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90006ff0:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
  BUS_I2C4_RELEASE_RESET();
90006ff4:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
90006ff8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
90006ffc:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
90007000:	f004 fc94 	bl	9000b92c <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
90007004:	2800      	cmp	r0, #0
90007006:	f000 81f6 	beq.w	900073f6 <BSP_I2C4_Init+0x4b6>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
9000700a:	4b6c      	ldr	r3, [pc, #432]	; (900071bc <BSP_I2C4_Init+0x27c>)
  uint32_t prev_presc = I2C_PRESC_MAX;
9000700c:	f04f 0b10 	mov.w	fp, #16
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90007010:	9e03      	ldr	r6, [sp, #12]
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90007012:	eb03 0350 	add.w	r3, r3, r0, lsr #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007016:	f8df a1ac 	ldr.w	sl, [pc, #428]	; 900071c4 <BSP_I2C4_Init+0x284>
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
9000701a:	4635      	mov	r5, r6
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
9000701c:	fbb3 f7f0 	udiv	r7, r3, r0
    (int32_t)tafdel_max - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 4) * (int32_t)ti2cclk);
90007020:	00bb      	lsls	r3, r7, #2
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90007022:	9702      	str	r7, [sp, #8]
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90007024:	eb07 0247 	add.w	r2, r7, r7, lsl #1
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90007028:	f5c3 7cc3 	rsb	ip, r3, #390	; 0x186
9000702c:	4b64      	ldr	r3, [pc, #400]	; (900071c0 <BSP_I2C4_Init+0x280>)
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
9000702e:	f1c2 0432 	rsb	r4, r2, #50	; 0x32
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90007032:	0079      	lsls	r1, r7, #1
90007034:	681b      	ldr	r3, [r3, #0]
90007036:	ea2c 7cec 	bic.w	ip, ip, ip, asr #31
9000703a:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
9000703e:	9113      	str	r1, [sp, #76]	; 0x4c
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90007040:	4699      	mov	r9, r3
90007042:	930a      	str	r3, [sp, #40]	; 0x28
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90007044:	ebb4 0f47 	cmp.w	r4, r7, lsl #1
90007048:	46b8      	mov	r8, r7
9000704a:	eb07 0347 	add.w	r3, r7, r7, lsl #1
9000704e:	bf94      	ite	ls
90007050:	2101      	movls	r1, #1
90007052:	2100      	movhi	r1, #0
90007054:	ebbc 0f47 	cmp.w	ip, r7, lsl #1
90007058:	f001 0101 	and.w	r1, r1, #1
9000705c:	eb07 0287 	add.w	r2, r7, r7, lsl #2
90007060:	bf38      	it	cc
90007062:	2100      	movcc	r1, #0
90007064:	429c      	cmp	r4, r3
90007066:	ebc7 00c7 	rsb	r0, r7, r7, lsl #3
9000706a:	9105      	str	r1, [sp, #20]
9000706c:	bf8c      	ite	hi
9000706e:	2100      	movhi	r1, #0
90007070:	2101      	movls	r1, #1
90007072:	459c      	cmp	ip, r3
90007074:	bf38      	it	cc
90007076:	2100      	movcc	r1, #0
90007078:	ebb4 0f87 	cmp.w	r4, r7, lsl #2
9000707c:	9106      	str	r1, [sp, #24]
9000707e:	eb07 0142 	add.w	r1, r7, r2, lsl #1
90007082:	9104      	str	r1, [sp, #16]
90007084:	eb07 0183 	add.w	r1, r7, r3, lsl #2
90007088:	9111      	str	r1, [sp, #68]	; 0x44
9000708a:	bf94      	ite	ls
9000708c:	2101      	movls	r1, #1
9000708e:	2100      	movhi	r1, #0
90007090:	ebbc 0f87 	cmp.w	ip, r7, lsl #2
90007094:	f001 0e01 	and.w	lr, r1, #1
90007098:	bf38      	it	cc
9000709a:	f04f 0e00 	movcc.w	lr, #0
9000709e:	4294      	cmp	r4, r2
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
900070a0:	f04f 0100 	mov.w	r1, #0
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
900070a4:	f8cd e01c 	str.w	lr, [sp, #28]
900070a8:	bf8c      	ite	hi
900070aa:	f04f 0e00 	movhi.w	lr, #0
900070ae:	f04f 0e01 	movls.w	lr, #1
900070b2:	4594      	cmp	ip, r2
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
900070b4:	9101      	str	r1, [sp, #4]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
900070b6:	bf38      	it	cc
900070b8:	f04f 0e00 	movcc.w	lr, #0
900070bc:	ebb4 0f43 	cmp.w	r4, r3, lsl #1
900070c0:	bf98      	it	ls
900070c2:	2101      	movls	r1, #1
900070c4:	ebbc 0f43 	cmp.w	ip, r3, lsl #1
900070c8:	f8cd e020 	str.w	lr, [sp, #32]
900070cc:	f001 0101 	and.w	r1, r1, #1
900070d0:	bf38      	it	cc
900070d2:	2100      	movcc	r1, #0
900070d4:	4284      	cmp	r4, r0
900070d6:	9109      	str	r1, [sp, #36]	; 0x24
900070d8:	4601      	mov	r1, r0
900070da:	bf8c      	ite	hi
900070dc:	2000      	movhi	r0, #0
900070de:	2001      	movls	r0, #1
900070e0:	458c      	cmp	ip, r1
900070e2:	bf38      	it	cc
900070e4:	2000      	movcc	r0, #0
900070e6:	ebb4 0fc7 	cmp.w	r4, r7, lsl #3
900070ea:	900b      	str	r0, [sp, #44]	; 0x2c
900070ec:	bf94      	ite	ls
900070ee:	2001      	movls	r0, #1
900070f0:	2000      	movhi	r0, #0
900070f2:	ebbc 0fc7 	cmp.w	ip, r7, lsl #3
900070f6:	f000 0001 	and.w	r0, r0, #1
900070fa:	bf38      	it	cc
900070fc:	2000      	movcc	r0, #0
900070fe:	900c      	str	r0, [sp, #48]	; 0x30
90007100:	eb07 00c7 	add.w	r0, r7, r7, lsl #3
90007104:	4284      	cmp	r4, r0
90007106:	bf8c      	ite	hi
90007108:	f04f 0e00 	movhi.w	lr, #0
9000710c:	f04f 0e01 	movls.w	lr, #1
90007110:	4584      	cmp	ip, r0
90007112:	bf38      	it	cc
90007114:	f04f 0e00 	movcc.w	lr, #0
90007118:	ebb4 0f42 	cmp.w	r4, r2, lsl #1
9000711c:	4670      	mov	r0, lr
9000711e:	bf94      	ite	ls
90007120:	2001      	movls	r0, #1
90007122:	2000      	movhi	r0, #0
90007124:	ebbc 0f42 	cmp.w	ip, r2, lsl #1
90007128:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
9000712c:	f04f 0e00 	mov.w	lr, #0
90007130:	f000 0001 	and.w	r0, r0, #1
90007134:	bf38      	it	cc
90007136:	2000      	movcc	r0, #0
90007138:	900e      	str	r0, [sp, #56]	; 0x38
9000713a:	9804      	ldr	r0, [sp, #16]
9000713c:	4284      	cmp	r4, r0
9000713e:	4602      	mov	r2, r0
90007140:	bf8c      	ite	hi
90007142:	2200      	movhi	r2, #0
90007144:	2201      	movls	r2, #1
90007146:	4584      	cmp	ip, r0
90007148:	bf38      	it	cc
9000714a:	2200      	movcc	r2, #0
9000714c:	ebb4 0f83 	cmp.w	r4, r3, lsl #2
90007150:	920f      	str	r2, [sp, #60]	; 0x3c
90007152:	bf94      	ite	ls
90007154:	2201      	movls	r2, #1
90007156:	2200      	movhi	r2, #0
90007158:	ebbc 0f83 	cmp.w	ip, r3, lsl #2
9000715c:	f002 0201 	and.w	r2, r2, #1
90007160:	bf38      	it	cc
90007162:	2200      	movcc	r2, #0
90007164:	9210      	str	r2, [sp, #64]	; 0x40
90007166:	9a11      	ldr	r2, [sp, #68]	; 0x44
90007168:	4294      	cmp	r4, r2
9000716a:	4613      	mov	r3, r2
9000716c:	bf8c      	ite	hi
9000716e:	2300      	movhi	r3, #0
90007170:	2301      	movls	r3, #1
90007172:	4594      	cmp	ip, r2
90007174:	bf38      	it	cc
90007176:	2300      	movcc	r3, #0
90007178:	ebb4 0f41 	cmp.w	r4, r1, lsl #1
9000717c:	9311      	str	r3, [sp, #68]	; 0x44
9000717e:	bf94      	ite	ls
90007180:	2301      	movls	r3, #1
90007182:	2300      	movhi	r3, #0
90007184:	ebbc 0f41 	cmp.w	ip, r1, lsl #1
90007188:	f003 0301 	and.w	r3, r3, #1
9000718c:	bf38      	it	cc
9000718e:	2300      	movcc	r3, #0
90007190:	9312      	str	r3, [sp, #72]	; 0x48
90007192:	ebc7 1307 	rsb	r3, r7, r7, lsl #4
90007196:	429c      	cmp	r4, r3
90007198:	bf8c      	ite	hi
9000719a:	2200      	movhi	r2, #0
9000719c:	2201      	movls	r2, #1
9000719e:	459c      	cmp	ip, r3
900071a0:	bf38      	it	cc
900071a2:	2200      	movcc	r2, #0
900071a4:	9204      	str	r2, [sp, #16]
900071a6:	e014      	b.n	900071d2 <BSP_I2C4_Init+0x292>
900071a8:	240095ac 	.word	0x240095ac
900071ac:	24009fb4 	.word	0x24009fb4
900071b0:	58001c00 	.word	0x58001c00
900071b4:	58024400 	.word	0x58024400
900071b8:	58020c00 	.word	0x58020c00
900071bc:	3b9aca00 	.word	0x3b9aca00
900071c0:	24009fb0 	.word	0x24009fb0
900071c4:	240095b0 	.word	0x240095b0
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
900071c8:	f1be 0f10 	cmp.w	lr, #16
900071cc:	44b8      	add	r8, r7
900071ce:	f000 826c 	beq.w	900076aa <BSP_I2C4_Init+0x76a>
      if (tscldel >= (uint32_t)tscldel_min)
900071d2:	f5b8 7faf 	cmp.w	r8, #350	; 0x15e
900071d6:	4673      	mov	r3, lr
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
900071d8:	f10e 0e01 	add.w	lr, lr, #1
      if (tscldel >= (uint32_t)tscldel_min)
900071dc:	d3f4      	bcc.n	900071c8 <BSP_I2C4_Init+0x288>
            if(presc != prev_presc)
900071de:	ebbb 0205 	subs.w	r2, fp, r5
900071e2:	bf18      	it	ne
900071e4:	2201      	movne	r2, #1
900071e6:	2c00      	cmp	r4, #0
900071e8:	bf18      	it	ne
900071ea:	2200      	movne	r2, #0
900071ec:	2a00      	cmp	r2, #0
900071ee:	f040 824a 	bne.w	90007686 <BSP_I2C4_Init+0x746>
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
900071f2:	45bc      	cmp	ip, r7
900071f4:	bf34      	ite	cc
900071f6:	2200      	movcc	r2, #0
900071f8:	2201      	movcs	r2, #1
900071fa:	42bc      	cmp	r4, r7
900071fc:	bf88      	it	hi
900071fe:	2200      	movhi	r2, #0
            if(presc != prev_presc)
90007200:	45ab      	cmp	fp, r5
90007202:	bf0c      	ite	eq
90007204:	2200      	moveq	r2, #0
90007206:	f002 0201 	andne.w	r2, r2, #1
9000720a:	2a00      	cmp	r2, #0
9000720c:	f000 80fd 	beq.w	9000740a <BSP_I2C4_Init+0x4ca>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007210:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007214:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007218:	2001      	movs	r0, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000721a:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000721e:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007222:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007226:	6088      	str	r0, [r1, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007228:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000722a:	604b      	str	r3, [r1, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000722c:	f200 81a5 	bhi.w	9000757a <BSP_I2C4_Init+0x63a>
90007230:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90007232:	9906      	ldr	r1, [sp, #24]
90007234:	45ab      	cmp	fp, r5
90007236:	bf0c      	ite	eq
90007238:	2100      	moveq	r1, #0
9000723a:	f001 0101 	andne.w	r1, r1, #1
9000723e:	2900      	cmp	r1, #0
90007240:	f000 80ff 	beq.w	90007442 <BSP_I2C4_Init+0x502>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007244:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007248:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000724c:	2003      	movs	r0, #3
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000724e:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007252:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007256:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000725a:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000725c:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000725e:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007260:	f200 818b 	bhi.w	9000757a <BSP_I2C4_Init+0x63a>
90007264:	460a      	mov	r2, r1
90007266:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90007268:	9908      	ldr	r1, [sp, #32]
9000726a:	45ab      	cmp	fp, r5
9000726c:	bf0c      	ite	eq
9000726e:	2100      	moveq	r1, #0
90007270:	f001 0101 	andne.w	r1, r1, #1
90007274:	2900      	cmp	r1, #0
90007276:	f000 80ff 	beq.w	90007478 <BSP_I2C4_Init+0x538>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000727a:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000727e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007282:	2005      	movs	r0, #5
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007284:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007288:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000728c:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007290:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007292:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007294:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007296:	f200 8170 	bhi.w	9000757a <BSP_I2C4_Init+0x63a>
9000729a:	460a      	mov	r2, r1
9000729c:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000729e:	990b      	ldr	r1, [sp, #44]	; 0x2c
900072a0:	45ab      	cmp	fp, r5
900072a2:	bf0c      	ite	eq
900072a4:	2100      	moveq	r1, #0
900072a6:	f001 0101 	andne.w	r1, r1, #1
900072aa:	2900      	cmp	r1, #0
900072ac:	f000 80fe 	beq.w	900074ac <BSP_I2C4_Init+0x56c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900072b0:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900072b4:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900072b8:	2007      	movs	r0, #7
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900072ba:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900072be:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900072c2:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900072c6:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900072c8:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900072ca:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900072cc:	f200 8155 	bhi.w	9000757a <BSP_I2C4_Init+0x63a>
900072d0:	460a      	mov	r2, r1
900072d2:	46ab      	mov	fp, r5
            if(presc != prev_presc)
900072d4:	990d      	ldr	r1, [sp, #52]	; 0x34
900072d6:	45ab      	cmp	fp, r5
900072d8:	bf0c      	ite	eq
900072da:	2100      	moveq	r1, #0
900072dc:	f001 0101 	andne.w	r1, r1, #1
900072e0:	2900      	cmp	r1, #0
900072e2:	f000 80fd 	beq.w	900074e0 <BSP_I2C4_Init+0x5a0>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900072e6:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900072ea:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900072ee:	2009      	movs	r0, #9
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900072f0:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900072f4:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900072f8:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900072fc:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900072fe:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007300:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007302:	f200 813a 	bhi.w	9000757a <BSP_I2C4_Init+0x63a>
90007306:	460a      	mov	r2, r1
90007308:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000730a:	990f      	ldr	r1, [sp, #60]	; 0x3c
9000730c:	45ab      	cmp	fp, r5
9000730e:	bf0c      	ite	eq
90007310:	2100      	moveq	r1, #0
90007312:	f001 0101 	andne.w	r1, r1, #1
90007316:	2900      	cmp	r1, #0
90007318:	f000 80fc 	beq.w	90007514 <BSP_I2C4_Init+0x5d4>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000731c:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007320:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007324:	200b      	movs	r0, #11
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007326:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000732a:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000732e:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007332:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007334:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007336:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007338:	f200 811f 	bhi.w	9000757a <BSP_I2C4_Init+0x63a>
9000733c:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000733e:	9e11      	ldr	r6, [sp, #68]	; 0x44
90007340:	455d      	cmp	r5, fp
90007342:	bf0c      	ite	eq
90007344:	2600      	moveq	r6, #0
90007346:	f006 0601 	andne.w	r6, r6, #1
9000734a:	2e00      	cmp	r6, #0
9000734c:	f000 80fb 	beq.w	90007546 <BSP_I2C4_Init+0x606>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007350:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007354:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007358:	210d      	movs	r1, #13
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000735a:	4650      	mov	r0, sl
9000735c:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007360:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007364:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007368:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000736a:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000736c:	f200 8105 	bhi.w	9000757a <BSP_I2C4_Init+0x63a>
90007370:	4631      	mov	r1, r6
90007372:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90007374:	9e04      	ldr	r6, [sp, #16]
90007376:	455d      	cmp	r5, fp
90007378:	bf0c      	ite	eq
9000737a:	2600      	moveq	r6, #0
9000737c:	f006 0601 	andne.w	r6, r6, #1
90007380:	2e00      	cmp	r6, #0
90007382:	f000 817c 	beq.w	9000767e <BSP_I2C4_Init+0x73e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007386:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000738a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000738e:	4650      	mov	r0, sl
90007390:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
90007394:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007398:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000739c:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000739e:	f04f 030f 	mov.w	r3, #15
900073a2:	6093      	str	r3, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900073a4:	f200 80e9 	bhi.w	9000757a <BSP_I2C4_Init+0x63a>
900073a8:	46ab      	mov	fp, r5
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
900073aa:	e70d      	b.n	900071c8 <BSP_I2C4_Init+0x288>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
900073ac:	9a07      	ldr	r2, [sp, #28]
900073ae:	9b08      	ldr	r3, [sp, #32]
900073b0:	3214      	adds	r2, #20
900073b2:	3301      	adds	r3, #1
900073b4:	9207      	str	r2, [sp, #28]
900073b6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
900073b8:	9308      	str	r3, [sp, #32]
900073ba:	4293      	cmp	r3, r2
900073bc:	f040 80ff 	bne.w	900075be <BSP_I2C4_Init+0x67e>
        if (idx < I2C_VALID_TIMING_NBR)
900073c0:	297f      	cmp	r1, #127	; 0x7f
900073c2:	d818      	bhi.n	900073f6 <BSP_I2C4_Init+0x4b6>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900073c4:	eb01 0381 	add.w	r3, r1, r1, lsl #2
900073c8:	990b      	ldr	r1, [sp, #44]	; 0x2c
900073ca:	eb01 0283 	add.w	r2, r1, r3, lsl #2
900073ce:	f851 4023 	ldr.w	r4, [r1, r3, lsl #2]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900073d2:	6850      	ldr	r0, [r2, #4]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
900073d4:	7c13      	ldrb	r3, [r2, #16]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900073d6:	0500      	lsls	r0, r0, #20
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900073d8:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900073dc:	f400 0070 	and.w	r0, r0, #15728640	; 0xf00000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900073e0:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900073e4:	4303      	orrs	r3, r0
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
900073e6:	0409      	lsls	r1, r1, #16
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900073e8:	0212      	lsls	r2, r2, #8
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
900073ea:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900073ee:	b292      	uxth	r2, r2
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900073f0:	430b      	orrs	r3, r1
900073f2:	4313      	orrs	r3, r2
900073f4:	9303      	str	r3, [sp, #12]
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
900073f6:	9903      	ldr	r1, [sp, #12]
900073f8:	48b5      	ldr	r0, [pc, #724]	; (900076d0 <BSP_I2C4_Init+0x790>)
900073fa:	f7ff fd81 	bl	90006f00 <MX_I2C4_Init>
900073fe:	2800      	cmp	r0, #0
90007400:	f43f ada8 	beq.w	90006f54 <BSP_I2C4_Init+0x14>
          ret = BSP_ERROR_BUS_FAILURE;
90007404:	f06f 0007 	mvn.w	r0, #7
  return ret;
90007408:	e5a5      	b.n	90006f56 <BSP_I2C4_Init+0x16>
            if(presc != prev_presc)
9000740a:	4632      	mov	r2, r6
9000740c:	9905      	ldr	r1, [sp, #20]
9000740e:	45ab      	cmp	fp, r5
90007410:	bf0c      	ite	eq
90007412:	2100      	moveq	r1, #0
90007414:	f001 0101 	andne.w	r1, r1, #1
90007418:	2900      	cmp	r1, #0
9000741a:	f43f af0a 	beq.w	90007232 <BSP_I2C4_Init+0x2f2>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000741e:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007422:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007426:	2002      	movs	r0, #2
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007428:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000742c:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007430:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007434:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007436:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007438:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000743a:	f200 809e 	bhi.w	9000757a <BSP_I2C4_Init+0x63a>
9000743e:	460a      	mov	r2, r1
90007440:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90007442:	9907      	ldr	r1, [sp, #28]
90007444:	45ab      	cmp	fp, r5
90007446:	bf0c      	ite	eq
90007448:	2100      	moveq	r1, #0
9000744a:	f001 0101 	andne.w	r1, r1, #1
9000744e:	2900      	cmp	r1, #0
90007450:	f43f af0a 	beq.w	90007268 <BSP_I2C4_Init+0x328>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007454:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007458:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000745c:	2004      	movs	r0, #4
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000745e:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007462:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007466:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000746a:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000746c:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000746e:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007470:	f200 8083 	bhi.w	9000757a <BSP_I2C4_Init+0x63a>
90007474:	460a      	mov	r2, r1
90007476:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90007478:	9909      	ldr	r1, [sp, #36]	; 0x24
9000747a:	45ab      	cmp	fp, r5
9000747c:	bf0c      	ite	eq
9000747e:	2100      	moveq	r1, #0
90007480:	f001 0101 	andne.w	r1, r1, #1
90007484:	2900      	cmp	r1, #0
90007486:	f43f af0a 	beq.w	9000729e <BSP_I2C4_Init+0x35e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000748a:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000748e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007492:	2006      	movs	r0, #6
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007494:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007498:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000749c:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900074a0:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900074a2:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900074a4:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900074a6:	d868      	bhi.n	9000757a <BSP_I2C4_Init+0x63a>
900074a8:	460a      	mov	r2, r1
900074aa:	46ab      	mov	fp, r5
            if(presc != prev_presc)
900074ac:	990c      	ldr	r1, [sp, #48]	; 0x30
900074ae:	45ab      	cmp	fp, r5
900074b0:	bf0c      	ite	eq
900074b2:	2100      	moveq	r1, #0
900074b4:	f001 0101 	andne.w	r1, r1, #1
900074b8:	2900      	cmp	r1, #0
900074ba:	f43f af0b 	beq.w	900072d4 <BSP_I2C4_Init+0x394>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900074be:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900074c2:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900074c6:	2008      	movs	r0, #8
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900074c8:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900074cc:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900074d0:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900074d4:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900074d6:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900074d8:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900074da:	d84e      	bhi.n	9000757a <BSP_I2C4_Init+0x63a>
900074dc:	460a      	mov	r2, r1
900074de:	46ab      	mov	fp, r5
            if(presc != prev_presc)
900074e0:	990e      	ldr	r1, [sp, #56]	; 0x38
900074e2:	45ab      	cmp	fp, r5
900074e4:	bf0c      	ite	eq
900074e6:	2100      	moveq	r1, #0
900074e8:	f001 0101 	andne.w	r1, r1, #1
900074ec:	2900      	cmp	r1, #0
900074ee:	f43f af0c 	beq.w	9000730a <BSP_I2C4_Init+0x3ca>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900074f2:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900074f6:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900074fa:	200a      	movs	r0, #10
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900074fc:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007500:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007504:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007508:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000750a:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000750c:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000750e:	d834      	bhi.n	9000757a <BSP_I2C4_Init+0x63a>
90007510:	460a      	mov	r2, r1
90007512:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90007514:	9910      	ldr	r1, [sp, #64]	; 0x40
90007516:	45ab      	cmp	fp, r5
90007518:	bf0c      	ite	eq
9000751a:	2100      	moveq	r1, #0
9000751c:	f001 0101 	andne.w	r1, r1, #1
90007520:	2900      	cmp	r1, #0
90007522:	f000 80ae 	beq.w	90007682 <BSP_I2C4_Init+0x742>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007526:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000752a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000752e:	200c      	movs	r0, #12
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007530:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007534:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007538:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000753c:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000753e:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007540:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007542:	d81a      	bhi.n	9000757a <BSP_I2C4_Init+0x63a>
90007544:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90007546:	9e12      	ldr	r6, [sp, #72]	; 0x48
90007548:	455d      	cmp	r5, fp
9000754a:	bf0c      	ite	eq
9000754c:	2600      	moveq	r6, #0
9000754e:	f006 0601 	andne.w	r6, r6, #1
90007552:	2e00      	cmp	r6, #0
90007554:	f43f af0e 	beq.w	90007374 <BSP_I2C4_Init+0x434>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007558:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000755c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007560:	4650      	mov	r0, sl
90007562:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
90007566:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000756a:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000756e:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007570:	f04f 030e 	mov.w	r3, #14
90007574:	6093      	str	r3, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007576:	f67f af17 	bls.w	900073a8 <BSP_I2C4_Init+0x468>
9000757a:	4b56      	ldr	r3, [pc, #344]	; (900076d4 <BSP_I2C4_Init+0x794>)
9000757c:	900b      	str	r0, [sp, #44]	; 0x2c
9000757e:	f8c3 9000 	str.w	r9, [r3]
              I2c_valid_timing_nbr ++;
90007582:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
90007586:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90007588:	f240 4201 	movw	r2, #1025	; 0x401
9000758c:	f240 2657 	movw	r6, #599	; 0x257
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90007590:	f640 1ac4 	movw	sl, #2500	; 0x9c4
90007594:	1ad2      	subs	r2, r2, r3
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90007596:	f240 4b12 	movw	fp, #1042	; 0x412
9000759a:	920d      	str	r2, [sp, #52]	; 0x34
9000759c:	9a02      	ldr	r2, [sp, #8]
9000759e:	4296      	cmp	r6, r2
900075a0:	bf38      	it	cc
900075a2:	4616      	movcc	r6, r2
900075a4:	4a4c      	ldr	r2, [pc, #304]	; (900076d8 <BSP_I2C4_Init+0x798>)
900075a6:	9207      	str	r2, [sp, #28]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900075a8:	2200      	movs	r2, #0
900075aa:	9208      	str	r2, [sp, #32]
900075ac:	f04f 32ff 	mov.w	r2, #4294967295
900075b0:	4611      	mov	r1, r2
900075b2:	f103 0232 	add.w	r2, r3, #50	; 0x32
900075b6:	f6a3 0334 	subw	r3, r3, #2100	; 0x834
900075ba:	920c      	str	r2, [sp, #48]	; 0x30
900075bc:	930e      	str	r3, [sp, #56]	; 0x38
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
900075be:	9b07      	ldr	r3, [sp, #28]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
900075c0:	f04f 0800 	mov.w	r8, #0
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
900075c4:	6818      	ldr	r0, [r3, #0]
900075c6:	9b02      	ldr	r3, [sp, #8]
900075c8:	fb00 3003 	mla	r0, r0, r3, r3
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
900075cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900075ce:	1a1b      	subs	r3, r3, r0
900075d0:	ea4f 0943 	mov.w	r9, r3, lsl #1
900075d4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900075d6:	eb03 0e00 	add.w	lr, r3, r0
900075da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900075dc:	4403      	add	r3, r0
900075de:	9309      	str	r3, [sp, #36]	; 0x24
900075e0:	e006      	b.n	900075f0 <BSP_I2C4_Init+0x6b0>
900075e2:	f5b8 7f80 	cmp.w	r8, #256	; 0x100
900075e6:	4486      	add	lr, r0
900075e8:	eba9 0900 	sub.w	r9, r9, r0
900075ec:	f43f aede 	beq.w	900073ac <BSP_I2C4_Init+0x46c>
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
900075f0:	f240 5214 	movw	r2, #1300	; 0x514
900075f4:	f8cd 8004 	str.w	r8, [sp, #4]
900075f8:	f1ae 0332 	sub.w	r3, lr, #50	; 0x32
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900075fc:	f108 0801 	add.w	r8, r8, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90007600:	4596      	cmp	lr, r2
90007602:	d9ee      	bls.n	900075e2 <BSP_I2C4_Init+0x6a2>
90007604:	9a02      	ldr	r2, [sp, #8]
90007606:	ebb2 0f93 	cmp.w	r2, r3, lsr #2
9000760a:	d2ea      	bcs.n	900075e2 <BSP_I2C4_Init+0x6a2>
9000760c:	f640 0c34 	movw	ip, #2100	; 0x834
90007610:	464c      	mov	r4, r9
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90007612:	f8cd 9018 	str.w	r9, [sp, #24]
90007616:	2200      	movs	r2, #0
90007618:	ebac 0c03 	sub.w	ip, ip, r3
9000761c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9000761e:	4689      	mov	r9, r1
90007620:	4473      	add	r3, lr
90007622:	e9cd e804 	strd	lr, r8, [sp, #16]
90007626:	f8dd 8020 	ldr.w	r8, [sp, #32]
9000762a:	f8dd e01c 	ldr.w	lr, [sp, #28]
9000762e:	e005      	b.n	9000763c <BSP_I2C4_Init+0x6fc>
90007630:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
90007634:	4403      	add	r3, r0
90007636:	eba4 0400 	sub.w	r4, r4, r0
9000763a:	d01a      	beq.n	90007672 <BSP_I2C4_Init+0x732>
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
9000763c:	eb0c 0103 	add.w	r1, ip, r3
90007640:	4617      	mov	r7, r2
90007642:	f203 15a1 	addw	r5, r3, #417	; 0x1a1
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
90007646:	3201      	adds	r2, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90007648:	42b1      	cmp	r1, r6
9000764a:	d9f1      	bls.n	90007630 <BSP_I2C4_Init+0x6f0>
9000764c:	455d      	cmp	r5, fp
9000764e:	d8ef      	bhi.n	90007630 <BSP_I2C4_Init+0x6f0>
            if (error < 0)
90007650:	ea33 0123 	bics.w	r1, r3, r3, asr #32
90007654:	bf28      	it	cs
90007656:	4621      	movcs	r1, r4
            if ((uint32_t)error < prev_error)
90007658:	458a      	cmp	sl, r1
9000765a:	d9e9      	bls.n	90007630 <BSP_I2C4_Init+0x6f0>
              I2c_valid_timing[count].sclh = sclh;
9000765c:	468a      	mov	sl, r1
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000765e:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
              I2c_valid_timing[count].scll = scll;
90007662:	9901      	ldr	r1, [sp, #4]
              I2c_valid_timing[count].sclh = sclh;
90007664:	46c1      	mov	r9, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90007666:	4403      	add	r3, r0
90007668:	eba4 0400 	sub.w	r4, r4, r0
              I2c_valid_timing[count].sclh = sclh;
9000766c:	e9ce 7103 	strd	r7, r1, [lr, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90007670:	d1e4      	bne.n	9000763c <BSP_I2C4_Init+0x6fc>
90007672:	4649      	mov	r1, r9
90007674:	f8dd 9018 	ldr.w	r9, [sp, #24]
90007678:	e9dd e804 	ldrd	lr, r8, [sp, #16]
9000767c:	e7b1      	b.n	900075e2 <BSP_I2C4_Init+0x6a2>
9000767e:	460e      	mov	r6, r1
90007680:	e5a2      	b.n	900071c8 <BSP_I2C4_Init+0x288>
            if(presc != prev_presc)
90007682:	4611      	mov	r1, r2
90007684:	e65b      	b.n	9000733e <BSP_I2C4_Init+0x3fe>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007686:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000768a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000768e:	2000      	movs	r0, #0
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007690:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007694:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007698:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000769c:	6088      	str	r0, [r1, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000769e:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900076a0:	604b      	str	r3, [r1, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900076a2:	f63f af6a 	bhi.w	9000757a <BSP_I2C4_Init+0x63a>
900076a6:	46ab      	mov	fp, r5
900076a8:	e6b0      	b.n	9000740c <BSP_I2C4_Init+0x4cc>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
900076aa:	3501      	adds	r5, #1
900076ac:	9b02      	ldr	r3, [sp, #8]
900076ae:	2d10      	cmp	r5, #16
900076b0:	441f      	add	r7, r3
900076b2:	f47f acc7 	bne.w	90007044 <BSP_I2C4_Init+0x104>
900076b6:	b126      	cbz	r6, 900076c2 <BSP_I2C4_Init+0x782>
900076b8:	4b06      	ldr	r3, [pc, #24]	; (900076d4 <BSP_I2C4_Init+0x794>)
900076ba:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
900076be:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
900076c2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900076c4:	2b00      	cmp	r3, #0
900076c6:	f43f ae96 	beq.w	900073f6 <BSP_I2C4_Init+0x4b6>
900076ca:	4b03      	ldr	r3, [pc, #12]	; (900076d8 <BSP_I2C4_Init+0x798>)
900076cc:	930b      	str	r3, [sp, #44]	; 0x2c
900076ce:	e75a      	b.n	90007586 <BSP_I2C4_Init+0x646>
900076d0:	24009fb4 	.word	0x24009fb4
900076d4:	24009fb0 	.word	0x24009fb0
900076d8:	240095b0 	.word	0x240095b0

900076dc <BSP_I2C4_WriteReg>:
{
900076dc:	b530      	push	{r4, r5, lr}
900076de:	4614      	mov	r4, r2
900076e0:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
900076e2:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
900076e6:	460a      	mov	r2, r1
900076e8:	9301      	str	r3, [sp, #4]
900076ea:	4601      	mov	r1, r0
900076ec:	2301      	movs	r3, #1
900076ee:	4809      	ldr	r0, [pc, #36]	; (90007714 <BSP_I2C4_WriteReg+0x38>)
900076f0:	9502      	str	r5, [sp, #8]
900076f2:	9400      	str	r4, [sp, #0]
900076f4:	f001 f958 	bl	900089a8 <HAL_I2C_Mem_Write>
900076f8:	b908      	cbnz	r0, 900076fe <BSP_I2C4_WriteReg+0x22>
}
900076fa:	b005      	add	sp, #20
900076fc:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
900076fe:	4805      	ldr	r0, [pc, #20]	; (90007714 <BSP_I2C4_WriteReg+0x38>)
90007700:	f001 fbf4 	bl	90008eec <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
90007704:	2804      	cmp	r0, #4
90007706:	bf0c      	ite	eq
90007708:	f06f 0065 	mvneq.w	r0, #101	; 0x65
9000770c:	f06f 0003 	mvnne.w	r0, #3
90007710:	e7f3      	b.n	900076fa <BSP_I2C4_WriteReg+0x1e>
90007712:	bf00      	nop
90007714:	24009fb4 	.word	0x24009fb4

90007718 <BSP_I2C4_ReadReg>:
{
90007718:	b530      	push	{r4, r5, lr}
9000771a:	4614      	mov	r4, r2
9000771c:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
9000771e:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
90007722:	460a      	mov	r2, r1
90007724:	9301      	str	r3, [sp, #4]
90007726:	4601      	mov	r1, r0
90007728:	2301      	movs	r3, #1
9000772a:	4809      	ldr	r0, [pc, #36]	; (90007750 <BSP_I2C4_ReadReg+0x38>)
9000772c:	9502      	str	r5, [sp, #8]
9000772e:	9400      	str	r4, [sp, #0]
90007730:	f001 fa6e 	bl	90008c10 <HAL_I2C_Mem_Read>
90007734:	b908      	cbnz	r0, 9000773a <BSP_I2C4_ReadReg+0x22>
}
90007736:	b005      	add	sp, #20
90007738:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
9000773a:	4805      	ldr	r0, [pc, #20]	; (90007750 <BSP_I2C4_ReadReg+0x38>)
9000773c:	f001 fbd6 	bl	90008eec <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
90007740:	2804      	cmp	r0, #4
90007742:	bf0c      	ite	eq
90007744:	f06f 0065 	mvneq.w	r0, #101	; 0x65
90007748:	f06f 0003 	mvnne.w	r0, #3
9000774c:	e7f3      	b.n	90007736 <BSP_I2C4_ReadReg+0x1e>
9000774e:	bf00      	nop
90007750:	24009fb4 	.word	0x24009fb4

90007754 <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
90007754:	f000 baaa 	b.w	90007cac <HAL_GetTick>

90007758 <BSP_SDRAM_DeInit>:
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >= SDRAM_INSTANCES_NBR)
90007758:	b970      	cbnz	r0, 90007778 <BSP_SDRAM_DeInit+0x20>
{
9000775a:	b510      	push	{r4, lr}
9000775c:	4604      	mov	r4, r0
  {
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
9000775e:	4808      	ldr	r0, [pc, #32]	; (90007780 <BSP_SDRAM_DeInit+0x28>)
90007760:	f005 f876 	bl	9000c850 <HAL_SDRAM_DeInit>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);

  /* Disable NVIC configuration for DMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
90007764:	207a      	movs	r0, #122	; 0x7a
90007766:	f000 fb0b 	bl	90007d80 <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
9000776a:	4b06      	ldr	r3, [pc, #24]	; (90007784 <BSP_SDRAM_DeInit+0x2c>)
9000776c:	4806      	ldr	r0, [pc, #24]	; (90007788 <BSP_SDRAM_DeInit+0x30>)
9000776e:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
90007770:	f003 f98e 	bl	9000aa90 <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;
90007774:	4620      	mov	r0, r4
}
90007776:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90007778:	f06f 0001 	mvn.w	r0, #1
}
9000777c:	4770      	bx	lr
9000777e:	bf00      	nop
90007780:	2400a008 	.word	0x2400a008
90007784:	52000040 	.word	0x52000040
90007788:	2400a03c 	.word	0x2400a03c

9000778c <MX_SDRAM_BANK2_Init>:
{
9000778c:	b530      	push	{r4, r5, lr}
  hSdram->Init.MemoryDataWidth    = MemoryDataWidth;
9000778e:	6102      	str	r2, [r0, #16]
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
90007790:	2200      	movs	r2, #0
{
90007792:	b089      	sub	sp, #36	; 0x24
  hsdram->Instance = FMC_SDRAM_DEVICE;
90007794:	4c13      	ldr	r4, [pc, #76]	; (900077e4 <MX_SDRAM_BANK2_Init+0x58>)
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
90007796:	6082      	str	r2, [r0, #8]
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90007798:	2540      	movs	r5, #64	; 0x40
  hSdram->Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
9000779a:	61c2      	str	r2, [r0, #28]
  sdram_timing.ExitSelfRefreshDelay = 7;
9000779c:	2307      	movs	r3, #7
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
9000779e:	6282      	str	r2, [r0, #40]	; 0x28
  sdram_timing.LoadToActiveDelay    = 2;
900077a0:	2202      	movs	r2, #2
  hSdram->Init.RowBitsNumber      = RowBitsNumber;
900077a2:	60c1      	str	r1, [r0, #12]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
900077a4:	f44f 71c0 	mov.w	r1, #384	; 0x180
  sdram_timing.LoadToActiveDelay    = 2;
900077a8:	9200      	str	r2, [sp, #0]
  sdram_timing.RCDDelay             = 2;
900077aa:	9206      	str	r2, [sp, #24]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
900077ac:	2201      	movs	r2, #1
  sdram_timing.ExitSelfRefreshDelay = 7;
900077ae:	9301      	str	r3, [sp, #4]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
900077b0:	6042      	str	r2, [r0, #4]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
900077b2:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
900077b6:	6165      	str	r5, [r4, #20]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
900077b8:	f44f 6500 	mov.w	r5, #2048	; 0x800
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
900077bc:	6181      	str	r1, [r0, #24]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
900077be:	4669      	mov	r1, sp
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
900077c0:	e9c0 5208 	strd	r5, r2, [r0, #32]
  sdram_timing.SelfRefreshTime      = 4;
900077c4:	2204      	movs	r2, #4
900077c6:	e9cd 2302 	strd	r2, r3, [sp, #8]
  sdram_timing.WriteRecoveryTime    = 2;
900077ca:	2202      	movs	r2, #2
900077cc:	2302      	movs	r3, #2
900077ce:	e9cd 2304 	strd	r2, r3, [sp, #16]
  hsdram->Instance = FMC_SDRAM_DEVICE;
900077d2:	4b05      	ldr	r3, [pc, #20]	; (900077e8 <MX_SDRAM_BANK2_Init+0x5c>)
900077d4:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
900077d6:	f005 f811 	bl	9000c7fc <HAL_SDRAM_Init>
}
900077da:	3800      	subs	r0, #0
900077dc:	bf18      	it	ne
900077de:	2001      	movne	r0, #1
900077e0:	b009      	add	sp, #36	; 0x24
900077e2:	bd30      	pop	{r4, r5, pc}
900077e4:	2400a008 	.word	0x2400a008
900077e8:	52004140 	.word	0x52004140

900077ec <BSP_SDRAM_Init>:
  if(Instance >=SDRAM_INSTANCES_NBR)
900077ec:	2800      	cmp	r0, #0
900077ee:	f040 80d2 	bne.w	90007996 <BSP_SDRAM_Init+0x1aa>
  __HAL_RCC_FMC_CLK_ENABLE();
900077f2:	4b6c      	ldr	r3, [pc, #432]	; (900079a4 <BSP_SDRAM_Init+0x1b8>)
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
900077f4:	210c      	movs	r1, #12
  __HAL_RCC_FMC_CLK_ENABLE();
900077f6:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
900077fa:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
{
900077fe:	b570      	push	{r4, r5, r6, lr}
  __HAL_RCC_FMC_CLK_ENABLE();
90007800:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
{
90007804:	b08e      	sub	sp, #56	; 0x38
  __HAL_RCC_FMC_CLK_ENABLE();
90007806:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
9000780a:	4605      	mov	r5, r0
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
9000780c:	f24c 7003 	movw	r0, #50947	; 0xc703
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90007810:	4c65      	ldr	r4, [pc, #404]	; (900079a8 <BSP_SDRAM_Init+0x1bc>)
  __HAL_RCC_FMC_CLK_ENABLE();
90007812:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90007816:	4e65      	ldr	r6, [pc, #404]	; (900079ac <BSP_SDRAM_Init+0x1c0>)
  __HAL_RCC_FMC_CLK_ENABLE();
90007818:	9201      	str	r2, [sp, #4]
9000781a:	9a01      	ldr	r2, [sp, #4]
  SDRAM_MDMAx_CLK_ENABLE();
9000781c:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90007820:	f042 0201 	orr.w	r2, r2, #1
90007824:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
90007828:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
9000782c:	f002 0201 	and.w	r2, r2, #1
90007830:	9202      	str	r2, [sp, #8]
90007832:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90007834:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90007838:	f042 0208 	orr.w	r2, r2, #8
9000783c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90007840:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90007844:	f002 0208 	and.w	r2, r2, #8
90007848:	9203      	str	r2, [sp, #12]
9000784a:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
9000784c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90007850:	f042 0210 	orr.w	r2, r2, #16
90007854:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90007858:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000785c:	f002 0210 	and.w	r2, r2, #16
90007860:	9204      	str	r2, [sp, #16]
90007862:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90007864:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90007868:	f042 0220 	orr.w	r2, r2, #32
9000786c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90007870:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90007874:	f002 0220 	and.w	r2, r2, #32
90007878:	9205      	str	r2, [sp, #20]
9000787a:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
9000787c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90007880:	f042 0240 	orr.w	r2, r2, #64	; 0x40
90007884:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90007888:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000788c:	f002 0240 	and.w	r2, r2, #64	; 0x40
90007890:	9206      	str	r2, [sp, #24]
90007892:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007894:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90007898:	f042 0280 	orr.w	r2, r2, #128	; 0x80
9000789c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900078a0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
900078a4:	910c      	str	r1, [sp, #48]	; 0x30
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
900078a6:	2102      	movs	r1, #2
  __HAL_RCC_GPIOH_CLK_ENABLE();
900078a8:	f003 0380 	and.w	r3, r3, #128	; 0x80
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
900078ac:	e9cd 0108 	strd	r0, r1, [sp, #32]
900078b0:	2001      	movs	r0, #1
900078b2:	2103      	movs	r1, #3
  __HAL_RCC_GPIOH_CLK_ENABLE();
900078b4:	9307      	str	r3, [sp, #28]
900078b6:	9b07      	ldr	r3, [sp, #28]
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
900078b8:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
900078bc:	a908      	add	r1, sp, #32
900078be:	483c      	ldr	r0, [pc, #240]	; (900079b0 <BSP_SDRAM_Init+0x1c4>)
900078c0:	f000 fc7e 	bl	900081c0 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
900078c4:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
900078c8:	a908      	add	r1, sp, #32
900078ca:	483a      	ldr	r0, [pc, #232]	; (900079b4 <BSP_SDRAM_Init+0x1c8>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
900078cc:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
900078ce:	f000 fc77 	bl	900081c0 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
900078d2:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
900078d6:	a908      	add	r1, sp, #32
900078d8:	4837      	ldr	r0, [pc, #220]	; (900079b8 <BSP_SDRAM_Init+0x1cc>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
900078da:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
900078dc:	f000 fc70 	bl	900081c0 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
900078e0:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
900078e4:	a908      	add	r1, sp, #32
900078e6:	4835      	ldr	r0, [pc, #212]	; (900079bc <BSP_SDRAM_Init+0x1d0>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
900078e8:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
900078ea:	f000 fc69 	bl	900081c0 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
900078ee:	23e0      	movs	r3, #224	; 0xe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
900078f0:	a908      	add	r1, sp, #32
900078f2:	4833      	ldr	r0, [pc, #204]	; (900079c0 <BSP_SDRAM_Init+0x1d4>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
900078f4:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
900078f6:	f000 fc63 	bl	900081c0 <HAL_GPIO_Init>
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
900078fa:	2380      	movs	r3, #128	; 0x80
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
900078fc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90007900:	f240 2102 	movw	r1, #514	; 0x202
  HAL_MDMA_DeInit(&mdma_handle);
90007904:	4620      	mov	r0, r4
  mdma_handle.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90007906:	6223      	str	r3, [r4, #32]
  mdma_handle.Init.BufferTransferLength = 128;
90007908:	62a3      	str	r3, [r4, #40]	; 0x28
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
9000790a:	6062      	str	r2, [r4, #4]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
9000790c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90007910:	6161      	str	r1, [r4, #20]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90007912:	60a2      	str	r2, [r4, #8]
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90007914:	4a2b      	ldr	r2, [pc, #172]	; (900079c4 <BSP_SDRAM_Init+0x1d8>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90007916:	6334      	str	r4, [r6, #48]	; 0x30
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90007918:	6022      	str	r2, [r4, #0]
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
9000791a:	6426      	str	r6, [r4, #64]	; 0x40
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
9000791c:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DestinationInc = MDMA_DEST_INC_WORD;
90007920:	f640 0308 	movw	r3, #2056	; 0x808
90007924:	61a3      	str	r3, [r4, #24]
  mdma_handle.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90007926:	2320      	movs	r3, #32
90007928:	61e3      	str	r3, [r4, #28]
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
9000792a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
  mdma_handle.Init.DestBurst = MDMA_DEST_BURST_SINGLE;
9000792e:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90007932:	6263      	str	r3, [r4, #36]	; 0x24
  mdma_handle.Init.DestBlockAddressOffset = 0;
90007934:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
  HAL_MDMA_DeInit(&mdma_handle);
90007938:	f003 f8aa 	bl	9000aa90 <HAL_MDMA_DeInit>
  HAL_MDMA_Init(&mdma_handle);
9000793c:	4620      	mov	r0, r4
9000793e:	f003 f82d 	bl	9000a99c <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, 0x0F, 0);
90007942:	462a      	mov	r2, r5
90007944:	210f      	movs	r1, #15
90007946:	207a      	movs	r0, #122	; 0x7a
90007948:	f000 f9ce 	bl	90007ce8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
9000794c:	207a      	movs	r0, #122	; 0x7a
9000794e:	f000 fa09 	bl	90007d64 <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance],FMC_SDRAM_ROW_BITS_NUM_12, FMC_SDRAM_MEM_BUS_WIDTH_16) != HAL_OK)
90007952:	2210      	movs	r2, #16
90007954:	2104      	movs	r1, #4
90007956:	4630      	mov	r0, r6
90007958:	f7ff ff18 	bl	9000778c <MX_SDRAM_BANK2_Init>
9000795c:	b9f0      	cbnz	r0, 9000799c <BSP_SDRAM_Init+0x1b0>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
9000795e:	491a      	ldr	r1, [pc, #104]	; (900079c8 <BSP_SDRAM_Init+0x1dc>)
90007960:	2208      	movs	r2, #8
90007962:	2303      	movs	r3, #3
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90007964:	4630      	mov	r0, r6
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90007966:	e9c1 2300 	strd	r2, r3, [r1]
9000796a:	f240 6203 	movw	r2, #1539	; 0x603
9000796e:	2300      	movs	r3, #0
90007970:	e9c1 2302 	strd	r2, r3, [r1, #8]
90007974:	2200      	movs	r2, #0
90007976:	2330      	movs	r3, #48	; 0x30
90007978:	e9c1 2304 	strd	r2, r3, [r1, #16]
9000797c:	2200      	movs	r2, #0
9000797e:	f44f 7300 	mov.w	r3, #512	; 0x200
90007982:	e9c1 2306 	strd	r2, r3, [r1, #24]
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90007986:	f7ff fa37 	bl	90006df8 <MT48LC4M32B2_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
9000798a:	2800      	cmp	r0, #0
9000798c:	bf18      	it	ne
9000798e:	f06f 0004 	mvnne.w	r0, #4
}
90007992:	b00e      	add	sp, #56	; 0x38
90007994:	bd70      	pop	{r4, r5, r6, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90007996:	f06f 0001 	mvn.w	r0, #1
}
9000799a:	4770      	bx	lr
      ret = BSP_ERROR_NO_INIT;
9000799c:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
900079a0:	e7f7      	b.n	90007992 <BSP_SDRAM_Init+0x1a6>
900079a2:	bf00      	nop
900079a4:	58024400 	.word	0x58024400
900079a8:	2400a0a8 	.word	0x2400a0a8
900079ac:	2400a008 	.word	0x2400a008
900079b0:	58020c00 	.word	0x58020c00
900079b4:	58021000 	.word	0x58021000
900079b8:	58021400 	.word	0x58021400
900079bc:	58021800 	.word	0x58021800
900079c0:	58021c00 	.word	0x58021c00
900079c4:	52000040 	.word	0x52000040
900079c8:	2400a118 	.word	0x2400a118

900079cc <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
900079cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900079d0:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
900079d2:	2800      	cmp	r0, #0
900079d4:	d16b      	bne.n	90007aae <BSP_TS_Init+0xe2>
900079d6:	680b      	ldr	r3, [r1, #0]
900079d8:	460c      	mov	r4, r1
900079da:	1e5a      	subs	r2, r3, #1
900079dc:	f5b2 7ff0 	cmp.w	r2, #480	; 0x1e0
900079e0:	d265      	bcs.n	90007aae <BSP_TS_Init+0xe2>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
900079e2:	684a      	ldr	r2, [r1, #4]
900079e4:	1e51      	subs	r1, r2, #1
900079e6:	f5b1 7f88 	cmp.w	r1, #272	; 0x110
900079ea:	d260      	bcs.n	90007aae <BSP_TS_Init+0xe2>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
900079ec:	4293      	cmp	r3, r2
900079ee:	bf28      	it	cs
900079f0:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
900079f2:	68e2      	ldr	r2, [r4, #12]
900079f4:	429a      	cmp	r2, r3
900079f6:	d85a      	bhi.n	90007aae <BSP_TS_Init+0xe2>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
900079f8:	2270      	movs	r2, #112	; 0x70
  IOCtx.Init        = BSP_I2C4_Init;
900079fa:	4b31      	ldr	r3, [pc, #196]	; (90007ac0 <BSP_TS_Init+0xf4>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
900079fc:	4d31      	ldr	r5, [pc, #196]	; (90007ac4 <BSP_TS_Init+0xf8>)
900079fe:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
90007a00:	f8ad 2010 	strh.w	r2, [sp, #16]
  IOCtx.Init        = BSP_I2C4_Init;
90007a04:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90007a06:	4a30      	ldr	r2, [pc, #192]	; (90007ac8 <BSP_TS_Init+0xfc>)
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90007a08:	4b30      	ldr	r3, [pc, #192]	; (90007acc <BSP_TS_Init+0x100>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90007a0a:	9203      	str	r2, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90007a0c:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90007a0e:	4a30      	ldr	r2, [pc, #192]	; (90007ad0 <BSP_TS_Init+0x104>)
  IOCtx.GetTick     = BSP_GetTick;
90007a10:	4b30      	ldr	r3, [pc, #192]	; (90007ad4 <BSP_TS_Init+0x108>)
  uint32_t ft5336_id       = 0;
90007a12:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90007a14:	4628      	mov	r0, r5
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90007a16:	9205      	str	r2, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
90007a18:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90007a1a:	f7ff f93f 	bl	90006c9c <FT5336_RegisterBusIO>
90007a1e:	2800      	cmp	r0, #0
90007a20:	d14b      	bne.n	90007aba <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
90007a22:	a901      	add	r1, sp, #4
90007a24:	4628      	mov	r0, r5
90007a26:	f7ff f82f 	bl	90006a88 <FT5336_ReadID>
90007a2a:	2800      	cmp	r0, #0
90007a2c:	d145      	bne.n	90007aba <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
90007a2e:	9b01      	ldr	r3, [sp, #4]
90007a30:	2b51      	cmp	r3, #81	; 0x51
90007a32:	d142      	bne.n	90007aba <BSP_TS_Init+0xee>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90007a34:	4b28      	ldr	r3, [pc, #160]	; (90007ad8 <BSP_TS_Init+0x10c>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90007a36:	4628      	mov	r0, r5
    Ts_CompObj[Instance] = &FT5336Obj;
90007a38:	4f28      	ldr	r7, [pc, #160]	; (90007adc <BSP_TS_Init+0x110>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90007a3a:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 90007ae4 <BSP_TS_Init+0x118>
    Ts_CompObj[Instance] = &FT5336Obj;
90007a3e:	603d      	str	r5, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90007a40:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90007a44:	681b      	ldr	r3, [r3, #0]
90007a46:	4798      	blx	r3
90007a48:	4606      	mov	r6, r0
90007a4a:	2800      	cmp	r0, #0
90007a4c:	d135      	bne.n	90007aba <BSP_TS_Init+0xee>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007a4e:	4d24      	ldr	r5, [pc, #144]	; (90007ae0 <BSP_TS_Init+0x114>)
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007a50:	a902      	add	r1, sp, #8
90007a52:	6838      	ldr	r0, [r7, #0]
90007a54:	f8d8 3000 	ldr.w	r3, [r8]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007a58:	e9d4 7200 	ldrd	r7, r2, [r4]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007a5c:	69db      	ldr	r3, [r3, #28]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007a5e:	e9c5 7200 	strd	r7, r2, [r5]
90007a62:	68a2      	ldr	r2, [r4, #8]
90007a64:	60aa      	str	r2, [r5, #8]
90007a66:	68e2      	ldr	r2, [r4, #12]
90007a68:	60ea      	str	r2, [r5, #12]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007a6a:	4798      	blx	r3
90007a6c:	2800      	cmp	r0, #0
90007a6e:	db18      	blt.n	90007aa2 <BSP_TS_Init+0xd6>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
90007a70:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
90007a74:	e9c5 3204 	strd	r3, r2, [r5, #16]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007a78:	68e3      	ldr	r3, [r4, #12]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007a7a:	e9d4 2100 	ldrd	r2, r1, [r4]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007a7e:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007a80:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007a82:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007a84:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007a86:	e9c5 2206 	strd	r2, r2, [r5, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007a8a:	e9c5 330b 	strd	r3, r3, [r5, #44]	; 0x2c
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007a8e:	622a      	str	r2, [r5, #32]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007a90:	636b      	str	r3, [r5, #52]	; 0x34
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007a92:	626a      	str	r2, [r5, #36]	; 0x24
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007a94:	63ab      	str	r3, [r5, #56]	; 0x38
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007a96:	62aa      	str	r2, [r5, #40]	; 0x28
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007a98:	63eb      	str	r3, [r5, #60]	; 0x3c
}
90007a9a:	4630      	mov	r0, r6
90007a9c:	b008      	add	sp, #32
90007a9e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ret = BSP_ERROR_COMPONENT_FAILURE;
90007aa2:	f06f 0604 	mvn.w	r6, #4
}
90007aa6:	4630      	mov	r0, r6
90007aa8:	b008      	add	sp, #32
90007aaa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ret = BSP_ERROR_WRONG_PARAM;
90007aae:	f06f 0601 	mvn.w	r6, #1
}
90007ab2:	4630      	mov	r0, r6
90007ab4:	b008      	add	sp, #32
90007ab6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      ret = BSP_ERROR_NO_INIT;
90007aba:	f04f 36ff 	mov.w	r6, #4294967295
90007abe:	e7ec      	b.n	90007a9a <BSP_TS_Init+0xce>
90007ac0:	90006f41 	.word	0x90006f41
90007ac4:	2400a138 	.word	0x2400a138
90007ac8:	90006ead 	.word	0x90006ead
90007acc:	90007719 	.word	0x90007719
90007ad0:	900076dd 	.word	0x900076dd
90007ad4:	90007755 	.word	0x90007755
90007ad8:	24000030 	.word	0x24000030
90007adc:	2400a160 	.word	0x2400a160
90007ae0:	2400a164 	.word	0x2400a164
90007ae4:	2400a1a4 	.word	0x2400a1a4

90007ae8 <BSP_TS_GetState>:
  if(Instance >= TS_INSTANCES_NBR)
90007ae8:	2800      	cmp	r0, #0
90007aea:	d157      	bne.n	90007b9c <BSP_TS_GetState+0xb4>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90007aec:	4b2d      	ldr	r3, [pc, #180]	; (90007ba4 <BSP_TS_GetState+0xbc>)
90007aee:	4a2e      	ldr	r2, [pc, #184]	; (90007ba8 <BSP_TS_GetState+0xc0>)
90007af0:	681b      	ldr	r3, [r3, #0]
90007af2:	6810      	ldr	r0, [r2, #0]
90007af4:	691b      	ldr	r3, [r3, #16]
{
90007af6:	b5f0      	push	{r4, r5, r6, r7, lr}
90007af8:	b085      	sub	sp, #20
90007afa:	460c      	mov	r4, r1
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90007afc:	a901      	add	r1, sp, #4
90007afe:	4798      	blx	r3
90007b00:	2800      	cmp	r0, #0
90007b02:	db41      	blt.n	90007b88 <BSP_TS_GetState+0xa0>
    else if(state.TouchDetected != 0U)
90007b04:	9d01      	ldr	r5, [sp, #4]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90007b06:	4b29      	ldr	r3, [pc, #164]	; (90007bac <BSP_TS_GetState+0xc4>)
    else if(state.TouchDetected != 0U)
90007b08:	b93d      	cbnz	r5, 90007b1a <BSP_TS_GetState+0x32>
      TS_State->TouchX = Ts_Ctx[Instance].PreviousX[0];
90007b0a:	699a      	ldr	r2, [r3, #24]
  int32_t ret = BSP_ERROR_NONE;
90007b0c:	4628      	mov	r0, r5
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90007b0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
      TS_State->TouchDetected = 0U;
90007b10:	6025      	str	r5, [r4, #0]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90007b12:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
90007b16:	b005      	add	sp, #20
90007b18:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90007b1a:	6898      	ldr	r0, [r3, #8]
90007b1c:	0702      	lsls	r2, r0, #28
      y_oriented = state.TouchY;
90007b1e:	e9dd c702 	ldrd	ip, r7, [sp, #8]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90007b22:	d435      	bmi.n	90007b90 <BSP_TS_GetState+0xa8>
      y_oriented = state.TouchY;
90007b24:	4639      	mov	r1, r7
      x_oriented = state.TouchX;
90007b26:	4662      	mov	r2, ip
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90007b28:	691e      	ldr	r6, [r3, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90007b2a:	f010 0f02 	tst.w	r0, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90007b2e:	bf1c      	itt	ne
90007b30:	f106 32ff 	addne.w	r2, r6, #4294967295
90007b34:	eba2 020c 	subne.w	r2, r2, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
90007b38:	f010 0f04 	tst.w	r0, #4
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90007b3c:	6958      	ldr	r0, [r3, #20]
90007b3e:	bf18      	it	ne
90007b40:	1bc1      	subne	r1, r0, r7
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007b42:	681f      	ldr	r7, [r3, #0]
90007b44:	fb07 f202 	mul.w	r2, r7, r2
90007b48:	fbb2 f2f6 	udiv	r2, r2, r6
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007b4c:	685e      	ldr	r6, [r3, #4]
      TS_State->TouchDetected = state.TouchDetected;
90007b4e:	6025      	str	r5, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007b50:	fb06 f101 	mul.w	r1, r6, r1
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
90007b54:	699e      	ldr	r6, [r3, #24]
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
90007b56:	6add      	ldr	r5, [r3, #44]	; 0x2c
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90007b58:	42b2      	cmp	r2, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007b5a:	6062      	str	r2, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007b5c:	fbb1 f1f0 	udiv	r1, r1, r0
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90007b60:	bf8c      	ite	hi
90007b62:	1b90      	subhi	r0, r2, r6
90007b64:	1ab0      	subls	r0, r6, r2
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
90007b66:	42a9      	cmp	r1, r5
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007b68:	60a1      	str	r1, [r4, #8]
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
90007b6a:	bf8c      	ite	hi
90007b6c:	1b4f      	subhi	r7, r1, r5
90007b6e:	1a6f      	subls	r7, r5, r1
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90007b70:	42b8      	cmp	r0, r7
90007b72:	bf38      	it	cc
90007b74:	4638      	movcc	r0, r7
90007b76:	68df      	ldr	r7, [r3, #12]
90007b78:	4287      	cmp	r7, r0
  int32_t ret = BSP_ERROR_NONE;
90007b7a:	f04f 0000 	mov.w	r0, #0
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90007b7e:	d20a      	bcs.n	90007b96 <BSP_TS_GetState+0xae>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
90007b80:	619a      	str	r2, [r3, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
90007b82:	62d9      	str	r1, [r3, #44]	; 0x2c
}
90007b84:	b005      	add	sp, #20
90007b86:	bdf0      	pop	{r4, r5, r6, r7, pc}
      ret = BSP_ERROR_COMPONENT_FAILURE;
90007b88:	f06f 0004 	mvn.w	r0, #4
}
90007b8c:	b005      	add	sp, #20
90007b8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        y_oriented = state.TouchX;
90007b90:	4661      	mov	r1, ip
        x_oriented = state.TouchY;
90007b92:	463a      	mov	r2, r7
90007b94:	e7c8      	b.n	90007b28 <BSP_TS_GetState+0x40>
            TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90007b96:	e9c4 6501 	strd	r6, r5, [r4, #4]
90007b9a:	e7bc      	b.n	90007b16 <BSP_TS_GetState+0x2e>
    ret = BSP_ERROR_WRONG_PARAM;
90007b9c:	f06f 0001 	mvn.w	r0, #1
}
90007ba0:	4770      	bx	lr
90007ba2:	bf00      	nop
90007ba4:	2400a1a4 	.word	0x2400a1a4
90007ba8:	2400a160 	.word	0x2400a160
90007bac:	2400a164 	.word	0x2400a164

90007bb0 <SystemInit>:
#endif

extern unsigned int VECTOR_TABLE_LOCATION;

void SystemInit (void)
{
90007bb0:	b410      	push	{r4}
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90007bb2:	4c19      	ldr	r4, [pc, #100]	; (90007c18 <SystemInit+0x68>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
90007bb4:	2200      	movs	r2, #0
  RCC->CR |= RCC_CR_HSION;
90007bb6:	4b19      	ldr	r3, [pc, #100]	; (90007c1c <SystemInit+0x6c>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90007bb8:	f8d4 1088 	ldr.w	r1, [r4, #136]	; 0x88

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
90007bbc:	4818      	ldr	r0, [pc, #96]	; (90007c20 <SystemInit+0x70>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90007bbe:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
90007bc2:	f8c4 1088 	str.w	r1, [r4, #136]	; 0x88
  RCC->CR |= RCC_CR_HSION;
90007bc6:	6819      	ldr	r1, [r3, #0]
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90007bc8:	4c16      	ldr	r4, [pc, #88]	; (90007c24 <SystemInit+0x74>)
  RCC->CR |= RCC_CR_HSION;
90007bca:	f041 0101 	orr.w	r1, r1, #1
90007bce:	6019      	str	r1, [r3, #0]
  RCC->CFGR = 0x00000000;
90007bd0:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
90007bd2:	6819      	ldr	r1, [r3, #0]
90007bd4:	4008      	ands	r0, r1
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90007bd6:	4914      	ldr	r1, [pc, #80]	; (90007c28 <SystemInit+0x78>)
  RCC->CR &= 0xEAF6ED7FU;
90007bd8:	6018      	str	r0, [r3, #0]
  RCC->D1CFGR = 0x00000000;
90007bda:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
90007bdc:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
90007bde:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x00000000;
90007be0:	629a      	str	r2, [r3, #40]	; 0x28
  RCC->PLLCFGR = 0x00000000;
90007be2:	62da      	str	r2, [r3, #44]	; 0x2c
  RCC->PLL1DIVR = 0x00000000;
90007be4:	631a      	str	r2, [r3, #48]	; 0x30
  RCC->PLL1FRACR = 0x00000000;
90007be6:	635a      	str	r2, [r3, #52]	; 0x34
  RCC->PLL2DIVR = 0x00000000;
90007be8:	639a      	str	r2, [r3, #56]	; 0x38
  RCC->PLL2FRACR = 0x00000000;
90007bea:	63da      	str	r2, [r3, #60]	; 0x3c
  RCC->PLL3DIVR = 0x00000000;
90007bec:	641a      	str	r2, [r3, #64]	; 0x40
  RCC->PLL3FRACR = 0x00000000;
90007bee:	645a      	str	r2, [r3, #68]	; 0x44
  RCC->CR &= 0xFFFBFFFFU;
90007bf0:	6818      	ldr	r0, [r3, #0]
90007bf2:	f420 2080 	bic.w	r0, r0, #262144	; 0x40000
90007bf6:	6018      	str	r0, [r3, #0]
  RCC->CIER = 0x00000000;
90007bf8:	661a      	str	r2, [r3, #96]	; 0x60
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90007bfa:	6823      	ldr	r3, [r4, #0]
90007bfc:	4019      	ands	r1, r3
90007bfe:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
90007c02:	d203      	bcs.n	90007c0c <SystemInit+0x5c>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
90007c04:	4b09      	ldr	r3, [pc, #36]	; (90007c2c <SystemInit+0x7c>)
90007c06:	2201      	movs	r2, #1
90007c08:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#elif defined(VECT_TAB_QSPI)
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90007c0c:	4a08      	ldr	r2, [pc, #32]	; (90007c30 <SystemInit+0x80>)
90007c0e:	4b02      	ldr	r3, [pc, #8]	; (90007c18 <SystemInit+0x68>)
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
90007c10:	f85d 4b04 	ldr.w	r4, [sp], #4
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90007c14:	609a      	str	r2, [r3, #8]
}
90007c16:	4770      	bx	lr
90007c18:	e000ed00 	.word	0xe000ed00
90007c1c:	58024400 	.word	0x58024400
90007c20:	eaf6ed7f 	.word	0xeaf6ed7f
90007c24:	5c001000 	.word	0x5c001000
90007c28:	ffff0000 	.word	0xffff0000
90007c2c:	51008000 	.word	0x51008000
90007c30:	90000000 	.word	0x90000000

90007c34 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
90007c34:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90007c36:	2003      	movs	r0, #3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007c38:	4c12      	ldr	r4, [pc, #72]	; (90007c84 <HAL_Init+0x50>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90007c3a:	f000 f843 	bl	90007cc4 <HAL_NVIC_SetPriorityGrouping>
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007c3e:	f003 fc65 	bl	9000b50c <HAL_RCC_GetSysClockFreq>
90007c42:	4b11      	ldr	r3, [pc, #68]	; (90007c88 <HAL_Init+0x54>)
90007c44:	4911      	ldr	r1, [pc, #68]	; (90007c8c <HAL_Init+0x58>)
90007c46:	699a      	ldr	r2, [r3, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007c48:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007c4a:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007c4e:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007c52:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007c54:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007c56:	f002 021f 	and.w	r2, r2, #31
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
90007c5a:	490d      	ldr	r1, [pc, #52]	; (90007c90 <HAL_Init+0x5c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007c5c:	f003 031f 	and.w	r3, r3, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007c60:	40d0      	lsrs	r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007c62:	fa20 f303 	lsr.w	r3, r0, r3
  SystemCoreClock = common_system_clock;
90007c66:	6008      	str	r0, [r1, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90007c68:	2000      	movs	r0, #0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007c6a:	6023      	str	r3, [r4, #0]
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90007c6c:	f7fb fcf6 	bl	9000365c <HAL_InitTick>
90007c70:	b110      	cbz	r0, 90007c78 <HAL_Init+0x44>
  {
    return HAL_ERROR;
90007c72:	2401      	movs	r4, #1
  /* Init the low level hardware */
  HAL_MspInit();

  /* Return function status */
  return HAL_OK;
}
90007c74:	4620      	mov	r0, r4
90007c76:	bd10      	pop	{r4, pc}
90007c78:	4604      	mov	r4, r0
  HAL_MspInit();
90007c7a:	f7fb faad 	bl	900031d8 <HAL_MspInit>
}
90007c7e:	4620      	mov	r0, r4
90007c80:	bd10      	pop	{r4, pc}
90007c82:	bf00      	nop
90007c84:	24000064 	.word	0x24000064
90007c88:	58024400 	.word	0x58024400
90007c8c:	90029f74 	.word	0x90029f74
90007c90:	24000060 	.word	0x24000060

90007c94 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
90007c94:	4a03      	ldr	r2, [pc, #12]	; (90007ca4 <HAL_IncTick+0x10>)
90007c96:	4b04      	ldr	r3, [pc, #16]	; (90007ca8 <HAL_IncTick+0x14>)
90007c98:	6811      	ldr	r1, [r2, #0]
90007c9a:	781b      	ldrb	r3, [r3, #0]
90007c9c:	440b      	add	r3, r1
90007c9e:	6013      	str	r3, [r2, #0]
}
90007ca0:	4770      	bx	lr
90007ca2:	bf00      	nop
90007ca4:	2400a1a8 	.word	0x2400a1a8
90007ca8:	24000068 	.word	0x24000068

90007cac <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
90007cac:	4b01      	ldr	r3, [pc, #4]	; (90007cb4 <HAL_GetTick+0x8>)
90007cae:	6818      	ldr	r0, [r3, #0]
}
90007cb0:	4770      	bx	lr
90007cb2:	bf00      	nop
90007cb4:	2400a1a8 	.word	0x2400a1a8

90007cb8 <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
90007cb8:	4b01      	ldr	r3, [pc, #4]	; (90007cc0 <HAL_GetREVID+0x8>)
90007cba:	6818      	ldr	r0, [r3, #0]
}
90007cbc:	0c00      	lsrs	r0, r0, #16
90007cbe:	4770      	bx	lr
90007cc0:	5c001000 	.word	0x5c001000

90007cc4 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90007cc4:	4906      	ldr	r1, [pc, #24]	; (90007ce0 <HAL_NVIC_SetPriorityGrouping+0x1c>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90007cc6:	f64f 0cff 	movw	ip, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90007cca:	0200      	lsls	r0, r0, #8
  reg_value  =  (reg_value                                   |
90007ccc:	4b05      	ldr	r3, [pc, #20]	; (90007ce4 <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90007cce:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90007cd0:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90007cd4:	ea02 020c 	and.w	r2, r2, ip
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
90007cd8:	4310      	orrs	r0, r2
  reg_value  =  (reg_value                                   |
90007cda:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
90007cdc:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
90007cde:	4770      	bx	lr
90007ce0:	e000ed00 	.word	0xe000ed00
90007ce4:	05fa0000 	.word	0x05fa0000

90007ce8 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
90007ce8:	4b1b      	ldr	r3, [pc, #108]	; (90007d58 <HAL_NVIC_SetPriority+0x70>)
90007cea:	68db      	ldr	r3, [r3, #12]
90007cec:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
90007cf0:	b500      	push	{lr}
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90007cf2:	f1c3 0e07 	rsb	lr, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90007cf6:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90007cfa:	f1be 0f04 	cmp.w	lr, #4
90007cfe:	bf28      	it	cs
90007d00:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90007d04:	f1bc 0f06 	cmp.w	ip, #6
90007d08:	d91a      	bls.n	90007d40 <HAL_NVIC_SetPriority+0x58>
90007d0a:	3b03      	subs	r3, #3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
90007d0c:	f04f 3cff 	mov.w	ip, #4294967295
90007d10:	fa0c fc03 	lsl.w	ip, ip, r3
90007d14:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90007d18:	f04f 3cff 	mov.w	ip, #4294967295
  if ((int32_t)(IRQn) >= 0)
90007d1c:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90007d1e:	fa0c fc0e 	lsl.w	ip, ip, lr
90007d22:	ea21 010c 	bic.w	r1, r1, ip
90007d26:	fa01 f103 	lsl.w	r1, r1, r3
90007d2a:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
90007d2e:	db0a      	blt.n	90007d46 <HAL_NVIC_SetPriority+0x5e>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90007d30:	0109      	lsls	r1, r1, #4
90007d32:	4b0a      	ldr	r3, [pc, #40]	; (90007d5c <HAL_NVIC_SetPriority+0x74>)
90007d34:	b2c9      	uxtb	r1, r1
90007d36:	4403      	add	r3, r0
90007d38:	f883 1300 	strb.w	r1, [r3, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
90007d3c:	f85d fb04 	ldr.w	pc, [sp], #4
90007d40:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90007d42:	4613      	mov	r3, r2
90007d44:	e7e8      	b.n	90007d18 <HAL_NVIC_SetPriority+0x30>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90007d46:	f000 000f 	and.w	r0, r0, #15
90007d4a:	0109      	lsls	r1, r1, #4
90007d4c:	4b04      	ldr	r3, [pc, #16]	; (90007d60 <HAL_NVIC_SetPriority+0x78>)
90007d4e:	b2c9      	uxtb	r1, r1
90007d50:	4403      	add	r3, r0
90007d52:	7619      	strb	r1, [r3, #24]
90007d54:	f85d fb04 	ldr.w	pc, [sp], #4
90007d58:	e000ed00 	.word	0xe000ed00
90007d5c:	e000e100 	.word	0xe000e100
90007d60:	e000ecfc 	.word	0xe000ecfc

90007d64 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90007d64:	2800      	cmp	r0, #0
90007d66:	db07      	blt.n	90007d78 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90007d68:	2301      	movs	r3, #1
90007d6a:	f000 011f 	and.w	r1, r0, #31
90007d6e:	4a03      	ldr	r2, [pc, #12]	; (90007d7c <HAL_NVIC_EnableIRQ+0x18>)
90007d70:	0940      	lsrs	r0, r0, #5
90007d72:	408b      	lsls	r3, r1
90007d74:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
90007d78:	4770      	bx	lr
90007d7a:	bf00      	nop
90007d7c:	e000e100 	.word	0xe000e100

90007d80 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90007d80:	2800      	cmp	r0, #0
90007d82:	db0c      	blt.n	90007d9e <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90007d84:	0943      	lsrs	r3, r0, #5
90007d86:	2201      	movs	r2, #1
90007d88:	f000 001f 	and.w	r0, r0, #31
90007d8c:	4904      	ldr	r1, [pc, #16]	; (90007da0 <HAL_NVIC_DisableIRQ+0x20>)
90007d8e:	3320      	adds	r3, #32
90007d90:	4082      	lsls	r2, r0
90007d92:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
90007d96:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90007d9a:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
90007d9e:	4770      	bx	lr
90007da0:	e000e100 	.word	0xe000e100

90007da4 <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
90007da4:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90007da8:	4b04      	ldr	r3, [pc, #16]	; (90007dbc <HAL_MPU_Disable+0x18>)

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
90007daa:	2100      	movs	r1, #0
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90007dac:	6a5a      	ldr	r2, [r3, #36]	; 0x24
90007dae:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
90007db2:	625a      	str	r2, [r3, #36]	; 0x24
  MPU->CTRL = 0;
90007db4:	f8c3 1094 	str.w	r1, [r3, #148]	; 0x94
}
90007db8:	4770      	bx	lr
90007dba:	bf00      	nop
90007dbc:	e000ed00 	.word	0xe000ed00

90007dc0 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
90007dc0:	4b06      	ldr	r3, [pc, #24]	; (90007ddc <HAL_MPU_Enable+0x1c>)
90007dc2:	f040 0001 	orr.w	r0, r0, #1
90007dc6:	f8c3 0094 	str.w	r0, [r3, #148]	; 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
90007dca:	6a5a      	ldr	r2, [r3, #36]	; 0x24
90007dcc:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
90007dd0:	625a      	str	r2, [r3, #36]	; 0x24
  __ASM volatile ("dsb 0xF":::"memory");
90007dd2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90007dd6:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
90007dda:	4770      	bx	lr
90007ddc:	e000ed00 	.word	0xe000ed00

90007de0 <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
90007de0:	4a17      	ldr	r2, [pc, #92]	; (90007e40 <HAL_MPU_ConfigRegion+0x60>)
90007de2:	7843      	ldrb	r3, [r0, #1]
90007de4:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98

  if ((MPU_Init->Enable) != 0UL)
90007de8:	7801      	ldrb	r1, [r0, #0]
90007dea:	b321      	cbz	r1, 90007e36 <HAL_MPU_ConfigRegion+0x56>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

    MPU->RBAR = MPU_Init->BaseAddress;
90007dec:	6843      	ldr	r3, [r0, #4]
{
90007dee:	b500      	push	{lr}
    MPU->RBAR = MPU_Init->BaseAddress;
90007df0:	f8c2 309c 	str.w	r3, [r2, #156]	; 0x9c
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90007df4:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90007df6:	f890 c00c 	ldrb.w	ip, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90007dfa:	061b      	lsls	r3, r3, #24
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
90007dfc:	f890 e00f 	ldrb.w	lr, [r0, #15]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90007e00:	ea43 730c 	orr.w	r3, r3, ip, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
90007e04:	f890 c00a 	ldrb.w	ip, [r0, #10]
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90007e08:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
90007e0a:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90007e0c:	ea43 43cc 	orr.w	r3, r3, ip, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
90007e10:	f890 c00d 	ldrb.w	ip, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90007e14:	ea43 438c 	orr.w	r3, r3, ip, lsl #18
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
90007e18:	f890 c009 	ldrb.w	ip, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90007e1c:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
90007e20:	7a01      	ldrb	r1, [r0, #8]
90007e22:	ea43 430e 	orr.w	r3, r3, lr, lsl #16
90007e26:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
90007e2a:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90007e2e:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
90007e32:	f85d fb04 	ldr.w	pc, [sp], #4
    MPU->RBAR = 0x00;
90007e36:	f8c2 109c 	str.w	r1, [r2, #156]	; 0x9c
    MPU->RASR = 0x00;
90007e3a:	f8c2 10a0 	str.w	r1, [r2, #160]	; 0xa0
90007e3e:	4770      	bx	lr
90007e40:	e000ed00 	.word	0xe000ed00

90007e44 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
90007e44:	2800      	cmp	r0, #0
90007e46:	d036      	beq.n	90007eb6 <HAL_CRC_Init+0x72>
{
90007e48:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
90007e4a:	7f43      	ldrb	r3, [r0, #29]
90007e4c:	4604      	mov	r4, r0
90007e4e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
90007e52:	b363      	cbz	r3, 90007eae <HAL_CRC_Init+0x6a>
    hcrc->Lock = HAL_UNLOCKED;
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
90007e54:	2202      	movs	r2, #2

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
90007e56:	7923      	ldrb	r3, [r4, #4]
  hcrc->State = HAL_CRC_STATE_BUSY;
90007e58:	7762      	strb	r2, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
90007e5a:	b9f3      	cbnz	r3, 90007e9a <HAL_CRC_Init+0x56>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
90007e5c:	6823      	ldr	r3, [r4, #0]
90007e5e:	4a17      	ldr	r2, [pc, #92]	; (90007ebc <HAL_CRC_Init+0x78>)
90007e60:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
90007e62:	689a      	ldr	r2, [r3, #8]
90007e64:	f022 0218 	bic.w	r2, r2, #24
90007e68:	609a      	str	r2, [r3, #8]
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
90007e6a:	7962      	ldrb	r2, [r4, #5]
90007e6c:	b18a      	cbz	r2, 90007e92 <HAL_CRC_Init+0x4e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
90007e6e:	6922      	ldr	r2, [r4, #16]
90007e70:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90007e72:	689a      	ldr	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90007e74:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90007e78:	f022 0260 	bic.w	r2, r2, #96	; 0x60
90007e7c:	4302      	orrs	r2, r0

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
90007e7e:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90007e80:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90007e82:	689a      	ldr	r2, [r3, #8]
90007e84:	f022 0280 	bic.w	r2, r2, #128	; 0x80
90007e88:	430a      	orrs	r2, r1
  hcrc->State = HAL_CRC_STATE_READY;
90007e8a:	2101      	movs	r1, #1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90007e8c:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
90007e8e:	7761      	strb	r1, [r4, #29]
}
90007e90:	bd10      	pop	{r4, pc}
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90007e92:	f04f 32ff 	mov.w	r2, #4294967295
90007e96:	611a      	str	r2, [r3, #16]
90007e98:	e7eb      	b.n	90007e72 <HAL_CRC_Init+0x2e>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
90007e9a:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
90007e9e:	4620      	mov	r0, r4
90007ea0:	f000 f80e 	bl	90007ec0 <HAL_CRCEx_Polynomial_Set>
90007ea4:	b908      	cbnz	r0, 90007eaa <HAL_CRC_Init+0x66>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90007ea6:	6823      	ldr	r3, [r4, #0]
90007ea8:	e7df      	b.n	90007e6a <HAL_CRC_Init+0x26>
    return HAL_ERROR;
90007eaa:	2001      	movs	r0, #1
}
90007eac:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
90007eae:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
90007eb0:	f7fb f9ac 	bl	9000320c <HAL_CRC_MspInit>
90007eb4:	e7ce      	b.n	90007e54 <HAL_CRC_Init+0x10>
    return HAL_ERROR;
90007eb6:	2001      	movs	r0, #1
}
90007eb8:	4770      	bx	lr
90007eba:	bf00      	nop
90007ebc:	04c11db7 	.word	0x04c11db7

90007ec0 <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */ 
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
90007ec0:	07cb      	lsls	r3, r1, #31
90007ec2:	d51a      	bpl.n	90007efa <HAL_CRCEx_Polynomial_Set+0x3a>
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
90007ec4:	231e      	movs	r3, #30
{
90007ec6:	b410      	push	{r4}
90007ec8:	e001      	b.n	90007ece <HAL_CRCEx_Polynomial_Set+0xe>
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
90007eca:	3b01      	subs	r3, #1
90007ecc:	d317      	bcc.n	90007efe <HAL_CRCEx_Polynomial_Set+0x3e>
90007ece:	fa21 fc03 	lsr.w	ip, r1, r3
90007ed2:	f01c 0f01 	tst.w	ip, #1
90007ed6:	d0f8      	beq.n	90007eca <HAL_CRCEx_Polynomial_Set+0xa>
    {
    }

    switch (PolyLength)
90007ed8:	2a18      	cmp	r2, #24
90007eda:	d811      	bhi.n	90007f00 <HAL_CRCEx_Polynomial_Set+0x40>
90007edc:	e8df f002 	tbb	[pc, r2]
90007ee0:	10101016 	.word	0x10101016
90007ee4:	10101010 	.word	0x10101010
90007ee8:	10101024 	.word	0x10101024
90007eec:	10101010 	.word	0x10101010
90007ef0:	10101021 	.word	0x10101021
90007ef4:	10101010 	.word	0x10101010
90007ef8:	14          	.byte	0x14
90007ef9:	00          	.byte	0x00
    status =  HAL_ERROR;
90007efa:	2001      	movs	r0, #1
    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
}
90007efc:	4770      	bx	lr
    switch (PolyLength)
90007efe:	b12a      	cbz	r2, 90007f0c <HAL_CRCEx_Polynomial_Set+0x4c>
        status =  HAL_ERROR;
90007f00:	2001      	movs	r0, #1
}
90007f02:	f85d 4b04 	ldr.w	r4, [sp], #4
90007f06:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_7B)
90007f08:	2b06      	cmp	r3, #6
90007f0a:	d8f9      	bhi.n	90007f00 <HAL_CRCEx_Polynomial_Set+0x40>
    WRITE_REG(hcrc->Instance->POL, Pol);
90007f0c:	6804      	ldr	r4, [r0, #0]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
90007f0e:	2000      	movs	r0, #0
    WRITE_REG(hcrc->Instance->POL, Pol);
90007f10:	6161      	str	r1, [r4, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
90007f12:	68a3      	ldr	r3, [r4, #8]
90007f14:	f023 0318 	bic.w	r3, r3, #24
90007f18:	4313      	orrs	r3, r2
90007f1a:	60a3      	str	r3, [r4, #8]
}
90007f1c:	f85d 4b04 	ldr.w	r4, [sp], #4
90007f20:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_8B)
90007f22:	2b07      	cmp	r3, #7
90007f24:	d9f2      	bls.n	90007f0c <HAL_CRCEx_Polynomial_Set+0x4c>
90007f26:	e7eb      	b.n	90007f00 <HAL_CRCEx_Polynomial_Set+0x40>
        if (msb >= HAL_CRC_LENGTH_16B)
90007f28:	2b0f      	cmp	r3, #15
90007f2a:	d9ef      	bls.n	90007f0c <HAL_CRCEx_Polynomial_Set+0x4c>
90007f2c:	e7e8      	b.n	90007f00 <HAL_CRCEx_Polynomial_Set+0x40>
90007f2e:	bf00      	nop

90007f30 <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
90007f30:	2800      	cmp	r0, #0
90007f32:	d035      	beq.n	90007fa0 <HAL_DMA2D_Init+0x70>
{
90007f34:	b538      	push	{r3, r4, r5, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
90007f36:	f890 3061 	ldrb.w	r3, [r0, #97]	; 0x61
90007f3a:	4604      	mov	r4, r0
90007f3c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
90007f40:	b34b      	cbz	r3, 90007f96 <HAL_DMA2D_Init+0x66>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007f42:	6823      	ldr	r3, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90007f44:	2002      	movs	r0, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007f46:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90007f48:	f884 0061 	strb.w	r0, [r4, #97]	; 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007f4c:	69e1      	ldr	r1, [r4, #28]
90007f4e:	681d      	ldr	r5, [r3, #0]
90007f50:	4814      	ldr	r0, [pc, #80]	; (90007fa4 <HAL_DMA2D_Init+0x74>)
90007f52:	4311      	orrs	r1, r2

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90007f54:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007f56:	4028      	ands	r0, r5
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90007f58:	68e5      	ldr	r5, [r4, #12]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007f5a:	4301      	orrs	r1, r0
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90007f5c:	69a0      	ldr	r0, [r4, #24]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007f5e:	6019      	str	r1, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90007f60:	4302      	orrs	r2, r0
90007f62:	6b59      	ldr	r1, [r3, #52]	; 0x34
90007f64:	4810      	ldr	r0, [pc, #64]	; (90007fa8 <HAL_DMA2D_Init+0x78>)
90007f66:	4008      	ands	r0, r1
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90007f68:	4910      	ldr	r1, [pc, #64]	; (90007fac <HAL_DMA2D_Init+0x7c>)
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90007f6a:	4302      	orrs	r2, r0
90007f6c:	635a      	str	r2, [r3, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90007f6e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
90007f70:	4011      	ands	r1, r2
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90007f72:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90007f76:	4329      	orrs	r1, r5
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90007f78:	0552      	lsls	r2, r2, #21
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90007f7a:	6419      	str	r1, [r3, #64]	; 0x40
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90007f7c:	6b59      	ldr	r1, [r3, #52]	; 0x34
90007f7e:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90007f82:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90007f84:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
90007f88:	430a      	orrs	r2, r1
90007f8a:	635a      	str	r2, [r3, #52]	; 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90007f8c:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90007f8e:	6660      	str	r0, [r4, #100]	; 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90007f90:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

  return HAL_OK;
}
90007f94:	bd38      	pop	{r3, r4, r5, pc}
    hdma2d->Lock = HAL_UNLOCKED;
90007f96:	f880 2060 	strb.w	r2, [r0, #96]	; 0x60
    HAL_DMA2D_MspInit(hdma2d);
90007f9a:	f7fb f94f 	bl	9000323c <HAL_DMA2D_MspInit>
90007f9e:	e7d0      	b.n	90007f42 <HAL_DMA2D_Init+0x12>
    return HAL_ERROR;
90007fa0:	2001      	movs	r0, #1
}
90007fa2:	4770      	bx	lr
90007fa4:	fff8ffbf 	.word	0xfff8ffbf
90007fa8:	fffffef8 	.word	0xfffffef8
90007fac:	ffff0000 	.word	0xffff0000

90007fb0 <HAL_DMA2D_LineEventCallback>:
90007fb0:	4770      	bx	lr
90007fb2:	bf00      	nop

90007fb4 <HAL_DMA2D_CLUTLoadingCpltCallback>:
90007fb4:	4770      	bx	lr
90007fb6:	bf00      	nop

90007fb8 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90007fb8:	6803      	ldr	r3, [r0, #0]
{
90007fba:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90007fbc:	685d      	ldr	r5, [r3, #4]
{
90007fbe:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
90007fc0:	681e      	ldr	r6, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
90007fc2:	07ea      	lsls	r2, r5, #31
90007fc4:	d501      	bpl.n	90007fca <HAL_DMA2D_IRQHandler+0x12>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
90007fc6:	05f1      	lsls	r1, r6, #23
90007fc8:	d456      	bmi.n	90008078 <HAL_DMA2D_IRQHandler+0xc0>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
90007fca:	06aa      	lsls	r2, r5, #26
90007fcc:	d501      	bpl.n	90007fd2 <HAL_DMA2D_IRQHandler+0x1a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
90007fce:	04b3      	lsls	r3, r6, #18
90007fd0:	d43b      	bmi.n	9000804a <HAL_DMA2D_IRQHandler+0x92>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
90007fd2:	0728      	lsls	r0, r5, #28
90007fd4:	d501      	bpl.n	90007fda <HAL_DMA2D_IRQHandler+0x22>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
90007fd6:	0531      	lsls	r1, r6, #20
90007fd8:	d421      	bmi.n	9000801e <HAL_DMA2D_IRQHandler+0x66>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
90007fda:	076a      	lsls	r2, r5, #29
90007fdc:	d501      	bpl.n	90007fe2 <HAL_DMA2D_IRQHandler+0x2a>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
90007fde:	0573      	lsls	r3, r6, #21
90007fe0:	d472      	bmi.n	900080c8 <HAL_DMA2D_IRQHandler+0x110>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
90007fe2:	07a8      	lsls	r0, r5, #30
90007fe4:	d501      	bpl.n	90007fea <HAL_DMA2D_IRQHandler+0x32>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
90007fe6:	05b1      	lsls	r1, r6, #22
90007fe8:	d404      	bmi.n	90007ff4 <HAL_DMA2D_IRQHandler+0x3c>
        hdma2d->XferCpltCallback(hdma2d);
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
90007fea:	06ea      	lsls	r2, r5, #27
90007fec:	d501      	bpl.n	90007ff2 <HAL_DMA2D_IRQHandler+0x3a>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
90007fee:	04f3      	lsls	r3, r6, #19
90007ff0:	d457      	bmi.n	900080a2 <HAL_DMA2D_IRQHandler+0xea>
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
90007ff2:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
90007ff4:	6823      	ldr	r3, [r4, #0]
90007ff6:	681a      	ldr	r2, [r3, #0]
90007ff8:	f422 7200 	bic.w	r2, r2, #512	; 0x200
90007ffc:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
90007ffe:	2202      	movs	r2, #2
90008000:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_READY;
90008002:	2201      	movs	r2, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90008004:	6e63      	ldr	r3, [r4, #100]	; 0x64
90008006:	6663      	str	r3, [r4, #100]	; 0x64
      __HAL_UNLOCK(hdma2d);
90008008:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000800a:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
9000800e:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
      if (hdma2d->XferCpltCallback != NULL)
90008012:	6a23      	ldr	r3, [r4, #32]
90008014:	2b00      	cmp	r3, #0
90008016:	d0e8      	beq.n	90007fea <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
90008018:	4620      	mov	r0, r4
9000801a:	4798      	blx	r3
9000801c:	e7e5      	b.n	90007fea <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
9000801e:	6823      	ldr	r3, [r4, #0]
90008020:	681a      	ldr	r2, [r3, #0]
90008022:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
90008026:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
90008028:	2208      	movs	r2, #8
9000802a:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000802c:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
9000802e:	6e63      	ldr	r3, [r4, #100]	; 0x64
90008030:	4313      	orrs	r3, r2
90008032:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008034:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
90008038:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
9000803a:	6a63      	ldr	r3, [r4, #36]	; 0x24
      __HAL_UNLOCK(hdma2d);
9000803c:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
90008040:	2b00      	cmp	r3, #0
90008042:	d0ca      	beq.n	90007fda <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
90008044:	4620      	mov	r0, r4
90008046:	4798      	blx	r3
90008048:	e7c7      	b.n	90007fda <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
9000804a:	6823      	ldr	r3, [r4, #0]
9000804c:	681a      	ldr	r2, [r3, #0]
9000804e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
90008052:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
90008054:	2220      	movs	r2, #32
90008056:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008058:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
9000805a:	6e63      	ldr	r3, [r4, #100]	; 0x64
9000805c:	f043 0302 	orr.w	r3, r3, #2
90008060:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008062:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
90008066:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
90008068:	6a63      	ldr	r3, [r4, #36]	; 0x24
      __HAL_UNLOCK(hdma2d);
9000806a:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
9000806e:	2b00      	cmp	r3, #0
90008070:	d0af      	beq.n	90007fd2 <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
90008072:	4620      	mov	r0, r4
90008074:	4798      	blx	r3
90008076:	e7ac      	b.n	90007fd2 <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
90008078:	681a      	ldr	r2, [r3, #0]
9000807a:	f422 7280 	bic.w	r2, r2, #256	; 0x100
9000807e:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
90008080:	6e42      	ldr	r2, [r0, #100]	; 0x64
90008082:	f042 0201 	orr.w	r2, r2, #1
90008086:	6642      	str	r2, [r0, #100]	; 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
90008088:	2201      	movs	r2, #1
9000808a:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000808c:	2304      	movs	r3, #4
9000808e:	f880 3061 	strb.w	r3, [r0, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
90008092:	2300      	movs	r3, #0
90008094:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
90008098:	6a43      	ldr	r3, [r0, #36]	; 0x24
9000809a:	2b00      	cmp	r3, #0
9000809c:	d095      	beq.n	90007fca <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
9000809e:	4798      	blx	r3
900080a0:	e793      	b.n	90007fca <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
900080a2:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
900080a4:	2010      	movs	r0, #16
      hdma2d->State = HAL_DMA2D_STATE_READY;
900080a6:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
900080a8:	2500      	movs	r5, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
900080aa:	681a      	ldr	r2, [r3, #0]
900080ac:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
900080b0:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
900080b2:	6098      	str	r0, [r3, #8]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
900080b4:	4620      	mov	r0, r4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
900080b6:	6e63      	ldr	r3, [r4, #100]	; 0x64
      __HAL_UNLOCK(hdma2d);
900080b8:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
900080bc:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
900080be:	f884 1061 	strb.w	r1, [r4, #97]	; 0x61
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
900080c2:	f7ff ff77 	bl	90007fb4 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
900080c6:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
900080c8:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
900080ca:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
900080cc:	681a      	ldr	r2, [r3, #0]
900080ce:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
900080d2:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
900080d4:	2204      	movs	r2, #4
900080d6:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
900080d8:	f7ff ff6a 	bl	90007fb0 <HAL_DMA2D_LineEventCallback>
900080dc:	e781      	b.n	90007fe2 <HAL_DMA2D_IRQHandler+0x2a>
900080de:	bf00      	nop

900080e0 <HAL_DMA2D_ConfigLayer>:
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
900080e0:	f890 2060 	ldrb.w	r2, [r0, #96]	; 0x60
900080e4:	2a01      	cmp	r2, #1
900080e6:	d065      	beq.n	900081b4 <HAL_DMA2D_ConfigLayer+0xd4>
900080e8:	4603      	mov	r3, r0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
900080ea:	ebc1 00c1 	rsb	r0, r1, r1, lsl #3
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
900080ee:	2202      	movs	r2, #2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
900080f0:	eb03 0080 	add.w	r0, r3, r0, lsl #2
{
900080f4:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hdma2d);
900080f6:	2401      	movs	r4, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
900080f8:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61
  __HAL_LOCK(hdma2d);
900080fc:	f883 4060 	strb.w	r4, [r3, #96]	; 0x60
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90008100:	6b82      	ldr	r2, [r0, #56]	; 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008102:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
90008104:	6b05      	ldr	r5, [r0, #48]	; 0x30
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90008106:	0512      	lsls	r2, r2, #20
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90008108:	f1a4 0c09 	sub.w	ip, r4, #9
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000810c:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
90008110:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90008112:	f1bc 0f01 	cmp.w	ip, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008116:	ea42 0204 	orr.w	r2, r2, r4
9000811a:	ea42 5245 	orr.w	r2, r2, r5, lsl #21
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000811e:	d922      	bls.n	90008166 <HAL_DMA2D_ConfigLayer+0x86>
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
90008120:	6b45      	ldr	r5, [r0, #52]	; 0x34
90008122:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90008126:	b981      	cbnz	r1, 9000814a <HAL_DMA2D_ConfigLayer+0x6a>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008128:	6818      	ldr	r0, [r3, #0]
9000812a:	4923      	ldr	r1, [pc, #140]	; (900081b8 <HAL_DMA2D_ConfigLayer+0xd8>)
9000812c:	6a45      	ldr	r5, [r0, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000812e:	6a9c      	ldr	r4, [r3, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008130:	4029      	ands	r1, r5
90008132:	4311      	orrs	r1, r2
90008134:	6241      	str	r1, [r0, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90008136:	6184      	str	r4, [r0, #24]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
90008138:	2200      	movs	r2, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
9000813a:	2101      	movs	r1, #1

  return HAL_OK;
9000813c:	4610      	mov	r0, r2
  hdma2d->State = HAL_DMA2D_STATE_READY;
9000813e:	f883 1061 	strb.w	r1, [r3, #97]	; 0x61
  __HAL_UNLOCK(hdma2d);
90008142:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60
}
90008146:	bc70      	pop	{r4, r5, r6}
90008148:	4770      	bx	lr
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
9000814a:	2c0b      	cmp	r4, #11
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000814c:	681c      	ldr	r4, [r3, #0]
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
9000814e:	d129      	bne.n	900081a4 <HAL_DMA2D_ConfigLayer+0xc4>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008150:	69e5      	ldr	r5, [r4, #28]
90008152:	491a      	ldr	r1, [pc, #104]	; (900081bc <HAL_DMA2D_ConfigLayer+0xdc>)
90008154:	4029      	ands	r1, r5
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
90008156:	6c05      	ldr	r5, [r0, #64]	; 0x40
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008158:	6a80      	ldr	r0, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000815a:	ea41 4185 	orr.w	r1, r1, r5, lsl #18
9000815e:	4311      	orrs	r1, r2
90008160:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008162:	6120      	str	r0, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90008164:	e7e8      	b.n	90008138 <HAL_DMA2D_ConfigLayer+0x58>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
90008166:	6b44      	ldr	r4, [r0, #52]	; 0x34
90008168:	f004 447f 	and.w	r4, r4, #4278190080	; 0xff000000
9000816c:	4314      	orrs	r4, r2
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
9000816e:	b961      	cbnz	r1, 9000818a <HAL_DMA2D_ConfigLayer+0xaa>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008170:	6819      	ldr	r1, [r3, #0]
90008172:	4a11      	ldr	r2, [pc, #68]	; (900081b8 <HAL_DMA2D_ConfigLayer+0xd8>)
90008174:	6a4e      	ldr	r6, [r1, #36]	; 0x24
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90008176:	6b58      	ldr	r0, [r3, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008178:	4032      	ands	r2, r6
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000817a:	6a9d      	ldr	r5, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000817c:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008180:	4322      	orrs	r2, r4
90008182:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90008184:	618d      	str	r5, [r1, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90008186:	6288      	str	r0, [r1, #40]	; 0x28
90008188:	e7d6      	b.n	90008138 <HAL_DMA2D_ConfigLayer+0x58>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000818a:	6819      	ldr	r1, [r3, #0]
9000818c:	4a0a      	ldr	r2, [pc, #40]	; (900081b8 <HAL_DMA2D_ConfigLayer+0xd8>)
9000818e:	69cd      	ldr	r5, [r1, #28]
90008190:	402a      	ands	r2, r5
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008192:	6a85      	ldr	r5, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008194:	4322      	orrs	r2, r4
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90008196:	6b44      	ldr	r4, [r0, #52]	; 0x34
90008198:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000819c:	61ca      	str	r2, [r1, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000819e:	610d      	str	r5, [r1, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
900081a0:	620c      	str	r4, [r1, #32]
900081a2:	e7c9      	b.n	90008138 <HAL_DMA2D_ConfigLayer+0x58>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900081a4:	69e5      	ldr	r5, [r4, #28]
900081a6:	4904      	ldr	r1, [pc, #16]	; (900081b8 <HAL_DMA2D_ConfigLayer+0xd8>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900081a8:	6a80      	ldr	r0, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900081aa:	4029      	ands	r1, r5
900081ac:	4311      	orrs	r1, r2
900081ae:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900081b0:	6120      	str	r0, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900081b2:	e7c1      	b.n	90008138 <HAL_DMA2D_ConfigLayer+0x58>
  __HAL_LOCK(hdma2d);
900081b4:	2002      	movs	r0, #2
}
900081b6:	4770      	bx	lr
900081b8:	00ccfff0 	.word	0x00ccfff0
900081bc:	00c0fff0 	.word	0x00c0fff0

900081c0 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
900081c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
900081c4:	680c      	ldr	r4, [r1, #0]
{
900081c6:	b083      	sub	sp, #12
  while (((GPIO_Init->Pin) >> position) != 0x00U)
900081c8:	2c00      	cmp	r4, #0
900081ca:	f000 80a7 	beq.w	9000831c <HAL_GPIO_Init+0x15c>
900081ce:	f04f 0c00 	mov.w	ip, #0
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900081d2:	4f8a      	ldr	r7, [pc, #552]	; (900083fc <HAL_GPIO_Init+0x23c>)
  uint32_t position = 0x00U;
900081d4:	4663      	mov	r3, ip
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
900081d6:	2201      	movs	r2, #1
900081d8:	409a      	lsls	r2, r3
    if (iocurrent != 0x00U)
900081da:	ea12 0e04 	ands.w	lr, r2, r4
900081de:	f000 8096 	beq.w	9000830e <HAL_GPIO_Init+0x14e>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
900081e2:	684d      	ldr	r5, [r1, #4]
900081e4:	f005 0903 	and.w	r9, r5, #3
900081e8:	f109 36ff 	add.w	r6, r9, #4294967295
900081ec:	2e01      	cmp	r6, #1
900081ee:	f240 8098 	bls.w	90008322 <HAL_GPIO_Init+0x162>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
900081f2:	f1b9 0f03 	cmp.w	r9, #3
900081f6:	f040 80d2 	bne.w	9000839e <HAL_GPIO_Init+0x1de>
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900081fa:	fa09 f20c 	lsl.w	r2, r9, ip
900081fe:	ea6f 0802 	mvn.w	r8, r2
      temp = GPIOx->MODER;
90008202:	6806      	ldr	r6, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
90008204:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
90008208:	ea06 0608 	and.w	r6, r6, r8
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
9000820c:	ea42 0206 	orr.w	r2, r2, r6
      GPIOx->MODER = temp;
90008210:	6002      	str	r2, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
90008212:	d07c      	beq.n	9000830e <HAL_GPIO_Init+0x14e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008214:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
90008218:	f023 0803 	bic.w	r8, r3, #3

        temp = SYSCFG->EXTICR[position >> 2U];
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000821c:	f003 0903 	and.w	r9, r3, #3
90008220:	260f      	movs	r6, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008222:	f042 0202 	orr.w	r2, r2, #2
90008226:	f108 48b0 	add.w	r8, r8, #1476395008	; 0x58000000
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000822a:	ea4f 0989 	mov.w	r9, r9, lsl #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000822e:	f8c7 20f4 	str.w	r2, [r7, #244]	; 0xf4
90008232:	f508 6880 	add.w	r8, r8, #1024	; 0x400
90008236:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000823a:	fa06 f609 	lsl.w	r6, r6, r9
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000823e:	f002 0202 	and.w	r2, r2, #2
90008242:	9201      	str	r2, [sp, #4]
90008244:	9a01      	ldr	r2, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
90008246:	f8d8 2008 	ldr.w	r2, [r8, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000824a:	ea22 0206 	bic.w	r2, r2, r6
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000824e:	4e6c      	ldr	r6, [pc, #432]	; (90008400 <HAL_GPIO_Init+0x240>)
90008250:	42b0      	cmp	r0, r6
90008252:	d028      	beq.n	900082a6 <HAL_GPIO_Init+0xe6>
90008254:	f506 6680 	add.w	r6, r6, #1024	; 0x400
90008258:	42b0      	cmp	r0, r6
9000825a:	f000 80ac 	beq.w	900083b6 <HAL_GPIO_Init+0x1f6>
9000825e:	4e69      	ldr	r6, [pc, #420]	; (90008404 <HAL_GPIO_Init+0x244>)
90008260:	42b0      	cmp	r0, r6
90008262:	f000 80ad 	beq.w	900083c0 <HAL_GPIO_Init+0x200>
90008266:	4e68      	ldr	r6, [pc, #416]	; (90008408 <HAL_GPIO_Init+0x248>)
90008268:	42b0      	cmp	r0, r6
9000826a:	f000 809f 	beq.w	900083ac <HAL_GPIO_Init+0x1ec>
9000826e:	4e67      	ldr	r6, [pc, #412]	; (9000840c <HAL_GPIO_Init+0x24c>)
90008270:	42b0      	cmp	r0, r6
90008272:	f000 80af 	beq.w	900083d4 <HAL_GPIO_Init+0x214>
90008276:	4e66      	ldr	r6, [pc, #408]	; (90008410 <HAL_GPIO_Init+0x250>)
90008278:	42b0      	cmp	r0, r6
9000827a:	f000 80b0 	beq.w	900083de <HAL_GPIO_Init+0x21e>
9000827e:	4e65      	ldr	r6, [pc, #404]	; (90008414 <HAL_GPIO_Init+0x254>)
90008280:	42b0      	cmp	r0, r6
90008282:	f000 80a2 	beq.w	900083ca <HAL_GPIO_Init+0x20a>
90008286:	4e64      	ldr	r6, [pc, #400]	; (90008418 <HAL_GPIO_Init+0x258>)
90008288:	42b0      	cmp	r0, r6
9000828a:	f000 80ad 	beq.w	900083e8 <HAL_GPIO_Init+0x228>
9000828e:	4e63      	ldr	r6, [pc, #396]	; (9000841c <HAL_GPIO_Init+0x25c>)
90008290:	42b0      	cmp	r0, r6
90008292:	f000 80ae 	beq.w	900083f2 <HAL_GPIO_Init+0x232>
90008296:	4e62      	ldr	r6, [pc, #392]	; (90008420 <HAL_GPIO_Init+0x260>)
90008298:	42b0      	cmp	r0, r6
9000829a:	bf0c      	ite	eq
9000829c:	2609      	moveq	r6, #9
9000829e:	260a      	movne	r6, #10
900082a0:	fa06 f609 	lsl.w	r6, r6, r9
900082a4:	4332      	orrs	r2, r6
        SYSCFG->EXTICR[position >> 2U] = temp;
900082a6:	f8c8 2008 	str.w	r2, [r8, #8]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
900082aa:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
900082ae:	f415 1f80 	tst.w	r5, #1048576	; 0x100000
        temp &= ~(iocurrent);
900082b2:	ea6f 060e 	mvn.w	r6, lr
        temp = EXTI->RTSR1;
900082b6:	6812      	ldr	r2, [r2, #0]
        {
          temp |= iocurrent;
        }
        EXTI->RTSR1 = temp;
900082b8:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
900082bc:	bf0c      	ite	eq
900082be:	4032      	andeq	r2, r6
          temp |= iocurrent;
900082c0:	ea4e 0202 	orrne.w	r2, lr, r2

        temp = EXTI->FTSR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
900082c4:	f415 1f00 	tst.w	r5, #2097152	; 0x200000
        EXTI->RTSR1 = temp;
900082c8:	f8c8 2000 	str.w	r2, [r8]
        temp = EXTI->FTSR1;
900082cc:	f8d8 2004 	ldr.w	r2, [r8, #4]
        {
          temp |= iocurrent;
        }
        EXTI->FTSR1 = temp;
900082d0:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
900082d4:	bf0c      	ite	eq
900082d6:	4032      	andeq	r2, r6
          temp |= iocurrent;
900082d8:	ea4e 0202 	orrne.w	r2, lr, r2

        temp = EXTI_CurrentCPU->EMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
900082dc:	f415 3f00 	tst.w	r5, #131072	; 0x20000
        EXTI->FTSR1 = temp;
900082e0:	f8c8 2004 	str.w	r2, [r8, #4]
        temp = EXTI_CurrentCPU->EMR1;
900082e4:	f8d8 2084 	ldr.w	r2, [r8, #132]	; 0x84
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->EMR1 = temp;
900082e8:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
900082ec:	bf0c      	ite	eq
900082ee:	4032      	andeq	r2, r6
          temp |= iocurrent;
900082f0:	ea4e 0202 	orrne.w	r2, lr, r2

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
900082f4:	03ed      	lsls	r5, r5, #15
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->IMR1 = temp;
900082f6:	f04f 45b0 	mov.w	r5, #1476395008	; 0x58000000
        EXTI_CurrentCPU->EMR1 = temp;
900082fa:	f8c8 2084 	str.w	r2, [r8, #132]	; 0x84
        temp = EXTI_CurrentCPU->IMR1;
900082fe:	f8d8 2080 	ldr.w	r2, [r8, #128]	; 0x80
        temp &= ~(iocurrent);
90008302:	bf54      	ite	pl
90008304:	4032      	andpl	r2, r6
          temp |= iocurrent;
90008306:	ea4e 0202 	orrmi.w	r2, lr, r2
        EXTI_CurrentCPU->IMR1 = temp;
9000830a:	f8c5 2080 	str.w	r2, [r5, #128]	; 0x80
      }
    }

    position++;
9000830e:	3301      	adds	r3, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90008310:	f10c 0c02 	add.w	ip, ip, #2
90008314:	fa34 f203 	lsrs.w	r2, r4, r3
90008318:	f47f af5d 	bne.w	900081d6 <HAL_GPIO_Init+0x16>
  }
}
9000831c:	b003      	add	sp, #12
9000831e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008322:	f04f 0803 	mov.w	r8, #3
        temp = GPIOx->OSPEEDR;
90008326:	6886      	ldr	r6, [r0, #8]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008328:	fa08 f80c 	lsl.w	r8, r8, ip
9000832c:	ea26 0a08 	bic.w	sl, r6, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
90008330:	68ce      	ldr	r6, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008332:	ea6f 0808 	mvn.w	r8, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
90008336:	fa06 f60c 	lsl.w	r6, r6, ip
9000833a:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->OSPEEDR = temp;
9000833e:	6086      	str	r6, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90008340:	f3c5 1600 	ubfx	r6, r5, #4, #1
        temp = GPIOx->OTYPER;
90008344:	f8d0 a004 	ldr.w	sl, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90008348:	409e      	lsls	r6, r3
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
9000834a:	ea2a 0202 	bic.w	r2, sl, r2
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000834e:	4332      	orrs	r2, r6
        GPIOx->OTYPER = temp;
90008350:	6042      	str	r2, [r0, #4]
      temp = GPIOx->PUPDR;
90008352:	68c2      	ldr	r2, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90008354:	f1b9 0f02 	cmp.w	r9, #2
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008358:	688e      	ldr	r6, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
9000835a:	ea02 0208 	and.w	r2, r2, r8
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000835e:	fa06 f60c 	lsl.w	r6, r6, ip
90008362:	ea46 0602 	orr.w	r6, r6, r2
      GPIOx->PUPDR = temp;
90008366:	fa09 f20c 	lsl.w	r2, r9, ip
9000836a:	60c6      	str	r6, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
9000836c:	f47f af49 	bne.w	90008202 <HAL_GPIO_Init+0x42>
        temp = GPIOx->AFR[position >> 3U];
90008370:	ea4f 09d3 	mov.w	r9, r3, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90008374:	f003 0b07 	and.w	fp, r3, #7
90008378:	260f      	movs	r6, #15
9000837a:	eb00 0989 	add.w	r9, r0, r9, lsl #2
9000837e:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
        temp = GPIOx->AFR[position >> 3U];
90008382:	f8d9 a020 	ldr.w	sl, [r9, #32]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90008386:	fa06 f60b 	lsl.w	r6, r6, fp
9000838a:	ea2a 0a06 	bic.w	sl, sl, r6
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
9000838e:	690e      	ldr	r6, [r1, #16]
90008390:	fa06 f60b 	lsl.w	r6, r6, fp
90008394:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->AFR[position >> 3U] = temp;
90008398:	f8c9 6020 	str.w	r6, [r9, #32]
9000839c:	e731      	b.n	90008202 <HAL_GPIO_Init+0x42>
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000839e:	f04f 0803 	mov.w	r8, #3
900083a2:	fa08 f80c 	lsl.w	r8, r8, ip
900083a6:	ea6f 0808 	mvn.w	r8, r8
900083aa:	e7d2      	b.n	90008352 <HAL_GPIO_Init+0x192>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
900083ac:	2603      	movs	r6, #3
900083ae:	fa06 f609 	lsl.w	r6, r6, r9
900083b2:	4332      	orrs	r2, r6
900083b4:	e777      	b.n	900082a6 <HAL_GPIO_Init+0xe6>
900083b6:	2601      	movs	r6, #1
900083b8:	fa06 f609 	lsl.w	r6, r6, r9
900083bc:	4332      	orrs	r2, r6
900083be:	e772      	b.n	900082a6 <HAL_GPIO_Init+0xe6>
900083c0:	2602      	movs	r6, #2
900083c2:	fa06 f609 	lsl.w	r6, r6, r9
900083c6:	4332      	orrs	r2, r6
900083c8:	e76d      	b.n	900082a6 <HAL_GPIO_Init+0xe6>
900083ca:	2606      	movs	r6, #6
900083cc:	fa06 f609 	lsl.w	r6, r6, r9
900083d0:	4332      	orrs	r2, r6
900083d2:	e768      	b.n	900082a6 <HAL_GPIO_Init+0xe6>
900083d4:	2604      	movs	r6, #4
900083d6:	fa06 f609 	lsl.w	r6, r6, r9
900083da:	4332      	orrs	r2, r6
900083dc:	e763      	b.n	900082a6 <HAL_GPIO_Init+0xe6>
900083de:	2605      	movs	r6, #5
900083e0:	fa06 f609 	lsl.w	r6, r6, r9
900083e4:	4332      	orrs	r2, r6
900083e6:	e75e      	b.n	900082a6 <HAL_GPIO_Init+0xe6>
900083e8:	2607      	movs	r6, #7
900083ea:	fa06 f609 	lsl.w	r6, r6, r9
900083ee:	4332      	orrs	r2, r6
900083f0:	e759      	b.n	900082a6 <HAL_GPIO_Init+0xe6>
900083f2:	2608      	movs	r6, #8
900083f4:	fa06 f609 	lsl.w	r6, r6, r9
900083f8:	4332      	orrs	r2, r6
900083fa:	e754      	b.n	900082a6 <HAL_GPIO_Init+0xe6>
900083fc:	58024400 	.word	0x58024400
90008400:	58020000 	.word	0x58020000
90008404:	58020800 	.word	0x58020800
90008408:	58020c00 	.word	0x58020c00
9000840c:	58021000 	.word	0x58021000
90008410:	58021400 	.word	0x58021400
90008414:	58021800 	.word	0x58021800
90008418:	58021c00 	.word	0x58021c00
9000841c:	58022000 	.word	0x58022000
90008420:	58022400 	.word	0x58022400

90008424 <HAL_GPIO_DeInit>:
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0x00U)
90008424:	2900      	cmp	r1, #0
90008426:	f000 80a4 	beq.w	90008572 <HAL_GPIO_DeInit+0x14e>
  uint32_t position = 0x00U;
9000842a:	2300      	movs	r3, #0
{
9000842c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90008430:	f8df 9168 	ldr.w	r9, [pc, #360]	; 9000859c <HAL_GPIO_DeInit+0x178>
90008434:	b083      	sub	sp, #12
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90008436:	f8df 8168 	ldr.w	r8, [pc, #360]	; 900085a0 <HAL_GPIO_DeInit+0x17c>
9000843a:	f8df a168 	ldr.w	sl, [pc, #360]	; 900085a4 <HAL_GPIO_DeInit+0x180>
9000843e:	f8df b168 	ldr.w	fp, [pc, #360]	; 900085a8 <HAL_GPIO_DeInit+0x184>
    iocurrent = GPIO_Pin & (1UL << position) ;
90008442:	f04f 0e01 	mov.w	lr, #1
90008446:	fa0e f203 	lsl.w	r2, lr, r3
    if (iocurrent != 0x00U)
9000844a:	ea12 0c01 	ands.w	ip, r2, r1
9000844e:	d06b      	beq.n	90008528 <HAL_GPIO_DeInit+0x104>
      tmp = SYSCFG->EXTICR[position >> 2U];
90008450:	f023 0503 	bic.w	r5, r3, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90008454:	f003 0403 	and.w	r4, r3, #3
90008458:	260f      	movs	r6, #15
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000845a:	4540      	cmp	r0, r8
9000845c:	444d      	add	r5, r9
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000845e:	ea4f 0484 	mov.w	r4, r4, lsl #2
      tmp = SYSCFG->EXTICR[position >> 2U];
90008462:	68af      	ldr	r7, [r5, #8]
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90008464:	fa06 f604 	lsl.w	r6, r6, r4
90008468:	ea07 0706 	and.w	r7, r7, r6
9000846c:	9701      	str	r7, [sp, #4]
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000846e:	d01f      	beq.n	900084b0 <HAL_GPIO_DeInit+0x8c>
90008470:	4550      	cmp	r0, sl
90008472:	d01a      	beq.n	900084aa <HAL_GPIO_DeInit+0x86>
90008474:	4558      	cmp	r0, fp
90008476:	d05e      	beq.n	90008536 <HAL_GPIO_DeInit+0x112>
90008478:	4f43      	ldr	r7, [pc, #268]	; (90008588 <HAL_GPIO_DeInit+0x164>)
9000847a:	42b8      	cmp	r0, r7
9000847c:	d065      	beq.n	9000854a <HAL_GPIO_DeInit+0x126>
9000847e:	4f43      	ldr	r7, [pc, #268]	; (9000858c <HAL_GPIO_DeInit+0x168>)
90008480:	42b8      	cmp	r0, r7
90008482:	d067      	beq.n	90008554 <HAL_GPIO_DeInit+0x130>
90008484:	4f42      	ldr	r7, [pc, #264]	; (90008590 <HAL_GPIO_DeInit+0x16c>)
90008486:	42b8      	cmp	r0, r7
90008488:	d05a      	beq.n	90008540 <HAL_GPIO_DeInit+0x11c>
9000848a:	4f42      	ldr	r7, [pc, #264]	; (90008594 <HAL_GPIO_DeInit+0x170>)
9000848c:	42b8      	cmp	r0, r7
9000848e:	d06b      	beq.n	90008568 <HAL_GPIO_DeInit+0x144>
90008490:	4f41      	ldr	r7, [pc, #260]	; (90008598 <HAL_GPIO_DeInit+0x174>)
90008492:	42b8      	cmp	r0, r7
90008494:	d06e      	beq.n	90008574 <HAL_GPIO_DeInit+0x150>
90008496:	f8df e114 	ldr.w	lr, [pc, #276]	; 900085ac <HAL_GPIO_DeInit+0x188>
9000849a:	4570      	cmp	r0, lr
9000849c:	d05f      	beq.n	9000855e <HAL_GPIO_DeInit+0x13a>
9000849e:	f8df e110 	ldr.w	lr, [pc, #272]	; 900085b0 <HAL_GPIO_DeInit+0x18c>
900084a2:	4570      	cmp	r0, lr
900084a4:	d06b      	beq.n	9000857e <HAL_GPIO_DeInit+0x15a>
900084a6:	f04f 0e0a 	mov.w	lr, #10
900084aa:	fa0e f404 	lsl.w	r4, lr, r4
900084ae:	e000      	b.n	900084b2 <HAL_GPIO_DeInit+0x8e>
900084b0:	2400      	movs	r4, #0
900084b2:	9f01      	ldr	r7, [sp, #4]
900084b4:	42a7      	cmp	r7, r4
900084b6:	d119      	bne.n	900084ec <HAL_GPIO_DeInit+0xc8>
      {
        /* Clear EXTI line configuration for Current CPU */
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
900084b8:	f04f 44b0 	mov.w	r4, #1476395008	; 0x58000000
900084bc:	f8d4 7080 	ldr.w	r7, [r4, #128]	; 0x80
900084c0:	ea27 070c 	bic.w	r7, r7, ip
900084c4:	f8c4 7080 	str.w	r7, [r4, #128]	; 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
900084c8:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
900084cc:	ea27 070c 	bic.w	r7, r7, ip
900084d0:	f8c4 7084 	str.w	r7, [r4, #132]	; 0x84

        /* Clear Rising Falling edge configuration */
        EXTI->FTSR1 &= ~(iocurrent);
900084d4:	6867      	ldr	r7, [r4, #4]
900084d6:	ea27 070c 	bic.w	r7, r7, ip
900084da:	6067      	str	r7, [r4, #4]
        EXTI->RTSR1 &= ~(iocurrent);
900084dc:	6827      	ldr	r7, [r4, #0]
900084de:	ea27 070c 	bic.w	r7, r7, ip
900084e2:	6027      	str	r7, [r4, #0]

        tmp = 0x0FUL << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
900084e4:	68ac      	ldr	r4, [r5, #8]
900084e6:	ea24 0406 	bic.w	r4, r4, r6
900084ea:	60ac      	str	r4, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
900084ec:	005d      	lsls	r5, r3, #1
900084ee:	2403      	movs	r4, #3

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
900084f0:	f003 0607 	and.w	r6, r3, #7
900084f4:	270f      	movs	r7, #15
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
900084f6:	40ac      	lsls	r4, r5
900084f8:	6805      	ldr	r5, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
900084fa:	00b6      	lsls	r6, r6, #2
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
900084fc:	4325      	orrs	r5, r4
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
900084fe:	40b7      	lsls	r7, r6
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90008500:	6005      	str	r5, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90008502:	08dd      	lsrs	r5, r3, #3
90008504:	eb00 0585 	add.w	r5, r0, r5, lsl #2
90008508:	6a2e      	ldr	r6, [r5, #32]
9000850a:	ea26 0607 	bic.w	r6, r6, r7
9000850e:	622e      	str	r6, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90008510:	68c5      	ldr	r5, [r0, #12]
90008512:	ea25 0504 	bic.w	r5, r5, r4
90008516:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
90008518:	6845      	ldr	r5, [r0, #4]
9000851a:	ea25 0202 	bic.w	r2, r5, r2
9000851e:	6042      	str	r2, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008520:	6882      	ldr	r2, [r0, #8]
90008522:	ea22 0204 	bic.w	r2, r2, r4
90008526:	6082      	str	r2, [r0, #8]
    }

    position++;
90008528:	3301      	adds	r3, #1
  while ((GPIO_Pin >> position) != 0x00U)
9000852a:	fa31 f203 	lsrs.w	r2, r1, r3
9000852e:	d188      	bne.n	90008442 <HAL_GPIO_DeInit+0x1e>
  }
}
90008530:	b003      	add	sp, #12
90008532:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90008536:	f04f 0e02 	mov.w	lr, #2
9000853a:	fa0e f404 	lsl.w	r4, lr, r4
9000853e:	e7b8      	b.n	900084b2 <HAL_GPIO_DeInit+0x8e>
90008540:	f04f 0e05 	mov.w	lr, #5
90008544:	fa0e f404 	lsl.w	r4, lr, r4
90008548:	e7b3      	b.n	900084b2 <HAL_GPIO_DeInit+0x8e>
9000854a:	f04f 0e03 	mov.w	lr, #3
9000854e:	fa0e f404 	lsl.w	r4, lr, r4
90008552:	e7ae      	b.n	900084b2 <HAL_GPIO_DeInit+0x8e>
90008554:	f04f 0e04 	mov.w	lr, #4
90008558:	fa0e f404 	lsl.w	r4, lr, r4
9000855c:	e7a9      	b.n	900084b2 <HAL_GPIO_DeInit+0x8e>
9000855e:	f04f 0e08 	mov.w	lr, #8
90008562:	fa0e f404 	lsl.w	r4, lr, r4
90008566:	e7a4      	b.n	900084b2 <HAL_GPIO_DeInit+0x8e>
90008568:	f04f 0e06 	mov.w	lr, #6
9000856c:	fa0e f404 	lsl.w	r4, lr, r4
90008570:	e79f      	b.n	900084b2 <HAL_GPIO_DeInit+0x8e>
90008572:	4770      	bx	lr
90008574:	f04f 0e07 	mov.w	lr, #7
90008578:	fa0e f404 	lsl.w	r4, lr, r4
9000857c:	e799      	b.n	900084b2 <HAL_GPIO_DeInit+0x8e>
9000857e:	f04f 0e09 	mov.w	lr, #9
90008582:	fa0e f404 	lsl.w	r4, lr, r4
90008586:	e794      	b.n	900084b2 <HAL_GPIO_DeInit+0x8e>
90008588:	58020c00 	.word	0x58020c00
9000858c:	58021000 	.word	0x58021000
90008590:	58021400 	.word	0x58021400
90008594:	58021800 	.word	0x58021800
90008598:	58021c00 	.word	0x58021c00
9000859c:	58000400 	.word	0x58000400
900085a0:	58020000 	.word	0x58020000
900085a4:	58020400 	.word	0x58020400
900085a8:	58020800 	.word	0x58020800
900085ac:	58022000 	.word	0x58022000
900085b0:	58022400 	.word	0x58022400

900085b4 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
900085b4:	6903      	ldr	r3, [r0, #16]
900085b6:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
900085b8:	bf14      	ite	ne
900085ba:	2001      	movne	r0, #1
900085bc:	2000      	moveq	r0, #0
900085be:	4770      	bx	lr

900085c0 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
900085c0:	b902      	cbnz	r2, 900085c4 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
900085c2:	0409      	lsls	r1, r1, #16
900085c4:	6181      	str	r1, [r0, #24]
  }
}
900085c6:	4770      	bx	lr

900085c8 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
900085c8:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
900085ca:	ea01 0203 	and.w	r2, r1, r3
900085ce:	ea21 0103 	bic.w	r1, r1, r3
900085d2:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
900085d6:	6181      	str	r1, [r0, #24]
}
900085d8:	4770      	bx	lr
900085da:	bf00      	nop

900085dc <I2C_WaitOnTXISFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
900085dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
900085e0:	6803      	ldr	r3, [r0, #0]
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
          {
            /* Check for the Timeout */
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
            {
              error_code |= HAL_I2C_ERROR_TIMEOUT;
900085e2:	f04f 0820 	mov.w	r8, #32
{
900085e6:	4605      	mov	r5, r0
900085e8:	460e      	mov	r6, r1
900085ea:	4617      	mov	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
900085ec:	6998      	ldr	r0, [r3, #24]
900085ee:	f010 0902 	ands.w	r9, r0, #2
900085f2:	f040 809e 	bne.w	90008732 <I2C_WaitOnTXISFlagUntilTimeout+0x156>
  uint32_t itflag   = hi2c->Instance->ISR;
900085f6:	699c      	ldr	r4, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
900085f8:	f014 0410 	ands.w	r4, r4, #16
900085fc:	d068      	beq.n	900086d0 <I2C_WaitOnTXISFlagUntilTimeout+0xf4>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900085fe:	2210      	movs	r2, #16
  uint32_t tickstart = Tickstart;
90008600:	463c      	mov	r4, r7
  HAL_StatusTypeDef status = HAL_OK;
90008602:	46ca      	mov	sl, r9
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008604:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008606:	1c71      	adds	r1, r6, #1
90008608:	699a      	ldr	r2, [r3, #24]
9000860a:	d163      	bne.n	900086d4 <I2C_WaitOnTXISFlagUntilTimeout+0xf8>
9000860c:	0690      	lsls	r0, r2, #26
9000860e:	f100 8093 	bmi.w	90008738 <I2C_WaitOnTXISFlagUntilTimeout+0x15c>
90008612:	f1ba 0f00 	cmp.w	sl, #0
90008616:	d104      	bne.n	90008622 <I2C_WaitOnTXISFlagUntilTimeout+0x46>
90008618:	699c      	ldr	r4, [r3, #24]
9000861a:	06a1      	lsls	r1, r4, #26
9000861c:	d5fc      	bpl.n	90008618 <I2C_WaitOnTXISFlagUntilTimeout+0x3c>

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000861e:	f8c3 801c 	str.w	r8, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
90008622:	f049 0404 	orr.w	r4, r9, #4

    status = HAL_ERROR;
90008626:	2101      	movs	r1, #1
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
90008628:	699a      	ldr	r2, [r3, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
9000862a:	05d0      	lsls	r0, r2, #23
9000862c:	d530      	bpl.n	90008690 <I2C_WaitOnTXISFlagUntilTimeout+0xb4>
  {
    error_code |= HAL_I2C_ERROR_BERR;

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000862e:	f44f 7180 	mov.w	r1, #256	; 0x100

    status = HAL_ERROR;
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008632:	0556      	lsls	r6, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90008634:	f044 0401 	orr.w	r4, r4, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008638:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000863a:	d504      	bpl.n	90008646 <I2C_WaitOnTXISFlagUntilTimeout+0x6a>
  {
    error_code |= HAL_I2C_ERROR_OVR;

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000863c:	f44f 6180 	mov.w	r1, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90008640:	f044 0408 	orr.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008644:	61d9      	str	r1, [r3, #28]

    status = HAL_ERROR;
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008646:	0591      	lsls	r1, r2, #22
90008648:	d504      	bpl.n	90008654 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
  {
    error_code |= HAL_I2C_ERROR_ARLO;

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000864a:	f44f 7200 	mov.w	r2, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
9000864e:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008652:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90008654:	699a      	ldr	r2, [r3, #24]
90008656:	0790      	lsls	r0, r2, #30
90008658:	d501      	bpl.n	9000865e <I2C_WaitOnTXISFlagUntilTimeout+0x82>
    hi2c->Instance->TXDR = 0x00U;
9000865a:	2200      	movs	r2, #0
9000865c:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
9000865e:	699a      	ldr	r2, [r3, #24]
90008660:	07d1      	lsls	r1, r2, #31
90008662:	d403      	bmi.n	9000866c <I2C_WaitOnTXISFlagUntilTimeout+0x90>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90008664:	699a      	ldr	r2, [r3, #24]
90008666:	f042 0201 	orr.w	r2, r2, #1
9000866a:	619a      	str	r2, [r3, #24]
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
9000866c:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= error_code;
    hi2c->State = HAL_I2C_STATE_READY;
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000866e:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90008670:	4834      	ldr	r0, [pc, #208]	; (90008744 <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
    hi2c->State = HAL_I2C_STATE_READY;
90008672:	2620      	movs	r6, #32
    I2C_RESET_CR2(hi2c);
90008674:	4002      	ands	r2, r0
      return HAL_ERROR;
90008676:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
90008678:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
9000867a:	6c6b      	ldr	r3, [r5, #68]	; 0x44

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
9000867c:	f885 1040 	strb.w	r1, [r5, #64]	; 0x40
    hi2c->ErrorCode |= error_code;
90008680:	4323      	orrs	r3, r4
90008682:	646b      	str	r3, [r5, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90008684:	f885 6041 	strb.w	r6, [r5, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008688:	f885 1042 	strb.w	r1, [r5, #66]	; 0x42
}
9000868c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008690:	0550      	lsls	r0, r2, #21
90008692:	d4d3      	bmi.n	9000863c <I2C_WaitOnTXISFlagUntilTimeout+0x60>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008694:	0592      	lsls	r2, r2, #22
90008696:	d4d8      	bmi.n	9000864a <I2C_WaitOnTXISFlagUntilTimeout+0x6e>
  if (status != HAL_OK)
90008698:	2900      	cmp	r1, #0
9000869a:	d1db      	bne.n	90008654 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
    if (Timeout != HAL_MAX_DELAY)
9000869c:	1c72      	adds	r2, r6, #1
9000869e:	d0a5      	beq.n	900085ec <I2C_WaitOnTXISFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900086a0:	f7ff fb04 	bl	90007cac <HAL_GetTick>
900086a4:	1bc0      	subs	r0, r0, r7
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
900086a6:	682b      	ldr	r3, [r5, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900086a8:	42b0      	cmp	r0, r6
900086aa:	d801      	bhi.n	900086b0 <I2C_WaitOnTXISFlagUntilTimeout+0xd4>
900086ac:	2e00      	cmp	r6, #0
900086ae:	d19d      	bne.n	900085ec <I2C_WaitOnTXISFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
900086b0:	699a      	ldr	r2, [r3, #24]
900086b2:	f012 0202 	ands.w	r2, r2, #2
900086b6:	d199      	bne.n	900085ec <I2C_WaitOnTXISFlagUntilTimeout+0x10>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900086b8:	6c6b      	ldr	r3, [r5, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900086ba:	2120      	movs	r1, #32
          __HAL_UNLOCK(hi2c);
900086bc:	2001      	movs	r0, #1
900086be:	f885 2040 	strb.w	r2, [r5, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900086c2:	430b      	orrs	r3, r1
900086c4:	646b      	str	r3, [r5, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900086c6:	f885 1041 	strb.w	r1, [r5, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
900086ca:	f885 2042 	strb.w	r2, [r5, #66]	; 0x42
          return HAL_ERROR;
900086ce:	e7dd      	b.n	9000868c <I2C_WaitOnTXISFlagUntilTimeout+0xb0>
  HAL_StatusTypeDef status = HAL_OK;
900086d0:	4621      	mov	r1, r4
900086d2:	e7a9      	b.n	90008628 <I2C_WaitOnTXISFlagUntilTimeout+0x4c>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900086d4:	0692      	lsls	r2, r2, #26
900086d6:	d42f      	bmi.n	90008738 <I2C_WaitOnTXISFlagUntilTimeout+0x15c>
900086d8:	f1ba 0f00 	cmp.w	sl, #0
900086dc:	d1a1      	bne.n	90008622 <I2C_WaitOnTXISFlagUntilTimeout+0x46>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
900086de:	f7ff fae5 	bl	90007cac <HAL_GetTick>
900086e2:	1b00      	subs	r0, r0, r4
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
900086e4:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
900086e6:	4286      	cmp	r6, r0
900086e8:	d301      	bcc.n	900086ee <I2C_WaitOnTXISFlagUntilTimeout+0x112>
900086ea:	2e00      	cmp	r6, #0
900086ec:	d18b      	bne.n	90008606 <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
900086ee:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
900086f0:	f895 2042 	ldrb.w	r2, [r5, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
900086f4:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
900086f6:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
900086f8:	0409      	lsls	r1, r1, #16
900086fa:	d50b      	bpl.n	90008714 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
              (tmp1 != I2C_CR2_STOP) && \
900086fc:	0441      	lsls	r1, r0, #17
900086fe:	d409      	bmi.n	90008714 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
90008700:	2a20      	cmp	r2, #32
90008702:	d007      	beq.n	90008714 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90008704:	685a      	ldr	r2, [r3, #4]
90008706:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
9000870a:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
9000870c:	f7ff face 	bl	90007cac <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008710:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
90008712:	4604      	mov	r4, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008714:	699a      	ldr	r2, [r3, #24]
90008716:	0690      	lsls	r0, r2, #26
90008718:	f53f af75 	bmi.w	90008606 <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000871c:	f7ff fac6 	bl	90007cac <HAL_GetTick>
90008720:	1b00      	subs	r0, r0, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008722:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008724:	2819      	cmp	r0, #25
90008726:	d9f5      	bls.n	90008714 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90008728:	f04f 0920 	mov.w	r9, #32
              status = HAL_ERROR;
9000872c:	f04f 0a01 	mov.w	sl, #1
90008730:	e769      	b.n	90008606 <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
  return HAL_OK;
90008732:	2000      	movs	r0, #0
}
90008734:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if (status == HAL_OK)
90008738:	f1ba 0f00 	cmp.w	sl, #0
9000873c:	f43f af6f 	beq.w	9000861e <I2C_WaitOnTXISFlagUntilTimeout+0x42>
90008740:	e76f      	b.n	90008622 <I2C_WaitOnTXISFlagUntilTimeout+0x46>
90008742:	bf00      	nop
90008744:	fe00e800 	.word	0xfe00e800

90008748 <I2C_WaitOnSTOPFlagUntilTimeout>:
{
90008748:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000874c:	4690      	mov	r8, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000874e:	6802      	ldr	r2, [r0, #0]
{
90008750:	460f      	mov	r7, r1
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008752:	6991      	ldr	r1, [r2, #24]
90008754:	068c      	lsls	r4, r1, #26
90008756:	d469      	bmi.n	9000882c <I2C_WaitOnSTOPFlagUntilTimeout+0xe4>
90008758:	4606      	mov	r6, r0
9000875a:	4613      	mov	r3, r2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000875c:	f04f 0910 	mov.w	r9, #16
  uint32_t itflag   = hi2c->Instance->ISR;
90008760:	6994      	ldr	r4, [r2, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90008762:	f014 0410 	ands.w	r4, r4, #16
90008766:	d064      	beq.n	90008832 <I2C_WaitOnSTOPFlagUntilTimeout+0xea>
  uint32_t error_code = 0;
90008768:	2500      	movs	r5, #0
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000876a:	4613      	mov	r3, r2
  uint32_t tickstart = Tickstart;
9000876c:	4644      	mov	r4, r8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000876e:	f8c2 901c 	str.w	r9, [r2, #28]
  HAL_StatusTypeDef status = HAL_OK;
90008772:	46aa      	mov	sl, r5
90008774:	1c79      	adds	r1, r7, #1
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008776:	699a      	ldr	r2, [r3, #24]
90008778:	d15d      	bne.n	90008836 <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
9000877a:	0690      	lsls	r0, r2, #26
9000877c:	f100 8083 	bmi.w	90008886 <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
90008780:	f1ba 0f00 	cmp.w	sl, #0
90008784:	d104      	bne.n	90008790 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
90008786:	699c      	ldr	r4, [r3, #24]
90008788:	06a1      	lsls	r1, r4, #26
9000878a:	d5fc      	bpl.n	90008786 <I2C_WaitOnSTOPFlagUntilTimeout+0x3e>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000878c:	2220      	movs	r2, #32
9000878e:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
90008790:	f045 0404 	orr.w	r4, r5, #4
    status = HAL_ERROR;
90008794:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
90008796:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90008798:	05d0      	lsls	r0, r2, #23
9000879a:	d530      	bpl.n	900087fe <I2C_WaitOnSTOPFlagUntilTimeout+0xb6>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000879c:	f44f 7180 	mov.w	r1, #256	; 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900087a0:	0555      	lsls	r5, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
900087a2:	f044 0401 	orr.w	r4, r4, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
900087a6:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900087a8:	d504      	bpl.n	900087b4 <I2C_WaitOnSTOPFlagUntilTimeout+0x6c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
900087aa:	f44f 6180 	mov.w	r1, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
900087ae:	f044 0408 	orr.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
900087b2:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
900087b4:	0591      	lsls	r1, r2, #22
900087b6:	d504      	bpl.n	900087c2 <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
900087b8:	f44f 7200 	mov.w	r2, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
900087bc:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
900087c0:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
900087c2:	699a      	ldr	r2, [r3, #24]
900087c4:	0795      	lsls	r5, r2, #30
900087c6:	d501      	bpl.n	900087cc <I2C_WaitOnSTOPFlagUntilTimeout+0x84>
    hi2c->Instance->TXDR = 0x00U;
900087c8:	2200      	movs	r2, #0
900087ca:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
900087cc:	699a      	ldr	r2, [r3, #24]
900087ce:	07d0      	lsls	r0, r2, #31
900087d0:	d403      	bmi.n	900087da <I2C_WaitOnSTOPFlagUntilTimeout+0x92>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
900087d2:	699a      	ldr	r2, [r3, #24]
900087d4:	f042 0201 	orr.w	r2, r2, #1
900087d8:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
900087da:	685a      	ldr	r2, [r3, #4]
    hi2c->Mode = HAL_I2C_MODE_NONE;
900087dc:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
900087de:	4837      	ldr	r0, [pc, #220]	; (900088bc <I2C_WaitOnSTOPFlagUntilTimeout+0x174>)
    hi2c->State = HAL_I2C_STATE_READY;
900087e0:	2520      	movs	r5, #32
    I2C_RESET_CR2(hi2c);
900087e2:	4002      	ands	r2, r0
      return HAL_ERROR;
900087e4:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
900087e6:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
900087e8:	6c73      	ldr	r3, [r6, #68]	; 0x44
    __HAL_UNLOCK(hi2c);
900087ea:	f886 1040 	strb.w	r1, [r6, #64]	; 0x40
    hi2c->ErrorCode |= error_code;
900087ee:	4323      	orrs	r3, r4
900087f0:	6473      	str	r3, [r6, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
900087f2:	f886 5041 	strb.w	r5, [r6, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
900087f6:	f886 1042 	strb.w	r1, [r6, #66]	; 0x42
}
900087fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900087fe:	0550      	lsls	r0, r2, #21
90008800:	d4d3      	bmi.n	900087aa <I2C_WaitOnSTOPFlagUntilTimeout+0x62>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008802:	0592      	lsls	r2, r2, #22
90008804:	d4d8      	bmi.n	900087b8 <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
  if (status != HAL_OK)
90008806:	2900      	cmp	r1, #0
90008808:	d1db      	bne.n	900087c2 <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000880a:	f7ff fa4f 	bl	90007cac <HAL_GetTick>
9000880e:	eba0 0008 	sub.w	r0, r0, r8
90008812:	42b8      	cmp	r0, r7
90008814:	d801      	bhi.n	9000881a <I2C_WaitOnSTOPFlagUntilTimeout+0xd2>
90008816:	2f00      	cmp	r7, #0
90008818:	d132      	bne.n	90008880 <I2C_WaitOnSTOPFlagUntilTimeout+0x138>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
9000881a:	6832      	ldr	r2, [r6, #0]
9000881c:	6991      	ldr	r1, [r2, #24]
9000881e:	4613      	mov	r3, r2
90008820:	f011 0120 	ands.w	r1, r1, #32
90008824:	d034      	beq.n	90008890 <I2C_WaitOnSTOPFlagUntilTimeout+0x148>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008826:	6991      	ldr	r1, [r2, #24]
90008828:	0689      	lsls	r1, r1, #26
9000882a:	d599      	bpl.n	90008760 <I2C_WaitOnSTOPFlagUntilTimeout+0x18>
  return HAL_OK;
9000882c:	2000      	movs	r0, #0
}
9000882e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  HAL_StatusTypeDef status = HAL_OK;
90008832:	4621      	mov	r1, r4
90008834:	e7af      	b.n	90008796 <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008836:	0692      	lsls	r2, r2, #26
90008838:	d425      	bmi.n	90008886 <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
9000883a:	f1ba 0f00 	cmp.w	sl, #0
9000883e:	d1a7      	bne.n	90008790 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008840:	f7ff fa34 	bl	90007cac <HAL_GetTick>
90008844:	1b00      	subs	r0, r0, r4
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008846:	6833      	ldr	r3, [r6, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008848:	4287      	cmp	r7, r0
9000884a:	d301      	bcc.n	90008850 <I2C_WaitOnSTOPFlagUntilTimeout+0x108>
9000884c:	2f00      	cmp	r7, #0
9000884e:	d191      	bne.n	90008774 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008850:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90008852:	f896 2042 	ldrb.w	r2, [r6, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008856:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90008858:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000885a:	0409      	lsls	r1, r1, #16
9000885c:	d503      	bpl.n	90008866 <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
              (tmp1 != I2C_CR2_STOP) && \
9000885e:	0441      	lsls	r1, r0, #17
90008860:	d401      	bmi.n	90008866 <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
90008862:	2a20      	cmp	r2, #32
90008864:	d121      	bne.n	900088aa <I2C_WaitOnSTOPFlagUntilTimeout+0x162>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008866:	699a      	ldr	r2, [r3, #24]
90008868:	0690      	lsls	r0, r2, #26
9000886a:	d483      	bmi.n	90008774 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000886c:	f7ff fa1e 	bl	90007cac <HAL_GetTick>
90008870:	1b00      	subs	r0, r0, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008872:	6833      	ldr	r3, [r6, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008874:	2819      	cmp	r0, #25
90008876:	d9f6      	bls.n	90008866 <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90008878:	2520      	movs	r5, #32
              status = HAL_ERROR;
9000887a:	f04f 0a01 	mov.w	sl, #1
9000887e:	e779      	b.n	90008774 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90008880:	6833      	ldr	r3, [r6, #0]
90008882:	461a      	mov	r2, r3
90008884:	e7cf      	b.n	90008826 <I2C_WaitOnSTOPFlagUntilTimeout+0xde>
    if (status == HAL_OK)
90008886:	f1ba 0f00 	cmp.w	sl, #0
9000888a:	f43f af7f 	beq.w	9000878c <I2C_WaitOnSTOPFlagUntilTimeout+0x44>
9000888e:	e77f      	b.n	90008790 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008890:	6c73      	ldr	r3, [r6, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008892:	2220      	movs	r2, #32
          __HAL_UNLOCK(hi2c);
90008894:	2001      	movs	r0, #1
90008896:	f886 1040 	strb.w	r1, [r6, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000889a:	4313      	orrs	r3, r2
9000889c:	6473      	str	r3, [r6, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000889e:	f886 2041 	strb.w	r2, [r6, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
900088a2:	f886 1042 	strb.w	r1, [r6, #66]	; 0x42
}
900088a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
900088aa:	685a      	ldr	r2, [r3, #4]
900088ac:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
900088b0:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
900088b2:	f7ff f9fb 	bl	90007cac <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900088b6:	6833      	ldr	r3, [r6, #0]
            tickstart = HAL_GetTick();
900088b8:	4604      	mov	r4, r0
900088ba:	e7d4      	b.n	90008866 <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
900088bc:	fe00e800 	.word	0xfe00e800

900088c0 <HAL_I2C_MspInit>:
}
900088c0:	4770      	bx	lr
900088c2:	bf00      	nop

900088c4 <HAL_I2C_Init>:
  if (hi2c == NULL)
900088c4:	2800      	cmp	r0, #0
900088c6:	d04e      	beq.n	90008966 <HAL_I2C_Init+0xa2>
{
900088c8:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
900088ca:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
900088ce:	4604      	mov	r4, r0
900088d0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
900088d4:	2b00      	cmp	r3, #0
900088d6:	d041      	beq.n	9000895c <HAL_I2C_Init+0x98>
  __HAL_I2C_DISABLE(hi2c);
900088d8:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
900088da:	2124      	movs	r1, #36	; 0x24
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
900088dc:	6862      	ldr	r2, [r4, #4]
  hi2c->State = HAL_I2C_STATE_BUSY;
900088de:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
900088e2:	6819      	ldr	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
900088e4:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
900088e8:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
900088ea:	f021 0101 	bic.w	r1, r1, #1
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
900088ee:	2801      	cmp	r0, #1
  __HAL_I2C_DISABLE(hi2c);
900088f0:	6019      	str	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
900088f2:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
900088f4:	689a      	ldr	r2, [r3, #8]
900088f6:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
900088fa:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
900088fc:	68a2      	ldr	r2, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
900088fe:	d029      	beq.n	90008954 <HAL_I2C_Init+0x90>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90008900:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90008904:	2802      	cmp	r0, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90008906:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90008908:	d102      	bne.n	90008910 <HAL_I2C_Init+0x4c>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
9000890a:	f44f 6200 	mov.w	r2, #2048	; 0x800
9000890e:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90008910:	6858      	ldr	r0, [r3, #4]
  hi2c->State = HAL_I2C_STATE_READY;
90008912:	f04f 0c20 	mov.w	ip, #32
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90008916:	4915      	ldr	r1, [pc, #84]	; (9000896c <HAL_I2C_Init+0xa8>)
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90008918:	6922      	ldr	r2, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
9000891a:	4301      	orrs	r1, r0
9000891c:	6059      	str	r1, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
9000891e:	68d9      	ldr	r1, [r3, #12]
90008920:	f421 4100 	bic.w	r1, r1, #32768	; 0x8000
90008924:	60d9      	str	r1, [r3, #12]
                          (hi2c->Init.OwnAddress2Masks << 8));
90008926:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
9000892a:	4302      	orrs	r2, r0
9000892c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90008930:	e9d4 1007 	ldrd	r1, r0, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90008934:	60da      	str	r2, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008936:	2200      	movs	r2, #0
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90008938:	4301      	orrs	r1, r0
  return HAL_OK;
9000893a:	4610      	mov	r0, r2
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000893c:	6019      	str	r1, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
9000893e:	6819      	ldr	r1, [r3, #0]
90008940:	f041 0101 	orr.w	r1, r1, #1
90008944:	6019      	str	r1, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008946:	6462      	str	r2, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
90008948:	f884 c041 	strb.w	ip, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
9000894c:	6322      	str	r2, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
9000894e:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
90008952:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
90008954:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
90008958:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
9000895a:	e7d9      	b.n	90008910 <HAL_I2C_Init+0x4c>
    hi2c->Lock = HAL_UNLOCKED;
9000895c:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
    HAL_I2C_MspInit(hi2c);
90008960:	f7ff ffae 	bl	900088c0 <HAL_I2C_MspInit>
90008964:	e7b8      	b.n	900088d8 <HAL_I2C_Init+0x14>
    return HAL_ERROR;
90008966:	2001      	movs	r0, #1
}
90008968:	4770      	bx	lr
9000896a:	bf00      	nop
9000896c:	02008000 	.word	0x02008000

90008970 <HAL_I2C_MspDeInit>:
90008970:	4770      	bx	lr
90008972:	bf00      	nop

90008974 <HAL_I2C_DeInit>:
  if (hi2c == NULL)
90008974:	b1b0      	cbz	r0, 900089a4 <HAL_I2C_DeInit+0x30>
  __HAL_I2C_DISABLE(hi2c);
90008976:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90008978:	2324      	movs	r3, #36	; 0x24
{
9000897a:	b510      	push	{r4, lr}
  hi2c->State = HAL_I2C_STATE_BUSY;
9000897c:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
90008980:	4604      	mov	r4, r0
  __HAL_I2C_DISABLE(hi2c);
90008982:	6813      	ldr	r3, [r2, #0]
90008984:	f023 0301 	bic.w	r3, r3, #1
90008988:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
9000898a:	f7ff fff1 	bl	90008970 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000898e:	2300      	movs	r3, #0
90008990:	6463      	str	r3, [r4, #68]	; 0x44
  return HAL_OK;
90008992:	4618      	mov	r0, r3
  hi2c->State = HAL_I2C_STATE_RESET;
90008994:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hi2c);
90008998:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
  hi2c->PreviousState = I2C_STATE_NONE;
9000899c:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
9000899e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
}
900089a2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
900089a4:	2001      	movs	r0, #1
}
900089a6:	4770      	bx	lr

900089a8 <HAL_I2C_Mem_Write>:
{
900089a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900089ac:	4698      	mov	r8, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
900089ae:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
900089b2:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
  if (hi2c->State == HAL_I2C_STATE_READY)
900089b6:	2b20      	cmp	r3, #32
{
900089b8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  if (hi2c->State == HAL_I2C_STATE_READY)
900089ba:	d132      	bne.n	90008a22 <HAL_I2C_Mem_Write+0x7a>
    if ((pData == NULL) || (Size == 0U))
900089bc:	9b08      	ldr	r3, [sp, #32]
900089be:	4604      	mov	r4, r0
900089c0:	b34b      	cbz	r3, 90008a16 <HAL_I2C_Mem_Write+0x6e>
900089c2:	f1ba 0f00 	cmp.w	sl, #0
900089c6:	d026      	beq.n	90008a16 <HAL_I2C_Mem_Write+0x6e>
    __HAL_LOCK(hi2c);
900089c8:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
900089cc:	2b01      	cmp	r3, #1
900089ce:	d028      	beq.n	90008a22 <HAL_I2C_Mem_Write+0x7a>
900089d0:	2301      	movs	r3, #1
900089d2:	460e      	mov	r6, r1
900089d4:	4691      	mov	r9, r2
900089d6:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
900089da:	f7ff f967 	bl	90007cac <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900089de:	6823      	ldr	r3, [r4, #0]
    tickstart = HAL_GetTick();
900089e0:	4605      	mov	r5, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900089e2:	699a      	ldr	r2, [r3, #24]
900089e4:	0411      	lsls	r1, r2, #16
900089e6:	d51f      	bpl.n	90008a28 <HAL_I2C_Mem_Write+0x80>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900089e8:	f7ff f960 	bl	90007cac <HAL_GetTick>
900089ec:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
900089ee:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900089f0:	2819      	cmp	r0, #25
900089f2:	d9f6      	bls.n	900089e2 <HAL_I2C_Mem_Write+0x3a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
900089f4:	699a      	ldr	r2, [r3, #24]
900089f6:	0412      	lsls	r2, r2, #16
900089f8:	d5f3      	bpl.n	900089e2 <HAL_I2C_Mem_Write+0x3a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900089fa:	6c63      	ldr	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900089fc:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
900089fe:	2200      	movs	r2, #0
      return HAL_ERROR;
90008a00:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008a02:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
90008a04:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008a08:	6463      	str	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008a0a:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008a0e:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
90008a12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90008a16:	f44f 7300 	mov.w	r3, #512	; 0x200
      return  HAL_ERROR;
90008a1a:	2001      	movs	r0, #1
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90008a1c:	6463      	str	r3, [r4, #68]	; 0x44
}
90008a1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    return HAL_BUSY;
90008a22:	2002      	movs	r0, #2
}
90008a24:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
90008a28:	9a08      	ldr	r2, [sp, #32]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
90008a2a:	2121      	movs	r1, #33	; 0x21
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
90008a2c:	f3c6 0609 	ubfx	r6, r6, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008a30:	4620      	mov	r0, r4
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
90008a32:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008a36:	2140      	movs	r1, #64	; 0x40
    hi2c->pBuffPtr  = pData;
90008a38:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008a3a:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008a3c:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
    hi2c->XferISR   = NULL;
90008a40:	6362      	str	r2, [r4, #52]	; 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008a42:	6462      	str	r2, [r4, #68]	; 0x44
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
90008a44:	496d      	ldr	r1, [pc, #436]	; (90008bfc <HAL_I2C_Mem_Write+0x254>)
    hi2c->XferCount = Size;
90008a46:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008a4a:	685a      	ldr	r2, [r3, #4]
90008a4c:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008a4e:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
90008a52:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
90008a56:	496a      	ldr	r1, [pc, #424]	; (90008c00 <HAL_I2C_Mem_Write+0x258>)
90008a58:	4332      	orrs	r2, r6
90008a5a:	4311      	orrs	r1, r2
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008a5c:	462a      	mov	r2, r5
  MODIFY_REG(hi2c->Instance->CR2, \
90008a5e:	6059      	str	r1, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008a60:	4639      	mov	r1, r7
90008a62:	f7ff fdbb 	bl	900085dc <I2C_WaitOnTXISFlagUntilTimeout>
90008a66:	2800      	cmp	r0, #0
90008a68:	d175      	bne.n	90008b56 <HAL_I2C_Mem_Write+0x1ae>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90008a6a:	f1b8 0f01 	cmp.w	r8, #1
90008a6e:	d00a      	beq.n	90008a86 <HAL_I2C_Mem_Write+0xde>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90008a70:	ea4f 2219 	mov.w	r2, r9, lsr #8
90008a74:	6823      	ldr	r3, [r4, #0]
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008a76:	4639      	mov	r1, r7
90008a78:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90008a7a:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008a7c:	462a      	mov	r2, r5
90008a7e:	f7ff fdad 	bl	900085dc <I2C_WaitOnTXISFlagUntilTimeout>
90008a82:	2800      	cmp	r0, #0
90008a84:	d167      	bne.n	90008b56 <HAL_I2C_Mem_Write+0x1ae>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90008a86:	fa5f f389 	uxtb.w	r3, r9
90008a8a:	6822      	ldr	r2, [r4, #0]
90008a8c:	6293      	str	r3, [r2, #40]	; 0x28
90008a8e:	1c78      	adds	r0, r7, #1
90008a90:	d14a      	bne.n	90008b28 <HAL_I2C_Mem_Write+0x180>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008a92:	6993      	ldr	r3, [r2, #24]
90008a94:	0619      	lsls	r1, r3, #24
90008a96:	d5fc      	bpl.n	90008a92 <HAL_I2C_Mem_Write+0xea>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008a98:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
90008a9a:	b29b      	uxth	r3, r3
90008a9c:	2bff      	cmp	r3, #255	; 0xff
90008a9e:	f240 808a 	bls.w	90008bb6 <HAL_I2C_Mem_Write+0x20e>
  MODIFY_REG(hi2c->Instance->CR2, \
90008aa2:	6853      	ldr	r3, [r2, #4]
90008aa4:	4957      	ldr	r1, [pc, #348]	; (90008c04 <HAL_I2C_Mem_Write+0x25c>)
90008aa6:	400b      	ands	r3, r1
90008aa8:	4957      	ldr	r1, [pc, #348]	; (90008c08 <HAL_I2C_Mem_Write+0x260>)
90008aaa:	4333      	orrs	r3, r6
90008aac:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
90008aae:	23ff      	movs	r3, #255	; 0xff
90008ab0:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008ab2:	6051      	str	r1, [r2, #4]
90008ab4:	f8df 814c 	ldr.w	r8, [pc, #332]	; 90008c04 <HAL_I2C_Mem_Write+0x25c>
          hi2c->XferSize = MAX_NBYTE_SIZE;
90008ab8:	f04f 0aff 	mov.w	sl, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2, \
90008abc:	f8df 9148 	ldr.w	r9, [pc, #328]	; 90008c08 <HAL_I2C_Mem_Write+0x260>
90008ac0:	e004      	b.n	90008acc <HAL_I2C_Mem_Write+0x124>
    } while (hi2c->XferCount > 0U);
90008ac2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
90008ac4:	b29b      	uxth	r3, r3
90008ac6:	2b00      	cmp	r3, #0
90008ac8:	f000 8083 	beq.w	90008bd2 <HAL_I2C_Mem_Write+0x22a>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90008acc:	462a      	mov	r2, r5
90008ace:	4639      	mov	r1, r7
90008ad0:	4620      	mov	r0, r4
90008ad2:	f7ff fd83 	bl	900085dc <I2C_WaitOnTXISFlagUntilTimeout>
90008ad6:	2800      	cmp	r0, #0
90008ad8:	d16b      	bne.n	90008bb2 <HAL_I2C_Mem_Write+0x20a>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
90008ada:	6a62      	ldr	r2, [r4, #36]	; 0x24
90008adc:	6821      	ldr	r1, [r4, #0]
90008ade:	f812 0b01 	ldrb.w	r0, [r2], #1
      hi2c->XferSize--;
90008ae2:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
90008ae4:	6288      	str	r0, [r1, #40]	; 0x28
      hi2c->pBuffPtr++;
90008ae6:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferSize--;
90008ae8:	3b01      	subs	r3, #1
      hi2c->XferCount--;
90008aea:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
90008aec:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
90008aee:	3a01      	subs	r2, #1
      hi2c->XferSize--;
90008af0:	8523      	strh	r3, [r4, #40]	; 0x28
      hi2c->XferCount--;
90008af2:	b292      	uxth	r2, r2
90008af4:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90008af6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
90008af8:	b292      	uxth	r2, r2
90008afa:	2a00      	cmp	r2, #0
90008afc:	d0e1      	beq.n	90008ac2 <HAL_I2C_Mem_Write+0x11a>
90008afe:	2b00      	cmp	r3, #0
90008b00:	d1df      	bne.n	90008ac2 <HAL_I2C_Mem_Write+0x11a>
90008b02:	1c78      	adds	r0, r7, #1
90008b04:	d12c      	bne.n	90008b60 <HAL_I2C_Mem_Write+0x1b8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008b06:	698b      	ldr	r3, [r1, #24]
90008b08:	061a      	lsls	r2, r3, #24
90008b0a:	d5fc      	bpl.n	90008b06 <HAL_I2C_Mem_Write+0x15e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008b0c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
90008b0e:	b29b      	uxth	r3, r3
90008b10:	2bff      	cmp	r3, #255	; 0xff
90008b12:	d940      	bls.n	90008b96 <HAL_I2C_Mem_Write+0x1ee>
  MODIFY_REG(hi2c->Instance->CR2, \
90008b14:	684b      	ldr	r3, [r1, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
90008b16:	f8a4 a028 	strh.w	sl, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008b1a:	ea03 0308 	and.w	r3, r3, r8
90008b1e:	4333      	orrs	r3, r6
90008b20:	ea43 0309 	orr.w	r3, r3, r9
90008b24:	604b      	str	r3, [r1, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
90008b26:	e7cc      	b.n	90008ac2 <HAL_I2C_Mem_Write+0x11a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008b28:	6993      	ldr	r3, [r2, #24]
90008b2a:	061b      	lsls	r3, r3, #24
90008b2c:	d4b4      	bmi.n	90008a98 <HAL_I2C_Mem_Write+0xf0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008b2e:	f7ff f8bd 	bl	90007cac <HAL_GetTick>
90008b32:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008b34:	6822      	ldr	r2, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008b36:	4287      	cmp	r7, r0
90008b38:	d301      	bcc.n	90008b3e <HAL_I2C_Mem_Write+0x196>
90008b3a:	2f00      	cmp	r7, #0
90008b3c:	d1a7      	bne.n	90008a8e <HAL_I2C_Mem_Write+0xe6>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008b3e:	6993      	ldr	r3, [r2, #24]
90008b40:	f013 0380 	ands.w	r3, r3, #128	; 0x80
90008b44:	d1a3      	bne.n	90008a8e <HAL_I2C_Mem_Write+0xe6>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008b46:	6c62      	ldr	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008b48:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008b4a:	430a      	orrs	r2, r1
90008b4c:	6462      	str	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008b4e:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008b52:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
      __HAL_UNLOCK(hi2c);
90008b56:	2300      	movs	r3, #0
      return HAL_ERROR;
90008b58:	2001      	movs	r0, #1
      __HAL_UNLOCK(hi2c);
90008b5a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
      return HAL_ERROR;
90008b5e:	e75e      	b.n	90008a1e <HAL_I2C_Mem_Write+0x76>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008b60:	698b      	ldr	r3, [r1, #24]
90008b62:	061b      	lsls	r3, r3, #24
90008b64:	d4d2      	bmi.n	90008b0c <HAL_I2C_Mem_Write+0x164>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008b66:	f7ff f8a1 	bl	90007cac <HAL_GetTick>
90008b6a:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008b6c:	6821      	ldr	r1, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008b6e:	4287      	cmp	r7, r0
90008b70:	d301      	bcc.n	90008b76 <HAL_I2C_Mem_Write+0x1ce>
90008b72:	2f00      	cmp	r7, #0
90008b74:	d1c5      	bne.n	90008b02 <HAL_I2C_Mem_Write+0x15a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008b76:	698b      	ldr	r3, [r1, #24]
90008b78:	f013 0380 	ands.w	r3, r3, #128	; 0x80
90008b7c:	d1c1      	bne.n	90008b02 <HAL_I2C_Mem_Write+0x15a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008b7e:	6c62      	ldr	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008b80:	2120      	movs	r1, #32
          return HAL_ERROR;
90008b82:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90008b84:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008b88:	430a      	orrs	r2, r1
90008b8a:	6462      	str	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008b8c:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008b90:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
          return HAL_ERROR;
90008b94:	e743      	b.n	90008a1e <HAL_I2C_Mem_Write+0x76>
          hi2c->XferSize = hi2c->XferCount;
90008b96:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
90008b98:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008b9a:	b2da      	uxtb	r2, r3
          hi2c->XferSize = hi2c->XferCount;
90008b9c:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008b9e:	684b      	ldr	r3, [r1, #4]
90008ba0:	ea03 0308 	and.w	r3, r3, r8
90008ba4:	4333      	orrs	r3, r6
90008ba6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90008baa:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
90008bae:	604b      	str	r3, [r1, #4]
}
90008bb0:	e787      	b.n	90008ac2 <HAL_I2C_Mem_Write+0x11a>
        return HAL_ERROR;
90008bb2:	2001      	movs	r0, #1
90008bb4:	e733      	b.n	90008a1e <HAL_I2C_Mem_Write+0x76>
      hi2c->XferSize = hi2c->XferCount;
90008bb6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008bb8:	4812      	ldr	r0, [pc, #72]	; (90008c04 <HAL_I2C_Mem_Write+0x25c>)
      hi2c->XferSize = hi2c->XferCount;
90008bba:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008bbc:	b2d9      	uxtb	r1, r3
      hi2c->XferSize = hi2c->XferCount;
90008bbe:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008bc0:	6853      	ldr	r3, [r2, #4]
90008bc2:	4003      	ands	r3, r0
90008bc4:	4333      	orrs	r3, r6
90008bc6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
90008bca:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
90008bce:	6053      	str	r3, [r2, #4]
}
90008bd0:	e770      	b.n	90008ab4 <HAL_I2C_Mem_Write+0x10c>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90008bd2:	462a      	mov	r2, r5
90008bd4:	4639      	mov	r1, r7
90008bd6:	4620      	mov	r0, r4
90008bd8:	f7ff fdb6 	bl	90008748 <I2C_WaitOnSTOPFlagUntilTimeout>
90008bdc:	2800      	cmp	r0, #0
90008bde:	d1e8      	bne.n	90008bb2 <HAL_I2C_Mem_Write+0x20a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008be0:	6823      	ldr	r3, [r4, #0]
90008be2:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
90008be4:	4d09      	ldr	r5, [pc, #36]	; (90008c0c <HAL_I2C_Mem_Write+0x264>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008be6:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
90008be8:	685a      	ldr	r2, [r3, #4]
90008bea:	402a      	ands	r2, r5
90008bec:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90008bee:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
90008bf2:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
90008bf6:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
90008bfa:	e710      	b.n	90008a1e <HAL_I2C_Mem_Write+0x76>
90008bfc:	fc009800 	.word	0xfc009800
90008c00:	01002000 	.word	0x01002000
90008c04:	fc009c00 	.word	0xfc009c00
90008c08:	01ff0000 	.word	0x01ff0000
90008c0c:	fe00e800 	.word	0xfe00e800

90008c10 <HAL_I2C_Mem_Read>:
{
90008c10:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90008c14:	461c      	mov	r4, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
90008c16:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
90008c1a:	f8bd 902c 	ldrh.w	r9, [sp, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_READY)
90008c1e:	2b20      	cmp	r3, #32
{
90008c20:	9d0c      	ldr	r5, [sp, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_READY)
90008c22:	d137      	bne.n	90008c94 <HAL_I2C_Mem_Read+0x84>
    if ((pData == NULL) || (Size == 0U))
90008c24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90008c26:	4683      	mov	fp, r0
90008c28:	b36b      	cbz	r3, 90008c86 <HAL_I2C_Mem_Read+0x76>
90008c2a:	f1b9 0f00 	cmp.w	r9, #0
90008c2e:	d02a      	beq.n	90008c86 <HAL_I2C_Mem_Read+0x76>
    __HAL_LOCK(hi2c);
90008c30:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
90008c34:	2b01      	cmp	r3, #1
90008c36:	d02d      	beq.n	90008c94 <HAL_I2C_Mem_Read+0x84>
90008c38:	2301      	movs	r3, #1
90008c3a:	460f      	mov	r7, r1
90008c3c:	4690      	mov	r8, r2
90008c3e:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
90008c42:	f7ff f833 	bl	90007cac <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008c46:	f8db 3000 	ldr.w	r3, [fp]
    tickstart = HAL_GetTick();
90008c4a:	4606      	mov	r6, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008c4c:	699a      	ldr	r2, [r3, #24]
90008c4e:	0410      	lsls	r0, r2, #16
90008c50:	d523      	bpl.n	90008c9a <HAL_I2C_Mem_Read+0x8a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008c52:	f7ff f82b 	bl	90007cac <HAL_GetTick>
90008c56:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008c58:	f8db 3000 	ldr.w	r3, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008c5c:	2819      	cmp	r0, #25
90008c5e:	d9f5      	bls.n	90008c4c <HAL_I2C_Mem_Read+0x3c>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008c60:	699a      	ldr	r2, [r3, #24]
90008c62:	0411      	lsls	r1, r2, #16
90008c64:	d5f2      	bpl.n	90008c4c <HAL_I2C_Mem_Read+0x3c>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008c66:	f8db 3044 	ldr.w	r3, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008c6a:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008c6c:	2200      	movs	r2, #0
      return HAL_ERROR;
90008c6e:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008c70:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
90008c72:	f88b 2040 	strb.w	r2, [fp, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008c76:	f8cb 3044 	str.w	r3, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008c7a:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008c7e:	f88b 2042 	strb.w	r2, [fp, #66]	; 0x42
}
90008c82:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90008c86:	f44f 7300 	mov.w	r3, #512	; 0x200
      return  HAL_ERROR;
90008c8a:	2001      	movs	r0, #1
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90008c8c:	f8cb 3044 	str.w	r3, [fp, #68]	; 0x44
}
90008c90:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    return HAL_BUSY;
90008c94:	2002      	movs	r0, #2
}
90008c96:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    hi2c->pBuffPtr  = pData;
90008c9a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90008c9c:	2122      	movs	r1, #34	; 0x22
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
90008c9e:	f3c7 0709 	ubfx	r7, r7, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008ca2:	4658      	mov	r0, fp
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90008ca4:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008ca8:	2140      	movs	r1, #64	; 0x40
    hi2c->pBuffPtr  = pData;
90008caa:	f8cb 2024 	str.w	r2, [fp, #36]	; 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008cae:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008cb0:	f88b 1042 	strb.w	r1, [fp, #66]	; 0x42
    hi2c->XferISR   = NULL;
90008cb4:	f8cb 2034 	str.w	r2, [fp, #52]	; 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008cb8:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
  MODIFY_REG(hi2c->Instance->CR2, \
90008cbc:	4983      	ldr	r1, [pc, #524]	; (90008ecc <HAL_I2C_Mem_Read+0x2bc>)
    hi2c->XferCount = Size;
90008cbe:	f8ab 902a 	strh.w	r9, [fp, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008cc2:	685a      	ldr	r2, [r3, #4]
90008cc4:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008cc6:	b2e1      	uxtb	r1, r4
  MODIFY_REG(hi2c->Instance->CR2, \
90008cc8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008ccc:	4629      	mov	r1, r5
  MODIFY_REG(hi2c->Instance->CR2, \
90008cce:	433a      	orrs	r2, r7
90008cd0:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
90008cd4:	605a      	str	r2, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008cd6:	4632      	mov	r2, r6
90008cd8:	f7ff fc80 	bl	900085dc <I2C_WaitOnTXISFlagUntilTimeout>
90008cdc:	2800      	cmp	r0, #0
90008cde:	f040 8091 	bne.w	90008e04 <HAL_I2C_Mem_Read+0x1f4>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90008ce2:	2c01      	cmp	r4, #1
90008ce4:	d00c      	beq.n	90008d00 <HAL_I2C_Mem_Read+0xf0>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90008ce6:	ea4f 2218 	mov.w	r2, r8, lsr #8
90008cea:	f8db 3000 	ldr.w	r3, [fp]
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008cee:	4629      	mov	r1, r5
90008cf0:	4658      	mov	r0, fp
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90008cf2:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008cf4:	4632      	mov	r2, r6
90008cf6:	f7ff fc71 	bl	900085dc <I2C_WaitOnTXISFlagUntilTimeout>
90008cfa:	2800      	cmp	r0, #0
90008cfc:	f040 8082 	bne.w	90008e04 <HAL_I2C_Mem_Read+0x1f4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90008d00:	fa5f f388 	uxtb.w	r3, r8
90008d04:	f8db 4000 	ldr.w	r4, [fp]
90008d08:	62a3      	str	r3, [r4, #40]	; 0x28
90008d0a:	1c6a      	adds	r2, r5, #1
90008d0c:	d160      	bne.n	90008dd0 <HAL_I2C_Mem_Read+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008d0e:	69a3      	ldr	r3, [r4, #24]
90008d10:	065b      	lsls	r3, r3, #25
90008d12:	d5fc      	bpl.n	90008d0e <HAL_I2C_Mem_Read+0xfe>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008d14:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
90008d18:	b29b      	uxth	r3, r3
90008d1a:	2bff      	cmp	r3, #255	; 0xff
90008d1c:	f240 80ae 	bls.w	90008e7c <HAL_I2C_Mem_Read+0x26c>
  MODIFY_REG(hi2c->Instance->CR2, \
90008d20:	6863      	ldr	r3, [r4, #4]
90008d22:	4a6a      	ldr	r2, [pc, #424]	; (90008ecc <HAL_I2C_Mem_Read+0x2bc>)
90008d24:	4013      	ands	r3, r2
90008d26:	4a6a      	ldr	r2, [pc, #424]	; (90008ed0 <HAL_I2C_Mem_Read+0x2c0>)
90008d28:	433b      	orrs	r3, r7
90008d2a:	431a      	orrs	r2, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
90008d2c:	23ff      	movs	r3, #255	; 0xff
90008d2e:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008d32:	6062      	str	r2, [r4, #4]
90008d34:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 90008edc <HAL_I2C_Mem_Read+0x2cc>
          hi2c->XferSize = MAX_NBYTE_SIZE;
90008d38:	f04f 0aff 	mov.w	sl, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2, \
90008d3c:	f8df 91a0 	ldr.w	r9, [pc, #416]	; 90008ee0 <HAL_I2C_Mem_Read+0x2d0>
90008d40:	1c69      	adds	r1, r5, #1
90008d42:	d127      	bne.n	90008d94 <HAL_I2C_Mem_Read+0x184>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008d44:	69a3      	ldr	r3, [r4, #24]
90008d46:	075a      	lsls	r2, r3, #29
90008d48:	d5fc      	bpl.n	90008d44 <HAL_I2C_Mem_Read+0x134>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
90008d4a:	6a62      	ldr	r2, [r4, #36]	; 0x24
90008d4c:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
90008d50:	701a      	strb	r2, [r3, #0]
      hi2c->XferCount--;
90008d52:	f8bb 202a 	ldrh.w	r2, [fp, #42]	; 0x2a
      hi2c->pBuffPtr++;
90008d56:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
      hi2c->XferCount--;
90008d5a:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
90008d5c:	3301      	adds	r3, #1
      hi2c->XferCount--;
90008d5e:	b292      	uxth	r2, r2
      hi2c->pBuffPtr++;
90008d60:	f8cb 3024 	str.w	r3, [fp, #36]	; 0x24
      hi2c->XferSize--;
90008d64:	f8bb 3028 	ldrh.w	r3, [fp, #40]	; 0x28
      hi2c->XferCount--;
90008d68:	f8ab 202a 	strh.w	r2, [fp, #42]	; 0x2a
      hi2c->XferSize--;
90008d6c:	3b01      	subs	r3, #1
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90008d6e:	f8bb 202a 	ldrh.w	r2, [fp, #42]	; 0x2a
      hi2c->XferSize--;
90008d72:	b29b      	uxth	r3, r3
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90008d74:	b292      	uxth	r2, r2
      hi2c->XferSize--;
90008d76:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90008d7a:	b10a      	cbz	r2, 90008d80 <HAL_I2C_Mem_Read+0x170>
90008d7c:	2b00      	cmp	r3, #0
90008d7e:	d046      	beq.n	90008e0e <HAL_I2C_Mem_Read+0x1fe>
    } while (hi2c->XferCount > 0U);
90008d80:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
90008d84:	b29b      	uxth	r3, r3
90008d86:	2b00      	cmp	r3, #0
90008d88:	f000 8088 	beq.w	90008e9c <HAL_I2C_Mem_Read+0x28c>
90008d8c:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008d8e:	f8db 4000 	ldr.w	r4, [fp]
90008d92:	d0d7      	beq.n	90008d44 <HAL_I2C_Mem_Read+0x134>
90008d94:	69a3      	ldr	r3, [r4, #24]
90008d96:	075b      	lsls	r3, r3, #29
90008d98:	d4d7      	bmi.n	90008d4a <HAL_I2C_Mem_Read+0x13a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008d9a:	f7fe ff87 	bl	90007cac <HAL_GetTick>
90008d9e:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008da0:	f8db 4000 	ldr.w	r4, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008da4:	4285      	cmp	r5, r0
90008da6:	d301      	bcc.n	90008dac <HAL_I2C_Mem_Read+0x19c>
90008da8:	2d00      	cmp	r5, #0
90008daa:	d1c9      	bne.n	90008d40 <HAL_I2C_Mem_Read+0x130>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008dac:	69a3      	ldr	r3, [r4, #24]
90008dae:	f013 0304 	ands.w	r3, r3, #4
90008db2:	d1c5      	bne.n	90008d40 <HAL_I2C_Mem_Read+0x130>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008db4:	f8db 2044 	ldr.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008db8:	2120      	movs	r1, #32
          return HAL_ERROR;
90008dba:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90008dbc:	f88b 3040 	strb.w	r3, [fp, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008dc0:	430a      	orrs	r2, r1
90008dc2:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008dc6:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008dca:	f88b 3042 	strb.w	r3, [fp, #66]	; 0x42
          return HAL_ERROR;
90008dce:	e75f      	b.n	90008c90 <HAL_I2C_Mem_Read+0x80>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008dd0:	69a3      	ldr	r3, [r4, #24]
90008dd2:	0658      	lsls	r0, r3, #25
90008dd4:	d49e      	bmi.n	90008d14 <HAL_I2C_Mem_Read+0x104>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008dd6:	f7fe ff69 	bl	90007cac <HAL_GetTick>
90008dda:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008ddc:	f8db 4000 	ldr.w	r4, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008de0:	4285      	cmp	r5, r0
90008de2:	d301      	bcc.n	90008de8 <HAL_I2C_Mem_Read+0x1d8>
90008de4:	2d00      	cmp	r5, #0
90008de6:	d190      	bne.n	90008d0a <HAL_I2C_Mem_Read+0xfa>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008de8:	69a3      	ldr	r3, [r4, #24]
90008dea:	f013 0340 	ands.w	r3, r3, #64	; 0x40
90008dee:	d18c      	bne.n	90008d0a <HAL_I2C_Mem_Read+0xfa>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008df0:	f8db 2044 	ldr.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008df4:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008df6:	430a      	orrs	r2, r1
90008df8:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008dfc:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008e00:	f88b 3042 	strb.w	r3, [fp, #66]	; 0x42
      __HAL_UNLOCK(hi2c);
90008e04:	2300      	movs	r3, #0
      return HAL_ERROR;
90008e06:	2001      	movs	r0, #1
      __HAL_UNLOCK(hi2c);
90008e08:	f88b 3040 	strb.w	r3, [fp, #64]	; 0x40
      return HAL_ERROR;
90008e0c:	e740      	b.n	90008c90 <HAL_I2C_Mem_Read+0x80>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008e0e:	f8db 2000 	ldr.w	r2, [fp]
90008e12:	1c68      	adds	r0, r5, #1
90008e14:	d111      	bne.n	90008e3a <HAL_I2C_Mem_Read+0x22a>
90008e16:	6993      	ldr	r3, [r2, #24]
90008e18:	0619      	lsls	r1, r3, #24
90008e1a:	d5fc      	bpl.n	90008e16 <HAL_I2C_Mem_Read+0x206>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008e1c:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
90008e20:	b29b      	uxth	r3, r3
90008e22:	2bff      	cmp	r3, #255	; 0xff
90008e24:	d91a      	bls.n	90008e5c <HAL_I2C_Mem_Read+0x24c>
  MODIFY_REG(hi2c->Instance->CR2, \
90008e26:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
90008e28:	f8ab a028 	strh.w	sl, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008e2c:	ea03 0308 	and.w	r3, r3, r8
90008e30:	433b      	orrs	r3, r7
90008e32:	ea43 0309 	orr.w	r3, r3, r9
90008e36:	6053      	str	r3, [r2, #4]
}
90008e38:	e7a2      	b.n	90008d80 <HAL_I2C_Mem_Read+0x170>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008e3a:	6993      	ldr	r3, [r2, #24]
90008e3c:	061b      	lsls	r3, r3, #24
90008e3e:	d4ed      	bmi.n	90008e1c <HAL_I2C_Mem_Read+0x20c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008e40:	f7fe ff34 	bl	90007cac <HAL_GetTick>
90008e44:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008e46:	f8db 2000 	ldr.w	r2, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008e4a:	4285      	cmp	r5, r0
90008e4c:	d301      	bcc.n	90008e52 <HAL_I2C_Mem_Read+0x242>
90008e4e:	2d00      	cmp	r5, #0
90008e50:	d1df      	bne.n	90008e12 <HAL_I2C_Mem_Read+0x202>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008e52:	6993      	ldr	r3, [r2, #24]
90008e54:	f013 0380 	ands.w	r3, r3, #128	; 0x80
90008e58:	d1db      	bne.n	90008e12 <HAL_I2C_Mem_Read+0x202>
90008e5a:	e7ab      	b.n	90008db4 <HAL_I2C_Mem_Read+0x1a4>
          hi2c->XferSize = hi2c->XferCount;
90008e5c:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
90008e60:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008e62:	b2d9      	uxtb	r1, r3
          hi2c->XferSize = hi2c->XferCount;
90008e64:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008e68:	6853      	ldr	r3, [r2, #4]
90008e6a:	ea03 0308 	and.w	r3, r3, r8
90008e6e:	433b      	orrs	r3, r7
90008e70:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
90008e74:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
90008e78:	6053      	str	r3, [r2, #4]
}
90008e7a:	e781      	b.n	90008d80 <HAL_I2C_Mem_Read+0x170>
      hi2c->XferSize = hi2c->XferCount;
90008e7c:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008e80:	4912      	ldr	r1, [pc, #72]	; (90008ecc <HAL_I2C_Mem_Read+0x2bc>)
      hi2c->XferSize = hi2c->XferCount;
90008e82:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008e84:	b2da      	uxtb	r2, r3
      hi2c->XferSize = hi2c->XferCount;
90008e86:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008e8a:	6863      	ldr	r3, [r4, #4]
90008e8c:	400b      	ands	r3, r1
90008e8e:	433b      	orrs	r3, r7
90008e90:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90008e94:	4a0f      	ldr	r2, [pc, #60]	; (90008ed4 <HAL_I2C_Mem_Read+0x2c4>)
90008e96:	431a      	orrs	r2, r3
90008e98:	6062      	str	r2, [r4, #4]
}
90008e9a:	e74b      	b.n	90008d34 <HAL_I2C_Mem_Read+0x124>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90008e9c:	4632      	mov	r2, r6
90008e9e:	4629      	mov	r1, r5
90008ea0:	4658      	mov	r0, fp
90008ea2:	f7ff fc51 	bl	90008748 <I2C_WaitOnSTOPFlagUntilTimeout>
90008ea6:	b970      	cbnz	r0, 90008ec6 <HAL_I2C_Mem_Read+0x2b6>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008ea8:	f8db 3000 	ldr.w	r3, [fp]
90008eac:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
90008eae:	4c0a      	ldr	r4, [pc, #40]	; (90008ed8 <HAL_I2C_Mem_Read+0x2c8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008eb0:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
90008eb2:	685a      	ldr	r2, [r3, #4]
90008eb4:	4022      	ands	r2, r4
90008eb6:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90008eb8:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
90008ebc:	f88b 0040 	strb.w	r0, [fp, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
90008ec0:	f88b 0042 	strb.w	r0, [fp, #66]	; 0x42
    return HAL_OK;
90008ec4:	e6e4      	b.n	90008c90 <HAL_I2C_Mem_Read+0x80>
      return HAL_ERROR;
90008ec6:	2001      	movs	r0, #1
90008ec8:	e6e2      	b.n	90008c90 <HAL_I2C_Mem_Read+0x80>
90008eca:	bf00      	nop
90008ecc:	fc009800 	.word	0xfc009800
90008ed0:	01ff2400 	.word	0x01ff2400
90008ed4:	02002400 	.word	0x02002400
90008ed8:	fe00e800 	.word	0xfe00e800
90008edc:	fc009c00 	.word	0xfc009c00
90008ee0:	01ff0000 	.word	0x01ff0000

90008ee4 <HAL_I2C_GetState>:
  return hi2c->State;
90008ee4:	f890 0041 	ldrb.w	r0, [r0, #65]	; 0x41
}
90008ee8:	4770      	bx	lr
90008eea:	bf00      	nop

90008eec <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
90008eec:	6c40      	ldr	r0, [r0, #68]	; 0x44
}
90008eee:	4770      	bx	lr

90008ef0 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
90008ef0:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
90008ef4:	2a20      	cmp	r2, #32
90008ef6:	d123      	bne.n	90008f40 <HAL_I2CEx_ConfigAnalogFilter+0x50>
90008ef8:	fa5f fc82 	uxtb.w	ip, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90008efc:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
90008f00:	4603      	mov	r3, r0
90008f02:	2a01      	cmp	r2, #1
90008f04:	d01c      	beq.n	90008f40 <HAL_I2CEx_ConfigAnalogFilter+0x50>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90008f06:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
90008f08:	2024      	movs	r0, #36	; 0x24
{
90008f0a:	b500      	push	{lr}
    hi2c->State = HAL_I2C_STATE_BUSY;
90008f0c:	f883 0041 	strb.w	r0, [r3, #65]	; 0x41
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90008f10:	f04f 0e00 	mov.w	lr, #0
    __HAL_I2C_DISABLE(hi2c);
90008f14:	6810      	ldr	r0, [r2, #0]
90008f16:	f020 0001 	bic.w	r0, r0, #1
90008f1a:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
90008f1c:	6810      	ldr	r0, [r2, #0]
90008f1e:	f420 5080 	bic.w	r0, r0, #4096	; 0x1000
90008f22:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
90008f24:	6810      	ldr	r0, [r2, #0]
90008f26:	4301      	orrs	r1, r0

    return HAL_OK;
90008f28:	4670      	mov	r0, lr
    hi2c->Instance->CR1 |= AnalogFilter;
90008f2a:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90008f2c:	6811      	ldr	r1, [r2, #0]
90008f2e:	f041 0101 	orr.w	r1, r1, #1
90008f32:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
90008f34:	f883 c041 	strb.w	ip, [r3, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
90008f38:	f883 e040 	strb.w	lr, [r3, #64]	; 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90008f3c:	f85d fb04 	ldr.w	pc, [sp], #4
    return HAL_BUSY;
90008f40:	2002      	movs	r0, #2
}
90008f42:	4770      	bx	lr

90008f44 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
90008f44:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
90008f48:	2a20      	cmp	r2, #32
90008f4a:	d122      	bne.n	90008f92 <HAL_I2CEx_ConfigDigitalFilter+0x4e>
90008f4c:	4603      	mov	r3, r0
{
90008f4e:	b500      	push	{lr}
90008f50:	fa5f fe82 	uxtb.w	lr, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90008f54:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
90008f58:	2a01      	cmp	r2, #1
90008f5a:	d01c      	beq.n	90008f96 <HAL_I2CEx_ConfigDigitalFilter+0x52>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90008f5c:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
90008f5e:	2024      	movs	r0, #36	; 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90008f60:	f04f 0c00 	mov.w	ip, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
90008f64:	f883 0041 	strb.w	r0, [r3, #65]	; 0x41
    __HAL_I2C_DISABLE(hi2c);
90008f68:	6810      	ldr	r0, [r2, #0]
90008f6a:	f020 0001 	bic.w	r0, r0, #1
90008f6e:	6010      	str	r0, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
90008f70:	6810      	ldr	r0, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
90008f72:	f420 6070 	bic.w	r0, r0, #3840	; 0xf00
    tmpreg |= DigitalFilter << 8U;
90008f76:	ea40 2101 	orr.w	r1, r0, r1, lsl #8

    return HAL_OK;
90008f7a:	4660      	mov	r0, ip
    hi2c->Instance->CR1 = tmpreg;
90008f7c:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90008f7e:	6811      	ldr	r1, [r2, #0]
90008f80:	f041 0101 	orr.w	r1, r1, #1
90008f84:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
90008f86:	f883 e041 	strb.w	lr, [r3, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
90008f8a:	f883 c040 	strb.w	ip, [r3, #64]	; 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90008f8e:	f85d fb04 	ldr.w	pc, [sp], #4
    return HAL_BUSY;
90008f92:	2002      	movs	r0, #2
}
90008f94:	4770      	bx	lr
    return HAL_BUSY;
90008f96:	2002      	movs	r0, #2
}
90008f98:	f85d fb04 	ldr.w	pc, [sp], #4

90008f9c <JPEG_Bits_To_SizeCodes>:
  * @param  Huffcode pointer to codes table
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode, uint32_t *LastK)
{
90008f9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90008fa0:	460d      	mov	r5, r1
90008fa2:	4614      	mov	r4, r2
90008fa4:	469a      	mov	sl, r3

  /* Figure C.1: Generation of table of Huffman code sizes */
  p = 0;
  for (l = 0; l < 16UL; l++)
  {
    i = (uint32_t)Bits[l];
90008fa6:	7806      	ldrb	r6, [r0, #0]
    if ((p + i) > 256UL)
90008fa8:	4681      	mov	r9, r0
    i = (uint32_t)Bits[l];
90008faa:	2701      	movs	r7, #1
  p = 0;
90008fac:	f04f 0800 	mov.w	r8, #0
90008fb0:	e006      	b.n	90008fc0 <JPEG_Bits_To_SizeCodes+0x24>
    i = (uint32_t)Bits[l];
90008fb2:	f819 6f01 	ldrb.w	r6, [r9, #1]!
    if ((p + i) > 256UL)
90008fb6:	eb06 0308 	add.w	r3, r6, r8
90008fba:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
90008fbe:	d837      	bhi.n	90009030 <JPEG_Bits_To_SizeCodes+0x94>
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
    {
      Huffsize[p] = (uint8_t) l + 1U;
90008fc0:	eb05 0008 	add.w	r0, r5, r8
90008fc4:	4632      	mov	r2, r6
90008fc6:	4639      	mov	r1, r7
    while (i != 0UL)
90008fc8:	b116      	cbz	r6, 90008fd0 <JPEG_Bits_To_SizeCodes+0x34>
      p++;
90008fca:	44b0      	add	r8, r6
      Huffsize[p] = (uint8_t) l + 1U;
90008fcc:	f01d fc50 	bl	90026870 <memset>
  for (l = 0; l < 16UL; l++)
90008fd0:	2f10      	cmp	r7, #16
    if ((p + i) > 256UL)
90008fd2:	f107 0701 	add.w	r7, r7, #1
  for (l = 0; l < 16UL; l++)
90008fd6:	d1ec      	bne.n	90008fb2 <JPEG_Bits_To_SizeCodes+0x16>
      i--;
    }
  }
  Huffsize[p] = 0;
90008fd8:	2300      	movs	r3, #0
90008fda:	f805 3008 	strb.w	r3, [r5, r8]
  *LastK = p;
90008fde:	f8ca 8000 	str.w	r8, [sl]

  /* Figure C.2: Generation of table of Huffman codes */
  code = 0;
  si = Huffsize[0];
90008fe2:	7828      	ldrb	r0, [r5, #0]
90008fe4:	4601      	mov	r1, r0
  p = 0;
  while (Huffsize[p] != 0U)
90008fe6:	b300      	cbz	r0, 9000902a <JPEG_Bits_To_SizeCodes+0x8e>
90008fe8:	f06f 4840 	mvn.w	r8, #3221225472	; 0xc0000000
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if(si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
90008fec:	2701      	movs	r7, #1
  p = 0;
90008fee:	461a      	mov	r2, r3
    while (((uint32_t) Huffsize[p]) == si)
90008ff0:	4288      	cmp	r0, r1
90008ff2:	d10f      	bne.n	90009014 <JPEG_Bits_To_SizeCodes+0x78>
90008ff4:	eb02 0008 	add.w	r0, r2, r8
90008ff8:	1c56      	adds	r6, r2, #1
90008ffa:	eb05 0c02 	add.w	ip, r5, r2
90008ffe:	eb04 0080 	add.w	r0, r4, r0, lsl #2
90009002:	1af6      	subs	r6, r6, r3
      Huffcode[p] = code;
90009004:	f840 3f04 	str.w	r3, [r0, #4]!
      p++;
90009008:	18f2      	adds	r2, r6, r3
    while (((uint32_t) Huffsize[p]) == si)
9000900a:	f81c ef01 	ldrb.w	lr, [ip, #1]!
      code++;
9000900e:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[p]) == si)
90009010:	458e      	cmp	lr, r1
90009012:	d0f7      	beq.n	90009004 <JPEG_Bits_To_SizeCodes+0x68>
    if(si > 31UL)
90009014:	291f      	cmp	r1, #31
90009016:	d80b      	bhi.n	90009030 <JPEG_Bits_To_SizeCodes+0x94>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
90009018:	fa07 f001 	lsl.w	r0, r7, r1
9000901c:	4298      	cmp	r0, r3
9000901e:	d907      	bls.n	90009030 <JPEG_Bits_To_SizeCodes+0x94>
  while (Huffsize[p] != 0U)
90009020:	5ca8      	ldrb	r0, [r5, r2]
    {
      return HAL_ERROR;
    }
    code <<= 1;
90009022:	005b      	lsls	r3, r3, #1
    si++;
90009024:	3101      	adds	r1, #1
  while (Huffsize[p] != 0U)
90009026:	2800      	cmp	r0, #0
90009028:	d1e2      	bne.n	90008ff0 <JPEG_Bits_To_SizeCodes+0x54>
  }
  /* Return function status */
  return HAL_OK;
9000902a:	2000      	movs	r0, #0
}
9000902c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      return HAL_ERROR;
90009030:	2001      	movs	r0, #1
}
90009032:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90009036:	bf00      	nop

90009038 <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
90009038:	b5f0      	push	{r4, r5, r6, r7, lr}
9000903a:	f2ad 5d14 	subw	sp, sp, #1300	; 0x514
9000903e:	460d      	mov	r5, r1
90009040:	4604      	mov	r4, r0
  uint32_t k;
  uint32_t l;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
90009042:	ab01      	add	r3, sp, #4
90009044:	aa43      	add	r2, sp, #268	; 0x10c
90009046:	a902      	add	r1, sp, #8
90009048:	f7ff ffa8 	bl	90008f9c <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
9000904c:	b9d0      	cbnz	r0, 90009084 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
9000904e:	9f01      	ldr	r7, [sp, #4]
90009050:	b1c7      	cbz	r7, 90009084 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
90009052:	370f      	adds	r7, #15
90009054:	f50d 7e86 	add.w	lr, sp, #268	; 0x10c
90009058:	a902      	add	r1, sp, #8
9000905a:	f104 0c0f 	add.w	ip, r4, #15
9000905e:	4427      	add	r7, r4
90009060:	e009      	b.n	90009076 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x3e>
      return HAL_ERROR; /* Huffman Table overflow error*/
    }
    else
    {
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009062:	f811 2b01 	ldrb.w	r2, [r1], #1
  while (k < lastK)
90009066:	45bc      	cmp	ip, r7
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009068:	f85e 6b04 	ldr.w	r6, [lr], #4
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000906c:	f102 32ff 	add.w	r2, r2, #4294967295
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009070:	60e6      	str	r6, [r4, #12]
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009072:	54ea      	strb	r2, [r5, r3]
  while (k < lastK)
90009074:	d006      	beq.n	90009084 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    l = DC_BitsValsTable->HuffVal[k];
90009076:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
9000907a:	2b0b      	cmp	r3, #11
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000907c:	eb05 0483 	add.w	r4, r5, r3, lsl #2
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
90009080:	d9ef      	bls.n	90009062 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2a>
      return HAL_ERROR; /* Huffman Table overflow error*/
90009082:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90009084:	f20d 5d14 	addw	sp, sp, #1300	; 0x514
90009088:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000908a:	bf00      	nop

9000908c <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
9000908c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t i;
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address, *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
90009090:	6804      	ldr	r4, [r0, #0]
{
90009092:	b093      	sub	sp, #76	; 0x4c
90009094:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
90009096:	f504 63f8 	add.w	r3, r4, #1984	; 0x7c0
9000909a:	429a      	cmp	r2, r3
9000909c:	f000 809d 	beq.w	900091da <JPEG_Set_HuffDC_Mem+0x14e>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
900090a0:	f504 63fc 	add.w	r3, r4, #2016	; 0x7e0
900090a4:	429a      	cmp	r2, r3
900090a6:	d003      	beq.n	900090b0 <JPEG_Set_HuffDC_Mem+0x24>
  {
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
900090a8:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
900090aa:	b013      	add	sp, #76	; 0x4c
900090ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
900090b0:	f504 64ff 	add.w	r4, r4, #2040	; 0x7f8
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
900090b4:	a903      	add	r1, sp, #12
900090b6:	f7ff ffbf 	bl	90009038 <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
900090ba:	2800      	cmp	r0, #0
900090bc:	d1f5      	bne.n	900090aa <JPEG_Set_HuffDC_Mem+0x1e>
    *addressDef = 0x0FFF0FFF;
900090be:	f06f 23f0 	mvn.w	r3, #4026593280	; 0xf000f000
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900090c2:	f89d a017 	ldrb.w	sl, [sp, #23]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900090c6:	f89d e016 	ldrb.w	lr, [sp, #22]
    *addressDef = 0x0FFF0FFF;
900090ca:	6023      	str	r3, [r4, #0]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900090cc:	ea4f 2a0a 	mov.w	sl, sl, lsl #8
    *addressDef = 0x0FFF0FFF;
900090d0:	6063      	str	r3, [r4, #4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900090d2:	ea4f 2e0e 	mov.w	lr, lr, lsl #8
900090d6:	f89d 300e 	ldrb.w	r3, [sp, #14]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900090da:	f40a 6a70 	and.w	sl, sl, #3840	; 0xf00
900090de:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900090e2:	f40e 6e70 	and.w	lr, lr, #3840	; 0xf00
900090e6:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900090e8:	f89d 9015 	ldrb.w	r9, [sp, #21]
900090ec:	ea4a 0a02 	orr.w	sl, sl, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900090f0:	f89d c014 	ldrb.w	ip, [sp, #20]
900090f4:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900090f8:	ea4f 2909 	mov.w	r9, r9, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900090fc:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009100:	f89d 8013 	ldrb.w	r8, [sp, #19]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009104:	9301      	str	r3, [sp, #4]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009106:	f409 6970 	and.w	r9, r9, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000910a:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
9000910e:	f40c 6c70 	and.w	ip, ip, #3840	; 0xf00
90009112:	f89d 1012 	ldrb.w	r1, [sp, #18]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009116:	ea4f 2808 	mov.w	r8, r8, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000911a:	ea4e 0e03 	orr.w	lr, lr, r3
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000911e:	f89d 7011 	ldrb.w	r7, [sp, #17]
90009122:	f408 6870 	and.w	r8, r8, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009126:	0209      	lsls	r1, r1, #8
      *address = lsb | (msb << 16);
90009128:	ea4e 4e0a 	orr.w	lr, lr, sl, lsl #16
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000912c:	f89d 2010 	ldrb.w	r2, [sp, #16]
90009130:	f401 6170 	and.w	r1, r1, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009134:	023f      	lsls	r7, r7, #8
      *address = lsb | (msb << 16);
90009136:	f844 ec04 	str.w	lr, [r4, #-4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000913a:	0212      	lsls	r2, r2, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000913c:	f89d e03c 	ldrb.w	lr, [sp, #60]	; 0x3c
90009140:	f407 6770 	and.w	r7, r7, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009144:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009148:	f89d 600f 	ldrb.w	r6, [sp, #15]
9000914c:	ea49 090e 	orr.w	r9, r9, lr
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009150:	f89d e038 	ldrb.w	lr, [sp, #56]	; 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009154:	0236      	lsls	r6, r6, #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009156:	9b01      	ldr	r3, [sp, #4]
90009158:	ea4c 0c0e 	orr.w	ip, ip, lr
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000915c:	f89d 500d 	ldrb.w	r5, [sp, #13]
90009160:	f406 6670 	and.w	r6, r6, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009164:	f89d b00c 	ldrb.w	fp, [sp, #12]
      *address = lsb | (msb << 16);
90009168:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000916c:	022d      	lsls	r5, r5, #8
      *address = lsb | (msb << 16);
9000916e:	f844 cc08 	str.w	ip, [r4, #-8]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009172:	ea4f 2b0b 	mov.w	fp, fp, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009176:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
9000917a:	f405 6570 	and.w	r5, r5, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000917e:	f40b 6b70 	and.w	fp, fp, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009182:	ea48 080c 	orr.w	r8, r8, ip
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009186:	f89d c030 	ldrb.w	ip, [sp, #48]	; 0x30
9000918a:	ea41 010c 	orr.w	r1, r1, ip
      *address = lsb | (msb << 16);
9000918e:	ea41 4108 	orr.w	r1, r1, r8, lsl #16
90009192:	f844 1c0c 	str.w	r1, [r4, #-12]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009196:	f89d 102c 	ldrb.w	r1, [sp, #44]	; 0x2c
9000919a:	430f      	orrs	r7, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000919c:	f89d 1028 	ldrb.w	r1, [sp, #40]	; 0x28
900091a0:	430a      	orrs	r2, r1
      *address = lsb | (msb << 16);
900091a2:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
900091a6:	f844 2c10 	str.w	r2, [r4, #-16]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900091aa:	f89d 2024 	ldrb.w	r2, [sp, #36]	; 0x24
900091ae:	4316      	orrs	r6, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900091b0:	f89d 2020 	ldrb.w	r2, [sp, #32]
900091b4:	4313      	orrs	r3, r2
      *address = lsb | (msb << 16);
900091b6:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
900091ba:	f844 3c14 	str.w	r3, [r4, #-20]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900091be:	f89d 301c 	ldrb.w	r3, [sp, #28]
900091c2:	431d      	orrs	r5, r3
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900091c4:	f89d 3018 	ldrb.w	r3, [sp, #24]
900091c8:	ea4b 0303 	orr.w	r3, fp, r3
      *address = lsb | (msb << 16);
900091cc:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
900091d0:	f844 3c18 	str.w	r3, [r4, #-24]
}
900091d4:	b013      	add	sp, #76	; 0x4c
900091d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
900091da:	f504 64fb 	add.w	r4, r4, #2008	; 0x7d8
900091de:	e769      	b.n	900090b4 <JPEG_Set_HuffDC_Mem+0x28>

900091e0 <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
900091e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_StatusTypeDef error;
  JPEG_AC_HuffCodeTableTypeDef acSizeCodesTable;
  uint32_t i, lsb, msb;
  __IO uint32_t *address, *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
900091e4:	6804      	ldr	r4, [r0, #0]
{
900091e6:	f6ad 0d3c 	subw	sp, sp, #2108	; 0x83c
900091ea:	460d      	mov	r5, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
900091ec:	f504 63a0 	add.w	r3, r4, #1280	; 0x500
900091f0:	429a      	cmp	r2, r3
900091f2:	d042      	beq.n	9000927a <JPEG_Set_HuffAC_Mem+0x9a>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
900091f4:	f504 63cc 	add.w	r3, r4, #1632	; 0x660
900091f8:	429a      	cmp	r2, r3
900091fa:	d004      	beq.n	90009206 <JPEG_Set_HuffAC_Mem+0x26>
      return HAL_ERROR; /* Huffman Table overflow error*/
900091fc:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
900091fe:	f60d 0d3c 	addw	sp, sp, #2108	; 0x83c
90009202:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
90009206:	f204 74a4 	addw	r4, r4, #1956	; 0x7a4
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
9000920a:	4628      	mov	r0, r5
9000920c:	466b      	mov	r3, sp
9000920e:	f20d 4234 	addw	r2, sp, #1076	; 0x434
90009212:	a901      	add	r1, sp, #4
90009214:	f7ff fec2 	bl	90008f9c <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
90009218:	2800      	cmp	r0, #0
9000921a:	d1f0      	bne.n	900091fe <JPEG_Set_HuffAC_Mem+0x1e>
  while (k < lastK)
9000921c:	9b00      	ldr	r3, [sp, #0]
9000921e:	b37b      	cbz	r3, 90009280 <JPEG_Set_HuffAC_Mem+0xa0>
90009220:	330f      	adds	r3, #15
90009222:	f20d 4734 	addw	r7, sp, #1076	; 0x434
90009226:	f10d 0c04 	add.w	ip, sp, #4
9000922a:	f105 020f 	add.w	r2, r5, #15
9000922e:	eb05 0e03 	add.w	lr, r5, r3
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009232:	ae42      	add	r6, sp, #264	; 0x108
90009234:	e011      	b.n	9000925a <JPEG_Set_HuffAC_Mem+0x7a>
      l = (msb * 10UL) + lsb - 1UL;
90009236:	eb03 0345 	add.w	r3, r3, r5, lsl #1
    if (l >= JPEG_AC_HUFF_TABLE_SIZE)
9000923a:	2ba1      	cmp	r3, #161	; 0xa1
9000923c:	d8de      	bhi.n	900091fc <JPEG_Set_HuffAC_Mem+0x1c>
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000923e:	f81c 5b01 	ldrb.w	r5, [ip], #1
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009242:	eb06 0883 	add.w	r8, r6, r3, lsl #2
90009246:	f857 9b04 	ldr.w	r9, [r7], #4
  while (k < lastK)
9000924a:	4596      	cmp	lr, r2
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000924c:	f105 35ff 	add.w	r5, r5, #4294967295
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009250:	4631      	mov	r1, r6
90009252:	f8c8 90a4 	str.w	r9, [r8, #164]	; 0xa4
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009256:	54f5      	strb	r5, [r6, r3]
  while (k < lastK)
90009258:	d013      	beq.n	90009282 <JPEG_Set_HuffAC_Mem+0xa2>
    l = AC_BitsValsTable->HuffVal[k];
9000925a:	f812 1f01 	ldrb.w	r1, [r2, #1]!
      l = 160; /*l = 0x00 EOB code*/
9000925e:	23a0      	movs	r3, #160	; 0xa0
    if (l == 0UL)
90009260:	2900      	cmp	r1, #0
90009262:	d0ec      	beq.n	9000923e <JPEG_Set_HuffAC_Mem+0x5e>
      msb = (l & 0xF0UL) >> 4;
90009264:	090d      	lsrs	r5, r1, #4
      lsb = (l & 0x0FUL);
90009266:	f001 030f 	and.w	r3, r1, #15
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
9000926a:	29f0      	cmp	r1, #240	; 0xf0
      l = (msb * 10UL) + lsb - 1UL;
9000926c:	eb05 0585 	add.w	r5, r5, r5, lsl #2
90009270:	f103 33ff 	add.w	r3, r3, #4294967295
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
90009274:	d1df      	bne.n	90009236 <JPEG_Set_HuffAC_Mem+0x56>
      l = 161;
90009276:	23a1      	movs	r3, #161	; 0xa1
90009278:	e7e1      	b.n	9000923e <JPEG_Set_HuffAC_Mem+0x5e>
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
9000927a:	f204 6444 	addw	r4, r4, #1604	; 0x644
9000927e:	e7c4      	b.n	9000920a <JPEG_Set_HuffAC_Mem+0x2a>
90009280:	a942      	add	r1, sp, #264	; 0x108
      *addressDef = 0x0FFF0FFF;
90009282:	f06f 23f0 	mvn.w	r3, #4026593280	; 0xf000f000
    *addressDef = 0x0FD10FD0;
90009286:	4a1a      	ldr	r2, [pc, #104]	; (900092f0 <JPEG_Set_HuffAC_Mem+0x110>)
90009288:	eba1 0c81 	sub.w	ip, r1, r1, lsl #2
9000928c:	f10d 0566 	add.w	r5, sp, #102	; 0x66
      *addressDef = 0x0FFF0FFF;
90009290:	6023      	str	r3, [r4, #0]
90009292:	6063      	str	r3, [r4, #4]
90009294:	f50c 7e4a 	add.w	lr, ip, #808	; 0x328
90009298:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD30FD2;
9000929a:	f103 33d3 	add.w	r3, r3, #3553874899	; 0xd3d3d3d3
    *addressDef = 0x0FD10FD0;
9000929e:	60e2      	str	r2, [r4, #12]
    *addressDef = 0x0FD30FD2;
900092a0:	f50c 7c49 	add.w	ip, ip, #804	; 0x324
900092a4:	f103 232c 	add.w	r3, r3, #738208768	; 0x2c002c00
900092a8:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
900092aa:	f103 1302 	add.w	r3, r3, #131074	; 0x20002
900092ae:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
900092b0:	f103 1302 	add.w	r3, r3, #131074	; 0x20002
900092b4:	61a3      	str	r3, [r4, #24]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900092b6:	f891 20a1 	ldrb.w	r2, [r1, #161]	; 0xa1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900092ba:	f891 30a0 	ldrb.w	r3, [r1, #160]	; 0xa0
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900092be:	0212      	lsls	r2, r2, #8
900092c0:	f81e 7021 	ldrb.w	r7, [lr, r1, lsl #2]
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900092c4:	021b      	lsls	r3, r3, #8
900092c6:	f81c 6021 	ldrb.w	r6, [ip, r1, lsl #2]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900092ca:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    while (i > 1UL)
900092ce:	3902      	subs	r1, #2
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900092d0:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900092d4:	433a      	orrs	r2, r7
    while (i > 1UL)
900092d6:	428d      	cmp	r5, r1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900092d8:	ea43 0306 	orr.w	r3, r3, r6
      *address = lsb | (msb << 16);
900092dc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
900092e0:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
900092e4:	d1e7      	bne.n	900092b6 <JPEG_Set_HuffAC_Mem+0xd6>
}
900092e6:	f60d 0d3c 	addw	sp, sp, #2108	; 0x83c
900092ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900092ee:	bf00      	nop
900092f0:	0fd10fd0 	.word	0x0fd10fd0

900092f4 <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
900092f4:	6d43      	ldr	r3, [r0, #84]	; 0x54
900092f6:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
900092fa:	6543      	str	r3, [r0, #84]	; 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900092fc:	6d43      	ldr	r3, [r0, #84]	; 0x54
900092fe:	f003 0303 	and.w	r3, r3, #3
90009302:	2b02      	cmp	r3, #2
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
90009304:	6803      	ldr	r3, [r0, #0]
90009306:	685a      	ldr	r2, [r3, #4]
90009308:	bf0c      	ite	eq
9000930a:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
9000930e:	f022 0208 	bicne.w	r2, r2, #8
90009312:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009314:	681a      	ldr	r2, [r3, #0]
90009316:	f022 0201 	bic.w	r2, r2, #1
9000931a:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000931c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000931e:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
90009322:	631a      	str	r2, [r3, #48]	; 0x30

  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
90009324:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90009326:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
9000932a:	631a      	str	r2, [r3, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000932c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000932e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
90009332:	631a      	str	r2, [r3, #48]	; 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90009334:	6b9a      	ldr	r2, [r3, #56]	; 0x38
90009336:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000933a:	639a      	str	r2, [r3, #56]	; 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
9000933c:	681a      	ldr	r2, [r3, #0]
9000933e:	f042 0201 	orr.w	r2, r2, #1
90009342:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009344:	6d42      	ldr	r2, [r0, #84]	; 0x54
90009346:	f002 020c 	and.w	r2, r2, #12
9000934a:	2a08      	cmp	r2, #8
9000934c:	d00a      	beq.n	90009364 <JPEG_Init_Process+0x70>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000934e:	6d42      	ldr	r2, [r0, #84]	; 0x54
90009350:	f002 020c 	and.w	r2, r2, #12
90009354:	2a0c      	cmp	r2, #12
90009356:	d000      	beq.n	9000935a <JPEG_Init_Process+0x66>
  }
  else
  {
    /* Nothing to do */
  }
}
90009358:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000935a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000935c:	f042 0260 	orr.w	r2, r2, #96	; 0x60
90009360:	631a      	str	r2, [r3, #48]	; 0x30
}
90009362:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
90009364:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90009366:	f042 026e 	orr.w	r2, r2, #110	; 0x6e
9000936a:	631a      	str	r2, [r3, #48]	; 0x30
9000936c:	4770      	bx	lr
9000936e:	bf00      	nop

90009370 <JPEG_DMA_StartProcess>:
  /*if the MDMA In is triggred with JPEG In FIFO Threshold flag
      then MDMA In buffer size is 32 bytes
    else (MDMA In is triggred with JPEG In FIFO not full flag)
      then MDMA In buffer size is 4 bytes
    */
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009370:	6b01      	ldr	r1, [r0, #48]	; 0x30
    else (MDMA Out is triggred with JPEG Out FIFO not empty flag)
      then MDMA buffer size is 4 bytes
    */
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;

  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90009372:	6a82      	ldr	r2, [r0, #40]	; 0x28
{
90009374:	b5f0      	push	{r4, r5, r6, r7, lr}
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009376:	6a8d      	ldr	r5, [r1, #40]	; 0x28
{
90009378:	b083      	sub	sp, #12
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000937a:	42aa      	cmp	r2, r5
9000937c:	d32d      	bcc.n	900093da <JPEG_DMA_StartProcess+0x6a>
9000937e:	4604      	mov	r4, r0
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
90009380:	6b40      	ldr	r0, [r0, #52]	; 0x34
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90009382:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
90009384:	6a86      	ldr	r6, [r0, #40]	; 0x28
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90009386:	42b3      	cmp	r3, r6
90009388:	d327      	bcc.n	900093da <JPEG_DMA_StartProcess+0x6a>
    return HAL_ERROR;
  }
  /* Set the JPEG MDMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
  /* Set the MDMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
9000938a:	4f1b      	ldr	r7, [pc, #108]	; (900093f8 <JPEG_DMA_StartProcess+0x88>)
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
9000938c:	f8df c074 	ldr.w	ip, [pc, #116]	; 90009404 <JPEG_DMA_StartProcess+0x94>
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
90009390:	654f      	str	r7, [r1, #84]	; 0x54
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
90009392:	f8c1 c044 	str.w	ip, [r1, #68]	; 0x44

  /* Set the JPEG MDMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
90009396:	4919      	ldr	r1, [pc, #100]	; (900093fc <JPEG_DMA_StartProcess+0x8c>)
  /* Set the MDMA In error callback */
  hjpeg->hdmaout->XferErrorCallback = JPEG_MDMAErrorCallback;
90009398:	6547      	str	r7, [r0, #84]	; 0x54
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000939a:	6441      	str	r1, [r0, #68]	; 0x44
  /* Set the MDMA Out Abort callback */
  hjpeg->hdmaout->XferAbortCallback = JPEG_MDMAOutAbortCallback;
9000939c:	4918      	ldr	r1, [pc, #96]	; (90009400 <JPEG_DMA_StartProcess+0x90>)
9000939e:	6581      	str	r1, [r0, #88]	; 0x58

  if ((inXfrSize == 0UL) || (outXfrSize == 0UL))
900093a0:	b1a5      	cbz	r5, 900093cc <JPEG_DMA_StartProcess+0x5c>
900093a2:	b19e      	cbz	r6, 900093cc <JPEG_DMA_StartProcess+0x5c>
  {
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
900093a4:	fbb2 f1f5 	udiv	r1, r2, r5
900093a8:	fb05 2111 	mls	r1, r5, r1, r2
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);


  /* Start MDMA FIFO Out transfer */
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900093ac:	2501      	movs	r5, #1
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
900093ae:	1a52      	subs	r2, r2, r1
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900093b0:	6821      	ldr	r1, [r4, #0]
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
900093b2:	62a2      	str	r2, [r4, #40]	; 0x28
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900093b4:	3144      	adds	r1, #68	; 0x44
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);
900093b6:	fbb3 f2f6 	udiv	r2, r3, r6
900093ba:	fb06 3212 	mls	r2, r6, r2, r3
900093be:	1a9b      	subs	r3, r3, r2
900093c0:	62e3      	str	r3, [r4, #44]	; 0x2c
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900093c2:	9500      	str	r5, [sp, #0]
900093c4:	69e2      	ldr	r2, [r4, #28]
900093c6:	f001 fbb5 	bl	9000ab34 <HAL_MDMA_Start_IT>
900093ca:	b148      	cbz	r0, 900093e0 <JPEG_DMA_StartProcess+0x70>
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900093cc:	6d23      	ldr	r3, [r4, #80]	; 0x50
    return HAL_ERROR;
900093ce:	2001      	movs	r0, #1
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900093d0:	f043 0304 	orr.w	r3, r3, #4
900093d4:	6523      	str	r3, [r4, #80]	; 0x50
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }

  return HAL_OK;
}
900093d6:	b003      	add	sp, #12
900093d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    return HAL_ERROR;
900093da:	2001      	movs	r0, #1
}
900093dc:	b003      	add	sp, #12
900093de:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
900093e0:	6822      	ldr	r2, [r4, #0]
900093e2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
900093e4:	69a1      	ldr	r1, [r4, #24]
900093e6:	3240      	adds	r2, #64	; 0x40
900093e8:	9500      	str	r5, [sp, #0]
900093ea:	6b20      	ldr	r0, [r4, #48]	; 0x30
900093ec:	f001 fba2 	bl	9000ab34 <HAL_MDMA_Start_IT>
900093f0:	2800      	cmp	r0, #0
900093f2:	d0f3      	beq.n	900093dc <JPEG_DMA_StartProcess+0x6c>
900093f4:	e7ea      	b.n	900093cc <JPEG_DMA_StartProcess+0x5c>
900093f6:	bf00      	nop
900093f8:	90009929 	.word	0x90009929
900093fc:	90009ba1 	.word	0x90009ba1
90009400:	90009c21 	.word	0x90009c21
90009404:	90009955 	.word	0x90009955

90009408 <HAL_JPEG_GetInfo.part.0>:
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
90009408:	6803      	ldr	r3, [r0, #0]
9000940a:	685a      	ldr	r2, [r3, #4]
9000940c:	f002 0203 	and.w	r2, r2, #3
90009410:	2a02      	cmp	r2, #2
HAL_StatusTypeDef HAL_JPEG_GetInfo(JPEG_HandleTypeDef *hjpeg, JPEG_ConfTypeDef *pInfo)
90009412:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90009416:	4689      	mov	r9, r1
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
90009418:	f000 8094 	beq.w	90009544 <HAL_JPEG_GetInfo.part.0+0x13c>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
9000941c:	685c      	ldr	r4, [r3, #4]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000941e:	685a      	ldr	r2, [r3, #4]
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
90009420:	f014 0403 	ands.w	r4, r4, #3
90009424:	d172      	bne.n	9000950c <HAL_JPEG_GetInfo.part.0+0x104>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009426:	0c12      	lsrs	r2, r2, #16
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90009428:	600c      	str	r4, [r1, #0]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000942a:	608a      	str	r2, [r1, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000942c:	68da      	ldr	r2, [r3, #12]
9000942e:	0c12      	lsrs	r2, r2, #16
90009430:	60ca      	str	r2, [r1, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
90009432:	4a5f      	ldr	r2, [pc, #380]	; (900095b0 <HAL_JPEG_GetInfo.part.0+0x1a8>)
  */
static uint32_t JPEG_GetQuality(JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
  uint32_t quantRow, quantVal, scale, i, j;
  __IO uint32_t *tableAddress = hjpeg->Instance->QMEM0;
90009434:	f103 0c50 	add.w	ip, r3, #80	; 0x50
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
90009438:	f8c9 4004 	str.w	r4, [r9, #4]
  uint32_t quality = 0;
9000943c:	2600      	movs	r6, #0
9000943e:	f102 0540 	add.w	r5, r2, #64	; 0x40
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90009442:	f04f 0e64 	mov.w	lr, #100	; 0x64
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
90009446:	f241 3488 	movw	r4, #5000	; 0x1388
9000944a:	e033      	b.n	900094b4 <HAL_JPEG_GetInfo.part.0+0xac>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000944c:	f892 8001 	ldrb.w	r8, [r2, #1]
90009450:	fb0e f707 	mul.w	r7, lr, r7
90009454:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
90009456:	f811 8008 	ldrb.w	r8, [r1, r8]
9000945a:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000945e:	2f64      	cmp	r7, #100	; 0x64
90009460:	d961      	bls.n	90009526 <HAL_JPEG_GetInfo.part.0+0x11e>
          quality += 5000UL / scale;
90009462:	fbb4 f7f7 	udiv	r7, r4, r7
90009466:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90009468:	f3c3 4707 	ubfx	r7, r3, #16, #8
      if (quantVal == 1UL)
9000946c:	2f01      	cmp	r7, #1
9000946e:	d03d      	beq.n	900094ec <HAL_JPEG_GetInfo.part.0+0xe4>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90009470:	f892 8002 	ldrb.w	r8, [r2, #2]
90009474:	fb0e f707 	mul.w	r7, lr, r7
90009478:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000947a:	f811 8008 	ldrb.w	r8, [r1, r8]
9000947e:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90009482:	2f64      	cmp	r7, #100	; 0x64
90009484:	d94a      	bls.n	9000951c <HAL_JPEG_GetInfo.part.0+0x114>
          quality += 5000UL / scale;
90009486:	fbb4 f7f7 	udiv	r7, r4, r7
9000948a:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000948c:	0e1b      	lsrs	r3, r3, #24
      if (quantVal == 1UL)
9000948e:	2b01      	cmp	r3, #1
90009490:	d030      	beq.n	900094f4 <HAL_JPEG_GetInfo.part.0+0xec>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90009492:	78d7      	ldrb	r7, [r2, #3]
90009494:	fb0e f303 	mul.w	r3, lr, r3
90009498:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000949a:	5dcf      	ldrb	r7, [r1, r7]
9000949c:	fbb3 f3f7 	udiv	r3, r3, r7
        if (scale <= 100UL)
900094a0:	2b64      	cmp	r3, #100	; 0x64
900094a2:	d94a      	bls.n	9000953a <HAL_JPEG_GetInfo.part.0+0x132>
          quality += 5000UL / scale;
900094a4:	fbb4 f3f3 	udiv	r3, r4, r3
900094a8:	441e      	add	r6, r3
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
900094aa:	3204      	adds	r2, #4
        }
      }
    }

    i += 4UL;
    tableAddress ++;
900094ac:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
900094b0:	4295      	cmp	r5, r2
900094b2:	d025      	beq.n	90009500 <HAL_JPEG_GetInfo.part.0+0xf8>
    quantRow = *tableAddress;
900094b4:	f8dc 3000 	ldr.w	r3, [ip]
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
900094b8:	b2df      	uxtb	r7, r3
      if (quantVal == 1UL)
900094ba:	2f01      	cmp	r7, #1
900094bc:	d02c      	beq.n	90009518 <HAL_JPEG_GetInfo.part.0+0x110>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
900094be:	f892 8000 	ldrb.w	r8, [r2]
900094c2:	fb0e f707 	mul.w	r7, lr, r7
900094c6:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
900094c8:	f811 8008 	ldrb.w	r8, [r1, r8]
900094cc:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
900094d0:	2f64      	cmp	r7, #100	; 0x64
900094d2:	d92d      	bls.n	90009530 <HAL_JPEG_GetInfo.part.0+0x128>
          quality += 5000UL / scale;
900094d4:	fbb4 f7f7 	udiv	r7, r4, r7
900094d8:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
900094da:	f3c3 2707 	ubfx	r7, r3, #8, #8
      if (quantVal == 1UL)
900094de:	2f01      	cmp	r7, #1
900094e0:	d1b4      	bne.n	9000944c <HAL_JPEG_GetInfo.part.0+0x44>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
900094e2:	f3c3 4707 	ubfx	r7, r3, #16, #8
        quality += 100UL;
900094e6:	3664      	adds	r6, #100	; 0x64
      if (quantVal == 1UL)
900094e8:	2f01      	cmp	r7, #1
900094ea:	d1c1      	bne.n	90009470 <HAL_JPEG_GetInfo.part.0+0x68>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
900094ec:	0e1b      	lsrs	r3, r3, #24
        quality += 100UL;
900094ee:	3664      	adds	r6, #100	; 0x64
      if (quantVal == 1UL)
900094f0:	2b01      	cmp	r3, #1
900094f2:	d1ce      	bne.n	90009492 <HAL_JPEG_GetInfo.part.0+0x8a>
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
900094f4:	3204      	adds	r2, #4
        quality += 100UL;
900094f6:	3664      	adds	r6, #100	; 0x64
    tableAddress ++;
900094f8:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
900094fc:	4295      	cmp	r5, r2
900094fe:	d1d9      	bne.n	900094b4 <HAL_JPEG_GetInfo.part.0+0xac>
  }

  return (quality / 64UL);
90009500:	09b6      	lsrs	r6, r6, #6
  return HAL_OK;
90009502:	2000      	movs	r0, #0
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
90009504:	f8c9 6010 	str.w	r6, [r9, #16]
}
90009508:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
9000950c:	f002 0203 	and.w	r2, r2, #3
90009510:	2a03      	cmp	r2, #3
90009512:	d14a      	bne.n	900095aa <HAL_JPEG_GetInfo.part.0+0x1a2>
90009514:	2430      	movs	r4, #48	; 0x30
90009516:	e016      	b.n	90009546 <HAL_JPEG_GetInfo.part.0+0x13e>
        quality += 100UL;
90009518:	3664      	adds	r6, #100	; 0x64
9000951a:	e7de      	b.n	900094da <HAL_JPEG_GetInfo.part.0+0xd2>
          quality += (200UL - scale) / 2UL;
9000951c:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
90009520:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90009524:	e7b2      	b.n	9000948c <HAL_JPEG_GetInfo.part.0+0x84>
90009526:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
9000952a:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000952e:	e79b      	b.n	90009468 <HAL_JPEG_GetInfo.part.0+0x60>
90009530:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
90009534:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90009538:	e7cf      	b.n	900094da <HAL_JPEG_GetInfo.part.0+0xd2>
9000953a:	f1c3 03c8 	rsb	r3, r3, #200	; 0xc8
9000953e:	eb06 0653 	add.w	r6, r6, r3, lsr #1
90009542:	e7b2      	b.n	900094aa <HAL_JPEG_GetInfo.part.0+0xa2>
90009544:	2410      	movs	r4, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009546:	685a      	ldr	r2, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90009548:	f8c9 4000 	str.w	r4, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000954c:	0c12      	lsrs	r2, r2, #16
9000954e:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009552:	68da      	ldr	r2, [r3, #12]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
90009554:	691d      	ldr	r5, [r3, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
90009556:	695f      	ldr	r7, [r3, #20]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009558:	0c12      	lsrs	r2, r2, #16
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
9000955a:	699e      	ldr	r6, [r3, #24]
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000955c:	f017 0ff0 	tst.w	r7, #240	; 0xf0
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009560:	f8c9 200c 	str.w	r2, [r9, #12]
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
90009564:	ea4f 1616 	mov.w	r6, r6, lsr #4
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
90009568:	ea4f 1215 	mov.w	r2, r5, lsr #4
9000956c:	f3c5 1503 	ubfx	r5, r5, #4, #4
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
90009570:	ea4f 1c17 	mov.w	ip, r7, lsr #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90009574:	d108      	bne.n	90009588 <HAL_JPEG_GetInfo.part.0+0x180>
90009576:	2d01      	cmp	r5, #1
90009578:	d106      	bne.n	90009588 <HAL_JPEG_GetInfo.part.0+0x180>
9000957a:	f016 0f0f 	tst.w	r6, #15
9000957e:	bf0c      	ite	eq
90009580:	2401      	moveq	r4, #1
90009582:	2400      	movne	r4, #0
90009584:	0064      	lsls	r4, r4, #1
90009586:	e754      	b.n	90009432 <HAL_JPEG_GetInfo.part.0+0x2a>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90009588:	ea42 020c 	orr.w	r2, r2, ip
9000958c:	f012 040f 	ands.w	r4, r2, #15
90009590:	f43f af4f 	beq.w	90009432 <HAL_JPEG_GetInfo.part.0+0x2a>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90009594:	ea4c 0206 	orr.w	r2, ip, r6
90009598:	f3c2 0203 	ubfx	r2, r2, #0, #4
9000959c:	2d03      	cmp	r5, #3
9000959e:	bf08      	it	eq
900095a0:	2a00      	cmpeq	r2, #0
900095a2:	bf0c      	ite	eq
900095a4:	2401      	moveq	r4, #1
900095a6:	2400      	movne	r4, #0
900095a8:	e743      	b.n	90009432 <HAL_JPEG_GetInfo.part.0+0x2a>
    return HAL_ERROR;
900095aa:	2001      	movs	r0, #1
}
900095ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900095b0:	9002a1a4 	.word	0x9002a1a4

900095b4 <HAL_JPEG_Init>:
  if (hjpeg == NULL)
900095b4:	2800      	cmp	r0, #0
900095b6:	f000 810b 	beq.w	900097d0 <HAL_JPEG_Init+0x21c>
{
900095ba:	b570      	push	{r4, r5, r6, lr}
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
900095bc:	f890 304d 	ldrb.w	r3, [r0, #77]	; 0x4d
900095c0:	4604      	mov	r4, r0
900095c2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
900095c6:	2b00      	cmp	r3, #0
900095c8:	f000 80fd 	beq.w	900097c6 <HAL_JPEG_Init+0x212>
  __HAL_JPEG_ENABLE(hjpeg);
900095cc:	6822      	ldr	r2, [r4, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
900095ce:	2102      	movs	r1, #2
  hjpeg->QuantTable2 = NULL;
900095d0:	2300      	movs	r3, #0
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
900095d2:	4880      	ldr	r0, [pc, #512]	; (900097d4 <HAL_JPEG_Init+0x220>)
  hjpeg->State = HAL_JPEG_STATE_BUSY;
900095d4:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
900095d8:	6b11      	ldr	r1, [r2, #48]	; 0x30
900095da:	f041 0101 	orr.w	r1, r1, #1
900095de:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
900095e0:	6811      	ldr	r1, [r2, #0]
900095e2:	f021 0101 	bic.w	r1, r1, #1
900095e6:	6011      	str	r1, [r2, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
900095e8:	6b11      	ldr	r1, [r2, #48]	; 0x30
900095ea:	f021 017e 	bic.w	r1, r1, #126	; 0x7e
900095ee:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
900095f0:	6b11      	ldr	r1, [r2, #48]	; 0x30
900095f2:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
900095f6:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
900095f8:	6b11      	ldr	r1, [r2, #48]	; 0x30
900095fa:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
900095fe:	6311      	str	r1, [r2, #48]	; 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90009600:	6b91      	ldr	r1, [r2, #56]	; 0x38
90009602:	f041 0160 	orr.w	r1, r1, #96	; 0x60
90009606:	6391      	str	r1, [r2, #56]	; 0x38
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
90009608:	4973      	ldr	r1, [pc, #460]	; (900097d8 <HAL_JPEG_Init+0x224>)
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
9000960a:	63e0      	str	r0, [r4, #60]	; 0x3c
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000960c:	2001      	movs	r0, #1
  hjpeg->QuantTable3 = NULL;
9000960e:	64a3      	str	r3, [r4, #72]	; 0x48
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
90009610:	e9c4 1310 	strd	r1, r3, [r4, #64]	; 0x40
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009614:	f8c2 336c 	str.w	r3, [r2, #876]	; 0x36c
90009618:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
9000961c:	4b6f      	ldr	r3, [pc, #444]	; (900097dc <HAL_JPEG_Init+0x228>)
9000961e:	f8c2 0368 	str.w	r0, [r2, #872]	; 0x368
90009622:	f8c2 1364 	str.w	r1, [r2, #868]	; 0x364
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009626:	486e      	ldr	r0, [pc, #440]	; (900097e0 <HAL_JPEG_Init+0x22c>)
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009628:	f8c2 3360 	str.w	r3, [r2, #864]	; 0x360
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000962c:	4b6d      	ldr	r3, [pc, #436]	; (900097e4 <HAL_JPEG_Init+0x230>)
9000962e:	f8c2 0378 	str.w	r0, [r2, #888]	; 0x378
90009632:	496d      	ldr	r1, [pc, #436]	; (900097e8 <HAL_JPEG_Init+0x234>)
90009634:	f8c2 3374 	str.w	r3, [r2, #884]	; 0x374
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009638:	4b6c      	ldr	r3, [pc, #432]	; (900097ec <HAL_JPEG_Init+0x238>)
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000963a:	f8c2 1370 	str.w	r1, [r2, #880]	; 0x370
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000963e:	486c      	ldr	r0, [pc, #432]	; (900097f0 <HAL_JPEG_Init+0x23c>)
90009640:	f8c2 3388 	str.w	r3, [r2, #904]	; 0x388
90009644:	496b      	ldr	r1, [pc, #428]	; (900097f4 <HAL_JPEG_Init+0x240>)
90009646:	4b6c      	ldr	r3, [pc, #432]	; (900097f8 <HAL_JPEG_Init+0x244>)
90009648:	f8c2 0384 	str.w	r0, [r2, #900]	; 0x384
9000964c:	f8c2 1380 	str.w	r1, [r2, #896]	; 0x380
90009650:	f8c2 337c 	str.w	r3, [r2, #892]	; 0x37c
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
90009654:	f64f 23f9 	movw	r3, #64249	; 0xfaf9
  value = *address & 0xFFFF0000U;
90009658:	f8d2 042c 	ldr.w	r0, [r2, #1068]	; 0x42c
9000965c:	4967      	ldr	r1, [pc, #412]	; (900097fc <HAL_JPEG_Init+0x248>)
9000965e:	4001      	ands	r1, r0
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
90009660:	f502 6085 	add.w	r0, r2, #1064	; 0x428
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
90009664:	430b      	orrs	r3, r1
  *address = value;
90009666:	4966      	ldr	r1, [pc, #408]	; (90009800 <HAL_JPEG_Init+0x24c>)
90009668:	f1a1 06a0 	sub.w	r6, r1, #160	; 0xa0
9000966c:	f8c2 342c 	str.w	r3, [r2, #1068]	; 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
90009670:	f891 30ae 	ldrb.w	r3, [r1, #174]	; 0xae
  while (index > 3UL)
90009674:	3904      	subs	r1, #4
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009676:	f891 e0b3 	ldrb.w	lr, [r1, #179]	; 0xb3
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000967a:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
9000967c:	f891 c0b0 	ldrb.w	ip, [r1, #176]	; 0xb0
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
90009680:	f891 50b1 	ldrb.w	r5, [r1, #177]	; 0xb1
  while (index > 3UL)
90009684:	42b1      	cmp	r1, r6
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009686:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
9000968a:	ea43 030c 	orr.w	r3, r3, ip
9000968e:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009692:	f840 3904 	str.w	r3, [r0], #-4
  while (index > 3UL)
90009696:	d1eb      	bne.n	90009670 <HAL_JPEG_Init+0xbc>
  value = *address & 0x0000FFFFU;
90009698:	f8d2 342c 	ldr.w	r3, [r2, #1068]	; 0x42c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000969c:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
  value = *address & 0xFFFF0000U;
900096a0:	4856      	ldr	r0, [pc, #344]	; (900097fc <HAL_JPEG_Init+0x248>)
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
900096a2:	2501      	movs	r5, #1
  value = *address & 0x0000FFFFU;
900096a4:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->Bits[0] & 0xFFUL) << 16);
900096a6:	f043 7340 	orr.w	r3, r3, #50331648	; 0x3000000
  *address = value;
900096aa:	f8c2 342c 	str.w	r3, [r2, #1068]	; 0x42c
  value = *address & 0xFFFF0000U;
900096ae:	f8d2 343c 	ldr.w	r3, [r2, #1084]	; 0x43c
900096b2:	4003      	ands	r3, r0
  *address = value;
900096b4:	f8c2 343c 	str.w	r3, [r2, #1084]	; 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
900096b8:	f8c2 5438 	str.w	r5, [r2, #1080]	; 0x438
900096bc:	f8c2 1434 	str.w	r1, [r2, #1076]	; 0x434
900096c0:	f8c2 1430 	str.w	r1, [r2, #1072]	; 0x430
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
900096c4:	f640 310a 	movw	r1, #2826	; 0xb0a
  value = *address & 0x0000FFFFUL;
900096c8:	f8d2 343c 	ldr.w	r3, [r2, #1084]	; 0x43c
900096cc:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->HuffVal[0] & 0xFFUL) <<
900096ce:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  *address = value;
900096d2:	f8c2 343c 	str.w	r3, [r2, #1084]	; 0x43c
  value = *address & 0xFFFF0000UL;
900096d6:	f8d2 3448 	ldr.w	r3, [r2, #1096]	; 0x448
900096da:	4003      	ands	r3, r0
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
900096dc:	4319      	orrs	r1, r3
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
900096de:	4b49      	ldr	r3, [pc, #292]	; (90009804 <HAL_JPEG_Init+0x250>)
  *address = value;
900096e0:	f8c2 1448 	str.w	r1, [r2, #1096]	; 0x448
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
900096e4:	f247 7102 	movw	r1, #30466	; 0x7702
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
900096e8:	f8c2 3444 	str.w	r3, [r2, #1092]	; 0x444
900096ec:	f1a3 3304 	sub.w	r3, r3, #67372036	; 0x4040404
900096f0:	f8c2 3440 	str.w	r3, [r2, #1088]	; 0x440
  value = *address & 0x0000FFFFU;
900096f4:	f8d2 3448 	ldr.w	r3, [r2, #1096]	; 0x448
900096f8:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->Bits[0] & 0xFFUL) << 16);
900096fa:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
  *address = value;
900096fe:	f8c2 3448 	str.w	r3, [r2, #1096]	; 0x448
  value = *address & 0xFFFF0000U;
90009702:	f8d2 3458 	ldr.w	r3, [r2, #1112]	; 0x458
90009706:	4003      	ands	r3, r0
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009708:	483f      	ldr	r0, [pc, #252]	; (90009808 <HAL_JPEG_Init+0x254>)
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
9000970a:	4319      	orrs	r1, r3
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000970c:	4b3f      	ldr	r3, [pc, #252]	; (9000980c <HAL_JPEG_Init+0x258>)
  *address = value;
9000970e:	f8c2 1458 	str.w	r1, [r2, #1112]	; 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009712:	493f      	ldr	r1, [pc, #252]	; (90009810 <HAL_JPEG_Init+0x25c>)
90009714:	f8c2 0454 	str.w	r0, [r2, #1108]	; 0x454
  address = (hjpeg->Instance->DHTMEM + 102);
90009718:	f502 609f 	add.w	r0, r2, #1272	; 0x4f8
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000971c:	f8c2 1450 	str.w	r1, [r2, #1104]	; 0x450
90009720:	f8c2 344c 	str.w	r3, [r2, #1100]	; 0x44c
  value = *address & 0x0000FFFFUL;
90009724:	f8d2 3458 	ldr.w	r3, [r2, #1112]	; 0x458
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
90009728:	493a      	ldr	r1, [pc, #232]	; (90009814 <HAL_JPEG_Init+0x260>)
  value = *address & 0x0000FFFFUL;
9000972a:	b29b      	uxth	r3, r3
9000972c:	f1a1 06a0 	sub.w	r6, r1, #160	; 0xa0
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
90009730:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  *address = value;
90009734:	f8c2 3458 	str.w	r3, [r2, #1112]	; 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
90009738:	f891 30b0 	ldrb.w	r3, [r1, #176]	; 0xb0
  while (index > 3UL)
9000973c:	3904      	subs	r1, #4
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000973e:	f891 50b5 	ldrb.w	r5, [r1, #181]	; 0xb5
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
90009742:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
90009744:	f891 e0b2 	ldrb.w	lr, [r1, #178]	; 0xb2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
90009748:	f891 c0b3 	ldrb.w	ip, [r1, #179]	; 0xb3
  while (index > 3UL)
9000974c:	42b1      	cmp	r1, r6
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
9000974e:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
90009752:	ea43 030e 	orr.w	r3, r3, lr
90009756:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000975a:	f840 3904 	str.w	r3, [r0], #-4
  while (index > 3UL)
9000975e:	d1eb      	bne.n	90009738 <HAL_JPEG_Init+0x184>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
90009760:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
90009764:	4926      	ldr	r1, [pc, #152]	; (90009800 <HAL_JPEG_Init+0x24c>)
90009766:	4620      	mov	r0, r4
90009768:	f7ff fd3a 	bl	900091e0 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
9000976c:	b118      	cbz	r0, 90009776 <HAL_JPEG_Init+0x1c2>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
9000976e:	2301      	movs	r3, #1
    return HAL_ERROR;
90009770:	4618      	mov	r0, r3
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
90009772:	6523      	str	r3, [r4, #80]	; 0x50
}
90009774:	bd70      	pop	{r4, r5, r6, pc}
                              (hjpeg->Instance->HUFFENC_AC1));
90009776:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
90009778:	4620      	mov	r0, r4
9000977a:	4926      	ldr	r1, [pc, #152]	; (90009814 <HAL_JPEG_Init+0x260>)
9000977c:	f502 62cc 	add.w	r2, r2, #1632	; 0x660
90009780:	f7ff fd2e 	bl	900091e0 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
90009784:	2800      	cmp	r0, #0
90009786:	d1f2      	bne.n	9000976e <HAL_JPEG_Init+0x1ba>
                              hjpeg->Instance->HUFFENC_DC0);
90009788:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
9000978a:	4620      	mov	r0, r4
9000978c:	4922      	ldr	r1, [pc, #136]	; (90009818 <HAL_JPEG_Init+0x264>)
9000978e:	f502 62f8 	add.w	r2, r2, #1984	; 0x7c0
90009792:	f7ff fc7b 	bl	9000908c <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
90009796:	2800      	cmp	r0, #0
90009798:	d1e9      	bne.n	9000976e <HAL_JPEG_Init+0x1ba>
                              hjpeg->Instance->HUFFENC_DC1);
9000979a:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
9000979c:	4620      	mov	r0, r4
9000979e:	491f      	ldr	r1, [pc, #124]	; (9000981c <HAL_JPEG_Init+0x268>)
900097a0:	f502 62fc 	add.w	r2, r2, #2016	; 0x7e0
900097a4:	f7ff fc72 	bl	9000908c <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
900097a8:	2800      	cmp	r0, #0
900097aa:	d1e0      	bne.n	9000976e <HAL_JPEG_Init+0x1ba>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
900097ac:	6822      	ldr	r2, [r4, #0]
  hjpeg->State = HAL_JPEG_STATE_READY;
900097ae:	2101      	movs	r1, #1
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
900097b0:	6853      	ldr	r3, [r2, #4]
900097b2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
900097b6:	6053      	str	r3, [r2, #4]
  hjpeg->JpegInCount = 0;
900097b8:	6220      	str	r0, [r4, #32]
  hjpeg->JpegOutCount = 0;
900097ba:	6260      	str	r0, [r4, #36]	; 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
900097bc:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
900097c0:	6520      	str	r0, [r4, #80]	; 0x50
  hjpeg->Context = 0;
900097c2:	6560      	str	r0, [r4, #84]	; 0x54
}
900097c4:	bd70      	pop	{r4, r5, r6, pc}
    hjpeg->Lock = HAL_UNLOCKED;
900097c6:	f880 204c 	strb.w	r2, [r0, #76]	; 0x4c
    HAL_JPEG_MspInit(hjpeg);
900097ca:	f7f9 fd5b 	bl	90003284 <HAL_JPEG_MspInit>
900097ce:	e6fd      	b.n	900095cc <HAL_JPEG_Init+0x18>
    return HAL_ERROR;
900097d0:	2001      	movs	r0, #1
}
900097d2:	4770      	bx	lr
900097d4:	9002a164 	.word	0x9002a164
900097d8:	9002a0ec 	.word	0x9002a0ec
900097dc:	01050100 	.word	0x01050100
900097e0:	0b0a0908 	.word	0x0b0a0908
900097e4:	07060504 	.word	0x07060504
900097e8:	03020100 	.word	0x03020100
900097ec:	7d010000 	.word	0x7d010000
900097f0:	04040505 	.word	0x04040505
900097f4:	03040203 	.word	0x03040203
900097f8:	03010200 	.word	0x03010200
900097fc:	ffff0000 	.word	0xffff0000
90009800:	9002a038 	.word	0x9002a038
90009804:	09080706 	.word	0x09080706
90009808:	01000404 	.word	0x01000404
9000980c:	04040201 	.word	0x04040201
90009810:	05070403 	.word	0x05070403
90009814:	90029f84 	.word	0x90029f84
90009818:	9002a148 	.word	0x9002a148
9000981c:	9002a12c 	.word	0x9002a12c

90009820 <HAL_JPEG_Decode_DMA>:
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
90009820:	2b00      	cmp	r3, #0
90009822:	bf18      	it	ne
90009824:	2900      	cmpne	r1, #0
90009826:	d03b      	beq.n	900098a0 <HAL_JPEG_Decode_DMA+0x80>
{
90009828:	b570      	push	{r4, r5, r6, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
9000982a:	fab0 f580 	clz	r5, r0
9000982e:	4604      	mov	r4, r0
90009830:	096d      	lsrs	r5, r5, #5
90009832:	b330      	cbz	r0, 90009882 <HAL_JPEG_Decode_DMA+0x62>
  __HAL_LOCK(hjpeg);
90009834:	f890 c04c 	ldrb.w	ip, [r0, #76]	; 0x4c
90009838:	f1bc 0f01 	cmp.w	ip, #1
9000983c:	d02e      	beq.n	9000989c <HAL_JPEG_Decode_DMA+0x7c>
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000983e:	f890 c04d 	ldrb.w	ip, [r0, #77]	; 0x4d
  __HAL_LOCK(hjpeg);
90009842:	f04f 0e01 	mov.w	lr, #1
  if (hjpeg->State == HAL_JPEG_STATE_READY)
90009846:	45f4      	cmp	ip, lr
90009848:	fa5f f68c 	uxtb.w	r6, ip
  __HAL_LOCK(hjpeg);
9000984c:	f880 e04c 	strb.w	lr, [r0, #76]	; 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
90009850:	d119      	bne.n	90009886 <HAL_JPEG_Decode_DMA+0x66>
    hjpeg->InDataLength = InDataLength;
90009852:	6282      	str	r2, [r0, #40]	; 0x28
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
90009854:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->OutDataLength = OutDataLength;
90009858:	9b04      	ldr	r3, [sp, #16]
9000985a:	62c3      	str	r3, [r0, #44]	; 0x2c
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
9000985c:	2304      	movs	r3, #4
9000985e:	f880 304d 	strb.w	r3, [r0, #77]	; 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
90009862:	6d43      	ldr	r3, [r0, #84]	; 0x54
90009864:	f023 030f 	bic.w	r3, r3, #15
90009868:	6543      	str	r3, [r0, #84]	; 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
9000986a:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000986c:	f043 030e 	orr.w	r3, r3, #14
90009870:	6543      	str	r3, [r0, #84]	; 0x54
    hjpeg->JpegInCount = 0;
90009872:	6205      	str	r5, [r0, #32]
    hjpeg->JpegOutCount = 0;
90009874:	6245      	str	r5, [r0, #36]	; 0x24
    JPEG_Init_Process(hjpeg);
90009876:	f7ff fd3d 	bl	900092f4 <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
9000987a:	f7ff fd79 	bl	90009370 <JPEG_DMA_StartProcess>
9000987e:	b930      	cbnz	r0, 9000988e <HAL_JPEG_Decode_DMA+0x6e>
}
90009880:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
90009882:	2001      	movs	r0, #1
}
90009884:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_BUSY;
90009886:	2002      	movs	r0, #2
    __HAL_UNLOCK(hjpeg);
90009888:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
}
9000988c:	bd70      	pop	{r4, r5, r6, pc}
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000988e:	2306      	movs	r3, #6
      return HAL_ERROR;
90009890:	4630      	mov	r0, r6
      __HAL_UNLOCK(hjpeg);
90009892:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90009896:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
}
9000989a:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hjpeg);
9000989c:	2002      	movs	r0, #2
}
9000989e:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
900098a0:	2001      	movs	r0, #1
}
900098a2:	4770      	bx	lr

900098a4 <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
900098a4:	6d43      	ldr	r3, [r0, #84]	; 0x54
900098a6:	f003 030c 	and.w	r3, r3, #12
900098aa:	2b0c      	cmp	r3, #12
900098ac:	d01a      	beq.n	900098e4 <HAL_JPEG_Pause+0x40>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
900098ae:	6d43      	ldr	r3, [r0, #84]	; 0x54
900098b0:	f003 030c 	and.w	r3, r3, #12
900098b4:	2b08      	cmp	r3, #8
900098b6:	d001      	beq.n	900098bc <HAL_JPEG_Pause+0x18>
}
900098b8:	2000      	movs	r0, #0
900098ba:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
900098bc:	07ca      	lsls	r2, r1, #31
900098be:	d41f      	bmi.n	90009900 <HAL_JPEG_Pause+0x5c>
900098c0:	f04f 3cff 	mov.w	ip, #4294967295
900098c4:	f06f 0228 	mvn.w	r2, #40	; 0x28
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
900098c8:	078b      	lsls	r3, r1, #30
900098ca:	d504      	bpl.n	900098d6 <HAL_JPEG_Pause+0x32>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
900098cc:	6d43      	ldr	r3, [r0, #84]	; 0x54
900098ce:	4694      	mov	ip, r2
900098d0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
900098d4:	6543      	str	r3, [r0, #84]	; 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
900098d6:	6802      	ldr	r2, [r0, #0]
}
900098d8:	2000      	movs	r0, #0
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
900098da:	6b13      	ldr	r3, [r2, #48]	; 0x30
900098dc:	ea03 030c 	and.w	r3, r3, ip
900098e0:	6313      	str	r3, [r2, #48]	; 0x30
}
900098e2:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
900098e4:	07cb      	lsls	r3, r1, #31
900098e6:	d503      	bpl.n	900098f0 <HAL_JPEG_Pause+0x4c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
900098e8:	6d43      	ldr	r3, [r0, #84]	; 0x54
900098ea:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
900098ee:	6543      	str	r3, [r0, #84]	; 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
900098f0:	0789      	lsls	r1, r1, #30
900098f2:	d5e1      	bpl.n	900098b8 <HAL_JPEG_Pause+0x14>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
900098f4:	6d43      	ldr	r3, [r0, #84]	; 0x54
900098f6:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
900098fa:	6543      	str	r3, [r0, #84]	; 0x54
}
900098fc:	2000      	movs	r0, #0
900098fe:	4770      	bx	lr
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009900:	6d43      	ldr	r3, [r0, #84]	; 0x54
90009902:	f06f 0c06 	mvn.w	ip, #6
90009906:	f06f 022e 	mvn.w	r2, #46	; 0x2e
9000990a:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000990e:	6543      	str	r3, [r0, #84]	; 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
90009910:	e7da      	b.n	900098c8 <HAL_JPEG_Pause+0x24>
90009912:	bf00      	nop

90009914 <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
90009914:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
90009916:	6282      	str	r2, [r0, #40]	; 0x28
}
90009918:	4770      	bx	lr
9000991a:	bf00      	nop

9000991c <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
9000991c:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
9000991e:	62c2      	str	r2, [r0, #44]	; 0x2c
}
90009920:	4770      	bx	lr
90009922:	bf00      	nop

90009924 <HAL_JPEG_EncodeCpltCallback>:
90009924:	4770      	bx	lr
90009926:	bf00      	nop

90009928 <JPEG_MDMAErrorCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90009928:	6c00      	ldr	r0, [r0, #64]	; 0x40
  hjpeg->State = HAL_JPEG_STATE_READY;
9000992a:	2101      	movs	r1, #1
{
9000992c:	b508      	push	{r3, lr}
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000992e:	6803      	ldr	r3, [r0, #0]
90009930:	681a      	ldr	r2, [r3, #0]
90009932:	f022 0201 	bic.w	r2, r2, #1
90009936:	601a      	str	r2, [r3, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009938:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000993a:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000993e:	631a      	str	r2, [r3, #48]	; 0x30
  hjpeg->State = HAL_JPEG_STATE_READY;
90009940:	f880 104d 	strb.w	r1, [r0, #77]	; 0x4d
  hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009944:	6d03      	ldr	r3, [r0, #80]	; 0x50
90009946:	f043 0304 	orr.w	r3, r3, #4
9000994a:	6503      	str	r3, [r0, #80]	; 0x50
  HAL_JPEG_ErrorCallback(hjpeg);
9000994c:	f7f7 ffb2 	bl	900018b4 <HAL_JPEG_ErrorCallback>
}
90009950:	bd08      	pop	{r3, pc}
90009952:	bf00      	nop

90009954 <JPEG_MDMAInCpltCallback>:
{
90009954:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90009956:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
90009958:	f248 010c 	movw	r1, #32780	; 0x800c
{
9000995c:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000995e:	6822      	ldr	r2, [r4, #0]
90009960:	6b13      	ldr	r3, [r2, #48]	; 0x30
90009962:	f023 037e 	bic.w	r3, r3, #126	; 0x7e
90009966:	6313      	str	r3, [r2, #48]	; 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
90009968:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000996a:	400b      	ands	r3, r1
9000996c:	2b0c      	cmp	r3, #12
9000996e:	d001      	beq.n	90009974 <JPEG_MDMAInCpltCallback+0x20>
}
90009970:	b003      	add	sp, #12
90009972:	bd30      	pop	{r4, r5, pc}
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009974:	6802      	ldr	r2, [r0, #0]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90009976:	4620      	mov	r0, r4
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009978:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000997a:	6952      	ldr	r2, [r2, #20]
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000997c:	6b21      	ldr	r1, [r4, #48]	; 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000997e:	f3c2 0210 	ubfx	r2, r2, #0, #17
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009982:	6a8d      	ldr	r5, [r1, #40]	; 0x28
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009984:	1a9b      	subs	r3, r3, r2
90009986:	6223      	str	r3, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90009988:	6a21      	ldr	r1, [r4, #32]
9000998a:	f7f7 ff1f 	bl	900017cc <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= inXfrSize)
9000998e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
90009990:	42ab      	cmp	r3, r5
90009992:	d311      	bcc.n	900099b8 <JPEG_MDMAInCpltCallback+0x64>
      if (inXfrSize == 0UL)
90009994:	b305      	cbz	r5, 900099d8 <JPEG_MDMAInCpltCallback+0x84>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90009996:	fbb3 f2f5 	udiv	r2, r3, r5
9000999a:	fb05 3212 	mls	r2, r5, r2, r3
9000999e:	1a9b      	subs	r3, r3, r2
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
900099a0:	6d62      	ldr	r2, [r4, #84]	; 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
900099a2:	62a3      	str	r3, [r4, #40]	; 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
900099a4:	04d1      	lsls	r1, r2, #19
900099a6:	d400      	bmi.n	900099aa <JPEG_MDMAInCpltCallback+0x56>
900099a8:	b963      	cbnz	r3, 900099c4 <JPEG_MDMAInCpltCallback+0x70>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
900099aa:	6822      	ldr	r2, [r4, #0]
900099ac:	6b13      	ldr	r3, [r2, #48]	; 0x30
900099ae:	f043 0360 	orr.w	r3, r3, #96	; 0x60
900099b2:	6313      	str	r3, [r2, #48]	; 0x30
}
900099b4:	b003      	add	sp, #12
900099b6:	bd30      	pop	{r4, r5, pc}
    else if (hjpeg->InDataLength > 0UL)
900099b8:	b1cb      	cbz	r3, 900099ee <JPEG_MDMAInCpltCallback+0x9a>
      if ((hjpeg->InDataLength % 4UL) != 0UL)
900099ba:	0798      	lsls	r0, r3, #30
900099bc:	d119      	bne.n	900099f2 <JPEG_MDMAInCpltCallback+0x9e>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
900099be:	6d62      	ldr	r2, [r4, #84]	; 0x54
900099c0:	04d2      	lsls	r2, r2, #19
900099c2:	d4f2      	bmi.n	900099aa <JPEG_MDMAInCpltCallback+0x56>
      if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
900099c4:	6822      	ldr	r2, [r4, #0]
900099c6:	2501      	movs	r5, #1
900099c8:	69a1      	ldr	r1, [r4, #24]
900099ca:	6b20      	ldr	r0, [r4, #48]	; 0x30
900099cc:	3240      	adds	r2, #64	; 0x40
900099ce:	9500      	str	r5, [sp, #0]
900099d0:	f001 f8b0 	bl	9000ab34 <HAL_MDMA_Start_IT>
900099d4:	2800      	cmp	r0, #0
900099d6:	d0e8      	beq.n	900099aa <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900099d8:	6d23      	ldr	r3, [r4, #80]	; 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
900099da:	2206      	movs	r2, #6
        HAL_JPEG_ErrorCallback(hjpeg);
900099dc:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900099de:	f043 0304 	orr.w	r3, r3, #4
900099e2:	6523      	str	r3, [r4, #80]	; 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
900099e4:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
900099e8:	f7f7 ff64 	bl	900018b4 <HAL_JPEG_ErrorCallback>
        return;
900099ec:	e7c0      	b.n	90009970 <JPEG_MDMAInCpltCallback+0x1c>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
900099ee:	6d63      	ldr	r3, [r4, #84]	; 0x54
900099f0:	e7db      	b.n	900099aa <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->InDataLength = ((hjpeg->InDataLength / 4UL) + 1UL) * 4UL;
900099f2:	f023 0303 	bic.w	r3, r3, #3
900099f6:	3304      	adds	r3, #4
900099f8:	e7d2      	b.n	900099a0 <JPEG_MDMAInCpltCallback+0x4c>
900099fa:	bf00      	nop

900099fc <JPEG_DMA_PollResidualData>:
{
900099fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
900099fe:	6802      	ldr	r2, [r0, #0]
90009a00:	2610      	movs	r6, #16
{
90009a02:	4604      	mov	r4, r0
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009a04:	6d65      	ldr	r5, [r4, #84]	; 0x54
90009a06:	f415 5500 	ands.w	r5, r5, #8192	; 0x2000
90009a0a:	d11d      	bne.n	90009a48 <JPEG_DMA_PollResidualData+0x4c>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
90009a0c:	6b53      	ldr	r3, [r2, #52]	; 0x34
90009a0e:	06df      	lsls	r7, r3, #27
90009a10:	d51a      	bpl.n	90009a48 <JPEG_DMA_PollResidualData+0x4c>
        dataOut = hjpeg->Instance->DOR;
90009a12:	6c53      	ldr	r3, [r2, #68]	; 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
90009a14:	69e7      	ldr	r7, [r4, #28]
90009a16:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
90009a18:	0a18      	lsrs	r0, r3, #8
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
90009a1a:	0c19      	lsrs	r1, r3, #16
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
90009a1c:	54bb      	strb	r3, [r7, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
90009a1e:	0e1b      	lsrs	r3, r3, #24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
90009a20:	6a67      	ldr	r7, [r4, #36]	; 0x24
90009a22:	69e2      	ldr	r2, [r4, #28]
90009a24:	443a      	add	r2, r7
90009a26:	7050      	strb	r0, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
90009a28:	6a60      	ldr	r0, [r4, #36]	; 0x24
90009a2a:	69e2      	ldr	r2, [r4, #28]
90009a2c:	4402      	add	r2, r0
90009a2e:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
90009a30:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009a32:	69e2      	ldr	r2, [r4, #28]
90009a34:	440a      	add	r2, r1
90009a36:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
90009a38:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90009a3a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
        hjpeg->JpegOutCount += 4UL;
90009a3c:	3304      	adds	r3, #4
90009a3e:	6263      	str	r3, [r4, #36]	; 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90009a40:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009a42:	4293      	cmp	r3, r2
90009a44:	d021      	beq.n	90009a8a <JPEG_DMA_PollResidualData+0x8e>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
90009a46:	6822      	ldr	r2, [r4, #0]
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
90009a48:	3e01      	subs	r6, #1
90009a4a:	d1db      	bne.n	90009a04 <JPEG_DMA_PollResidualData+0x8>
  tmpContext = hjpeg->Context;
90009a4c:	6d61      	ldr	r1, [r4, #84]	; 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
90009a4e:	6b53      	ldr	r3, [r2, #52]	; 0x34
90009a50:	06d8      	lsls	r0, r3, #27
90009a52:	d501      	bpl.n	90009a58 <JPEG_DMA_PollResidualData+0x5c>
90009a54:	048b      	lsls	r3, r1, #18
90009a56:	d417      	bmi.n	90009a88 <JPEG_DMA_PollResidualData+0x8c>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009a58:	6813      	ldr	r3, [r2, #0]
90009a5a:	f023 0301 	bic.w	r3, r3, #1
90009a5e:	6013      	str	r3, [r2, #0]
    if (hjpeg->JpegOutCount > 0UL)
90009a60:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009a62:	b9eb      	cbnz	r3, 90009aa0 <JPEG_DMA_PollResidualData+0xa4>
    tmpContext = hjpeg->Context;
90009a64:	6d63      	ldr	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hjpeg);
90009a66:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009a68:	6d62      	ldr	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009a6a:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009a6c:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
90009a70:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009a74:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009a78:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009a7a:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009a7c:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009a7e:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009a82:	d00a      	beq.n	90009a9a <JPEG_DMA_PollResidualData+0x9e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
90009a84:	f7ff ff4e 	bl	90009924 <HAL_JPEG_EncodeCpltCallback>
}
90009a88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009a8a:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009a8c:	4620      	mov	r0, r4
90009a8e:	69e1      	ldr	r1, [r4, #28]
90009a90:	f7f7 febc 	bl	9000180c <HAL_JPEG_DataReadyCallback>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
90009a94:	6822      	ldr	r2, [r4, #0]
          hjpeg->JpegOutCount = 0;
90009a96:	6265      	str	r5, [r4, #36]	; 0x24
90009a98:	e7d6      	b.n	90009a48 <JPEG_DMA_PollResidualData+0x4c>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009a9a:	f7f7 ff0d 	bl	900018b8 <HAL_JPEG_DecodeCpltCallback>
}
90009a9e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009aa0:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009aa2:	4620      	mov	r0, r4
90009aa4:	69e1      	ldr	r1, [r4, #28]
90009aa6:	f7f7 feb1 	bl	9000180c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
90009aaa:	2300      	movs	r3, #0
90009aac:	6263      	str	r3, [r4, #36]	; 0x24
90009aae:	e7d9      	b.n	90009a64 <JPEG_DMA_PollResidualData+0x68>

90009ab0 <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
90009ab0:	6d43      	ldr	r3, [r0, #84]	; 0x54
90009ab2:	f413 5f40 	tst.w	r3, #12288	; 0x3000
90009ab6:	d028      	beq.n	90009b0a <HAL_JPEG_Resume+0x5a>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009ab8:	6d43      	ldr	r3, [r0, #84]	; 0x54
90009aba:	f003 030c 	and.w	r3, r3, #12
90009abe:	2b0c      	cmp	r3, #12
{
90009ac0:	b570      	push	{r4, r5, r6, lr}
90009ac2:	4604      	mov	r4, r0
90009ac4:	b082      	sub	sp, #8
90009ac6:	460d      	mov	r5, r1
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009ac8:	d007      	beq.n	90009ada <HAL_JPEG_Resume+0x2a>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009aca:	6d43      	ldr	r3, [r0, #84]	; 0x54
90009acc:	f003 030c 	and.w	r3, r3, #12
90009ad0:	2b08      	cmp	r3, #8
90009ad2:	d037      	beq.n	90009b44 <HAL_JPEG_Resume+0x94>
  return HAL_OK;
90009ad4:	2000      	movs	r0, #0
}
90009ad6:	b002      	add	sp, #8
90009ad8:	bd70      	pop	{r4, r5, r6, pc}
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90009ada:	07c8      	lsls	r0, r1, #31
90009adc:	d417      	bmi.n	90009b0e <HAL_JPEG_Resume+0x5e>
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90009ade:	07a9      	lsls	r1, r5, #30
90009ae0:	d5f8      	bpl.n	90009ad4 <HAL_JPEG_Resume+0x24>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
90009ae2:	6d63      	ldr	r3, [r4, #84]	; 0x54
90009ae4:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
90009ae8:	6563      	str	r3, [r4, #84]	; 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
90009aea:	6d63      	ldr	r3, [r4, #84]	; 0x54
90009aec:	041a      	lsls	r2, r3, #16
90009aee:	d453      	bmi.n	90009b98 <HAL_JPEG_Resume+0xe8>
        xfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
90009af0:	6b60      	ldr	r0, [r4, #52]	; 0x34
90009af2:	6a82      	ldr	r2, [r0, #40]	; 0x28
        if (xfrSize == 0UL)
90009af4:	2a00      	cmp	r2, #0
90009af6:	d13e      	bne.n	90009b76 <HAL_JPEG_Resume+0xc6>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009af8:	6d23      	ldr	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
90009afa:	2206      	movs	r2, #6
          return HAL_ERROR;
90009afc:	2001      	movs	r0, #1
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009afe:	f043 0304 	orr.w	r3, r3, #4
90009b02:	6523      	str	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
90009b04:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
          return HAL_ERROR;
90009b08:	e7e5      	b.n	90009ad6 <HAL_JPEG_Resume+0x26>
    return HAL_ERROR;
90009b0a:	2001      	movs	r0, #1
}
90009b0c:	4770      	bx	lr
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90009b0e:	6d63      	ldr	r3, [r4, #84]	; 0x54
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009b10:	6b20      	ldr	r0, [r4, #48]	; 0x30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90009b12:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009b16:	6a82      	ldr	r2, [r0, #40]	; 0x28
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90009b18:	6563      	str	r3, [r4, #84]	; 0x54
      if (xfrSize == 0UL)
90009b1a:	2a00      	cmp	r2, #0
90009b1c:	d0ec      	beq.n	90009af8 <HAL_JPEG_Resume+0x48>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % xfrSize);
90009b1e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
90009b20:	fbb3 f1f2 	udiv	r1, r3, r2
90009b24:	fb02 3211 	mls	r2, r2, r1, r3
90009b28:	1a9b      	subs	r3, r3, r2
90009b2a:	62a3      	str	r3, [r4, #40]	; 0x28
      if (hjpeg->InDataLength > 0UL)
90009b2c:	2b00      	cmp	r3, #0
90009b2e:	d0d6      	beq.n	90009ade <HAL_JPEG_Resume+0x2e>
        if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
90009b30:	6822      	ldr	r2, [r4, #0]
90009b32:	2601      	movs	r6, #1
90009b34:	3240      	adds	r2, #64	; 0x40
90009b36:	9600      	str	r6, [sp, #0]
90009b38:	69a1      	ldr	r1, [r4, #24]
90009b3a:	f000 fffb 	bl	9000ab34 <HAL_MDMA_Start_IT>
90009b3e:	2800      	cmp	r0, #0
90009b40:	d0cd      	beq.n	90009ade <HAL_JPEG_Resume+0x2e>
90009b42:	e7d9      	b.n	90009af8 <HAL_JPEG_Resume+0x48>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90009b44:	f011 0101 	ands.w	r1, r1, #1
90009b48:	d013      	beq.n	90009b72 <HAL_JPEG_Resume+0xc2>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90009b4a:	6d43      	ldr	r3, [r0, #84]	; 0x54
90009b4c:	222e      	movs	r2, #46	; 0x2e
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
90009b4e:	2106      	movs	r1, #6
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90009b50:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
90009b54:	6543      	str	r3, [r0, #84]	; 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90009b56:	07ab      	lsls	r3, r5, #30
90009b58:	d504      	bpl.n	90009b64 <HAL_JPEG_Resume+0xb4>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
90009b5a:	6d63      	ldr	r3, [r4, #84]	; 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
90009b5c:	4611      	mov	r1, r2
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
90009b5e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
90009b62:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
90009b64:	6822      	ldr	r2, [r4, #0]
  return HAL_OK;
90009b66:	2000      	movs	r0, #0
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
90009b68:	6b13      	ldr	r3, [r2, #48]	; 0x30
90009b6a:	430b      	orrs	r3, r1
90009b6c:	6313      	str	r3, [r2, #48]	; 0x30
}
90009b6e:	b002      	add	sp, #8
90009b70:	bd70      	pop	{r4, r5, r6, pc}
90009b72:	2228      	movs	r2, #40	; 0x28
90009b74:	e7ef      	b.n	90009b56 <HAL_JPEG_Resume+0xa6>
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
90009b76:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009b78:	2501      	movs	r5, #1
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
90009b7a:	fbb3 f1f2 	udiv	r1, r3, r2
90009b7e:	fb02 3211 	mls	r2, r2, r1, r3
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009b82:	6821      	ldr	r1, [r4, #0]
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
90009b84:	1a9b      	subs	r3, r3, r2
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009b86:	3144      	adds	r1, #68	; 0x44
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
90009b88:	62e3      	str	r3, [r4, #44]	; 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009b8a:	9500      	str	r5, [sp, #0]
90009b8c:	69e2      	ldr	r2, [r4, #28]
90009b8e:	f000 ffd1 	bl	9000ab34 <HAL_MDMA_Start_IT>
90009b92:	2800      	cmp	r0, #0
90009b94:	d09e      	beq.n	90009ad4 <HAL_JPEG_Resume+0x24>
90009b96:	e7af      	b.n	90009af8 <HAL_JPEG_Resume+0x48>
        JPEG_DMA_PollResidualData(hjpeg);
90009b98:	4620      	mov	r0, r4
90009b9a:	f7ff ff2f 	bl	900099fc <JPEG_DMA_PollResidualData>
90009b9e:	e799      	b.n	90009ad4 <HAL_JPEG_Resume+0x24>

90009ba0 <JPEG_MDMAOutCpltCallback>:
{
90009ba0:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90009ba2:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
90009ba4:	f248 010c 	movw	r1, #32780	; 0x800c
{
90009ba8:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009baa:	6823      	ldr	r3, [r4, #0]
90009bac:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90009bae:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
90009bb2:	631a      	str	r2, [r3, #48]	; 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
90009bb4:	6d62      	ldr	r2, [r4, #84]	; 0x54
90009bb6:	400a      	ands	r2, r1
90009bb8:	2a0c      	cmp	r2, #12
90009bba:	d001      	beq.n	90009bc0 <JPEG_MDMAOutCpltCallback+0x20>
}
90009bbc:	b003      	add	sp, #12
90009bbe:	bd30      	pop	{r4, r5, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
90009bc0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90009bc2:	0692      	lsls	r2, r2, #26
90009bc4:	d505      	bpl.n	90009bd2 <JPEG_MDMAOutCpltCallback+0x32>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
90009bc6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90009bc8:	f042 0260 	orr.w	r2, r2, #96	; 0x60
90009bcc:	631a      	str	r2, [r3, #48]	; 0x30
}
90009bce:	b003      	add	sp, #12
90009bd0:	bd30      	pop	{r4, r5, pc}
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009bd2:	6802      	ldr	r2, [r0, #0]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009bd4:	4620      	mov	r0, r4
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009bd6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90009bd8:	6952      	ldr	r2, [r2, #20]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009bda:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009bdc:	f3c2 0210 	ubfx	r2, r2, #0, #17
90009be0:	1a9b      	subs	r3, r3, r2
90009be2:	6263      	str	r3, [r4, #36]	; 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009be4:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009be6:	f7f7 fe11 	bl	9000180c <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009bea:	6d63      	ldr	r3, [r4, #84]	; 0x54
90009bec:	049b      	lsls	r3, r3, #18
90009bee:	d501      	bpl.n	90009bf4 <JPEG_MDMAOutCpltCallback+0x54>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
90009bf0:	6823      	ldr	r3, [r4, #0]
90009bf2:	e7e8      	b.n	90009bc6 <JPEG_MDMAOutCpltCallback+0x26>
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009bf4:	6821      	ldr	r1, [r4, #0]
90009bf6:	2501      	movs	r5, #1
90009bf8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90009bfa:	69e2      	ldr	r2, [r4, #28]
90009bfc:	3144      	adds	r1, #68	; 0x44
90009bfe:	6b60      	ldr	r0, [r4, #52]	; 0x34
90009c00:	9500      	str	r5, [sp, #0]
90009c02:	f000 ff97 	bl	9000ab34 <HAL_MDMA_Start_IT>
90009c06:	2800      	cmp	r0, #0
90009c08:	d0f2      	beq.n	90009bf0 <JPEG_MDMAOutCpltCallback+0x50>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009c0a:	6d23      	ldr	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
90009c0c:	2206      	movs	r2, #6
          HAL_JPEG_ErrorCallback(hjpeg);
90009c0e:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009c10:	f043 0304 	orr.w	r3, r3, #4
90009c14:	6523      	str	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
90009c16:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
90009c1a:	f7f7 fe4b 	bl	900018b4 <HAL_JPEG_ErrorCallback>
          return;
90009c1e:	e7cd      	b.n	90009bbc <JPEG_MDMAOutCpltCallback+0x1c>

90009c20 <JPEG_MDMAOutAbortCallback>:
{
90009c20:	b538      	push	{r3, r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90009c22:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
90009c24:	6d63      	ldr	r3, [r4, #84]	; 0x54
90009c26:	041a      	lsls	r2, r3, #16
90009c28:	d400      	bmi.n	90009c2c <JPEG_MDMAOutAbortCallback+0xc>
}
90009c2a:	bd38      	pop	{r3, r4, r5, pc}
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009c2c:	6b63      	ldr	r3, [r4, #52]	; 0x34
90009c2e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90009c30:	681b      	ldr	r3, [r3, #0]
90009c32:	695b      	ldr	r3, [r3, #20]
90009c34:	f3c3 0310 	ubfx	r3, r3, #0, #17
90009c38:	1ad3      	subs	r3, r2, r3
90009c3a:	6263      	str	r3, [r4, #36]	; 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90009c3c:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009c3e:	429a      	cmp	r2, r3
90009c40:	d025      	beq.n	90009c8e <JPEG_MDMAOutAbortCallback+0x6e>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
90009c42:	6822      	ldr	r2, [r4, #0]
90009c44:	6b55      	ldr	r5, [r2, #52]	; 0x34
90009c46:	f015 0510 	ands.w	r5, r5, #16
90009c4a:	d118      	bne.n	90009c7e <JPEG_MDMAOutAbortCallback+0x5e>
    if (hjpeg->JpegOutCount > 0UL)
90009c4c:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009c4e:	bb4b      	cbnz	r3, 90009ca4 <JPEG_MDMAOutAbortCallback+0x84>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009c50:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
90009c52:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
90009c54:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009c56:	f023 0301 	bic.w	r3, r3, #1
90009c5a:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
90009c5c:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009c5e:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009c60:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
90009c64:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009c68:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009c6c:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009c6e:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009c70:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009c72:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009c76:	d012      	beq.n	90009c9e <JPEG_MDMAOutAbortCallback+0x7e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
90009c78:	f7ff fe54 	bl	90009924 <HAL_JPEG_EncodeCpltCallback>
}
90009c7c:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009c7e:	6d63      	ldr	r3, [r4, #84]	; 0x54
90009c80:	049b      	lsls	r3, r3, #18
90009c82:	d4d2      	bmi.n	90009c2a <JPEG_MDMAOutAbortCallback+0xa>
    JPEG_DMA_PollResidualData(hjpeg);
90009c84:	4620      	mov	r0, r4
}
90009c86:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
90009c8a:	f7ff beb7 	b.w	900099fc <JPEG_DMA_PollResidualData>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009c8e:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009c90:	4620      	mov	r0, r4
90009c92:	69e1      	ldr	r1, [r4, #28]
90009c94:	f7f7 fdba 	bl	9000180c <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
90009c98:	2300      	movs	r3, #0
90009c9a:	6263      	str	r3, [r4, #36]	; 0x24
90009c9c:	e7d1      	b.n	90009c42 <JPEG_MDMAOutAbortCallback+0x22>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009c9e:	f7f7 fe0b 	bl	900018b8 <HAL_JPEG_DecodeCpltCallback>
}
90009ca2:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009ca4:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009ca6:	4620      	mov	r0, r4
90009ca8:	69e1      	ldr	r1, [r4, #28]
90009caa:	f7f7 fdaf 	bl	9000180c <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009cae:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009cb0:	6265      	str	r5, [r4, #36]	; 0x24
90009cb2:	e7cd      	b.n	90009c50 <JPEG_MDMAOutAbortCallback+0x30>

90009cb4 <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009cb4:	6d43      	ldr	r3, [r0, #84]	; 0x54
90009cb6:	f003 0303 	and.w	r3, r3, #3
90009cba:	2b02      	cmp	r3, #2
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
90009cbc:	6803      	ldr	r3, [r0, #0]
{
90009cbe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90009cc2:	4604      	mov	r4, r0
90009cc4:	b082      	sub	sp, #8
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009cc6:	d01f      	beq.n	90009d08 <JPEG_Process+0x54>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
90009cc8:	6d62      	ldr	r2, [r4, #84]	; 0x54
90009cca:	04d7      	lsls	r7, r2, #19
90009ccc:	d407      	bmi.n	90009cde <JPEG_Process+0x2a>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
90009cce:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90009cd0:	0796      	lsls	r6, r2, #30
90009cd2:	f100 811d 	bmi.w	90009f10 <JPEG_Process+0x25c>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
90009cd6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90009cd8:	0750      	lsls	r0, r2, #29
90009cda:	f100 81b1 	bmi.w	9000a040 <JPEG_Process+0x38c>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009cde:	6d65      	ldr	r5, [r4, #84]	; 0x54
90009ce0:	f415 5500 	ands.w	r5, r5, #8192	; 0x2000
90009ce4:	d107      	bne.n	90009cf6 <JPEG_Process+0x42>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
90009ce6:	6b5e      	ldr	r6, [r3, #52]	; 0x34
90009ce8:	f016 0608 	ands.w	r6, r6, #8
90009cec:	d14c      	bne.n	90009d88 <JPEG_Process+0xd4>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
90009cee:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90009cf0:	06d2      	lsls	r2, r2, #27
90009cf2:	f100 81e3 	bmi.w	9000a0bc <JPEG_Process+0x408>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009cf6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90009cf8:	f002 0238 	and.w	r2, r2, #56	; 0x38
90009cfc:	2a20      	cmp	r2, #32
90009cfe:	d01a      	beq.n	90009d36 <JPEG_Process+0x82>
  return JPEG_PROCESS_ONGOING;
90009d00:	2000      	movs	r0, #0
}
90009d02:	b002      	add	sp, #8
90009d04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
90009d08:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90009d0a:	0652      	lsls	r2, r2, #25
90009d0c:	d5dc      	bpl.n	90009cc8 <JPEG_Process+0x14>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
90009d0e:	1d01      	adds	r1, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
90009d10:	9101      	str	r1, [sp, #4]
90009d12:	f7ff fb79 	bl	90009408 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
90009d16:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
90009d18:	9901      	ldr	r1, [sp, #4]
90009d1a:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
90009d1c:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
90009d1e:	f7f7 fd1f 	bl	90001760 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
90009d22:	6823      	ldr	r3, [r4, #0]
90009d24:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90009d26:	f022 0240 	bic.w	r2, r2, #64	; 0x40
90009d2a:	631a      	str	r2, [r3, #48]	; 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
90009d2c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
90009d2e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
90009d32:	639a      	str	r2, [r3, #56]	; 0x38
90009d34:	e7c8      	b.n	90009cc8 <JPEG_Process+0x14>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009d36:	681a      	ldr	r2, [r3, #0]
90009d38:	f022 0201 	bic.w	r2, r2, #1
90009d3c:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009d3e:	6d62      	ldr	r2, [r4, #84]	; 0x54
90009d40:	f002 020c 	and.w	r2, r2, #12
90009d44:	2a08      	cmp	r2, #8
90009d46:	f000 81e6 	beq.w	9000a116 <JPEG_Process+0x462>
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90009d4a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
90009d4c:	f042 0260 	orr.w	r2, r2, #96	; 0x60
90009d50:	639a      	str	r2, [r3, #56]	; 0x38
    if (hjpeg->JpegOutCount > 0UL)
90009d52:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009d54:	2b00      	cmp	r3, #0
90009d56:	f040 81e3 	bne.w	9000a120 <JPEG_Process+0x46c>
    tmpContext = hjpeg->Context;
90009d5a:	6d63      	ldr	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hjpeg);
90009d5c:	2100      	movs	r1, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009d5e:	6d62      	ldr	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009d60:	2501      	movs	r5, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009d62:	f003 0303 	and.w	r3, r3, #3
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009d66:	4620      	mov	r0, r4
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009d68:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
    __HAL_UNLOCK(hjpeg);
90009d6c:	f884 104c 	strb.w	r1, [r4, #76]	; 0x4c
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009d70:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009d72:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009d74:	f884 504d 	strb.w	r5, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009d78:	f000 81c9 	beq.w	9000a10e <JPEG_Process+0x45a>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
90009d7c:	f7ff fdd2 	bl	90009924 <HAL_JPEG_EncodeCpltCallback>
    return JPEG_PROCESS_DONE;
90009d80:	4628      	mov	r0, r5
}
90009d82:	b002      	add	sp, #8
90009d84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
90009d88:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009d8a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
90009d8c:	3220      	adds	r2, #32
90009d8e:	4296      	cmp	r6, r2
90009d90:	f0c0 81e4 	bcc.w	9000a15c <JPEG_Process+0x4a8>
      dataword = hjpeg->Instance->DOR;
90009d94:	6c5b      	ldr	r3, [r3, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009d96:	69e1      	ldr	r1, [r4, #28]
90009d98:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009d9a:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009d9c:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009d9e:	69e2      	ldr	r2, [r4, #28]
90009da0:	440a      	add	r2, r1
90009da2:	0a19      	lsrs	r1, r3, #8
90009da4:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009da6:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009da8:	69e2      	ldr	r2, [r4, #28]
90009daa:	440a      	add	r2, r1
90009dac:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009dae:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009db0:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009db2:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009db4:	69e2      	ldr	r2, [r4, #28]
90009db6:	440a      	add	r2, r1
90009db8:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009dba:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009dbc:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009dbe:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009dc0:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
90009dc2:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
90009dc4:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009dc6:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009dc8:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009dca:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009dcc:	69e2      	ldr	r2, [r4, #28]
90009dce:	440a      	add	r2, r1
90009dd0:	0a19      	lsrs	r1, r3, #8
90009dd2:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009dd4:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009dd6:	69e2      	ldr	r2, [r4, #28]
90009dd8:	440a      	add	r2, r1
90009dda:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009ddc:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009dde:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009de0:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009de2:	69e2      	ldr	r2, [r4, #28]
90009de4:	440a      	add	r2, r1
90009de6:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009de8:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009dea:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009dec:	3304      	adds	r3, #4
90009dee:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
90009df0:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009df2:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009df4:	69e1      	ldr	r1, [r4, #28]
90009df6:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009df8:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009dfa:	69e2      	ldr	r2, [r4, #28]
90009dfc:	440a      	add	r2, r1
90009dfe:	0a19      	lsrs	r1, r3, #8
90009e00:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009e02:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009e04:	69e2      	ldr	r2, [r4, #28]
90009e06:	440a      	add	r2, r1
90009e08:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009e0a:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009e0c:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009e0e:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009e10:	69e2      	ldr	r2, [r4, #28]
90009e12:	440a      	add	r2, r1
90009e14:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009e16:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009e18:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009e1a:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009e1c:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
90009e1e:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
90009e20:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009e22:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009e24:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009e26:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009e28:	69e2      	ldr	r2, [r4, #28]
90009e2a:	440a      	add	r2, r1
90009e2c:	0a19      	lsrs	r1, r3, #8
90009e2e:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009e30:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009e32:	69e2      	ldr	r2, [r4, #28]
90009e34:	440a      	add	r2, r1
90009e36:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009e38:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009e3a:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009e3c:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009e3e:	69e2      	ldr	r2, [r4, #28]
90009e40:	440a      	add	r2, r1
90009e42:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009e44:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009e46:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009e48:	3304      	adds	r3, #4
90009e4a:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
90009e4c:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009e4e:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009e50:	69e1      	ldr	r1, [r4, #28]
90009e52:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009e54:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009e56:	69e2      	ldr	r2, [r4, #28]
90009e58:	440a      	add	r2, r1
90009e5a:	0a19      	lsrs	r1, r3, #8
90009e5c:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009e5e:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009e60:	69e2      	ldr	r2, [r4, #28]
90009e62:	440a      	add	r2, r1
90009e64:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009e66:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009e68:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009e6a:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009e6c:	69e2      	ldr	r2, [r4, #28]
90009e6e:	440a      	add	r2, r1
90009e70:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009e72:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009e74:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009e76:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009e78:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
90009e7a:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
90009e7c:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009e7e:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009e80:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009e82:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009e84:	69e2      	ldr	r2, [r4, #28]
90009e86:	440a      	add	r2, r1
90009e88:	0a19      	lsrs	r1, r3, #8
90009e8a:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009e8c:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009e8e:	69e2      	ldr	r2, [r4, #28]
90009e90:	440a      	add	r2, r1
90009e92:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009e94:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009e96:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009e98:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009e9a:	69e2      	ldr	r2, [r4, #28]
90009e9c:	440a      	add	r2, r1
90009e9e:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009ea0:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009ea2:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009ea4:	3304      	adds	r3, #4
90009ea6:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
90009ea8:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009eaa:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009eac:	69e1      	ldr	r1, [r4, #28]
90009eae:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009eb0:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009eb2:	69e2      	ldr	r2, [r4, #28]
90009eb4:	440a      	add	r2, r1
90009eb6:	0a19      	lsrs	r1, r3, #8
90009eb8:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009eba:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009ebc:	69e2      	ldr	r2, [r4, #28]
90009ebe:	440a      	add	r2, r1
90009ec0:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009ec2:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009ec4:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009ec6:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009ec8:	69e2      	ldr	r2, [r4, #28]
90009eca:	440a      	add	r2, r1
90009ecc:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009ece:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009ed0:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009ed2:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009ed4:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
90009ed6:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
90009ed8:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009eda:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009edc:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009ede:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009ee0:	69e2      	ldr	r2, [r4, #28]
90009ee2:	440a      	add	r2, r1
90009ee4:	0a19      	lsrs	r1, r3, #8
90009ee6:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009ee8:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009eea:	69e2      	ldr	r2, [r4, #28]
90009eec:	440a      	add	r2, r1
90009eee:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009ef0:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009ef2:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009ef4:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009ef6:	69e2      	ldr	r2, [r4, #28]
90009ef8:	440a      	add	r2, r1
90009efa:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009efc:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009efe:	3304      	adds	r3, #4
90009f00:	6263      	str	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009f02:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009f04:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90009f06:	429a      	cmp	r2, r3
90009f08:	f000 82ae 	beq.w	9000a468 <JPEG_Process+0x7b4>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009f0c:	6823      	ldr	r3, [r4, #0]
90009f0e:	e6f2      	b.n	90009cf6 <JPEG_Process+0x42>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
90009f10:	6aa2      	ldr	r2, [r4, #40]	; 0x28
90009f12:	2a00      	cmp	r2, #0
90009f14:	f000 810c 	beq.w	9000a130 <JPEG_Process+0x47c>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
90009f18:	6a21      	ldr	r1, [r4, #32]
90009f1a:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
90009f1c:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
90009f1e:	f240 81a4 	bls.w	9000a26a <JPEG_Process+0x5b6>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
90009f22:	1a52      	subs	r2, r2, r1
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
90009f24:	6d61      	ldr	r1, [r4, #84]	; 0x54
90009f26:	04cd      	lsls	r5, r1, #19
90009f28:	f53f aed9 	bmi.w	90009cde <JPEG_Process+0x2a>
90009f2c:	2a00      	cmp	r2, #0
90009f2e:	f43f aed6 	beq.w	90009cde <JPEG_Process+0x2a>
    if (nb_words >= nbRequestWords)
90009f32:	2a1f      	cmp	r2, #31
    nb_words = nb_bytes / 4UL;
90009f34:	ea4f 0192 	mov.w	r1, r2, lsr #2
    if (nb_words >= nbRequestWords)
90009f38:	f240 8203 	bls.w	9000a342 <JPEG_Process+0x68e>
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009f3c:	69a2      	ldr	r2, [r4, #24]
        input_count = hjpeg->JpegInCount;
90009f3e:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f40:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009f42:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f44:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f46:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f48:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009f4a:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f4c:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009f50:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f52:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009f56:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
90009f58:	6a21      	ldr	r1, [r4, #32]
90009f5a:	3104      	adds	r1, #4
90009f5c:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009f5e:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f60:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009f62:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f64:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f66:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f68:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009f6a:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f6c:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009f70:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f72:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009f76:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
90009f78:	6a21      	ldr	r1, [r4, #32]
90009f7a:	3104      	adds	r1, #4
90009f7c:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009f7e:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f80:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009f82:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f84:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f86:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f88:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009f8a:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f8c:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009f90:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f92:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009f96:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
90009f98:	6a21      	ldr	r1, [r4, #32]
90009f9a:	3104      	adds	r1, #4
90009f9c:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009f9e:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009fa0:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009fa2:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009fa4:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009fa6:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009fa8:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009faa:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009fac:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009fb0:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009fb2:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009fb6:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
90009fb8:	6a21      	ldr	r1, [r4, #32]
90009fba:	3104      	adds	r1, #4
90009fbc:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009fbe:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009fc0:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009fc2:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009fc4:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009fc6:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009fc8:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009fca:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009fcc:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009fd0:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009fd2:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009fd6:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
90009fd8:	6a21      	ldr	r1, [r4, #32]
90009fda:	3104      	adds	r1, #4
90009fdc:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009fde:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009fe0:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009fe2:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009fe4:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009fe6:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009fe8:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009fea:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009fec:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009ff0:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ff2:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009ff6:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
90009ff8:	6a21      	ldr	r1, [r4, #32]
90009ffa:	3104      	adds	r1, #4
90009ffc:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009ffe:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a000:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a002:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a004:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a006:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a008:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a00a:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a00c:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000a010:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a012:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a016:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000a018:	6a21      	ldr	r1, [r4, #32]
9000a01a:	3104      	adds	r1, #4
9000a01c:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000a01e:	6a20      	ldr	r0, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a020:	1881      	adds	r1, r0, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a022:	5c85      	ldrb	r5, [r0, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a024:	788a      	ldrb	r2, [r1, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a026:	78c8      	ldrb	r0, [r1, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a028:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a02a:	7849      	ldrb	r1, [r1, #1]
9000a02c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000a030:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a032:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a036:	641a      	str	r2, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000a038:	6a22      	ldr	r2, [r4, #32]
9000a03a:	3204      	adds	r2, #4
9000a03c:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
9000a03e:	e64e      	b.n	90009cde <JPEG_Process+0x2a>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000a040:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000a042:	2a00      	cmp	r2, #0
9000a044:	d074      	beq.n	9000a130 <JPEG_Process+0x47c>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000a046:	6a21      	ldr	r1, [r4, #32]
9000a048:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000a04a:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000a04c:	f200 8164 	bhi.w	9000a318 <JPEG_Process+0x664>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000a050:	428a      	cmp	r2, r1
9000a052:	f040 810c 	bne.w	9000a26e <JPEG_Process+0x5ba>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000a056:	6a21      	ldr	r1, [r4, #32]
9000a058:	4620      	mov	r0, r4
9000a05a:	f7f7 fbb7 	bl	900017cc <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000a05e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000a060:	2a04      	cmp	r2, #4
9000a062:	d902      	bls.n	9000a06a <JPEG_Process+0x3b6>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000a064:	f022 0203 	bic.w	r2, r2, #3
9000a068:	62a2      	str	r2, [r4, #40]	; 0x28
    hjpeg->JpegInCount = 0;
9000a06a:	2100      	movs	r1, #0
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a06c:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000a06e:	6221      	str	r1, [r4, #32]
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a070:	6d61      	ldr	r1, [r4, #84]	; 0x54
9000a072:	04c9      	lsls	r1, r1, #19
9000a074:	f53f ae33 	bmi.w	90009cde <JPEG_Process+0x2a>
9000a078:	2a00      	cmp	r2, #0
9000a07a:	f43f ae30 	beq.w	90009cde <JPEG_Process+0x2a>
    if (nb_words >= nbRequestWords)
9000a07e:	0891      	lsrs	r1, r2, #2
9000a080:	f040 8203 	bne.w	9000a48a <JPEG_Process+0x7d6>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a084:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a086:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000a088:	6a21      	ldr	r1, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a08a:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
9000a08c:	f101 0101 	add.w	r1, r1, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a090:	5c28      	ldrb	r0, [r5, r0]
          hjpeg->JpegInCount++;
9000a092:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a094:	d010      	beq.n	9000a0b8 <JPEG_Process+0x404>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a096:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a098:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a09a:	5c69      	ldrb	r1, [r5, r1]
9000a09c:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
          hjpeg->JpegInCount++;
9000a0a0:	6a21      	ldr	r1, [r4, #32]
9000a0a2:	f101 0101 	add.w	r1, r1, #1
9000a0a6:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a0a8:	d106      	bne.n	9000a0b8 <JPEG_Process+0x404>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a0aa:	6a22      	ldr	r2, [r4, #32]
9000a0ac:	5ca9      	ldrb	r1, [r5, r2]
          hjpeg->JpegInCount++;
9000a0ae:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a0b0:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
          hjpeg->JpegInCount++;
9000a0b4:	3201      	adds	r2, #1
9000a0b6:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000a0b8:	6418      	str	r0, [r3, #64]	; 0x40
9000a0ba:	e610      	b.n	90009cde <JPEG_Process+0x2a>
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000a0bc:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a0be:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
9000a0c0:	3204      	adds	r2, #4
9000a0c2:	4295      	cmp	r5, r2
9000a0c4:	f0c0 80d5 	bcc.w	9000a272 <JPEG_Process+0x5be>
      dataword = hjpeg->Instance->DOR;
9000a0c8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a0ca:	69e1      	ldr	r1, [r4, #28]
9000a0cc:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a0ce:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a0d0:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000a0d2:	69e2      	ldr	r2, [r4, #28]
9000a0d4:	440a      	add	r2, r1
9000a0d6:	0a19      	lsrs	r1, r3, #8
9000a0d8:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a0da:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000a0dc:	69e2      	ldr	r2, [r4, #28]
9000a0de:	440a      	add	r2, r1
9000a0e0:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a0e2:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a0e4:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a0e6:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000a0e8:	69e2      	ldr	r2, [r4, #28]
9000a0ea:	440a      	add	r2, r1
9000a0ec:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a0ee:	6a63      	ldr	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a0f0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
      hjpeg->JpegOutCount += 4UL;
9000a0f2:	3304      	adds	r3, #4
9000a0f4:	6263      	str	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a0f6:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a0f8:	429a      	cmp	r2, r3
9000a0fa:	f47f af07 	bne.w	90009f0c <JPEG_Process+0x258>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a0fe:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a100:	4620      	mov	r0, r4
9000a102:	69e1      	ldr	r1, [r4, #28]
9000a104:	f7f7 fb82 	bl	9000180c <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a108:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a10a:	6266      	str	r6, [r4, #36]	; 0x24
9000a10c:	e5f3      	b.n	90009cf6 <JPEG_Process+0x42>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a10e:	f7f7 fbd3 	bl	900018b8 <HAL_JPEG_DecodeCpltCallback>
    return JPEG_PROCESS_DONE;
9000a112:	4628      	mov	r0, r5
9000a114:	e5f5      	b.n	90009d02 <JPEG_Process+0x4e>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a116:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000a118:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000a11c:	631a      	str	r2, [r3, #48]	; 0x30
9000a11e:	e614      	b.n	90009d4a <JPEG_Process+0x96>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a120:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a122:	4620      	mov	r0, r4
9000a124:	69e1      	ldr	r1, [r4, #28]
9000a126:	f7f7 fb71 	bl	9000180c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000a12a:	2300      	movs	r3, #0
9000a12c:	6263      	str	r3, [r4, #36]	; 0x24
9000a12e:	e614      	b.n	90009d5a <JPEG_Process+0xa6>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a130:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000a132:	f002 020c 	and.w	r2, r2, #12
9000a136:	2a0c      	cmp	r2, #12
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a138:	6d62      	ldr	r2, [r4, #84]	; 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a13a:	f000 80fd 	beq.w	9000a338 <JPEG_Process+0x684>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a13e:	f002 020c 	and.w	r2, r2, #12
9000a142:	2a08      	cmp	r2, #8
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a144:	6d62      	ldr	r2, [r4, #84]	; 0x54
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a146:	f47f adca 	bne.w	90009cde <JPEG_Process+0x2a>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a14a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
9000a14e:	6562      	str	r2, [r4, #84]	; 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000a150:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000a152:	f022 0206 	bic.w	r2, r2, #6
9000a156:	631a      	str	r2, [r3, #48]	; 0x30
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a158:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000a15a:	e5c0      	b.n	90009cde <JPEG_Process+0x2a>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000a15c:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a15e:	4296      	cmp	r6, r2
9000a160:	f67f adc9 	bls.w	90009cf6 <JPEG_Process+0x42>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000a164:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000a166:	1a30      	subs	r0, r6, r0
    for (index = 0; index < nb_words; index++)
9000a168:	0880      	lsrs	r0, r0, #2
9000a16a:	d020      	beq.n	9000a1ae <JPEG_Process+0x4fa>
9000a16c:	4629      	mov	r1, r5
9000a16e:	e000      	b.n	9000a172 <JPEG_Process+0x4be>
      dataword = hjpeg->Instance->DOR;
9000a170:	6823      	ldr	r3, [r4, #0]
9000a172:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    for (index = 0; index < nb_words; index++)
9000a174:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a176:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a178:	69e6      	ldr	r6, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000a17a:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a17c:	54b3      	strb	r3, [r6, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a17e:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000a180:	69e2      	ldr	r2, [r4, #28]
9000a182:	4432      	add	r2, r6
9000a184:	ea4f 2613 	mov.w	r6, r3, lsr #8
9000a188:	7056      	strb	r6, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a18a:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000a18c:	69e2      	ldr	r2, [r4, #28]
9000a18e:	4432      	add	r2, r6
9000a190:	ea4f 4613 	mov.w	r6, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a194:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a198:	7096      	strb	r6, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a19a:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000a19c:	69e2      	ldr	r2, [r4, #28]
9000a19e:	4432      	add	r2, r6
9000a1a0:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a1a2:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a1a4:	f103 0304 	add.w	r3, r3, #4
9000a1a8:	6263      	str	r3, [r4, #36]	; 0x24
    for (index = 0; index < nb_words; index++)
9000a1aa:	d1e1      	bne.n	9000a170 <JPEG_Process+0x4bc>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a1ac:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9000a1ae:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a1b0:	42b3      	cmp	r3, r6
9000a1b2:	f000 8161 	beq.w	9000a478 <JPEG_Process+0x7c4>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000a1b6:	f8d4 8024 	ldr.w	r8, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000a1ba:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000a1bc:	ebb6 0008 	subs.w	r0, r6, r8
      dataword = hjpeg->Instance->DOR;
9000a1c0:	6c5f      	ldr	r7, [r3, #68]	; 0x44
      for (index = 0; index < nb_bytes; index++)
9000a1c2:	d00e      	beq.n	9000a1e2 <JPEG_Process+0x52e>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a1c4:	f005 0303 	and.w	r3, r5, #3
9000a1c8:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a1ca:	69e1      	ldr	r1, [r4, #28]
      for (index = 0; index < nb_bytes; index++)
9000a1cc:	3501      	adds	r5, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a1ce:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000a1d0:	42a8      	cmp	r0, r5
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a1d2:	fa27 f303 	lsr.w	r3, r7, r3
9000a1d6:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000a1d8:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a1da:	f103 0301 	add.w	r3, r3, #1
9000a1de:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = 0; index < nb_bytes; index++)
9000a1e0:	d1f0      	bne.n	9000a1c4 <JPEG_Process+0x510>
      nb_bytes = 4UL - nb_bytes;
9000a1e2:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a1e6:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a1e8:	69e1      	ldr	r1, [r4, #28]
9000a1ea:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000a1ec:	eba8 0806 	sub.w	r8, r8, r6
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a1f0:	f7f7 fb0c 	bl	9000180c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000a1f4:	2300      	movs	r3, #0
      for (index = nb_bytes; index < 4UL; index++)
9000a1f6:	f1b8 0f03 	cmp.w	r8, #3
      hjpeg->JpegOutCount = 0;
9000a1fa:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a1fc:	f63f ae86 	bhi.w	90009f0c <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a200:	ea4f 03c8 	mov.w	r3, r8, lsl #3
9000a204:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a206:	69e1      	ldr	r1, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000a208:	f1b8 0f03 	cmp.w	r8, #3
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a20c:	fa27 f003 	lsr.w	r0, r7, r3
9000a210:	5488      	strb	r0, [r1, r2]
        hjpeg->JpegOutCount++;
9000a212:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a214:	f102 0201 	add.w	r2, r2, #1
9000a218:	6262      	str	r2, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a21a:	f43f ae77 	beq.w	90009f0c <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a21e:	f103 0208 	add.w	r2, r3, #8
9000a222:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000a224:	69e0      	ldr	r0, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000a226:	f1b8 0f02 	cmp.w	r8, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a22a:	fa27 f202 	lsr.w	r2, r7, r2
9000a22e:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000a230:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a232:	f102 0201 	add.w	r2, r2, #1
9000a236:	6262      	str	r2, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a238:	f108 0202 	add.w	r2, r8, #2
9000a23c:	f43f ae66 	beq.w	90009f0c <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a240:	3310      	adds	r3, #16
9000a242:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000a244:	69e0      	ldr	r0, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000a246:	2a02      	cmp	r2, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a248:	fa27 f303 	lsr.w	r3, r7, r3
9000a24c:	5443      	strb	r3, [r0, r1]
        hjpeg->JpegOutCount++;
9000a24e:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a250:	f103 0301 	add.w	r3, r3, #1
9000a254:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a256:	f47f ae59 	bne.w	90009f0c <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a25a:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a25c:	0e3f      	lsrs	r7, r7, #24
9000a25e:	69e2      	ldr	r2, [r4, #28]
9000a260:	54d7      	strb	r7, [r2, r3]
        hjpeg->JpegOutCount++;
9000a262:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a264:	3301      	adds	r3, #1
9000a266:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a268:	e650      	b.n	90009f0c <JPEG_Process+0x258>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000a26a:	428a      	cmp	r2, r1
9000a26c:	d056      	beq.n	9000a31c <JPEG_Process+0x668>
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a26e:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000a270:	e535      	b.n	90009cde <JPEG_Process+0x2a>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000a272:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a274:	4295      	cmp	r5, r2
9000a276:	f67f ad3e 	bls.w	90009cf6 <JPEG_Process+0x42>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000a27a:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000a27c:	1a28      	subs	r0, r5, r0
    for (index = 0; index < nb_words; index++)
9000a27e:	0880      	lsrs	r0, r0, #2
9000a280:	d020      	beq.n	9000a2c4 <JPEG_Process+0x610>
9000a282:	4631      	mov	r1, r6
9000a284:	e000      	b.n	9000a288 <JPEG_Process+0x5d4>
      dataword = hjpeg->Instance->DOR;
9000a286:	6823      	ldr	r3, [r4, #0]
9000a288:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    for (index = 0; index < nb_words; index++)
9000a28a:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a28c:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a28e:	69e5      	ldr	r5, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000a290:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a292:	54ab      	strb	r3, [r5, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a294:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000a296:	69e2      	ldr	r2, [r4, #28]
9000a298:	442a      	add	r2, r5
9000a29a:	ea4f 2513 	mov.w	r5, r3, lsr #8
9000a29e:	7055      	strb	r5, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a2a0:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000a2a2:	69e2      	ldr	r2, [r4, #28]
9000a2a4:	442a      	add	r2, r5
9000a2a6:	ea4f 4513 	mov.w	r5, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a2aa:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a2ae:	7095      	strb	r5, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a2b0:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000a2b2:	69e2      	ldr	r2, [r4, #28]
9000a2b4:	442a      	add	r2, r5
9000a2b6:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a2b8:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a2ba:	f103 0304 	add.w	r3, r3, #4
9000a2be:	6263      	str	r3, [r4, #36]	; 0x24
    for (index = 0; index < nb_words; index++)
9000a2c0:	d1e1      	bne.n	9000a286 <JPEG_Process+0x5d2>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a2c2:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
9000a2c4:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a2c6:	429d      	cmp	r5, r3
9000a2c8:	f000 80d6 	beq.w	9000a478 <JPEG_Process+0x7c4>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000a2cc:	f8d4 8024 	ldr.w	r8, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000a2d0:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000a2d2:	ebb5 0008 	subs.w	r0, r5, r8
      dataword = hjpeg->Instance->DOR;
9000a2d6:	6c5f      	ldr	r7, [r3, #68]	; 0x44
      for (index = 0; index < nb_bytes; index++)
9000a2d8:	d00e      	beq.n	9000a2f8 <JPEG_Process+0x644>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a2da:	f006 0303 	and.w	r3, r6, #3
9000a2de:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a2e0:	69e1      	ldr	r1, [r4, #28]
      for (index = 0; index < nb_bytes; index++)
9000a2e2:	3601      	adds	r6, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a2e4:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000a2e6:	42b0      	cmp	r0, r6
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a2e8:	fa27 f303 	lsr.w	r3, r7, r3
9000a2ec:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000a2ee:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a2f0:	f103 0301 	add.w	r3, r3, #1
9000a2f4:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = 0; index < nb_bytes; index++)
9000a2f6:	d1f0      	bne.n	9000a2da <JPEG_Process+0x626>
      nb_bytes = 4UL - nb_bytes;
9000a2f8:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a2fc:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a2fe:	69e1      	ldr	r1, [r4, #28]
9000a300:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000a302:	eba8 0805 	sub.w	r8, r8, r5
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a306:	f7f7 fa81 	bl	9000180c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000a30a:	2300      	movs	r3, #0
      for (index = nb_bytes; index < 4UL; index++)
9000a30c:	f1b8 0f03 	cmp.w	r8, #3
      hjpeg->JpegOutCount = 0;
9000a310:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a312:	f67f af75 	bls.w	9000a200 <JPEG_Process+0x54c>
9000a316:	e5f9      	b.n	90009f0c <JPEG_Process+0x258>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000a318:	1a52      	subs	r2, r2, r1
9000a31a:	e6a9      	b.n	9000a070 <JPEG_Process+0x3bc>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000a31c:	6a21      	ldr	r1, [r4, #32]
9000a31e:	4620      	mov	r0, r4
9000a320:	f7f7 fa54 	bl	900017cc <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000a324:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000a326:	2a04      	cmp	r2, #4
9000a328:	d902      	bls.n	9000a330 <JPEG_Process+0x67c>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000a32a:	f022 0203 	bic.w	r2, r2, #3
9000a32e:	62a2      	str	r2, [r4, #40]	; 0x28
    hjpeg->JpegInCount = 0;
9000a330:	2100      	movs	r1, #0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a332:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000a334:	6221      	str	r1, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
9000a336:	e5f5      	b.n	90009f24 <JPEG_Process+0x270>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a338:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
9000a33c:	6562      	str	r2, [r4, #84]	; 0x54
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a33e:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000a340:	e4cd      	b.n	90009cde <JPEG_Process+0x2a>
      if (nb_words > 0UL)
9000a342:	2a03      	cmp	r2, #3
9000a344:	f240 80a4 	bls.w	9000a490 <JPEG_Process+0x7dc>
        for (index = 0; index < nb_words; index++)
9000a348:	2900      	cmp	r1, #0
9000a34a:	f43f acc8 	beq.w	90009cde <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000a34e:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a350:	2901      	cmp	r1, #1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a352:	69a2      	ldr	r2, [r4, #24]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a354:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a358:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a35a:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a35c:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a35e:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a362:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a364:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000a368:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a36c:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a370:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000a372:	6a20      	ldr	r0, [r4, #32]
9000a374:	f100 0004 	add.w	r0, r0, #4
9000a378:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a37a:	f43f acb0 	beq.w	90009cde <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000a37e:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a380:	2902      	cmp	r1, #2
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a382:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a386:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a388:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a38a:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a38c:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a390:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a392:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000a396:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a39a:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a39e:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000a3a0:	6a20      	ldr	r0, [r4, #32]
9000a3a2:	f100 0004 	add.w	r0, r0, #4
9000a3a6:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a3a8:	f43f ac99 	beq.w	90009cde <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000a3ac:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a3ae:	2903      	cmp	r1, #3
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a3b0:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a3b4:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a3b6:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a3b8:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a3ba:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a3be:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a3c0:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000a3c4:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a3c8:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a3cc:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000a3ce:	6a20      	ldr	r0, [r4, #32]
9000a3d0:	f100 0004 	add.w	r0, r0, #4
9000a3d4:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a3d6:	f43f ac82 	beq.w	90009cde <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000a3da:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a3dc:	2904      	cmp	r1, #4
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a3de:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a3e2:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a3e4:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a3e6:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a3e8:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a3ec:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a3ee:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000a3f2:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a3f6:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a3fa:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000a3fc:	6a20      	ldr	r0, [r4, #32]
9000a3fe:	f100 0004 	add.w	r0, r0, #4
9000a402:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a404:	f43f ac6b 	beq.w	90009cde <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000a408:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a40a:	2905      	cmp	r1, #5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a40c:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a410:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a412:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a414:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a416:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a41a:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a41c:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000a420:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a424:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a428:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000a42a:	6a20      	ldr	r0, [r4, #32]
9000a42c:	f100 0004 	add.w	r0, r0, #4
9000a430:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a432:	f43f ac54 	beq.w	90009cde <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000a436:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a438:	2907      	cmp	r1, #7
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a43a:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a43e:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a440:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a442:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a444:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a448:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a44a:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000a44e:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a452:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a456:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000a458:	6a20      	ldr	r0, [r4, #32]
9000a45a:	f100 0004 	add.w	r0, r0, #4
9000a45e:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a460:	f47f ac3d 	bne.w	90009cde <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000a464:	6a20      	ldr	r0, [r4, #32]
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a466:	e5db      	b.n	9000a020 <JPEG_Process+0x36c>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a468:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a46a:	4620      	mov	r0, r4
9000a46c:	69e1      	ldr	r1, [r4, #28]
9000a46e:	f7f7 f9cd 	bl	9000180c <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a472:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a474:	6265      	str	r5, [r4, #36]	; 0x24
9000a476:	e43e      	b.n	90009cf6 <JPEG_Process+0x42>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a478:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a47a:	4620      	mov	r0, r4
9000a47c:	69e1      	ldr	r1, [r4, #28]
9000a47e:	f7f7 f9c5 	bl	9000180c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000a482:	2200      	movs	r2, #0
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a484:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a486:	6262      	str	r2, [r4, #36]	; 0x24
9000a488:	e435      	b.n	90009cf6 <JPEG_Process+0x42>
        input_count = hjpeg->JpegInCount;
9000a48a:	6a22      	ldr	r2, [r4, #32]
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a48c:	69a0      	ldr	r0, [r4, #24]
9000a48e:	e5c7      	b.n	9000a020 <JPEG_Process+0x36c>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a490:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a492:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000a494:	6a20      	ldr	r0, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a496:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
9000a498:	f100 0001 	add.w	r0, r0, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a49c:	5c69      	ldrb	r1, [r5, r1]
          hjpeg->JpegInCount++;
9000a49e:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a4a0:	d010      	beq.n	9000a4c4 <JPEG_Process+0x810>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a4a2:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a4a4:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a4a6:	5c28      	ldrb	r0, [r5, r0]
9000a4a8:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
          hjpeg->JpegInCount++;
9000a4ac:	6a20      	ldr	r0, [r4, #32]
9000a4ae:	f100 0001 	add.w	r0, r0, #1
9000a4b2:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a4b4:	d106      	bne.n	9000a4c4 <JPEG_Process+0x810>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a4b6:	6a22      	ldr	r2, [r4, #32]
9000a4b8:	5ca8      	ldrb	r0, [r5, r2]
          hjpeg->JpegInCount++;
9000a4ba:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a4bc:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
9000a4c0:	3201      	adds	r2, #1
9000a4c2:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000a4c4:	6419      	str	r1, [r3, #64]	; 0x40
9000a4c6:	e40a      	b.n	90009cde <JPEG_Process+0x2a>

9000a4c8 <HAL_JPEG_IRQHandler>:
  switch (hjpeg->State)
9000a4c8:	f890 304d 	ldrb.w	r3, [r0, #77]	; 0x4d
9000a4cc:	3b03      	subs	r3, #3
9000a4ce:	2b01      	cmp	r3, #1
9000a4d0:	d900      	bls.n	9000a4d4 <HAL_JPEG_IRQHandler+0xc>
9000a4d2:	4770      	bx	lr
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a4d4:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a4d6:	f003 030c 	and.w	r3, r3, #12
9000a4da:	2b08      	cmp	r3, #8
{
9000a4dc:	b530      	push	{r4, r5, lr}
9000a4de:	4604      	mov	r4, r0
9000a4e0:	b083      	sub	sp, #12
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a4e2:	d006      	beq.n	9000a4f2 <HAL_JPEG_IRQHandler+0x2a>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a4e4:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a4e6:	f003 030c 	and.w	r3, r3, #12
9000a4ea:	2b0c      	cmp	r3, #12
9000a4ec:	d006      	beq.n	9000a4fc <HAL_JPEG_IRQHandler+0x34>
}
9000a4ee:	b003      	add	sp, #12
9000a4f0:	bd30      	pop	{r4, r5, pc}
9000a4f2:	b003      	add	sp, #12
9000a4f4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
        (void) JPEG_Process(hjpeg);
9000a4f8:	f7ff bbdc 	b.w	90009cb4 <JPEG_Process>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a4fc:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a4fe:	f003 0303 	and.w	r3, r3, #3
9000a502:	2b02      	cmp	r3, #2
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000a504:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a506:	d045      	beq.n	9000a594 <HAL_JPEG_IRQHandler+0xcc>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
9000a508:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000a50a:	0692      	lsls	r2, r2, #26
9000a50c:	d5ef      	bpl.n	9000a4ee <HAL_JPEG_IRQHandler+0x26>
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000a50e:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000a510:	6b20      	ldr	r0, [r4, #48]	; 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000a512:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
9000a516:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a518:	681a      	ldr	r2, [r3, #0]
9000a51a:	f022 0201 	bic.w	r2, r2, #1
9000a51e:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a520:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000a522:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000a526:	631a      	str	r2, [r3, #48]	; 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000a528:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000a52a:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000a52e:	639a      	str	r2, [r3, #56]	; 0x38
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000a530:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000a534:	2b02      	cmp	r3, #2
9000a536:	d052      	beq.n	9000a5de <HAL_JPEG_IRQHandler+0x116>
    if (hjpeg->hdmaout->State == HAL_MDMA_STATE_BUSY)
9000a538:	6b60      	ldr	r0, [r4, #52]	; 0x34
9000a53a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000a53e:	2b02      	cmp	r3, #2
9000a540:	d03f      	beq.n	9000a5c2 <HAL_JPEG_IRQHandler+0xfa>
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a542:	6803      	ldr	r3, [r0, #0]
9000a544:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000a546:	695b      	ldr	r3, [r3, #20]
9000a548:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000a54c:	1ad3      	subs	r3, r2, r3
9000a54e:	6263      	str	r3, [r4, #36]	; 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000a550:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a552:	429a      	cmp	r2, r3
9000a554:	d046      	beq.n	9000a5e4 <HAL_JPEG_IRQHandler+0x11c>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000a556:	6822      	ldr	r2, [r4, #0]
9000a558:	6b55      	ldr	r5, [r2, #52]	; 0x34
9000a55a:	f015 0510 	ands.w	r5, r5, #16
9000a55e:	d135      	bne.n	9000a5cc <HAL_JPEG_IRQHandler+0x104>
    if (hjpeg->JpegOutCount > 0UL)
9000a560:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a562:	2b00      	cmp	r3, #0
9000a564:	d149      	bne.n	9000a5fa <HAL_JPEG_IRQHandler+0x132>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a566:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000a568:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a56a:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a56c:	f023 0301 	bic.w	r3, r3, #1
9000a570:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000a572:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a574:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a576:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000a57a:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a57e:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a582:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a584:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a586:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a588:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a58c:	d032      	beq.n	9000a5f4 <HAL_JPEG_IRQHandler+0x12c>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000a58e:	f7ff f9c9 	bl	90009924 <HAL_JPEG_EncodeCpltCallback>
9000a592:	e7ac      	b.n	9000a4ee <HAL_JPEG_IRQHandler+0x26>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000a594:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000a596:	0651      	lsls	r1, r2, #25
9000a598:	d5b6      	bpl.n	9000a508 <HAL_JPEG_IRQHandler+0x40>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000a59a:	1d01      	adds	r1, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000a59c:	9101      	str	r1, [sp, #4]
9000a59e:	f7fe ff33 	bl	90009408 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000a5a2:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000a5a4:	9901      	ldr	r1, [sp, #4]
9000a5a6:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000a5a8:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000a5aa:	f7f7 f8d9 	bl	90001760 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000a5ae:	6823      	ldr	r3, [r4, #0]
9000a5b0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000a5b2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
9000a5b6:	631a      	str	r2, [r3, #48]	; 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000a5b8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000a5ba:	f042 0240 	orr.w	r2, r2, #64	; 0x40
9000a5be:	639a      	str	r2, [r3, #56]	; 0x38
9000a5c0:	e7a2      	b.n	9000a508 <HAL_JPEG_IRQHandler+0x40>
}
9000a5c2:	b003      	add	sp, #12
9000a5c4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmaout);
9000a5c8:	f000 bb30 	b.w	9000ac2c <HAL_MDMA_Abort_IT>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a5cc:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000a5ce:	049b      	lsls	r3, r3, #18
9000a5d0:	d48d      	bmi.n	9000a4ee <HAL_JPEG_IRQHandler+0x26>
    JPEG_DMA_PollResidualData(hjpeg);
9000a5d2:	4620      	mov	r0, r4
}
9000a5d4:	b003      	add	sp, #12
9000a5d6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000a5da:	f7ff ba0f 	b.w	900099fc <JPEG_DMA_PollResidualData>
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmain);
9000a5de:	f000 fb25 	bl	9000ac2c <HAL_MDMA_Abort_IT>
9000a5e2:	e7a9      	b.n	9000a538 <HAL_JPEG_IRQHandler+0x70>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a5e4:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a5e6:	4620      	mov	r0, r4
9000a5e8:	69e1      	ldr	r1, [r4, #28]
9000a5ea:	f7f7 f90f 	bl	9000180c <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000a5ee:	2300      	movs	r3, #0
9000a5f0:	6263      	str	r3, [r4, #36]	; 0x24
9000a5f2:	e7b0      	b.n	9000a556 <HAL_JPEG_IRQHandler+0x8e>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a5f4:	f7f7 f960 	bl	900018b8 <HAL_JPEG_DecodeCpltCallback>
9000a5f8:	e779      	b.n	9000a4ee <HAL_JPEG_IRQHandler+0x26>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a5fa:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a5fc:	4620      	mov	r0, r4
9000a5fe:	69e1      	ldr	r1, [r4, #28]
9000a600:	f7f7 f904 	bl	9000180c <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a604:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a606:	6265      	str	r5, [r4, #36]	; 0x24
9000a608:	e7ad      	b.n	9000a566 <HAL_JPEG_IRQHandler+0x9e>
9000a60a:	bf00      	nop

9000a60c <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
9000a60c:	2800      	cmp	r0, #0
9000a60e:	d067      	beq.n	9000a6e0 <HAL_LTDC_Init+0xd4>
{
9000a610:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
9000a612:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
9000a616:	4604      	mov	r4, r0
9000a618:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000a61c:	2b00      	cmp	r3, #0
9000a61e:	d05a      	beq.n	9000a6d6 <HAL_LTDC_Init+0xca>
  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a620:	68a0      	ldr	r0, [r4, #8]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a622:	2102      	movs	r1, #2
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a624:	e9d4 3200 	ldrd	r3, r2, [r4]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a628:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a62c:	4302      	orrs	r2, r0
9000a62e:	68e1      	ldr	r1, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000a630:	6998      	ldr	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a632:	430a      	orrs	r2, r1
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000a634:	6921      	ldr	r1, [r4, #16]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000a636:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000a63a:	430a      	orrs	r2, r1

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000a63c:	4929      	ldr	r1, [pc, #164]	; (9000a6e4 <HAL_LTDC_Init+0xd8>)
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000a63e:	6198      	str	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a640:	6998      	ldr	r0, [r3, #24]
9000a642:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
9000a644:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a646:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000a648:	689a      	ldr	r2, [r3, #8]
9000a64a:	400a      	ands	r2, r1
9000a64c:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000a64e:	689a      	ldr	r2, [r3, #8]
9000a650:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000a654:	69a0      	ldr	r0, [r4, #24]
9000a656:	4302      	orrs	r2, r0

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
9000a658:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000a65a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
9000a65c:	68da      	ldr	r2, [r3, #12]
9000a65e:	400a      	ands	r2, r1
9000a660:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000a662:	68da      	ldr	r2, [r3, #12]
9000a664:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000a668:	6a20      	ldr	r0, [r4, #32]
9000a66a:	4302      	orrs	r2, r0

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
9000a66c:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000a66e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
9000a670:	691a      	ldr	r2, [r3, #16]
9000a672:	400a      	ands	r2, r1
9000a674:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000a676:	691a      	ldr	r2, [r3, #16]
9000a678:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000a67c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9000a67e:	4302      	orrs	r2, r0

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
  tmp = (hltdc->Init.TotalWidth << 16U);
9000a680:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000a682:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
9000a684:	695a      	ldr	r2, [r3, #20]
9000a686:	400a      	ands	r2, r1
9000a688:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
9000a68a:	695a      	ldr	r2, [r3, #20]
9000a68c:	6b21      	ldr	r1, [r4, #48]	; 0x30
9000a68e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000a692:	430a      	orrs	r2, r1
9000a694:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000a696:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
9000a698:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000a69c:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
9000a6a0:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000a6a4:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000a6a6:	6add      	ldr	r5, [r3, #44]	; 0x2c
9000a6a8:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
9000a6ac:	432a      	orrs	r2, r5
9000a6ae:	ea42 2200 	orr.w	r2, r2, r0, lsl #8

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000a6b2:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000a6b4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000a6b8:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
9000a6ba:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000a6bc:	f042 0206 	orr.w	r2, r2, #6
9000a6c0:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
9000a6c2:	699a      	ldr	r2, [r3, #24]
9000a6c4:	f042 0201 	orr.w	r2, r2, #1
9000a6c8:	619a      	str	r2, [r3, #24]

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
9000a6ca:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000a6cc:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
9000a6d0:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1

  return HAL_OK;
}
9000a6d4:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
9000a6d6:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
9000a6da:	f7f8 fe5f 	bl	9000339c <HAL_LTDC_MspInit>
9000a6de:	e79f      	b.n	9000a620 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
9000a6e0:	2001      	movs	r0, #1
}
9000a6e2:	4770      	bx	lr
9000a6e4:	f000f800 	.word	0xf000f800

9000a6e8 <HAL_LTDC_ErrorCallback>:
9000a6e8:	4770      	bx	lr
9000a6ea:	bf00      	nop

9000a6ec <HAL_LTDC_ReloadEventCallback>:
9000a6ec:	4770      	bx	lr
9000a6ee:	bf00      	nop

9000a6f0 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000a6f0:	6803      	ldr	r3, [r0, #0]
{
9000a6f2:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000a6f4:	6b9d      	ldr	r5, [r3, #56]	; 0x38
{
9000a6f6:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
9000a6f8:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
9000a6fa:	076a      	lsls	r2, r5, #29
9000a6fc:	d501      	bpl.n	9000a702 <HAL_LTDC_IRQHandler+0x12>
9000a6fe:	0771      	lsls	r1, r6, #29
9000a700:	d41d      	bmi.n	9000a73e <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
9000a702:	07aa      	lsls	r2, r5, #30
9000a704:	d501      	bpl.n	9000a70a <HAL_LTDC_IRQHandler+0x1a>
9000a706:	07b3      	lsls	r3, r6, #30
9000a708:	d42d      	bmi.n	9000a766 <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
9000a70a:	07e8      	lsls	r0, r5, #31
9000a70c:	d501      	bpl.n	9000a712 <HAL_LTDC_IRQHandler+0x22>
9000a70e:	07f1      	lsls	r1, r6, #31
9000a710:	d440      	bmi.n	9000a794 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
9000a712:	072a      	lsls	r2, r5, #28
9000a714:	d501      	bpl.n	9000a71a <HAL_LTDC_IRQHandler+0x2a>
9000a716:	0733      	lsls	r3, r6, #28
9000a718:	d400      	bmi.n	9000a71c <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
9000a71a:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000a71c:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000a71e:	2008      	movs	r0, #8
    hltdc->State = HAL_LTDC_STATE_READY;
9000a720:	2501      	movs	r5, #1
    __HAL_UNLOCK(hltdc);
9000a722:	2100      	movs	r1, #0
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000a724:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000a726:	f022 0208 	bic.w	r2, r2, #8
9000a72a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000a72c:	63d8      	str	r0, [r3, #60]	; 0x3c
    HAL_LTDC_ReloadEventCallback(hltdc);
9000a72e:	4620      	mov	r0, r4
    hltdc->State = HAL_LTDC_STATE_READY;
9000a730:	f884 50a1 	strb.w	r5, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000a734:	f884 10a0 	strb.w	r1, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
9000a738:	f7ff ffd8 	bl	9000a6ec <HAL_LTDC_ReloadEventCallback>
}
9000a73c:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
9000a73e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000a740:	f022 0204 	bic.w	r2, r2, #4
9000a744:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
9000a746:	2204      	movs	r2, #4
9000a748:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
9000a74a:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
9000a74e:	f043 0301 	orr.w	r3, r3, #1
9000a752:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
9000a756:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000a758:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000a75c:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000a760:	f7ff ffc2 	bl	9000a6e8 <HAL_LTDC_ErrorCallback>
9000a764:	e7cd      	b.n	9000a702 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000a766:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
9000a768:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000a76a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000a76c:	f022 0202 	bic.w	r2, r2, #2
9000a770:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
9000a772:	2202      	movs	r2, #2
9000a774:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000a776:	2204      	movs	r2, #4
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
9000a778:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
9000a77c:	f043 0302 	orr.w	r3, r3, #2
9000a780:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
9000a784:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000a786:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000a78a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000a78e:	f7ff ffab 	bl	9000a6e8 <HAL_LTDC_ErrorCallback>
9000a792:	e7ba      	b.n	9000a70a <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a794:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
9000a796:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a798:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000a79a:	f022 0201 	bic.w	r2, r2, #1
9000a79e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
9000a7a0:	2201      	movs	r2, #1
9000a7a2:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
9000a7a4:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
9000a7a6:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000a7aa:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
9000a7ae:	f7f8 f8df 	bl	90002970 <HAL_LTDC_LineEventCallback>
9000a7b2:	e7ae      	b.n	9000a712 <HAL_LTDC_IRQHandler+0x22>

9000a7b4 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
9000a7b4:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
9000a7b8:	2b01      	cmp	r3, #1
9000a7ba:	f000 80c0 	beq.w	9000a93e <HAL_LTDC_ConfigLayer+0x18a>

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a7be:	2302      	movs	r3, #2
{
9000a7c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a7c4:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000a7c8:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a7cc:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
{
9000a7d0:	b083      	sub	sp, #12
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a7d2:	fb0e 0e02 	mla	lr, lr, r2, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a7d6:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000a7d8:	f8d9 300c 	ldr.w	r3, [r9, #12]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a7dc:	460c      	mov	r4, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a7de:	f102 0684 	add.w	r6, r2, #132	; 0x84
9000a7e2:	460d      	mov	r5, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000a7e4:	f3c3 4b0b 	ubfx	fp, r3, #16, #12
9000a7e8:	4680      	mov	r8, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a7ea:	eb09 0c06 	add.w	ip, r9, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a7ee:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000a7f2:	f8df a160 	ldr.w	sl, [pc, #352]	; 9000a954 <HAL_LTDC_ConfigLayer+0x1a0>
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a7f6:	f8dc 3004 	ldr.w	r3, [ip, #4]
9000a7fa:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
9000a7fe:	9301      	str	r3, [sp, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a800:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000a802:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000a806:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000a808:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a80a:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000a80e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000a810:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000a814:	6823      	ldr	r3, [r4, #0]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000a816:	44bb      	add	fp, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a818:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a81c:	9b01      	ldr	r3, [sp, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000a81e:	682a      	ldr	r2, [r5, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a820:	f8cc 3004 	str.w	r3, [ip, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000a824:	f8d9 300c 	ldr.w	r3, [r9, #12]
9000a828:	1c51      	adds	r1, r2, #1
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000a82a:	68e8      	ldr	r0, [r5, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000a82c:	f3c3 430b 	ubfx	r3, r3, #16, #12
  tmp2 = (pLayerCfg->Alpha0 << 24U);
9000a830:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000a834:	440b      	add	r3, r1
9000a836:	ea43 430b 	orr.w	r3, r3, fp, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000a83a:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000a83e:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000a842:	f8dc 3008 	ldr.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000a846:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000a84a:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000a84e:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000a850:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000a854:	68ab      	ldr	r3, [r5, #8]
9000a856:	f8d9 000c 	ldr.w	r0, [r9, #12]
9000a85a:	3301      	adds	r3, #1
9000a85c:	f3c0 000a 	ubfx	r0, r0, #0, #11
9000a860:	4403      	add	r3, r0
9000a862:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000a866:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000a868:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
9000a86c:	f8dc 3010 	ldr.w	r3, [ip, #16]
9000a870:	f023 0307 	bic.w	r3, r3, #7
9000a874:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000a878:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000a87c:	f8dc 3018 	ldr.w	r3, [ip, #24]
9000a880:	2300      	movs	r3, #0
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
9000a882:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
9000a886:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000a88a:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
9000a88e:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
9000a892:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
9000a896:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
9000a89a:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
9000a89e:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
9000a8a2:	f8dc 3014 	ldr.w	r3, [ip, #20]
9000a8a6:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
9000a8aa:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
9000a8ae:	696b      	ldr	r3, [r5, #20]
9000a8b0:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000a8b4:	f8dc 001c 	ldr.w	r0, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000a8b8:	69eb      	ldr	r3, [r5, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000a8ba:	ea00 0a0a 	and.w	sl, r0, sl
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000a8be:	6a28      	ldr	r0, [r5, #32]
9000a8c0:	4303      	orrs	r3, r0
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000a8c2:	f8cc a01c 	str.w	sl, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000a8c6:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
9000a8ca:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
9000a8ce:	2300      	movs	r3, #0
9000a8d0:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
9000a8d4:	6a6b      	ldr	r3, [r5, #36]	; 0x24
9000a8d6:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000a8da:	bb59      	cbnz	r1, 9000a934 <HAL_LTDC_ConfigLayer+0x180>
  {
    tmp = 4U;
9000a8dc:	2304      	movs	r3, #4
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000a8de:	1abf      	subs	r7, r7, r2
9000a8e0:	6aaa      	ldr	r2, [r5, #40]	; 0x28
9000a8e2:	fb03 f707 	mul.w	r7, r3, r7
9000a8e6:	fb02 f303 	mul.w	r3, r2, r3
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000a8ea:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000a8ec:	3707      	adds	r7, #7
9000a8ee:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
9000a8f2:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
9000a8f6:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
9000a8fa:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000a8fe:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
9000a902:	4b12      	ldr	r3, [pc, #72]	; (9000a94c <HAL_LTDC_ConfigLayer+0x198>)
9000a904:	f8dc 1030 	ldr.w	r1, [ip, #48]	; 0x30
9000a908:	400b      	ands	r3, r1
9000a90a:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000a90e:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000a912:	2201      	movs	r2, #1

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
9000a914:	f859 3006 	ldr.w	r3, [r9, r6]
9000a918:	4313      	orrs	r3, r2
9000a91a:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
9000a91e:	2300      	movs	r3, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000a920:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  return HAL_OK;
9000a924:	4618      	mov	r0, r3
  hltdc->State  = HAL_LTDC_STATE_READY;
9000a926:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
9000a92a:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
9000a92e:	b003      	add	sp, #12
9000a930:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
9000a934:	3901      	subs	r1, #1
9000a936:	2906      	cmp	r1, #6
9000a938:	d903      	bls.n	9000a942 <HAL_LTDC_ConfigLayer+0x18e>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000a93a:	2301      	movs	r3, #1
9000a93c:	e7cf      	b.n	9000a8de <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
9000a93e:	2002      	movs	r0, #2
}
9000a940:	4770      	bx	lr
9000a942:	4b03      	ldr	r3, [pc, #12]	; (9000a950 <HAL_LTDC_ConfigLayer+0x19c>)
9000a944:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
9000a948:	e7c9      	b.n	9000a8de <HAL_LTDC_ConfigLayer+0x12a>
9000a94a:	bf00      	nop
9000a94c:	fffff800 	.word	0xfffff800
9000a950:	9002a1e4 	.word	0x9002a1e4
9000a954:	fffff8f8 	.word	0xfffff8f8

9000a958 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
9000a958:	f890 20a0 	ldrb.w	r2, [r0, #160]	; 0xa0
9000a95c:	2a01      	cmp	r2, #1
9000a95e:	d019      	beq.n	9000a994 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a960:	6802      	ldr	r2, [r0, #0]
9000a962:	4603      	mov	r3, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a964:	2002      	movs	r0, #2
  __HAL_UNLOCK(hltdc);
9000a966:	f04f 0c00 	mov.w	ip, #0
{
9000a96a:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a96c:	f883 00a1 	strb.w	r0, [r3, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a970:	6b50      	ldr	r0, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
9000a972:	4c09      	ldr	r4, [pc, #36]	; (9000a998 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a974:	f020 0001 	bic.w	r0, r0, #1
9000a978:	6350      	str	r0, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000a97a:	2001      	movs	r0, #1
  LTDC->LIPCR = (uint32_t)Line;
9000a97c:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
9000a97e:	6b51      	ldr	r1, [r2, #52]	; 0x34
9000a980:	4301      	orrs	r1, r0
9000a982:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000a984:	f883 00a1 	strb.w	r0, [r3, #161]	; 0xa1
  return HAL_OK;
9000a988:	4660      	mov	r0, ip
  __HAL_UNLOCK(hltdc);
9000a98a:	f883 c0a0 	strb.w	ip, [r3, #160]	; 0xa0
}
9000a98e:	f85d 4b04 	ldr.w	r4, [sp], #4
9000a992:	4770      	bx	lr
  __HAL_LOCK(hltdc);
9000a994:	2002      	movs	r0, #2
}
9000a996:	4770      	bx	lr
9000a998:	50001000 	.word	0x50001000

9000a99c <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
9000a99c:	b538      	push	{r3, r4, r5, lr}
9000a99e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
9000a9a0:	f7fd f984 	bl	90007cac <HAL_GetTick>

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
9000a9a4:	2c00      	cmp	r4, #0
9000a9a6:	d05a      	beq.n	9000aa5e <HAL_MDMA_Init+0xc2>

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
9000a9a8:	6823      	ldr	r3, [r4, #0]
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000a9aa:	2202      	movs	r2, #2
  __HAL_UNLOCK(hmdma);
9000a9ac:	2100      	movs	r1, #0
9000a9ae:	4605      	mov	r5, r0
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000a9b0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_UNLOCK(hmdma);
9000a9b4:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
  __HAL_MDMA_DISABLE(hmdma);
9000a9b8:	68da      	ldr	r2, [r3, #12]
9000a9ba:	f022 0201 	bic.w	r2, r2, #1
9000a9be:	60da      	str	r2, [r3, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a9c0:	e005      	b.n	9000a9ce <HAL_MDMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000a9c2:	f7fd f973 	bl	90007cac <HAL_GetTick>
9000a9c6:	1b43      	subs	r3, r0, r5
9000a9c8:	2b05      	cmp	r3, #5
9000a9ca:	d841      	bhi.n	9000aa50 <HAL_MDMA_Init+0xb4>
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a9cc:	6823      	ldr	r3, [r4, #0]
9000a9ce:	68da      	ldr	r2, [r3, #12]
9000a9d0:	07d2      	lsls	r2, r2, #31
9000a9d2:	d4f6      	bmi.n	9000a9c2 <HAL_MDMA_Init+0x26>
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000a9d4:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
9000a9d8:	69e0      	ldr	r0, [r4, #28]
9000a9da:	432a      	orrs	r2, r5
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000a9dc:	68e1      	ldr	r1, [r4, #12]
9000a9de:	6925      	ldr	r5, [r4, #16]
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000a9e0:	4302      	orrs	r2, r0
9000a9e2:	6a20      	ldr	r0, [r4, #32]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000a9e4:	4329      	orrs	r1, r5
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000a9e6:	4302      	orrs	r2, r0
9000a9e8:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000a9ea:	4302      	orrs	r2, r0
9000a9ec:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9000a9ee:	4302      	orrs	r2, r0
9000a9f0:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000a9f2:	4302      	orrs	r2, r0
9000a9f4:	68a0      	ldr	r0, [r4, #8]
9000a9f6:	4302      	orrs	r2, r0
9000a9f8:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9000a9fa:	3801      	subs	r0, #1
9000a9fc:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000aa00:	6860      	ldr	r0, [r4, #4]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000aa02:	60d9      	str	r1, [r3, #12]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000aa04:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
9000aa08:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000aa0a:	d103      	bne.n	9000aa14 <HAL_MDMA_Init+0x78>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
9000aa0c:	691a      	ldr	r2, [r3, #16]
9000aa0e:	f042 4240 	orr.w	r2, r2, #3221225472	; 0xc0000000
9000aa12:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
9000aa14:	2100      	movs	r1, #0

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000aa16:	6b62      	ldr	r2, [r4, #52]	; 0x34
9000aa18:	428a      	cmp	r2, r1
  hmdma->Instance->CBNDTR = 0;
9000aa1a:	6159      	str	r1, [r3, #20]
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000aa1c:	db30      	blt.n	9000aa80 <HAL_MDMA_Init+0xe4>
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
9000aa1e:	b292      	uxth	r2, r2
9000aa20:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000aa22:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000aa24:	2a00      	cmp	r2, #0
9000aa26:	db1c      	blt.n	9000aa62 <HAL_MDMA_Init+0xc6>
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000aa28:	6a19      	ldr	r1, [r3, #32]
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000aa2a:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000aa2e:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000aa32:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000aa34:	d021      	beq.n	9000aa7a <HAL_MDMA_Init+0xde>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
9000aa36:	b2c0      	uxtb	r0, r0
9000aa38:	6298      	str	r0, [r3, #40]	; 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
9000aa3a:	2200      	movs	r2, #0
  hmdma->State = HAL_MDMA_STATE_READY;
9000aa3c:	2101      	movs	r1, #1
  hmdma->Instance->CLAR =  0;
9000aa3e:	625a      	str	r2, [r3, #36]	; 0x24
  return HAL_OK;
9000aa40:	4610      	mov	r0, r2
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000aa42:	66a2      	str	r2, [r4, #104]	; 0x68
  hmdma->LinkedListNodeCounter  = 0;
9000aa44:	6662      	str	r2, [r4, #100]	; 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
9000aa46:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  hmdma->LastLinkedListNodeAddress   = 0;
9000aa4a:	e9c4 2217 	strd	r2, r2, [r4, #92]	; 0x5c
}
9000aa4e:	bd38      	pop	{r3, r4, r5, pc}
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000aa50:	2240      	movs	r2, #64	; 0x40
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000aa52:	2303      	movs	r3, #3
      return HAL_ERROR;
9000aa54:	2001      	movs	r0, #1
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000aa56:	66a2      	str	r2, [r4, #104]	; 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000aa58:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
9000aa5c:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
9000aa5e:	2001      	movs	r0, #1
}
9000aa60:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000aa62:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
9000aa64:	4252      	negs	r2, r2
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000aa66:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000aa6a:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
9000aa6e:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000aa70:	6a19      	ldr	r1, [r3, #32]
9000aa72:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000aa76:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000aa78:	d1dd      	bne.n	9000aa36 <HAL_MDMA_Init+0x9a>
    hmdma->Instance->CTBR = 0;
9000aa7a:	2200      	movs	r2, #0
9000aa7c:	629a      	str	r2, [r3, #40]	; 0x28
9000aa7e:	e7dc      	b.n	9000aa3a <HAL_MDMA_Init+0x9e>
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000aa80:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
9000aa82:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000aa84:	f441 2180 	orr.w	r1, r1, #262144	; 0x40000
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000aa88:	b292      	uxth	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000aa8a:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000aa8c:	621a      	str	r2, [r3, #32]
9000aa8e:	e7c8      	b.n	9000aa22 <HAL_MDMA_Init+0x86>

9000aa90 <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
9000aa90:	b1f8      	cbz	r0, 9000aad2 <HAL_MDMA_DeInit+0x42>
  __HAL_MDMA_DISABLE(hmdma);
9000aa92:	6802      	ldr	r2, [r0, #0]
9000aa94:	4601      	mov	r1, r0
  hmdma->Instance->CCR  = 0;
9000aa96:	2300      	movs	r3, #0
  __HAL_MDMA_DISABLE(hmdma);
9000aa98:	68d0      	ldr	r0, [r2, #12]
{
9000aa9a:	b410      	push	{r4}
  __HAL_MDMA_DISABLE(hmdma);
9000aa9c:	f020 0001 	bic.w	r0, r0, #1
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000aaa0:	241f      	movs	r4, #31
  __HAL_MDMA_DISABLE(hmdma);
9000aaa2:	60d0      	str	r0, [r2, #12]
  return HAL_OK;
9000aaa4:	4618      	mov	r0, r3
  hmdma->Instance->CCR  = 0;
9000aaa6:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
9000aaa8:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
9000aaaa:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
9000aaac:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
9000aaae:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
9000aab0:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
9000aab2:	6253      	str	r3, [r2, #36]	; 0x24
  hmdma->Instance->CTBR = 0;
9000aab4:	6293      	str	r3, [r2, #40]	; 0x28
  hmdma->Instance->CMAR = 0;
9000aab6:	6313      	str	r3, [r2, #48]	; 0x30
  hmdma->Instance->CMDR = 0;
9000aab8:	6353      	str	r3, [r2, #52]	; 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000aaba:	6054      	str	r4, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000aabc:	668b      	str	r3, [r1, #104]	; 0x68
  __HAL_UNLOCK(hmdma);
9000aabe:	f881 303c 	strb.w	r3, [r1, #60]	; 0x3c
  hmdma->State = HAL_MDMA_STATE_RESET;
9000aac2:	f881 303d 	strb.w	r3, [r1, #61]	; 0x3d
}
9000aac6:	f85d 4b04 	ldr.w	r4, [sp], #4
  hmdma->LinkedListNodeCounter  = 0;
9000aaca:	664b      	str	r3, [r1, #100]	; 0x64
  hmdma->LastLinkedListNodeAddress   = 0;
9000aacc:	e9c1 3317 	strd	r3, r3, [r1, #92]	; 0x5c
}
9000aad0:	4770      	bx	lr
    return HAL_ERROR;
9000aad2:	2001      	movs	r0, #1
}
9000aad4:	4770      	bx	lr
9000aad6:	bf00      	nop

9000aad8 <HAL_MDMA_ConfigPostRequestMask>:
  if(hmdma == NULL)
9000aad8:	b310      	cbz	r0, 9000ab20 <HAL_MDMA_ConfigPostRequestMask+0x48>
9000aada:	4603      	mov	r3, r0
  __HAL_LOCK(hmdma);
9000aadc:	f890 003c 	ldrb.w	r0, [r0, #60]	; 0x3c
9000aae0:	2801      	cmp	r0, #1
9000aae2:	d01f      	beq.n	9000ab24 <HAL_MDMA_ConfigPostRequestMask+0x4c>
{
9000aae4:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hmdma);
9000aae6:	f04f 0e01 	mov.w	lr, #1
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000aaea:	f893 c03d 	ldrb.w	ip, [r3, #61]	; 0x3d
9000aaee:	45f4      	cmp	ip, lr
9000aaf0:	fa5f f08c 	uxtb.w	r0, ip
  __HAL_LOCK(hmdma);
9000aaf4:	f883 e03c 	strb.w	lr, [r3, #60]	; 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000aaf8:	d004      	beq.n	9000ab04 <HAL_MDMA_ConfigPostRequestMask+0x2c>
    status =  HAL_ERROR;
9000aafa:	4670      	mov	r0, lr
  __HAL_UNLOCK(hmdma);
9000aafc:	2200      	movs	r2, #0
9000aafe:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
9000ab02:	bd30      	pop	{r4, r5, pc}
    if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
9000ab04:	681d      	ldr	r5, [r3, #0]
9000ab06:	692c      	ldr	r4, [r5, #16]
9000ab08:	f014 4480 	ands.w	r4, r4, #1073741824	; 0x40000000
9000ab0c:	d1f6      	bne.n	9000aafc <HAL_MDMA_ConfigPostRequestMask+0x24>
      hmdma->Instance->CMAR = MaskAddress;
9000ab0e:	6329      	str	r1, [r5, #48]	; 0x30
      hmdma->Instance->CMDR = MaskData;
9000ab10:	636a      	str	r2, [r5, #52]	; 0x34
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000ab12:	692a      	ldr	r2, [r5, #16]
      if(MaskAddress == 0U)
9000ab14:	b941      	cbnz	r1, 9000ab28 <HAL_MDMA_ConfigPostRequestMask+0x50>
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000ab16:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
  HAL_StatusTypeDef  status = HAL_OK;
9000ab1a:	4608      	mov	r0, r1
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000ab1c:	612a      	str	r2, [r5, #16]
9000ab1e:	e7ed      	b.n	9000aafc <HAL_MDMA_ConfigPostRequestMask+0x24>
    return HAL_ERROR;
9000ab20:	2001      	movs	r0, #1
9000ab22:	4770      	bx	lr
  __HAL_LOCK(hmdma);
9000ab24:	2002      	movs	r0, #2
}
9000ab26:	4770      	bx	lr
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000ab28:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
  HAL_StatusTypeDef  status = HAL_OK;
9000ab2c:	4620      	mov	r0, r4
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000ab2e:	612a      	str	r2, [r5, #16]
9000ab30:	e7e4      	b.n	9000aafc <HAL_MDMA_ConfigPostRequestMask+0x24>
9000ab32:	bf00      	nop

9000ab34 <HAL_MDMA_Start_IT>:
  if(hmdma == NULL)
9000ab34:	2800      	cmp	r0, #0
9000ab36:	d06f      	beq.n	9000ac18 <HAL_MDMA_Start_IT+0xe4>
9000ab38:	4684      	mov	ip, r0
  __HAL_LOCK(hmdma);
9000ab3a:	f890 003c 	ldrb.w	r0, [r0, #60]	; 0x3c
9000ab3e:	2801      	cmp	r0, #1
9000ab40:	d072      	beq.n	9000ac28 <HAL_MDMA_Start_IT+0xf4>
9000ab42:	2001      	movs	r0, #1
9000ab44:	f88c 003c 	strb.w	r0, [ip, #60]	; 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000ab48:	f89c 003d 	ldrb.w	r0, [ip, #61]	; 0x3d
9000ab4c:	2801      	cmp	r0, #1
9000ab4e:	d004      	beq.n	9000ab5a <HAL_MDMA_Start_IT+0x26>
    __HAL_UNLOCK(hmdma);
9000ab50:	2300      	movs	r3, #0
    return HAL_BUSY;
9000ab52:	2002      	movs	r0, #2
    __HAL_UNLOCK(hmdma);
9000ab54:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
    return HAL_BUSY;
9000ab58:	4770      	bx	lr
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000ab5a:	2002      	movs	r0, #2
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000ab5c:	f3c3 0310 	ubfx	r3, r3, #0, #17
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000ab60:	f011 4f5f 	tst.w	r1, #3741319168	; 0xdf000000
{
9000ab64:	b530      	push	{r4, r5, lr}
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000ab66:	9d03      	ldr	r5, [sp, #12]
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000ab68:	f88c 003d 	strb.w	r0, [ip, #61]	; 0x3d
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000ab6c:	f04f 0000 	mov.w	r0, #0
    __HAL_MDMA_DISABLE(hmdma);
9000ab70:	f8dc 4000 	ldr.w	r4, [ip]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000ab74:	f105 3eff 	add.w	lr, r5, #4294967295
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000ab78:	f8cc 0068 	str.w	r0, [ip, #104]	; 0x68
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000ab7c:	f5a0 3000 	sub.w	r0, r0, #131072	; 0x20000
    __HAL_MDMA_DISABLE(hmdma);
9000ab80:	68e5      	ldr	r5, [r4, #12]
9000ab82:	f025 0501 	bic.w	r5, r5, #1
9000ab86:	60e5      	str	r5, [r4, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000ab88:	6965      	ldr	r5, [r4, #20]
9000ab8a:	ea00 0005 	and.w	r0, r0, r5
9000ab8e:	ea40 0003 	orr.w	r0, r0, r3
9000ab92:	6160      	str	r0, [r4, #20]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000ab94:	6963      	ldr	r3, [r4, #20]
9000ab96:	f3c3 0313 	ubfx	r3, r3, #0, #20
9000ab9a:	ea43 530e 	orr.w	r3, r3, lr, lsl #20
9000ab9e:	6163      	str	r3, [r4, #20]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000aba0:	f04f 031f 	mov.w	r3, #31
9000aba4:	6063      	str	r3, [r4, #4]
  hmdma->Instance->CDAR = DstAddress;
9000aba6:	61e2      	str	r2, [r4, #28]
  hmdma->Instance->CSAR = SrcAddress;
9000aba8:	61a1      	str	r1, [r4, #24]
    hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;
9000abaa:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000abac:	bf0c      	ite	eq
9000abae:	f443 3380 	orreq.w	r3, r3, #65536	; 0x10000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000abb2:	f423 3380 	bicne.w	r3, r3, #65536	; 0x10000
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000abb6:	f012 4f5f 	tst.w	r2, #3741319168	; 0xdf000000
    if(hmdma->XferBlockCpltCallback != NULL)
9000abba:	f8dc 204c 	ldr.w	r2, [ip, #76]	; 0x4c
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000abbe:	62a3      	str	r3, [r4, #40]	; 0x28
    hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
9000abc0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000abc2:	bf0c      	ite	eq
9000abc4:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);
9000abc8:	f423 3300 	bicne.w	r3, r3, #131072	; 0x20000
9000abcc:	62a3      	str	r3, [r4, #40]	; 0x28
  hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
9000abce:	f8dc 305c 	ldr.w	r3, [ip, #92]	; 0x5c
9000abd2:	6263      	str	r3, [r4, #36]	; 0x24
    __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
9000abd4:	68e3      	ldr	r3, [r4, #12]
9000abd6:	f043 0306 	orr.w	r3, r3, #6
9000abda:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBlockCpltCallback != NULL)
9000abdc:	b11a      	cbz	r2, 9000abe6 <HAL_MDMA_Start_IT+0xb2>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);
9000abde:	68e3      	ldr	r3, [r4, #12]
9000abe0:	f043 0310 	orr.w	r3, r3, #16
9000abe4:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000abe6:	f8dc 3050 	ldr.w	r3, [ip, #80]	; 0x50
9000abea:	b11b      	cbz	r3, 9000abf4 <HAL_MDMA_Start_IT+0xc0>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);
9000abec:	68e3      	ldr	r3, [r4, #12]
9000abee:	f043 0308 	orr.w	r3, r3, #8
9000abf2:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBufferCpltCallback != NULL)
9000abf4:	f8dc 3048 	ldr.w	r3, [ip, #72]	; 0x48
9000abf8:	b11b      	cbz	r3, 9000ac02 <HAL_MDMA_Start_IT+0xce>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
9000abfa:	68e3      	ldr	r3, [r4, #12]
9000abfc:	f043 0320 	orr.w	r3, r3, #32
9000ac00:	60e3      	str	r3, [r4, #12]
    __HAL_MDMA_ENABLE(hmdma);
9000ac02:	68e3      	ldr	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000ac04:	f8dc 2004 	ldr.w	r2, [ip, #4]
    __HAL_MDMA_ENABLE(hmdma);
9000ac08:	f043 0301 	orr.w	r3, r3, #1
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000ac0c:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
    __HAL_MDMA_ENABLE(hmdma);
9000ac10:	60e3      	str	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000ac12:	d003      	beq.n	9000ac1c <HAL_MDMA_Start_IT+0xe8>
  return HAL_OK;
9000ac14:	2000      	movs	r0, #0
}
9000ac16:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
9000ac18:	2001      	movs	r0, #1
9000ac1a:	4770      	bx	lr
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000ac1c:	68e3      	ldr	r3, [r4, #12]
  return HAL_OK;
9000ac1e:	2000      	movs	r0, #0
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000ac20:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000ac24:	60e3      	str	r3, [r4, #12]
}
9000ac26:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hmdma);
9000ac28:	2002      	movs	r0, #2
}
9000ac2a:	4770      	bx	lr

9000ac2c <HAL_MDMA_Abort_IT>:
  if(hmdma == NULL)
9000ac2c:	4603      	mov	r3, r0
9000ac2e:	b188      	cbz	r0, 9000ac54 <HAL_MDMA_Abort_IT+0x28>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000ac30:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
9000ac34:	2a02      	cmp	r2, #2
9000ac36:	d003      	beq.n	9000ac40 <HAL_MDMA_Abort_IT+0x14>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000ac38:	2280      	movs	r2, #128	; 0x80
    return HAL_ERROR;
9000ac3a:	2001      	movs	r0, #1
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000ac3c:	669a      	str	r2, [r3, #104]	; 0x68
    return HAL_ERROR;
9000ac3e:	4770      	bx	lr
    __HAL_MDMA_DISABLE(hmdma);
9000ac40:	6802      	ldr	r2, [r0, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000ac42:	2104      	movs	r1, #4
  return HAL_OK;
9000ac44:	2000      	movs	r0, #0
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000ac46:	f883 103d 	strb.w	r1, [r3, #61]	; 0x3d
    __HAL_MDMA_DISABLE(hmdma);
9000ac4a:	68d3      	ldr	r3, [r2, #12]
9000ac4c:	f023 0301 	bic.w	r3, r3, #1
9000ac50:	60d3      	str	r3, [r2, #12]
  return HAL_OK;
9000ac52:	4770      	bx	lr
    return HAL_ERROR;
9000ac54:	2001      	movs	r0, #1
}
9000ac56:	4770      	bx	lr

9000ac58 <HAL_MDMA_IRQHandler>:
{
9000ac58:	b530      	push	{r4, r5, lr}
  __IO uint32_t count = 0;
9000ac5a:	2300      	movs	r3, #0
{
9000ac5c:	b083      	sub	sp, #12
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000ac5e:	f04f 45a4 	mov.w	r5, #1375731712	; 0x52000000
{
9000ac62:	4604      	mov	r4, r0
  __IO uint32_t count = 0;
9000ac64:	9301      	str	r3, [sp, #4]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000ac66:	2101      	movs	r1, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000ac68:	4b57      	ldr	r3, [pc, #348]	; (9000adc8 <HAL_MDMA_IRQHandler+0x170>)
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000ac6a:	6828      	ldr	r0, [r5, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000ac6c:	4a57      	ldr	r2, [pc, #348]	; (9000adcc <HAL_MDMA_IRQHandler+0x174>)
  uint32_t timeout = SystemCoreClock / 9600U;
9000ac6e:	681d      	ldr	r5, [r3, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000ac70:	6823      	ldr	r3, [r4, #0]
9000ac72:	441a      	add	r2, r3
9000ac74:	f3c2 1284 	ubfx	r2, r2, #6, #5
9000ac78:	fa01 f202 	lsl.w	r2, r1, r2
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000ac7c:	4202      	tst	r2, r0
9000ac7e:	f000 80a0 	beq.w	9000adc2 <HAL_MDMA_IRQHandler+0x16a>
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
9000ac82:	681a      	ldr	r2, [r3, #0]
9000ac84:	07d1      	lsls	r1, r2, #31
9000ac86:	d529      	bpl.n	9000acdc <HAL_MDMA_IRQHandler+0x84>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
9000ac88:	68da      	ldr	r2, [r3, #12]
9000ac8a:	0792      	lsls	r2, r2, #30
9000ac8c:	d526      	bpl.n	9000acdc <HAL_MDMA_IRQHandler+0x84>
      __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
9000ac8e:	68da      	ldr	r2, [r3, #12]
9000ac90:	f022 0202 	bic.w	r2, r2, #2
9000ac94:	60da      	str	r2, [r3, #12]
      errorFlag = hmdma->Instance->CESR;
9000ac96:	689a      	ldr	r2, [r3, #8]
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000ac98:	6ea1      	ldr	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TED) == 0U)
9000ac9a:	0610      	lsls	r0, r2, #24
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000ac9c:	bf54      	ite	pl
9000ac9e:	f041 0101 	orrpl.w	r1, r1, #1
        hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;
9000aca2:	f041 0102 	orrmi.w	r1, r1, #2
9000aca6:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TEMD) != 0U)
9000aca8:	0591      	lsls	r1, r2, #22
9000acaa:	d503      	bpl.n	9000acb4 <HAL_MDMA_IRQHandler+0x5c>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
9000acac:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000acae:	f041 0104 	orr.w	r1, r1, #4
9000acb2:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TELD) != 0U)
9000acb4:	05d0      	lsls	r0, r2, #23
9000acb6:	d503      	bpl.n	9000acc0 <HAL_MDMA_IRQHandler+0x68>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
9000acb8:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000acba:	f041 0108 	orr.w	r1, r1, #8
9000acbe:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_ASE) != 0U)
9000acc0:	0551      	lsls	r1, r2, #21
9000acc2:	d503      	bpl.n	9000accc <HAL_MDMA_IRQHandler+0x74>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
9000acc4:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000acc6:	f041 0110 	orr.w	r1, r1, #16
9000acca:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_BSE) != 0U)
9000accc:	0510      	lsls	r0, r2, #20
9000acce:	d503      	bpl.n	9000acd8 <HAL_MDMA_IRQHandler+0x80>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
9000acd0:	6ea2      	ldr	r2, [r4, #104]	; 0x68
9000acd2:	f042 0220 	orr.w	r2, r2, #32
9000acd6:	66a2      	str	r2, [r4, #104]	; 0x68
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);
9000acd8:	2201      	movs	r2, #1
9000acda:	605a      	str	r2, [r3, #4]
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
9000acdc:	681a      	ldr	r2, [r3, #0]
9000acde:	06d1      	lsls	r1, r2, #27
9000ace0:	d509      	bpl.n	9000acf6 <HAL_MDMA_IRQHandler+0x9e>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
9000ace2:	68da      	ldr	r2, [r3, #12]
9000ace4:	0692      	lsls	r2, r2, #26
9000ace6:	d506      	bpl.n	9000acf6 <HAL_MDMA_IRQHandler+0x9e>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000ace8:	2110      	movs	r1, #16
      if(hmdma->XferBufferCpltCallback != NULL)
9000acea:	6ca2      	ldr	r2, [r4, #72]	; 0x48
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000acec:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBufferCpltCallback != NULL)
9000acee:	b112      	cbz	r2, 9000acf6 <HAL_MDMA_IRQHandler+0x9e>
        hmdma->XferBufferCpltCallback(hmdma);
9000acf0:	4620      	mov	r0, r4
9000acf2:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
9000acf4:	6823      	ldr	r3, [r4, #0]
9000acf6:	681a      	ldr	r2, [r3, #0]
9000acf8:	0710      	lsls	r0, r2, #28
9000acfa:	d509      	bpl.n	9000ad10 <HAL_MDMA_IRQHandler+0xb8>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
9000acfc:	68da      	ldr	r2, [r3, #12]
9000acfe:	06d1      	lsls	r1, r2, #27
9000ad00:	d506      	bpl.n	9000ad10 <HAL_MDMA_IRQHandler+0xb8>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000ad02:	2108      	movs	r1, #8
      if(hmdma->XferBlockCpltCallback != NULL)
9000ad04:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000ad06:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBlockCpltCallback != NULL)
9000ad08:	b112      	cbz	r2, 9000ad10 <HAL_MDMA_IRQHandler+0xb8>
        hmdma->XferBlockCpltCallback(hmdma);
9000ad0a:	4620      	mov	r0, r4
9000ad0c:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
9000ad0e:	6823      	ldr	r3, [r4, #0]
9000ad10:	681a      	ldr	r2, [r3, #0]
9000ad12:	0752      	lsls	r2, r2, #29
9000ad14:	d509      	bpl.n	9000ad2a <HAL_MDMA_IRQHandler+0xd2>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
9000ad16:	68da      	ldr	r2, [r3, #12]
9000ad18:	0710      	lsls	r0, r2, #28
9000ad1a:	d506      	bpl.n	9000ad2a <HAL_MDMA_IRQHandler+0xd2>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000ad1c:	2104      	movs	r1, #4
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000ad1e:	6d22      	ldr	r2, [r4, #80]	; 0x50
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000ad20:	6059      	str	r1, [r3, #4]
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000ad22:	b112      	cbz	r2, 9000ad2a <HAL_MDMA_IRQHandler+0xd2>
        hmdma->XferRepeatBlockCpltCallback(hmdma);
9000ad24:	4620      	mov	r0, r4
9000ad26:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
9000ad28:	6823      	ldr	r3, [r4, #0]
9000ad2a:	681a      	ldr	r2, [r3, #0]
9000ad2c:	0791      	lsls	r1, r2, #30
9000ad2e:	d516      	bpl.n	9000ad5e <HAL_MDMA_IRQHandler+0x106>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
9000ad30:	68da      	ldr	r2, [r3, #12]
9000ad32:	0752      	lsls	r2, r2, #29
9000ad34:	d513      	bpl.n	9000ad5e <HAL_MDMA_IRQHandler+0x106>
      __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000ad36:	68da      	ldr	r2, [r3, #12]
9000ad38:	f022 023e 	bic.w	r2, r2, #62	; 0x3e
9000ad3c:	60da      	str	r2, [r3, #12]
      if(HAL_MDMA_STATE_ABORT == hmdma->State)
9000ad3e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
9000ad42:	2a04      	cmp	r2, #4
9000ad44:	d034      	beq.n	9000adb0 <HAL_MDMA_IRQHandler+0x158>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000ad46:	2202      	movs	r2, #2
      __HAL_UNLOCK(hmdma);
9000ad48:	2100      	movs	r1, #0
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000ad4a:	605a      	str	r2, [r3, #4]
      hmdma->State = HAL_MDMA_STATE_READY;
9000ad4c:	2201      	movs	r2, #1
      if(hmdma->XferCpltCallback != NULL)
9000ad4e:	6c63      	ldr	r3, [r4, #68]	; 0x44
      __HAL_UNLOCK(hmdma);
9000ad50:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
      hmdma->State = HAL_MDMA_STATE_READY;
9000ad54:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      if(hmdma->XferCpltCallback != NULL)
9000ad58:	b10b      	cbz	r3, 9000ad5e <HAL_MDMA_IRQHandler+0x106>
        hmdma->XferCpltCallback(hmdma);
9000ad5a:	4620      	mov	r0, r4
9000ad5c:	4798      	blx	r3
  if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
9000ad5e:	6ea3      	ldr	r3, [r4, #104]	; 0x68
9000ad60:	2b00      	cmp	r3, #0
9000ad62:	d02e      	beq.n	9000adc2 <HAL_MDMA_IRQHandler+0x16a>
    __HAL_MDMA_DISABLE(hmdma);
9000ad64:	6821      	ldr	r1, [r4, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000ad66:	2004      	movs	r0, #4
  uint32_t timeout = SystemCoreClock / 9600U;
9000ad68:	4b19      	ldr	r3, [pc, #100]	; (9000add0 <HAL_MDMA_IRQHandler+0x178>)
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000ad6a:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  uint32_t timeout = SystemCoreClock / 9600U;
9000ad6e:	fba3 3205 	umull	r3, r2, r3, r5
    __HAL_MDMA_DISABLE(hmdma);
9000ad72:	68cb      	ldr	r3, [r1, #12]
9000ad74:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000ad78:	0a92      	lsrs	r2, r2, #10
    __HAL_MDMA_DISABLE(hmdma);
9000ad7a:	60cb      	str	r3, [r1, #12]
9000ad7c:	e002      	b.n	9000ad84 <HAL_MDMA_IRQHandler+0x12c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
9000ad7e:	68cb      	ldr	r3, [r1, #12]
9000ad80:	07d8      	lsls	r0, r3, #31
9000ad82:	d504      	bpl.n	9000ad8e <HAL_MDMA_IRQHandler+0x136>
      if (++count > timeout)
9000ad84:	9b01      	ldr	r3, [sp, #4]
9000ad86:	3301      	adds	r3, #1
9000ad88:	4293      	cmp	r3, r2
9000ad8a:	9301      	str	r3, [sp, #4]
9000ad8c:	d9f7      	bls.n	9000ad7e <HAL_MDMA_IRQHandler+0x126>
    __HAL_UNLOCK(hmdma);
9000ad8e:	2300      	movs	r3, #0
9000ad90:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000ad94:	68cb      	ldr	r3, [r1, #12]
9000ad96:	07db      	lsls	r3, r3, #31
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000ad98:	bf4c      	ite	mi
9000ad9a:	2303      	movmi	r3, #3
      hmdma->State = HAL_MDMA_STATE_READY;
9000ad9c:	2301      	movpl	r3, #1
9000ad9e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    if (hmdma->XferErrorCallback != NULL)
9000ada2:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000ada4:	b16b      	cbz	r3, 9000adc2 <HAL_MDMA_IRQHandler+0x16a>
      hmdma->XferErrorCallback(hmdma);
9000ada6:	4620      	mov	r0, r4
}
9000ada8:	b003      	add	sp, #12
9000adaa:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      hmdma->XferErrorCallback(hmdma);
9000adae:	4718      	bx	r3
        __HAL_UNLOCK(hmdma);
9000adb0:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_READY;
9000adb2:	2201      	movs	r2, #1
        if(hmdma->XferAbortCallback != NULL)
9000adb4:	6da3      	ldr	r3, [r4, #88]	; 0x58
        __HAL_UNLOCK(hmdma);
9000adb6:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
        hmdma->State = HAL_MDMA_STATE_READY;
9000adba:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        if(hmdma->XferAbortCallback != NULL)
9000adbe:	2b00      	cmp	r3, #0
9000adc0:	d1f1      	bne.n	9000ada6 <HAL_MDMA_IRQHandler+0x14e>
}
9000adc2:	b003      	add	sp, #12
9000adc4:	bd30      	pop	{r4, r5, pc}
9000adc6:	bf00      	nop
9000adc8:	24000060 	.word	0x24000060
9000adcc:	adffffc0 	.word	0xadffffc0
9000add0:	1b4e81b5 	.word	0x1b4e81b5

9000add4 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
9000add4:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000add6:	4c10      	ldr	r4, [pc, #64]	; (9000ae18 <HAL_PWREx_ConfigSupply+0x44>)
9000add8:	68e3      	ldr	r3, [r4, #12]
9000adda:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000adde:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000ade0:	d105      	bne.n	9000adee <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000ade2:	f003 0307 	and.w	r3, r3, #7
    {
      /* Supply configuration update locked, can't apply a new supply config */
      return HAL_ERROR;
9000ade6:	1a18      	subs	r0, r3, r0
9000ade8:	bf18      	it	ne
9000adea:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
9000adec:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
9000adee:	f023 0307 	bic.w	r3, r3, #7
9000adf2:	4303      	orrs	r3, r0
9000adf4:	60e3      	str	r3, [r4, #12]
  tickstart = HAL_GetTick ();
9000adf6:	f7fc ff59 	bl	90007cac <HAL_GetTick>
9000adfa:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000adfc:	e005      	b.n	9000ae0a <HAL_PWREx_ConfigSupply+0x36>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
9000adfe:	f7fc ff55 	bl	90007cac <HAL_GetTick>
9000ae02:	1b40      	subs	r0, r0, r5
9000ae04:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
9000ae08:	d804      	bhi.n	9000ae14 <HAL_PWREx_ConfigSupply+0x40>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000ae0a:	6863      	ldr	r3, [r4, #4]
9000ae0c:	049b      	lsls	r3, r3, #18
9000ae0e:	d5f6      	bpl.n	9000adfe <HAL_PWREx_ConfigSupply+0x2a>
  return HAL_OK;
9000ae10:	2000      	movs	r0, #0
}
9000ae12:	bd38      	pop	{r3, r4, r5, pc}
      return HAL_ERROR;
9000ae14:	2001      	movs	r0, #1
}
9000ae16:	bd38      	pop	{r3, r4, r5, pc}
9000ae18:	58024800 	.word	0x58024800

9000ae1c <HAL_RCC_GetSysClockFreq.part.0>:
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000ae1c:	4b3b      	ldr	r3, [pc, #236]	; (9000af0c <HAL_RCC_GetSysClockFreq.part.0+0xf0>)
uint32_t HAL_RCC_GetSysClockFreq(void)
9000ae1e:	b430      	push	{r4, r5}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000ae20:	6a9a      	ldr	r2, [r3, #40]	; 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000ae22:	6a9c      	ldr	r4, [r3, #40]	; 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000ae24:	6add      	ldr	r5, [r3, #44]	; 0x2c
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));

      if (pllm != 0U)
9000ae26:	f414 7f7c 	tst.w	r4, #1008	; 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000ae2a:	6b59      	ldr	r1, [r3, #52]	; 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000ae2c:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000ae30:	d038      	beq.n	9000aea4 <HAL_RCC_GetSysClockFreq.part.0+0x88>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000ae32:	f3c1 01cc 	ubfx	r1, r1, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000ae36:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000ae3a:	f002 0203 	and.w	r2, r2, #3
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000ae3e:	fb05 f101 	mul.w	r1, r5, r1
9000ae42:	2a01      	cmp	r2, #1
9000ae44:	ee07 1a90 	vmov	s15, r1
9000ae48:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
      {
        switch (pllsource)
9000ae4c:	d002      	beq.n	9000ae54 <HAL_RCC_GetSysClockFreq.part.0+0x38>
9000ae4e:	2a02      	cmp	r2, #2
9000ae50:	d04e      	beq.n	9000aef0 <HAL_RCC_GetSysClockFreq.part.0+0xd4>
9000ae52:	b34a      	cbz	r2, 9000aea8 <HAL_RCC_GetSysClockFreq.part.0+0x8c>
          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            break;

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ae54:	ee07 0a90 	vmov	s15, r0
9000ae58:	ed9f 5a2d 	vldr	s10, [pc, #180]	; 9000af10 <HAL_RCC_GetSysClockFreq.part.0+0xf4>
9000ae5c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000ae60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000ae62:	eec5 6a27 	vdiv.f32	s13, s10, s15
9000ae66:	eddf 5a2b 	vldr	s11, [pc, #172]	; 9000af14 <HAL_RCC_GetSysClockFreq.part.0+0xf8>
9000ae6a:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000ae6e:	ee07 3a90 	vmov	s15, r3
9000ae72:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000ae76:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000ae7a:	eee7 7a25 	vfma.f32	s15, s14, s11
9000ae7e:	ee77 7a86 	vadd.f32	s15, s15, s12
9000ae82:	ee66 6aa7 	vmul.f32	s13, s13, s15
            break;
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000ae86:	4b21      	ldr	r3, [pc, #132]	; (9000af0c <HAL_RCC_GetSysClockFreq.part.0+0xf0>)
9000ae88:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000ae8a:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000ae8e:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000ae90:	ee07 3a90 	vmov	s15, r3
9000ae94:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000ae98:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000ae9c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000aea0:	ee17 0a90 	vmov	r0, s15
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
9000aea4:	bc30      	pop	{r4, r5}
9000aea6:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000aea8:	681a      	ldr	r2, [r3, #0]
9000aeaa:	0692      	lsls	r2, r2, #26
9000aeac:	d527      	bpl.n	9000aefe <HAL_RCC_GetSysClockFreq.part.0+0xe2>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000aeae:	6819      	ldr	r1, [r3, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000aeb0:	ee07 0a90 	vmov	s15, r0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000aeb4:	4a18      	ldr	r2, [pc, #96]	; (9000af18 <HAL_RCC_GetSysClockFreq.part.0+0xfc>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000aeb6:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000aeba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000aebc:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000aec0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000aec4:	ed9f 5a13 	vldr	s10, [pc, #76]	; 9000af14 <HAL_RCC_GetSysClockFreq.part.0+0xf8>
9000aec8:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000aecc:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000aece:	ee06 3a90 	vmov	s13, r3
9000aed2:	ee06 2a10 	vmov	s12, r2
9000aed6:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000aeda:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000aede:	eee7 6a05 	vfma.f32	s13, s14, s10
9000aee2:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000aee6:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000aeea:	ee66 6a87 	vmul.f32	s13, s13, s14
9000aeee:	e7ca      	b.n	9000ae86 <HAL_RCC_GetSysClockFreq.part.0+0x6a>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000aef0:	ee07 0a90 	vmov	s15, r0
9000aef4:	ed9f 5a09 	vldr	s10, [pc, #36]	; 9000af1c <HAL_RCC_GetSysClockFreq.part.0+0x100>
9000aef8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000aefc:	e7b0      	b.n	9000ae60 <HAL_RCC_GetSysClockFreq.part.0+0x44>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000aefe:	ee07 0a90 	vmov	s15, r0
9000af02:	ed9f 5a07 	vldr	s10, [pc, #28]	; 9000af20 <HAL_RCC_GetSysClockFreq.part.0+0x104>
9000af06:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000af0a:	e7a9      	b.n	9000ae60 <HAL_RCC_GetSysClockFreq.part.0+0x44>
9000af0c:	58024400 	.word	0x58024400
9000af10:	4a742400 	.word	0x4a742400
9000af14:	39000000 	.word	0x39000000
9000af18:	03d09000 	.word	0x03d09000
9000af1c:	4bbebc20 	.word	0x4bbebc20
9000af20:	4c742400 	.word	0x4c742400

9000af24 <HAL_RCC_OscConfig>:
  if (RCC_OscInitStruct == NULL)
9000af24:	2800      	cmp	r0, #0
9000af26:	f000 81e8 	beq.w	9000b2fa <HAL_RCC_OscConfig+0x3d6>
{
9000af2a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
9000af2c:	6803      	ldr	r3, [r0, #0]
9000af2e:	4604      	mov	r4, r0
9000af30:	07d9      	lsls	r1, r3, #31
9000af32:	d52e      	bpl.n	9000af92 <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000af34:	49a4      	ldr	r1, [pc, #656]	; (9000b1c8 <HAL_RCC_OscConfig+0x2a4>)
9000af36:	690a      	ldr	r2, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000af38:	6a89      	ldr	r1, [r1, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000af3a:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000af3e:	2a10      	cmp	r2, #16
9000af40:	f000 8107 	beq.w	9000b152 <HAL_RCC_OscConfig+0x22e>
9000af44:	2a18      	cmp	r2, #24
9000af46:	f000 80ff 	beq.w	9000b148 <HAL_RCC_OscConfig+0x224>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000af4a:	6863      	ldr	r3, [r4, #4]
9000af4c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
9000af50:	f000 812a 	beq.w	9000b1a8 <HAL_RCC_OscConfig+0x284>
9000af54:	2b00      	cmp	r3, #0
9000af56:	f000 8168 	beq.w	9000b22a <HAL_RCC_OscConfig+0x306>
9000af5a:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
9000af5e:	4b9a      	ldr	r3, [pc, #616]	; (9000b1c8 <HAL_RCC_OscConfig+0x2a4>)
9000af60:	681a      	ldr	r2, [r3, #0]
9000af62:	f000 8289 	beq.w	9000b478 <HAL_RCC_OscConfig+0x554>
9000af66:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
9000af6a:	601a      	str	r2, [r3, #0]
9000af6c:	681a      	ldr	r2, [r3, #0]
9000af6e:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
9000af72:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9000af74:	f7fc fe9a 	bl	90007cac <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000af78:	4e93      	ldr	r6, [pc, #588]	; (9000b1c8 <HAL_RCC_OscConfig+0x2a4>)
        tickstart = HAL_GetTick();
9000af7a:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000af7c:	e005      	b.n	9000af8a <HAL_RCC_OscConfig+0x66>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000af7e:	f7fc fe95 	bl	90007cac <HAL_GetTick>
9000af82:	1b40      	subs	r0, r0, r5
9000af84:	2864      	cmp	r0, #100	; 0x64
9000af86:	f200 814e 	bhi.w	9000b226 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000af8a:	6833      	ldr	r3, [r6, #0]
9000af8c:	039b      	lsls	r3, r3, #14
9000af8e:	d5f6      	bpl.n	9000af7e <HAL_RCC_OscConfig+0x5a>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
9000af90:	6823      	ldr	r3, [r4, #0]
9000af92:	079d      	lsls	r5, r3, #30
9000af94:	f100 808a 	bmi.w	9000b0ac <HAL_RCC_OscConfig+0x188>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000af98:	06d9      	lsls	r1, r3, #27
9000af9a:	d533      	bpl.n	9000b004 <HAL_RCC_OscConfig+0xe0>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000af9c:	4a8a      	ldr	r2, [pc, #552]	; (9000b1c8 <HAL_RCC_OscConfig+0x2a4>)
9000af9e:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000afa0:	6a92      	ldr	r2, [r2, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000afa2:	f003 0338 	and.w	r3, r3, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000afa6:	2b08      	cmp	r3, #8
9000afa8:	f000 80e3 	beq.w	9000b172 <HAL_RCC_OscConfig+0x24e>
9000afac:	2b18      	cmp	r3, #24
9000afae:	f000 80db 	beq.w	9000b168 <HAL_RCC_OscConfig+0x244>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000afb2:	69e3      	ldr	r3, [r4, #28]
        __HAL_RCC_CSI_ENABLE();
9000afb4:	4d84      	ldr	r5, [pc, #528]	; (9000b1c8 <HAL_RCC_OscConfig+0x2a4>)
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000afb6:	2b00      	cmp	r3, #0
9000afb8:	f000 816f 	beq.w	9000b29a <HAL_RCC_OscConfig+0x376>
        __HAL_RCC_CSI_ENABLE();
9000afbc:	682b      	ldr	r3, [r5, #0]
9000afbe:	f043 0380 	orr.w	r3, r3, #128	; 0x80
9000afc2:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000afc4:	f7fc fe72 	bl	90007cac <HAL_GetTick>
9000afc8:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000afca:	e005      	b.n	9000afd8 <HAL_RCC_OscConfig+0xb4>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000afcc:	f7fc fe6e 	bl	90007cac <HAL_GetTick>
9000afd0:	1b80      	subs	r0, r0, r6
9000afd2:	2802      	cmp	r0, #2
9000afd4:	f200 8127 	bhi.w	9000b226 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000afd8:	682b      	ldr	r3, [r5, #0]
9000afda:	05db      	lsls	r3, r3, #23
9000afdc:	d5f6      	bpl.n	9000afcc <HAL_RCC_OscConfig+0xa8>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000afde:	f7fc fe6b 	bl	90007cb8 <HAL_GetREVID>
9000afe2:	f241 0303 	movw	r3, #4099	; 0x1003
9000afe6:	4298      	cmp	r0, r3
9000afe8:	f200 826d 	bhi.w	9000b4c6 <HAL_RCC_OscConfig+0x5a2>
9000afec:	6a22      	ldr	r2, [r4, #32]
9000afee:	686b      	ldr	r3, [r5, #4]
9000aff0:	2a20      	cmp	r2, #32
9000aff2:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000aff6:	bf0c      	ite	eq
9000aff8:	f043 4380 	orreq.w	r3, r3, #1073741824	; 0x40000000
9000affc:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
9000b000:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b002:	6823      	ldr	r3, [r4, #0]
9000b004:	071d      	lsls	r5, r3, #28
9000b006:	d516      	bpl.n	9000b036 <HAL_RCC_OscConfig+0x112>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000b008:	6963      	ldr	r3, [r4, #20]
      __HAL_RCC_LSI_ENABLE();
9000b00a:	4d6f      	ldr	r5, [pc, #444]	; (9000b1c8 <HAL_RCC_OscConfig+0x2a4>)
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000b00c:	2b00      	cmp	r3, #0
9000b00e:	f000 8122 	beq.w	9000b256 <HAL_RCC_OscConfig+0x332>
      __HAL_RCC_LSI_ENABLE();
9000b012:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000b014:	f043 0301 	orr.w	r3, r3, #1
9000b018:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
9000b01a:	f7fc fe47 	bl	90007cac <HAL_GetTick>
9000b01e:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000b020:	e005      	b.n	9000b02e <HAL_RCC_OscConfig+0x10a>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000b022:	f7fc fe43 	bl	90007cac <HAL_GetTick>
9000b026:	1b80      	subs	r0, r0, r6
9000b028:	2802      	cmp	r0, #2
9000b02a:	f200 80fc 	bhi.w	9000b226 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000b02e:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000b030:	0798      	lsls	r0, r3, #30
9000b032:	d5f6      	bpl.n	9000b022 <HAL_RCC_OscConfig+0xfe>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
9000b034:	6823      	ldr	r3, [r4, #0]
9000b036:	069a      	lsls	r2, r3, #26
9000b038:	d516      	bpl.n	9000b068 <HAL_RCC_OscConfig+0x144>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000b03a:	69a3      	ldr	r3, [r4, #24]
      __HAL_RCC_HSI48_ENABLE();
9000b03c:	4d62      	ldr	r5, [pc, #392]	; (9000b1c8 <HAL_RCC_OscConfig+0x2a4>)
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000b03e:	2b00      	cmp	r3, #0
9000b040:	f000 811a 	beq.w	9000b278 <HAL_RCC_OscConfig+0x354>
      __HAL_RCC_HSI48_ENABLE();
9000b044:	682b      	ldr	r3, [r5, #0]
9000b046:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000b04a:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000b04c:	f7fc fe2e 	bl	90007cac <HAL_GetTick>
9000b050:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000b052:	e005      	b.n	9000b060 <HAL_RCC_OscConfig+0x13c>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000b054:	f7fc fe2a 	bl	90007cac <HAL_GetTick>
9000b058:	1b80      	subs	r0, r0, r6
9000b05a:	2802      	cmp	r0, #2
9000b05c:	f200 80e3 	bhi.w	9000b226 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000b060:	682b      	ldr	r3, [r5, #0]
9000b062:	049f      	lsls	r7, r3, #18
9000b064:	d5f6      	bpl.n	9000b054 <HAL_RCC_OscConfig+0x130>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
9000b066:	6823      	ldr	r3, [r4, #0]
9000b068:	0759      	lsls	r1, r3, #29
9000b06a:	f100 80a3 	bmi.w	9000b1b4 <HAL_RCC_OscConfig+0x290>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
9000b06e:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000b070:	b1d0      	cbz	r0, 9000b0a8 <HAL_RCC_OscConfig+0x184>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
9000b072:	4d55      	ldr	r5, [pc, #340]	; (9000b1c8 <HAL_RCC_OscConfig+0x2a4>)
9000b074:	692b      	ldr	r3, [r5, #16]
9000b076:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000b07a:	2b18      	cmp	r3, #24
9000b07c:	f000 81ae 	beq.w	9000b3dc <HAL_RCC_OscConfig+0x4b8>
        __HAL_RCC_PLL_DISABLE();
9000b080:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000b082:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
9000b084:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
9000b088:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000b08a:	f000 8142 	beq.w	9000b312 <HAL_RCC_OscConfig+0x3ee>
        tickstart = HAL_GetTick();
9000b08e:	f7fc fe0d 	bl	90007cac <HAL_GetTick>
9000b092:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000b094:	e005      	b.n	9000b0a2 <HAL_RCC_OscConfig+0x17e>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000b096:	f7fc fe09 	bl	90007cac <HAL_GetTick>
9000b09a:	1b00      	subs	r0, r0, r4
9000b09c:	2802      	cmp	r0, #2
9000b09e:	f200 80c2 	bhi.w	9000b226 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000b0a2:	682b      	ldr	r3, [r5, #0]
9000b0a4:	019b      	lsls	r3, r3, #6
9000b0a6:	d4f6      	bmi.n	9000b096 <HAL_RCC_OscConfig+0x172>
  return HAL_OK;
9000b0a8:	2000      	movs	r0, #0
}
9000b0aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000b0ac:	4a46      	ldr	r2, [pc, #280]	; (9000b1c8 <HAL_RCC_OscConfig+0x2a4>)
9000b0ae:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000b0b0:	6a92      	ldr	r2, [r2, #40]	; 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000b0b2:	f013 0338 	ands.w	r3, r3, #56	; 0x38
9000b0b6:	d12d      	bne.n	9000b114 <HAL_RCC_OscConfig+0x1f0>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000b0b8:	4b43      	ldr	r3, [pc, #268]	; (9000b1c8 <HAL_RCC_OscConfig+0x2a4>)
9000b0ba:	68e2      	ldr	r2, [r4, #12]
9000b0bc:	681b      	ldr	r3, [r3, #0]
9000b0be:	0759      	lsls	r1, r3, #29
9000b0c0:	d501      	bpl.n	9000b0c6 <HAL_RCC_OscConfig+0x1a2>
9000b0c2:	2a00      	cmp	r2, #0
9000b0c4:	d04e      	beq.n	9000b164 <HAL_RCC_OscConfig+0x240>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000b0c6:	4d40      	ldr	r5, [pc, #256]	; (9000b1c8 <HAL_RCC_OscConfig+0x2a4>)
9000b0c8:	682b      	ldr	r3, [r5, #0]
9000b0ca:	f023 0319 	bic.w	r3, r3, #25
9000b0ce:	4313      	orrs	r3, r2
9000b0d0:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b0d2:	f7fc fdeb 	bl	90007cac <HAL_GetTick>
9000b0d6:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000b0d8:	e005      	b.n	9000b0e6 <HAL_RCC_OscConfig+0x1c2>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000b0da:	f7fc fde7 	bl	90007cac <HAL_GetTick>
9000b0de:	1b80      	subs	r0, r0, r6
9000b0e0:	2802      	cmp	r0, #2
9000b0e2:	f200 80a0 	bhi.w	9000b226 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000b0e6:	682b      	ldr	r3, [r5, #0]
9000b0e8:	075b      	lsls	r3, r3, #29
9000b0ea:	d5f6      	bpl.n	9000b0da <HAL_RCC_OscConfig+0x1b6>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000b0ec:	f7fc fde4 	bl	90007cb8 <HAL_GetREVID>
9000b0f0:	f241 0303 	movw	r3, #4099	; 0x1003
9000b0f4:	4298      	cmp	r0, r3
9000b0f6:	f200 80f7 	bhi.w	9000b2e8 <HAL_RCC_OscConfig+0x3c4>
9000b0fa:	6922      	ldr	r2, [r4, #16]
9000b0fc:	686b      	ldr	r3, [r5, #4]
9000b0fe:	2a40      	cmp	r2, #64	; 0x40
9000b100:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
9000b104:	bf0c      	ite	eq
9000b106:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
9000b10a:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
9000b10e:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000b110:	6823      	ldr	r3, [r4, #0]
9000b112:	e741      	b.n	9000af98 <HAL_RCC_OscConfig+0x74>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000b114:	2b18      	cmp	r3, #24
9000b116:	f000 80e3 	beq.w	9000b2e0 <HAL_RCC_OscConfig+0x3bc>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000b11a:	4d2b      	ldr	r5, [pc, #172]	; (9000b1c8 <HAL_RCC_OscConfig+0x2a4>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000b11c:	68e2      	ldr	r2, [r4, #12]
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000b11e:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000b120:	2a00      	cmp	r2, #0
9000b122:	f000 80cc 	beq.w	9000b2be <HAL_RCC_OscConfig+0x39a>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000b126:	f023 0319 	bic.w	r3, r3, #25
9000b12a:	4313      	orrs	r3, r2
9000b12c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b12e:	f7fc fdbd 	bl	90007cac <HAL_GetTick>
9000b132:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000b134:	e004      	b.n	9000b140 <HAL_RCC_OscConfig+0x21c>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000b136:	f7fc fdb9 	bl	90007cac <HAL_GetTick>
9000b13a:	1b80      	subs	r0, r0, r6
9000b13c:	2802      	cmp	r0, #2
9000b13e:	d872      	bhi.n	9000b226 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000b140:	682b      	ldr	r3, [r5, #0]
9000b142:	075f      	lsls	r7, r3, #29
9000b144:	d5f7      	bpl.n	9000b136 <HAL_RCC_OscConfig+0x212>
9000b146:	e7d1      	b.n	9000b0ec <HAL_RCC_OscConfig+0x1c8>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000b148:	f001 0103 	and.w	r1, r1, #3
9000b14c:	2902      	cmp	r1, #2
9000b14e:	f47f aefc 	bne.w	9000af4a <HAL_RCC_OscConfig+0x26>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
9000b152:	4a1d      	ldr	r2, [pc, #116]	; (9000b1c8 <HAL_RCC_OscConfig+0x2a4>)
9000b154:	6812      	ldr	r2, [r2, #0]
9000b156:	0392      	lsls	r2, r2, #14
9000b158:	f57f af1b 	bpl.w	9000af92 <HAL_RCC_OscConfig+0x6e>
9000b15c:	6862      	ldr	r2, [r4, #4]
9000b15e:	2a00      	cmp	r2, #0
9000b160:	f47f af17 	bne.w	9000af92 <HAL_RCC_OscConfig+0x6e>
        return HAL_ERROR;
9000b164:	2001      	movs	r0, #1
}
9000b166:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000b168:	f002 0203 	and.w	r2, r2, #3
9000b16c:	2a01      	cmp	r2, #1
9000b16e:	f47f af20 	bne.w	9000afb2 <HAL_RCC_OscConfig+0x8e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
9000b172:	4b15      	ldr	r3, [pc, #84]	; (9000b1c8 <HAL_RCC_OscConfig+0x2a4>)
9000b174:	681b      	ldr	r3, [r3, #0]
9000b176:	05da      	lsls	r2, r3, #23
9000b178:	d502      	bpl.n	9000b180 <HAL_RCC_OscConfig+0x25c>
9000b17a:	69e3      	ldr	r3, [r4, #28]
9000b17c:	2b80      	cmp	r3, #128	; 0x80
9000b17e:	d1f1      	bne.n	9000b164 <HAL_RCC_OscConfig+0x240>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000b180:	f7fc fd9a 	bl	90007cb8 <HAL_GetREVID>
9000b184:	f241 0303 	movw	r3, #4099	; 0x1003
9000b188:	4298      	cmp	r0, r3
9000b18a:	f200 80b8 	bhi.w	9000b2fe <HAL_RCC_OscConfig+0x3da>
9000b18e:	6a22      	ldr	r2, [r4, #32]
9000b190:	2a20      	cmp	r2, #32
9000b192:	f000 81a7 	beq.w	9000b4e4 <HAL_RCC_OscConfig+0x5c0>
9000b196:	490c      	ldr	r1, [pc, #48]	; (9000b1c8 <HAL_RCC_OscConfig+0x2a4>)
9000b198:	684b      	ldr	r3, [r1, #4]
9000b19a:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000b19e:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
9000b1a2:	604b      	str	r3, [r1, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b1a4:	6823      	ldr	r3, [r4, #0]
9000b1a6:	e72d      	b.n	9000b004 <HAL_RCC_OscConfig+0xe0>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000b1a8:	4a07      	ldr	r2, [pc, #28]	; (9000b1c8 <HAL_RCC_OscConfig+0x2a4>)
9000b1aa:	6813      	ldr	r3, [r2, #0]
9000b1ac:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000b1b0:	6013      	str	r3, [r2, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000b1b2:	e6df      	b.n	9000af74 <HAL_RCC_OscConfig+0x50>
    PWR->CR1 |= PWR_CR1_DBP;
9000b1b4:	4d05      	ldr	r5, [pc, #20]	; (9000b1cc <HAL_RCC_OscConfig+0x2a8>)
9000b1b6:	682b      	ldr	r3, [r5, #0]
9000b1b8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000b1bc:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
9000b1be:	f7fc fd75 	bl	90007cac <HAL_GetTick>
9000b1c2:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000b1c4:	e009      	b.n	9000b1da <HAL_RCC_OscConfig+0x2b6>
9000b1c6:	bf00      	nop
9000b1c8:	58024400 	.word	0x58024400
9000b1cc:	58024800 	.word	0x58024800
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000b1d0:	f7fc fd6c 	bl	90007cac <HAL_GetTick>
9000b1d4:	1b80      	subs	r0, r0, r6
9000b1d6:	2864      	cmp	r0, #100	; 0x64
9000b1d8:	d825      	bhi.n	9000b226 <HAL_RCC_OscConfig+0x302>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000b1da:	682b      	ldr	r3, [r5, #0]
9000b1dc:	05da      	lsls	r2, r3, #23
9000b1de:	d5f7      	bpl.n	9000b1d0 <HAL_RCC_OscConfig+0x2ac>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000b1e0:	68a3      	ldr	r3, [r4, #8]
9000b1e2:	2b01      	cmp	r3, #1
9000b1e4:	f000 8178 	beq.w	9000b4d8 <HAL_RCC_OscConfig+0x5b4>
9000b1e8:	2b00      	cmp	r3, #0
9000b1ea:	f000 8153 	beq.w	9000b494 <HAL_RCC_OscConfig+0x570>
9000b1ee:	2b05      	cmp	r3, #5
9000b1f0:	4ba5      	ldr	r3, [pc, #660]	; (9000b488 <HAL_RCC_OscConfig+0x564>)
9000b1f2:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000b1f4:	f000 817f 	beq.w	9000b4f6 <HAL_RCC_OscConfig+0x5d2>
9000b1f8:	f022 0201 	bic.w	r2, r2, #1
9000b1fc:	671a      	str	r2, [r3, #112]	; 0x70
9000b1fe:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000b200:	f022 0204 	bic.w	r2, r2, #4
9000b204:	671a      	str	r2, [r3, #112]	; 0x70
      tickstart = HAL_GetTick();
9000b206:	f7fc fd51 	bl	90007cac <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000b20a:	4e9f      	ldr	r6, [pc, #636]	; (9000b488 <HAL_RCC_OscConfig+0x564>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000b20c:	f241 3788 	movw	r7, #5000	; 0x1388
      tickstart = HAL_GetTick();
9000b210:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000b212:	e004      	b.n	9000b21e <HAL_RCC_OscConfig+0x2fa>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000b214:	f7fc fd4a 	bl	90007cac <HAL_GetTick>
9000b218:	1b40      	subs	r0, r0, r5
9000b21a:	42b8      	cmp	r0, r7
9000b21c:	d803      	bhi.n	9000b226 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000b21e:	6f33      	ldr	r3, [r6, #112]	; 0x70
9000b220:	079b      	lsls	r3, r3, #30
9000b222:	d5f7      	bpl.n	9000b214 <HAL_RCC_OscConfig+0x2f0>
9000b224:	e723      	b.n	9000b06e <HAL_RCC_OscConfig+0x14a>
            return HAL_TIMEOUT;
9000b226:	2003      	movs	r0, #3
}
9000b228:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000b22a:	4d97      	ldr	r5, [pc, #604]	; (9000b488 <HAL_RCC_OscConfig+0x564>)
9000b22c:	682b      	ldr	r3, [r5, #0]
9000b22e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
9000b232:	602b      	str	r3, [r5, #0]
9000b234:	682b      	ldr	r3, [r5, #0]
9000b236:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
9000b23a:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b23c:	f7fc fd36 	bl	90007cac <HAL_GetTick>
9000b240:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000b242:	e004      	b.n	9000b24e <HAL_RCC_OscConfig+0x32a>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000b244:	f7fc fd32 	bl	90007cac <HAL_GetTick>
9000b248:	1b80      	subs	r0, r0, r6
9000b24a:	2864      	cmp	r0, #100	; 0x64
9000b24c:	d8eb      	bhi.n	9000b226 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000b24e:	682b      	ldr	r3, [r5, #0]
9000b250:	039f      	lsls	r7, r3, #14
9000b252:	d4f7      	bmi.n	9000b244 <HAL_RCC_OscConfig+0x320>
9000b254:	e69c      	b.n	9000af90 <HAL_RCC_OscConfig+0x6c>
      __HAL_RCC_LSI_DISABLE();
9000b256:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000b258:	f023 0301 	bic.w	r3, r3, #1
9000b25c:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
9000b25e:	f7fc fd25 	bl	90007cac <HAL_GetTick>
9000b262:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000b264:	e004      	b.n	9000b270 <HAL_RCC_OscConfig+0x34c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000b266:	f7fc fd21 	bl	90007cac <HAL_GetTick>
9000b26a:	1b80      	subs	r0, r0, r6
9000b26c:	2802      	cmp	r0, #2
9000b26e:	d8da      	bhi.n	9000b226 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000b270:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000b272:	0799      	lsls	r1, r3, #30
9000b274:	d4f7      	bmi.n	9000b266 <HAL_RCC_OscConfig+0x342>
9000b276:	e6dd      	b.n	9000b034 <HAL_RCC_OscConfig+0x110>
      __HAL_RCC_HSI48_DISABLE();
9000b278:	682b      	ldr	r3, [r5, #0]
9000b27a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9000b27e:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000b280:	f7fc fd14 	bl	90007cac <HAL_GetTick>
9000b284:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000b286:	e004      	b.n	9000b292 <HAL_RCC_OscConfig+0x36e>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000b288:	f7fc fd10 	bl	90007cac <HAL_GetTick>
9000b28c:	1b80      	subs	r0, r0, r6
9000b28e:	2802      	cmp	r0, #2
9000b290:	d8c9      	bhi.n	9000b226 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000b292:	682b      	ldr	r3, [r5, #0]
9000b294:	0498      	lsls	r0, r3, #18
9000b296:	d4f7      	bmi.n	9000b288 <HAL_RCC_OscConfig+0x364>
9000b298:	e6e5      	b.n	9000b066 <HAL_RCC_OscConfig+0x142>
        __HAL_RCC_CSI_DISABLE();
9000b29a:	682b      	ldr	r3, [r5, #0]
9000b29c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000b2a0:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b2a2:	f7fc fd03 	bl	90007cac <HAL_GetTick>
9000b2a6:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000b2a8:	e004      	b.n	9000b2b4 <HAL_RCC_OscConfig+0x390>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000b2aa:	f7fc fcff 	bl	90007cac <HAL_GetTick>
9000b2ae:	1b80      	subs	r0, r0, r6
9000b2b0:	2802      	cmp	r0, #2
9000b2b2:	d8b8      	bhi.n	9000b226 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000b2b4:	682b      	ldr	r3, [r5, #0]
9000b2b6:	05df      	lsls	r7, r3, #23
9000b2b8:	d4f7      	bmi.n	9000b2aa <HAL_RCC_OscConfig+0x386>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b2ba:	6823      	ldr	r3, [r4, #0]
9000b2bc:	e6a2      	b.n	9000b004 <HAL_RCC_OscConfig+0xe0>
        __HAL_RCC_HSI_DISABLE();
9000b2be:	f023 0301 	bic.w	r3, r3, #1
9000b2c2:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b2c4:	f7fc fcf2 	bl	90007cac <HAL_GetTick>
9000b2c8:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000b2ca:	e004      	b.n	9000b2d6 <HAL_RCC_OscConfig+0x3b2>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000b2cc:	f7fc fcee 	bl	90007cac <HAL_GetTick>
9000b2d0:	1b80      	subs	r0, r0, r6
9000b2d2:	2802      	cmp	r0, #2
9000b2d4:	d8a7      	bhi.n	9000b226 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000b2d6:	682b      	ldr	r3, [r5, #0]
9000b2d8:	0758      	lsls	r0, r3, #29
9000b2da:	d4f7      	bmi.n	9000b2cc <HAL_RCC_OscConfig+0x3a8>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000b2dc:	6823      	ldr	r3, [r4, #0]
9000b2de:	e65b      	b.n	9000af98 <HAL_RCC_OscConfig+0x74>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000b2e0:	0790      	lsls	r0, r2, #30
9000b2e2:	f47f af1a 	bne.w	9000b11a <HAL_RCC_OscConfig+0x1f6>
9000b2e6:	e6e7      	b.n	9000b0b8 <HAL_RCC_OscConfig+0x194>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000b2e8:	686b      	ldr	r3, [r5, #4]
9000b2ea:	6922      	ldr	r2, [r4, #16]
9000b2ec:	f023 43fe 	bic.w	r3, r3, #2130706432	; 0x7f000000
9000b2f0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000b2f4:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000b2f6:	6823      	ldr	r3, [r4, #0]
9000b2f8:	e64e      	b.n	9000af98 <HAL_RCC_OscConfig+0x74>
    return HAL_ERROR;
9000b2fa:	2001      	movs	r0, #1
}
9000b2fc:	4770      	bx	lr
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000b2fe:	4a62      	ldr	r2, [pc, #392]	; (9000b488 <HAL_RCC_OscConfig+0x564>)
9000b300:	6a21      	ldr	r1, [r4, #32]
9000b302:	68d3      	ldr	r3, [r2, #12]
9000b304:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
9000b308:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000b30c:	60d3      	str	r3, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b30e:	6823      	ldr	r3, [r4, #0]
9000b310:	e678      	b.n	9000b004 <HAL_RCC_OscConfig+0xe0>
        tickstart = HAL_GetTick();
9000b312:	f7fc fccb 	bl	90007cac <HAL_GetTick>
9000b316:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000b318:	e004      	b.n	9000b324 <HAL_RCC_OscConfig+0x400>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000b31a:	f7fc fcc7 	bl	90007cac <HAL_GetTick>
9000b31e:	1b80      	subs	r0, r0, r6
9000b320:	2802      	cmp	r0, #2
9000b322:	d880      	bhi.n	9000b226 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000b324:	682b      	ldr	r3, [r5, #0]
9000b326:	0199      	lsls	r1, r3, #6
9000b328:	d4f7      	bmi.n	9000b31a <HAL_RCC_OscConfig+0x3f6>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000b32a:	6aa9      	ldr	r1, [r5, #40]	; 0x28
9000b32c:	4b57      	ldr	r3, [pc, #348]	; (9000b48c <HAL_RCC_OscConfig+0x568>)
9000b32e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000b330:	400b      	ands	r3, r1
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000b332:	4957      	ldr	r1, [pc, #348]	; (9000b490 <HAL_RCC_OscConfig+0x56c>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000b334:	4e54      	ldr	r6, [pc, #336]	; (9000b488 <HAL_RCC_OscConfig+0x564>)
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000b336:	4313      	orrs	r3, r2
9000b338:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000b33a:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
9000b33e:	62ab      	str	r3, [r5, #40]	; 0x28
9000b340:	e9d4 320d 	ldrd	r3, r2, [r4, #52]	; 0x34
9000b344:	3b01      	subs	r3, #1
9000b346:	3a01      	subs	r2, #1
9000b348:	025b      	lsls	r3, r3, #9
9000b34a:	0412      	lsls	r2, r2, #16
9000b34c:	b29b      	uxth	r3, r3
9000b34e:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000b352:	4313      	orrs	r3, r2
9000b354:	6b22      	ldr	r2, [r4, #48]	; 0x30
9000b356:	3a01      	subs	r2, #1
9000b358:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000b35c:	4313      	orrs	r3, r2
9000b35e:	6be2      	ldr	r2, [r4, #60]	; 0x3c
9000b360:	3a01      	subs	r2, #1
9000b362:	0612      	lsls	r2, r2, #24
9000b364:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000b368:	4313      	orrs	r3, r2
9000b36a:	632b      	str	r3, [r5, #48]	; 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
9000b36c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000b36e:	f023 0301 	bic.w	r3, r3, #1
9000b372:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000b374:	6b6a      	ldr	r2, [r5, #52]	; 0x34
9000b376:	6ca3      	ldr	r3, [r4, #72]	; 0x48
9000b378:	4011      	ands	r1, r2
9000b37a:	ea41 01c3 	orr.w	r1, r1, r3, lsl #3
9000b37e:	6369      	str	r1, [r5, #52]	; 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
9000b380:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000b382:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000b384:	f023 030c 	bic.w	r3, r3, #12
9000b388:	4313      	orrs	r3, r2
9000b38a:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
9000b38c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000b38e:	6c62      	ldr	r2, [r4, #68]	; 0x44
9000b390:	f023 0302 	bic.w	r3, r3, #2
9000b394:	4313      	orrs	r3, r2
9000b396:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
9000b398:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000b39a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000b39e:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000b3a0:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000b3a2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
9000b3a6:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
9000b3a8:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000b3aa:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
9000b3ae:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
9000b3b0:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000b3b2:	f043 0301 	orr.w	r3, r3, #1
9000b3b6:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_ENABLE();
9000b3b8:	682b      	ldr	r3, [r5, #0]
9000b3ba:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
9000b3be:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b3c0:	f7fc fc74 	bl	90007cac <HAL_GetTick>
9000b3c4:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000b3c6:	e005      	b.n	9000b3d4 <HAL_RCC_OscConfig+0x4b0>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000b3c8:	f7fc fc70 	bl	90007cac <HAL_GetTick>
9000b3cc:	1b00      	subs	r0, r0, r4
9000b3ce:	2802      	cmp	r0, #2
9000b3d0:	f63f af29 	bhi.w	9000b226 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000b3d4:	6833      	ldr	r3, [r6, #0]
9000b3d6:	019a      	lsls	r2, r3, #6
9000b3d8:	d5f6      	bpl.n	9000b3c8 <HAL_RCC_OscConfig+0x4a4>
9000b3da:	e665      	b.n	9000b0a8 <HAL_RCC_OscConfig+0x184>
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000b3dc:	2801      	cmp	r0, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
9000b3de:	6aaa      	ldr	r2, [r5, #40]	; 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
9000b3e0:	6b2e      	ldr	r6, [r5, #48]	; 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000b3e2:	f43f ae62 	beq.w	9000b0aa <HAL_RCC_OscConfig+0x186>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000b3e6:	f002 0303 	and.w	r3, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000b3ea:	6aa1      	ldr	r1, [r4, #40]	; 0x28
9000b3ec:	428b      	cmp	r3, r1
9000b3ee:	f47f aeb9 	bne.w	9000b164 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000b3f2:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000b3f6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000b3f8:	429a      	cmp	r2, r3
9000b3fa:	f47f aeb3 	bne.w	9000b164 <HAL_RCC_OscConfig+0x240>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000b3fe:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000b400:	f3c6 0208 	ubfx	r2, r6, #0, #9
9000b404:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000b406:	429a      	cmp	r2, r3
9000b408:	f47f aeac 	bne.w	9000b164 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000b40c:	6b63      	ldr	r3, [r4, #52]	; 0x34
9000b40e:	f3c6 2246 	ubfx	r2, r6, #9, #7
9000b412:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000b414:	429a      	cmp	r2, r3
9000b416:	f47f aea5 	bne.w	9000b164 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000b41a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000b41c:	f3c6 4206 	ubfx	r2, r6, #16, #7
9000b420:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000b422:	429a      	cmp	r2, r3
9000b424:	f47f ae9e 	bne.w	9000b164 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
9000b428:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000b42a:	f3c6 6606 	ubfx	r6, r6, #24, #7
9000b42e:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000b430:	429e      	cmp	r6, r3
9000b432:	f47f ae97 	bne.w	9000b164 <HAL_RCC_OscConfig+0x240>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000b436:	6b6b      	ldr	r3, [r5, #52]	; 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000b438:	6ca2      	ldr	r2, [r4, #72]	; 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000b43a:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000b43e:	429a      	cmp	r2, r3
9000b440:	f43f ae32 	beq.w	9000b0a8 <HAL_RCC_OscConfig+0x184>
          __HAL_RCC_PLLFRACN_DISABLE();
9000b444:	4a10      	ldr	r2, [pc, #64]	; (9000b488 <HAL_RCC_OscConfig+0x564>)
9000b446:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
9000b448:	f023 0301 	bic.w	r3, r3, #1
9000b44c:	62d3      	str	r3, [r2, #44]	; 0x2c
          tickstart = HAL_GetTick();
9000b44e:	f7fc fc2d 	bl	90007cac <HAL_GetTick>
9000b452:	4605      	mov	r5, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
9000b454:	f7fc fc2a 	bl	90007cac <HAL_GetTick>
9000b458:	42a8      	cmp	r0, r5
9000b45a:	d0fb      	beq.n	9000b454 <HAL_RCC_OscConfig+0x530>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000b45c:	4a0a      	ldr	r2, [pc, #40]	; (9000b488 <HAL_RCC_OscConfig+0x564>)
  return HAL_OK;
9000b45e:	2000      	movs	r0, #0
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000b460:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9000b462:	4b0b      	ldr	r3, [pc, #44]	; (9000b490 <HAL_RCC_OscConfig+0x56c>)
9000b464:	6b54      	ldr	r4, [r2, #52]	; 0x34
9000b466:	4023      	ands	r3, r4
9000b468:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
9000b46c:	6353      	str	r3, [r2, #52]	; 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
9000b46e:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
9000b470:	f043 0301 	orr.w	r3, r3, #1
9000b474:	62d3      	str	r3, [r2, #44]	; 0x2c
}
9000b476:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000b478:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
9000b47c:	601a      	str	r2, [r3, #0]
9000b47e:	681a      	ldr	r2, [r3, #0]
9000b480:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
9000b484:	601a      	str	r2, [r3, #0]
9000b486:	e575      	b.n	9000af74 <HAL_RCC_OscConfig+0x50>
9000b488:	58024400 	.word	0x58024400
9000b48c:	fffffc0c 	.word	0xfffffc0c
9000b490:	ffff0007 	.word	0xffff0007
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000b494:	4d1c      	ldr	r5, [pc, #112]	; (9000b508 <HAL_RCC_OscConfig+0x5e4>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000b496:	f241 3788 	movw	r7, #5000	; 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000b49a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000b49c:	f023 0301 	bic.w	r3, r3, #1
9000b4a0:	672b      	str	r3, [r5, #112]	; 0x70
9000b4a2:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000b4a4:	f023 0304 	bic.w	r3, r3, #4
9000b4a8:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
9000b4aa:	f7fc fbff 	bl	90007cac <HAL_GetTick>
9000b4ae:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000b4b0:	e005      	b.n	9000b4be <HAL_RCC_OscConfig+0x59a>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000b4b2:	f7fc fbfb 	bl	90007cac <HAL_GetTick>
9000b4b6:	1b80      	subs	r0, r0, r6
9000b4b8:	42b8      	cmp	r0, r7
9000b4ba:	f63f aeb4 	bhi.w	9000b226 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000b4be:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000b4c0:	0798      	lsls	r0, r3, #30
9000b4c2:	d4f6      	bmi.n	9000b4b2 <HAL_RCC_OscConfig+0x58e>
9000b4c4:	e5d3      	b.n	9000b06e <HAL_RCC_OscConfig+0x14a>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000b4c6:	68eb      	ldr	r3, [r5, #12]
9000b4c8:	6a22      	ldr	r2, [r4, #32]
9000b4ca:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
9000b4ce:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000b4d2:	60eb      	str	r3, [r5, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b4d4:	6823      	ldr	r3, [r4, #0]
9000b4d6:	e595      	b.n	9000b004 <HAL_RCC_OscConfig+0xe0>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000b4d8:	4a0b      	ldr	r2, [pc, #44]	; (9000b508 <HAL_RCC_OscConfig+0x5e4>)
9000b4da:	6f13      	ldr	r3, [r2, #112]	; 0x70
9000b4dc:	f043 0301 	orr.w	r3, r3, #1
9000b4e0:	6713      	str	r3, [r2, #112]	; 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000b4e2:	e690      	b.n	9000b206 <HAL_RCC_OscConfig+0x2e2>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000b4e4:	4a08      	ldr	r2, [pc, #32]	; (9000b508 <HAL_RCC_OscConfig+0x5e4>)
9000b4e6:	6853      	ldr	r3, [r2, #4]
9000b4e8:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000b4ec:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
9000b4f0:	6053      	str	r3, [r2, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b4f2:	6823      	ldr	r3, [r4, #0]
9000b4f4:	e586      	b.n	9000b004 <HAL_RCC_OscConfig+0xe0>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000b4f6:	f042 0204 	orr.w	r2, r2, #4
9000b4fa:	671a      	str	r2, [r3, #112]	; 0x70
9000b4fc:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000b4fe:	f042 0201 	orr.w	r2, r2, #1
9000b502:	671a      	str	r2, [r3, #112]	; 0x70
9000b504:	e67f      	b.n	9000b206 <HAL_RCC_OscConfig+0x2e2>
9000b506:	bf00      	nop
9000b508:	58024400 	.word	0x58024400

9000b50c <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b50c:	4a47      	ldr	r2, [pc, #284]	; (9000b62c <HAL_RCC_GetSysClockFreq+0x120>)
9000b50e:	6913      	ldr	r3, [r2, #16]
9000b510:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000b514:	2b10      	cmp	r3, #16
9000b516:	d004      	beq.n	9000b522 <HAL_RCC_GetSysClockFreq+0x16>
9000b518:	2b18      	cmp	r3, #24
9000b51a:	d00d      	beq.n	9000b538 <HAL_RCC_GetSysClockFreq+0x2c>
9000b51c:	b11b      	cbz	r3, 9000b526 <HAL_RCC_GetSysClockFreq+0x1a>
      sysclockfreq = CSI_VALUE;
9000b51e:	4844      	ldr	r0, [pc, #272]	; (9000b630 <HAL_RCC_GetSysClockFreq+0x124>)
9000b520:	4770      	bx	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b522:	4844      	ldr	r0, [pc, #272]	; (9000b634 <HAL_RCC_GetSysClockFreq+0x128>)
9000b524:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b526:	6813      	ldr	r3, [r2, #0]
9000b528:	0699      	lsls	r1, r3, #26
9000b52a:	d54a      	bpl.n	9000b5c2 <HAL_RCC_GetSysClockFreq+0xb6>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b52c:	6813      	ldr	r3, [r2, #0]
9000b52e:	4842      	ldr	r0, [pc, #264]	; (9000b638 <HAL_RCC_GetSysClockFreq+0x12c>)
9000b530:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000b534:	40d8      	lsrs	r0, r3
9000b536:	4770      	bx	lr
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000b538:	6a93      	ldr	r3, [r2, #40]	; 0x28
{
9000b53a:	b430      	push	{r4, r5}
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000b53c:	6a94      	ldr	r4, [r2, #40]	; 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000b53e:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
      if (pllm != 0U)
9000b540:	f414 7f7c 	tst.w	r4, #1008	; 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000b544:	6b51      	ldr	r1, [r2, #52]	; 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000b546:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000b54a:	d038      	beq.n	9000b5be <HAL_RCC_GetSysClockFreq+0xb2>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000b54c:	f3c1 01cc 	ubfx	r1, r1, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000b550:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000b554:	f003 0303 	and.w	r3, r3, #3
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000b558:	fb05 f101 	mul.w	r1, r5, r1
9000b55c:	2b01      	cmp	r3, #1
9000b55e:	ee07 1a90 	vmov	s15, r1
9000b562:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
        switch (pllsource)
9000b566:	d002      	beq.n	9000b56e <HAL_RCC_GetSysClockFreq+0x62>
9000b568:	2b02      	cmp	r3, #2
9000b56a:	d02c      	beq.n	9000b5c6 <HAL_RCC_GetSysClockFreq+0xba>
9000b56c:	b393      	cbz	r3, 9000b5d4 <HAL_RCC_GetSysClockFreq+0xc8>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b56e:	ee07 0a90 	vmov	s15, r0
9000b572:	ed9f 5a32 	vldr	s10, [pc, #200]	; 9000b63c <HAL_RCC_GetSysClockFreq+0x130>
9000b576:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000b57a:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000b57c:	eec5 6a27 	vdiv.f32	s13, s10, s15
9000b580:	eddf 5a2f 	vldr	s11, [pc, #188]	; 9000b640 <HAL_RCC_GetSysClockFreq+0x134>
9000b584:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000b588:	ee07 3a90 	vmov	s15, r3
9000b58c:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000b590:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000b594:	eee7 7a25 	vfma.f32	s15, s14, s11
9000b598:	ee77 7a86 	vadd.f32	s15, s15, s12
9000b59c:	ee66 6aa7 	vmul.f32	s13, s13, s15
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000b5a0:	4b22      	ldr	r3, [pc, #136]	; (9000b62c <HAL_RCC_GetSysClockFreq+0x120>)
9000b5a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000b5a4:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000b5a8:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000b5aa:	ee07 3a90 	vmov	s15, r3
9000b5ae:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000b5b2:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000b5b6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000b5ba:	ee17 0a90 	vmov	r0, s15
}
9000b5be:	bc30      	pop	{r4, r5}
9000b5c0:	4770      	bx	lr
        sysclockfreq = (uint32_t) HSI_VALUE;
9000b5c2:	481d      	ldr	r0, [pc, #116]	; (9000b638 <HAL_RCC_GetSysClockFreq+0x12c>)
}
9000b5c4:	4770      	bx	lr
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b5c6:	ee07 0a90 	vmov	s15, r0
9000b5ca:	ed9f 5a1e 	vldr	s10, [pc, #120]	; 9000b644 <HAL_RCC_GetSysClockFreq+0x138>
9000b5ce:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000b5d2:	e7d2      	b.n	9000b57a <HAL_RCC_GetSysClockFreq+0x6e>
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b5d4:	6813      	ldr	r3, [r2, #0]
9000b5d6:	069b      	lsls	r3, r3, #26
9000b5d8:	d520      	bpl.n	9000b61c <HAL_RCC_GetSysClockFreq+0x110>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b5da:	6814      	ldr	r4, [r2, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b5dc:	ee07 0a90 	vmov	s15, r0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b5e0:	4915      	ldr	r1, [pc, #84]	; (9000b638 <HAL_RCC_GetSysClockFreq+0x12c>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b5e2:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000b5e6:	6b13      	ldr	r3, [r2, #48]	; 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b5e8:	f3c4 04c1 	ubfx	r4, r4, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b5ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000b5f0:	ed9f 5a13 	vldr	s10, [pc, #76]	; 9000b640 <HAL_RCC_GetSysClockFreq+0x134>
9000b5f4:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b5f8:	40e1      	lsrs	r1, r4
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b5fa:	ee06 3a90 	vmov	s13, r3
9000b5fe:	ee06 1a10 	vmov	s12, r1
9000b602:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000b606:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000b60a:	eee7 6a05 	vfma.f32	s13, s14, s10
9000b60e:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000b612:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000b616:	ee66 6a87 	vmul.f32	s13, s13, s14
9000b61a:	e7c1      	b.n	9000b5a0 <HAL_RCC_GetSysClockFreq+0x94>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b61c:	ee07 0a90 	vmov	s15, r0
9000b620:	ed9f 5a09 	vldr	s10, [pc, #36]	; 9000b648 <HAL_RCC_GetSysClockFreq+0x13c>
9000b624:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000b628:	e7a7      	b.n	9000b57a <HAL_RCC_GetSysClockFreq+0x6e>
9000b62a:	bf00      	nop
9000b62c:	58024400 	.word	0x58024400
9000b630:	003d0900 	.word	0x003d0900
9000b634:	017d7840 	.word	0x017d7840
9000b638:	03d09000 	.word	0x03d09000
9000b63c:	4a742400 	.word	0x4a742400
9000b640:	39000000 	.word	0x39000000
9000b644:	4bbebc20 	.word	0x4bbebc20
9000b648:	4c742400 	.word	0x4c742400

9000b64c <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
9000b64c:	2800      	cmp	r0, #0
9000b64e:	f000 810c 	beq.w	9000b86a <HAL_RCC_ClockConfig+0x21e>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000b652:	4a8c      	ldr	r2, [pc, #560]	; (9000b884 <HAL_RCC_ClockConfig+0x238>)
9000b654:	6813      	ldr	r3, [r2, #0]
9000b656:	f003 030f 	and.w	r3, r3, #15
9000b65a:	428b      	cmp	r3, r1
{
9000b65c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000b660:	4604      	mov	r4, r0
9000b662:	460d      	mov	r5, r1
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000b664:	d20c      	bcs.n	9000b680 <HAL_RCC_ClockConfig+0x34>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000b666:	6813      	ldr	r3, [r2, #0]
9000b668:	f023 030f 	bic.w	r3, r3, #15
9000b66c:	430b      	orrs	r3, r1
9000b66e:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000b670:	6813      	ldr	r3, [r2, #0]
9000b672:	f003 030f 	and.w	r3, r3, #15
9000b676:	428b      	cmp	r3, r1
9000b678:	d002      	beq.n	9000b680 <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
9000b67a:	2001      	movs	r0, #1
}
9000b67c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000b680:	6823      	ldr	r3, [r4, #0]
9000b682:	075f      	lsls	r7, r3, #29
9000b684:	d50b      	bpl.n	9000b69e <HAL_RCC_ClockConfig+0x52>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000b686:	4980      	ldr	r1, [pc, #512]	; (9000b888 <HAL_RCC_ClockConfig+0x23c>)
9000b688:	6920      	ldr	r0, [r4, #16]
9000b68a:	698a      	ldr	r2, [r1, #24]
9000b68c:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000b690:	4290      	cmp	r0, r2
9000b692:	d904      	bls.n	9000b69e <HAL_RCC_ClockConfig+0x52>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000b694:	698a      	ldr	r2, [r1, #24]
9000b696:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000b69a:	4302      	orrs	r2, r0
9000b69c:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000b69e:	071e      	lsls	r6, r3, #28
9000b6a0:	d50b      	bpl.n	9000b6ba <HAL_RCC_ClockConfig+0x6e>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000b6a2:	4979      	ldr	r1, [pc, #484]	; (9000b888 <HAL_RCC_ClockConfig+0x23c>)
9000b6a4:	6960      	ldr	r0, [r4, #20]
9000b6a6:	69ca      	ldr	r2, [r1, #28]
9000b6a8:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000b6ac:	4290      	cmp	r0, r2
9000b6ae:	d904      	bls.n	9000b6ba <HAL_RCC_ClockConfig+0x6e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000b6b0:	69ca      	ldr	r2, [r1, #28]
9000b6b2:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000b6b6:	4302      	orrs	r2, r0
9000b6b8:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000b6ba:	06d8      	lsls	r0, r3, #27
9000b6bc:	d50b      	bpl.n	9000b6d6 <HAL_RCC_ClockConfig+0x8a>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000b6be:	4972      	ldr	r1, [pc, #456]	; (9000b888 <HAL_RCC_ClockConfig+0x23c>)
9000b6c0:	69a0      	ldr	r0, [r4, #24]
9000b6c2:	69ca      	ldr	r2, [r1, #28]
9000b6c4:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000b6c8:	4290      	cmp	r0, r2
9000b6ca:	d904      	bls.n	9000b6d6 <HAL_RCC_ClockConfig+0x8a>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000b6cc:	69ca      	ldr	r2, [r1, #28]
9000b6ce:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
9000b6d2:	4302      	orrs	r2, r0
9000b6d4:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000b6d6:	0699      	lsls	r1, r3, #26
9000b6d8:	d50b      	bpl.n	9000b6f2 <HAL_RCC_ClockConfig+0xa6>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000b6da:	496b      	ldr	r1, [pc, #428]	; (9000b888 <HAL_RCC_ClockConfig+0x23c>)
9000b6dc:	69e0      	ldr	r0, [r4, #28]
9000b6de:	6a0a      	ldr	r2, [r1, #32]
9000b6e0:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000b6e4:	4290      	cmp	r0, r2
9000b6e6:	d904      	bls.n	9000b6f2 <HAL_RCC_ClockConfig+0xa6>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000b6e8:	6a0a      	ldr	r2, [r1, #32]
9000b6ea:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000b6ee:	4302      	orrs	r2, r0
9000b6f0:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000b6f2:	079a      	lsls	r2, r3, #30
9000b6f4:	f140 80ab 	bpl.w	9000b84e <HAL_RCC_ClockConfig+0x202>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000b6f8:	4863      	ldr	r0, [pc, #396]	; (9000b888 <HAL_RCC_ClockConfig+0x23c>)
9000b6fa:	68e1      	ldr	r1, [r4, #12]
9000b6fc:	6982      	ldr	r2, [r0, #24]
9000b6fe:	f002 020f 	and.w	r2, r2, #15
9000b702:	4291      	cmp	r1, r2
9000b704:	d904      	bls.n	9000b710 <HAL_RCC_ClockConfig+0xc4>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000b706:	6982      	ldr	r2, [r0, #24]
9000b708:	f022 020f 	bic.w	r2, r2, #15
9000b70c:	430a      	orrs	r2, r1
9000b70e:	6182      	str	r2, [r0, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000b710:	07d8      	lsls	r0, r3, #31
9000b712:	d530      	bpl.n	9000b776 <HAL_RCC_ClockConfig+0x12a>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
9000b714:	4a5c      	ldr	r2, [pc, #368]	; (9000b888 <HAL_RCC_ClockConfig+0x23c>)
9000b716:	68a1      	ldr	r1, [r4, #8]
9000b718:	6993      	ldr	r3, [r2, #24]
9000b71a:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
9000b71e:	430b      	orrs	r3, r1
9000b720:	6193      	str	r3, [r2, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000b722:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000b724:	6813      	ldr	r3, [r2, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000b726:	2902      	cmp	r1, #2
9000b728:	f000 80a1 	beq.w	9000b86e <HAL_RCC_ClockConfig+0x222>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
9000b72c:	2903      	cmp	r1, #3
9000b72e:	f000 8098 	beq.w	9000b862 <HAL_RCC_ClockConfig+0x216>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
9000b732:	2901      	cmp	r1, #1
9000b734:	f000 80a1 	beq.w	9000b87a <HAL_RCC_ClockConfig+0x22e>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000b738:	0758      	lsls	r0, r3, #29
9000b73a:	d59e      	bpl.n	9000b67a <HAL_RCC_ClockConfig+0x2e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000b73c:	4e52      	ldr	r6, [pc, #328]	; (9000b888 <HAL_RCC_ClockConfig+0x23c>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000b73e:	f241 3888 	movw	r8, #5000	; 0x1388
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000b742:	6933      	ldr	r3, [r6, #16]
9000b744:	f023 0307 	bic.w	r3, r3, #7
9000b748:	430b      	orrs	r3, r1
9000b74a:	6133      	str	r3, [r6, #16]
    tickstart = HAL_GetTick();
9000b74c:	f7fc faae 	bl	90007cac <HAL_GetTick>
9000b750:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000b752:	e005      	b.n	9000b760 <HAL_RCC_ClockConfig+0x114>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000b754:	f7fc faaa 	bl	90007cac <HAL_GetTick>
9000b758:	1bc0      	subs	r0, r0, r7
9000b75a:	4540      	cmp	r0, r8
9000b75c:	f200 808b 	bhi.w	9000b876 <HAL_RCC_ClockConfig+0x22a>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000b760:	6933      	ldr	r3, [r6, #16]
9000b762:	6862      	ldr	r2, [r4, #4]
9000b764:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000b768:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
9000b76c:	d1f2      	bne.n	9000b754 <HAL_RCC_ClockConfig+0x108>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000b76e:	6823      	ldr	r3, [r4, #0]
9000b770:	0799      	lsls	r1, r3, #30
9000b772:	d506      	bpl.n	9000b782 <HAL_RCC_ClockConfig+0x136>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000b774:	68e1      	ldr	r1, [r4, #12]
9000b776:	4844      	ldr	r0, [pc, #272]	; (9000b888 <HAL_RCC_ClockConfig+0x23c>)
9000b778:	6982      	ldr	r2, [r0, #24]
9000b77a:	f002 020f 	and.w	r2, r2, #15
9000b77e:	428a      	cmp	r2, r1
9000b780:	d869      	bhi.n	9000b856 <HAL_RCC_ClockConfig+0x20a>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
9000b782:	4940      	ldr	r1, [pc, #256]	; (9000b884 <HAL_RCC_ClockConfig+0x238>)
9000b784:	680a      	ldr	r2, [r1, #0]
9000b786:	f002 020f 	and.w	r2, r2, #15
9000b78a:	42aa      	cmp	r2, r5
9000b78c:	d90a      	bls.n	9000b7a4 <HAL_RCC_ClockConfig+0x158>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000b78e:	680a      	ldr	r2, [r1, #0]
9000b790:	f022 020f 	bic.w	r2, r2, #15
9000b794:	432a      	orrs	r2, r5
9000b796:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000b798:	680a      	ldr	r2, [r1, #0]
9000b79a:	f002 020f 	and.w	r2, r2, #15
9000b79e:	42aa      	cmp	r2, r5
9000b7a0:	f47f af6b 	bne.w	9000b67a <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000b7a4:	075a      	lsls	r2, r3, #29
9000b7a6:	d50b      	bpl.n	9000b7c0 <HAL_RCC_ClockConfig+0x174>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000b7a8:	4937      	ldr	r1, [pc, #220]	; (9000b888 <HAL_RCC_ClockConfig+0x23c>)
9000b7aa:	6920      	ldr	r0, [r4, #16]
9000b7ac:	698a      	ldr	r2, [r1, #24]
9000b7ae:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000b7b2:	4290      	cmp	r0, r2
9000b7b4:	d204      	bcs.n	9000b7c0 <HAL_RCC_ClockConfig+0x174>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000b7b6:	698a      	ldr	r2, [r1, #24]
9000b7b8:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000b7bc:	4302      	orrs	r2, r0
9000b7be:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000b7c0:	071f      	lsls	r7, r3, #28
9000b7c2:	d50b      	bpl.n	9000b7dc <HAL_RCC_ClockConfig+0x190>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000b7c4:	4930      	ldr	r1, [pc, #192]	; (9000b888 <HAL_RCC_ClockConfig+0x23c>)
9000b7c6:	6960      	ldr	r0, [r4, #20]
9000b7c8:	69ca      	ldr	r2, [r1, #28]
9000b7ca:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000b7ce:	4290      	cmp	r0, r2
9000b7d0:	d204      	bcs.n	9000b7dc <HAL_RCC_ClockConfig+0x190>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000b7d2:	69ca      	ldr	r2, [r1, #28]
9000b7d4:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000b7d8:	4302      	orrs	r2, r0
9000b7da:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000b7dc:	06de      	lsls	r6, r3, #27
9000b7de:	d50b      	bpl.n	9000b7f8 <HAL_RCC_ClockConfig+0x1ac>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000b7e0:	4929      	ldr	r1, [pc, #164]	; (9000b888 <HAL_RCC_ClockConfig+0x23c>)
9000b7e2:	69a0      	ldr	r0, [r4, #24]
9000b7e4:	69ca      	ldr	r2, [r1, #28]
9000b7e6:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000b7ea:	4290      	cmp	r0, r2
9000b7ec:	d204      	bcs.n	9000b7f8 <HAL_RCC_ClockConfig+0x1ac>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000b7ee:	69ca      	ldr	r2, [r1, #28]
9000b7f0:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
9000b7f4:	4302      	orrs	r2, r0
9000b7f6:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000b7f8:	069d      	lsls	r5, r3, #26
9000b7fa:	d50b      	bpl.n	9000b814 <HAL_RCC_ClockConfig+0x1c8>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000b7fc:	4a22      	ldr	r2, [pc, #136]	; (9000b888 <HAL_RCC_ClockConfig+0x23c>)
9000b7fe:	69e1      	ldr	r1, [r4, #28]
9000b800:	6a13      	ldr	r3, [r2, #32]
9000b802:	f003 0370 	and.w	r3, r3, #112	; 0x70
9000b806:	4299      	cmp	r1, r3
9000b808:	d204      	bcs.n	9000b814 <HAL_RCC_ClockConfig+0x1c8>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000b80a:	6a13      	ldr	r3, [r2, #32]
9000b80c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
9000b810:	430b      	orrs	r3, r1
9000b812:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000b814:	f7ff fe7a 	bl	9000b50c <HAL_RCC_GetSysClockFreq>
9000b818:	4a1b      	ldr	r2, [pc, #108]	; (9000b888 <HAL_RCC_ClockConfig+0x23c>)
9000b81a:	4603      	mov	r3, r0
9000b81c:	481b      	ldr	r0, [pc, #108]	; (9000b88c <HAL_RCC_ClockConfig+0x240>)
9000b81e:	6991      	ldr	r1, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b820:	6992      	ldr	r2, [r2, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000b822:	f3c1 2103 	ubfx	r1, r1, #8, #4
  SystemCoreClock = common_system_clock;
9000b826:	4d1a      	ldr	r5, [pc, #104]	; (9000b890 <HAL_RCC_ClockConfig+0x244>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b828:	f002 020f 	and.w	r2, r2, #15
9000b82c:	4c19      	ldr	r4, [pc, #100]	; (9000b894 <HAL_RCC_ClockConfig+0x248>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000b82e:	5c41      	ldrb	r1, [r0, r1]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b830:	5c82      	ldrb	r2, [r0, r2]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000b832:	f001 011f 	and.w	r1, r1, #31
  halstatus = HAL_InitTick(uwTickPrio);
9000b836:	4818      	ldr	r0, [pc, #96]	; (9000b898 <HAL_RCC_ClockConfig+0x24c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b838:	f002 021f 	and.w	r2, r2, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000b83c:	40cb      	lsrs	r3, r1
  halstatus = HAL_InitTick(uwTickPrio);
9000b83e:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = common_system_clock;
9000b840:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b842:	40d3      	lsrs	r3, r2
9000b844:	6023      	str	r3, [r4, #0]
}
9000b846:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
9000b84a:	f7f7 bf07 	b.w	9000365c <HAL_InitTick>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000b84e:	07da      	lsls	r2, r3, #31
9000b850:	f53f af60 	bmi.w	9000b714 <HAL_RCC_ClockConfig+0xc8>
9000b854:	e795      	b.n	9000b782 <HAL_RCC_ClockConfig+0x136>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000b856:	6982      	ldr	r2, [r0, #24]
9000b858:	f022 020f 	bic.w	r2, r2, #15
9000b85c:	430a      	orrs	r2, r1
9000b85e:	6182      	str	r2, [r0, #24]
9000b860:	e78f      	b.n	9000b782 <HAL_RCC_ClockConfig+0x136>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000b862:	019f      	lsls	r7, r3, #6
9000b864:	f53f af6a 	bmi.w	9000b73c <HAL_RCC_ClockConfig+0xf0>
9000b868:	e707      	b.n	9000b67a <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
9000b86a:	2001      	movs	r0, #1
}
9000b86c:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000b86e:	039b      	lsls	r3, r3, #14
9000b870:	f53f af64 	bmi.w	9000b73c <HAL_RCC_ClockConfig+0xf0>
9000b874:	e701      	b.n	9000b67a <HAL_RCC_ClockConfig+0x2e>
        return HAL_TIMEOUT;
9000b876:	2003      	movs	r0, #3
9000b878:	e700      	b.n	9000b67c <HAL_RCC_ClockConfig+0x30>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000b87a:	05de      	lsls	r6, r3, #23
9000b87c:	f53f af5e 	bmi.w	9000b73c <HAL_RCC_ClockConfig+0xf0>
9000b880:	e6fb      	b.n	9000b67a <HAL_RCC_ClockConfig+0x2e>
9000b882:	bf00      	nop
9000b884:	52002000 	.word	0x52002000
9000b888:	58024400 	.word	0x58024400
9000b88c:	90029f74 	.word	0x90029f74
9000b890:	24000060 	.word	0x24000060
9000b894:	24000064 	.word	0x24000064
9000b898:	2400006c 	.word	0x2400006c

9000b89c <HAL_RCC_GetPCLK1Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b89c:	4a1c      	ldr	r2, [pc, #112]	; (9000b910 <HAL_RCC_GetPCLK1Freq+0x74>)
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
9000b89e:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b8a0:	6913      	ldr	r3, [r2, #16]
9000b8a2:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000b8a6:	2b10      	cmp	r3, #16
9000b8a8:	d021      	beq.n	9000b8ee <HAL_RCC_GetPCLK1Freq+0x52>
9000b8aa:	2b18      	cmp	r3, #24
9000b8ac:	d02a      	beq.n	9000b904 <HAL_RCC_GetPCLK1Freq+0x68>
9000b8ae:	b303      	cbz	r3, 9000b8f2 <HAL_RCC_GetPCLK1Freq+0x56>
      sysclockfreq = CSI_VALUE;
9000b8b0:	4818      	ldr	r0, [pc, #96]	; (9000b914 <HAL_RCC_GetPCLK1Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b8b2:	4a17      	ldr	r2, [pc, #92]	; (9000b910 <HAL_RCC_GetPCLK1Freq+0x74>)
9000b8b4:	4918      	ldr	r1, [pc, #96]	; (9000b918 <HAL_RCC_GetPCLK1Freq+0x7c>)
9000b8b6:	6993      	ldr	r3, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b8b8:	4c18      	ldr	r4, [pc, #96]	; (9000b91c <HAL_RCC_GetPCLK1Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b8ba:	f3c3 2303 	ubfx	r3, r3, #8, #4
  SystemCoreClock = common_system_clock;
9000b8be:	4d18      	ldr	r5, [pc, #96]	; (9000b920 <HAL_RCC_GetPCLK1Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b8c0:	5ccb      	ldrb	r3, [r1, r3]
9000b8c2:	f003 031f 	and.w	r3, r3, #31
9000b8c6:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b8c8:	6993      	ldr	r3, [r2, #24]
9000b8ca:	f003 030f 	and.w	r3, r3, #15
  SystemCoreClock = common_system_clock;
9000b8ce:	6028      	str	r0, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b8d0:	5ccb      	ldrb	r3, [r1, r3]
9000b8d2:	f003 031f 	and.w	r3, r3, #31
9000b8d6:	fa20 f303 	lsr.w	r3, r0, r3
9000b8da:	6023      	str	r3, [r4, #0]
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
9000b8dc:	69d2      	ldr	r2, [r2, #28]
9000b8de:	f3c2 1202 	ubfx	r2, r2, #4, #3
9000b8e2:	5c88      	ldrb	r0, [r1, r2]
9000b8e4:	f000 001f 	and.w	r0, r0, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
9000b8e8:	fa23 f000 	lsr.w	r0, r3, r0
9000b8ec:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b8ee:	480d      	ldr	r0, [pc, #52]	; (9000b924 <HAL_RCC_GetPCLK1Freq+0x88>)
9000b8f0:	e7df      	b.n	9000b8b2 <HAL_RCC_GetPCLK1Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b8f2:	6813      	ldr	r3, [r2, #0]
9000b8f4:	069b      	lsls	r3, r3, #26
9000b8f6:	d508      	bpl.n	9000b90a <HAL_RCC_GetPCLK1Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b8f8:	6813      	ldr	r3, [r2, #0]
9000b8fa:	480b      	ldr	r0, [pc, #44]	; (9000b928 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000b8fc:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000b900:	40d8      	lsrs	r0, r3
9000b902:	e7d6      	b.n	9000b8b2 <HAL_RCC_GetPCLK1Freq+0x16>
9000b904:	f7ff fa8a 	bl	9000ae1c <HAL_RCC_GetSysClockFreq.part.0>
9000b908:	e7d3      	b.n	9000b8b2 <HAL_RCC_GetPCLK1Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000b90a:	4807      	ldr	r0, [pc, #28]	; (9000b928 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000b90c:	e7d1      	b.n	9000b8b2 <HAL_RCC_GetPCLK1Freq+0x16>
9000b90e:	bf00      	nop
9000b910:	58024400 	.word	0x58024400
9000b914:	003d0900 	.word	0x003d0900
9000b918:	90029f74 	.word	0x90029f74
9000b91c:	24000064 	.word	0x24000064
9000b920:	24000060 	.word	0x24000060
9000b924:	017d7840 	.word	0x017d7840
9000b928:	03d09000 	.word	0x03d09000

9000b92c <HAL_RCC_GetPCLK2Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b92c:	4a1c      	ldr	r2, [pc, #112]	; (9000b9a0 <HAL_RCC_GetPCLK2Freq+0x74>)
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
9000b92e:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b930:	6913      	ldr	r3, [r2, #16]
9000b932:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000b936:	2b10      	cmp	r3, #16
9000b938:	d021      	beq.n	9000b97e <HAL_RCC_GetPCLK2Freq+0x52>
9000b93a:	2b18      	cmp	r3, #24
9000b93c:	d02a      	beq.n	9000b994 <HAL_RCC_GetPCLK2Freq+0x68>
9000b93e:	b303      	cbz	r3, 9000b982 <HAL_RCC_GetPCLK2Freq+0x56>
      sysclockfreq = CSI_VALUE;
9000b940:	4818      	ldr	r0, [pc, #96]	; (9000b9a4 <HAL_RCC_GetPCLK2Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b942:	4a17      	ldr	r2, [pc, #92]	; (9000b9a0 <HAL_RCC_GetPCLK2Freq+0x74>)
9000b944:	4918      	ldr	r1, [pc, #96]	; (9000b9a8 <HAL_RCC_GetPCLK2Freq+0x7c>)
9000b946:	6993      	ldr	r3, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b948:	4c18      	ldr	r4, [pc, #96]	; (9000b9ac <HAL_RCC_GetPCLK2Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b94a:	f3c3 2303 	ubfx	r3, r3, #8, #4
  SystemCoreClock = common_system_clock;
9000b94e:	4d18      	ldr	r5, [pc, #96]	; (9000b9b0 <HAL_RCC_GetPCLK2Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b950:	5ccb      	ldrb	r3, [r1, r3]
9000b952:	f003 031f 	and.w	r3, r3, #31
9000b956:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b958:	6993      	ldr	r3, [r2, #24]
9000b95a:	f003 030f 	and.w	r3, r3, #15
  SystemCoreClock = common_system_clock;
9000b95e:	6028      	str	r0, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b960:	5ccb      	ldrb	r3, [r1, r3]
9000b962:	f003 031f 	and.w	r3, r3, #31
9000b966:	fa20 f303 	lsr.w	r3, r0, r3
9000b96a:	6023      	str	r3, [r4, #0]
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
9000b96c:	69d2      	ldr	r2, [r2, #28]
9000b96e:	f3c2 2202 	ubfx	r2, r2, #8, #3
9000b972:	5c88      	ldrb	r0, [r1, r2]
9000b974:	f000 001f 	and.w	r0, r0, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
9000b978:	fa23 f000 	lsr.w	r0, r3, r0
9000b97c:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b97e:	480d      	ldr	r0, [pc, #52]	; (9000b9b4 <HAL_RCC_GetPCLK2Freq+0x88>)
9000b980:	e7df      	b.n	9000b942 <HAL_RCC_GetPCLK2Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b982:	6813      	ldr	r3, [r2, #0]
9000b984:	069b      	lsls	r3, r3, #26
9000b986:	d508      	bpl.n	9000b99a <HAL_RCC_GetPCLK2Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b988:	6813      	ldr	r3, [r2, #0]
9000b98a:	480b      	ldr	r0, [pc, #44]	; (9000b9b8 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000b98c:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000b990:	40d8      	lsrs	r0, r3
9000b992:	e7d6      	b.n	9000b942 <HAL_RCC_GetPCLK2Freq+0x16>
9000b994:	f7ff fa42 	bl	9000ae1c <HAL_RCC_GetSysClockFreq.part.0>
9000b998:	e7d3      	b.n	9000b942 <HAL_RCC_GetPCLK2Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000b99a:	4807      	ldr	r0, [pc, #28]	; (9000b9b8 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000b99c:	e7d1      	b.n	9000b942 <HAL_RCC_GetPCLK2Freq+0x16>
9000b99e:	bf00      	nop
9000b9a0:	58024400 	.word	0x58024400
9000b9a4:	003d0900 	.word	0x003d0900
9000b9a8:	90029f74 	.word	0x90029f74
9000b9ac:	24000064 	.word	0x24000064
9000b9b0:	24000060 	.word	0x24000060
9000b9b4:	017d7840 	.word	0x017d7840
9000b9b8:	03d09000 	.word	0x03d09000

9000b9bc <HAL_RCC_GetClockConfig>:
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000b9bc:	4b13      	ldr	r3, [pc, #76]	; (9000ba0c <HAL_RCC_GetClockConfig+0x50>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000b9be:	223f      	movs	r2, #63	; 0x3f
9000b9c0:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000b9c2:	691a      	ldr	r2, [r3, #16]
9000b9c4:	f002 0207 	and.w	r2, r2, #7
9000b9c8:	6042      	str	r2, [r0, #4]

#if defined(RCC_D1CFGR_D1CPRE)
  /* Get the SYSCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
9000b9ca:	699a      	ldr	r2, [r3, #24]
9000b9cc:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
9000b9d0:	6082      	str	r2, [r0, #8]

  /* Get the D1HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
9000b9d2:	699a      	ldr	r2, [r3, #24]
9000b9d4:	f002 020f 	and.w	r2, r2, #15
9000b9d8:	60c2      	str	r2, [r0, #12]

  /* Get the APB3 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
9000b9da:	699a      	ldr	r2, [r3, #24]
9000b9dc:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000b9e0:	6102      	str	r2, [r0, #16]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
9000b9e2:	69da      	ldr	r2, [r3, #28]
9000b9e4:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000b9e8:	6142      	str	r2, [r0, #20]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
9000b9ea:	69da      	ldr	r2, [r3, #28]
9000b9ec:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000b9f0:	6182      	str	r2, [r0, #24]

  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000b9f2:	6a1b      	ldr	r3, [r3, #32]
{
9000b9f4:	b410      	push	{r4}
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000b9f6:	f003 0370 	and.w	r3, r3, #112	; 0x70
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000b9fa:	4c05      	ldr	r4, [pc, #20]	; (9000ba10 <HAL_RCC_GetClockConfig+0x54>)
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000b9fc:	61c3      	str	r3, [r0, #28]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000b9fe:	6823      	ldr	r3, [r4, #0]
}
9000ba00:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000ba04:	f003 030f 	and.w	r3, r3, #15
9000ba08:	600b      	str	r3, [r1, #0]
}
9000ba0a:	4770      	bx	lr
9000ba0c:	58024400 	.word	0x58024400
9000ba10:	52002000 	.word	0x52002000

9000ba14 <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
{
9000ba14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL2RGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2VCO_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll2->PLL2FRACN));

  /* Check that PLL2 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ba16:	4c3a      	ldr	r4, [pc, #232]	; (9000bb00 <RCCEx_PLL2_Config+0xec>)
9000ba18:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000ba1a:	f003 0303 	and.w	r3, r3, #3
9000ba1e:	2b03      	cmp	r3, #3
9000ba20:	d067      	beq.n	9000baf2 <RCCEx_PLL2_Config+0xde>


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
9000ba22:	6823      	ldr	r3, [r4, #0]
9000ba24:	4606      	mov	r6, r0
9000ba26:	460f      	mov	r7, r1
9000ba28:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
9000ba2c:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000ba2e:	f7fc f93d 	bl	90007cac <HAL_GetTick>
9000ba32:	4605      	mov	r5, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000ba34:	e004      	b.n	9000ba40 <RCCEx_PLL2_Config+0x2c>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000ba36:	f7fc f939 	bl	90007cac <HAL_GetTick>
9000ba3a:	1b43      	subs	r3, r0, r5
9000ba3c:	2b02      	cmp	r3, #2
9000ba3e:	d856      	bhi.n	9000baee <RCCEx_PLL2_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000ba40:	6823      	ldr	r3, [r4, #0]
9000ba42:	011a      	lsls	r2, r3, #4
9000ba44:	d4f7      	bmi.n	9000ba36 <RCCEx_PLL2_Config+0x22>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
9000ba46:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000ba48:	6832      	ldr	r2, [r6, #0]
9000ba4a:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
9000ba4e:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000ba52:	62a3      	str	r3, [r4, #40]	; 0x28
9000ba54:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000ba58:	3b01      	subs	r3, #1
9000ba5a:	3a01      	subs	r2, #1
9000ba5c:	025b      	lsls	r3, r3, #9
9000ba5e:	0412      	lsls	r2, r2, #16
9000ba60:	b29b      	uxth	r3, r3
9000ba62:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000ba66:	4313      	orrs	r3, r2
9000ba68:	6872      	ldr	r2, [r6, #4]
9000ba6a:	3a01      	subs	r2, #1
9000ba6c:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000ba70:	4313      	orrs	r3, r2
9000ba72:	6932      	ldr	r2, [r6, #16]
9000ba74:	3a01      	subs	r2, #1
9000ba76:	0612      	lsls	r2, r2, #24
9000ba78:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000ba7c:	4313      	orrs	r3, r2
9000ba7e:	63a3      	str	r3, [r4, #56]	; 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
9000ba80:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000ba82:	6972      	ldr	r2, [r6, #20]
9000ba84:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
9000ba88:	4313      	orrs	r3, r2
9000ba8a:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000ba8c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000ba8e:	69b3      	ldr	r3, [r6, #24]
9000ba90:	f022 0220 	bic.w	r2, r2, #32
9000ba94:	431a      	orrs	r2, r3

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000ba96:	4b1b      	ldr	r3, [pc, #108]	; (9000bb04 <RCCEx_PLL2_Config+0xf0>)
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000ba98:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL2FRACN_DISABLE();
9000ba9a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000ba9c:	f022 0210 	bic.w	r2, r2, #16
9000baa0:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000baa2:	6be1      	ldr	r1, [r4, #60]	; 0x3c
9000baa4:	69f2      	ldr	r2, [r6, #28]
9000baa6:	400b      	ands	r3, r1
9000baa8:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000baac:	63e3      	str	r3, [r4, #60]	; 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
9000baae:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000bab0:	f043 0310 	orr.w	r3, r3, #16
9000bab4:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000bab6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000bab8:	b1ef      	cbz	r7, 9000baf6 <RCCEx_PLL2_Config+0xe2>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000baba:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
9000babc:	bf0c      	ite	eq
9000babe:	f443 1380 	orreq.w	r3, r3, #1048576	; 0x100000
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
9000bac2:	f443 1300 	orrne.w	r3, r3, #2097152	; 0x200000
9000bac6:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
9000bac8:	4c0d      	ldr	r4, [pc, #52]	; (9000bb00 <RCCEx_PLL2_Config+0xec>)
9000baca:	6823      	ldr	r3, [r4, #0]
9000bacc:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
9000bad0:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000bad2:	f7fc f8eb 	bl	90007cac <HAL_GetTick>
9000bad6:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000bad8:	e004      	b.n	9000bae4 <RCCEx_PLL2_Config+0xd0>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000bada:	f7fc f8e7 	bl	90007cac <HAL_GetTick>
9000bade:	1b40      	subs	r0, r0, r5
9000bae0:	2802      	cmp	r0, #2
9000bae2:	d804      	bhi.n	9000baee <RCCEx_PLL2_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000bae4:	6823      	ldr	r3, [r4, #0]
9000bae6:	011b      	lsls	r3, r3, #4
9000bae8:	d5f7      	bpl.n	9000bada <RCCEx_PLL2_Config+0xc6>
    }

  }


  return status;
9000baea:	2000      	movs	r0, #0
}
9000baec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000baee:	2003      	movs	r0, #3
}
9000baf0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000baf2:	2001      	movs	r0, #1
}
9000baf4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000baf6:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
9000bafa:	62e3      	str	r3, [r4, #44]	; 0x2c
9000bafc:	e7e4      	b.n	9000bac8 <RCCEx_PLL2_Config+0xb4>
9000bafe:	bf00      	nop
9000bb00:	58024400 	.word	0x58024400
9000bb04:	ffff0007 	.word	0xffff0007

9000bb08 <RCCEx_PLL3_Config>:
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
{
9000bb08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL3RGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3VCO_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll3->PLL3FRACN));

  /* Check that PLL3 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bb0a:	4c3a      	ldr	r4, [pc, #232]	; (9000bbf4 <RCCEx_PLL3_Config+0xec>)
9000bb0c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000bb0e:	f003 0303 	and.w	r3, r3, #3
9000bb12:	2b03      	cmp	r3, #3
9000bb14:	d067      	beq.n	9000bbe6 <RCCEx_PLL3_Config+0xde>


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
9000bb16:	6823      	ldr	r3, [r4, #0]
9000bb18:	4606      	mov	r6, r0
9000bb1a:	460f      	mov	r7, r1
9000bb1c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
9000bb20:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000bb22:	f7fc f8c3 	bl	90007cac <HAL_GetTick>
9000bb26:	4605      	mov	r5, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000bb28:	e004      	b.n	9000bb34 <RCCEx_PLL3_Config+0x2c>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000bb2a:	f7fc f8bf 	bl	90007cac <HAL_GetTick>
9000bb2e:	1b43      	subs	r3, r0, r5
9000bb30:	2b02      	cmp	r3, #2
9000bb32:	d856      	bhi.n	9000bbe2 <RCCEx_PLL3_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000bb34:	6823      	ldr	r3, [r4, #0]
9000bb36:	009a      	lsls	r2, r3, #2
9000bb38:	d4f7      	bmi.n	9000bb2a <RCCEx_PLL3_Config+0x22>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
9000bb3a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000bb3c:	6832      	ldr	r2, [r6, #0]
9000bb3e:	f023 737c 	bic.w	r3, r3, #66060288	; 0x3f00000
9000bb42:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
9000bb46:	62a3      	str	r3, [r4, #40]	; 0x28
9000bb48:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000bb4c:	3b01      	subs	r3, #1
9000bb4e:	3a01      	subs	r2, #1
9000bb50:	025b      	lsls	r3, r3, #9
9000bb52:	0412      	lsls	r2, r2, #16
9000bb54:	b29b      	uxth	r3, r3
9000bb56:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000bb5a:	4313      	orrs	r3, r2
9000bb5c:	6872      	ldr	r2, [r6, #4]
9000bb5e:	3a01      	subs	r2, #1
9000bb60:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000bb64:	4313      	orrs	r3, r2
9000bb66:	6932      	ldr	r2, [r6, #16]
9000bb68:	3a01      	subs	r2, #1
9000bb6a:	0612      	lsls	r2, r2, #24
9000bb6c:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000bb70:	4313      	orrs	r3, r2
9000bb72:	6423      	str	r3, [r4, #64]	; 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
9000bb74:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000bb76:	6972      	ldr	r2, [r6, #20]
9000bb78:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
9000bb7c:	4313      	orrs	r3, r2
9000bb7e:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000bb80:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000bb82:	69b3      	ldr	r3, [r6, #24]
9000bb84:	f422 7200 	bic.w	r2, r2, #512	; 0x200
9000bb88:	431a      	orrs	r2, r3

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000bb8a:	4b1b      	ldr	r3, [pc, #108]	; (9000bbf8 <RCCEx_PLL3_Config+0xf0>)
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000bb8c:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL3FRACN_DISABLE();
9000bb8e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000bb90:	f422 7280 	bic.w	r2, r2, #256	; 0x100
9000bb94:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000bb96:	6c61      	ldr	r1, [r4, #68]	; 0x44
9000bb98:	69f2      	ldr	r2, [r6, #28]
9000bb9a:	400b      	ands	r3, r1
9000bb9c:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000bba0:	6463      	str	r3, [r4, #68]	; 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
9000bba2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000bba4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000bba8:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000bbaa:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000bbac:	b1ef      	cbz	r7, 9000bbea <RCCEx_PLL3_Config+0xe2>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000bbae:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
9000bbb0:	bf0c      	ite	eq
9000bbb2:	f443 0300 	orreq.w	r3, r3, #8388608	; 0x800000
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
9000bbb6:	f043 7380 	orrne.w	r3, r3, #16777216	; 0x1000000
9000bbba:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
9000bbbc:	4c0d      	ldr	r4, [pc, #52]	; (9000bbf4 <RCCEx_PLL3_Config+0xec>)
9000bbbe:	6823      	ldr	r3, [r4, #0]
9000bbc0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
9000bbc4:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000bbc6:	f7fc f871 	bl	90007cac <HAL_GetTick>
9000bbca:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000bbcc:	e004      	b.n	9000bbd8 <RCCEx_PLL3_Config+0xd0>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000bbce:	f7fc f86d 	bl	90007cac <HAL_GetTick>
9000bbd2:	1b40      	subs	r0, r0, r5
9000bbd4:	2802      	cmp	r0, #2
9000bbd6:	d804      	bhi.n	9000bbe2 <RCCEx_PLL3_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000bbd8:	6823      	ldr	r3, [r4, #0]
9000bbda:	009b      	lsls	r3, r3, #2
9000bbdc:	d5f7      	bpl.n	9000bbce <RCCEx_PLL3_Config+0xc6>
    }

  }


  return status;
9000bbde:	2000      	movs	r0, #0
}
9000bbe0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000bbe2:	2003      	movs	r0, #3
}
9000bbe4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000bbe6:	2001      	movs	r0, #1
}
9000bbe8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000bbea:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
9000bbee:	62e3      	str	r3, [r4, #44]	; 0x2c
9000bbf0:	e7e4      	b.n	9000bbbc <RCCEx_PLL3_Config+0xb4>
9000bbf2:	bf00      	nop
9000bbf4:	58024400 	.word	0x58024400
9000bbf8:	ffff0007 	.word	0xffff0007

9000bbfc <HAL_RCCEx_PeriphCLKConfig>:
{
9000bbfc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000bc00:	e9d0 3200 	ldrd	r3, r2, [r0]
{
9000bc04:	4604      	mov	r4, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000bc06:	011d      	lsls	r5, r3, #4
9000bc08:	f003 6600 	and.w	r6, r3, #134217728	; 0x8000000
9000bc0c:	d523      	bpl.n	9000bc56 <HAL_RCCEx_PeriphCLKConfig+0x5a>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000bc0e:	6e81      	ldr	r1, [r0, #104]	; 0x68
9000bc10:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000bc14:	f000 8553 	beq.w	9000c6be <HAL_RCCEx_PeriphCLKConfig+0xac2>
9000bc18:	d812      	bhi.n	9000bc40 <HAL_RCCEx_PeriphCLKConfig+0x44>
9000bc1a:	2900      	cmp	r1, #0
9000bc1c:	f000 85a9 	beq.w	9000c772 <HAL_RCCEx_PeriphCLKConfig+0xb76>
9000bc20:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
9000bc24:	f040 85a2 	bne.w	9000c76c <HAL_RCCEx_PeriphCLKConfig+0xb70>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000bc28:	2102      	movs	r1, #2
9000bc2a:	3008      	adds	r0, #8
9000bc2c:	f7ff fef2 	bl	9000ba14 <RCCEx_PLL2_Config>
9000bc30:	4606      	mov	r6, r0
    if (ret == HAL_OK)
9000bc32:	2e00      	cmp	r6, #0
9000bc34:	f040 8522 	bne.w	9000c67c <HAL_RCCEx_PeriphCLKConfig+0xa80>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000bc38:	6ea1      	ldr	r1, [r4, #104]	; 0x68
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000bc3a:	e9d4 3200 	ldrd	r3, r2, [r4]
9000bc3e:	e003      	b.n	9000bc48 <HAL_RCCEx_PeriphCLKConfig+0x4c>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000bc40:	f5b1 1f40 	cmp.w	r1, #3145728	; 0x300000
9000bc44:	f040 8592 	bne.w	9000c76c <HAL_RCCEx_PeriphCLKConfig+0xb70>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000bc48:	4dae      	ldr	r5, [pc, #696]	; (9000bf04 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000bc4a:	2600      	movs	r6, #0
9000bc4c:	6d28      	ldr	r0, [r5, #80]	; 0x50
9000bc4e:	f420 1040 	bic.w	r0, r0, #3145728	; 0x300000
9000bc52:	4301      	orrs	r1, r0
9000bc54:	6529      	str	r1, [r5, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000bc56:	05d8      	lsls	r0, r3, #23
9000bc58:	d50a      	bpl.n	9000bc70 <HAL_RCCEx_PeriphCLKConfig+0x74>
    switch (PeriphClkInit->Sai1ClockSelection)
9000bc5a:	6da1      	ldr	r1, [r4, #88]	; 0x58
9000bc5c:	2904      	cmp	r1, #4
9000bc5e:	d806      	bhi.n	9000bc6e <HAL_RCCEx_PeriphCLKConfig+0x72>
9000bc60:	e8df f011 	tbh	[pc, r1, lsl #1]
9000bc64:	053d0536 	.word	0x053d0536
9000bc68:	0323051a 	.word	0x0323051a
9000bc6c:	0323      	.short	0x0323
9000bc6e:	2601      	movs	r6, #1
9000bc70:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000bc72:	0599      	lsls	r1, r3, #22
9000bc74:	d51d      	bpl.n	9000bcb2 <HAL_RCCEx_PeriphCLKConfig+0xb6>
    switch (PeriphClkInit->Sai23ClockSelection)
9000bc76:	6de1      	ldr	r1, [r4, #92]	; 0x5c
9000bc78:	2980      	cmp	r1, #128	; 0x80
9000bc7a:	f000 8516 	beq.w	9000c6aa <HAL_RCCEx_PeriphCLKConfig+0xaae>
9000bc7e:	f200 80f9 	bhi.w	9000be74 <HAL_RCCEx_PeriphCLKConfig+0x278>
9000bc82:	2900      	cmp	r1, #0
9000bc84:	f000 8433 	beq.w	9000c4ee <HAL_RCCEx_PeriphCLKConfig+0x8f2>
9000bc88:	2940      	cmp	r1, #64	; 0x40
9000bc8a:	f040 80fa 	bne.w	9000be82 <HAL_RCCEx_PeriphCLKConfig+0x286>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000bc8e:	2100      	movs	r1, #0
9000bc90:	f104 0008 	add.w	r0, r4, #8
9000bc94:	f7ff febe 	bl	9000ba14 <RCCEx_PLL2_Config>
9000bc98:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000bc9a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bc9e:	2d00      	cmp	r5, #0
9000bca0:	f040 83fe 	bne.w	9000c4a0 <HAL_RCCEx_PeriphCLKConfig+0x8a4>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
9000bca4:	4f97      	ldr	r7, [pc, #604]	; (9000bf04 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000bca6:	6de0      	ldr	r0, [r4, #92]	; 0x5c
9000bca8:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000bcaa:	f421 71e0 	bic.w	r1, r1, #448	; 0x1c0
9000bcae:	4301      	orrs	r1, r0
9000bcb0:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000bcb2:	055f      	lsls	r7, r3, #21
9000bcb4:	d521      	bpl.n	9000bcfa <HAL_RCCEx_PeriphCLKConfig+0xfe>
    switch (PeriphClkInit->Sai4AClockSelection)
9000bcb6:	f8d4 10a8 	ldr.w	r1, [r4, #168]	; 0xa8
9000bcba:	f5b1 0f80 	cmp.w	r1, #4194304	; 0x400000
9000bcbe:	f000 8521 	beq.w	9000c704 <HAL_RCCEx_PeriphCLKConfig+0xb08>
9000bcc2:	f200 80e1 	bhi.w	9000be88 <HAL_RCCEx_PeriphCLKConfig+0x28c>
9000bcc6:	2900      	cmp	r1, #0
9000bcc8:	f000 8418 	beq.w	9000c4fc <HAL_RCCEx_PeriphCLKConfig+0x900>
9000bccc:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000bcd0:	f040 80e2 	bne.w	9000be98 <HAL_RCCEx_PeriphCLKConfig+0x29c>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000bcd4:	2100      	movs	r1, #0
9000bcd6:	f104 0008 	add.w	r0, r4, #8
9000bcda:	f7ff fe9b 	bl	9000ba14 <RCCEx_PLL2_Config>
9000bcde:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000bce0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bce4:	2d00      	cmp	r5, #0
9000bce6:	f040 83e2 	bne.w	9000c4ae <HAL_RCCEx_PeriphCLKConfig+0x8b2>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
9000bcea:	4f86      	ldr	r7, [pc, #536]	; (9000bf04 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000bcec:	f8d4 00a8 	ldr.w	r0, [r4, #168]	; 0xa8
9000bcf0:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000bcf2:	f421 0160 	bic.w	r1, r1, #14680064	; 0xe00000
9000bcf6:	4301      	orrs	r1, r0
9000bcf8:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000bcfa:	0518      	lsls	r0, r3, #20
9000bcfc:	d521      	bpl.n	9000bd42 <HAL_RCCEx_PeriphCLKConfig+0x146>
    switch (PeriphClkInit->Sai4BClockSelection)
9000bcfe:	f8d4 10ac 	ldr.w	r1, [r4, #172]	; 0xac
9000bd02:	f1b1 7f00 	cmp.w	r1, #33554432	; 0x2000000
9000bd06:	f000 84bd 	beq.w	9000c684 <HAL_RCCEx_PeriphCLKConfig+0xa88>
9000bd0a:	f200 80c8 	bhi.w	9000be9e <HAL_RCCEx_PeriphCLKConfig+0x2a2>
9000bd0e:	2900      	cmp	r1, #0
9000bd10:	f000 83e7 	beq.w	9000c4e2 <HAL_RCCEx_PeriphCLKConfig+0x8e6>
9000bd14:	f1b1 7f80 	cmp.w	r1, #16777216	; 0x1000000
9000bd18:	f040 80c9 	bne.w	9000beae <HAL_RCCEx_PeriphCLKConfig+0x2b2>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000bd1c:	2100      	movs	r1, #0
9000bd1e:	f104 0008 	add.w	r0, r4, #8
9000bd22:	f7ff fe77 	bl	9000ba14 <RCCEx_PLL2_Config>
9000bd26:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000bd28:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bd2c:	2d00      	cmp	r5, #0
9000bd2e:	f040 83b5 	bne.w	9000c49c <HAL_RCCEx_PeriphCLKConfig+0x8a0>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
9000bd32:	4f74      	ldr	r7, [pc, #464]	; (9000bf04 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000bd34:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
9000bd38:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000bd3a:	f021 61e0 	bic.w	r1, r1, #117440512	; 0x7000000
9000bd3e:	4301      	orrs	r1, r0
9000bd40:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000bd42:	0199      	lsls	r1, r3, #6
9000bd44:	d518      	bpl.n	9000bd78 <HAL_RCCEx_PeriphCLKConfig+0x17c>
    switch (PeriphClkInit->QspiClockSelection)
9000bd46:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
9000bd48:	2920      	cmp	r1, #32
9000bd4a:	f000 841f 	beq.w	9000c58c <HAL_RCCEx_PeriphCLKConfig+0x990>
9000bd4e:	f200 80b1 	bhi.w	9000beb4 <HAL_RCCEx_PeriphCLKConfig+0x2b8>
9000bd52:	b139      	cbz	r1, 9000bd64 <HAL_RCCEx_PeriphCLKConfig+0x168>
9000bd54:	2910      	cmp	r1, #16
9000bd56:	f040 80b0 	bne.w	9000beba <HAL_RCCEx_PeriphCLKConfig+0x2be>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bd5a:	486a      	ldr	r0, [pc, #424]	; (9000bf04 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000bd5c:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000bd5e:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000bd62:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000bd64:	2d00      	cmp	r5, #0
9000bd66:	f040 83d8 	bne.w	9000c51a <HAL_RCCEx_PeriphCLKConfig+0x91e>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
9000bd6a:	4f66      	ldr	r7, [pc, #408]	; (9000bf04 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000bd6c:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
9000bd6e:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000bd70:	f021 0130 	bic.w	r1, r1, #48	; 0x30
9000bd74:	4301      	orrs	r1, r0
9000bd76:	64f9      	str	r1, [r7, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000bd78:	04df      	lsls	r7, r3, #19
9000bd7a:	d51f      	bpl.n	9000bdbc <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    switch (PeriphClkInit->Spi123ClockSelection)
9000bd7c:	6e21      	ldr	r1, [r4, #96]	; 0x60
9000bd7e:	f5b1 5f00 	cmp.w	r1, #8192	; 0x2000
9000bd82:	f000 84b5 	beq.w	9000c6f0 <HAL_RCCEx_PeriphCLKConfig+0xaf4>
9000bd86:	f200 809b 	bhi.w	9000bec0 <HAL_RCCEx_PeriphCLKConfig+0x2c4>
9000bd8a:	2900      	cmp	r1, #0
9000bd8c:	f000 83a3 	beq.w	9000c4d6 <HAL_RCCEx_PeriphCLKConfig+0x8da>
9000bd90:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
9000bd94:	f040 809c 	bne.w	9000bed0 <HAL_RCCEx_PeriphCLKConfig+0x2d4>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000bd98:	2100      	movs	r1, #0
9000bd9a:	f104 0008 	add.w	r0, r4, #8
9000bd9e:	f7ff fe39 	bl	9000ba14 <RCCEx_PLL2_Config>
9000bda2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000bda4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bda8:	2d00      	cmp	r5, #0
9000bdaa:	f040 837b 	bne.w	9000c4a4 <HAL_RCCEx_PeriphCLKConfig+0x8a8>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
9000bdae:	4f55      	ldr	r7, [pc, #340]	; (9000bf04 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000bdb0:	6e20      	ldr	r0, [r4, #96]	; 0x60
9000bdb2:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000bdb4:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
9000bdb8:	4301      	orrs	r1, r0
9000bdba:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000bdbc:	0498      	lsls	r0, r3, #18
9000bdbe:	d51d      	bpl.n	9000bdfc <HAL_RCCEx_PeriphCLKConfig+0x200>
    switch (PeriphClkInit->Spi45ClockSelection)
9000bdc0:	6e61      	ldr	r1, [r4, #100]	; 0x64
9000bdc2:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
9000bdc6:	f000 8410 	beq.w	9000c5ea <HAL_RCCEx_PeriphCLKConfig+0x9ee>
9000bdca:	f200 8084 	bhi.w	9000bed6 <HAL_RCCEx_PeriphCLKConfig+0x2da>
9000bdce:	b159      	cbz	r1, 9000bde8 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000bdd0:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000bdd4:	f040 8087 	bne.w	9000bee6 <HAL_RCCEx_PeriphCLKConfig+0x2ea>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000bdd8:	2101      	movs	r1, #1
9000bdda:	f104 0008 	add.w	r0, r4, #8
9000bdde:	f7ff fe19 	bl	9000ba14 <RCCEx_PLL2_Config>
9000bde2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000bde4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bde8:	2d00      	cmp	r5, #0
9000bdea:	f040 839a 	bne.w	9000c522 <HAL_RCCEx_PeriphCLKConfig+0x926>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
9000bdee:	4f45      	ldr	r7, [pc, #276]	; (9000bf04 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000bdf0:	6e60      	ldr	r0, [r4, #100]	; 0x64
9000bdf2:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000bdf4:	f421 21e0 	bic.w	r1, r1, #458752	; 0x70000
9000bdf8:	4301      	orrs	r1, r0
9000bdfa:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000bdfc:	0459      	lsls	r1, r3, #17
9000bdfe:	d51d      	bpl.n	9000be3c <HAL_RCCEx_PeriphCLKConfig+0x240>
    switch (PeriphClkInit->Spi6ClockSelection)
9000be00:	f8d4 10b0 	ldr.w	r1, [r4, #176]	; 0xb0
9000be04:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000be08:	f000 83fb 	beq.w	9000c602 <HAL_RCCEx_PeriphCLKConfig+0xa06>
9000be0c:	d86e      	bhi.n	9000beec <HAL_RCCEx_PeriphCLKConfig+0x2f0>
9000be0e:	b151      	cbz	r1, 9000be26 <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000be10:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000be14:	d172      	bne.n	9000befc <HAL_RCCEx_PeriphCLKConfig+0x300>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000be16:	2101      	movs	r1, #1
9000be18:	f104 0008 	add.w	r0, r4, #8
9000be1c:	f7ff fdfa 	bl	9000ba14 <RCCEx_PLL2_Config>
9000be20:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000be22:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000be26:	2d00      	cmp	r5, #0
9000be28:	f040 837f 	bne.w	9000c52a <HAL_RCCEx_PeriphCLKConfig+0x92e>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
9000be2c:	4f35      	ldr	r7, [pc, #212]	; (9000bf04 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000be2e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
9000be32:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000be34:	f021 41e0 	bic.w	r1, r1, #1879048192	; 0x70000000
9000be38:	4301      	orrs	r1, r0
9000be3a:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000be3c:	041f      	lsls	r7, r3, #16
9000be3e:	d50d      	bpl.n	9000be5c <HAL_RCCEx_PeriphCLKConfig+0x260>
    switch (PeriphClkInit->FdcanClockSelection)
9000be40:	6f21      	ldr	r1, [r4, #112]	; 0x70
9000be42:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000be46:	f000 83c8 	beq.w	9000c5da <HAL_RCCEx_PeriphCLKConfig+0x9de>
9000be4a:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000be4e:	f000 823b 	beq.w	9000c2c8 <HAL_RCCEx_PeriphCLKConfig+0x6cc>
9000be52:	2900      	cmp	r1, #0
9000be54:	f000 8240 	beq.w	9000c2d8 <HAL_RCCEx_PeriphCLKConfig+0x6dc>
9000be58:	2601      	movs	r6, #1
9000be5a:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000be5c:	01d8      	lsls	r0, r3, #7
9000be5e:	d562      	bpl.n	9000bf26 <HAL_RCCEx_PeriphCLKConfig+0x32a>
    switch (PeriphClkInit->FmcClockSelection)
9000be60:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9000be62:	2903      	cmp	r1, #3
9000be64:	f200 84bf 	bhi.w	9000c7e6 <HAL_RCCEx_PeriphCLKConfig+0xbea>
9000be68:	e8df f011 	tbh	[pc, r1, lsl #1]
9000be6c:	004e0053 	.word	0x004e0053
9000be70:	005303e2 	.word	0x005303e2
    switch (PeriphClkInit->Sai23ClockSelection)
9000be74:	29c0      	cmp	r1, #192	; 0xc0
9000be76:	f43f af12 	beq.w	9000bc9e <HAL_RCCEx_PeriphCLKConfig+0xa2>
9000be7a:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
9000be7e:	f43f af0e 	beq.w	9000bc9e <HAL_RCCEx_PeriphCLKConfig+0xa2>
9000be82:	2601      	movs	r6, #1
9000be84:	4635      	mov	r5, r6
9000be86:	e714      	b.n	9000bcb2 <HAL_RCCEx_PeriphCLKConfig+0xb6>
    switch (PeriphClkInit->Sai4AClockSelection)
9000be88:	f5b1 0fc0 	cmp.w	r1, #6291456	; 0x600000
9000be8c:	f43f af2a 	beq.w	9000bce4 <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000be90:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
9000be94:	f43f af26 	beq.w	9000bce4 <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000be98:	2601      	movs	r6, #1
9000be9a:	4635      	mov	r5, r6
9000be9c:	e72d      	b.n	9000bcfa <HAL_RCCEx_PeriphCLKConfig+0xfe>
    switch (PeriphClkInit->Sai4BClockSelection)
9000be9e:	f1b1 7f40 	cmp.w	r1, #50331648	; 0x3000000
9000bea2:	f43f af43 	beq.w	9000bd2c <HAL_RCCEx_PeriphCLKConfig+0x130>
9000bea6:	f1b1 6f80 	cmp.w	r1, #67108864	; 0x4000000
9000beaa:	f43f af3f 	beq.w	9000bd2c <HAL_RCCEx_PeriphCLKConfig+0x130>
9000beae:	2601      	movs	r6, #1
9000beb0:	4635      	mov	r5, r6
9000beb2:	e746      	b.n	9000bd42 <HAL_RCCEx_PeriphCLKConfig+0x146>
    switch (PeriphClkInit->QspiClockSelection)
9000beb4:	2930      	cmp	r1, #48	; 0x30
9000beb6:	f43f af55 	beq.w	9000bd64 <HAL_RCCEx_PeriphCLKConfig+0x168>
9000beba:	2601      	movs	r6, #1
9000bebc:	4635      	mov	r5, r6
9000bebe:	e75b      	b.n	9000bd78 <HAL_RCCEx_PeriphCLKConfig+0x17c>
    switch (PeriphClkInit->Spi123ClockSelection)
9000bec0:	f5b1 5f40 	cmp.w	r1, #12288	; 0x3000
9000bec4:	f43f af70 	beq.w	9000bda8 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
9000bec8:	f5b1 4f80 	cmp.w	r1, #16384	; 0x4000
9000becc:	f43f af6c 	beq.w	9000bda8 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
9000bed0:	2601      	movs	r6, #1
9000bed2:	4635      	mov	r5, r6
9000bed4:	e772      	b.n	9000bdbc <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    switch (PeriphClkInit->Spi45ClockSelection)
9000bed6:	f421 3080 	bic.w	r0, r1, #65536	; 0x10000
9000beda:	f5b0 2f80 	cmp.w	r0, #262144	; 0x40000
9000bede:	d083      	beq.n	9000bde8 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000bee0:	f5b1 3f40 	cmp.w	r1, #196608	; 0x30000
9000bee4:	d080      	beq.n	9000bde8 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000bee6:	2601      	movs	r6, #1
9000bee8:	4635      	mov	r5, r6
9000beea:	e787      	b.n	9000bdfc <HAL_RCCEx_PeriphCLKConfig+0x200>
    switch (PeriphClkInit->Spi6ClockSelection)
9000beec:	f021 5080 	bic.w	r0, r1, #268435456	; 0x10000000
9000bef0:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
9000bef4:	d097      	beq.n	9000be26 <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000bef6:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
9000befa:	d094      	beq.n	9000be26 <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000befc:	2601      	movs	r6, #1
9000befe:	4635      	mov	r5, r6
9000bf00:	e79c      	b.n	9000be3c <HAL_RCCEx_PeriphCLKConfig+0x240>
9000bf02:	bf00      	nop
9000bf04:	58024400 	.word	0x58024400
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bf08:	4839      	ldr	r0, [pc, #228]	; (9000bff0 <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000bf0a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000bf0c:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000bf10:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000bf12:	2d00      	cmp	r5, #0
9000bf14:	f040 8303 	bne.w	9000c51e <HAL_RCCEx_PeriphCLKConfig+0x922>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
9000bf18:	4f35      	ldr	r7, [pc, #212]	; (9000bff0 <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000bf1a:	6ca0      	ldr	r0, [r4, #72]	; 0x48
9000bf1c:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000bf1e:	f021 0103 	bic.w	r1, r1, #3
9000bf22:	4301      	orrs	r1, r0
9000bf24:	64f9      	str	r1, [r7, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000bf26:	0259      	lsls	r1, r3, #9
9000bf28:	f100 826a 	bmi.w	9000c400 <HAL_RCCEx_PeriphCLKConfig+0x804>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000bf2c:	07d8      	lsls	r0, r3, #31
9000bf2e:	d52f      	bpl.n	9000bf90 <HAL_RCCEx_PeriphCLKConfig+0x394>
    switch (PeriphClkInit->Usart16ClockSelection)
9000bf30:	6fe1      	ldr	r1, [r4, #124]	; 0x7c
9000bf32:	2928      	cmp	r1, #40	; 0x28
9000bf34:	d82a      	bhi.n	9000bf8c <HAL_RCCEx_PeriphCLKConfig+0x390>
9000bf36:	e8df f011 	tbh	[pc, r1, lsl #1]
9000bf3a:	020a      	.short	0x020a
9000bf3c:	00290029 	.word	0x00290029
9000bf40:	00290029 	.word	0x00290029
9000bf44:	00290029 	.word	0x00290029
9000bf48:	02020029 	.word	0x02020029
9000bf4c:	00290029 	.word	0x00290029
9000bf50:	00290029 	.word	0x00290029
9000bf54:	00290029 	.word	0x00290029
9000bf58:	04070029 	.word	0x04070029
9000bf5c:	00290029 	.word	0x00290029
9000bf60:	00290029 	.word	0x00290029
9000bf64:	00290029 	.word	0x00290029
9000bf68:	020a0029 	.word	0x020a0029
9000bf6c:	00290029 	.word	0x00290029
9000bf70:	00290029 	.word	0x00290029
9000bf74:	00290029 	.word	0x00290029
9000bf78:	020a0029 	.word	0x020a0029
9000bf7c:	00290029 	.word	0x00290029
9000bf80:	00290029 	.word	0x00290029
9000bf84:	00290029 	.word	0x00290029
9000bf88:	020a0029 	.word	0x020a0029
9000bf8c:	2601      	movs	r6, #1
9000bf8e:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000bf90:	0799      	lsls	r1, r3, #30
9000bf92:	d51d      	bpl.n	9000bfd0 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000bf94:	6fa1      	ldr	r1, [r4, #120]	; 0x78
9000bf96:	2905      	cmp	r1, #5
9000bf98:	f200 8421 	bhi.w	9000c7de <HAL_RCCEx_PeriphCLKConfig+0xbe2>
9000bf9c:	e8df f011 	tbh	[pc, r1, lsl #1]
9000bfa0:	0006000e 	.word	0x0006000e
9000bfa4:	000e03c8 	.word	0x000e03c8
9000bfa8:	000e000e 	.word	0x000e000e
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000bfac:	2101      	movs	r1, #1
9000bfae:	f104 0008 	add.w	r0, r4, #8
9000bfb2:	f7ff fd2f 	bl	9000ba14 <RCCEx_PLL2_Config>
9000bfb6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000bfb8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bfbc:	2d00      	cmp	r5, #0
9000bfbe:	f040 82b8 	bne.w	9000c532 <HAL_RCCEx_PeriphCLKConfig+0x936>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
9000bfc2:	4f0b      	ldr	r7, [pc, #44]	; (9000bff0 <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000bfc4:	6fa0      	ldr	r0, [r4, #120]	; 0x78
9000bfc6:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000bfc8:	f021 0107 	bic.w	r1, r1, #7
9000bfcc:	4301      	orrs	r1, r0
9000bfce:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000bfd0:	075f      	lsls	r7, r3, #29
9000bfd2:	d522      	bpl.n	9000c01a <HAL_RCCEx_PeriphCLKConfig+0x41e>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000bfd4:	f8d4 1094 	ldr.w	r1, [r4, #148]	; 0x94
9000bfd8:	2905      	cmp	r1, #5
9000bfda:	f200 8408 	bhi.w	9000c7ee <HAL_RCCEx_PeriphCLKConfig+0xbf2>
9000bfde:	e8df f011 	tbh	[pc, r1, lsl #1]
9000bfe2:	0011      	.short	0x0011
9000bfe4:	039b0009 	.word	0x039b0009
9000bfe8:	00110011 	.word	0x00110011
9000bfec:	0011      	.short	0x0011
9000bfee:	bf00      	nop
9000bff0:	58024400 	.word	0x58024400
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000bff4:	2101      	movs	r1, #1
9000bff6:	f104 0008 	add.w	r0, r4, #8
9000bffa:	f7ff fd0b 	bl	9000ba14 <RCCEx_PLL2_Config>
9000bffe:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000c000:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c004:	2d00      	cmp	r5, #0
9000c006:	f040 8286 	bne.w	9000c516 <HAL_RCCEx_PeriphCLKConfig+0x91a>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
9000c00a:	4fae      	ldr	r7, [pc, #696]	; (9000c2c4 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000c00c:	f8d4 0094 	ldr.w	r0, [r4, #148]	; 0x94
9000c010:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000c012:	f021 0107 	bic.w	r1, r1, #7
9000c016:	4301      	orrs	r1, r0
9000c018:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000c01a:	0698      	lsls	r0, r3, #26
9000c01c:	d51f      	bpl.n	9000c05e <HAL_RCCEx_PeriphCLKConfig+0x462>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000c01e:	f8d4 1090 	ldr.w	r1, [r4, #144]	; 0x90
9000c022:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000c026:	f000 82f7 	beq.w	9000c618 <HAL_RCCEx_PeriphCLKConfig+0xa1c>
9000c02a:	f200 810b 	bhi.w	9000c244 <HAL_RCCEx_PeriphCLKConfig+0x648>
9000c02e:	b159      	cbz	r1, 9000c048 <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000c030:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000c034:	f040 8110 	bne.w	9000c258 <HAL_RCCEx_PeriphCLKConfig+0x65c>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000c038:	2100      	movs	r1, #0
9000c03a:	f104 0008 	add.w	r0, r4, #8
9000c03e:	f7ff fce9 	bl	9000ba14 <RCCEx_PLL2_Config>
9000c042:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000c044:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c048:	2d00      	cmp	r5, #0
9000c04a:	f040 8260 	bne.w	9000c50e <HAL_RCCEx_PeriphCLKConfig+0x912>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
9000c04e:	4f9d      	ldr	r7, [pc, #628]	; (9000c2c4 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000c050:	f8d4 0090 	ldr.w	r0, [r4, #144]	; 0x90
9000c054:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000c056:	f021 41e0 	bic.w	r1, r1, #1879048192	; 0x70000000
9000c05a:	4301      	orrs	r1, r0
9000c05c:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000c05e:	0659      	lsls	r1, r3, #25
9000c060:	d51f      	bpl.n	9000c0a2 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000c062:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
9000c066:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
9000c06a:	f000 829b 	beq.w	9000c5a4 <HAL_RCCEx_PeriphCLKConfig+0x9a8>
9000c06e:	f200 80f6 	bhi.w	9000c25e <HAL_RCCEx_PeriphCLKConfig+0x662>
9000c072:	b159      	cbz	r1, 9000c08c <HAL_RCCEx_PeriphCLKConfig+0x490>
9000c074:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
9000c078:	f040 80fb 	bne.w	9000c272 <HAL_RCCEx_PeriphCLKConfig+0x676>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000c07c:	2100      	movs	r1, #0
9000c07e:	f104 0008 	add.w	r0, r4, #8
9000c082:	f7ff fcc7 	bl	9000ba14 <RCCEx_PLL2_Config>
9000c086:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000c088:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c08c:	2d00      	cmp	r5, #0
9000c08e:	f040 824e 	bne.w	9000c52e <HAL_RCCEx_PeriphCLKConfig+0x932>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
9000c092:	4f8c      	ldr	r7, [pc, #560]	; (9000c2c4 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000c094:	f8d4 009c 	ldr.w	r0, [r4, #156]	; 0x9c
9000c098:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000c09a:	f421 51e0 	bic.w	r1, r1, #7168	; 0x1c00
9000c09e:	4301      	orrs	r1, r0
9000c0a0:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000c0a2:	061f      	lsls	r7, r3, #24
9000c0a4:	d51f      	bpl.n	9000c0e6 <HAL_RCCEx_PeriphCLKConfig+0x4ea>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000c0a6:	f8d4 10a0 	ldr.w	r1, [r4, #160]	; 0xa0
9000c0aa:	f5b1 4f80 	cmp.w	r1, #16384	; 0x4000
9000c0ae:	f000 8289 	beq.w	9000c5c4 <HAL_RCCEx_PeriphCLKConfig+0x9c8>
9000c0b2:	f200 80e1 	bhi.w	9000c278 <HAL_RCCEx_PeriphCLKConfig+0x67c>
9000c0b6:	b159      	cbz	r1, 9000c0d0 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000c0b8:	f5b1 5f00 	cmp.w	r1, #8192	; 0x2000
9000c0bc:	f040 80e6 	bne.w	9000c28c <HAL_RCCEx_PeriphCLKConfig+0x690>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000c0c0:	2100      	movs	r1, #0
9000c0c2:	f104 0008 	add.w	r0, r4, #8
9000c0c6:	f7ff fca5 	bl	9000ba14 <RCCEx_PLL2_Config>
9000c0ca:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000c0cc:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c0d0:	2d00      	cmp	r5, #0
9000c0d2:	f040 8228 	bne.w	9000c526 <HAL_RCCEx_PeriphCLKConfig+0x92a>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
9000c0d6:	4f7b      	ldr	r7, [pc, #492]	; (9000c2c4 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000c0d8:	f8d4 00a0 	ldr.w	r0, [r4, #160]	; 0xa0
9000c0dc:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000c0de:	f421 4160 	bic.w	r1, r1, #57344	; 0xe000
9000c0e2:	4301      	orrs	r1, r0
9000c0e4:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000c0e6:	0718      	lsls	r0, r3, #28
9000c0e8:	d50b      	bpl.n	9000c102 <HAL_RCCEx_PeriphCLKConfig+0x506>
    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
9000c0ea:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
9000c0ee:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
9000c0f2:	f000 82a9 	beq.w	9000c648 <HAL_RCCEx_PeriphCLKConfig+0xa4c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000c0f6:	4f73      	ldr	r7, [pc, #460]	; (9000c2c4 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000c0f8:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000c0fa:	f421 5140 	bic.w	r1, r1, #12288	; 0x3000
9000c0fe:	4301      	orrs	r1, r0
9000c100:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000c102:	06d9      	lsls	r1, r3, #27
9000c104:	d50b      	bpl.n	9000c11e <HAL_RCCEx_PeriphCLKConfig+0x522>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
9000c106:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
9000c10a:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
9000c10e:	f000 82a8 	beq.w	9000c662 <HAL_RCCEx_PeriphCLKConfig+0xa66>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000c112:	4f6c      	ldr	r7, [pc, #432]	; (9000c2c4 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000c114:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000c116:	f421 7140 	bic.w	r1, r1, #768	; 0x300
9000c11a:	4301      	orrs	r1, r0
9000c11c:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000c11e:	031f      	lsls	r7, r3, #12
9000c120:	d50e      	bpl.n	9000c140 <HAL_RCCEx_PeriphCLKConfig+0x544>
    switch (PeriphClkInit->AdcClockSelection)
9000c122:	f8d4 10a4 	ldr.w	r1, [r4, #164]	; 0xa4
9000c126:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000c12a:	f000 80f4 	beq.w	9000c316 <HAL_RCCEx_PeriphCLKConfig+0x71a>
9000c12e:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
9000c132:	f000 80f8 	beq.w	9000c326 <HAL_RCCEx_PeriphCLKConfig+0x72a>
9000c136:	2900      	cmp	r1, #0
9000c138:	f000 821c 	beq.w	9000c574 <HAL_RCCEx_PeriphCLKConfig+0x978>
9000c13c:	2601      	movs	r6, #1
9000c13e:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000c140:	0358      	lsls	r0, r3, #13
9000c142:	d50f      	bpl.n	9000c164 <HAL_RCCEx_PeriphCLKConfig+0x568>
    switch (PeriphClkInit->UsbClockSelection)
9000c144:	f8d4 1088 	ldr.w	r1, [r4, #136]	; 0x88
9000c148:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000c14c:	f000 80cf 	beq.w	9000c2ee <HAL_RCCEx_PeriphCLKConfig+0x6f2>
9000c150:	f5b1 1f40 	cmp.w	r1, #3145728	; 0x300000
9000c154:	f000 80d3 	beq.w	9000c2fe <HAL_RCCEx_PeriphCLKConfig+0x702>
9000c158:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
9000c15c:	f000 8202 	beq.w	9000c564 <HAL_RCCEx_PeriphCLKConfig+0x968>
9000c160:	2601      	movs	r6, #1
9000c162:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000c164:	03d9      	lsls	r1, r3, #15
9000c166:	d509      	bpl.n	9000c17c <HAL_RCCEx_PeriphCLKConfig+0x580>
    switch (PeriphClkInit->SdmmcClockSelection)
9000c168:	6d21      	ldr	r1, [r4, #80]	; 0x50
9000c16a:	2900      	cmp	r1, #0
9000c16c:	f000 81f1 	beq.w	9000c552 <HAL_RCCEx_PeriphCLKConfig+0x956>
9000c170:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000c174:	f000 819d 	beq.w	9000c4b2 <HAL_RCCEx_PeriphCLKConfig+0x8b6>
9000c178:	2601      	movs	r6, #1
9000c17a:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000c17c:	009f      	lsls	r7, r3, #2
9000c17e:	f100 80f1 	bmi.w	9000c364 <HAL_RCCEx_PeriphCLKConfig+0x768>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000c182:	0398      	lsls	r0, r3, #14
9000c184:	d50c      	bpl.n	9000c1a0 <HAL_RCCEx_PeriphCLKConfig+0x5a4>
    switch (PeriphClkInit->RngClockSelection)
9000c186:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
9000c18a:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
9000c18e:	f000 81d8 	beq.w	9000c542 <HAL_RCCEx_PeriphCLKConfig+0x946>
9000c192:	d97e      	bls.n	9000c292 <HAL_RCCEx_PeriphCLKConfig+0x696>
9000c194:	f421 7080 	bic.w	r0, r1, #256	; 0x100
9000c198:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
9000c19c:	d07b      	beq.n	9000c296 <HAL_RCCEx_PeriphCLKConfig+0x69a>
9000c19e:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
9000c1a0:	02d9      	lsls	r1, r3, #11
9000c1a2:	d506      	bpl.n	9000c1b2 <HAL_RCCEx_PeriphCLKConfig+0x5b6>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
9000c1a4:	4847      	ldr	r0, [pc, #284]	; (9000c2c4 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000c1a6:	6f65      	ldr	r5, [r4, #116]	; 0x74
9000c1a8:	6d01      	ldr	r1, [r0, #80]	; 0x50
9000c1aa:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
9000c1ae:	4329      	orrs	r1, r5
9000c1b0:	6501      	str	r1, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
9000c1b2:	00df      	lsls	r7, r3, #3
9000c1b4:	d507      	bpl.n	9000c1c6 <HAL_RCCEx_PeriphCLKConfig+0x5ca>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
9000c1b6:	4843      	ldr	r0, [pc, #268]	; (9000c2c4 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000c1b8:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
9000c1bc:	6901      	ldr	r1, [r0, #16]
9000c1be:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
9000c1c2:	4329      	orrs	r1, r5
9000c1c4:	6101      	str	r1, [r0, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
9000c1c6:	029d      	lsls	r5, r3, #10
9000c1c8:	d506      	bpl.n	9000c1d8 <HAL_RCCEx_PeriphCLKConfig+0x5dc>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
9000c1ca:	483e      	ldr	r0, [pc, #248]	; (9000c2c4 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000c1cc:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
9000c1ce:	6d01      	ldr	r1, [r0, #80]	; 0x50
9000c1d0:	f021 7180 	bic.w	r1, r1, #16777216	; 0x1000000
9000c1d4:	4329      	orrs	r1, r5
9000c1d6:	6501      	str	r1, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
9000c1d8:	0058      	lsls	r0, r3, #1
9000c1da:	d509      	bpl.n	9000c1f0 <HAL_RCCEx_PeriphCLKConfig+0x5f4>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
9000c1dc:	4939      	ldr	r1, [pc, #228]	; (9000c2c4 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000c1de:	6908      	ldr	r0, [r1, #16]
9000c1e0:	f420 4000 	bic.w	r0, r0, #32768	; 0x8000
9000c1e4:	6108      	str	r0, [r1, #16]
9000c1e6:	6908      	ldr	r0, [r1, #16]
9000c1e8:	f8d4 50bc 	ldr.w	r5, [r4, #188]	; 0xbc
9000c1ec:	4328      	orrs	r0, r5
9000c1ee:	6108      	str	r0, [r1, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
9000c1f0:	2b00      	cmp	r3, #0
9000c1f2:	da06      	bge.n	9000c202 <HAL_RCCEx_PeriphCLKConfig+0x606>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
9000c1f4:	4833      	ldr	r0, [pc, #204]	; (9000c2c4 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000c1f6:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000c1f8:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
9000c1fa:	f021 5140 	bic.w	r1, r1, #805306368	; 0x30000000
9000c1fe:	4329      	orrs	r1, r5
9000c200:	64c1      	str	r1, [r0, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
9000c202:	0219      	lsls	r1, r3, #8
9000c204:	d507      	bpl.n	9000c216 <HAL_RCCEx_PeriphCLKConfig+0x61a>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
9000c206:	492f      	ldr	r1, [pc, #188]	; (9000c2c4 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000c208:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
9000c20c:	6d4b      	ldr	r3, [r1, #84]	; 0x54
9000c20e:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
9000c212:	4303      	orrs	r3, r0
9000c214:	654b      	str	r3, [r1, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
9000c216:	07d3      	lsls	r3, r2, #31
9000c218:	f100 80b0 	bmi.w	9000c37c <HAL_RCCEx_PeriphCLKConfig+0x780>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000c21c:	0797      	lsls	r7, r2, #30
9000c21e:	f100 80ba 	bmi.w	9000c396 <HAL_RCCEx_PeriphCLKConfig+0x79a>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000c222:	0755      	lsls	r5, r2, #29
9000c224:	f100 80c4 	bmi.w	9000c3b0 <HAL_RCCEx_PeriphCLKConfig+0x7b4>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000c228:	0710      	lsls	r0, r2, #28
9000c22a:	f100 80ce 	bmi.w	9000c3ca <HAL_RCCEx_PeriphCLKConfig+0x7ce>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000c22e:	06d1      	lsls	r1, r2, #27
9000c230:	f100 80d8 	bmi.w	9000c3e4 <HAL_RCCEx_PeriphCLKConfig+0x7e8>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000c234:	0692      	lsls	r2, r2, #26
9000c236:	f100 8125 	bmi.w	9000c484 <HAL_RCCEx_PeriphCLKConfig+0x888>
    return HAL_OK;
9000c23a:	1e30      	subs	r0, r6, #0
9000c23c:	bf18      	it	ne
9000c23e:	2001      	movne	r0, #1
}
9000c240:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    switch (PeriphClkInit->Lptim1ClockSelection)
9000c244:	f021 5080 	bic.w	r0, r1, #268435456	; 0x10000000
9000c248:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
9000c24c:	f43f aefc 	beq.w	9000c048 <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000c250:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
9000c254:	f43f aef8 	beq.w	9000c048 <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000c258:	2601      	movs	r6, #1
9000c25a:	4635      	mov	r5, r6
9000c25c:	e6ff      	b.n	9000c05e <HAL_RCCEx_PeriphCLKConfig+0x462>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000c25e:	f421 6080 	bic.w	r0, r1, #1024	; 0x400
9000c262:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
9000c266:	f43f af11 	beq.w	9000c08c <HAL_RCCEx_PeriphCLKConfig+0x490>
9000c26a:	f5b1 6f40 	cmp.w	r1, #3072	; 0xc00
9000c26e:	f43f af0d 	beq.w	9000c08c <HAL_RCCEx_PeriphCLKConfig+0x490>
9000c272:	2601      	movs	r6, #1
9000c274:	4635      	mov	r5, r6
9000c276:	e714      	b.n	9000c0a2 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000c278:	f421 5000 	bic.w	r0, r1, #8192	; 0x2000
9000c27c:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
9000c280:	f43f af26 	beq.w	9000c0d0 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000c284:	f5b1 4fc0 	cmp.w	r1, #24576	; 0x6000
9000c288:	f43f af22 	beq.w	9000c0d0 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000c28c:	2601      	movs	r6, #1
9000c28e:	4635      	mov	r5, r6
9000c290:	e729      	b.n	9000c0e6 <HAL_RCCEx_PeriphCLKConfig+0x4ea>
    switch (PeriphClkInit->RngClockSelection)
9000c292:	2900      	cmp	r1, #0
9000c294:	d183      	bne.n	9000c19e <HAL_RCCEx_PeriphCLKConfig+0x5a2>
    if (ret == HAL_OK)
9000c296:	2d00      	cmp	r5, #0
9000c298:	f040 8151 	bne.w	9000c53e <HAL_RCCEx_PeriphCLKConfig+0x942>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
9000c29c:	4d09      	ldr	r5, [pc, #36]	; (9000c2c4 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000c29e:	6d68      	ldr	r0, [r5, #84]	; 0x54
9000c2a0:	f420 7040 	bic.w	r0, r0, #768	; 0x300
9000c2a4:	4301      	orrs	r1, r0
9000c2a6:	6569      	str	r1, [r5, #84]	; 0x54
9000c2a8:	e77a      	b.n	9000c1a0 <HAL_RCCEx_PeriphCLKConfig+0x5a4>
    switch (PeriphClkInit->Sai1ClockSelection)
9000c2aa:	4635      	mov	r5, r6
    if (ret == HAL_OK)
9000c2ac:	2d00      	cmp	r5, #0
9000c2ae:	f040 80fb 	bne.w	9000c4a8 <HAL_RCCEx_PeriphCLKConfig+0x8ac>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
9000c2b2:	4f04      	ldr	r7, [pc, #16]	; (9000c2c4 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000c2b4:	6da0      	ldr	r0, [r4, #88]	; 0x58
9000c2b6:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000c2b8:	f021 0107 	bic.w	r1, r1, #7
9000c2bc:	4301      	orrs	r1, r0
9000c2be:	6539      	str	r1, [r7, #80]	; 0x50
9000c2c0:	e4d7      	b.n	9000bc72 <HAL_RCCEx_PeriphCLKConfig+0x76>
9000c2c2:	bf00      	nop
9000c2c4:	58024400 	.word	0x58024400
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000c2c8:	2101      	movs	r1, #1
9000c2ca:	f104 0008 	add.w	r0, r4, #8
9000c2ce:	f7ff fba1 	bl	9000ba14 <RCCEx_PLL2_Config>
9000c2d2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000c2d4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c2d8:	2d00      	cmp	r5, #0
9000c2da:	f040 811a 	bne.w	9000c512 <HAL_RCCEx_PeriphCLKConfig+0x916>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
9000c2de:	4fb7      	ldr	r7, [pc, #732]	; (9000c5bc <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c2e0:	6f20      	ldr	r0, [r4, #112]	; 0x70
9000c2e2:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000c2e4:	f021 5140 	bic.w	r1, r1, #805306368	; 0x30000000
9000c2e8:	4301      	orrs	r1, r0
9000c2ea:	6539      	str	r1, [r7, #80]	; 0x50
9000c2ec:	e5b6      	b.n	9000be5c <HAL_RCCEx_PeriphCLKConfig+0x260>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000c2ee:	2101      	movs	r1, #1
9000c2f0:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c2f4:	f7ff fc08 	bl	9000bb08 <RCCEx_PLL3_Config>
9000c2f8:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000c2fa:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c2fe:	2d00      	cmp	r5, #0
9000c300:	f040 811b 	bne.w	9000c53a <HAL_RCCEx_PeriphCLKConfig+0x93e>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
9000c304:	4fad      	ldr	r7, [pc, #692]	; (9000c5bc <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c306:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
9000c30a:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000c30c:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
9000c310:	4301      	orrs	r1, r0
9000c312:	6579      	str	r1, [r7, #84]	; 0x54
9000c314:	e726      	b.n	9000c164 <HAL_RCCEx_PeriphCLKConfig+0x568>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000c316:	2102      	movs	r1, #2
9000c318:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c31c:	f7ff fbf4 	bl	9000bb08 <RCCEx_PLL3_Config>
9000c320:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000c322:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c326:	2d00      	cmp	r5, #0
9000c328:	f040 8105 	bne.w	9000c536 <HAL_RCCEx_PeriphCLKConfig+0x93a>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
9000c32c:	4fa3      	ldr	r7, [pc, #652]	; (9000c5bc <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c32e:	f8d4 00a4 	ldr.w	r0, [r4, #164]	; 0xa4
9000c332:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000c334:	f421 3140 	bic.w	r1, r1, #196608	; 0x30000
9000c338:	4301      	orrs	r1, r0
9000c33a:	65b9      	str	r1, [r7, #88]	; 0x58
9000c33c:	e700      	b.n	9000c140 <HAL_RCCEx_PeriphCLKConfig+0x544>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000c33e:	2101      	movs	r1, #1
9000c340:	f104 0008 	add.w	r0, r4, #8
9000c344:	f7ff fb66 	bl	9000ba14 <RCCEx_PLL2_Config>
9000c348:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000c34a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c34e:	2d00      	cmp	r5, #0
9000c350:	f040 80db 	bne.w	9000c50a <HAL_RCCEx_PeriphCLKConfig+0x90e>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
9000c354:	4f99      	ldr	r7, [pc, #612]	; (9000c5bc <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c356:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
9000c358:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000c35a:	f021 0138 	bic.w	r1, r1, #56	; 0x38
9000c35e:	4301      	orrs	r1, r0
9000c360:	6579      	str	r1, [r7, #84]	; 0x54
9000c362:	e615      	b.n	9000bf90 <HAL_RCCEx_PeriphCLKConfig+0x394>
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000c364:	2102      	movs	r1, #2
9000c366:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c36a:	f7ff fbcd 	bl	9000bb08 <RCCEx_PLL3_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000c36e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000c372:	2800      	cmp	r0, #0
9000c374:	f43f af05 	beq.w	9000c182 <HAL_RCCEx_PeriphCLKConfig+0x586>
      status = HAL_ERROR;
9000c378:	2601      	movs	r6, #1
9000c37a:	e702      	b.n	9000c182 <HAL_RCCEx_PeriphCLKConfig+0x586>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000c37c:	2100      	movs	r1, #0
9000c37e:	f104 0008 	add.w	r0, r4, #8
9000c382:	f7ff fb47 	bl	9000ba14 <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000c386:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000c388:	2800      	cmp	r0, #0
9000c38a:	f43f af47 	beq.w	9000c21c <HAL_RCCEx_PeriphCLKConfig+0x620>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000c38e:	0797      	lsls	r7, r2, #30
9000c390:	4606      	mov	r6, r0
9000c392:	f57f af46 	bpl.w	9000c222 <HAL_RCCEx_PeriphCLKConfig+0x626>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000c396:	2101      	movs	r1, #1
9000c398:	f104 0008 	add.w	r0, r4, #8
9000c39c:	f7ff fb3a 	bl	9000ba14 <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000c3a0:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000c3a2:	2800      	cmp	r0, #0
9000c3a4:	f43f af3d 	beq.w	9000c222 <HAL_RCCEx_PeriphCLKConfig+0x626>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000c3a8:	0755      	lsls	r5, r2, #29
9000c3aa:	4606      	mov	r6, r0
9000c3ac:	f57f af3c 	bpl.w	9000c228 <HAL_RCCEx_PeriphCLKConfig+0x62c>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000c3b0:	2102      	movs	r1, #2
9000c3b2:	f104 0008 	add.w	r0, r4, #8
9000c3b6:	f7ff fb2d 	bl	9000ba14 <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000c3ba:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000c3bc:	2800      	cmp	r0, #0
9000c3be:	f43f af33 	beq.w	9000c228 <HAL_RCCEx_PeriphCLKConfig+0x62c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000c3c2:	4606      	mov	r6, r0
9000c3c4:	0710      	lsls	r0, r2, #28
9000c3c6:	f57f af32 	bpl.w	9000c22e <HAL_RCCEx_PeriphCLKConfig+0x632>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000c3ca:	2100      	movs	r1, #0
9000c3cc:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c3d0:	f7ff fb9a 	bl	9000bb08 <RCCEx_PLL3_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000c3d4:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000c3d6:	2800      	cmp	r0, #0
9000c3d8:	f43f af29 	beq.w	9000c22e <HAL_RCCEx_PeriphCLKConfig+0x632>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000c3dc:	06d1      	lsls	r1, r2, #27
9000c3de:	4606      	mov	r6, r0
9000c3e0:	f57f af28 	bpl.w	9000c234 <HAL_RCCEx_PeriphCLKConfig+0x638>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000c3e4:	f104 0528 	add.w	r5, r4, #40	; 0x28
9000c3e8:	2101      	movs	r1, #1
9000c3ea:	4628      	mov	r0, r5
9000c3ec:	f7ff fb8c 	bl	9000bb08 <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
9000c3f0:	2800      	cmp	r0, #0
9000c3f2:	f000 80c9 	beq.w	9000c588 <HAL_RCCEx_PeriphCLKConfig+0x98c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000c3f6:	6863      	ldr	r3, [r4, #4]
9000c3f8:	069b      	lsls	r3, r3, #26
9000c3fa:	d54c      	bpl.n	9000c496 <HAL_RCCEx_PeriphCLKConfig+0x89a>
9000c3fc:	4606      	mov	r6, r0
9000c3fe:	e043      	b.n	9000c488 <HAL_RCCEx_PeriphCLKConfig+0x88c>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
9000c400:	4f6f      	ldr	r7, [pc, #444]	; (9000c5c0 <HAL_RCCEx_PeriphCLKConfig+0x9c4>)
9000c402:	683b      	ldr	r3, [r7, #0]
9000c404:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000c408:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
9000c40a:	f7fb fc4f 	bl	90007cac <HAL_GetTick>
9000c40e:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000c410:	e006      	b.n	9000c420 <HAL_RCCEx_PeriphCLKConfig+0x824>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000c412:	f7fb fc4b 	bl	90007cac <HAL_GetTick>
9000c416:	eba0 0008 	sub.w	r0, r0, r8
9000c41a:	2864      	cmp	r0, #100	; 0x64
9000c41c:	f200 81a0 	bhi.w	9000c760 <HAL_RCCEx_PeriphCLKConfig+0xb64>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000c420:	683b      	ldr	r3, [r7, #0]
9000c422:	05da      	lsls	r2, r3, #23
9000c424:	d5f5      	bpl.n	9000c412 <HAL_RCCEx_PeriphCLKConfig+0x816>
    if (ret == HAL_OK)
9000c426:	2d00      	cmp	r5, #0
9000c428:	f040 81d4 	bne.w	9000c7d4 <HAL_RCCEx_PeriphCLKConfig+0xbd8>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
9000c42c:	4a63      	ldr	r2, [pc, #396]	; (9000c5bc <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c42e:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
9000c432:	6f11      	ldr	r1, [r2, #112]	; 0x70
9000c434:	4059      	eors	r1, r3
9000c436:	f411 7f40 	tst.w	r1, #768	; 0x300
9000c43a:	d00b      	beq.n	9000c454 <HAL_RCCEx_PeriphCLKConfig+0x858>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000c43c:	6f11      	ldr	r1, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
9000c43e:	6f10      	ldr	r0, [r2, #112]	; 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000c440:	f421 7140 	bic.w	r1, r1, #768	; 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
9000c444:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
9000c448:	6710      	str	r0, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
9000c44a:	6f10      	ldr	r0, [r2, #112]	; 0x70
9000c44c:	f420 3080 	bic.w	r0, r0, #65536	; 0x10000
9000c450:	6710      	str	r0, [r2, #112]	; 0x70
        RCC->BDCR = tmpreg;
9000c452:	6711      	str	r1, [r2, #112]	; 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
9000c454:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
9000c458:	f000 819e 	beq.w	9000c798 <HAL_RCCEx_PeriphCLKConfig+0xb9c>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000c45c:	f403 7240 	and.w	r2, r3, #768	; 0x300
9000c460:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
9000c464:	f000 81ac 	beq.w	9000c7c0 <HAL_RCCEx_PeriphCLKConfig+0xbc4>
9000c468:	4954      	ldr	r1, [pc, #336]	; (9000c5bc <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c46a:	690a      	ldr	r2, [r1, #16]
9000c46c:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
9000c470:	610a      	str	r2, [r1, #16]
9000c472:	4852      	ldr	r0, [pc, #328]	; (9000c5bc <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c474:	f3c3 010b 	ubfx	r1, r3, #0, #12
9000c478:	6f07      	ldr	r7, [r0, #112]	; 0x70
9000c47a:	4339      	orrs	r1, r7
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000c47c:	e9d4 3200 	ldrd	r3, r2, [r4]
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000c480:	6701      	str	r1, [r0, #112]	; 0x70
9000c482:	e553      	b.n	9000bf2c <HAL_RCCEx_PeriphCLKConfig+0x330>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000c484:	f104 0528 	add.w	r5, r4, #40	; 0x28
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000c488:	2102      	movs	r1, #2
9000c48a:	4628      	mov	r0, r5
9000c48c:	f7ff fb3c 	bl	9000bb08 <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
9000c490:	2800      	cmp	r0, #0
9000c492:	f43f aed2 	beq.w	9000c23a <HAL_RCCEx_PeriphCLKConfig+0x63e>
  return HAL_ERROR;
9000c496:	2001      	movs	r0, #1
}
9000c498:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9000c49c:	462e      	mov	r6, r5
9000c49e:	e450      	b.n	9000bd42 <HAL_RCCEx_PeriphCLKConfig+0x146>
9000c4a0:	462e      	mov	r6, r5
9000c4a2:	e406      	b.n	9000bcb2 <HAL_RCCEx_PeriphCLKConfig+0xb6>
9000c4a4:	462e      	mov	r6, r5
9000c4a6:	e489      	b.n	9000bdbc <HAL_RCCEx_PeriphCLKConfig+0x1c0>
9000c4a8:	462e      	mov	r6, r5
9000c4aa:	f7ff bbe2 	b.w	9000bc72 <HAL_RCCEx_PeriphCLKConfig+0x76>
9000c4ae:	462e      	mov	r6, r5
9000c4b0:	e423      	b.n	9000bcfa <HAL_RCCEx_PeriphCLKConfig+0xfe>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000c4b2:	2102      	movs	r1, #2
9000c4b4:	f104 0008 	add.w	r0, r4, #8
9000c4b8:	f7ff faac 	bl	9000ba14 <RCCEx_PLL2_Config>
9000c4bc:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000c4be:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c4c2:	2d00      	cmp	r5, #0
9000c4c4:	d14c      	bne.n	9000c560 <HAL_RCCEx_PeriphCLKConfig+0x964>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
9000c4c6:	4f3d      	ldr	r7, [pc, #244]	; (9000c5bc <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c4c8:	6d20      	ldr	r0, [r4, #80]	; 0x50
9000c4ca:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000c4cc:	f421 3180 	bic.w	r1, r1, #65536	; 0x10000
9000c4d0:	4301      	orrs	r1, r0
9000c4d2:	64f9      	str	r1, [r7, #76]	; 0x4c
9000c4d4:	e652      	b.n	9000c17c <HAL_RCCEx_PeriphCLKConfig+0x580>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c4d6:	4839      	ldr	r0, [pc, #228]	; (9000c5bc <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c4d8:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000c4da:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000c4de:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000c4e0:	e462      	b.n	9000bda8 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c4e2:	4836      	ldr	r0, [pc, #216]	; (9000c5bc <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c4e4:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000c4e6:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000c4ea:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000c4ec:	e41e      	b.n	9000bd2c <HAL_RCCEx_PeriphCLKConfig+0x130>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c4ee:	4833      	ldr	r0, [pc, #204]	; (9000c5bc <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c4f0:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000c4f2:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000c4f6:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000c4f8:	f7ff bbd1 	b.w	9000bc9e <HAL_RCCEx_PeriphCLKConfig+0xa2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c4fc:	482f      	ldr	r0, [pc, #188]	; (9000c5bc <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c4fe:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000c500:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000c504:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000c506:	f7ff bbed 	b.w	9000bce4 <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000c50a:	462e      	mov	r6, r5
9000c50c:	e540      	b.n	9000bf90 <HAL_RCCEx_PeriphCLKConfig+0x394>
9000c50e:	462e      	mov	r6, r5
9000c510:	e5a5      	b.n	9000c05e <HAL_RCCEx_PeriphCLKConfig+0x462>
9000c512:	462e      	mov	r6, r5
9000c514:	e4a2      	b.n	9000be5c <HAL_RCCEx_PeriphCLKConfig+0x260>
9000c516:	462e      	mov	r6, r5
9000c518:	e57f      	b.n	9000c01a <HAL_RCCEx_PeriphCLKConfig+0x41e>
9000c51a:	462e      	mov	r6, r5
9000c51c:	e42c      	b.n	9000bd78 <HAL_RCCEx_PeriphCLKConfig+0x17c>
9000c51e:	462e      	mov	r6, r5
9000c520:	e501      	b.n	9000bf26 <HAL_RCCEx_PeriphCLKConfig+0x32a>
9000c522:	462e      	mov	r6, r5
9000c524:	e46a      	b.n	9000bdfc <HAL_RCCEx_PeriphCLKConfig+0x200>
9000c526:	462e      	mov	r6, r5
9000c528:	e5dd      	b.n	9000c0e6 <HAL_RCCEx_PeriphCLKConfig+0x4ea>
9000c52a:	462e      	mov	r6, r5
9000c52c:	e486      	b.n	9000be3c <HAL_RCCEx_PeriphCLKConfig+0x240>
9000c52e:	462e      	mov	r6, r5
9000c530:	e5b7      	b.n	9000c0a2 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
9000c532:	462e      	mov	r6, r5
9000c534:	e54c      	b.n	9000bfd0 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
9000c536:	462e      	mov	r6, r5
9000c538:	e602      	b.n	9000c140 <HAL_RCCEx_PeriphCLKConfig+0x544>
9000c53a:	462e      	mov	r6, r5
9000c53c:	e612      	b.n	9000c164 <HAL_RCCEx_PeriphCLKConfig+0x568>
9000c53e:	462e      	mov	r6, r5
9000c540:	e62e      	b.n	9000c1a0 <HAL_RCCEx_PeriphCLKConfig+0x5a4>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c542:	4f1e      	ldr	r7, [pc, #120]	; (9000c5bc <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c544:	6af8      	ldr	r0, [r7, #44]	; 0x2c
9000c546:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
9000c54a:	62f8      	str	r0, [r7, #44]	; 0x2c
    if (ret == HAL_OK)
9000c54c:	2d00      	cmp	r5, #0
9000c54e:	d1f6      	bne.n	9000c53e <HAL_RCCEx_PeriphCLKConfig+0x942>
9000c550:	e6a4      	b.n	9000c29c <HAL_RCCEx_PeriphCLKConfig+0x6a0>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c552:	481a      	ldr	r0, [pc, #104]	; (9000c5bc <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c554:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000c556:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000c55a:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000c55c:	2d00      	cmp	r5, #0
9000c55e:	d0b2      	beq.n	9000c4c6 <HAL_RCCEx_PeriphCLKConfig+0x8ca>
9000c560:	462e      	mov	r6, r5
9000c562:	e60b      	b.n	9000c17c <HAL_RCCEx_PeriphCLKConfig+0x580>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c564:	4815      	ldr	r0, [pc, #84]	; (9000c5bc <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c566:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000c568:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000c56c:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000c56e:	2d00      	cmp	r5, #0
9000c570:	d1e3      	bne.n	9000c53a <HAL_RCCEx_PeriphCLKConfig+0x93e>
9000c572:	e6c7      	b.n	9000c304 <HAL_RCCEx_PeriphCLKConfig+0x708>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000c574:	f104 0008 	add.w	r0, r4, #8
9000c578:	f7ff fa4c 	bl	9000ba14 <RCCEx_PLL2_Config>
9000c57c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000c57e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c582:	2d00      	cmp	r5, #0
9000c584:	d1d7      	bne.n	9000c536 <HAL_RCCEx_PeriphCLKConfig+0x93a>
9000c586:	e6d1      	b.n	9000c32c <HAL_RCCEx_PeriphCLKConfig+0x730>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000c588:	6862      	ldr	r2, [r4, #4]
9000c58a:	e653      	b.n	9000c234 <HAL_RCCEx_PeriphCLKConfig+0x638>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000c58c:	2102      	movs	r1, #2
9000c58e:	f104 0008 	add.w	r0, r4, #8
9000c592:	f7ff fa3f 	bl	9000ba14 <RCCEx_PLL2_Config>
9000c596:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000c598:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c59c:	2d00      	cmp	r5, #0
9000c59e:	d1bc      	bne.n	9000c51a <HAL_RCCEx_PeriphCLKConfig+0x91e>
9000c5a0:	f7ff bbe3 	b.w	9000bd6a <HAL_RCCEx_PeriphCLKConfig+0x16e>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000c5a4:	2102      	movs	r1, #2
9000c5a6:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c5aa:	f7ff faad 	bl	9000bb08 <RCCEx_PLL3_Config>
9000c5ae:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000c5b0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c5b4:	2d00      	cmp	r5, #0
9000c5b6:	d1ba      	bne.n	9000c52e <HAL_RCCEx_PeriphCLKConfig+0x932>
9000c5b8:	e56b      	b.n	9000c092 <HAL_RCCEx_PeriphCLKConfig+0x496>
9000c5ba:	bf00      	nop
9000c5bc:	58024400 	.word	0x58024400
9000c5c0:	58024800 	.word	0x58024800
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000c5c4:	2102      	movs	r1, #2
9000c5c6:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c5ca:	f7ff fa9d 	bl	9000bb08 <RCCEx_PLL3_Config>
9000c5ce:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000c5d0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c5d4:	2d00      	cmp	r5, #0
9000c5d6:	d1a6      	bne.n	9000c526 <HAL_RCCEx_PeriphCLKConfig+0x92a>
9000c5d8:	e57d      	b.n	9000c0d6 <HAL_RCCEx_PeriphCLKConfig+0x4da>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c5da:	4886      	ldr	r0, [pc, #536]	; (9000c7f4 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000c5dc:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000c5de:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000c5e2:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000c5e4:	2d00      	cmp	r5, #0
9000c5e6:	d194      	bne.n	9000c512 <HAL_RCCEx_PeriphCLKConfig+0x916>
9000c5e8:	e679      	b.n	9000c2de <HAL_RCCEx_PeriphCLKConfig+0x6e2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000c5ea:	2101      	movs	r1, #1
9000c5ec:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c5f0:	f7ff fa8a 	bl	9000bb08 <RCCEx_PLL3_Config>
9000c5f4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000c5f6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c5fa:	2d00      	cmp	r5, #0
9000c5fc:	d191      	bne.n	9000c522 <HAL_RCCEx_PeriphCLKConfig+0x926>
9000c5fe:	f7ff bbf6 	b.w	9000bdee <HAL_RCCEx_PeriphCLKConfig+0x1f2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000c602:	2101      	movs	r1, #1
9000c604:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c608:	f7ff fa7e 	bl	9000bb08 <RCCEx_PLL3_Config>
9000c60c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000c60e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c612:	2d00      	cmp	r5, #0
9000c614:	d189      	bne.n	9000c52a <HAL_RCCEx_PeriphCLKConfig+0x92e>
9000c616:	e409      	b.n	9000be2c <HAL_RCCEx_PeriphCLKConfig+0x230>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000c618:	2102      	movs	r1, #2
9000c61a:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c61e:	f7ff fa73 	bl	9000bb08 <RCCEx_PLL3_Config>
9000c622:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000c624:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c628:	2d00      	cmp	r5, #0
9000c62a:	f47f af70 	bne.w	9000c50e <HAL_RCCEx_PeriphCLKConfig+0x912>
9000c62e:	e50e      	b.n	9000c04e <HAL_RCCEx_PeriphCLKConfig+0x452>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000c630:	2102      	movs	r1, #2
9000c632:	f104 0008 	add.w	r0, r4, #8
9000c636:	f7ff f9ed 	bl	9000ba14 <RCCEx_PLL2_Config>
9000c63a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000c63c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c640:	2d00      	cmp	r5, #0
9000c642:	f47f af6c 	bne.w	9000c51e <HAL_RCCEx_PeriphCLKConfig+0x922>
9000c646:	e467      	b.n	9000bf18 <HAL_RCCEx_PeriphCLKConfig+0x31c>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000c648:	2102      	movs	r1, #2
9000c64a:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c64e:	f7ff fa5b 	bl	9000bb08 <RCCEx_PLL3_Config>
9000c652:	2800      	cmp	r0, #0
9000c654:	f040 8094 	bne.w	9000c780 <HAL_RCCEx_PeriphCLKConfig+0xb84>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000c658:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000c65c:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c660:	e549      	b.n	9000c0f6 <HAL_RCCEx_PeriphCLKConfig+0x4fa>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000c662:	2102      	movs	r1, #2
9000c664:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c668:	f7ff fa4e 	bl	9000bb08 <RCCEx_PLL3_Config>
9000c66c:	2800      	cmp	r0, #0
9000c66e:	f040 808d 	bne.w	9000c78c <HAL_RCCEx_PeriphCLKConfig+0xb90>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000c672:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000c676:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c67a:	e54a      	b.n	9000c112 <HAL_RCCEx_PeriphCLKConfig+0x516>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000c67c:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c680:	f7ff bae9 	b.w	9000bc56 <HAL_RCCEx_PeriphCLKConfig+0x5a>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000c684:	2100      	movs	r1, #0
9000c686:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c68a:	f7ff fa3d 	bl	9000bb08 <RCCEx_PLL3_Config>
9000c68e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000c690:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000c694:	f7ff bb4a 	b.w	9000bd2c <HAL_RCCEx_PeriphCLKConfig+0x130>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000c698:	2100      	movs	r1, #0
9000c69a:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c69e:	f7ff fa33 	bl	9000bb08 <RCCEx_PLL3_Config>
9000c6a2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000c6a4:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000c6a8:	e600      	b.n	9000c2ac <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000c6aa:	2100      	movs	r1, #0
9000c6ac:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c6b0:	f7ff fa2a 	bl	9000bb08 <RCCEx_PLL3_Config>
9000c6b4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000c6b6:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000c6ba:	f7ff baf0 	b.w	9000bc9e <HAL_RCCEx_PeriphCLKConfig+0xa2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000c6be:	2102      	movs	r1, #2
9000c6c0:	3028      	adds	r0, #40	; 0x28
9000c6c2:	f7ff fa21 	bl	9000bb08 <RCCEx_PLL3_Config>
9000c6c6:	4606      	mov	r6, r0
    if (ret == HAL_OK)
9000c6c8:	2e00      	cmp	r6, #0
9000c6ca:	f43f aab5 	beq.w	9000bc38 <HAL_RCCEx_PeriphCLKConfig+0x3c>
9000c6ce:	e7d5      	b.n	9000c67c <HAL_RCCEx_PeriphCLKConfig+0xa80>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c6d0:	4848      	ldr	r0, [pc, #288]	; (9000c7f4 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
        break;
9000c6d2:	4635      	mov	r5, r6
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c6d4:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000c6d6:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000c6da:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000c6dc:	e5e6      	b.n	9000c2ac <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000c6de:	2100      	movs	r1, #0
9000c6e0:	f104 0008 	add.w	r0, r4, #8
9000c6e4:	f7ff f996 	bl	9000ba14 <RCCEx_PLL2_Config>
9000c6e8:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000c6ea:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000c6ee:	e5dd      	b.n	9000c2ac <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000c6f0:	2100      	movs	r1, #0
9000c6f2:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c6f6:	f7ff fa07 	bl	9000bb08 <RCCEx_PLL3_Config>
9000c6fa:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000c6fc:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000c700:	f7ff bb52 	b.w	9000bda8 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000c704:	2100      	movs	r1, #0
9000c706:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c70a:	f7ff f9fd 	bl	9000bb08 <RCCEx_PLL3_Config>
9000c70e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000c710:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000c714:	f7ff bae6 	b.w	9000bce4 <HAL_RCCEx_PeriphCLKConfig+0xe8>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000c718:	2101      	movs	r1, #1
9000c71a:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c71e:	f7ff f9f3 	bl	9000bb08 <RCCEx_PLL3_Config>
9000c722:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000c724:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c728:	2d00      	cmp	r5, #0
9000c72a:	f47f aef4 	bne.w	9000c516 <HAL_RCCEx_PeriphCLKConfig+0x91a>
9000c72e:	e46c      	b.n	9000c00a <HAL_RCCEx_PeriphCLKConfig+0x40e>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000c730:	2101      	movs	r1, #1
9000c732:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c736:	f7ff f9e7 	bl	9000bb08 <RCCEx_PLL3_Config>
9000c73a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000c73c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c740:	2d00      	cmp	r5, #0
9000c742:	f47f aef6 	bne.w	9000c532 <HAL_RCCEx_PeriphCLKConfig+0x936>
9000c746:	e43c      	b.n	9000bfc2 <HAL_RCCEx_PeriphCLKConfig+0x3c6>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000c748:	2101      	movs	r1, #1
9000c74a:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c74e:	f7ff f9db 	bl	9000bb08 <RCCEx_PLL3_Config>
9000c752:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000c754:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c758:	2d00      	cmp	r5, #0
9000c75a:	f47f aed6 	bne.w	9000c50a <HAL_RCCEx_PeriphCLKConfig+0x90e>
9000c75e:	e5f9      	b.n	9000c354 <HAL_RCCEx_PeriphCLKConfig+0x758>
        status = ret;
9000c760:	2603      	movs	r6, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000c762:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c766:	4635      	mov	r5, r6
9000c768:	f7ff bbe0 	b.w	9000bf2c <HAL_RCCEx_PeriphCLKConfig+0x330>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000c76c:	2601      	movs	r6, #1
9000c76e:	f7ff ba72 	b.w	9000bc56 <HAL_RCCEx_PeriphCLKConfig+0x5a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c772:	4d20      	ldr	r5, [pc, #128]	; (9000c7f4 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000c774:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000c776:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
9000c77a:	62e8      	str	r0, [r5, #44]	; 0x2c
    if (ret == HAL_OK)
9000c77c:	f7ff ba64 	b.w	9000bc48 <HAL_RCCEx_PeriphCLKConfig+0x4c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000c780:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
        status = HAL_ERROR;
9000c784:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000c786:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c78a:	e4b4      	b.n	9000c0f6 <HAL_RCCEx_PeriphCLKConfig+0x4fa>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000c78c:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
        status = HAL_ERROR;
9000c790:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000c792:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c796:	e4bc      	b.n	9000c112 <HAL_RCCEx_PeriphCLKConfig+0x516>
        tickstart = HAL_GetTick();
9000c798:	f7fb fa88 	bl	90007cac <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c79c:	f8df 8054 	ldr.w	r8, [pc, #84]	; 9000c7f4 <HAL_RCCEx_PeriphCLKConfig+0xbf8>
        tickstart = HAL_GetTick();
9000c7a0:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c7a2:	f241 3988 	movw	r9, #5000	; 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c7a6:	e004      	b.n	9000c7b2 <HAL_RCCEx_PeriphCLKConfig+0xbb6>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c7a8:	f7fb fa80 	bl	90007cac <HAL_GetTick>
9000c7ac:	1bc0      	subs	r0, r0, r7
9000c7ae:	4548      	cmp	r0, r9
9000c7b0:	d8d6      	bhi.n	9000c760 <HAL_RCCEx_PeriphCLKConfig+0xb64>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c7b2:	f8d8 3070 	ldr.w	r3, [r8, #112]	; 0x70
9000c7b6:	079b      	lsls	r3, r3, #30
9000c7b8:	d5f6      	bpl.n	9000c7a8 <HAL_RCCEx_PeriphCLKConfig+0xbac>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000c7ba:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
9000c7be:	e64d      	b.n	9000c45c <HAL_RCCEx_PeriphCLKConfig+0x860>
9000c7c0:	480c      	ldr	r0, [pc, #48]	; (9000c7f4 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000c7c2:	4a0d      	ldr	r2, [pc, #52]	; (9000c7f8 <HAL_RCCEx_PeriphCLKConfig+0xbfc>)
9000c7c4:	6901      	ldr	r1, [r0, #16]
9000c7c6:	ea02 1213 	and.w	r2, r2, r3, lsr #4
9000c7ca:	f421 517c 	bic.w	r1, r1, #16128	; 0x3f00
9000c7ce:	430a      	orrs	r2, r1
9000c7d0:	6102      	str	r2, [r0, #16]
9000c7d2:	e64e      	b.n	9000c472 <HAL_RCCEx_PeriphCLKConfig+0x876>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000c7d4:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c7d8:	462e      	mov	r6, r5
9000c7da:	f7ff bba7 	b.w	9000bf2c <HAL_RCCEx_PeriphCLKConfig+0x330>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000c7de:	2601      	movs	r6, #1
9000c7e0:	4635      	mov	r5, r6
9000c7e2:	f7ff bbf5 	b.w	9000bfd0 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    switch (PeriphClkInit->FmcClockSelection)
9000c7e6:	2601      	movs	r6, #1
9000c7e8:	4635      	mov	r5, r6
9000c7ea:	f7ff bb9c 	b.w	9000bf26 <HAL_RCCEx_PeriphCLKConfig+0x32a>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000c7ee:	2601      	movs	r6, #1
9000c7f0:	4635      	mov	r5, r6
9000c7f2:	e412      	b.n	9000c01a <HAL_RCCEx_PeriphCLKConfig+0x41e>
9000c7f4:	58024400 	.word	0x58024400
9000c7f8:	00ffffcf 	.word	0x00ffffcf

9000c7fc <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
9000c7fc:	b318      	cbz	r0, 9000c846 <HAL_SDRAM_Init+0x4a>
{
9000c7fe:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
9000c800:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
9000c804:	4604      	mov	r4, r0
9000c806:	460d      	mov	r5, r1
9000c808:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000c80c:	b1b3      	cbz	r3, 9000c83c <HAL_SDRAM_Init+0x40>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000c80e:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c810:	2302      	movs	r3, #2
9000c812:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000c816:	f851 0b04 	ldr.w	r0, [r1], #4
9000c81a:	f000 fa39 	bl	9000cc90 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
9000c81e:	6862      	ldr	r2, [r4, #4]
9000c820:	4629      	mov	r1, r5
9000c822:	6820      	ldr	r0, [r4, #0]
9000c824:	f000 fa72 	bl	9000cd0c <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
9000c828:	4a08      	ldr	r2, [pc, #32]	; (9000c84c <HAL_SDRAM_Init+0x50>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
9000c82a:	2101      	movs	r1, #1

  return HAL_OK;
9000c82c:	2000      	movs	r0, #0
  __FMC_ENABLE();
9000c82e:	6813      	ldr	r3, [r2, #0]
9000c830:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
9000c834:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
9000c836:	f884 102c 	strb.w	r1, [r4, #44]	; 0x2c
}
9000c83a:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
9000c83c:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
9000c840:	f7f6 fe5a 	bl	900034f8 <HAL_SDRAM_MspInit>
9000c844:	e7e3      	b.n	9000c80e <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
9000c846:	2001      	movs	r0, #1
}
9000c848:	4770      	bx	lr
9000c84a:	bf00      	nop
9000c84c:	52004000 	.word	0x52004000

9000c850 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
9000c850:	b510      	push	{r4, lr}
9000c852:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
9000c854:	f7f6 fecc 	bl	900035f0 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
9000c858:	e9d4 0100 	ldrd	r0, r1, [r4]
9000c85c:	f000 faa4 	bl	9000cda8 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
9000c860:	2000      	movs	r0, #0
9000c862:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
9000c866:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
9000c86a:	bd10      	pop	{r4, pc}

9000c86c <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
9000c86c:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000c86e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
9000c872:	4604      	mov	r4, r0

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
9000c874:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000c876:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
9000c878:	d004      	beq.n	9000c884 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
9000c87a:	f000 06fb 	and.w	r6, r0, #251	; 0xfb
9000c87e:	2e01      	cmp	r6, #1
9000c880:	d001      	beq.n	9000c886 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
9000c882:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000c884:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c886:	2302      	movs	r3, #2
9000c888:	460d      	mov	r5, r1
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000c88a:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c88c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000c890:	f000 fa9e 	bl	9000cdd0 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
9000c894:	682b      	ldr	r3, [r5, #0]
9000c896:	2b02      	cmp	r3, #2
9000c898:	d003      	beq.n	9000c8a2 <HAL_SDRAM_SendCommand+0x36>
  return HAL_OK;
9000c89a:	2000      	movs	r0, #0
      hsdram->State = HAL_SDRAM_STATE_READY;
9000c89c:	f884 602c 	strb.w	r6, [r4, #44]	; 0x2c
}
9000c8a0:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000c8a2:	2305      	movs	r3, #5
  return HAL_OK;
9000c8a4:	2000      	movs	r0, #0
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000c8a6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
}
9000c8aa:	bd70      	pop	{r4, r5, r6, pc}

9000c8ac <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
9000c8ac:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000c8ae:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
9000c8b2:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000c8b4:	2b02      	cmp	r3, #2
9000c8b6:	b2d8      	uxtb	r0, r3
9000c8b8:	d005      	beq.n	9000c8c6 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
9000c8ba:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
9000c8be:	2b01      	cmp	r3, #1
9000c8c0:	b2dd      	uxtb	r5, r3
9000c8c2:	d001      	beq.n	9000c8c8 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
9000c8c4:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000c8c6:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c8c8:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000c8ca:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c8cc:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000c8d0:	f000 fa96 	bl	9000ce00 <FMC_SDRAM_ProgramRefreshRate>
  return HAL_OK;
9000c8d4:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
9000c8d6:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
}
9000c8da:	bd38      	pop	{r3, r4, r5, pc}

9000c8dc <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
9000c8dc:	4770      	bx	lr
9000c8de:	bf00      	nop

9000c8e0 <HAL_TIM_Base_Init>:
  if (htim == NULL)
9000c8e0:	2800      	cmp	r0, #0
9000c8e2:	f000 80a5 	beq.w	9000ca30 <HAL_TIM_Base_Init+0x150>
{
9000c8e6:	b538      	push	{r3, r4, r5, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
9000c8e8:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000c8ec:	4604      	mov	r4, r0
9000c8ee:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000c8f2:	2b00      	cmp	r3, #0
9000c8f4:	d076      	beq.n	9000c9e4 <HAL_TIM_Base_Init+0x104>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
9000c8f6:	6822      	ldr	r2, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000c8f8:	2302      	movs	r3, #2
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c8fa:	494e      	ldr	r1, [pc, #312]	; (9000ca34 <HAL_TIM_Base_Init+0x154>)
9000c8fc:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
  htim->State = HAL_TIM_STATE_BUSY;
9000c900:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c904:	eba2 0101 	sub.w	r1, r2, r1
  tmpcr1 = TIMx->CR1;
9000c908:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c90a:	fab1 f181 	clz	r1, r1
9000c90e:	ea4f 1151 	mov.w	r1, r1, lsr #5
9000c912:	d027      	beq.n	9000c964 <HAL_TIM_Base_Init+0x84>
9000c914:	bb31      	cbnz	r1, 9000c964 <HAL_TIM_Base_Init+0x84>
9000c916:	4848      	ldr	r0, [pc, #288]	; (9000ca38 <HAL_TIM_Base_Init+0x158>)
9000c918:	4d48      	ldr	r5, [pc, #288]	; (9000ca3c <HAL_TIM_Base_Init+0x15c>)
9000c91a:	4282      	cmp	r2, r0
9000c91c:	d067      	beq.n	9000c9ee <HAL_TIM_Base_Init+0x10e>
9000c91e:	f500 6080 	add.w	r0, r0, #1024	; 0x400
9000c922:	4282      	cmp	r2, r0
9000c924:	d063      	beq.n	9000c9ee <HAL_TIM_Base_Init+0x10e>
9000c926:	1b55      	subs	r5, r2, r5
9000c928:	f500 6080 	add.w	r0, r0, #1024	; 0x400
9000c92c:	fab5 f585 	clz	r5, r5
9000c930:	4282      	cmp	r2, r0
9000c932:	ea4f 1555 	mov.w	r5, r5, lsr #5
9000c936:	d063      	beq.n	9000ca00 <HAL_TIM_Base_Init+0x120>
9000c938:	2d00      	cmp	r5, #0
9000c93a:	d161      	bne.n	9000ca00 <HAL_TIM_Base_Init+0x120>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000c93c:	4840      	ldr	r0, [pc, #256]	; (9000ca40 <HAL_TIM_Base_Init+0x160>)
9000c93e:	4941      	ldr	r1, [pc, #260]	; (9000ca44 <HAL_TIM_Base_Init+0x164>)
9000c940:	428a      	cmp	r2, r1
9000c942:	bf18      	it	ne
9000c944:	4282      	cmpne	r2, r0
9000c946:	d065      	beq.n	9000ca14 <HAL_TIM_Base_Init+0x134>
9000c948:	f501 6180 	add.w	r1, r1, #1024	; 0x400
9000c94c:	428a      	cmp	r2, r1
9000c94e:	d061      	beq.n	9000ca14 <HAL_TIM_Base_Init+0x134>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c950:	69a0      	ldr	r0, [r4, #24]
9000c952:	f023 0380 	bic.w	r3, r3, #128	; 0x80

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c956:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c958:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
9000c95a:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
9000c95c:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c95e:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000c960:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c962:	e023      	b.n	9000c9ac <HAL_TIM_Base_Init+0xcc>
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c964:	4d35      	ldr	r5, [pc, #212]	; (9000ca3c <HAL_TIM_Base_Init+0x15c>)
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000c966:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000c96a:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c96c:	1b55      	subs	r5, r2, r5
    tmpcr1 |= Structure->CounterMode;
9000c96e:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c970:	fab5 f585 	clz	r5, r5
9000c974:	096d      	lsrs	r5, r5, #5
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c976:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000c978:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c97c:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c97e:	69a0      	ldr	r0, [r4, #24]
9000c980:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000c984:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
9000c986:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c988:	68e3      	ldr	r3, [r4, #12]
9000c98a:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000c98c:	6863      	ldr	r3, [r4, #4]
9000c98e:	6293      	str	r3, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c990:	b951      	cbnz	r1, 9000c9a8 <HAL_TIM_Base_Init+0xc8>
9000c992:	b94d      	cbnz	r5, 9000c9a8 <HAL_TIM_Base_Init+0xc8>
9000c994:	492a      	ldr	r1, [pc, #168]	; (9000ca40 <HAL_TIM_Base_Init+0x160>)
9000c996:	4b2b      	ldr	r3, [pc, #172]	; (9000ca44 <HAL_TIM_Base_Init+0x164>)
9000c998:	429a      	cmp	r2, r3
9000c99a:	bf18      	it	ne
9000c99c:	428a      	cmpne	r2, r1
9000c99e:	d003      	beq.n	9000c9a8 <HAL_TIM_Base_Init+0xc8>
9000c9a0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
9000c9a4:	429a      	cmp	r2, r3
9000c9a6:	d101      	bne.n	9000c9ac <HAL_TIM_Base_Init+0xcc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
9000c9a8:	6963      	ldr	r3, [r4, #20]
9000c9aa:	6313      	str	r3, [r2, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
9000c9ac:	2301      	movs	r3, #1
  return HAL_OK;
9000c9ae:	2000      	movs	r0, #0
  TIMx->EGR = TIM_EGR_UG;
9000c9b0:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000c9b2:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000c9b6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
9000c9ba:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
9000c9be:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
9000c9c2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
9000c9c6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
9000c9ca:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000c9ce:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
9000c9d2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000c9d6:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
9000c9da:	f884 3047 	strb.w	r3, [r4, #71]	; 0x47
  htim->State = HAL_TIM_STATE_READY;
9000c9de:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
9000c9e2:	bd38      	pop	{r3, r4, r5, pc}
    htim->Lock = HAL_UNLOCKED;
9000c9e4:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
9000c9e8:	f7ff ff78 	bl	9000c8dc <HAL_TIM_Base_MspInit>
9000c9ec:	e783      	b.n	9000c8f6 <HAL_TIM_Base_Init+0x16>
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c9ee:	1b55      	subs	r5, r2, r5
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000c9f0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000c9f4:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c9f6:	fab5 f585 	clz	r5, r5
    tmpcr1 |= Structure->CounterMode;
9000c9fa:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c9fc:	096d      	lsrs	r5, r5, #5
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000c9fe:	e7ba      	b.n	9000c976 <HAL_TIM_Base_Init+0x96>
    tmpcr1 |= Structure->CounterMode;
9000ca00:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000ca02:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000ca06:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000ca08:	480f      	ldr	r0, [pc, #60]	; (9000ca48 <HAL_TIM_Base_Init+0x168>)
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000ca0a:	4282      	cmp	r2, r0
9000ca0c:	d0b3      	beq.n	9000c976 <HAL_TIM_Base_Init+0x96>
9000ca0e:	2d00      	cmp	r5, #0
9000ca10:	d1b1      	bne.n	9000c976 <HAL_TIM_Base_Init+0x96>
9000ca12:	e793      	b.n	9000c93c <HAL_TIM_Base_Init+0x5c>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000ca14:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000ca16:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000ca1a:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000ca1c:	4303      	orrs	r3, r0
  TIMx->ARR = (uint32_t)Structure->Period ;
9000ca1e:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000ca20:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000ca24:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
9000ca26:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
9000ca28:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000ca2a:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000ca2c:	6291      	str	r1, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000ca2e:	e7b1      	b.n	9000c994 <HAL_TIM_Base_Init+0xb4>
    return HAL_ERROR;
9000ca30:	2001      	movs	r0, #1
}
9000ca32:	4770      	bx	lr
9000ca34:	40010000 	.word	0x40010000
9000ca38:	40000400 	.word	0x40000400
9000ca3c:	40010400 	.word	0x40010400
9000ca40:	40014000 	.word	0x40014000
9000ca44:	40014400 	.word	0x40014400
9000ca48:	40000c00 	.word	0x40000c00

9000ca4c <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
9000ca4c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000ca50:	2b01      	cmp	r3, #1
9000ca52:	d141      	bne.n	9000cad8 <HAL_TIM_Base_Start_IT+0x8c>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000ca54:	6802      	ldr	r2, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000ca56:	2102      	movs	r1, #2
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000ca58:	4b24      	ldr	r3, [pc, #144]	; (9000caec <HAL_TIM_Base_Start_IT+0xa0>)
9000ca5a:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
9000ca5e:	bf18      	it	ne
9000ca60:	429a      	cmpne	r2, r3
{
9000ca62:	b430      	push	{r4, r5}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000ca64:	bf0c      	ite	eq
9000ca66:	2301      	moveq	r3, #1
9000ca68:	2300      	movne	r3, #0
9000ca6a:	4d21      	ldr	r5, [pc, #132]	; (9000caf0 <HAL_TIM_Base_Start_IT+0xa4>)
9000ca6c:	4c21      	ldr	r4, [pc, #132]	; (9000caf4 <HAL_TIM_Base_Start_IT+0xa8>)
9000ca6e:	42aa      	cmp	r2, r5
9000ca70:	bf08      	it	eq
9000ca72:	f043 0301 	orreq.w	r3, r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
9000ca76:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000ca7a:	68d1      	ldr	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000ca7c:	42a2      	cmp	r2, r4
9000ca7e:	bf08      	it	eq
9000ca80:	f043 0301 	orreq.w	r3, r3, #1
9000ca84:	f504 6480 	add.w	r4, r4, #1024	; 0x400
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000ca88:	f041 0101 	orr.w	r1, r1, #1
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000ca8c:	481a      	ldr	r0, [pc, #104]	; (9000caf8 <HAL_TIM_Base_Start_IT+0xac>)
9000ca8e:	42a2      	cmp	r2, r4
9000ca90:	bf08      	it	eq
9000ca92:	f043 0301 	orreq.w	r3, r3, #1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000ca96:	60d1      	str	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000ca98:	4282      	cmp	r2, r0
9000ca9a:	bf08      	it	eq
9000ca9c:	f043 0301 	orreq.w	r3, r3, #1
9000caa0:	4916      	ldr	r1, [pc, #88]	; (9000cafc <HAL_TIM_Base_Start_IT+0xb0>)
9000caa2:	428a      	cmp	r2, r1
9000caa4:	bf08      	it	eq
9000caa6:	f043 0301 	orreq.w	r3, r3, #1
9000caaa:	b933      	cbnz	r3, 9000caba <HAL_TIM_Base_Start_IT+0x6e>
9000caac:	f500 5070 	add.w	r0, r0, #15360	; 0x3c00
9000cab0:	1a10      	subs	r0, r2, r0
9000cab2:	fab0 f080 	clz	r0, r0
9000cab6:	0940      	lsrs	r0, r0, #5
9000cab8:	b198      	cbz	r0, 9000cae2 <HAL_TIM_Base_Start_IT+0x96>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
9000caba:	6891      	ldr	r1, [r2, #8]
9000cabc:	4b10      	ldr	r3, [pc, #64]	; (9000cb00 <HAL_TIM_Base_Start_IT+0xb4>)
9000cabe:	400b      	ands	r3, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
9000cac0:	2b06      	cmp	r3, #6
9000cac2:	d00b      	beq.n	9000cadc <HAL_TIM_Base_Start_IT+0x90>
9000cac4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
9000cac8:	d008      	beq.n	9000cadc <HAL_TIM_Base_Start_IT+0x90>
      __HAL_TIM_ENABLE(htim);
9000caca:	6813      	ldr	r3, [r2, #0]
  return HAL_OK;
9000cacc:	2000      	movs	r0, #0
      __HAL_TIM_ENABLE(htim);
9000cace:	f043 0301 	orr.w	r3, r3, #1
9000cad2:	6013      	str	r3, [r2, #0]
}
9000cad4:	bc30      	pop	{r4, r5}
9000cad6:	4770      	bx	lr
    return HAL_ERROR;
9000cad8:	2001      	movs	r0, #1
}
9000cada:	4770      	bx	lr
  return HAL_OK;
9000cadc:	2000      	movs	r0, #0
}
9000cade:	bc30      	pop	{r4, r5}
9000cae0:	4770      	bx	lr
    __HAL_TIM_ENABLE(htim);
9000cae2:	6813      	ldr	r3, [r2, #0]
9000cae4:	f043 0301 	orr.w	r3, r3, #1
9000cae8:	6013      	str	r3, [r2, #0]
9000caea:	e7f3      	b.n	9000cad4 <HAL_TIM_Base_Start_IT+0x88>
9000caec:	40010000 	.word	0x40010000
9000caf0:	40000400 	.word	0x40000400
9000caf4:	40000800 	.word	0x40000800
9000caf8:	40010400 	.word	0x40010400
9000cafc:	40001800 	.word	0x40001800
9000cb00:	00010007 	.word	0x00010007

9000cb04 <HAL_TIM_OC_DelayElapsedCallback>:
9000cb04:	4770      	bx	lr
9000cb06:	bf00      	nop

9000cb08 <HAL_TIM_IC_CaptureCallback>:
9000cb08:	4770      	bx	lr
9000cb0a:	bf00      	nop

9000cb0c <HAL_TIM_PWM_PulseFinishedCallback>:
9000cb0c:	4770      	bx	lr
9000cb0e:	bf00      	nop

9000cb10 <HAL_TIM_TriggerCallback>:
9000cb10:	4770      	bx	lr
9000cb12:	bf00      	nop

9000cb14 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
9000cb14:	6803      	ldr	r3, [r0, #0]
9000cb16:	691a      	ldr	r2, [r3, #16]
9000cb18:	0791      	lsls	r1, r2, #30
{
9000cb1a:	b510      	push	{r4, lr}
9000cb1c:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
9000cb1e:	d502      	bpl.n	9000cb26 <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
9000cb20:	68da      	ldr	r2, [r3, #12]
9000cb22:	0792      	lsls	r2, r2, #30
9000cb24:	d468      	bmi.n	9000cbf8 <HAL_TIM_IRQHandler+0xe4>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
9000cb26:	691a      	ldr	r2, [r3, #16]
9000cb28:	0752      	lsls	r2, r2, #29
9000cb2a:	d502      	bpl.n	9000cb32 <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
9000cb2c:	68da      	ldr	r2, [r3, #12]
9000cb2e:	0750      	lsls	r0, r2, #29
9000cb30:	d44f      	bmi.n	9000cbd2 <HAL_TIM_IRQHandler+0xbe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
9000cb32:	691a      	ldr	r2, [r3, #16]
9000cb34:	0711      	lsls	r1, r2, #28
9000cb36:	d502      	bpl.n	9000cb3e <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
9000cb38:	68da      	ldr	r2, [r3, #12]
9000cb3a:	0712      	lsls	r2, r2, #28
9000cb3c:	d437      	bmi.n	9000cbae <HAL_TIM_IRQHandler+0x9a>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
9000cb3e:	691a      	ldr	r2, [r3, #16]
9000cb40:	06d0      	lsls	r0, r2, #27
9000cb42:	d502      	bpl.n	9000cb4a <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
9000cb44:	68da      	ldr	r2, [r3, #12]
9000cb46:	06d1      	lsls	r1, r2, #27
9000cb48:	d41e      	bmi.n	9000cb88 <HAL_TIM_IRQHandler+0x74>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
9000cb4a:	691a      	ldr	r2, [r3, #16]
9000cb4c:	07d2      	lsls	r2, r2, #31
9000cb4e:	d502      	bpl.n	9000cb56 <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
9000cb50:	68da      	ldr	r2, [r3, #12]
9000cb52:	07d0      	lsls	r0, r2, #31
9000cb54:	d469      	bmi.n	9000cc2a <HAL_TIM_IRQHandler+0x116>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9000cb56:	691a      	ldr	r2, [r3, #16]
9000cb58:	0611      	lsls	r1, r2, #24
9000cb5a:	d502      	bpl.n	9000cb62 <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
9000cb5c:	68da      	ldr	r2, [r3, #12]
9000cb5e:	0612      	lsls	r2, r2, #24
9000cb60:	d46b      	bmi.n	9000cc3a <HAL_TIM_IRQHandler+0x126>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
9000cb62:	691a      	ldr	r2, [r3, #16]
9000cb64:	05d0      	lsls	r0, r2, #23
9000cb66:	d502      	bpl.n	9000cb6e <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
9000cb68:	68da      	ldr	r2, [r3, #12]
9000cb6a:	0611      	lsls	r1, r2, #24
9000cb6c:	d46d      	bmi.n	9000cc4a <HAL_TIM_IRQHandler+0x136>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
9000cb6e:	691a      	ldr	r2, [r3, #16]
9000cb70:	0652      	lsls	r2, r2, #25
9000cb72:	d502      	bpl.n	9000cb7a <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
9000cb74:	68da      	ldr	r2, [r3, #12]
9000cb76:	0650      	lsls	r0, r2, #25
9000cb78:	d46f      	bmi.n	9000cc5a <HAL_TIM_IRQHandler+0x146>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
9000cb7a:	691a      	ldr	r2, [r3, #16]
9000cb7c:	0691      	lsls	r1, r2, #26
9000cb7e:	d502      	bpl.n	9000cb86 <HAL_TIM_IRQHandler+0x72>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
9000cb80:	68da      	ldr	r2, [r3, #12]
9000cb82:	0692      	lsls	r2, r2, #26
9000cb84:	d449      	bmi.n	9000cc1a <HAL_TIM_IRQHandler+0x106>
}
9000cb86:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
9000cb88:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000cb8c:	2208      	movs	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
9000cb8e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
9000cb90:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000cb92:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
9000cb94:	69db      	ldr	r3, [r3, #28]
9000cb96:	f413 7f40 	tst.w	r3, #768	; 0x300
9000cb9a:	d16f      	bne.n	9000cc7c <HAL_TIM_IRQHandler+0x168>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000cb9c:	f7ff ffb2 	bl	9000cb04 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000cba0:	4620      	mov	r0, r4
9000cba2:	f7ff ffb3 	bl	9000cb0c <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000cba6:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
9000cba8:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000cbaa:	7722      	strb	r2, [r4, #28]
9000cbac:	e7cd      	b.n	9000cb4a <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
9000cbae:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000cbb2:	2204      	movs	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
9000cbb4:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
9000cbb6:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000cbb8:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
9000cbba:	69db      	ldr	r3, [r3, #28]
9000cbbc:	079b      	lsls	r3, r3, #30
9000cbbe:	d15a      	bne.n	9000cc76 <HAL_TIM_IRQHandler+0x162>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000cbc0:	f7ff ffa0 	bl	9000cb04 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000cbc4:	4620      	mov	r0, r4
9000cbc6:	f7ff ffa1 	bl	9000cb0c <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000cbca:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
9000cbcc:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000cbce:	7722      	strb	r2, [r4, #28]
9000cbd0:	e7b5      	b.n	9000cb3e <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
9000cbd2:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000cbd6:	2202      	movs	r2, #2
        HAL_TIM_IC_CaptureCallback(htim);
9000cbd8:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
9000cbda:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000cbdc:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
9000cbde:	699b      	ldr	r3, [r3, #24]
9000cbe0:	f413 7f40 	tst.w	r3, #768	; 0x300
9000cbe4:	d144      	bne.n	9000cc70 <HAL_TIM_IRQHandler+0x15c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000cbe6:	f7ff ff8d 	bl	9000cb04 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000cbea:	4620      	mov	r0, r4
9000cbec:	f7ff ff8e 	bl	9000cb0c <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000cbf0:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
9000cbf2:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000cbf4:	7722      	strb	r2, [r4, #28]
9000cbf6:	e79c      	b.n	9000cb32 <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
9000cbf8:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000cbfc:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
9000cbfe:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000cc00:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
9000cc02:	699b      	ldr	r3, [r3, #24]
9000cc04:	0799      	lsls	r1, r3, #30
9000cc06:	d130      	bne.n	9000cc6a <HAL_TIM_IRQHandler+0x156>
          HAL_TIM_OC_DelayElapsedCallback(htim);
9000cc08:	f7ff ff7c 	bl	9000cb04 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
9000cc0c:	4620      	mov	r0, r4
9000cc0e:	f7ff ff7d 	bl	9000cb0c <HAL_TIM_PWM_PulseFinishedCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000cc12:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
9000cc14:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000cc16:	7722      	strb	r2, [r4, #28]
9000cc18:	e785      	b.n	9000cb26 <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
9000cc1a:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
9000cc1e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
9000cc20:	611a      	str	r2, [r3, #16]
}
9000cc22:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
9000cc26:	f000 b82d 	b.w	9000cc84 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
9000cc2a:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
9000cc2e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
9000cc30:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
9000cc32:	f7f6 fac5 	bl	900031c0 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9000cc36:	6823      	ldr	r3, [r4, #0]
9000cc38:	e78d      	b.n	9000cb56 <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
9000cc3a:	f06f 0280 	mvn.w	r2, #128	; 0x80
      HAL_TIMEx_BreakCallback(htim);
9000cc3e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
9000cc40:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
9000cc42:	f000 f821 	bl	9000cc88 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
9000cc46:	6823      	ldr	r3, [r4, #0]
9000cc48:	e78b      	b.n	9000cb62 <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000cc4a:	f46f 7280 	mvn.w	r2, #256	; 0x100
      HAL_TIMEx_Break2Callback(htim);
9000cc4e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000cc50:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
9000cc52:	f000 f81b 	bl	9000cc8c <HAL_TIMEx_Break2Callback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
9000cc56:	6823      	ldr	r3, [r4, #0]
9000cc58:	e789      	b.n	9000cb6e <HAL_TIM_IRQHandler+0x5a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
9000cc5a:	f06f 0240 	mvn.w	r2, #64	; 0x40
      HAL_TIM_TriggerCallback(htim);
9000cc5e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
9000cc60:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
9000cc62:	f7ff ff55 	bl	9000cb10 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
9000cc66:	6823      	ldr	r3, [r4, #0]
9000cc68:	e787      	b.n	9000cb7a <HAL_TIM_IRQHandler+0x66>
          HAL_TIM_IC_CaptureCallback(htim);
9000cc6a:	f7ff ff4d 	bl	9000cb08 <HAL_TIM_IC_CaptureCallback>
9000cc6e:	e7d0      	b.n	9000cc12 <HAL_TIM_IRQHandler+0xfe>
        HAL_TIM_IC_CaptureCallback(htim);
9000cc70:	f7ff ff4a 	bl	9000cb08 <HAL_TIM_IC_CaptureCallback>
9000cc74:	e7bc      	b.n	9000cbf0 <HAL_TIM_IRQHandler+0xdc>
        HAL_TIM_IC_CaptureCallback(htim);
9000cc76:	f7ff ff47 	bl	9000cb08 <HAL_TIM_IC_CaptureCallback>
9000cc7a:	e7a6      	b.n	9000cbca <HAL_TIM_IRQHandler+0xb6>
        HAL_TIM_IC_CaptureCallback(htim);
9000cc7c:	f7ff ff44 	bl	9000cb08 <HAL_TIM_IC_CaptureCallback>
9000cc80:	e791      	b.n	9000cba6 <HAL_TIM_IRQHandler+0x92>
9000cc82:	bf00      	nop

9000cc84 <HAL_TIMEx_CommutCallback>:
9000cc84:	4770      	bx	lr
9000cc86:	bf00      	nop

9000cc88 <HAL_TIMEx_BreakCallback>:
9000cc88:	4770      	bx	lr
9000cc8a:	bf00      	nop

9000cc8c <HAL_TIMEx_Break2Callback>:
9000cc8c:	4770      	bx	lr
9000cc8e:	bf00      	nop

9000cc90 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000cc90:	680b      	ldr	r3, [r1, #0]
{
9000cc92:	b410      	push	{r4}
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000cc94:	b9d3      	cbnz	r3, 9000cccc <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000cc96:	6804      	ldr	r4, [r0, #0]
9000cc98:	f5a3 4300 	sub.w	r3, r3, #32768	; 0x8000
9000cc9c:	684a      	ldr	r2, [r1, #4]
9000cc9e:	4023      	ands	r3, r4
9000cca0:	4313      	orrs	r3, r2
9000cca2:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
9000cca6:	4323      	orrs	r3, r4
9000cca8:	4313      	orrs	r3, r2
9000ccaa:	e9d1 4204 	ldrd	r4, r2, [r1, #16]
9000ccae:	4323      	orrs	r3, r4
9000ccb0:	4313      	orrs	r3, r2
9000ccb2:	e9d1 4206 	ldrd	r4, r2, [r1, #24]
9000ccb6:	4323      	orrs	r3, r4
9000ccb8:	4313      	orrs	r3, r2
9000ccba:	e9d1 4208 	ldrd	r4, r2, [r1, #32]
9000ccbe:	4323      	orrs	r3, r4
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
9000ccc0:	f85d 4b04 	ldr.w	r4, [sp], #4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000ccc4:	4313      	orrs	r3, r2
9000ccc6:	6003      	str	r3, [r0, #0]
}
9000ccc8:	2000      	movs	r0, #0
9000ccca:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000cccc:	6802      	ldr	r2, [r0, #0]
9000ccce:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
9000ccd2:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
9000ccd6:	4322      	orrs	r2, r4
9000ccd8:	6a4c      	ldr	r4, [r1, #36]	; 0x24
9000ccda:	431a      	orrs	r2, r3
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000ccdc:	4b0a      	ldr	r3, [pc, #40]	; (9000cd08 <FMC_SDRAM_Init+0x78>)
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000ccde:	4322      	orrs	r2, r4
9000cce0:	6002      	str	r2, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000cce2:	6842      	ldr	r2, [r0, #4]
9000cce4:	4013      	ands	r3, r2
9000cce6:	e9d1 4201 	ldrd	r4, r2, [r1, #4]
9000ccea:	4323      	orrs	r3, r4
9000ccec:	4313      	orrs	r3, r2
9000ccee:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
9000ccf2:	4323      	orrs	r3, r4
9000ccf4:	4313      	orrs	r3, r2
9000ccf6:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
9000ccfa:	4323      	orrs	r3, r4
}
9000ccfc:	f85d 4b04 	ldr.w	r4, [sp], #4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000cd00:	4313      	orrs	r3, r2
9000cd02:	6043      	str	r3, [r0, #4]
}
9000cd04:	2000      	movs	r0, #0
9000cd06:	4770      	bx	lr
9000cd08:	ffff8000 	.word	0xffff8000

9000cd0c <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
9000cd0c:	b430      	push	{r4, r5}
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
9000cd0e:	bb0a      	cbnz	r2, 9000cd54 <FMC_SDRAM_Timing_Init+0x48>
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000cd10:	6883      	ldr	r3, [r0, #8]
9000cd12:	e9d1 2400 	ldrd	r2, r4, [r1]
9000cd16:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
9000cd1a:	3c01      	subs	r4, #1
9000cd1c:	3a01      	subs	r2, #1
9000cd1e:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
9000cd22:	4313      	orrs	r3, r2
9000cd24:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
9000cd28:	3c01      	subs	r4, #1
9000cd2a:	3a01      	subs	r2, #1
9000cd2c:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
9000cd30:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
9000cd34:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000cd38:	698a      	ldr	r2, [r1, #24]
9000cd3a:	3d01      	subs	r5, #1
9000cd3c:	1e61      	subs	r1, r4, #1
9000cd3e:	3a01      	subs	r2, #1
9000cd40:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
9000cd44:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
9000cd48:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
9000cd4c:	bc30      	pop	{r4, r5}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000cd4e:	6083      	str	r3, [r0, #8]
}
9000cd50:	2000      	movs	r0, #0
9000cd52:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000cd54:	6885      	ldr	r5, [r0, #8]
9000cd56:	68ca      	ldr	r2, [r1, #12]
9000cd58:	4b12      	ldr	r3, [pc, #72]	; (9000cda4 <FMC_SDRAM_Timing_Init+0x98>)
9000cd5a:	1e54      	subs	r4, r2, #1
9000cd5c:	694a      	ldr	r2, [r1, #20]
9000cd5e:	402b      	ands	r3, r5
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000cd60:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000cd62:	3a01      	subs	r2, #1
9000cd64:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000cd68:	f105 3cff 	add.w	ip, r5, #4294967295
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000cd6c:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000cd70:	e9d1 2400 	ldrd	r2, r4, [r1]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000cd74:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000cd76:	68c3      	ldr	r3, [r0, #12]
9000cd78:	3c01      	subs	r4, #1
9000cd7a:	3a01      	subs	r2, #1
9000cd7c:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
9000cd80:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
9000cd84:	690c      	ldr	r4, [r1, #16]
9000cd86:	4313      	orrs	r3, r2
9000cd88:	698a      	ldr	r2, [r1, #24]
9000cd8a:	1e61      	subs	r1, r4, #1
9000cd8c:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000cd90:	3a01      	subs	r2, #1
9000cd92:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000cd96:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
}
9000cd9a:	bc30      	pop	{r4, r5}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000cd9c:	60c3      	str	r3, [r0, #12]
}
9000cd9e:	2000      	movs	r0, #0
9000cda0:	4770      	bx	lr
9000cda2:	bf00      	nop
9000cda4:	ff0f0fff 	.word	0xff0f0fff

9000cda8 <FMC_SDRAM_DeInit>:
  * @brief  DeInitializes the FMC_SDRAM peripheral
  * @param  Device Pointer to SDRAM device instance
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
9000cda8:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
  Device->SDTR[Bank] = 0x0FFFFFFFU;
  Device->SDCMR      = 0x00000000U;
9000cdaa:	2200      	movs	r2, #0
{
9000cdac:	4603      	mov	r3, r0
  Device->SDCR[Bank] = 0x000002D0U;
9000cdae:	f44f 7534 	mov.w	r5, #720	; 0x2d0
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000cdb2:	f06f 4470 	mvn.w	r4, #4026531840	; 0xf0000000
9000cdb6:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
  Device->SDCR[Bank] = 0x000002D0U;
9000cdba:	f840 5021 	str.w	r5, [r0, r1, lsl #2]
  Device->SDRTR      = 0x00000000U;
  Device->SDSR       = 0x00000000U;

  return HAL_OK;
}
9000cdbe:	4610      	mov	r0, r2
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000cdc0:	f8cc 4008 	str.w	r4, [ip, #8]
  Device->SDCMR      = 0x00000000U;
9000cdc4:	611a      	str	r2, [r3, #16]
  Device->SDRTR      = 0x00000000U;
9000cdc6:	615a      	str	r2, [r3, #20]
  Device->SDSR       = 0x00000000U;
9000cdc8:	619a      	str	r2, [r3, #24]
}
9000cdca:	bc30      	pop	{r4, r5}
9000cdcc:	4770      	bx	lr
9000cdce:	bf00      	nop

9000cdd0 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
9000cdd0:	b410      	push	{r4}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000cdd2:	e9d1 3400 	ldrd	r3, r4, [r1]
{
9000cdd6:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000cdd8:	6900      	ldr	r0, [r0, #16]
9000cdda:	4323      	orrs	r3, r4
9000cddc:	e9d1 1402 	ldrd	r1, r4, [r1, #8]
9000cde0:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
9000cde4:	4c05      	ldr	r4, [pc, #20]	; (9000cdfc <FMC_SDRAM_SendCommand+0x2c>)
9000cde6:	3901      	subs	r1, #1
9000cde8:	4004      	ands	r4, r0
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
9000cdea:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000cdec:	4323      	orrs	r3, r4
}
9000cdee:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000cdf2:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
9000cdf6:	6113      	str	r3, [r2, #16]
}
9000cdf8:	4770      	bx	lr
9000cdfa:	bf00      	nop
9000cdfc:	ffc00000 	.word	0xffc00000

9000ce00 <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
9000ce00:	4602      	mov	r2, r0
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000ce02:	4b05      	ldr	r3, [pc, #20]	; (9000ce18 <FMC_SDRAM_ProgramRefreshRate+0x18>)

  return HAL_OK;
}
9000ce04:	2000      	movs	r0, #0
{
9000ce06:	b410      	push	{r4}
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000ce08:	6954      	ldr	r4, [r2, #20]
9000ce0a:	4023      	ands	r3, r4
}
9000ce0c:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000ce10:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
9000ce14:	6151      	str	r1, [r2, #20]
}
9000ce16:	4770      	bx	lr
9000ce18:	ffffc001 	.word	0xffffc001

9000ce1c <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
9000ce1c:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
9000ce1e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000ce22:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
9000ce24:	f002 fd04 	bl	9000f830 <xTaskGetSchedulerState>
9000ce28:	2801      	cmp	r0, #1
9000ce2a:	d100      	bne.n	9000ce2e <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
9000ce2c:	bd08      	pop	{r3, pc}
9000ce2e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
9000ce32:	f000 bcdf 	b.w	9000d7f4 <xPortSysTickHandler>
9000ce36:	bf00      	nop

9000ce38 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
9000ce38:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000ce3c:	b92b      	cbnz	r3, 9000ce4a <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
9000ce3e:	4b06      	ldr	r3, [pc, #24]	; (9000ce58 <osKernelInitialize+0x20>)
9000ce40:	6818      	ldr	r0, [r3, #0]
9000ce42:	b928      	cbnz	r0, 9000ce50 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
9000ce44:	2201      	movs	r2, #1
9000ce46:	601a      	str	r2, [r3, #0]
      stat = osOK;
9000ce48:	4770      	bx	lr
    stat = osErrorISR;
9000ce4a:	f06f 0005 	mvn.w	r0, #5
9000ce4e:	4770      	bx	lr
    } else {
      stat = osError;
9000ce50:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
9000ce54:	4770      	bx	lr
9000ce56:	bf00      	nop
9000ce58:	2400a40c 	.word	0x2400a40c

9000ce5c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
9000ce5c:	b510      	push	{r4, lr}
9000ce5e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000ce62:	b974      	cbnz	r4, 9000ce82 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
9000ce64:	4b08      	ldr	r3, [pc, #32]	; (9000ce88 <osKernelStart+0x2c>)
9000ce66:	681a      	ldr	r2, [r3, #0]
9000ce68:	2a01      	cmp	r2, #1
9000ce6a:	d107      	bne.n	9000ce7c <osKernelStart+0x20>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000ce6c:	4907      	ldr	r1, [pc, #28]	; (9000ce8c <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
9000ce6e:	2202      	movs	r2, #2
9000ce70:	77cc      	strb	r4, [r1, #31]
9000ce72:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
9000ce74:	f002 fa6a 	bl	9000f34c <vTaskStartScheduler>
      stat = osOK;
9000ce78:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
9000ce7a:	bd10      	pop	{r4, pc}
      stat = osError;
9000ce7c:	f04f 30ff 	mov.w	r0, #4294967295
}
9000ce80:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000ce82:	f06f 0005 	mvn.w	r0, #5
}
9000ce86:	bd10      	pop	{r4, pc}
9000ce88:	2400a40c 	.word	0x2400a40c
9000ce8c:	e000ed00 	.word	0xe000ed00

9000ce90 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000ce90:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
9000ce92:	2500      	movs	r5, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000ce94:	b087      	sub	sp, #28
9000ce96:	4614      	mov	r4, r2
  hTask = NULL;
9000ce98:	9505      	str	r5, [sp, #20]
9000ce9a:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
9000ce9e:	bb5a      	cbnz	r2, 9000cef8 <osThreadNew+0x68>
9000cea0:	4606      	mov	r6, r0
9000cea2:	b348      	cbz	r0, 9000cef8 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
9000cea4:	b1e4      	cbz	r4, 9000cee0 <osThreadNew+0x50>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
9000cea6:	69a7      	ldr	r7, [r4, #24]
9000cea8:	bb4f      	cbnz	r7, 9000cefe <osThreadNew+0x6e>
9000ceaa:	2718      	movs	r7, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000ceac:	6863      	ldr	r3, [r4, #4]
9000ceae:	07db      	lsls	r3, r3, #31
9000ceb0:	d422      	bmi.n	9000cef8 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
9000ceb2:	6963      	ldr	r3, [r4, #20]
9000ceb4:	b33b      	cbz	r3, 9000cf06 <osThreadNew+0x76>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
9000ceb6:	ea4f 0c93 	mov.w	ip, r3, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000ceba:	68a0      	ldr	r0, [r4, #8]
      if (attr->name != NULL) {
9000cebc:	6825      	ldr	r5, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000cebe:	b338      	cbz	r0, 9000cf10 <osThreadNew+0x80>
9000cec0:	68e2      	ldr	r2, [r4, #12]
9000cec2:	2a5f      	cmp	r2, #95	; 0x5f
9000cec4:	d918      	bls.n	9000cef8 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
9000cec6:	6924      	ldr	r4, [r4, #16]
9000cec8:	b1b3      	cbz	r3, 9000cef8 <osThreadNew+0x68>
9000ceca:	b1ac      	cbz	r4, 9000cef8 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
9000cecc:	460b      	mov	r3, r1
9000cece:	4662      	mov	r2, ip
9000ced0:	4629      	mov	r1, r5
9000ced2:	9700      	str	r7, [sp, #0]
9000ced4:	e9cd 4001 	strd	r4, r0, [sp, #4]
9000ced8:	4630      	mov	r0, r6
9000ceda:	f002 f89b 	bl	9000f014 <xTaskCreateStatic>
9000cede:	e00c      	b.n	9000cefa <osThreadNew+0x6a>
9000cee0:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
9000cee2:	2718      	movs	r7, #24
      #endif
    }
    else {
      if (mem == 0) {
        #if (configSUPPORT_DYNAMIC_ALLOCATION == 1)
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000cee4:	460b      	mov	r3, r1
9000cee6:	4621      	mov	r1, r4
9000cee8:	ac05      	add	r4, sp, #20
9000ceea:	4630      	mov	r0, r6
9000ceec:	9700      	str	r7, [sp, #0]
9000ceee:	9401      	str	r4, [sp, #4]
9000cef0:	f002 f93a 	bl	9000f168 <xTaskCreate>
9000cef4:	2801      	cmp	r0, #1
9000cef6:	d009      	beq.n	9000cf0c <osThreadNew+0x7c>
        return (NULL);
9000cef8:	2000      	movs	r0, #0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
9000cefa:	b007      	add	sp, #28
9000cefc:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000cefe:	1e7a      	subs	r2, r7, #1
9000cf00:	2a37      	cmp	r2, #55	; 0x37
9000cf02:	d9d3      	bls.n	9000ceac <osThreadNew+0x1c>
9000cf04:	e7f8      	b.n	9000cef8 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
9000cf06:	f04f 0c80 	mov.w	ip, #128	; 0x80
9000cf0a:	e7d6      	b.n	9000ceba <osThreadNew+0x2a>
  return ((osThreadId_t)hTask);
9000cf0c:	9805      	ldr	r0, [sp, #20]
9000cf0e:	e7f4      	b.n	9000cefa <osThreadNew+0x6a>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
9000cf10:	68e3      	ldr	r3, [r4, #12]
9000cf12:	2b00      	cmp	r3, #0
9000cf14:	d1f1      	bne.n	9000cefa <osThreadNew+0x6a>
9000cf16:	6923      	ldr	r3, [r4, #16]
9000cf18:	2b00      	cmp	r3, #0
9000cf1a:	d1ee      	bne.n	9000cefa <osThreadNew+0x6a>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000cf1c:	fa1f f28c 	uxth.w	r2, ip
9000cf20:	462c      	mov	r4, r5
9000cf22:	e7df      	b.n	9000cee4 <osThreadNew+0x54>

9000cf24 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
9000cf24:	b510      	push	{r4, lr}
9000cf26:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000cf2a:	b92c      	cbnz	r4, 9000cf38 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
9000cf2c:	b900      	cbnz	r0, 9000cf30 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
9000cf2e:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
9000cf30:	f002 f9b6 	bl	9000f2a0 <vTaskDelay>
    stat = osOK;
9000cf34:	4620      	mov	r0, r4
}
9000cf36:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000cf38:	f06f 0005 	mvn.w	r0, #5
}
9000cf3c:	bd10      	pop	{r4, pc}
9000cf3e:	bf00      	nop

9000cf40 <osMutexNew>:
}

/*---------------------------------------------------------------------------*/
#if (configUSE_OS2_MUTEX == 1)

osMutexId_t osMutexNew (const osMutexAttr_t *attr) {
9000cf40:	b570      	push	{r4, r5, r6, lr}
9000cf42:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hMutex = NULL;

  if (!IS_IRQ()) {
9000cf46:	b9db      	cbnz	r3, 9000cf80 <osMutexNew+0x40>
    if (attr != NULL) {
9000cf48:	4604      	mov	r4, r0
9000cf4a:	b1e0      	cbz	r0, 9000cf86 <osMutexNew+0x46>
      type = attr->attr_bits;
9000cf4c:	6846      	ldr	r6, [r0, #4]
      rmtx = 1U;
    } else {
      rmtx = 0U;
    }

    if ((type & osMutexRobust) != osMutexRobust) {
9000cf4e:	0733      	lsls	r3, r6, #28
9000cf50:	d416      	bmi.n	9000cf80 <osMutexNew+0x40>
      mem = -1;

      if (attr != NULL) {
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000cf52:	6881      	ldr	r1, [r0, #8]
    if ((type & osMutexRecursive) == osMutexRecursive) {
9000cf54:	f006 0601 	and.w	r6, r6, #1
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000cf58:	68c3      	ldr	r3, [r0, #12]
9000cf5a:	b181      	cbz	r1, 9000cf7e <osMutexNew+0x3e>
9000cf5c:	2b4f      	cmp	r3, #79	; 0x4f
9000cf5e:	d90f      	bls.n	9000cf80 <osMutexNew+0x40>
        mem = 0;
      }

      if (mem == 1) {
        #if (configSUPPORT_STATIC_ALLOCATION == 1)
          if (rmtx != 0U) {
9000cf60:	b31e      	cbz	r6, 9000cfaa <osMutexNew+0x6a>
            #if (configUSE_RECURSIVE_MUTEXES == 1)
            hMutex = xSemaphoreCreateRecursiveMutexStatic (attr->cb_mem);
9000cf62:	2004      	movs	r0, #4
9000cf64:	f001 f858 	bl	9000e018 <xQueueCreateMutexStatic>
9000cf68:	4605      	mov	r5, r0
          #endif
        }
      }

      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hMutex != NULL) {
9000cf6a:	b14d      	cbz	r5, 9000cf80 <osMutexNew+0x40>
        if (attr != NULL) {
          name = attr->name;
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hMutex, name);
9000cf6c:	6821      	ldr	r1, [r4, #0]
9000cf6e:	4628      	mov	r0, r5
9000cf70:	f001 fdac 	bl	9000eacc <vQueueAddToRegistry>
      }
      #endif

      if ((hMutex != NULL) && (rmtx != 0U)) {
9000cf74:	b12e      	cbz	r6, 9000cf82 <osMutexNew+0x42>
        hMutex = (SemaphoreHandle_t)((uint32_t)hMutex | 1U);
9000cf76:	f045 0501 	orr.w	r5, r5, #1
      }
    }
  }

  return ((osMutexId_t)hMutex);
}
9000cf7a:	4628      	mov	r0, r5
9000cf7c:	bd70      	pop	{r4, r5, r6, pc}
          if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000cf7e:	b163      	cbz	r3, 9000cf9a <osMutexNew+0x5a>
  hMutex = NULL;
9000cf80:	2500      	movs	r5, #0
}
9000cf82:	4628      	mov	r0, r5
9000cf84:	bd70      	pop	{r4, r5, r6, pc}
              hMutex = xSemaphoreCreateMutex ();
9000cf86:	2001      	movs	r0, #1
9000cf88:	f001 f8b6 	bl	9000e0f8 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000cf8c:	4605      	mov	r5, r0
9000cf8e:	2800      	cmp	r0, #0
9000cf90:	d0f6      	beq.n	9000cf80 <osMutexNew+0x40>
        vQueueAddToRegistry (hMutex, name);
9000cf92:	4621      	mov	r1, r4
9000cf94:	f001 fd9a 	bl	9000eacc <vQueueAddToRegistry>
      if ((hMutex != NULL) && (rmtx != 0U)) {
9000cf98:	e7f3      	b.n	9000cf82 <osMutexNew+0x42>
            if (rmtx != 0U) {
9000cf9a:	b15e      	cbz	r6, 9000cfb4 <osMutexNew+0x74>
              hMutex = xSemaphoreCreateRecursiveMutex ();
9000cf9c:	2004      	movs	r0, #4
9000cf9e:	f001 f8ab 	bl	9000e0f8 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000cfa2:	4605      	mov	r5, r0
9000cfa4:	2800      	cmp	r0, #0
9000cfa6:	d1e1      	bne.n	9000cf6c <osMutexNew+0x2c>
9000cfa8:	e7ea      	b.n	9000cf80 <osMutexNew+0x40>
            hMutex = xSemaphoreCreateMutexStatic (attr->cb_mem);
9000cfaa:	2001      	movs	r0, #1
9000cfac:	f001 f834 	bl	9000e018 <xQueueCreateMutexStatic>
9000cfb0:	4605      	mov	r5, r0
9000cfb2:	e7da      	b.n	9000cf6a <osMutexNew+0x2a>
              hMutex = xSemaphoreCreateMutex ();
9000cfb4:	2001      	movs	r0, #1
9000cfb6:	f001 f89f 	bl	9000e0f8 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000cfba:	4605      	mov	r5, r0
9000cfbc:	e7d5      	b.n	9000cf6a <osMutexNew+0x2a>
9000cfbe:	bf00      	nop

9000cfc0 <osMutexAcquire>:
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
  SemaphoreHandle_t hMutex;
  osStatus_t stat;
  uint32_t rmtx;

  hMutex = (SemaphoreHandle_t)((uint32_t)mutex_id & ~1U);
9000cfc0:	f020 0201 	bic.w	r2, r0, #1

  rmtx = (uint32_t)mutex_id & 1U;
9000cfc4:	f000 0301 	and.w	r3, r0, #1
9000cfc8:	f3ef 8005 	mrs	r0, IPSR

  stat = osOK;

  if (IS_IRQ()) {
9000cfcc:	b9a8      	cbnz	r0, 9000cffa <osMutexAcquire+0x3a>
    stat = osErrorISR;
  }
  else if (hMutex == NULL) {
9000cfce:	b1ba      	cbz	r2, 9000d000 <osMutexAcquire+0x40>
    stat = osErrorParameter;
  }
  else {
    if (rmtx != 0U) {
      #if (configUSE_RECURSIVE_MUTEXES == 1)
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
9000cfd0:	4610      	mov	r0, r2
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
9000cfd2:	b510      	push	{r4, lr}
9000cfd4:	460c      	mov	r4, r1
    if (rmtx != 0U) {
9000cfd6:	b953      	cbnz	r3, 9000cfee <osMutexAcquire+0x2e>
        }
      }
      #endif
    }
    else {
      if (xSemaphoreTake (hMutex, timeout) != pdPASS) {
9000cfd8:	f001 fb06 	bl	9000e5e8 <xQueueSemaphoreTake>
9000cfdc:	2801      	cmp	r0, #1
9000cfde:	d00a      	beq.n	9000cff6 <osMutexAcquire+0x36>
          stat = osErrorResource;
9000cfe0:	2c00      	cmp	r4, #0
9000cfe2:	bf14      	ite	ne
9000cfe4:	f06f 0001 	mvnne.w	r0, #1
9000cfe8:	f06f 0002 	mvneq.w	r0, #2
      }
    }
  }

  return (stat);
}
9000cfec:	bd10      	pop	{r4, pc}
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
9000cfee:	f001 fc83 	bl	9000e8f8 <xQueueTakeMutexRecursive>
9000cff2:	2801      	cmp	r0, #1
9000cff4:	d1f4      	bne.n	9000cfe0 <osMutexAcquire+0x20>
  stat = osOK;
9000cff6:	2000      	movs	r0, #0
}
9000cff8:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000cffa:	f06f 0005 	mvn.w	r0, #5
9000cffe:	4770      	bx	lr
    stat = osErrorParameter;
9000d000:	f06f 0003 	mvn.w	r0, #3
}
9000d004:	4770      	bx	lr
9000d006:	bf00      	nop

9000d008 <osMutexRelease>:
9000d008:	f3ef 8205 	mrs	r2, IPSR

  rmtx = (uint32_t)mutex_id & 1U;

  stat = osOK;

  if (IS_IRQ()) {
9000d00c:	b9ba      	cbnz	r2, 9000d03e <osMutexRelease+0x36>
osStatus_t osMutexRelease (osMutexId_t mutex_id) {
9000d00e:	b510      	push	{r4, lr}
9000d010:	f020 0401 	bic.w	r4, r0, #1
    stat = osErrorISR;
  }
  else if (hMutex == NULL) {
9000d014:	b1b4      	cbz	r4, 9000d044 <osMutexRelease+0x3c>
    stat = osErrorParameter;
  }
  else {
    if (rmtx != 0U) {
9000d016:	f000 0301 	and.w	r3, r0, #1
9000d01a:	b943      	cbnz	r3, 9000d02e <osMutexRelease+0x26>
        stat = osErrorResource;
      }
      #endif
    }
    else {
      if (xSemaphoreGive (hMutex) != pdPASS) {
9000d01c:	461a      	mov	r2, r3
9000d01e:	4619      	mov	r1, r3
9000d020:	4620      	mov	r0, r4
9000d022:	f000 fe77 	bl	9000dd14 <xQueueGenericSend>
9000d026:	2801      	cmp	r0, #1
9000d028:	d106      	bne.n	9000d038 <osMutexRelease+0x30>
  stat = osOK;
9000d02a:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000d02c:	bd10      	pop	{r4, pc}
      if (xSemaphoreGiveRecursive (hMutex) != pdPASS) {
9000d02e:	4620      	mov	r0, r4
9000d030:	f001 f842 	bl	9000e0b8 <xQueueGiveMutexRecursive>
9000d034:	2801      	cmp	r0, #1
9000d036:	d0f8      	beq.n	9000d02a <osMutexRelease+0x22>
        stat = osErrorResource;
9000d038:	f06f 0002 	mvn.w	r0, #2
}
9000d03c:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000d03e:	f06f 0005 	mvn.w	r0, #5
}
9000d042:	4770      	bx	lr
    stat = osErrorParameter;
9000d044:	f06f 0003 	mvn.w	r0, #3
}
9000d048:	bd10      	pop	{r4, pc}
9000d04a:	bf00      	nop

9000d04c <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
9000d04c:	b5f0      	push	{r4, r5, r6, r7, lr}
9000d04e:	b083      	sub	sp, #12
9000d050:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
9000d054:	b98e      	cbnz	r6, 9000d07a <osSemaphoreNew+0x2e>
9000d056:	4605      	mov	r5, r0
9000d058:	b178      	cbz	r0, 9000d07a <osSemaphoreNew+0x2e>
9000d05a:	4288      	cmp	r0, r1
9000d05c:	460f      	mov	r7, r1
9000d05e:	d30c      	bcc.n	9000d07a <osSemaphoreNew+0x2e>
    mem = -1;

    if (attr != NULL) {
9000d060:	4614      	mov	r4, r2
9000d062:	b182      	cbz	r2, 9000d086 <osSemaphoreNew+0x3a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000d064:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
9000d068:	b15a      	cbz	r2, 9000d082 <osSemaphoreNew+0x36>
9000d06a:	2b4f      	cmp	r3, #79	; 0x4f
9000d06c:	d905      	bls.n	9000d07a <osSemaphoreNew+0x2e>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
9000d06e:	2801      	cmp	r0, #1
9000d070:	d032      	beq.n	9000d0d8 <osSemaphoreNew+0x8c>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
9000d072:	f000 fda7 	bl	9000dbc4 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
9000d076:	4605      	mov	r5, r0
9000d078:	b978      	cbnz	r0, 9000d09a <osSemaphoreNew+0x4e>
  hSemaphore = NULL;
9000d07a:	2500      	movs	r5, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
9000d07c:	4628      	mov	r0, r5
9000d07e:	b003      	add	sp, #12
9000d080:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000d082:	2b00      	cmp	r3, #0
9000d084:	d1f9      	bne.n	9000d07a <osSemaphoreNew+0x2e>
      if (max_count == 1U) {
9000d086:	2d01      	cmp	r5, #1
9000d088:	d00f      	beq.n	9000d0aa <osSemaphoreNew+0x5e>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
9000d08a:	4628      	mov	r0, r5
9000d08c:	4639      	mov	r1, r7
9000d08e:	f000 fdfb 	bl	9000dc88 <xQueueCreateCountingSemaphore>
9000d092:	4605      	mov	r5, r0
      if (hSemaphore != NULL) {
9000d094:	2d00      	cmp	r5, #0
9000d096:	d0f0      	beq.n	9000d07a <osSemaphoreNew+0x2e>
        if (attr != NULL) {
9000d098:	b104      	cbz	r4, 9000d09c <osSemaphoreNew+0x50>
          name = attr->name;
9000d09a:	6824      	ldr	r4, [r4, #0]
        vQueueAddToRegistry (hSemaphore, name);
9000d09c:	4628      	mov	r0, r5
9000d09e:	4621      	mov	r1, r4
9000d0a0:	f001 fd14 	bl	9000eacc <vQueueAddToRegistry>
}
9000d0a4:	4628      	mov	r0, r5
9000d0a6:	b003      	add	sp, #12
9000d0a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
            hSemaphore = xSemaphoreCreateBinary();
9000d0aa:	4628      	mov	r0, r5
9000d0ac:	2203      	movs	r2, #3
9000d0ae:	2100      	movs	r1, #0
9000d0b0:	f000 fd46 	bl	9000db40 <xQueueGenericCreate>
9000d0b4:	4605      	mov	r5, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000d0b6:	2d00      	cmp	r5, #0
9000d0b8:	d0df      	beq.n	9000d07a <osSemaphoreNew+0x2e>
9000d0ba:	2f00      	cmp	r7, #0
9000d0bc:	d0ea      	beq.n	9000d094 <osSemaphoreNew+0x48>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000d0be:	2300      	movs	r3, #0
9000d0c0:	4628      	mov	r0, r5
9000d0c2:	461a      	mov	r2, r3
9000d0c4:	4619      	mov	r1, r3
9000d0c6:	f000 fe25 	bl	9000dd14 <xQueueGenericSend>
9000d0ca:	2801      	cmp	r0, #1
9000d0cc:	d0e4      	beq.n	9000d098 <osSemaphoreNew+0x4c>
            vSemaphoreDelete (hSemaphore);
9000d0ce:	4628      	mov	r0, r5
            hSemaphore = NULL;
9000d0d0:	2500      	movs	r5, #0
            vSemaphoreDelete (hSemaphore);
9000d0d2:	f001 fcb5 	bl	9000ea40 <vQueueDelete>
      if (hSemaphore != NULL) {
9000d0d6:	e7d1      	b.n	9000d07c <osSemaphoreNew+0x30>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
9000d0d8:	4613      	mov	r3, r2
9000d0da:	2203      	movs	r2, #3
9000d0dc:	4631      	mov	r1, r6
9000d0de:	9200      	str	r2, [sp, #0]
9000d0e0:	4632      	mov	r2, r6
9000d0e2:	f000 fcc1 	bl	9000da68 <xQueueGenericCreateStatic>
9000d0e6:	4605      	mov	r5, r0
9000d0e8:	e7e5      	b.n	9000d0b6 <osSemaphoreNew+0x6a>
9000d0ea:	bf00      	nop

9000d0ec <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000d0ec:	b370      	cbz	r0, 9000d14c <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
9000d0ee:	b510      	push	{r4, lr}
9000d0f0:	460c      	mov	r4, r1
9000d0f2:	b082      	sub	sp, #8
9000d0f4:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000d0f8:	b1c3      	cbz	r3, 9000d12c <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
9000d0fa:	bb21      	cbnz	r1, 9000d146 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000d0fc:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000d0fe:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000d100:	f001 fc1a 	bl	9000e938 <xQueueReceiveFromISR>
9000d104:	2801      	cmp	r0, #1
9000d106:	d11a      	bne.n	9000d13e <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000d108:	9b01      	ldr	r3, [sp, #4]
9000d10a:	b913      	cbnz	r3, 9000d112 <osSemaphoreAcquire+0x26>
  stat = osOK;
9000d10c:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000d10e:	b002      	add	sp, #8
9000d110:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
9000d112:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000d116:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000d11a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000d11e:	f3bf 8f4f 	dsb	sy
9000d122:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000d126:	4620      	mov	r0, r4
}
9000d128:	b002      	add	sp, #8
9000d12a:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
9000d12c:	f001 fa5c 	bl	9000e5e8 <xQueueSemaphoreTake>
9000d130:	2801      	cmp	r0, #1
9000d132:	d0eb      	beq.n	9000d10c <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
9000d134:	b11c      	cbz	r4, 9000d13e <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
9000d136:	f06f 0001 	mvn.w	r0, #1
}
9000d13a:	b002      	add	sp, #8
9000d13c:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
9000d13e:	f06f 0002 	mvn.w	r0, #2
}
9000d142:	b002      	add	sp, #8
9000d144:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
9000d146:	f06f 0003 	mvn.w	r0, #3
9000d14a:	e7e0      	b.n	9000d10e <osSemaphoreAcquire+0x22>
9000d14c:	f06f 0003 	mvn.w	r0, #3
}
9000d150:	4770      	bx	lr
9000d152:	bf00      	nop

9000d154 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000d154:	b330      	cbz	r0, 9000d1a4 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
9000d156:	b510      	push	{r4, lr}
9000d158:	b082      	sub	sp, #8
9000d15a:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000d15e:	b1ab      	cbz	r3, 9000d18c <osSemaphoreRelease+0x38>
    yield = pdFALSE;
9000d160:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000d162:	a901      	add	r1, sp, #4
    yield = pdFALSE;
9000d164:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000d166:	f001 f869 	bl	9000e23c <xQueueGiveFromISR>
9000d16a:	2801      	cmp	r0, #1
9000d16c:	d117      	bne.n	9000d19e <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
9000d16e:	9b01      	ldr	r3, [sp, #4]
9000d170:	b193      	cbz	r3, 9000d198 <osSemaphoreRelease+0x44>
9000d172:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000d176:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000d17a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000d17e:	f3bf 8f4f 	dsb	sy
9000d182:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000d186:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
9000d188:	b002      	add	sp, #8
9000d18a:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000d18c:	461a      	mov	r2, r3
9000d18e:	4619      	mov	r1, r3
9000d190:	f000 fdc0 	bl	9000dd14 <xQueueGenericSend>
9000d194:	2801      	cmp	r0, #1
9000d196:	d102      	bne.n	9000d19e <osSemaphoreRelease+0x4a>
  stat = osOK;
9000d198:	2000      	movs	r0, #0
}
9000d19a:	b002      	add	sp, #8
9000d19c:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
9000d19e:	f06f 0002 	mvn.w	r0, #2
9000d1a2:	e7fa      	b.n	9000d19a <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
9000d1a4:	f06f 0003 	mvn.w	r0, #3
}
9000d1a8:	4770      	bx	lr
9000d1aa:	bf00      	nop

9000d1ac <osSemaphoreGetCount>:

uint32_t osSemaphoreGetCount (osSemaphoreId_t semaphore_id) {
  SemaphoreHandle_t hSemaphore = (SemaphoreHandle_t)semaphore_id;
  uint32_t count;

  if (hSemaphore == NULL) {
9000d1ac:	b130      	cbz	r0, 9000d1bc <osSemaphoreGetCount+0x10>
9000d1ae:	f3ef 8305 	mrs	r3, IPSR
    count = 0U;
  }
  else if (IS_IRQ()) {
9000d1b2:	b10b      	cbz	r3, 9000d1b8 <osSemaphoreGetCount+0xc>
    count = uxQueueMessagesWaitingFromISR (hSemaphore);
9000d1b4:	f001 bc36 	b.w	9000ea24 <uxQueueMessagesWaitingFromISR>
  } else {
    count = (uint32_t)uxSemaphoreGetCount (hSemaphore);
9000d1b8:	f001 bc1e 	b.w	9000e9f8 <uxQueueMessagesWaiting>
  }

  return (count);
}
9000d1bc:	4770      	bx	lr
9000d1be:	bf00      	nop

9000d1c0 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
9000d1c0:	b5f0      	push	{r4, r5, r6, r7, lr}
9000d1c2:	b083      	sub	sp, #12
9000d1c4:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
9000d1c8:	b987      	cbnz	r7, 9000d1ec <osMessageQueueNew+0x2c>
9000d1ca:	4605      	mov	r5, r0
9000d1cc:	b170      	cbz	r0, 9000d1ec <osMessageQueueNew+0x2c>
9000d1ce:	b169      	cbz	r1, 9000d1ec <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
9000d1d0:	4614      	mov	r4, r2
9000d1d2:	b17a      	cbz	r2, 9000d1f4 <osMessageQueueNew+0x34>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000d1d4:	6893      	ldr	r3, [r2, #8]
9000d1d6:	b1cb      	cbz	r3, 9000d20c <osMessageQueueNew+0x4c>
9000d1d8:	68d2      	ldr	r2, [r2, #12]
9000d1da:	2a4f      	cmp	r2, #79	; 0x4f
9000d1dc:	d906      	bls.n	9000d1ec <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000d1de:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000d1e0:	b122      	cbz	r2, 9000d1ec <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000d1e2:	fb01 f505 	mul.w	r5, r1, r5
9000d1e6:	6966      	ldr	r6, [r4, #20]
9000d1e8:	42ae      	cmp	r6, r5
9000d1ea:	d21f      	bcs.n	9000d22c <osMessageQueueNew+0x6c>
  hQueue = NULL;
9000d1ec:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
9000d1ee:	4628      	mov	r0, r5
9000d1f0:	b003      	add	sp, #12
9000d1f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
          hQueue = xQueueCreate (msg_count, msg_size);
9000d1f4:	f000 fca4 	bl	9000db40 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000d1f8:	4605      	mov	r5, r0
9000d1fa:	2800      	cmp	r0, #0
9000d1fc:	d0f6      	beq.n	9000d1ec <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
9000d1fe:	4628      	mov	r0, r5
9000d200:	4621      	mov	r1, r4
9000d202:	f001 fc63 	bl	9000eacc <vQueueAddToRegistry>
}
9000d206:	4628      	mov	r0, r5
9000d208:	b003      	add	sp, #12
9000d20a:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
9000d20c:	68d3      	ldr	r3, [r2, #12]
9000d20e:	2b00      	cmp	r3, #0
9000d210:	d1ec      	bne.n	9000d1ec <osMessageQueueNew+0x2c>
9000d212:	6913      	ldr	r3, [r2, #16]
9000d214:	2b00      	cmp	r3, #0
9000d216:	d1e9      	bne.n	9000d1ec <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
9000d218:	6952      	ldr	r2, [r2, #20]
9000d21a:	2a00      	cmp	r2, #0
9000d21c:	d1e6      	bne.n	9000d1ec <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
9000d21e:	f000 fc8f 	bl	9000db40 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000d222:	4605      	mov	r5, r0
9000d224:	2800      	cmp	r0, #0
9000d226:	d0e1      	beq.n	9000d1ec <osMessageQueueNew+0x2c>
        name = attr->name;
9000d228:	6824      	ldr	r4, [r4, #0]
9000d22a:	e7e8      	b.n	9000d1fe <osMessageQueueNew+0x3e>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
9000d22c:	9700      	str	r7, [sp, #0]
9000d22e:	f000 fc1b 	bl	9000da68 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
9000d232:	4605      	mov	r5, r0
9000d234:	2800      	cmp	r0, #0
9000d236:	d1f7      	bne.n	9000d228 <osMessageQueueNew+0x68>
9000d238:	e7d8      	b.n	9000d1ec <osMessageQueueNew+0x2c>
9000d23a:	bf00      	nop

9000d23c <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
9000d23c:	b530      	push	{r4, r5, lr}
9000d23e:	461c      	mov	r4, r3
9000d240:	b083      	sub	sp, #12
9000d242:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
9000d246:	b30b      	cbz	r3, 9000d28c <osMessageQueuePut+0x50>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000d248:	3c00      	subs	r4, #0
9000d24a:	bf18      	it	ne
9000d24c:	2401      	movne	r4, #1
9000d24e:	2900      	cmp	r1, #0
9000d250:	bf08      	it	eq
9000d252:	f044 0401 	orreq.w	r4, r4, #1
9000d256:	bb7c      	cbnz	r4, 9000d2b8 <osMessageQueuePut+0x7c>
9000d258:	fab0 f480 	clz	r4, r0
9000d25c:	0964      	lsrs	r4, r4, #5
9000d25e:	b358      	cbz	r0, 9000d2b8 <osMessageQueuePut+0x7c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000d260:	4623      	mov	r3, r4
9000d262:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000d264:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000d266:	f000 ff7f 	bl	9000e168 <xQueueGenericSendFromISR>
9000d26a:	2801      	cmp	r0, #1
9000d26c:	d120      	bne.n	9000d2b0 <osMessageQueuePut+0x74>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000d26e:	9b01      	ldr	r3, [sp, #4]
9000d270:	b1db      	cbz	r3, 9000d2aa <osMessageQueuePut+0x6e>
9000d272:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000d276:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000d27a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000d27e:	f3bf 8f4f 	dsb	sy
9000d282:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000d286:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
9000d288:	b003      	add	sp, #12
9000d28a:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000d28c:	b1a0      	cbz	r0, 9000d2b8 <osMessageQueuePut+0x7c>
9000d28e:	fab1 f381 	clz	r3, r1
9000d292:	095b      	lsrs	r3, r3, #5
9000d294:	b181      	cbz	r1, 9000d2b8 <osMessageQueuePut+0x7c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000d296:	4622      	mov	r2, r4
9000d298:	f000 fd3c 	bl	9000dd14 <xQueueGenericSend>
9000d29c:	2801      	cmp	r0, #1
9000d29e:	d004      	beq.n	9000d2aa <osMessageQueuePut+0x6e>
        if (timeout != 0U) {
9000d2a0:	b134      	cbz	r4, 9000d2b0 <osMessageQueuePut+0x74>
          stat = osErrorTimeout;
9000d2a2:	f06f 0001 	mvn.w	r0, #1
}
9000d2a6:	b003      	add	sp, #12
9000d2a8:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
9000d2aa:	2000      	movs	r0, #0
}
9000d2ac:	b003      	add	sp, #12
9000d2ae:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
9000d2b0:	f06f 0002 	mvn.w	r0, #2
}
9000d2b4:	b003      	add	sp, #12
9000d2b6:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
9000d2b8:	f06f 0003 	mvn.w	r0, #3
9000d2bc:	e7e4      	b.n	9000d288 <osMessageQueuePut+0x4c>
9000d2be:	bf00      	nop

9000d2c0 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
9000d2c0:	b530      	push	{r4, r5, lr}
9000d2c2:	461c      	mov	r4, r3
9000d2c4:	b083      	sub	sp, #12
9000d2c6:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
9000d2ca:	b303      	cbz	r3, 9000d30e <osMessageQueueGet+0x4e>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000d2cc:	3c00      	subs	r4, #0
9000d2ce:	bf18      	it	ne
9000d2d0:	2401      	movne	r4, #1
9000d2d2:	2900      	cmp	r1, #0
9000d2d4:	bf08      	it	eq
9000d2d6:	f044 0401 	orreq.w	r4, r4, #1
9000d2da:	bb5c      	cbnz	r4, 9000d334 <osMessageQueueGet+0x74>
9000d2dc:	fab0 f480 	clz	r4, r0
9000d2e0:	0964      	lsrs	r4, r4, #5
9000d2e2:	b338      	cbz	r0, 9000d334 <osMessageQueueGet+0x74>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000d2e4:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000d2e6:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000d2e8:	f001 fb26 	bl	9000e938 <xQueueReceiveFromISR>
9000d2ec:	2801      	cmp	r0, #1
9000d2ee:	d11d      	bne.n	9000d32c <osMessageQueueGet+0x6c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000d2f0:	9b01      	ldr	r3, [sp, #4]
9000d2f2:	b1c3      	cbz	r3, 9000d326 <osMessageQueueGet+0x66>
9000d2f4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000d2f8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000d2fc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000d300:	f3bf 8f4f 	dsb	sy
9000d304:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000d308:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
9000d30a:	b003      	add	sp, #12
9000d30c:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000d30e:	b188      	cbz	r0, 9000d334 <osMessageQueueGet+0x74>
9000d310:	b181      	cbz	r1, 9000d334 <osMessageQueueGet+0x74>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000d312:	4622      	mov	r2, r4
9000d314:	f000 ffea 	bl	9000e2ec <xQueueReceive>
9000d318:	2801      	cmp	r0, #1
9000d31a:	d004      	beq.n	9000d326 <osMessageQueueGet+0x66>
        if (timeout != 0U) {
9000d31c:	b134      	cbz	r4, 9000d32c <osMessageQueueGet+0x6c>
          stat = osErrorTimeout;
9000d31e:	f06f 0001 	mvn.w	r0, #1
}
9000d322:	b003      	add	sp, #12
9000d324:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
9000d326:	2000      	movs	r0, #0
}
9000d328:	b003      	add	sp, #12
9000d32a:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
9000d32c:	f06f 0002 	mvn.w	r0, #2
}
9000d330:	b003      	add	sp, #12
9000d332:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
9000d334:	f06f 0003 	mvn.w	r0, #3
9000d338:	e7e7      	b.n	9000d30a <osMessageQueueGet+0x4a>
9000d33a:	bf00      	nop

9000d33c <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000d33c:	4b04      	ldr	r3, [pc, #16]	; (9000d350 <vApplicationGetIdleTaskMemory+0x14>)
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
9000d33e:	b410      	push	{r4}
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000d340:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000d342:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
9000d344:	4c03      	ldr	r4, [pc, #12]	; (9000d354 <vApplicationGetIdleTaskMemory+0x18>)
9000d346:	600c      	str	r4, [r1, #0]
}
9000d348:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000d34c:	6013      	str	r3, [r2, #0]
}
9000d34e:	4770      	bx	lr
9000d350:	2400a3ac 	.word	0x2400a3ac
9000d354:	2400a1ac 	.word	0x2400a1ac

9000d358 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000d358:	4b05      	ldr	r3, [pc, #20]	; (9000d370 <vApplicationGetTimerTaskMemory+0x18>)
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
9000d35a:	b410      	push	{r4}
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000d35c:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000d35e:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
9000d362:	4c04      	ldr	r4, [pc, #16]	; (9000d374 <vApplicationGetTimerTaskMemory+0x1c>)
9000d364:	600c      	str	r4, [r1, #0]
}
9000d366:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000d36a:	6013      	str	r3, [r2, #0]
}
9000d36c:	4770      	bx	lr
9000d36e:	bf00      	nop
9000d370:	2400a810 	.word	0x2400a810
9000d374:	2400a410 	.word	0x2400a410

9000d378 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
9000d378:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000d37c:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
9000d37e:	f002 f881 	bl	9000f484 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
9000d382:	4a54      	ldr	r2, [pc, #336]	; (9000d4d4 <pvPortMalloc+0x15c>)
9000d384:	6816      	ldr	r6, [r2, #0]
9000d386:	2e00      	cmp	r6, #0
9000d388:	d06f      	beq.n	9000d46a <pvPortMalloc+0xf2>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
9000d38a:	4b53      	ldr	r3, [pc, #332]	; (9000d4d8 <pvPortMalloc+0x160>)
9000d38c:	681f      	ldr	r7, [r3, #0]
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
9000d38e:	423d      	tst	r5, r7
9000d390:	d12e      	bne.n	9000d3f0 <pvPortMalloc+0x78>
9000d392:	b36d      	cbz	r5, 9000d3f0 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
9000d394:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
9000d398:	076d      	lsls	r5, r5, #29
9000d39a:	d002      	beq.n	9000d3a2 <pvPortMalloc+0x2a>
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
9000d39c:	f024 0407 	bic.w	r4, r4, #7
9000d3a0:	3408      	adds	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
9000d3a2:	b32c      	cbz	r4, 9000d3f0 <pvPortMalloc+0x78>
9000d3a4:	f8df c148 	ldr.w	ip, [pc, #328]	; 9000d4f0 <pvPortMalloc+0x178>
9000d3a8:	f8dc 5000 	ldr.w	r5, [ip]
9000d3ac:	42a5      	cmp	r5, r4
9000d3ae:	d31f      	bcc.n	9000d3f0 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
9000d3b0:	484a      	ldr	r0, [pc, #296]	; (9000d4dc <pvPortMalloc+0x164>)
9000d3b2:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000d3b4:	e003      	b.n	9000d3be <pvPortMalloc+0x46>
9000d3b6:	681a      	ldr	r2, [r3, #0]
9000d3b8:	b122      	cbz	r2, 9000d3c4 <pvPortMalloc+0x4c>
9000d3ba:	4618      	mov	r0, r3
9000d3bc:	4613      	mov	r3, r2
9000d3be:	6859      	ldr	r1, [r3, #4]
9000d3c0:	42a1      	cmp	r1, r4
9000d3c2:	d3f8      	bcc.n	9000d3b6 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
9000d3c4:	42b3      	cmp	r3, r6
9000d3c6:	d013      	beq.n	9000d3f0 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
9000d3c8:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000d3ca:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000d3cc:	f858 eb08 	ldr.w	lr, [r8], #8
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000d3d0:	2a10      	cmp	r2, #16
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000d3d2:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000d3d6:	d929      	bls.n	9000d42c <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
9000d3d8:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
9000d3da:	0748      	lsls	r0, r1, #29
9000d3dc:	d00f      	beq.n	9000d3fe <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
9000d3de:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d3e2:	f383 8811 	msr	BASEPRI, r3
9000d3e6:	f3bf 8f6f 	isb	sy
9000d3ea:	f3bf 8f4f 	dsb	sy
9000d3ee:	e7fe      	b.n	9000d3ee <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
9000d3f0:	f04f 0800 	mov.w	r8, #0
9000d3f4:	f002 f84e 	bl	9000f494 <xTaskResumeAll>
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
9000d3f8:	4640      	mov	r0, r8
9000d3fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
9000d3fe:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000d400:	4a36      	ldr	r2, [pc, #216]	; (9000d4dc <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
9000d402:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000d404:	4614      	mov	r4, r2
9000d406:	6812      	ldr	r2, [r2, #0]
9000d408:	4291      	cmp	r1, r2
9000d40a:	d8fb      	bhi.n	9000d404 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000d40c:	6860      	ldr	r0, [r4, #4]
9000d40e:	eb04 0e00 	add.w	lr, r4, r0
9000d412:	4571      	cmp	r1, lr
9000d414:	d04a      	beq.n	9000d4ac <pvPortMalloc+0x134>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d416:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d41a:	eb01 000e 	add.w	r0, r1, lr
9000d41e:	4282      	cmp	r2, r0
9000d420:	d050      	beq.n	9000d4c4 <pvPortMalloc+0x14c>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
9000d422:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d424:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000d426:	bf18      	it	ne
9000d428:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000d42a:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000d42c:	4a2c      	ldr	r2, [pc, #176]	; (9000d4e0 <pvPortMalloc+0x168>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000d42e:	1a6d      	subs	r5, r5, r1
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000d430:	4339      	orrs	r1, r7
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000d432:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000d434:	f8cc 5000 	str.w	r5, [ip]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000d438:	4285      	cmp	r5, r0
					pxBlock->pxNextFreeBlock = NULL;
9000d43a:	f04f 0000 	mov.w	r0, #0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
9000d43e:	bf38      	it	cc
9000d440:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
9000d442:	4a28      	ldr	r2, [pc, #160]	; (9000d4e4 <pvPortMalloc+0x16c>)
					pxBlock->pxNextFreeBlock = NULL;
9000d444:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
9000d448:	6813      	ldr	r3, [r2, #0]
9000d44a:	3301      	adds	r3, #1
9000d44c:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
9000d44e:	f002 f821 	bl	9000f494 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
9000d452:	f018 0f07 	tst.w	r8, #7
9000d456:	d0cf      	beq.n	9000d3f8 <pvPortMalloc+0x80>
9000d458:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d45c:	f383 8811 	msr	BASEPRI, r3
9000d460:	f3bf 8f6f 	isb	sy
9000d464:	f3bf 8f4f 	dsb	sy
9000d468:	e7fe      	b.n	9000d468 <pvPortMalloc+0xf0>
	uxAddress = ( size_t ) ucHeap;
9000d46a:	4b1f      	ldr	r3, [pc, #124]	; (9000d4e8 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
9000d46c:	075e      	lsls	r6, r3, #29
9000d46e:	d117      	bne.n	9000d4a0 <pvPortMalloc+0x128>
9000d470:	4e1e      	ldr	r6, [pc, #120]	; (9000d4ec <pvPortMalloc+0x174>)
9000d472:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
9000d474:	3e08      	subs	r6, #8
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000d476:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000d47a:	4818      	ldr	r0, [pc, #96]	; (9000d4dc <pvPortMalloc+0x164>)
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000d47c:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
9000d480:	6016      	str	r6, [r2, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
9000d482:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000d484:	4a16      	ldr	r2, [pc, #88]	; (9000d4e0 <pvPortMalloc+0x168>)
9000d486:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000d488:	4a19      	ldr	r2, [pc, #100]	; (9000d4f0 <pvPortMalloc+0x178>)
9000d48a:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000d48c:	4a12      	ldr	r2, [pc, #72]	; (9000d4d8 <pvPortMalloc+0x160>)
9000d48e:	6017      	str	r7, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
9000d490:	2200      	movs	r2, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000d492:	e9c0 1200 	strd	r1, r2, [r0]
	pxEnd->pxNextFreeBlock = NULL;
9000d496:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
9000d49a:	e9c1 6300 	strd	r6, r3, [r1]
}
9000d49e:	e776      	b.n	9000d38e <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
9000d4a0:	3307      	adds	r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
9000d4a2:	4e12      	ldr	r6, [pc, #72]	; (9000d4ec <pvPortMalloc+0x174>)
	pucAlignedHeap = ( uint8_t * ) uxAddress;
9000d4a4:	f023 0107 	bic.w	r1, r3, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000d4a8:	460b      	mov	r3, r1
9000d4aa:	e7e3      	b.n	9000d474 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d4ac:	6849      	ldr	r1, [r1, #4]
9000d4ae:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d4b2:	eb04 010e 	add.w	r1, r4, lr
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d4b6:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d4ba:	428a      	cmp	r2, r1
9000d4bc:	d001      	beq.n	9000d4c2 <pvPortMalloc+0x14a>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d4be:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
9000d4c0:	e7b3      	b.n	9000d42a <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d4c2:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000d4c4:	42b2      	cmp	r2, r6
9000d4c6:	d0ac      	beq.n	9000d422 <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d4c8:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d4ca:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d4cc:	4470      	add	r0, lr
9000d4ce:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d4d0:	e7a7      	b.n	9000d422 <pvPortMalloc+0xaa>
9000d4d2:	bf00      	nop
9000d4d4:	2400a870 	.word	0x2400a870
9000d4d8:	24022f14 	.word	0x24022f14
9000d4dc:	24022f28 	.word	0x24022f28
9000d4e0:	24022f1c 	.word	0x24022f1c
9000d4e4:	24022f20 	.word	0x24022f20
9000d4e8:	2400a874 	.word	0x2400a874
9000d4ec:	24022f14 	.word	0x24022f14
9000d4f0:	24022f18 	.word	0x24022f18

9000d4f4 <vPortFree>:
	if( pv != NULL )
9000d4f4:	b1d0      	cbz	r0, 9000d52c <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000d4f6:	4a2c      	ldr	r2, [pc, #176]	; (9000d5a8 <vPortFree+0xb4>)
9000d4f8:	f850 3c04 	ldr.w	r3, [r0, #-4]
9000d4fc:	6812      	ldr	r2, [r2, #0]
9000d4fe:	4213      	tst	r3, r2
9000d500:	d00b      	beq.n	9000d51a <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
9000d502:	f850 1c08 	ldr.w	r1, [r0, #-8]
9000d506:	b191      	cbz	r1, 9000d52e <vPortFree+0x3a>
9000d508:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d50c:	f383 8811 	msr	BASEPRI, r3
9000d510:	f3bf 8f6f 	isb	sy
9000d514:	f3bf 8f4f 	dsb	sy
9000d518:	e7fe      	b.n	9000d518 <vPortFree+0x24>
9000d51a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d51e:	f383 8811 	msr	BASEPRI, r3
9000d522:	f3bf 8f6f 	isb	sy
9000d526:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000d52a:	e7fe      	b.n	9000d52a <vPortFree+0x36>
9000d52c:	4770      	bx	lr
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000d52e:	ea23 0302 	bic.w	r3, r3, r2
{
9000d532:	b530      	push	{r4, r5, lr}
9000d534:	b083      	sub	sp, #12
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000d536:	f840 3c04 	str.w	r3, [r0, #-4]
		puc -= xHeapStructSize;
9000d53a:	f1a0 0408 	sub.w	r4, r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
9000d53e:	4d1b      	ldr	r5, [pc, #108]	; (9000d5ac <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000d540:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
9000d542:	f001 ff9f 	bl	9000f484 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
9000d546:	9801      	ldr	r0, [sp, #4]
9000d548:	682a      	ldr	r2, [r5, #0]
9000d54a:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000d54e:	4b18      	ldr	r3, [pc, #96]	; (9000d5b0 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
9000d550:	440a      	add	r2, r1
9000d552:	602a      	str	r2, [r5, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000d554:	461a      	mov	r2, r3
9000d556:	681b      	ldr	r3, [r3, #0]
9000d558:	429c      	cmp	r4, r3
9000d55a:	d8fb      	bhi.n	9000d554 <vPortFree+0x60>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000d55c:	6850      	ldr	r0, [r2, #4]
9000d55e:	eb02 0c00 	add.w	ip, r2, r0
9000d562:	4564      	cmp	r4, ip
9000d564:	d00f      	beq.n	9000d586 <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d566:	1860      	adds	r0, r4, r1
9000d568:	4283      	cmp	r3, r0
9000d56a:	d014      	beq.n	9000d596 <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
9000d56c:	42a2      	cmp	r2, r4
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d56e:	6023      	str	r3, [r4, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000d570:	bf18      	it	ne
9000d572:	6014      	strne	r4, [r2, #0]
					xNumberOfSuccessfulFrees++;
9000d574:	4a0f      	ldr	r2, [pc, #60]	; (9000d5b4 <vPortFree+0xc0>)
9000d576:	6813      	ldr	r3, [r2, #0]
9000d578:	3301      	adds	r3, #1
9000d57a:	6013      	str	r3, [r2, #0]
}
9000d57c:	b003      	add	sp, #12
9000d57e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
				( void ) xTaskResumeAll();
9000d582:	f001 bf87 	b.w	9000f494 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d586:	4401      	add	r1, r0
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d588:	1850      	adds	r0, r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d58a:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d58c:	4283      	cmp	r3, r0
9000d58e:	d001      	beq.n	9000d594 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d590:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
9000d592:	e7ef      	b.n	9000d574 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d594:	4614      	mov	r4, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000d596:	4808      	ldr	r0, [pc, #32]	; (9000d5b8 <vPortFree+0xc4>)
9000d598:	6800      	ldr	r0, [r0, #0]
9000d59a:	4283      	cmp	r3, r0
9000d59c:	d0e6      	beq.n	9000d56c <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d59e:	e9d3 3000 	ldrd	r3, r0, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d5a2:	4401      	add	r1, r0
9000d5a4:	6061      	str	r1, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d5a6:	e7e1      	b.n	9000d56c <vPortFree+0x78>
9000d5a8:	24022f14 	.word	0x24022f14
9000d5ac:	24022f18 	.word	0x24022f18
9000d5b0:	24022f28 	.word	0x24022f28
9000d5b4:	24022f24 	.word	0x24022f24
9000d5b8:	2400a870 	.word	0x2400a870

9000d5bc <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000d5bc:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000d5c0:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000d5c4:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000d5c6:	6081      	str	r1, [r0, #8]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000d5c8:	6002      	str	r2, [r0, #0]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000d5ca:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000d5cc:	e9c0 3303 	strd	r3, r3, [r0, #12]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
9000d5d0:	4770      	bx	lr
9000d5d2:	bf00      	nop

9000d5d4 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
9000d5d4:	2300      	movs	r3, #0
9000d5d6:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
9000d5d8:	4770      	bx	lr
9000d5da:	bf00      	nop

9000d5dc <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
9000d5dc:	6843      	ldr	r3, [r0, #4]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000d5de:	6802      	ldr	r2, [r0, #0]
{
9000d5e0:	b410      	push	{r4}
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000d5e2:	689c      	ldr	r4, [r3, #8]
	( pxList->uxNumberOfItems )++;
9000d5e4:	3201      	adds	r2, #1
	pxNewListItem->pxNext = pxIndex;
9000d5e6:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000d5e8:	608c      	str	r4, [r1, #8]
	pxIndex->pxPrevious->pxNext = pxNewListItem;
9000d5ea:	689c      	ldr	r4, [r3, #8]
9000d5ec:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
9000d5ee:	6099      	str	r1, [r3, #8]
}
9000d5f0:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
9000d5f4:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000d5f6:	6002      	str	r2, [r0, #0]
}
9000d5f8:	4770      	bx	lr
9000d5fa:	bf00      	nop

9000d5fc <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
9000d5fc:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
9000d5fe:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
9000d600:	1c6b      	adds	r3, r5, #1
9000d602:	d010      	beq.n	9000d626 <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
9000d604:	f100 0308 	add.w	r3, r0, #8
9000d608:	461c      	mov	r4, r3
9000d60a:	685b      	ldr	r3, [r3, #4]
9000d60c:	681a      	ldr	r2, [r3, #0]
9000d60e:	42aa      	cmp	r2, r5
9000d610:	d9fa      	bls.n	9000d608 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000d612:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000d614:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
9000d616:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
9000d618:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
9000d61a:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
9000d61c:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
9000d61e:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000d620:	6002      	str	r2, [r0, #0]
}
9000d622:	bc30      	pop	{r4, r5}
9000d624:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
9000d626:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000d628:	6863      	ldr	r3, [r4, #4]
9000d62a:	e7f2      	b.n	9000d612 <vListInsert+0x16>

9000d62c <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
9000d62c:	6903      	ldr	r3, [r0, #16]
{
9000d62e:	b410      	push	{r4}

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
9000d630:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000d632:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
	if( pxList->pxIndex == pxItemToRemove )
9000d636:	4284      	cmp	r4, r0

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;

	return pxList->uxNumberOfItems;
}
9000d638:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000d63c:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
9000d63e:	6051      	str	r1, [r2, #4]
	pxItemToRemove->pxContainer = NULL;
9000d640:	f04f 0100 	mov.w	r1, #0
		pxList->pxIndex = pxItemToRemove->pxPrevious;
9000d644:	bf08      	it	eq
9000d646:	605a      	streq	r2, [r3, #4]
	( pxList->uxNumberOfItems )--;
9000d648:	681a      	ldr	r2, [r3, #0]
	pxItemToRemove->pxContainer = NULL;
9000d64a:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
9000d64c:	3a01      	subs	r2, #1
9000d64e:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
9000d650:	6818      	ldr	r0, [r3, #0]
}
9000d652:	4770      	bx	lr

9000d654 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
9000d654:	4808      	ldr	r0, [pc, #32]	; (9000d678 <prvPortStartFirstTask+0x24>)
9000d656:	6800      	ldr	r0, [r0, #0]
9000d658:	6800      	ldr	r0, [r0, #0]
9000d65a:	f380 8808 	msr	MSP, r0
9000d65e:	f04f 0000 	mov.w	r0, #0
9000d662:	f380 8814 	msr	CONTROL, r0
9000d666:	b662      	cpsie	i
9000d668:	b661      	cpsie	f
9000d66a:	f3bf 8f4f 	dsb	sy
9000d66e:	f3bf 8f6f 	isb	sy
9000d672:	df00      	svc	0
9000d674:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
9000d676:	0000      	.short	0x0000
9000d678:	e000ed08 	.word	0xe000ed08

9000d67c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
9000d67c:	f8df 000c 	ldr.w	r0, [pc, #12]	; 9000d68c <vPortEnableVFP+0x10>
9000d680:	6801      	ldr	r1, [r0, #0]
9000d682:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
9000d686:	6001      	str	r1, [r0, #0]
9000d688:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
9000d68a:	0000      	.short	0x0000
9000d68c:	e000ed88 	.word	0xe000ed88

9000d690 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
9000d690:	4b0e      	ldr	r3, [pc, #56]	; (9000d6cc <prvTaskExitError+0x3c>)
{
9000d692:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
9000d694:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
9000d696:	681b      	ldr	r3, [r3, #0]
volatile uint32_t ulDummy = 0;
9000d698:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
9000d69a:	3301      	adds	r3, #1
9000d69c:	d008      	beq.n	9000d6b0 <prvTaskExitError+0x20>
9000d69e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d6a2:	f383 8811 	msr	BASEPRI, r3
9000d6a6:	f3bf 8f6f 	isb	sy
9000d6aa:	f3bf 8f4f 	dsb	sy
9000d6ae:	e7fe      	b.n	9000d6ae <prvTaskExitError+0x1e>
9000d6b0:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d6b4:	f383 8811 	msr	BASEPRI, r3
9000d6b8:	f3bf 8f6f 	isb	sy
9000d6bc:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000d6c0:	9b01      	ldr	r3, [sp, #4]
9000d6c2:	2b00      	cmp	r3, #0
9000d6c4:	d0fc      	beq.n	9000d6c0 <prvTaskExitError+0x30>
}
9000d6c6:	b002      	add	sp, #8
9000d6c8:	4770      	bx	lr
9000d6ca:	bf00      	nop
9000d6cc:	24000070 	.word	0x24000070

9000d6d0 <pxPortInitialiseStack>:
{
9000d6d0:	4603      	mov	r3, r0
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000d6d2:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000d6d6:	4809      	ldr	r0, [pc, #36]	; (9000d6fc <pxPortInitialiseStack+0x2c>)
{
9000d6d8:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
9000d6da:	f04f 7480 	mov.w	r4, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000d6de:	f843 0c0c 	str.w	r0, [r3, #-12]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
9000d6e2:	f843 2c20 	str.w	r2, [r3, #-32]
}
9000d6e6:	f1a3 0044 	sub.w	r0, r3, #68	; 0x44
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000d6ea:	e943 1402 	strd	r1, r4, [r3, #-8]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000d6ee:	f06f 0102 	mvn.w	r1, #2
}
9000d6f2:	f85d 4b04 	ldr.w	r4, [sp], #4
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000d6f6:	f843 1c24 	str.w	r1, [r3, #-36]
}
9000d6fa:	4770      	bx	lr
9000d6fc:	9000d691 	.word	0x9000d691

9000d700 <SVC_Handler>:
	__asm volatile (
9000d700:	4b07      	ldr	r3, [pc, #28]	; (9000d720 <pxCurrentTCBConst2>)
9000d702:	6819      	ldr	r1, [r3, #0]
9000d704:	6808      	ldr	r0, [r1, #0]
9000d706:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000d70a:	f380 8809 	msr	PSP, r0
9000d70e:	f3bf 8f6f 	isb	sy
9000d712:	f04f 0000 	mov.w	r0, #0
9000d716:	f380 8811 	msr	BASEPRI, r0
9000d71a:	4770      	bx	lr
9000d71c:	f3af 8000 	nop.w

9000d720 <pxCurrentTCBConst2>:
9000d720:	24022f78 	.word	0x24022f78

9000d724 <vPortEnterCritical>:
9000d724:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d728:	f383 8811 	msr	BASEPRI, r3
9000d72c:	f3bf 8f6f 	isb	sy
9000d730:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
9000d734:	4a0b      	ldr	r2, [pc, #44]	; (9000d764 <vPortEnterCritical+0x40>)
9000d736:	6813      	ldr	r3, [r2, #0]
9000d738:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
9000d73a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
9000d73c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
9000d73e:	d000      	beq.n	9000d742 <vPortEnterCritical+0x1e>
}
9000d740:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
9000d742:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000d746:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
9000d74a:	b2db      	uxtb	r3, r3
9000d74c:	2b00      	cmp	r3, #0
9000d74e:	d0f7      	beq.n	9000d740 <vPortEnterCritical+0x1c>
9000d750:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d754:	f383 8811 	msr	BASEPRI, r3
9000d758:	f3bf 8f6f 	isb	sy
9000d75c:	f3bf 8f4f 	dsb	sy
9000d760:	e7fe      	b.n	9000d760 <vPortEnterCritical+0x3c>
9000d762:	bf00      	nop
9000d764:	24000070 	.word	0x24000070

9000d768 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
9000d768:	4a08      	ldr	r2, [pc, #32]	; (9000d78c <vPortExitCritical+0x24>)
9000d76a:	6813      	ldr	r3, [r2, #0]
9000d76c:	b943      	cbnz	r3, 9000d780 <vPortExitCritical+0x18>
9000d76e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d772:	f383 8811 	msr	BASEPRI, r3
9000d776:	f3bf 8f6f 	isb	sy
9000d77a:	f3bf 8f4f 	dsb	sy
9000d77e:	e7fe      	b.n	9000d77e <vPortExitCritical+0x16>
	uxCriticalNesting--;
9000d780:	3b01      	subs	r3, #1
9000d782:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
9000d784:	b90b      	cbnz	r3, 9000d78a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
9000d786:	f383 8811 	msr	BASEPRI, r3
}
9000d78a:	4770      	bx	lr
9000d78c:	24000070 	.word	0x24000070

9000d790 <PendSV_Handler>:
	__asm volatile
9000d790:	f3ef 8009 	mrs	r0, PSP
9000d794:	f3bf 8f6f 	isb	sy
9000d798:	4b15      	ldr	r3, [pc, #84]	; (9000d7f0 <pxCurrentTCBConst>)
9000d79a:	681a      	ldr	r2, [r3, #0]
9000d79c:	f01e 0f10 	tst.w	lr, #16
9000d7a0:	bf08      	it	eq
9000d7a2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
9000d7a6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000d7aa:	6010      	str	r0, [r2, #0]
9000d7ac:	e92d 0009 	stmdb	sp!, {r0, r3}
9000d7b0:	f04f 0050 	mov.w	r0, #80	; 0x50
9000d7b4:	f380 8811 	msr	BASEPRI, r0
9000d7b8:	f3bf 8f4f 	dsb	sy
9000d7bc:	f3bf 8f6f 	isb	sy
9000d7c0:	f001 fea4 	bl	9000f50c <vTaskSwitchContext>
9000d7c4:	f04f 0000 	mov.w	r0, #0
9000d7c8:	f380 8811 	msr	BASEPRI, r0
9000d7cc:	bc09      	pop	{r0, r3}
9000d7ce:	6819      	ldr	r1, [r3, #0]
9000d7d0:	6808      	ldr	r0, [r1, #0]
9000d7d2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000d7d6:	f01e 0f10 	tst.w	lr, #16
9000d7da:	bf08      	it	eq
9000d7dc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
9000d7e0:	f380 8809 	msr	PSP, r0
9000d7e4:	f3bf 8f6f 	isb	sy
9000d7e8:	4770      	bx	lr
9000d7ea:	bf00      	nop
9000d7ec:	f3af 8000 	nop.w

9000d7f0 <pxCurrentTCBConst>:
9000d7f0:	24022f78 	.word	0x24022f78

9000d7f4 <xPortSysTickHandler>:
{
9000d7f4:	b508      	push	{r3, lr}
	__asm volatile
9000d7f6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d7fa:	f383 8811 	msr	BASEPRI, r3
9000d7fe:	f3bf 8f6f 	isb	sy
9000d802:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
9000d806:	f001 fe5b 	bl	9000f4c0 <xTaskIncrementTick>
9000d80a:	b128      	cbz	r0, 9000d818 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
9000d80c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000d810:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000d814:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
9000d818:	2300      	movs	r3, #0
9000d81a:	f383 8811 	msr	BASEPRI, r3
}
9000d81e:	bd08      	pop	{r3, pc}

9000d820 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000d820:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
9000d824:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000d826:	4806      	ldr	r0, [pc, #24]	; (9000d840 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000d828:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000d82a:	4906      	ldr	r1, [pc, #24]	; (9000d844 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
9000d82c:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000d82e:	6803      	ldr	r3, [r0, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000d830:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000d832:	fba1 1303 	umull	r1, r3, r1, r3
9000d836:	099b      	lsrs	r3, r3, #6
9000d838:	3b01      	subs	r3, #1
9000d83a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000d83c:	6110      	str	r0, [r2, #16]
}
9000d83e:	4770      	bx	lr
9000d840:	24000060 	.word	0x24000060
9000d844:	10624dd3 	.word	0x10624dd3

9000d848 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000d848:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000d84c:	4a48      	ldr	r2, [pc, #288]	; (9000d970 <xPortStartScheduler+0x128>)
9000d84e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
9000d852:	4291      	cmp	r1, r2
9000d854:	d041      	beq.n	9000d8da <xPortStartScheduler+0x92>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000d856:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
9000d85a:	4b46      	ldr	r3, [pc, #280]	; (9000d974 <xPortStartScheduler+0x12c>)
9000d85c:	429a      	cmp	r2, r3
9000d85e:	d033      	beq.n	9000d8c8 <xPortStartScheduler+0x80>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000d860:	4b45      	ldr	r3, [pc, #276]	; (9000d978 <xPortStartScheduler+0x130>)
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000d862:	20ff      	movs	r0, #255	; 0xff
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000d864:	4945      	ldr	r1, [pc, #276]	; (9000d97c <xPortStartScheduler+0x134>)
{
9000d866:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000d868:	781a      	ldrb	r2, [r3, #0]
{
9000d86a:	b084      	sub	sp, #16
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000d86c:	4c44      	ldr	r4, [pc, #272]	; (9000d980 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000d86e:	b2d2      	uxtb	r2, r2
9000d870:	9202      	str	r2, [sp, #8]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000d872:	2207      	movs	r2, #7
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000d874:	7018      	strb	r0, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000d876:	781b      	ldrb	r3, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000d878:	6022      	str	r2, [r4, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000d87a:	b2db      	uxtb	r3, r3
9000d87c:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000d880:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d884:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000d888:	f003 0350 	and.w	r3, r3, #80	; 0x50
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d88c:	0610      	lsls	r0, r2, #24
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000d88e:	700b      	strb	r3, [r1, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d890:	d511      	bpl.n	9000d8b6 <xPortStartScheduler+0x6e>
9000d892:	2206      	movs	r2, #6
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000d894:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000d898:	4610      	mov	r0, r2
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d89a:	3a01      	subs	r2, #1
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000d89c:	005b      	lsls	r3, r3, #1
9000d89e:	b2db      	uxtb	r3, r3
9000d8a0:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d8a4:	f89d 1007 	ldrb.w	r1, [sp, #7]
9000d8a8:	0609      	lsls	r1, r1, #24
9000d8aa:	d4f3      	bmi.n	9000d894 <xPortStartScheduler+0x4c>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
9000d8ac:	2803      	cmp	r0, #3
9000d8ae:	6020      	str	r0, [r4, #0]
9000d8b0:	f88d 3007 	strb.w	r3, [sp, #7]
9000d8b4:	d01a      	beq.n	9000d8ec <xPortStartScheduler+0xa4>
	__asm volatile
9000d8b6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d8ba:	f383 8811 	msr	BASEPRI, r3
9000d8be:	f3bf 8f6f 	isb	sy
9000d8c2:	f3bf 8f4f 	dsb	sy
9000d8c6:	e7fe      	b.n	9000d8c6 <xPortStartScheduler+0x7e>
9000d8c8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d8cc:	f383 8811 	msr	BASEPRI, r3
9000d8d0:	f3bf 8f6f 	isb	sy
9000d8d4:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000d8d8:	e7fe      	b.n	9000d8d8 <xPortStartScheduler+0x90>
9000d8da:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d8de:	f383 8811 	msr	BASEPRI, r3
9000d8e2:	f3bf 8f6f 	isb	sy
9000d8e6:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000d8ea:	e7fe      	b.n	9000d8ea <xPortStartScheduler+0xa2>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000d8ec:	9b02      	ldr	r3, [sp, #8]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000d8ee:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000d8f2:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000d8f6:	4a20      	ldr	r2, [pc, #128]	; (9000d978 <xPortStartScheduler+0x130>)
9000d8f8:	b2db      	uxtb	r3, r3
	uxCriticalNesting = 0;
9000d8fa:	4e22      	ldr	r6, [pc, #136]	; (9000d984 <xPortStartScheduler+0x13c>)
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000d8fc:	6021      	str	r1, [r4, #0]
	uxCriticalNesting = 0;
9000d8fe:	2400      	movs	r4, #0
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000d900:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000d902:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
9000d906:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
9000d90a:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
9000d90e:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
9000d912:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
9000d916:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
9000d91a:	f7ff ff81 	bl	9000d820 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
9000d91e:	6034      	str	r4, [r6, #0]
	vPortEnableVFP();
9000d920:	f7ff feac 	bl	9000d67c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
9000d924:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
9000d928:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
9000d92c:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
9000d930:	f7ff fe90 	bl	9000d654 <prvPortStartFirstTask>
	vTaskSwitchContext();
9000d934:	f001 fdea 	bl	9000f50c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
9000d938:	6833      	ldr	r3, [r6, #0]
volatile uint32_t ulDummy = 0;
9000d93a:	9403      	str	r4, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
9000d93c:	3301      	adds	r3, #1
9000d93e:	d008      	beq.n	9000d952 <xPortStartScheduler+0x10a>
9000d940:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d944:	f383 8811 	msr	BASEPRI, r3
9000d948:	f3bf 8f6f 	isb	sy
9000d94c:	f3bf 8f4f 	dsb	sy
9000d950:	e7fe      	b.n	9000d950 <xPortStartScheduler+0x108>
9000d952:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d956:	f383 8811 	msr	BASEPRI, r3
9000d95a:	f3bf 8f6f 	isb	sy
9000d95e:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000d962:	9b03      	ldr	r3, [sp, #12]
9000d964:	2b00      	cmp	r3, #0
9000d966:	d0fc      	beq.n	9000d962 <xPortStartScheduler+0x11a>
}
9000d968:	2000      	movs	r0, #0
9000d96a:	b004      	add	sp, #16
9000d96c:	bd70      	pop	{r4, r5, r6, pc}
9000d96e:	bf00      	nop
9000d970:	410fc271 	.word	0x410fc271
9000d974:	410fc270 	.word	0x410fc270
9000d978:	e000e400 	.word	0xe000e400
9000d97c:	24022f30 	.word	0x24022f30
9000d980:	24022f34 	.word	0x24022f34
9000d984:	24000070 	.word	0x24000070

9000d988 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
9000d988:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
9000d98c:	2b0f      	cmp	r3, #15
9000d98e:	d90e      	bls.n	9000d9ae <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000d990:	4911      	ldr	r1, [pc, #68]	; (9000d9d8 <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000d992:	4a12      	ldr	r2, [pc, #72]	; (9000d9dc <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000d994:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000d996:	7812      	ldrb	r2, [r2, #0]
9000d998:	429a      	cmp	r2, r3
9000d99a:	d908      	bls.n	9000d9ae <vPortValidateInterruptPriority+0x26>
9000d99c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d9a0:	f383 8811 	msr	BASEPRI, r3
9000d9a4:	f3bf 8f6f 	isb	sy
9000d9a8:	f3bf 8f4f 	dsb	sy
9000d9ac:	e7fe      	b.n	9000d9ac <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
9000d9ae:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000d9b2:	4a0b      	ldr	r2, [pc, #44]	; (9000d9e0 <vPortValidateInterruptPriority+0x58>)
9000d9b4:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
9000d9b8:	6812      	ldr	r2, [r2, #0]
9000d9ba:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
9000d9be:	4293      	cmp	r3, r2
9000d9c0:	d908      	bls.n	9000d9d4 <vPortValidateInterruptPriority+0x4c>
9000d9c2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d9c6:	f383 8811 	msr	BASEPRI, r3
9000d9ca:	f3bf 8f6f 	isb	sy
9000d9ce:	f3bf 8f4f 	dsb	sy
9000d9d2:	e7fe      	b.n	9000d9d2 <vPortValidateInterruptPriority+0x4a>
	}
9000d9d4:	4770      	bx	lr
9000d9d6:	bf00      	nop
9000d9d8:	e000e3f0 	.word	0xe000e3f0
9000d9dc:	24022f30 	.word	0x24022f30
9000d9e0:	24022f34 	.word	0x24022f34

9000d9e4 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
9000d9e4:	b570      	push	{r4, r5, r6, lr}
9000d9e6:	4615      	mov	r5, r2

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000d9e8:	6c02      	ldr	r2, [r0, #64]	; 0x40
{
9000d9ea:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000d9ec:	6b86      	ldr	r6, [r0, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000d9ee:	b92a      	cbnz	r2, 9000d9fc <prvCopyDataToQueue+0x18>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000d9f0:	6805      	ldr	r5, [r0, #0]
9000d9f2:	b365      	cbz	r5, 9000da4e <prvCopyDataToQueue+0x6a>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d9f4:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000d9f6:	4610      	mov	r0, r2
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d9f8:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
9000d9fa:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
9000d9fc:	b97d      	cbnz	r5, 9000da1e <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000d9fe:	6840      	ldr	r0, [r0, #4]
9000da00:	f019 f817 	bl	90026a32 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000da04:	6863      	ldr	r3, [r4, #4]
9000da06:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000da08:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000da0a:	68a2      	ldr	r2, [r4, #8]
9000da0c:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000da0e:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000da10:	d319      	bcc.n	9000da46 <prvCopyDataToQueue+0x62>
			pxQueue->pcWriteTo = pxQueue->pcHead;
9000da12:	6822      	ldr	r2, [r4, #0]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000da14:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000da16:	4628      	mov	r0, r5
			pxQueue->pcWriteTo = pxQueue->pcHead;
9000da18:	6062      	str	r2, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000da1a:	63a6      	str	r6, [r4, #56]	; 0x38
}
9000da1c:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
9000da1e:	68c0      	ldr	r0, [r0, #12]
9000da20:	f019 f807 	bl	90026a32 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000da24:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000da26:	68e3      	ldr	r3, [r4, #12]
9000da28:	4251      	negs	r1, r2
9000da2a:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000da2c:	6822      	ldr	r2, [r4, #0]
9000da2e:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000da30:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000da32:	d202      	bcs.n	9000da3a <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
9000da34:	68a3      	ldr	r3, [r4, #8]
9000da36:	440b      	add	r3, r1
9000da38:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
9000da3a:	2d02      	cmp	r5, #2
9000da3c:	d00d      	beq.n	9000da5a <prvCopyDataToQueue+0x76>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000da3e:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000da40:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000da42:	63a6      	str	r6, [r4, #56]	; 0x38
}
9000da44:	bd70      	pop	{r4, r5, r6, pc}
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000da46:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000da48:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000da4a:	63a6      	str	r6, [r4, #56]	; 0x38
}
9000da4c:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9000da4e:	6880      	ldr	r0, [r0, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000da50:	3601      	adds	r6, #1
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9000da52:	f001 ff43 	bl	9000f8dc <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
9000da56:	60a5      	str	r5, [r4, #8]
9000da58:	e7ce      	b.n	9000d9f8 <prvCopyDataToQueue+0x14>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000da5a:	2e01      	cmp	r6, #1
BaseType_t xReturn = pdFALSE;
9000da5c:	f04f 0000 	mov.w	r0, #0
9000da60:	bf38      	it	cc
9000da62:	2601      	movcc	r6, #1
9000da64:	e7c8      	b.n	9000d9f8 <prvCopyDataToQueue+0x14>
9000da66:	bf00      	nop

9000da68 <xQueueGenericCreateStatic>:
	{
9000da68:	b530      	push	{r4, r5, lr}
9000da6a:	b083      	sub	sp, #12
9000da6c:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000da70:	b940      	cbnz	r0, 9000da84 <xQueueGenericCreateStatic+0x1c>
9000da72:	f04f 0350 	mov.w	r3, #80	; 0x50
9000da76:	f383 8811 	msr	BASEPRI, r3
9000da7a:	f3bf 8f6f 	isb	sy
9000da7e:	f3bf 8f4f 	dsb	sy
9000da82:	e7fe      	b.n	9000da82 <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
9000da84:	461d      	mov	r5, r3
9000da86:	b153      	cbz	r3, 9000da9e <xQueueGenericCreateStatic+0x36>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
9000da88:	b30a      	cbz	r2, 9000dace <xQueueGenericCreateStatic+0x66>
9000da8a:	b989      	cbnz	r1, 9000dab0 <xQueueGenericCreateStatic+0x48>
9000da8c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000da90:	f383 8811 	msr	BASEPRI, r3
9000da94:	f3bf 8f6f 	isb	sy
9000da98:	f3bf 8f4f 	dsb	sy
9000da9c:	e7fe      	b.n	9000da9c <xQueueGenericCreateStatic+0x34>
9000da9e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000daa2:	f383 8811 	msr	BASEPRI, r3
9000daa6:	f3bf 8f6f 	isb	sy
9000daaa:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000daae:	e7fe      	b.n	9000daae <xQueueGenericCreateStatic+0x46>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000dab0:	b16a      	cbz	r2, 9000dace <xQueueGenericCreateStatic+0x66>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000dab2:	2350      	movs	r3, #80	; 0x50
9000dab4:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
9000dab6:	9b01      	ldr	r3, [sp, #4]
9000dab8:	2b50      	cmp	r3, #80	; 0x50
9000daba:	d013      	beq.n	9000dae4 <xQueueGenericCreateStatic+0x7c>
9000dabc:	f04f 0350 	mov.w	r3, #80	; 0x50
9000dac0:	f383 8811 	msr	BASEPRI, r3
9000dac4:	f3bf 8f6f 	isb	sy
9000dac8:	f3bf 8f4f 	dsb	sy
9000dacc:	e7fe      	b.n	9000dacc <xQueueGenericCreateStatic+0x64>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000dace:	2900      	cmp	r1, #0
9000dad0:	d0ef      	beq.n	9000dab2 <xQueueGenericCreateStatic+0x4a>
9000dad2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000dad6:	f383 8811 	msr	BASEPRI, r3
9000dada:	f3bf 8f6f 	isb	sy
9000dade:	f3bf 8f4f 	dsb	sy
9000dae2:	e7fe      	b.n	9000dae2 <xQueueGenericCreateStatic+0x7a>
	if( uxItemSize == ( UBaseType_t ) 0 )
9000dae4:	2900      	cmp	r1, #0
9000dae6:	bf08      	it	eq
9000dae8:	462a      	moveq	r2, r5
	pxNewQueue->uxLength = uxQueueLength;
9000daea:	63e8      	str	r0, [r5, #60]	; 0x3c
	pxNewQueue->uxItemSize = uxItemSize;
9000daec:	6429      	str	r1, [r5, #64]	; 0x40
9000daee:	602a      	str	r2, [r5, #0]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000daf0:	9a01      	ldr	r2, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000daf2:	2201      	movs	r2, #1
9000daf4:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
9000daf8:	f7ff fe14 	bl	9000d724 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dafc:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000dafe:	2300      	movs	r3, #0
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000db00:	6069      	str	r1, [r5, #4]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000db02:	63ab      	str	r3, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db04:	e9d5 200f 	ldrd	r2, r0, [r5, #60]	; 0x3c
9000db08:	fb00 f202 	mul.w	r2, r0, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db0c:	1a10      	subs	r0, r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db0e:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db10:	4401      	add	r1, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db12:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000db14:	22ff      	movs	r2, #255	; 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000db16:	f105 0010 	add.w	r0, r5, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db1a:	60e9      	str	r1, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000db1c:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000db20:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000db24:	f7ff fd4a 	bl	9000d5bc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000db28:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000db2c:	f7ff fd46 	bl	9000d5bc <vListInitialise>
	taskEXIT_CRITICAL();
9000db30:	f7ff fe1a 	bl	9000d768 <vPortExitCritical>
	}
9000db34:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
9000db36:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
9000db3a:	b003      	add	sp, #12
9000db3c:	bd30      	pop	{r4, r5, pc}
9000db3e:	bf00      	nop

9000db40 <xQueueGenericCreate>:
	{
9000db40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000db42:	b940      	cbnz	r0, 9000db56 <xQueueGenericCreate+0x16>
9000db44:	f04f 0350 	mov.w	r3, #80	; 0x50
9000db48:	f383 8811 	msr	BASEPRI, r3
9000db4c:	f3bf 8f6f 	isb	sy
9000db50:	f3bf 8f4f 	dsb	sy
9000db54:	e7fe      	b.n	9000db54 <xQueueGenericCreate+0x14>
9000db56:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000db58:	fb01 f000 	mul.w	r0, r1, r0
9000db5c:	460e      	mov	r6, r1
9000db5e:	4617      	mov	r7, r2
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000db60:	3050      	adds	r0, #80	; 0x50
9000db62:	f7ff fc09 	bl	9000d378 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000db66:	4604      	mov	r4, r0
9000db68:	b340      	cbz	r0, 9000dbbc <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000db6a:	2300      	movs	r3, #0
9000db6c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
9000db70:	b336      	cbz	r6, 9000dbc0 <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db72:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
9000db76:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000db78:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
9000db7c:	f7ff fdd2 	bl	9000d724 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db80:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000db82:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000db86:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db88:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
9000db8c:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db90:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db92:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db94:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db96:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000db98:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000db9a:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db9c:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000db9e:	63a1      	str	r1, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000dba0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000dba4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000dba8:	f7ff fd08 	bl	9000d5bc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000dbac:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000dbb0:	f7ff fd04 	bl	9000d5bc <vListInitialise>
	taskEXIT_CRITICAL();
9000dbb4:	f7ff fdd8 	bl	9000d768 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000dbb8:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
9000dbbc:	4620      	mov	r0, r4
9000dbbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9000dbc0:	4603      	mov	r3, r0
9000dbc2:	e7d8      	b.n	9000db76 <xQueueGenericCreate+0x36>

9000dbc4 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
9000dbc4:	b940      	cbnz	r0, 9000dbd8 <xQueueCreateCountingSemaphoreStatic+0x14>
9000dbc6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000dbca:	f383 8811 	msr	BASEPRI, r3
9000dbce:	f3bf 8f6f 	isb	sy
9000dbd2:	f3bf 8f4f 	dsb	sy
9000dbd6:	e7fe      	b.n	9000dbd6 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
9000dbd8:	4288      	cmp	r0, r1
9000dbda:	d208      	bcs.n	9000dbee <xQueueCreateCountingSemaphoreStatic+0x2a>
9000dbdc:	f04f 0350 	mov.w	r3, #80	; 0x50
9000dbe0:	f383 8811 	msr	BASEPRI, r3
9000dbe4:	f3bf 8f6f 	isb	sy
9000dbe8:	f3bf 8f4f 	dsb	sy
9000dbec:	e7fe      	b.n	9000dbec <xQueueCreateCountingSemaphoreStatic+0x28>
	{
9000dbee:	b530      	push	{r4, r5, lr}
9000dbf0:	4615      	mov	r5, r2
9000dbf2:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
9000dbf4:	2a00      	cmp	r2, #0
9000dbf6:	d03d      	beq.n	9000dc74 <xQueueCreateCountingSemaphoreStatic+0xb0>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000dbf8:	2350      	movs	r3, #80	; 0x50
9000dbfa:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
9000dbfc:	9b03      	ldr	r3, [sp, #12]
9000dbfe:	2b50      	cmp	r3, #80	; 0x50
9000dc00:	d008      	beq.n	9000dc14 <xQueueCreateCountingSemaphoreStatic+0x50>
9000dc02:	f04f 0350 	mov.w	r3, #80	; 0x50
9000dc06:	f383 8811 	msr	BASEPRI, r3
9000dc0a:	f3bf 8f6f 	isb	sy
9000dc0e:	f3bf 8f4f 	dsb	sy
9000dc12:	e7fe      	b.n	9000dc12 <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
9000dc14:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000dc16:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000dc18:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000dc1a:	63d0      	str	r0, [r2, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000dc1c:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000dc20:	6414      	str	r4, [r2, #64]	; 0x40
9000dc22:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000dc24:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
9000dc26:	f7ff fd7d 	bl	9000d724 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc2a:	6828      	ldr	r0, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000dc2c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000dc2e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc30:	e9d5 3c0f 	ldrd	r3, ip, [r5, #60]	; 0x3c
9000dc34:	fb03 f30c 	mul.w	r3, r3, ip
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc38:	eba3 0c0c 	sub.w	ip, r3, ip
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc3c:	4403      	add	r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc3e:	4484      	add	ip, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc40:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000dc42:	23ff      	movs	r3, #255	; 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000dc44:	f105 0010 	add.w	r0, r5, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc48:	f8c5 c00c 	str.w	ip, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000dc4c:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000dc50:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000dc54:	f7ff fcb2 	bl	9000d5bc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000dc58:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000dc5c:	f7ff fcae 	bl	9000d5bc <vListInitialise>
	taskEXIT_CRITICAL();
9000dc60:	f7ff fd82 	bl	9000d768 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000dc64:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000dc66:	9901      	ldr	r1, [sp, #4]
	}
9000dc68:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
9000dc6a:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000dc6e:	63a9      	str	r1, [r5, #56]	; 0x38
	}
9000dc70:	b005      	add	sp, #20
9000dc72:	bd30      	pop	{r4, r5, pc}
9000dc74:	f04f 0350 	mov.w	r3, #80	; 0x50
9000dc78:	f383 8811 	msr	BASEPRI, r3
9000dc7c:	f3bf 8f6f 	isb	sy
9000dc80:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000dc84:	e7fe      	b.n	9000dc84 <xQueueCreateCountingSemaphoreStatic+0xc0>
9000dc86:	bf00      	nop

9000dc88 <xQueueCreateCountingSemaphore>:
	{
9000dc88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
9000dc8a:	b940      	cbnz	r0, 9000dc9e <xQueueCreateCountingSemaphore+0x16>
9000dc8c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000dc90:	f383 8811 	msr	BASEPRI, r3
9000dc94:	f3bf 8f6f 	isb	sy
9000dc98:	f3bf 8f4f 	dsb	sy
9000dc9c:	e7fe      	b.n	9000dc9c <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
9000dc9e:	4288      	cmp	r0, r1
9000dca0:	4604      	mov	r4, r0
9000dca2:	460e      	mov	r6, r1
9000dca4:	d208      	bcs.n	9000dcb8 <xQueueCreateCountingSemaphore+0x30>
9000dca6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000dcaa:	f383 8811 	msr	BASEPRI, r3
9000dcae:	f3bf 8f6f 	isb	sy
9000dcb2:	f3bf 8f4f 	dsb	sy
9000dcb6:	e7fe      	b.n	9000dcb6 <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000dcb8:	2050      	movs	r0, #80	; 0x50
9000dcba:	f7ff fb5d 	bl	9000d378 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000dcbe:	4605      	mov	r5, r0
9000dcc0:	b330      	cbz	r0, 9000dd10 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000dcc2:	2700      	movs	r7, #0
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000dcc4:	6000      	str	r0, [r0, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000dcc6:	63c4      	str	r4, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000dcc8:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000dccc:	6407      	str	r7, [r0, #64]	; 0x40
	taskENTER_CRITICAL();
9000dcce:	f7ff fd29 	bl	9000d724 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dcd2:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000dcd4:	63af      	str	r7, [r5, #56]	; 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000dcd6:	f105 0010 	add.w	r0, r5, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000dcda:	606a      	str	r2, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dcdc:	e9d5 310f 	ldrd	r3, r1, [r5, #60]	; 0x3c
9000dce0:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dce4:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dce6:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dce8:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dcea:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000dcec:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dcee:	60ea      	str	r2, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000dcf0:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000dcf4:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000dcf8:	f7ff fc60 	bl	9000d5bc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000dcfc:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000dd00:	f7ff fc5c 	bl	9000d5bc <vListInitialise>
	taskEXIT_CRITICAL();
9000dd04:	f7ff fd30 	bl	9000d768 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000dd08:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000dd0a:	63ae      	str	r6, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
9000dd0c:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
9000dd10:	4628      	mov	r0, r5
9000dd12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9000dd14 <xQueueGenericSend>:
{
9000dd14:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000dd18:	b084      	sub	sp, #16
9000dd1a:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
9000dd1c:	2800      	cmp	r0, #0
9000dd1e:	f000 8103 	beq.w	9000df28 <xQueueGenericSend+0x214>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000dd22:	4688      	mov	r8, r1
9000dd24:	4604      	mov	r4, r0
9000dd26:	461f      	mov	r7, r3
9000dd28:	2900      	cmp	r1, #0
9000dd2a:	f000 8097 	beq.w	9000de5c <xQueueGenericSend+0x148>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000dd2e:	2f02      	cmp	r7, #2
9000dd30:	d10b      	bne.n	9000dd4a <xQueueGenericSend+0x36>
9000dd32:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000dd34:	2b01      	cmp	r3, #1
9000dd36:	d008      	beq.n	9000dd4a <xQueueGenericSend+0x36>
9000dd38:	f04f 0350 	mov.w	r3, #80	; 0x50
9000dd3c:	f383 8811 	msr	BASEPRI, r3
9000dd40:	f3bf 8f6f 	isb	sy
9000dd44:	f3bf 8f4f 	dsb	sy
9000dd48:	e7fe      	b.n	9000dd48 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000dd4a:	f001 fd71 	bl	9000f830 <xTaskGetSchedulerState>
9000dd4e:	2800      	cmp	r0, #0
9000dd50:	f000 80f3 	beq.w	9000df3a <xQueueGenericSend+0x226>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000dd54:	f1a7 0902 	sub.w	r9, r7, #2
9000dd58:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dd5a:	f104 0624 	add.w	r6, r4, #36	; 0x24
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000dd5e:	fab9 f989 	clz	r9, r9
9000dd62:	ea4f 1959 	mov.w	r9, r9, lsr #5
		taskENTER_CRITICAL();
9000dd66:	f7ff fcdd 	bl	9000d724 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000dd6a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000dd6c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000dd6e:	429a      	cmp	r2, r3
9000dd70:	f0c0 80f0 	bcc.w	9000df54 <xQueueGenericSend+0x240>
9000dd74:	f1b9 0f00 	cmp.w	r9, #0
9000dd78:	f040 80ec 	bne.w	9000df54 <xQueueGenericSend+0x240>
				if( xTicksToWait == ( TickType_t ) 0 )
9000dd7c:	9b01      	ldr	r3, [sp, #4]
9000dd7e:	2b00      	cmp	r3, #0
9000dd80:	f000 8101 	beq.w	9000df86 <xQueueGenericSend+0x272>
				else if( xEntryTimeSet == pdFALSE )
9000dd84:	2d00      	cmp	r5, #0
9000dd86:	f000 80cb 	beq.w	9000df20 <xQueueGenericSend+0x20c>
		taskEXIT_CRITICAL();
9000dd8a:	f7ff fced 	bl	9000d768 <vPortExitCritical>
		vTaskSuspendAll();
9000dd8e:	f001 fb79 	bl	9000f484 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000dd92:	f7ff fcc7 	bl	9000d724 <vPortEnterCritical>
9000dd96:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000dd9a:	2bff      	cmp	r3, #255	; 0xff
9000dd9c:	d102      	bne.n	9000dda4 <xQueueGenericSend+0x90>
9000dd9e:	2300      	movs	r3, #0
9000dda0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
9000dda4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000dda8:	2bff      	cmp	r3, #255	; 0xff
9000ddaa:	d102      	bne.n	9000ddb2 <xQueueGenericSend+0x9e>
9000ddac:	2300      	movs	r3, #0
9000ddae:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000ddb2:	f7ff fcd9 	bl	9000d768 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000ddb6:	a901      	add	r1, sp, #4
9000ddb8:	a802      	add	r0, sp, #8
9000ddba:	f001 fce5 	bl	9000f788 <xTaskCheckForTimeOut>
9000ddbe:	2800      	cmp	r0, #0
9000ddc0:	f040 80e5 	bne.w	9000df8e <xQueueGenericSend+0x27a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
9000ddc4:	f7ff fcae 	bl	9000d724 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
9000ddc8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000ddca:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000ddcc:	429a      	cmp	r2, r3
9000ddce:	d052      	beq.n	9000de76 <xQueueGenericSend+0x162>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
9000ddd0:	f7ff fcca 	bl	9000d768 <vPortExitCritical>
	taskENTER_CRITICAL();
9000ddd4:	f7ff fca6 	bl	9000d724 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000ddd8:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
9000dddc:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ddde:	2d00      	cmp	r5, #0
9000dde0:	dc04      	bgt.n	9000ddec <xQueueGenericSend+0xd8>
9000dde2:	e011      	b.n	9000de08 <xQueueGenericSend+0xf4>
			--cTxLock;
9000dde4:	1e6a      	subs	r2, r5, #1
9000dde6:	b2d3      	uxtb	r3, r2
9000dde8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ddea:	b16b      	cbz	r3, 9000de08 <xQueueGenericSend+0xf4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ddec:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ddee:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ddf0:	b153      	cbz	r3, 9000de08 <xQueueGenericSend+0xf4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ddf2:	f001 fc73 	bl	9000f6dc <xTaskRemoveFromEventList>
9000ddf6:	2800      	cmp	r0, #0
9000ddf8:	d0f4      	beq.n	9000dde4 <xQueueGenericSend+0xd0>
						vTaskMissedYield();
9000ddfa:	f001 fd0d 	bl	9000f818 <vTaskMissedYield>
			--cTxLock;
9000ddfe:	1e6a      	subs	r2, r5, #1
9000de00:	b2d3      	uxtb	r3, r2
9000de02:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000de04:	2b00      	cmp	r3, #0
9000de06:	d1f1      	bne.n	9000ddec <xQueueGenericSend+0xd8>
		pxQueue->cTxLock = queueUNLOCKED;
9000de08:	23ff      	movs	r3, #255	; 0xff
9000de0a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000de0e:	f7ff fcab 	bl	9000d768 <vPortExitCritical>
	taskENTER_CRITICAL();
9000de12:	f7ff fc87 	bl	9000d724 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000de16:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
9000de1a:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000de1c:	2d00      	cmp	r5, #0
9000de1e:	dd14      	ble.n	9000de4a <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000de20:	f104 0a10 	add.w	sl, r4, #16
9000de24:	e003      	b.n	9000de2e <xQueueGenericSend+0x11a>
				--cRxLock;
9000de26:	1e6a      	subs	r2, r5, #1
9000de28:	b2d3      	uxtb	r3, r2
9000de2a:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000de2c:	b16b      	cbz	r3, 9000de4a <xQueueGenericSend+0x136>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000de2e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000de30:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000de32:	b153      	cbz	r3, 9000de4a <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000de34:	f001 fc52 	bl	9000f6dc <xTaskRemoveFromEventList>
9000de38:	2800      	cmp	r0, #0
9000de3a:	d0f4      	beq.n	9000de26 <xQueueGenericSend+0x112>
					vTaskMissedYield();
9000de3c:	f001 fcec 	bl	9000f818 <vTaskMissedYield>
				--cRxLock;
9000de40:	1e6a      	subs	r2, r5, #1
9000de42:	b2d3      	uxtb	r3, r2
9000de44:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000de46:	2b00      	cmp	r3, #0
9000de48:	d1f1      	bne.n	9000de2e <xQueueGenericSend+0x11a>
		pxQueue->cRxLock = queueUNLOCKED;
9000de4a:	23ff      	movs	r3, #255	; 0xff
9000de4c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000de50:	f7ff fc8a 	bl	9000d768 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000de54:	f001 fb1e 	bl	9000f494 <xTaskResumeAll>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000de58:	2501      	movs	r5, #1
9000de5a:	e784      	b.n	9000dd66 <xQueueGenericSend+0x52>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000de5c:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000de5e:	2b00      	cmp	r3, #0
9000de60:	f43f af65 	beq.w	9000dd2e <xQueueGenericSend+0x1a>
9000de64:	f04f 0350 	mov.w	r3, #80	; 0x50
9000de68:	f383 8811 	msr	BASEPRI, r3
9000de6c:	f3bf 8f6f 	isb	sy
9000de70:	f3bf 8f4f 	dsb	sy
9000de74:	e7fe      	b.n	9000de74 <xQueueGenericSend+0x160>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000de76:	f104 0a10 	add.w	sl, r4, #16
	taskEXIT_CRITICAL();
9000de7a:	f7ff fc75 	bl	9000d768 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000de7e:	9901      	ldr	r1, [sp, #4]
9000de80:	4650      	mov	r0, sl
9000de82:	f001 fb9d 	bl	9000f5c0 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000de86:	f7ff fc4d 	bl	9000d724 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000de8a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000de8e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000de90:	2d00      	cmp	r5, #0
9000de92:	dc04      	bgt.n	9000de9e <xQueueGenericSend+0x18a>
9000de94:	e011      	b.n	9000deba <xQueueGenericSend+0x1a6>
			--cTxLock;
9000de96:	1e6b      	subs	r3, r5, #1
9000de98:	b2da      	uxtb	r2, r3
9000de9a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000de9c:	b16a      	cbz	r2, 9000deba <xQueueGenericSend+0x1a6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000de9e:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dea0:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000dea2:	b153      	cbz	r3, 9000deba <xQueueGenericSend+0x1a6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dea4:	f001 fc1a 	bl	9000f6dc <xTaskRemoveFromEventList>
9000dea8:	2800      	cmp	r0, #0
9000deaa:	d0f4      	beq.n	9000de96 <xQueueGenericSend+0x182>
						vTaskMissedYield();
9000deac:	f001 fcb4 	bl	9000f818 <vTaskMissedYield>
			--cTxLock;
9000deb0:	1e6b      	subs	r3, r5, #1
9000deb2:	b2da      	uxtb	r2, r3
9000deb4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000deb6:	2a00      	cmp	r2, #0
9000deb8:	d1f1      	bne.n	9000de9e <xQueueGenericSend+0x18a>
		pxQueue->cTxLock = queueUNLOCKED;
9000deba:	23ff      	movs	r3, #255	; 0xff
9000debc:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000dec0:	f7ff fc52 	bl	9000d768 <vPortExitCritical>
	taskENTER_CRITICAL();
9000dec4:	f7ff fc2e 	bl	9000d724 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000dec8:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000decc:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000dece:	2d00      	cmp	r5, #0
9000ded0:	dc04      	bgt.n	9000dedc <xQueueGenericSend+0x1c8>
9000ded2:	e011      	b.n	9000def8 <xQueueGenericSend+0x1e4>
				--cRxLock;
9000ded4:	1e6b      	subs	r3, r5, #1
9000ded6:	b2da      	uxtb	r2, r3
9000ded8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000deda:	b16a      	cbz	r2, 9000def8 <xQueueGenericSend+0x1e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000dedc:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000dede:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000dee0:	b153      	cbz	r3, 9000def8 <xQueueGenericSend+0x1e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000dee2:	f001 fbfb 	bl	9000f6dc <xTaskRemoveFromEventList>
9000dee6:	2800      	cmp	r0, #0
9000dee8:	d0f4      	beq.n	9000ded4 <xQueueGenericSend+0x1c0>
					vTaskMissedYield();
9000deea:	f001 fc95 	bl	9000f818 <vTaskMissedYield>
				--cRxLock;
9000deee:	1e6b      	subs	r3, r5, #1
9000def0:	b2da      	uxtb	r2, r3
9000def2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000def4:	2a00      	cmp	r2, #0
9000def6:	d1f1      	bne.n	9000dedc <xQueueGenericSend+0x1c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000def8:	23ff      	movs	r3, #255	; 0xff
9000defa:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000defe:	f7ff fc33 	bl	9000d768 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000df02:	f001 fac7 	bl	9000f494 <xTaskResumeAll>
9000df06:	2800      	cmp	r0, #0
9000df08:	d1a6      	bne.n	9000de58 <xQueueGenericSend+0x144>
					portYIELD_WITHIN_API();
9000df0a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000df0e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000df12:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000df16:	f3bf 8f4f 	dsb	sy
9000df1a:	f3bf 8f6f 	isb	sy
9000df1e:	e79b      	b.n	9000de58 <xQueueGenericSend+0x144>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000df20:	a802      	add	r0, sp, #8
9000df22:	f001 fc25 	bl	9000f770 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000df26:	e730      	b.n	9000dd8a <xQueueGenericSend+0x76>
9000df28:	f04f 0350 	mov.w	r3, #80	; 0x50
9000df2c:	f383 8811 	msr	BASEPRI, r3
9000df30:	f3bf 8f6f 	isb	sy
9000df34:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000df38:	e7fe      	b.n	9000df38 <xQueueGenericSend+0x224>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000df3a:	9b01      	ldr	r3, [sp, #4]
9000df3c:	2b00      	cmp	r3, #0
9000df3e:	f43f af09 	beq.w	9000dd54 <xQueueGenericSend+0x40>
9000df42:	f04f 0350 	mov.w	r3, #80	; 0x50
9000df46:	f383 8811 	msr	BASEPRI, r3
9000df4a:	f3bf 8f6f 	isb	sy
9000df4e:	f3bf 8f4f 	dsb	sy
9000df52:	e7fe      	b.n	9000df52 <xQueueGenericSend+0x23e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000df54:	463a      	mov	r2, r7
9000df56:	4641      	mov	r1, r8
9000df58:	4620      	mov	r0, r4
9000df5a:	f7ff fd43 	bl	9000d9e4 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000df5e:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000df60:	2b00      	cmp	r3, #0
9000df62:	d152      	bne.n	9000e00a <xQueueGenericSend+0x2f6>
					else if( xYieldRequired != pdFALSE )
9000df64:	b148      	cbz	r0, 9000df7a <xQueueGenericSend+0x266>
						queueYIELD_IF_USING_PREEMPTION();
9000df66:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000df6a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000df6e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000df72:	f3bf 8f4f 	dsb	sy
9000df76:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
9000df7a:	f7ff fbf5 	bl	9000d768 <vPortExitCritical>
				return pdPASS;
9000df7e:	2001      	movs	r0, #1
}
9000df80:	b004      	add	sp, #16
9000df82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					taskEXIT_CRITICAL();
9000df86:	f7ff fbef 	bl	9000d768 <vPortExitCritical>
					return errQUEUE_FULL;
9000df8a:	4648      	mov	r0, r9
9000df8c:	e7f8      	b.n	9000df80 <xQueueGenericSend+0x26c>
	taskENTER_CRITICAL();
9000df8e:	f7ff fbc9 	bl	9000d724 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000df92:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000df96:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000df98:	2d00      	cmp	r5, #0
9000df9a:	dd10      	ble.n	9000dfbe <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000df9c:	f104 0624 	add.w	r6, r4, #36	; 0x24
9000dfa0:	e003      	b.n	9000dfaa <xQueueGenericSend+0x296>
			--cTxLock;
9000dfa2:	1e6b      	subs	r3, r5, #1
9000dfa4:	b2da      	uxtb	r2, r3
9000dfa6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000dfa8:	b14a      	cbz	r2, 9000dfbe <xQueueGenericSend+0x2aa>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000dfaa:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dfac:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000dfae:	b133      	cbz	r3, 9000dfbe <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dfb0:	f001 fb94 	bl	9000f6dc <xTaskRemoveFromEventList>
9000dfb4:	2800      	cmp	r0, #0
9000dfb6:	d0f4      	beq.n	9000dfa2 <xQueueGenericSend+0x28e>
						vTaskMissedYield();
9000dfb8:	f001 fc2e 	bl	9000f818 <vTaskMissedYield>
9000dfbc:	e7f1      	b.n	9000dfa2 <xQueueGenericSend+0x28e>
		pxQueue->cTxLock = queueUNLOCKED;
9000dfbe:	23ff      	movs	r3, #255	; 0xff
9000dfc0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000dfc4:	f7ff fbd0 	bl	9000d768 <vPortExitCritical>
	taskENTER_CRITICAL();
9000dfc8:	f7ff fbac 	bl	9000d724 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000dfcc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000dfd0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000dfd2:	2d00      	cmp	r5, #0
9000dfd4:	dd10      	ble.n	9000dff8 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000dfd6:	f104 0610 	add.w	r6, r4, #16
9000dfda:	e003      	b.n	9000dfe4 <xQueueGenericSend+0x2d0>
				--cRxLock;
9000dfdc:	1e6b      	subs	r3, r5, #1
9000dfde:	b2da      	uxtb	r2, r3
9000dfe0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000dfe2:	b14a      	cbz	r2, 9000dff8 <xQueueGenericSend+0x2e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000dfe4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000dfe6:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000dfe8:	b133      	cbz	r3, 9000dff8 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000dfea:	f001 fb77 	bl	9000f6dc <xTaskRemoveFromEventList>
9000dfee:	2800      	cmp	r0, #0
9000dff0:	d0f4      	beq.n	9000dfdc <xQueueGenericSend+0x2c8>
					vTaskMissedYield();
9000dff2:	f001 fc11 	bl	9000f818 <vTaskMissedYield>
9000dff6:	e7f1      	b.n	9000dfdc <xQueueGenericSend+0x2c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000dff8:	23ff      	movs	r3, #255	; 0xff
9000dffa:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000dffe:	f7ff fbb3 	bl	9000d768 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000e002:	f001 fa47 	bl	9000f494 <xTaskResumeAll>
			return errQUEUE_FULL;
9000e006:	2000      	movs	r0, #0
9000e008:	e7ba      	b.n	9000df80 <xQueueGenericSend+0x26c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e00a:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000e00e:	f001 fb65 	bl	9000f6dc <xTaskRemoveFromEventList>
9000e012:	2800      	cmp	r0, #0
9000e014:	d0b1      	beq.n	9000df7a <xQueueGenericSend+0x266>
9000e016:	e7a6      	b.n	9000df66 <xQueueGenericSend+0x252>

9000e018 <xQueueCreateMutexStatic>:
		configASSERT( pxStaticQueue != NULL );
9000e018:	b179      	cbz	r1, 9000e03a <xQueueCreateMutexStatic+0x22>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000e01a:	2350      	movs	r3, #80	; 0x50
	{
9000e01c:	b570      	push	{r4, r5, r6, lr}
9000e01e:	b082      	sub	sp, #8
			volatile size_t xSize = sizeof( StaticQueue_t );
9000e020:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
9000e022:	9b01      	ldr	r3, [sp, #4]
9000e024:	2b50      	cmp	r3, #80	; 0x50
9000e026:	d011      	beq.n	9000e04c <xQueueCreateMutexStatic+0x34>
9000e028:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e02c:	f383 8811 	msr	BASEPRI, r3
9000e030:	f3bf 8f6f 	isb	sy
9000e034:	f3bf 8f4f 	dsb	sy
9000e038:	e7fe      	b.n	9000e038 <xQueueCreateMutexStatic+0x20>
9000e03a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e03e:	f383 8811 	msr	BASEPRI, r3
9000e042:	f3bf 8f6f 	isb	sy
9000e046:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000e04a:	e7fe      	b.n	9000e04a <xQueueCreateMutexStatic+0x32>
	pxNewQueue->uxItemSize = uxItemSize;
9000e04c:	2600      	movs	r6, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000e04e:	2301      	movs	r3, #1
9000e050:	460c      	mov	r4, r1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000e052:	6009      	str	r1, [r1, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000e054:	f881 3046 	strb.w	r3, [r1, #70]	; 0x46
9000e058:	4605      	mov	r5, r0
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000e05a:	9a01      	ldr	r2, [sp, #4]
	pxNewQueue->uxItemSize = uxItemSize;
9000e05c:	e9c1 360f 	strd	r3, r6, [r1, #60]	; 0x3c
	taskENTER_CRITICAL();
9000e060:	f7ff fb60 	bl	9000d724 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e064:	6821      	ldr	r1, [r4, #0]
		pxQueue->cRxLock = queueUNLOCKED;
9000e066:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000e068:	63a6      	str	r6, [r4, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000e06a:	6061      	str	r1, [r4, #4]
		pxQueue->cRxLock = queueUNLOCKED;
9000e06c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000e070:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e074:	e9d4 200f 	ldrd	r2, r0, [r4, #60]	; 0x3c
9000e078:	fb00 f202 	mul.w	r2, r0, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e07c:	1a10      	subs	r0, r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e07e:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e080:	4401      	add	r1, r0
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e082:	f104 0010 	add.w	r0, r4, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e086:	e9c4 2102 	strd	r2, r1, [r4, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e08a:	f7ff fa97 	bl	9000d5bc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000e08e:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000e092:	f7ff fa93 	bl	9000d5bc <vListInitialise>
	taskEXIT_CRITICAL();
9000e096:	f7ff fb67 	bl	9000d768 <vPortExitCritical>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000e09a:	4633      	mov	r3, r6
9000e09c:	4632      	mov	r2, r6
9000e09e:	4631      	mov	r1, r6
9000e0a0:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000e0a2:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
9000e0a6:	60a6      	str	r6, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
9000e0a8:	6026      	str	r6, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
9000e0aa:	60e6      	str	r6, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000e0ac:	f7ff fe32 	bl	9000dd14 <xQueueGenericSend>
	}
9000e0b0:	4620      	mov	r0, r4
9000e0b2:	b002      	add	sp, #8
9000e0b4:	bd70      	pop	{r4, r5, r6, pc}
9000e0b6:	bf00      	nop

9000e0b8 <xQueueGiveMutexRecursive>:
	{
9000e0b8:	b538      	push	{r3, r4, r5, lr}
		configASSERT( pxMutex );
9000e0ba:	b138      	cbz	r0, 9000e0cc <xQueueGiveMutexRecursive+0x14>
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
9000e0bc:	6885      	ldr	r5, [r0, #8]
9000e0be:	4604      	mov	r4, r0
9000e0c0:	f001 fbb0 	bl	9000f824 <xTaskGetCurrentTaskHandle>
9000e0c4:	4285      	cmp	r5, r0
9000e0c6:	d00a      	beq.n	9000e0de <xQueueGiveMutexRecursive+0x26>
			xReturn = pdFAIL;
9000e0c8:	2000      	movs	r0, #0
	}
9000e0ca:	bd38      	pop	{r3, r4, r5, pc}
9000e0cc:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e0d0:	f383 8811 	msr	BASEPRI, r3
9000e0d4:	f3bf 8f6f 	isb	sy
9000e0d8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxMutex );
9000e0dc:	e7fe      	b.n	9000e0dc <xQueueGiveMutexRecursive+0x24>
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
9000e0de:	68e3      	ldr	r3, [r4, #12]
9000e0e0:	3b01      	subs	r3, #1
9000e0e2:	60e3      	str	r3, [r4, #12]
			if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
9000e0e4:	b10b      	cbz	r3, 9000e0ea <xQueueGiveMutexRecursive+0x32>
			xReturn = pdPASS;
9000e0e6:	2001      	movs	r0, #1
	}
9000e0e8:	bd38      	pop	{r3, r4, r5, pc}
				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
9000e0ea:	461a      	mov	r2, r3
9000e0ec:	4619      	mov	r1, r3
9000e0ee:	4620      	mov	r0, r4
9000e0f0:	f7ff fe10 	bl	9000dd14 <xQueueGenericSend>
			xReturn = pdPASS;
9000e0f4:	2001      	movs	r0, #1
	}
9000e0f6:	bd38      	pop	{r3, r4, r5, pc}

9000e0f8 <xQueueCreateMutex>:
	{
9000e0f8:	b570      	push	{r4, r5, r6, lr}
9000e0fa:	4605      	mov	r5, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000e0fc:	2050      	movs	r0, #80	; 0x50
9000e0fe:	f7ff f93b 	bl	9000d378 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000e102:	4604      	mov	r4, r0
9000e104:	b370      	cbz	r0, 9000e164 <xQueueCreateMutex+0x6c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000e106:	2600      	movs	r6, #0
	pxNewQueue->uxLength = uxQueueLength;
9000e108:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000e10a:	6020      	str	r0, [r4, #0]
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000e10c:	f880 6046 	strb.w	r6, [r0, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000e110:	e9c0 360f 	strd	r3, r6, [r0, #60]	; 0x3c
	taskENTER_CRITICAL();
9000e114:	f7ff fb06 	bl	9000d724 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e118:	6821      	ldr	r1, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000e11a:	63a6      	str	r6, [r4, #56]	; 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e11c:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000e120:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e122:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
9000e126:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e12a:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e12c:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e12e:	4419      	add	r1, r3
		pxQueue->cRxLock = queueUNLOCKED;
9000e130:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e132:	e9c4 2102 	strd	r2, r1, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000e136:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000e13a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e13e:	f7ff fa3d 	bl	9000d5bc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000e142:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000e146:	f7ff fa39 	bl	9000d5bc <vListInitialise>
	taskEXIT_CRITICAL();
9000e14a:	f7ff fb0d 	bl	9000d768 <vPortExitCritical>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000e14e:	4633      	mov	r3, r6
9000e150:	4632      	mov	r2, r6
9000e152:	4631      	mov	r1, r6
9000e154:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000e156:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
9000e15a:	60a6      	str	r6, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
9000e15c:	6026      	str	r6, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
9000e15e:	60e6      	str	r6, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000e160:	f7ff fdd8 	bl	9000dd14 <xQueueGenericSend>
	}
9000e164:	4620      	mov	r0, r4
9000e166:	bd70      	pop	{r4, r5, r6, pc}

9000e168 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
9000e168:	2800      	cmp	r0, #0
9000e16a:	d04e      	beq.n	9000e20a <xQueueGenericSendFromISR+0xa2>
{
9000e16c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000e170:	460e      	mov	r6, r1
9000e172:	4604      	mov	r4, r0
9000e174:	4617      	mov	r7, r2
9000e176:	461d      	mov	r5, r3
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e178:	b339      	cbz	r1, 9000e1ca <xQueueGenericSendFromISR+0x62>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000e17a:	2d02      	cmp	r5, #2
9000e17c:	d10b      	bne.n	9000e196 <xQueueGenericSendFromISR+0x2e>
9000e17e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000e180:	2b01      	cmp	r3, #1
9000e182:	d008      	beq.n	9000e196 <xQueueGenericSendFromISR+0x2e>
9000e184:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e188:	f383 8811 	msr	BASEPRI, r3
9000e18c:	f3bf 8f6f 	isb	sy
9000e190:	f3bf 8f4f 	dsb	sy
9000e194:	e7fe      	b.n	9000e194 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000e196:	f7ff fbf7 	bl	9000d988 <vPortValidateInterruptPriority>
	__asm volatile
9000e19a:	f3ef 8811 	mrs	r8, BASEPRI
9000e19e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e1a2:	f383 8811 	msr	BASEPRI, r3
9000e1a6:	f3bf 8f6f 	isb	sy
9000e1aa:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000e1ae:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000e1b0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000e1b2:	429a      	cmp	r2, r3
9000e1b4:	d315      	bcc.n	9000e1e2 <xQueueGenericSendFromISR+0x7a>
9000e1b6:	f1a5 0002 	sub.w	r0, r5, #2
9000e1ba:	fab0 f080 	clz	r0, r0
9000e1be:	0940      	lsrs	r0, r0, #5
9000e1c0:	b978      	cbnz	r0, 9000e1e2 <xQueueGenericSendFromISR+0x7a>
	__asm volatile
9000e1c2:	f388 8811 	msr	BASEPRI, r8
}
9000e1c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e1ca:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000e1cc:	2b00      	cmp	r3, #0
9000e1ce:	d0d4      	beq.n	9000e17a <xQueueGenericSendFromISR+0x12>
	__asm volatile
9000e1d0:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e1d4:	f383 8811 	msr	BASEPRI, r3
9000e1d8:	f3bf 8f6f 	isb	sy
9000e1dc:	f3bf 8f4f 	dsb	sy
9000e1e0:	e7fe      	b.n	9000e1e0 <xQueueGenericSendFromISR+0x78>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000e1e2:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
9000e1e4:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000e1e8:	4631      	mov	r1, r6
9000e1ea:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
9000e1ec:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e1ee:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000e1f0:	f7ff fbf8 	bl	9000d9e4 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
9000e1f4:	1c6b      	adds	r3, r5, #1
9000e1f6:	d011      	beq.n	9000e21c <xQueueGenericSendFromISR+0xb4>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000e1f8:	1c6b      	adds	r3, r5, #1
			xReturn = pdPASS;
9000e1fa:	2001      	movs	r0, #1
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000e1fc:	b25b      	sxtb	r3, r3
9000e1fe:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	__asm volatile
9000e202:	f388 8811 	msr	BASEPRI, r8
}
9000e206:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
9000e20a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e20e:	f383 8811 	msr	BASEPRI, r3
9000e212:	f3bf 8f6f 	isb	sy
9000e216:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e21a:	e7fe      	b.n	9000e21a <xQueueGenericSendFromISR+0xb2>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e21c:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000e21e:	b90b      	cbnz	r3, 9000e224 <xQueueGenericSendFromISR+0xbc>
			xReturn = pdPASS;
9000e220:	2001      	movs	r0, #1
9000e222:	e7ce      	b.n	9000e1c2 <xQueueGenericSendFromISR+0x5a>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e224:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000e228:	f001 fa58 	bl	9000f6dc <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000e22c:	2800      	cmp	r0, #0
9000e22e:	d0f7      	beq.n	9000e220 <xQueueGenericSendFromISR+0xb8>
9000e230:	2f00      	cmp	r7, #0
9000e232:	d0f5      	beq.n	9000e220 <xQueueGenericSendFromISR+0xb8>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000e234:	2301      	movs	r3, #1
			xReturn = pdPASS;
9000e236:	4618      	mov	r0, r3
								*pxHigherPriorityTaskWoken = pdTRUE;
9000e238:	603b      	str	r3, [r7, #0]
9000e23a:	e7c2      	b.n	9000e1c2 <xQueueGenericSendFromISR+0x5a>

9000e23c <xQueueGiveFromISR>:
	configASSERT( pxQueue );
9000e23c:	b360      	cbz	r0, 9000e298 <xQueueGiveFromISR+0x5c>
	configASSERT( pxQueue->uxItemSize == 0 );
9000e23e:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
9000e240:	b570      	push	{r4, r5, r6, lr}
9000e242:	4604      	mov	r4, r0
	configASSERT( pxQueue->uxItemSize == 0 );
9000e244:	b143      	cbz	r3, 9000e258 <xQueueGiveFromISR+0x1c>
9000e246:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e24a:	f383 8811 	msr	BASEPRI, r3
9000e24e:	f3bf 8f6f 	isb	sy
9000e252:	f3bf 8f4f 	dsb	sy
9000e256:	e7fe      	b.n	9000e256 <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000e258:	6803      	ldr	r3, [r0, #0]
9000e25a:	460d      	mov	r5, r1
9000e25c:	b32b      	cbz	r3, 9000e2aa <xQueueGiveFromISR+0x6e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000e25e:	f7ff fb93 	bl	9000d988 <vPortValidateInterruptPriority>
	__asm volatile
9000e262:	f3ef 8611 	mrs	r6, BASEPRI
9000e266:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e26a:	f383 8811 	msr	BASEPRI, r3
9000e26e:	f3bf 8f6f 	isb	sy
9000e272:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e276:	6ba3      	ldr	r3, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
9000e278:	6be2      	ldr	r2, [r4, #60]	; 0x3c
9000e27a:	429a      	cmp	r2, r3
9000e27c:	d921      	bls.n	9000e2c2 <xQueueGiveFromISR+0x86>
			const int8_t cTxLock = pxQueue->cTxLock;
9000e27e:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e282:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
9000e284:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e286:	63a3      	str	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
9000e288:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
9000e28a:	d01e      	beq.n	9000e2ca <xQueueGiveFromISR+0x8e>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000e28c:	3301      	adds	r3, #1
			xReturn = pdPASS;
9000e28e:	2001      	movs	r0, #1
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000e290:	b25b      	sxtb	r3, r3
9000e292:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000e296:	e015      	b.n	9000e2c4 <xQueueGiveFromISR+0x88>
	__asm volatile
9000e298:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e29c:	f383 8811 	msr	BASEPRI, r3
9000e2a0:	f3bf 8f6f 	isb	sy
9000e2a4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e2a8:	e7fe      	b.n	9000e2a8 <xQueueGiveFromISR+0x6c>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000e2aa:	6883      	ldr	r3, [r0, #8]
9000e2ac:	2b00      	cmp	r3, #0
9000e2ae:	d0d6      	beq.n	9000e25e <xQueueGiveFromISR+0x22>
9000e2b0:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e2b4:	f383 8811 	msr	BASEPRI, r3
9000e2b8:	f3bf 8f6f 	isb	sy
9000e2bc:	f3bf 8f4f 	dsb	sy
9000e2c0:	e7fe      	b.n	9000e2c0 <xQueueGiveFromISR+0x84>
			xReturn = errQUEUE_FULL;
9000e2c2:	2000      	movs	r0, #0
	__asm volatile
9000e2c4:	f386 8811 	msr	BASEPRI, r6
}
9000e2c8:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e2ca:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000e2cc:	b90b      	cbnz	r3, 9000e2d2 <xQueueGiveFromISR+0x96>
			xReturn = pdPASS;
9000e2ce:	2001      	movs	r0, #1
9000e2d0:	e7f8      	b.n	9000e2c4 <xQueueGiveFromISR+0x88>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e2d2:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000e2d6:	f001 fa01 	bl	9000f6dc <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000e2da:	2d00      	cmp	r5, #0
9000e2dc:	d0f7      	beq.n	9000e2ce <xQueueGiveFromISR+0x92>
9000e2de:	2800      	cmp	r0, #0
9000e2e0:	d0f5      	beq.n	9000e2ce <xQueueGiveFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000e2e2:	2301      	movs	r3, #1
			xReturn = pdPASS;
9000e2e4:	4618      	mov	r0, r3
								*pxHigherPriorityTaskWoken = pdTRUE;
9000e2e6:	602b      	str	r3, [r5, #0]
9000e2e8:	e7ec      	b.n	9000e2c4 <xQueueGiveFromISR+0x88>
9000e2ea:	bf00      	nop

9000e2ec <xQueueReceive>:
{
9000e2ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000e2f0:	b085      	sub	sp, #20
9000e2f2:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
9000e2f4:	2800      	cmp	r0, #0
9000e2f6:	f000 815c 	beq.w	9000e5b2 <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e2fa:	460f      	mov	r7, r1
9000e2fc:	4604      	mov	r4, r0
9000e2fe:	2900      	cmp	r1, #0
9000e300:	d079      	beq.n	9000e3f6 <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e302:	f001 fa95 	bl	9000f830 <xTaskGetSchedulerState>
9000e306:	2800      	cmp	r0, #0
9000e308:	f000 8081 	beq.w	9000e40e <xQueueReceive+0x122>
		taskENTER_CRITICAL();
9000e30c:	f7ff fa0a 	bl	9000d724 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e310:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e312:	2d00      	cmp	r5, #0
9000e314:	f040 8138 	bne.w	9000e588 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
9000e318:	9b01      	ldr	r3, [sp, #4]
9000e31a:	2b00      	cmp	r3, #0
9000e31c:	f000 80d5 	beq.w	9000e4ca <xQueueReceive+0x1de>
		prvLockQueue( pxQueue );
9000e320:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e322:	f104 0624 	add.w	r6, r4, #36	; 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
9000e326:	a802      	add	r0, sp, #8
9000e328:	f001 fa22 	bl	9000f770 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
9000e32c:	f7ff fa1c 	bl	9000d768 <vPortExitCritical>
		vTaskSuspendAll();
9000e330:	f001 f8a8 	bl	9000f484 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000e334:	f7ff f9f6 	bl	9000d724 <vPortEnterCritical>
9000e338:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000e33c:	2bff      	cmp	r3, #255	; 0xff
9000e33e:	d101      	bne.n	9000e344 <xQueueReceive+0x58>
9000e340:	f884 8044 	strb.w	r8, [r4, #68]	; 0x44
9000e344:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000e348:	2bff      	cmp	r3, #255	; 0xff
9000e34a:	d101      	bne.n	9000e350 <xQueueReceive+0x64>
9000e34c:	f884 8045 	strb.w	r8, [r4, #69]	; 0x45
9000e350:	f7ff fa0a 	bl	9000d768 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000e354:	a901      	add	r1, sp, #4
9000e356:	a802      	add	r0, sp, #8
9000e358:	f001 fa16 	bl	9000f788 <xTaskCheckForTimeOut>
9000e35c:	2800      	cmp	r0, #0
9000e35e:	d163      	bne.n	9000e428 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
9000e360:	f7ff f9e0 	bl	9000d724 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000e364:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000e366:	2b00      	cmp	r3, #0
9000e368:	f000 80b5 	beq.w	9000e4d6 <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
9000e36c:	f7ff f9fc 	bl	9000d768 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e370:	f7ff f9d8 	bl	9000d724 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e374:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000e378:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e37a:	2d00      	cmp	r5, #0
9000e37c:	dc04      	bgt.n	9000e388 <xQueueReceive+0x9c>
9000e37e:	e011      	b.n	9000e3a4 <xQueueReceive+0xb8>
			--cTxLock;
9000e380:	1e6b      	subs	r3, r5, #1
9000e382:	b2da      	uxtb	r2, r3
9000e384:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e386:	b16a      	cbz	r2, 9000e3a4 <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e388:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e38a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e38c:	b153      	cbz	r3, 9000e3a4 <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e38e:	f001 f9a5 	bl	9000f6dc <xTaskRemoveFromEventList>
9000e392:	2800      	cmp	r0, #0
9000e394:	d0f4      	beq.n	9000e380 <xQueueReceive+0x94>
						vTaskMissedYield();
9000e396:	f001 fa3f 	bl	9000f818 <vTaskMissedYield>
			--cTxLock;
9000e39a:	1e6b      	subs	r3, r5, #1
9000e39c:	b2da      	uxtb	r2, r3
9000e39e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e3a0:	2a00      	cmp	r2, #0
9000e3a2:	d1f1      	bne.n	9000e388 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
9000e3a4:	23ff      	movs	r3, #255	; 0xff
9000e3a6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000e3aa:	f7ff f9dd 	bl	9000d768 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e3ae:	f7ff f9b9 	bl	9000d724 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e3b2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000e3b6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e3b8:	2d00      	cmp	r5, #0
9000e3ba:	dd14      	ble.n	9000e3e6 <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e3bc:	f104 0910 	add.w	r9, r4, #16
9000e3c0:	e003      	b.n	9000e3ca <xQueueReceive+0xde>
				--cRxLock;
9000e3c2:	1e6b      	subs	r3, r5, #1
9000e3c4:	b2da      	uxtb	r2, r3
9000e3c6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e3c8:	b16a      	cbz	r2, 9000e3e6 <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e3ca:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e3cc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e3ce:	b153      	cbz	r3, 9000e3e6 <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e3d0:	f001 f984 	bl	9000f6dc <xTaskRemoveFromEventList>
9000e3d4:	2800      	cmp	r0, #0
9000e3d6:	d0f4      	beq.n	9000e3c2 <xQueueReceive+0xd6>
					vTaskMissedYield();
9000e3d8:	f001 fa1e 	bl	9000f818 <vTaskMissedYield>
				--cRxLock;
9000e3dc:	1e6b      	subs	r3, r5, #1
9000e3de:	b2da      	uxtb	r2, r3
9000e3e0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e3e2:	2a00      	cmp	r2, #0
9000e3e4:	d1f1      	bne.n	9000e3ca <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
9000e3e6:	23ff      	movs	r3, #255	; 0xff
9000e3e8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000e3ec:	f7ff f9bc 	bl	9000d768 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000e3f0:	f001 f850 	bl	9000f494 <xTaskResumeAll>
		taskENTER_CRITICAL();
9000e3f4:	e060      	b.n	9000e4b8 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e3f6:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000e3f8:	2b00      	cmp	r3, #0
9000e3fa:	d082      	beq.n	9000e302 <xQueueReceive+0x16>
	__asm volatile
9000e3fc:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e400:	f383 8811 	msr	BASEPRI, r3
9000e404:	f3bf 8f6f 	isb	sy
9000e408:	f3bf 8f4f 	dsb	sy
9000e40c:	e7fe      	b.n	9000e40c <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e40e:	9b01      	ldr	r3, [sp, #4]
9000e410:	2b00      	cmp	r3, #0
9000e412:	f43f af7b 	beq.w	9000e30c <xQueueReceive+0x20>
9000e416:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e41a:	f383 8811 	msr	BASEPRI, r3
9000e41e:	f3bf 8f6f 	isb	sy
9000e422:	f3bf 8f4f 	dsb	sy
9000e426:	e7fe      	b.n	9000e426 <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
9000e428:	f7ff f97c 	bl	9000d724 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e42c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000e430:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e432:	2d00      	cmp	r5, #0
9000e434:	dc04      	bgt.n	9000e440 <xQueueReceive+0x154>
9000e436:	e011      	b.n	9000e45c <xQueueReceive+0x170>
			--cTxLock;
9000e438:	1e6b      	subs	r3, r5, #1
9000e43a:	b2da      	uxtb	r2, r3
9000e43c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e43e:	b16a      	cbz	r2, 9000e45c <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e440:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e442:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e444:	b153      	cbz	r3, 9000e45c <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e446:	f001 f949 	bl	9000f6dc <xTaskRemoveFromEventList>
9000e44a:	2800      	cmp	r0, #0
9000e44c:	d0f4      	beq.n	9000e438 <xQueueReceive+0x14c>
						vTaskMissedYield();
9000e44e:	f001 f9e3 	bl	9000f818 <vTaskMissedYield>
			--cTxLock;
9000e452:	1e6b      	subs	r3, r5, #1
9000e454:	b2da      	uxtb	r2, r3
9000e456:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e458:	2a00      	cmp	r2, #0
9000e45a:	d1f1      	bne.n	9000e440 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
9000e45c:	23ff      	movs	r3, #255	; 0xff
9000e45e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000e462:	f7ff f981 	bl	9000d768 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e466:	f7ff f95d 	bl	9000d724 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e46a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000e46e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e470:	2d00      	cmp	r5, #0
9000e472:	dd14      	ble.n	9000e49e <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e474:	f104 0910 	add.w	r9, r4, #16
9000e478:	e003      	b.n	9000e482 <xQueueReceive+0x196>
				--cRxLock;
9000e47a:	1e6b      	subs	r3, r5, #1
9000e47c:	b2da      	uxtb	r2, r3
9000e47e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e480:	b16a      	cbz	r2, 9000e49e <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e482:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e484:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e486:	b153      	cbz	r3, 9000e49e <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e488:	f001 f928 	bl	9000f6dc <xTaskRemoveFromEventList>
9000e48c:	2800      	cmp	r0, #0
9000e48e:	d0f4      	beq.n	9000e47a <xQueueReceive+0x18e>
					vTaskMissedYield();
9000e490:	f001 f9c2 	bl	9000f818 <vTaskMissedYield>
				--cRxLock;
9000e494:	1e6b      	subs	r3, r5, #1
9000e496:	b2da      	uxtb	r2, r3
9000e498:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e49a:	2a00      	cmp	r2, #0
9000e49c:	d1f1      	bne.n	9000e482 <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
9000e49e:	23ff      	movs	r3, #255	; 0xff
9000e4a0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000e4a4:	f7ff f960 	bl	9000d768 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000e4a8:	f000 fff4 	bl	9000f494 <xTaskResumeAll>
	taskENTER_CRITICAL();
9000e4ac:	f7ff f93a 	bl	9000d724 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000e4b0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000e4b2:	b153      	cbz	r3, 9000e4ca <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
9000e4b4:	f7ff f958 	bl	9000d768 <vPortExitCritical>
		taskENTER_CRITICAL();
9000e4b8:	f7ff f934 	bl	9000d724 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e4bc:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e4be:	2d00      	cmp	r5, #0
9000e4c0:	d162      	bne.n	9000e588 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
9000e4c2:	9b01      	ldr	r3, [sp, #4]
9000e4c4:	2b00      	cmp	r3, #0
9000e4c6:	f47f af31 	bne.w	9000e32c <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
9000e4ca:	f7ff f94d 	bl	9000d768 <vPortExitCritical>
					return errQUEUE_EMPTY;
9000e4ce:	2000      	movs	r0, #0
}
9000e4d0:	b005      	add	sp, #20
9000e4d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
9000e4d6:	f7ff f947 	bl	9000d768 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000e4da:	9901      	ldr	r1, [sp, #4]
9000e4dc:	4630      	mov	r0, r6
9000e4de:	f001 f86f 	bl	9000f5c0 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000e4e2:	f7ff f91f 	bl	9000d724 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e4e6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000e4ea:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e4ec:	2d00      	cmp	r5, #0
9000e4ee:	dc04      	bgt.n	9000e4fa <xQueueReceive+0x20e>
9000e4f0:	e011      	b.n	9000e516 <xQueueReceive+0x22a>
			--cTxLock;
9000e4f2:	1e6b      	subs	r3, r5, #1
9000e4f4:	b2da      	uxtb	r2, r3
9000e4f6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e4f8:	b16a      	cbz	r2, 9000e516 <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e4fa:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e4fc:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e4fe:	b153      	cbz	r3, 9000e516 <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e500:	f001 f8ec 	bl	9000f6dc <xTaskRemoveFromEventList>
9000e504:	2800      	cmp	r0, #0
9000e506:	d0f4      	beq.n	9000e4f2 <xQueueReceive+0x206>
						vTaskMissedYield();
9000e508:	f001 f986 	bl	9000f818 <vTaskMissedYield>
			--cTxLock;
9000e50c:	1e6b      	subs	r3, r5, #1
9000e50e:	b2da      	uxtb	r2, r3
9000e510:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e512:	2a00      	cmp	r2, #0
9000e514:	d1f1      	bne.n	9000e4fa <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
9000e516:	23ff      	movs	r3, #255	; 0xff
9000e518:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000e51c:	f7ff f924 	bl	9000d768 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e520:	f7ff f900 	bl	9000d724 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e524:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000e528:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e52a:	2d00      	cmp	r5, #0
9000e52c:	dd14      	ble.n	9000e558 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e52e:	f104 0910 	add.w	r9, r4, #16
9000e532:	e003      	b.n	9000e53c <xQueueReceive+0x250>
				--cRxLock;
9000e534:	1e6b      	subs	r3, r5, #1
9000e536:	b2da      	uxtb	r2, r3
9000e538:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e53a:	b16a      	cbz	r2, 9000e558 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e53c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e53e:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e540:	b153      	cbz	r3, 9000e558 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e542:	f001 f8cb 	bl	9000f6dc <xTaskRemoveFromEventList>
9000e546:	2800      	cmp	r0, #0
9000e548:	d0f4      	beq.n	9000e534 <xQueueReceive+0x248>
					vTaskMissedYield();
9000e54a:	f001 f965 	bl	9000f818 <vTaskMissedYield>
				--cRxLock;
9000e54e:	1e6b      	subs	r3, r5, #1
9000e550:	b2da      	uxtb	r2, r3
9000e552:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e554:	2a00      	cmp	r2, #0
9000e556:	d1f1      	bne.n	9000e53c <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
9000e558:	23ff      	movs	r3, #255	; 0xff
9000e55a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000e55e:	f7ff f903 	bl	9000d768 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000e562:	f000 ff97 	bl	9000f494 <xTaskResumeAll>
9000e566:	2800      	cmp	r0, #0
9000e568:	d1a6      	bne.n	9000e4b8 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
9000e56a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e56e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000e572:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000e576:	f3bf 8f4f 	dsb	sy
9000e57a:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
9000e57e:	f7ff f8d1 	bl	9000d724 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e582:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e584:	2d00      	cmp	r5, #0
9000e586:	d09c      	beq.n	9000e4c2 <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000e588:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000e58a:	b152      	cbz	r2, 9000e5a2 <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e58c:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e58e:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e590:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e592:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e594:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e596:	d301      	bcc.n	9000e59c <xQueueReceive+0x2b0>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000e598:	6821      	ldr	r1, [r4, #0]
9000e59a:	60e1      	str	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000e59c:	4638      	mov	r0, r7
9000e59e:	f018 fa48 	bl	90026a32 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000e5a2:	3d01      	subs	r5, #1
9000e5a4:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e5a6:	6923      	ldr	r3, [r4, #16]
9000e5a8:	b963      	cbnz	r3, 9000e5c4 <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
9000e5aa:	f7ff f8dd 	bl	9000d768 <vPortExitCritical>
				return pdPASS;
9000e5ae:	2001      	movs	r0, #1
9000e5b0:	e78e      	b.n	9000e4d0 <xQueueReceive+0x1e4>
9000e5b2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e5b6:	f383 8811 	msr	BASEPRI, r3
9000e5ba:	f3bf 8f6f 	isb	sy
9000e5be:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000e5c2:	e7fe      	b.n	9000e5c2 <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e5c4:	f104 0010 	add.w	r0, r4, #16
9000e5c8:	f001 f888 	bl	9000f6dc <xTaskRemoveFromEventList>
9000e5cc:	2800      	cmp	r0, #0
9000e5ce:	d0ec      	beq.n	9000e5aa <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
9000e5d0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e5d4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000e5d8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000e5dc:	f3bf 8f4f 	dsb	sy
9000e5e0:	f3bf 8f6f 	isb	sy
9000e5e4:	e7e1      	b.n	9000e5aa <xQueueReceive+0x2be>
9000e5e6:	bf00      	nop

9000e5e8 <xQueueSemaphoreTake>:
{
9000e5e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000e5ec:	b084      	sub	sp, #16
9000e5ee:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
9000e5f0:	2800      	cmp	r0, #0
9000e5f2:	d05c      	beq.n	9000e6ae <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
9000e5f4:	6c07      	ldr	r7, [r0, #64]	; 0x40
9000e5f6:	4604      	mov	r4, r0
9000e5f8:	b147      	cbz	r7, 9000e60c <xQueueSemaphoreTake+0x24>
9000e5fa:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e5fe:	f383 8811 	msr	BASEPRI, r3
9000e602:	f3bf 8f6f 	isb	sy
9000e606:	f3bf 8f4f 	dsb	sy
9000e60a:	e7fe      	b.n	9000e60a <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e60c:	f001 f910 	bl	9000f830 <xTaskGetSchedulerState>
9000e610:	4605      	mov	r5, r0
9000e612:	2800      	cmp	r0, #0
9000e614:	d054      	beq.n	9000e6c0 <xQueueSemaphoreTake+0xd8>
9000e616:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e618:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
9000e61c:	f7ff f882 	bl	9000d724 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
9000e620:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
9000e622:	2b00      	cmp	r3, #0
9000e624:	f040 8149 	bne.w	9000e8ba <xQueueSemaphoreTake+0x2d2>
				if( xTicksToWait == ( TickType_t ) 0 )
9000e628:	9b01      	ldr	r3, [sp, #4]
9000e62a:	2b00      	cmp	r3, #0
9000e62c:	f000 813a 	beq.w	9000e8a4 <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
9000e630:	2d00      	cmp	r5, #0
9000e632:	f000 809d 	beq.w	9000e770 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
9000e636:	f7ff f897 	bl	9000d768 <vPortExitCritical>
		vTaskSuspendAll();
9000e63a:	f000 ff23 	bl	9000f484 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000e63e:	f7ff f871 	bl	9000d724 <vPortEnterCritical>
9000e642:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000e646:	2bff      	cmp	r3, #255	; 0xff
9000e648:	d102      	bne.n	9000e650 <xQueueSemaphoreTake+0x68>
9000e64a:	2300      	movs	r3, #0
9000e64c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
9000e650:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000e654:	2bff      	cmp	r3, #255	; 0xff
9000e656:	d102      	bne.n	9000e65e <xQueueSemaphoreTake+0x76>
9000e658:	2300      	movs	r3, #0
9000e65a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000e65e:	f7ff f883 	bl	9000d768 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000e662:	a901      	add	r1, sp, #4
9000e664:	a802      	add	r0, sp, #8
9000e666:	f001 f88f 	bl	9000f788 <xTaskCheckForTimeOut>
9000e66a:	2800      	cmp	r0, #0
9000e66c:	d135      	bne.n	9000e6da <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
9000e66e:	f7ff f859 	bl	9000d724 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000e672:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000e674:	2b00      	cmp	r3, #0
9000e676:	f000 80a4 	beq.w	9000e7c2 <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
9000e67a:	f7ff f875 	bl	9000d768 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e67e:	f7ff f851 	bl	9000d724 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e682:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000e686:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e688:	2d00      	cmp	r5, #0
9000e68a:	dc05      	bgt.n	9000e698 <xQueueSemaphoreTake+0xb0>
9000e68c:	e074      	b.n	9000e778 <xQueueSemaphoreTake+0x190>
			--cTxLock;
9000e68e:	1e6b      	subs	r3, r5, #1
9000e690:	b2da      	uxtb	r2, r3
9000e692:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e694:	2a00      	cmp	r2, #0
9000e696:	d06f      	beq.n	9000e778 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e698:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e69a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e69c:	2b00      	cmp	r3, #0
9000e69e:	d06b      	beq.n	9000e778 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e6a0:	f001 f81c 	bl	9000f6dc <xTaskRemoveFromEventList>
9000e6a4:	2800      	cmp	r0, #0
9000e6a6:	d0f2      	beq.n	9000e68e <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
9000e6a8:	f001 f8b6 	bl	9000f818 <vTaskMissedYield>
9000e6ac:	e7ef      	b.n	9000e68e <xQueueSemaphoreTake+0xa6>
9000e6ae:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e6b2:	f383 8811 	msr	BASEPRI, r3
9000e6b6:	f3bf 8f6f 	isb	sy
9000e6ba:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000e6be:	e7fe      	b.n	9000e6be <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e6c0:	9b01      	ldr	r3, [sp, #4]
9000e6c2:	2b00      	cmp	r3, #0
9000e6c4:	f000 80d4 	beq.w	9000e870 <xQueueSemaphoreTake+0x288>
9000e6c8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e6cc:	f383 8811 	msr	BASEPRI, r3
9000e6d0:	f3bf 8f6f 	isb	sy
9000e6d4:	f3bf 8f4f 	dsb	sy
9000e6d8:	e7fe      	b.n	9000e6d8 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
9000e6da:	f7ff f823 	bl	9000d724 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e6de:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000e6e2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e6e4:	2d00      	cmp	r5, #0
9000e6e6:	dc04      	bgt.n	9000e6f2 <xQueueSemaphoreTake+0x10a>
9000e6e8:	e011      	b.n	9000e70e <xQueueSemaphoreTake+0x126>
			--cTxLock;
9000e6ea:	1e6b      	subs	r3, r5, #1
9000e6ec:	b2da      	uxtb	r2, r3
9000e6ee:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e6f0:	b16a      	cbz	r2, 9000e70e <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e6f2:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e6f4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e6f6:	b153      	cbz	r3, 9000e70e <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e6f8:	f000 fff0 	bl	9000f6dc <xTaskRemoveFromEventList>
9000e6fc:	2800      	cmp	r0, #0
9000e6fe:	d0f4      	beq.n	9000e6ea <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
9000e700:	f001 f88a 	bl	9000f818 <vTaskMissedYield>
			--cTxLock;
9000e704:	1e6b      	subs	r3, r5, #1
9000e706:	b2da      	uxtb	r2, r3
9000e708:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e70a:	2a00      	cmp	r2, #0
9000e70c:	d1f1      	bne.n	9000e6f2 <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
9000e70e:	23ff      	movs	r3, #255	; 0xff
9000e710:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000e714:	f7ff f828 	bl	9000d768 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e718:	f7ff f804 	bl	9000d724 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e71c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000e720:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e722:	2d00      	cmp	r5, #0
9000e724:	dd14      	ble.n	9000e750 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e726:	f104 0810 	add.w	r8, r4, #16
9000e72a:	e003      	b.n	9000e734 <xQueueSemaphoreTake+0x14c>
				--cRxLock;
9000e72c:	1e6b      	subs	r3, r5, #1
9000e72e:	b2da      	uxtb	r2, r3
9000e730:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e732:	b16a      	cbz	r2, 9000e750 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e734:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e736:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e738:	b153      	cbz	r3, 9000e750 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e73a:	f000 ffcf 	bl	9000f6dc <xTaskRemoveFromEventList>
9000e73e:	2800      	cmp	r0, #0
9000e740:	d0f4      	beq.n	9000e72c <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
9000e742:	f001 f869 	bl	9000f818 <vTaskMissedYield>
				--cRxLock;
9000e746:	1e6b      	subs	r3, r5, #1
9000e748:	b2da      	uxtb	r2, r3
9000e74a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e74c:	2a00      	cmp	r2, #0
9000e74e:	d1f1      	bne.n	9000e734 <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
9000e750:	23ff      	movs	r3, #255	; 0xff
9000e752:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000e756:	f7ff f807 	bl	9000d768 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000e75a:	f000 fe9b 	bl	9000f494 <xTaskResumeAll>
	taskENTER_CRITICAL();
9000e75e:	f7fe ffe1 	bl	9000d724 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000e762:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000e764:	2b00      	cmp	r3, #0
9000e766:	d07c      	beq.n	9000e862 <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
9000e768:	f7fe fffe 	bl	9000d768 <vPortExitCritical>
	return xReturn;
9000e76c:	2501      	movs	r5, #1
9000e76e:	e755      	b.n	9000e61c <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000e770:	a802      	add	r0, sp, #8
9000e772:	f000 fffd 	bl	9000f770 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000e776:	e75e      	b.n	9000e636 <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
9000e778:	23ff      	movs	r3, #255	; 0xff
9000e77a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000e77e:	f7fe fff3 	bl	9000d768 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e782:	f7fe ffcf 	bl	9000d724 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e786:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000e78a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e78c:	2d00      	cmp	r5, #0
9000e78e:	dd10      	ble.n	9000e7b2 <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e790:	f104 0810 	add.w	r8, r4, #16
9000e794:	e003      	b.n	9000e79e <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
9000e796:	1e6b      	subs	r3, r5, #1
9000e798:	b2da      	uxtb	r2, r3
9000e79a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e79c:	b14a      	cbz	r2, 9000e7b2 <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e79e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e7a0:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e7a2:	b133      	cbz	r3, 9000e7b2 <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e7a4:	f000 ff9a 	bl	9000f6dc <xTaskRemoveFromEventList>
9000e7a8:	2800      	cmp	r0, #0
9000e7aa:	d0f4      	beq.n	9000e796 <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
9000e7ac:	f001 f834 	bl	9000f818 <vTaskMissedYield>
9000e7b0:	e7f1      	b.n	9000e796 <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
9000e7b2:	23ff      	movs	r3, #255	; 0xff
9000e7b4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000e7b8:	f7fe ffd6 	bl	9000d768 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000e7bc:	f000 fe6a 	bl	9000f494 <xTaskResumeAll>
9000e7c0:	e7d4      	b.n	9000e76c <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
9000e7c2:	f7fe ffd1 	bl	9000d768 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000e7c6:	6823      	ldr	r3, [r4, #0]
9000e7c8:	2b00      	cmp	r3, #0
9000e7ca:	d062      	beq.n	9000e892 <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000e7cc:	9901      	ldr	r1, [sp, #4]
9000e7ce:	4630      	mov	r0, r6
9000e7d0:	f000 fef6 	bl	9000f5c0 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000e7d4:	f7fe ffa6 	bl	9000d724 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e7d8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000e7dc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e7de:	2d00      	cmp	r5, #0
9000e7e0:	dc04      	bgt.n	9000e7ec <xQueueSemaphoreTake+0x204>
9000e7e2:	e00d      	b.n	9000e800 <xQueueSemaphoreTake+0x218>
			--cTxLock;
9000e7e4:	1e6b      	subs	r3, r5, #1
9000e7e6:	b2da      	uxtb	r2, r3
9000e7e8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e7ea:	b14a      	cbz	r2, 9000e800 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e7ec:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e7ee:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e7f0:	b133      	cbz	r3, 9000e800 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e7f2:	f000 ff73 	bl	9000f6dc <xTaskRemoveFromEventList>
9000e7f6:	2800      	cmp	r0, #0
9000e7f8:	d0f4      	beq.n	9000e7e4 <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
9000e7fa:	f001 f80d 	bl	9000f818 <vTaskMissedYield>
9000e7fe:	e7f1      	b.n	9000e7e4 <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
9000e800:	23ff      	movs	r3, #255	; 0xff
9000e802:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000e806:	f7fe ffaf 	bl	9000d768 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e80a:	f7fe ff8b 	bl	9000d724 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e80e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000e812:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e814:	2d00      	cmp	r5, #0
9000e816:	dd10      	ble.n	9000e83a <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e818:	f104 0810 	add.w	r8, r4, #16
9000e81c:	e003      	b.n	9000e826 <xQueueSemaphoreTake+0x23e>
				--cRxLock;
9000e81e:	1e6b      	subs	r3, r5, #1
9000e820:	b2da      	uxtb	r2, r3
9000e822:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e824:	b14a      	cbz	r2, 9000e83a <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e826:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e828:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e82a:	b133      	cbz	r3, 9000e83a <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e82c:	f000 ff56 	bl	9000f6dc <xTaskRemoveFromEventList>
9000e830:	2800      	cmp	r0, #0
9000e832:	d0f4      	beq.n	9000e81e <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
9000e834:	f000 fff0 	bl	9000f818 <vTaskMissedYield>
9000e838:	e7f1      	b.n	9000e81e <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
9000e83a:	23ff      	movs	r3, #255	; 0xff
9000e83c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000e840:	f7fe ff92 	bl	9000d768 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000e844:	f000 fe26 	bl	9000f494 <xTaskResumeAll>
9000e848:	2800      	cmp	r0, #0
9000e84a:	d18f      	bne.n	9000e76c <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
9000e84c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e850:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000e854:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000e858:	f3bf 8f4f 	dsb	sy
9000e85c:	f3bf 8f6f 	isb	sy
9000e860:	e784      	b.n	9000e76c <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
9000e862:	f7fe ff81 	bl	9000d768 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
9000e866:	b92f      	cbnz	r7, 9000e874 <xQueueSemaphoreTake+0x28c>
}
9000e868:	4638      	mov	r0, r7
9000e86a:	b004      	add	sp, #16
9000e86c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000e870:	4607      	mov	r7, r0
9000e872:	e6d1      	b.n	9000e618 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
9000e874:	f7fe ff56 	bl	9000d724 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
9000e878:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000e87a:	b119      	cbz	r1, 9000e884 <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
9000e87c:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000e87e:	6819      	ldr	r1, [r3, #0]
9000e880:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9000e884:	68a0      	ldr	r0, [r4, #8]
				return errQUEUE_EMPTY;
9000e886:	2700      	movs	r7, #0
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9000e888:	f001 f86e 	bl	9000f968 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
9000e88c:	f7fe ff6c 	bl	9000d768 <vPortExitCritical>
9000e890:	e7ea      	b.n	9000e868 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
9000e892:	f7fe ff47 	bl	9000d724 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
9000e896:	68a0      	ldr	r0, [r4, #8]
9000e898:	f000 ffda 	bl	9000f850 <xTaskPriorityInherit>
9000e89c:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
9000e89e:	f7fe ff63 	bl	9000d768 <vPortExitCritical>
9000e8a2:	e793      	b.n	9000e7cc <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
9000e8a4:	2f00      	cmp	r7, #0
9000e8a6:	d0f1      	beq.n	9000e88c <xQueueSemaphoreTake+0x2a4>
9000e8a8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e8ac:	f383 8811 	msr	BASEPRI, r3
9000e8b0:	f3bf 8f6f 	isb	sy
9000e8b4:	f3bf 8f4f 	dsb	sy
9000e8b8:	e7fe      	b.n	9000e8b8 <xQueueSemaphoreTake+0x2d0>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000e8ba:	3b01      	subs	r3, #1
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000e8bc:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000e8be:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000e8c0:	b12a      	cbz	r2, 9000e8ce <xQueueSemaphoreTake+0x2e6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e8c2:	6923      	ldr	r3, [r4, #16]
9000e8c4:	b93b      	cbnz	r3, 9000e8d6 <xQueueSemaphoreTake+0x2ee>
				return pdPASS;
9000e8c6:	2701      	movs	r7, #1
				taskEXIT_CRITICAL();
9000e8c8:	f7fe ff4e 	bl	9000d768 <vPortExitCritical>
				return pdPASS;
9000e8cc:	e7cc      	b.n	9000e868 <xQueueSemaphoreTake+0x280>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
9000e8ce:	f001 f89f 	bl	9000fa10 <pvTaskIncrementMutexHeldCount>
9000e8d2:	60a0      	str	r0, [r4, #8]
9000e8d4:	e7f5      	b.n	9000e8c2 <xQueueSemaphoreTake+0x2da>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e8d6:	f104 0010 	add.w	r0, r4, #16
9000e8da:	f000 feff 	bl	9000f6dc <xTaskRemoveFromEventList>
9000e8de:	2800      	cmp	r0, #0
9000e8e0:	d0f1      	beq.n	9000e8c6 <xQueueSemaphoreTake+0x2de>
						queueYIELD_IF_USING_PREEMPTION();
9000e8e2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e8e6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000e8ea:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000e8ee:	f3bf 8f4f 	dsb	sy
9000e8f2:	f3bf 8f6f 	isb	sy
9000e8f6:	e7e6      	b.n	9000e8c6 <xQueueSemaphoreTake+0x2de>

9000e8f8 <xQueueTakeMutexRecursive>:
		configASSERT( pxMutex );
9000e8f8:	b1a8      	cbz	r0, 9000e926 <xQueueTakeMutexRecursive+0x2e>
	{
9000e8fa:	b570      	push	{r4, r5, r6, lr}
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
9000e8fc:	6886      	ldr	r6, [r0, #8]
9000e8fe:	4604      	mov	r4, r0
9000e900:	460d      	mov	r5, r1
9000e902:	f000 ff8f 	bl	9000f824 <xTaskGetCurrentTaskHandle>
9000e906:	4286      	cmp	r6, r0
9000e908:	d008      	beq.n	9000e91c <xQueueTakeMutexRecursive+0x24>
			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
9000e90a:	4629      	mov	r1, r5
9000e90c:	4620      	mov	r0, r4
9000e90e:	f7ff fe6b 	bl	9000e5e8 <xQueueSemaphoreTake>
			if( xReturn != pdFAIL )
9000e912:	b110      	cbz	r0, 9000e91a <xQueueTakeMutexRecursive+0x22>
				( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
9000e914:	68e3      	ldr	r3, [r4, #12]
9000e916:	3301      	adds	r3, #1
9000e918:	60e3      	str	r3, [r4, #12]
	}
9000e91a:	bd70      	pop	{r4, r5, r6, pc}
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
9000e91c:	68e3      	ldr	r3, [r4, #12]
			xReturn = pdPASS;
9000e91e:	2001      	movs	r0, #1
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
9000e920:	4403      	add	r3, r0
9000e922:	60e3      	str	r3, [r4, #12]
	}
9000e924:	bd70      	pop	{r4, r5, r6, pc}
9000e926:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e92a:	f383 8811 	msr	BASEPRI, r3
9000e92e:	f3bf 8f6f 	isb	sy
9000e932:	f3bf 8f4f 	dsb	sy
		configASSERT( pxMutex );
9000e936:	e7fe      	b.n	9000e936 <xQueueTakeMutexRecursive+0x3e>

9000e938 <xQueueReceiveFromISR>:
{
9000e938:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
9000e93c:	b310      	cbz	r0, 9000e984 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e93e:	460e      	mov	r6, r1
9000e940:	4604      	mov	r4, r0
9000e942:	4617      	mov	r7, r2
9000e944:	b191      	cbz	r1, 9000e96c <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000e946:	f7ff f81f 	bl	9000d988 <vPortValidateInterruptPriority>
	__asm volatile
9000e94a:	f3ef 8911 	mrs	r9, BASEPRI
9000e94e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e952:	f383 8811 	msr	BASEPRI, r3
9000e956:	f3bf 8f6f 	isb	sy
9000e95a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e95e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e960:	b9cd      	cbnz	r5, 9000e996 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
9000e962:	4628      	mov	r0, r5
	__asm volatile
9000e964:	f389 8811 	msr	BASEPRI, r9
}
9000e968:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e96c:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000e96e:	2b00      	cmp	r3, #0
9000e970:	d0e9      	beq.n	9000e946 <xQueueReceiveFromISR+0xe>
	__asm volatile
9000e972:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e976:	f383 8811 	msr	BASEPRI, r3
9000e97a:	f3bf 8f6f 	isb	sy
9000e97e:	f3bf 8f4f 	dsb	sy
9000e982:	e7fe      	b.n	9000e982 <xQueueReceiveFromISR+0x4a>
9000e984:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e988:	f383 8811 	msr	BASEPRI, r3
9000e98c:	f3bf 8f6f 	isb	sy
9000e990:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e994:	e7fe      	b.n	9000e994 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
9000e996:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000e99a:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
9000e99c:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000e9a0:	b142      	cbz	r2, 9000e9b4 <xQueueReceiveFromISR+0x7c>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e9a2:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e9a4:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e9a6:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e9a8:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e9aa:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e9ac:	d215      	bcs.n	9000e9da <xQueueReceiveFromISR+0xa2>
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000e9ae:	4630      	mov	r0, r6
9000e9b0:	f018 f83f 	bl	90026a32 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000e9b4:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
9000e9b6:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000e9ba:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
9000e9bc:	d009      	beq.n	9000e9d2 <xQueueReceiveFromISR+0x9a>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9000e9be:	f108 0301 	add.w	r3, r8, #1
			xReturn = pdPASS;
9000e9c2:	2001      	movs	r0, #1
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9000e9c4:	b25b      	sxtb	r3, r3
9000e9c6:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	__asm volatile
9000e9ca:	f389 8811 	msr	BASEPRI, r9
}
9000e9ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e9d2:	6923      	ldr	r3, [r4, #16]
9000e9d4:	b923      	cbnz	r3, 9000e9e0 <xQueueReceiveFromISR+0xa8>
			xReturn = pdPASS;
9000e9d6:	2001      	movs	r0, #1
9000e9d8:	e7c4      	b.n	9000e964 <xQueueReceiveFromISR+0x2c>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000e9da:	6821      	ldr	r1, [r4, #0]
9000e9dc:	60e1      	str	r1, [r4, #12]
9000e9de:	e7e6      	b.n	9000e9ae <xQueueReceiveFromISR+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e9e0:	f104 0010 	add.w	r0, r4, #16
9000e9e4:	f000 fe7a 	bl	9000f6dc <xTaskRemoveFromEventList>
						if( pxHigherPriorityTaskWoken != NULL )
9000e9e8:	2f00      	cmp	r7, #0
9000e9ea:	d0f4      	beq.n	9000e9d6 <xQueueReceiveFromISR+0x9e>
9000e9ec:	2800      	cmp	r0, #0
9000e9ee:	d0f2      	beq.n	9000e9d6 <xQueueReceiveFromISR+0x9e>
							*pxHigherPriorityTaskWoken = pdTRUE;
9000e9f0:	2301      	movs	r3, #1
			xReturn = pdPASS;
9000e9f2:	4618      	mov	r0, r3
							*pxHigherPriorityTaskWoken = pdTRUE;
9000e9f4:	603b      	str	r3, [r7, #0]
9000e9f6:	e7b5      	b.n	9000e964 <xQueueReceiveFromISR+0x2c>

9000e9f8 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
9000e9f8:	b158      	cbz	r0, 9000ea12 <uxQueueMessagesWaiting+0x1a>
{
9000e9fa:	b510      	push	{r4, lr}
9000e9fc:	4604      	mov	r4, r0
9000e9fe:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
9000ea00:	f7fe fe90 	bl	9000d724 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
9000ea04:	6ba0      	ldr	r0, [r4, #56]	; 0x38
9000ea06:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
9000ea08:	f7fe feae 	bl	9000d768 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
9000ea0c:	9801      	ldr	r0, [sp, #4]
9000ea0e:	b002      	add	sp, #8
9000ea10:	bd10      	pop	{r4, pc}
	__asm volatile
9000ea12:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ea16:	f383 8811 	msr	BASEPRI, r3
9000ea1a:	f3bf 8f6f 	isb	sy
9000ea1e:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
9000ea22:	e7fe      	b.n	9000ea22 <uxQueueMessagesWaiting+0x2a>

9000ea24 <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
9000ea24:	b108      	cbz	r0, 9000ea2a <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
9000ea26:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
9000ea28:	4770      	bx	lr
9000ea2a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ea2e:	f383 8811 	msr	BASEPRI, r3
9000ea32:	f3bf 8f6f 	isb	sy
9000ea36:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000ea3a:	e7fe      	b.n	9000ea3a <uxQueueMessagesWaitingFromISR+0x16>
9000ea3c:	0000      	movs	r0, r0
	...

9000ea40 <vQueueDelete>:
	configASSERT( pxQueue );
9000ea40:	b1e0      	cbz	r0, 9000ea7c <vQueueDelete+0x3c>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
9000ea42:	4b21      	ldr	r3, [pc, #132]	; (9000eac8 <vQueueDelete+0x88>)
9000ea44:	685a      	ldr	r2, [r3, #4]
9000ea46:	4290      	cmp	r0, r2
9000ea48:	d02b      	beq.n	9000eaa2 <vQueueDelete+0x62>
9000ea4a:	68da      	ldr	r2, [r3, #12]
9000ea4c:	4290      	cmp	r0, r2
9000ea4e:	d02a      	beq.n	9000eaa6 <vQueueDelete+0x66>
9000ea50:	695a      	ldr	r2, [r3, #20]
9000ea52:	4290      	cmp	r0, r2
9000ea54:	d029      	beq.n	9000eaaa <vQueueDelete+0x6a>
9000ea56:	69da      	ldr	r2, [r3, #28]
9000ea58:	4290      	cmp	r0, r2
9000ea5a:	d028      	beq.n	9000eaae <vQueueDelete+0x6e>
9000ea5c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
9000ea5e:	4290      	cmp	r0, r2
9000ea60:	d027      	beq.n	9000eab2 <vQueueDelete+0x72>
9000ea62:	6ada      	ldr	r2, [r3, #44]	; 0x2c
9000ea64:	4290      	cmp	r0, r2
9000ea66:	d014      	beq.n	9000ea92 <vQueueDelete+0x52>
9000ea68:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000ea6a:	4290      	cmp	r0, r2
9000ea6c:	d023      	beq.n	9000eab6 <vQueueDelete+0x76>
9000ea6e:	6bda      	ldr	r2, [r3, #60]	; 0x3c
9000ea70:	4290      	cmp	r0, r2
9000ea72:	d022      	beq.n	9000eaba <vQueueDelete+0x7a>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
9000ea74:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
9000ea78:	b14b      	cbz	r3, 9000ea8e <vQueueDelete+0x4e>
}
9000ea7a:	4770      	bx	lr
9000ea7c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ea80:	f383 8811 	msr	BASEPRI, r3
9000ea84:	f3bf 8f6f 	isb	sy
9000ea88:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000ea8c:	e7fe      	b.n	9000ea8c <vQueueDelete+0x4c>
			vPortFree( pxQueue );
9000ea8e:	f7fe bd31 	b.w	9000d4f4 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000ea92:	2205      	movs	r2, #5
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
9000ea94:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
9000ea98:	ed9f 7b09 	vldr	d7, [pc, #36]	; 9000eac0 <vQueueDelete+0x80>
9000ea9c:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
9000eaa0:	e7e8      	b.n	9000ea74 <vQueueDelete+0x34>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000eaa2:	2200      	movs	r2, #0
9000eaa4:	e7f6      	b.n	9000ea94 <vQueueDelete+0x54>
9000eaa6:	2201      	movs	r2, #1
9000eaa8:	e7f4      	b.n	9000ea94 <vQueueDelete+0x54>
9000eaaa:	2202      	movs	r2, #2
9000eaac:	e7f2      	b.n	9000ea94 <vQueueDelete+0x54>
9000eaae:	2203      	movs	r2, #3
9000eab0:	e7f0      	b.n	9000ea94 <vQueueDelete+0x54>
9000eab2:	2204      	movs	r2, #4
9000eab4:	e7ee      	b.n	9000ea94 <vQueueDelete+0x54>
9000eab6:	2206      	movs	r2, #6
9000eab8:	e7ec      	b.n	9000ea94 <vQueueDelete+0x54>
9000eaba:	2207      	movs	r2, #7
9000eabc:	e7ea      	b.n	9000ea94 <vQueueDelete+0x54>
9000eabe:	bf00      	nop
	...
9000eac8:	24022f38 	.word	0x24022f38

9000eacc <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
9000eacc:	4b12      	ldr	r3, [pc, #72]	; (9000eb18 <vQueueAddToRegistry+0x4c>)
9000eace:	681a      	ldr	r2, [r3, #0]
9000ead0:	b17a      	cbz	r2, 9000eaf2 <vQueueAddToRegistry+0x26>
9000ead2:	689a      	ldr	r2, [r3, #8]
9000ead4:	b162      	cbz	r2, 9000eaf0 <vQueueAddToRegistry+0x24>
9000ead6:	691a      	ldr	r2, [r3, #16]
9000ead8:	b192      	cbz	r2, 9000eb00 <vQueueAddToRegistry+0x34>
9000eada:	699a      	ldr	r2, [r3, #24]
9000eadc:	b192      	cbz	r2, 9000eb04 <vQueueAddToRegistry+0x38>
9000eade:	6a1a      	ldr	r2, [r3, #32]
9000eae0:	b192      	cbz	r2, 9000eb08 <vQueueAddToRegistry+0x3c>
9000eae2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
9000eae4:	b192      	cbz	r2, 9000eb0c <vQueueAddToRegistry+0x40>
9000eae6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000eae8:	b192      	cbz	r2, 9000eb10 <vQueueAddToRegistry+0x44>
9000eaea:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000eaec:	b192      	cbz	r2, 9000eb14 <vQueueAddToRegistry+0x48>
	}
9000eaee:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000eaf0:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
9000eaf2:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
9000eaf6:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
9000eafa:	f8cc 0004 	str.w	r0, [ip, #4]
	}
9000eafe:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000eb00:	2202      	movs	r2, #2
9000eb02:	e7f6      	b.n	9000eaf2 <vQueueAddToRegistry+0x26>
9000eb04:	2203      	movs	r2, #3
9000eb06:	e7f4      	b.n	9000eaf2 <vQueueAddToRegistry+0x26>
9000eb08:	2204      	movs	r2, #4
9000eb0a:	e7f2      	b.n	9000eaf2 <vQueueAddToRegistry+0x26>
9000eb0c:	2205      	movs	r2, #5
9000eb0e:	e7f0      	b.n	9000eaf2 <vQueueAddToRegistry+0x26>
9000eb10:	2206      	movs	r2, #6
9000eb12:	e7ee      	b.n	9000eaf2 <vQueueAddToRegistry+0x26>
9000eb14:	2207      	movs	r2, #7
9000eb16:	e7ec      	b.n	9000eaf2 <vQueueAddToRegistry+0x26>
9000eb18:	24022f38 	.word	0x24022f38

9000eb1c <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
9000eb1c:	b570      	push	{r4, r5, r6, lr}
9000eb1e:	4605      	mov	r5, r0
9000eb20:	460e      	mov	r6, r1
9000eb22:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
9000eb24:	f7fe fdfe 	bl	9000d724 <vPortEnterCritical>
9000eb28:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
9000eb2c:	2bff      	cmp	r3, #255	; 0xff
9000eb2e:	d102      	bne.n	9000eb36 <vQueueWaitForMessageRestricted+0x1a>
9000eb30:	2300      	movs	r3, #0
9000eb32:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
9000eb36:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
9000eb3a:	2bff      	cmp	r3, #255	; 0xff
9000eb3c:	d102      	bne.n	9000eb44 <vQueueWaitForMessageRestricted+0x28>
9000eb3e:	2300      	movs	r3, #0
9000eb40:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
9000eb44:	f7fe fe10 	bl	9000d768 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
9000eb48:	6bab      	ldr	r3, [r5, #56]	; 0x38
9000eb4a:	2b00      	cmp	r3, #0
9000eb4c:	d043      	beq.n	9000ebd6 <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
9000eb4e:	f7fe fde9 	bl	9000d724 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000eb52:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
9000eb56:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000eb58:	2c00      	cmp	r4, #0
9000eb5a:	dd14      	ble.n	9000eb86 <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000eb5c:	f105 0624 	add.w	r6, r5, #36	; 0x24
9000eb60:	e003      	b.n	9000eb6a <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
9000eb62:	1e63      	subs	r3, r4, #1
9000eb64:	b2da      	uxtb	r2, r3
9000eb66:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000eb68:	b16a      	cbz	r2, 9000eb86 <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000eb6a:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000eb6c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000eb6e:	b153      	cbz	r3, 9000eb86 <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000eb70:	f000 fdb4 	bl	9000f6dc <xTaskRemoveFromEventList>
9000eb74:	2800      	cmp	r0, #0
9000eb76:	d0f4      	beq.n	9000eb62 <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
9000eb78:	f000 fe4e 	bl	9000f818 <vTaskMissedYield>
			--cTxLock;
9000eb7c:	1e63      	subs	r3, r4, #1
9000eb7e:	b2da      	uxtb	r2, r3
9000eb80:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000eb82:	2a00      	cmp	r2, #0
9000eb84:	d1f1      	bne.n	9000eb6a <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
9000eb86:	23ff      	movs	r3, #255	; 0xff
9000eb88:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
9000eb8c:	f7fe fdec 	bl	9000d768 <vPortExitCritical>
	taskENTER_CRITICAL();
9000eb90:	f7fe fdc8 	bl	9000d724 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000eb94:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
9000eb98:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000eb9a:	2c00      	cmp	r4, #0
9000eb9c:	dd14      	ble.n	9000ebc8 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000eb9e:	f105 0610 	add.w	r6, r5, #16
9000eba2:	e003      	b.n	9000ebac <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
9000eba4:	1e63      	subs	r3, r4, #1
9000eba6:	b2da      	uxtb	r2, r3
9000eba8:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ebaa:	b16a      	cbz	r2, 9000ebc8 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ebac:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ebae:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ebb0:	b153      	cbz	r3, 9000ebc8 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ebb2:	f000 fd93 	bl	9000f6dc <xTaskRemoveFromEventList>
9000ebb6:	2800      	cmp	r0, #0
9000ebb8:	d0f4      	beq.n	9000eba4 <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
9000ebba:	f000 fe2d 	bl	9000f818 <vTaskMissedYield>
				--cRxLock;
9000ebbe:	1e63      	subs	r3, r4, #1
9000ebc0:	b2da      	uxtb	r2, r3
9000ebc2:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ebc4:	2a00      	cmp	r2, #0
9000ebc6:	d1f1      	bne.n	9000ebac <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
9000ebc8:	23ff      	movs	r3, #255	; 0xff
9000ebca:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
9000ebce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
9000ebd2:	f7fe bdc9 	b.w	9000d768 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
9000ebd6:	4622      	mov	r2, r4
9000ebd8:	4631      	mov	r1, r6
9000ebda:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000ebde:	f000 fd33 	bl	9000f648 <vTaskPlaceOnEventListRestricted>
9000ebe2:	e7b4      	b.n	9000eb4e <vQueueWaitForMessageRestricted+0x32>

9000ebe4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
9000ebe4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000ebe8:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
9000ebea:	f7fe fd9b 	bl	9000d724 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
9000ebee:	4a34      	ldr	r2, [pc, #208]	; (9000ecc0 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
9000ebf0:	4e34      	ldr	r6, [pc, #208]	; (9000ecc4 <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
9000ebf2:	6813      	ldr	r3, [r2, #0]
9000ebf4:	3301      	adds	r3, #1
9000ebf6:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
9000ebf8:	6833      	ldr	r3, [r6, #0]
9000ebfa:	2b00      	cmp	r3, #0
9000ebfc:	d032      	beq.n	9000ec64 <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
9000ebfe:	4c32      	ldr	r4, [pc, #200]	; (9000ecc8 <prvAddNewTaskToReadyList+0xe4>)
9000ec00:	6823      	ldr	r3, [r4, #0]
9000ec02:	b33b      	cbz	r3, 9000ec54 <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000ec04:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000ec06:	4f31      	ldr	r7, [pc, #196]	; (9000eccc <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
9000ec08:	4a31      	ldr	r2, [pc, #196]	; (9000ecd0 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
9000ec0a:	4932      	ldr	r1, [pc, #200]	; (9000ecd4 <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
9000ec0c:	6813      	ldr	r3, [r2, #0]
9000ec0e:	3301      	adds	r3, #1
9000ec10:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
9000ec12:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
9000ec14:	680b      	ldr	r3, [r1, #0]
9000ec16:	4283      	cmp	r3, r0
9000ec18:	d200      	bcs.n	9000ec1c <prvAddNewTaskToReadyList+0x38>
9000ec1a:	6008      	str	r0, [r1, #0]
9000ec1c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000ec20:	1d29      	adds	r1, r5, #4
9000ec22:	eb07 0080 	add.w	r0, r7, r0, lsl #2
9000ec26:	f7fe fcd9 	bl	9000d5dc <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
9000ec2a:	f7fe fd9d 	bl	9000d768 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
9000ec2e:	6823      	ldr	r3, [r4, #0]
9000ec30:	b173      	cbz	r3, 9000ec50 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
9000ec32:	6832      	ldr	r2, [r6, #0]
9000ec34:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000ec36:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
9000ec38:	429a      	cmp	r2, r3
9000ec3a:	d209      	bcs.n	9000ec50 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
9000ec3c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000ec40:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000ec44:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000ec48:	f3bf 8f4f 	dsb	sy
9000ec4c:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
9000ec50:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000ec54:	6833      	ldr	r3, [r6, #0]
9000ec56:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000ec58:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000ec5a:	4f1c      	ldr	r7, [pc, #112]	; (9000eccc <prvAddNewTaskToReadyList+0xe8>)
9000ec5c:	4283      	cmp	r3, r0
9000ec5e:	d8d3      	bhi.n	9000ec08 <prvAddNewTaskToReadyList+0x24>
					pxCurrentTCB = pxNewTCB;
9000ec60:	6035      	str	r5, [r6, #0]
9000ec62:	e7d1      	b.n	9000ec08 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
9000ec64:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
9000ec66:	6813      	ldr	r3, [r2, #0]
9000ec68:	2b01      	cmp	r3, #1
9000ec6a:	d003      	beq.n	9000ec74 <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000ec6c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000ec6e:	4f17      	ldr	r7, [pc, #92]	; (9000eccc <prvAddNewTaskToReadyList+0xe8>)
9000ec70:	4c15      	ldr	r4, [pc, #84]	; (9000ecc8 <prvAddNewTaskToReadyList+0xe4>)
9000ec72:	e7c9      	b.n	9000ec08 <prvAddNewTaskToReadyList+0x24>
9000ec74:	4f15      	ldr	r7, [pc, #84]	; (9000eccc <prvAddNewTaskToReadyList+0xe8>)
9000ec76:	463c      	mov	r4, r7
9000ec78:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000ec7c:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000ec7e:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000ec80:	f7fe fc9c 	bl	9000d5bc <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000ec84:	45a0      	cmp	r8, r4
9000ec86:	d1f9      	bne.n	9000ec7c <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
9000ec88:	f8df 9060 	ldr.w	r9, [pc, #96]	; 9000ecec <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
9000ec8c:	f8df 8060 	ldr.w	r8, [pc, #96]	; 9000ecf0 <prvAddNewTaskToReadyList+0x10c>
	vListInitialise( &xDelayedTaskList1 );
9000ec90:	4648      	mov	r0, r9
9000ec92:	4c0d      	ldr	r4, [pc, #52]	; (9000ecc8 <prvAddNewTaskToReadyList+0xe4>)
9000ec94:	f7fe fc92 	bl	9000d5bc <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
9000ec98:	4640      	mov	r0, r8
9000ec9a:	f7fe fc8f 	bl	9000d5bc <vListInitialise>
	vListInitialise( &xPendingReadyList );
9000ec9e:	480e      	ldr	r0, [pc, #56]	; (9000ecd8 <prvAddNewTaskToReadyList+0xf4>)
9000eca0:	f7fe fc8c 	bl	9000d5bc <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
9000eca4:	480d      	ldr	r0, [pc, #52]	; (9000ecdc <prvAddNewTaskToReadyList+0xf8>)
9000eca6:	f7fe fc89 	bl	9000d5bc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
9000ecaa:	480d      	ldr	r0, [pc, #52]	; (9000ece0 <prvAddNewTaskToReadyList+0xfc>)
9000ecac:	f7fe fc86 	bl	9000d5bc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
9000ecb0:	4b0c      	ldr	r3, [pc, #48]	; (9000ece4 <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
9000ecb2:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
9000ecb4:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
9000ecb8:	4b0b      	ldr	r3, [pc, #44]	; (9000ece8 <prvAddNewTaskToReadyList+0x104>)
9000ecba:	f8c3 8000 	str.w	r8, [r3]
}
9000ecbe:	e7a3      	b.n	9000ec08 <prvAddNewTaskToReadyList+0x24>
9000ecc0:	240233e4 	.word	0x240233e4
9000ecc4:	24022f78 	.word	0x24022f78
9000ecc8:	24023440 	.word	0x24023440
9000eccc:	24022f84 	.word	0x24022f84
9000ecd0:	240233f0 	.word	0x240233f0
9000ecd4:	240233f4 	.word	0x240233f4
9000ecd8:	2402342c 	.word	0x2402342c
9000ecdc:	24023458 	.word	0x24023458
9000ece0:	24023444 	.word	0x24023444
9000ece4:	24022f7c 	.word	0x24022f7c
9000ece8:	24022f80 	.word	0x24022f80
9000ecec:	240233f8 	.word	0x240233f8
9000ecf0:	2402340c 	.word	0x2402340c

9000ecf4 <prvIdleTask>:
{
9000ecf4:	b580      	push	{r7, lr}
9000ecf6:	4c22      	ldr	r4, [pc, #136]	; (9000ed80 <prvIdleTask+0x8c>)
				taskYIELD();
9000ecf8:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
9000ecfc:	4e21      	ldr	r6, [pc, #132]	; (9000ed84 <prvIdleTask+0x90>)
9000ecfe:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
9000ed02:	4d21      	ldr	r5, [pc, #132]	; (9000ed88 <prvIdleTask+0x94>)
9000ed04:	4f21      	ldr	r7, [pc, #132]	; (9000ed8c <prvIdleTask+0x98>)
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000ed06:	6823      	ldr	r3, [r4, #0]
9000ed08:	b353      	cbz	r3, 9000ed60 <prvIdleTask+0x6c>
		{
			taskENTER_CRITICAL();
9000ed0a:	f7fe fd0b 	bl	9000d724 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ed0e:	68f3      	ldr	r3, [r6, #12]
9000ed10:	f8d3 a00c 	ldr.w	sl, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ed14:	f10a 0004 	add.w	r0, sl, #4
9000ed18:	f7fe fc88 	bl	9000d62c <uxListRemove>
				--uxCurrentNumberOfTasks;
9000ed1c:	682b      	ldr	r3, [r5, #0]
9000ed1e:	3b01      	subs	r3, #1
9000ed20:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
9000ed22:	6823      	ldr	r3, [r4, #0]
9000ed24:	3b01      	subs	r3, #1
9000ed26:	6023      	str	r3, [r4, #0]
			}
			taskEXIT_CRITICAL();
9000ed28:	f7fe fd1e 	bl	9000d768 <vPortExitCritical>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
9000ed2c:	f89a 305d 	ldrb.w	r3, [sl, #93]	; 0x5d
9000ed30:	b163      	cbz	r3, 9000ed4c <prvIdleTask+0x58>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
9000ed32:	2b01      	cmp	r3, #1
9000ed34:	d020      	beq.n	9000ed78 <prvIdleTask+0x84>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
9000ed36:	2b02      	cmp	r3, #2
9000ed38:	d0e5      	beq.n	9000ed06 <prvIdleTask+0x12>
9000ed3a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ed3e:	f383 8811 	msr	BASEPRI, r3
9000ed42:	f3bf 8f6f 	isb	sy
9000ed46:	f3bf 8f4f 	dsb	sy
9000ed4a:	e7fe      	b.n	9000ed4a <prvIdleTask+0x56>
				vPortFree( pxTCB->pxStack );
9000ed4c:	f8da 0030 	ldr.w	r0, [sl, #48]	; 0x30
9000ed50:	f7fe fbd0 	bl	9000d4f4 <vPortFree>
				vPortFree( pxTCB );
9000ed54:	4650      	mov	r0, sl
9000ed56:	f7fe fbcd 	bl	9000d4f4 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000ed5a:	6823      	ldr	r3, [r4, #0]
9000ed5c:	2b00      	cmp	r3, #0
9000ed5e:	d1d4      	bne.n	9000ed0a <prvIdleTask+0x16>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
9000ed60:	683b      	ldr	r3, [r7, #0]
9000ed62:	2b01      	cmp	r3, #1
9000ed64:	d905      	bls.n	9000ed72 <prvIdleTask+0x7e>
				taskYIELD();
9000ed66:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
9000ed6a:	f3bf 8f4f 	dsb	sy
9000ed6e:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
9000ed72:	f7f3 fec9 	bl	90002b08 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
9000ed76:	e7c6      	b.n	9000ed06 <prvIdleTask+0x12>
				vPortFree( pxTCB );
9000ed78:	4650      	mov	r0, sl
9000ed7a:	f7fe fbbb 	bl	9000d4f4 <vPortFree>
9000ed7e:	e7c2      	b.n	9000ed06 <prvIdleTask+0x12>
9000ed80:	240233e8 	.word	0x240233e8
9000ed84:	24023458 	.word	0x24023458
9000ed88:	240233e4 	.word	0x240233e4
9000ed8c:	24022f84 	.word	0x24022f84

9000ed90 <xTaskIncrementTick.part.0>:
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000ed90:	4b4a      	ldr	r3, [pc, #296]	; (9000eebc <xTaskIncrementTick.part.0+0x12c>)
BaseType_t xTaskIncrementTick( void )
9000ed92:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000ed96:	681e      	ldr	r6, [r3, #0]
BaseType_t xTaskIncrementTick( void )
9000ed98:	b083      	sub	sp, #12
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000ed9a:	3601      	adds	r6, #1
		xTickCount = xConstTickCount;
9000ed9c:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
9000ed9e:	2e00      	cmp	r6, #0
9000eda0:	d040      	beq.n	9000ee24 <xTaskIncrementTick.part.0+0x94>
9000eda2:	f8df b12c 	ldr.w	fp, [pc, #300]	; 9000eed0 <xTaskIncrementTick.part.0+0x140>
		if( xConstTickCount >= xNextTaskUnblockTime )
9000eda6:	f8db 3000 	ldr.w	r3, [fp]
9000edaa:	429e      	cmp	r6, r3
9000edac:	d347      	bcc.n	9000ee3e <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000edae:	4f44      	ldr	r7, [pc, #272]	; (9000eec0 <xTaskIncrementTick.part.0+0x130>)
9000edb0:	683b      	ldr	r3, [r7, #0]
9000edb2:	681d      	ldr	r5, [r3, #0]
9000edb4:	2d00      	cmp	r5, #0
9000edb6:	d077      	beq.n	9000eea8 <xTaskIncrementTick.part.0+0x118>
BaseType_t xSwitchRequired = pdFALSE;
9000edb8:	2500      	movs	r5, #0
9000edba:	f8df 9118 	ldr.w	r9, [pc, #280]	; 9000eed4 <xTaskIncrementTick.part.0+0x144>
9000edbe:	f8df a118 	ldr.w	sl, [pc, #280]	; 9000eed8 <xTaskIncrementTick.part.0+0x148>
					prvAddTaskToReadyList( pxTCB );
9000edc2:	f8df 8118 	ldr.w	r8, [pc, #280]	; 9000eedc <xTaskIncrementTick.part.0+0x14c>
9000edc6:	e022      	b.n	9000ee0e <xTaskIncrementTick.part.0+0x7e>
9000edc8:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000edca:	f7fe fc2f 	bl	9000d62c <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000edce:	6aa3      	ldr	r3, [r4, #40]	; 0x28
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000edd0:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000edd4:	9901      	ldr	r1, [sp, #4]
9000edd6:	b113      	cbz	r3, 9000edde <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000edd8:	f7fe fc28 	bl	9000d62c <uxListRemove>
9000eddc:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
9000edde:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000ede0:	f8d8 2000 	ldr.w	r2, [r8]
9000ede4:	eb03 0083 	add.w	r0, r3, r3, lsl #2
9000ede8:	4293      	cmp	r3, r2
9000edea:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9000edee:	d901      	bls.n	9000edf4 <xTaskIncrementTick.part.0+0x64>
9000edf0:	f8c8 3000 	str.w	r3, [r8]
9000edf4:	f7fe fbf2 	bl	9000d5dc <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000edf8:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000edfc:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000edfe:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
9000ee00:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ee02:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
9000ee04:	4291      	cmp	r1, r2
9000ee06:	bf28      	it	cs
9000ee08:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ee0a:	2b00      	cmp	r3, #0
9000ee0c:	d050      	beq.n	9000eeb0 <xTaskIncrementTick.part.0+0x120>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ee0e:	683b      	ldr	r3, [r7, #0]
9000ee10:	68db      	ldr	r3, [r3, #12]
9000ee12:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
9000ee14:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ee16:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
9000ee18:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ee1a:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
9000ee1c:	d2d4      	bcs.n	9000edc8 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
9000ee1e:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
9000ee22:	e011      	b.n	9000ee48 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
9000ee24:	4b26      	ldr	r3, [pc, #152]	; (9000eec0 <xTaskIncrementTick.part.0+0x130>)
9000ee26:	681a      	ldr	r2, [r3, #0]
9000ee28:	6812      	ldr	r2, [r2, #0]
9000ee2a:	b30a      	cbz	r2, 9000ee70 <xTaskIncrementTick.part.0+0xe0>
9000ee2c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ee30:	f383 8811 	msr	BASEPRI, r3
9000ee34:	f3bf 8f6f 	isb	sy
9000ee38:	f3bf 8f4f 	dsb	sy
9000ee3c:	e7fe      	b.n	9000ee3c <xTaskIncrementTick.part.0+0xac>
BaseType_t xSwitchRequired = pdFALSE;
9000ee3e:	2500      	movs	r5, #0
9000ee40:	f8df 9090 	ldr.w	r9, [pc, #144]	; 9000eed4 <xTaskIncrementTick.part.0+0x144>
9000ee44:	f8df a090 	ldr.w	sl, [pc, #144]	; 9000eed8 <xTaskIncrementTick.part.0+0x148>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9000ee48:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
9000ee4c:	491d      	ldr	r1, [pc, #116]	; (9000eec4 <xTaskIncrementTick.part.0+0x134>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9000ee4e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000ee50:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000ee54:	009b      	lsls	r3, r3, #2
9000ee56:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
9000ee5a:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
9000ee5c:	2a02      	cmp	r2, #2
9000ee5e:	bf28      	it	cs
9000ee60:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
9000ee62:	2b00      	cmp	r3, #0
}
9000ee64:	bf0c      	ite	eq
9000ee66:	4628      	moveq	r0, r5
9000ee68:	2001      	movne	r0, #1
9000ee6a:	b003      	add	sp, #12
9000ee6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
9000ee70:	4a15      	ldr	r2, [pc, #84]	; (9000eec8 <xTaskIncrementTick.part.0+0x138>)
9000ee72:	6818      	ldr	r0, [r3, #0]
9000ee74:	6811      	ldr	r1, [r2, #0]
9000ee76:	6019      	str	r1, [r3, #0]
9000ee78:	4914      	ldr	r1, [pc, #80]	; (9000eecc <xTaskIncrementTick.part.0+0x13c>)
9000ee7a:	6010      	str	r0, [r2, #0]
9000ee7c:	680a      	ldr	r2, [r1, #0]
9000ee7e:	3201      	adds	r2, #1
9000ee80:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ee82:	681a      	ldr	r2, [r3, #0]
9000ee84:	6812      	ldr	r2, [r2, #0]
9000ee86:	b932      	cbnz	r2, 9000ee96 <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
9000ee88:	f8df b044 	ldr.w	fp, [pc, #68]	; 9000eed0 <xTaskIncrementTick.part.0+0x140>
9000ee8c:	f04f 33ff 	mov.w	r3, #4294967295
9000ee90:	f8cb 3000 	str.w	r3, [fp]
9000ee94:	e787      	b.n	9000eda6 <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ee96:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000ee98:	f8df b034 	ldr.w	fp, [pc, #52]	; 9000eed0 <xTaskIncrementTick.part.0+0x140>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ee9c:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000ee9e:	68db      	ldr	r3, [r3, #12]
9000eea0:	685b      	ldr	r3, [r3, #4]
9000eea2:	f8cb 3000 	str.w	r3, [fp]
	}
}
9000eea6:	e77e      	b.n	9000eda6 <xTaskIncrementTick.part.0+0x16>
9000eea8:	f8df 9028 	ldr.w	r9, [pc, #40]	; 9000eed4 <xTaskIncrementTick.part.0+0x144>
9000eeac:	f8df a028 	ldr.w	sl, [pc, #40]	; 9000eed8 <xTaskIncrementTick.part.0+0x148>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000eeb0:	f04f 33ff 	mov.w	r3, #4294967295
9000eeb4:	f8cb 3000 	str.w	r3, [fp]
					break;
9000eeb8:	e7c6      	b.n	9000ee48 <xTaskIncrementTick.part.0+0xb8>
9000eeba:	bf00      	nop
9000eebc:	2402346c 	.word	0x2402346c
9000eec0:	24022f7c 	.word	0x24022f7c
9000eec4:	24023470 	.word	0x24023470
9000eec8:	24022f80 	.word	0x24022f80
9000eecc:	24023424 	.word	0x24023424
9000eed0:	24023420 	.word	0x24023420
9000eed4:	24022f84 	.word	0x24022f84
9000eed8:	24022f78 	.word	0x24022f78
9000eedc:	240233f4 	.word	0x240233f4

9000eee0 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
9000eee0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
9000eee4:	4d41      	ldr	r5, [pc, #260]	; (9000efec <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
9000eee6:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
9000eee8:	f7fe fc1c 	bl	9000d724 <vPortEnterCritical>
		--uxSchedulerSuspended;
9000eeec:	682b      	ldr	r3, [r5, #0]
9000eeee:	3b01      	subs	r3, #1
9000eef0:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000eef2:	682b      	ldr	r3, [r5, #0]
9000eef4:	2b00      	cmp	r3, #0
9000eef6:	d161      	bne.n	9000efbc <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
9000eef8:	4b3d      	ldr	r3, [pc, #244]	; (9000eff0 <xTaskResumeAll.part.0+0x110>)
9000eefa:	681b      	ldr	r3, [r3, #0]
9000eefc:	2b00      	cmp	r3, #0
9000eefe:	d05d      	beq.n	9000efbc <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000ef00:	4e3c      	ldr	r6, [pc, #240]	; (9000eff4 <xTaskResumeAll.part.0+0x114>)
9000ef02:	6833      	ldr	r3, [r6, #0]
9000ef04:	2b00      	cmp	r3, #0
9000ef06:	d06e      	beq.n	9000efe6 <xTaskResumeAll.part.0+0x106>
9000ef08:	4f3b      	ldr	r7, [pc, #236]	; (9000eff8 <xTaskResumeAll.part.0+0x118>)
9000ef0a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 9000f008 <xTaskResumeAll.part.0+0x128>
9000ef0e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 9000f00c <xTaskResumeAll.part.0+0x12c>
9000ef12:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 9000f010 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ef16:	68f3      	ldr	r3, [r6, #12]
9000ef18:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ef1a:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000ef1e:	f104 0018 	add.w	r0, r4, #24
9000ef22:	f7fe fb83 	bl	9000d62c <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ef26:	4658      	mov	r0, fp
9000ef28:	f7fe fb80 	bl	9000d62c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
9000ef2c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000ef2e:	683a      	ldr	r2, [r7, #0]
9000ef30:	4659      	mov	r1, fp
9000ef32:	eb03 0083 	add.w	r0, r3, r3, lsl #2
9000ef36:	4293      	cmp	r3, r2
9000ef38:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9000ef3c:	d900      	bls.n	9000ef40 <xTaskResumeAll.part.0+0x60>
9000ef3e:	603b      	str	r3, [r7, #0]
9000ef40:	f7fe fb4c 	bl	9000d5dc <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000ef44:	f8d8 3000 	ldr.w	r3, [r8]
9000ef48:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000ef4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000ef4c:	429a      	cmp	r2, r3
9000ef4e:	d33d      	bcc.n	9000efcc <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
9000ef50:	2301      	movs	r3, #1
9000ef52:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000ef56:	6833      	ldr	r3, [r6, #0]
9000ef58:	2b00      	cmp	r3, #0
9000ef5a:	d1dc      	bne.n	9000ef16 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ef5c:	4b27      	ldr	r3, [pc, #156]	; (9000effc <xTaskResumeAll.part.0+0x11c>)
9000ef5e:	681a      	ldr	r2, [r3, #0]
9000ef60:	6812      	ldr	r2, [r2, #0]
9000ef62:	2a00      	cmp	r2, #0
9000ef64:	d03a      	beq.n	9000efdc <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ef66:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000ef68:	4b25      	ldr	r3, [pc, #148]	; (9000f000 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ef6a:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000ef6c:	68d2      	ldr	r2, [r2, #12]
9000ef6e:	6852      	ldr	r2, [r2, #4]
9000ef70:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
9000ef72:	4e24      	ldr	r6, [pc, #144]	; (9000f004 <xTaskResumeAll.part.0+0x124>)
9000ef74:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
9000ef76:	b194      	cbz	r4, 9000ef9e <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
9000ef78:	2701      	movs	r7, #1
9000ef7a:	e006      	b.n	9000ef8a <xTaskResumeAll.part.0+0xaa>
9000ef7c:	f7ff ff08 	bl	9000ed90 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
9000ef80:	b108      	cbz	r0, 9000ef86 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
9000ef82:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000ef86:	3c01      	subs	r4, #1
9000ef88:	d008      	beq.n	9000ef9c <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000ef8a:	682b      	ldr	r3, [r5, #0]
9000ef8c:	2b00      	cmp	r3, #0
9000ef8e:	d0f5      	beq.n	9000ef7c <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
9000ef90:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000ef92:	3c01      	subs	r4, #1
		++xPendedTicks;
9000ef94:	f103 0301 	add.w	r3, r3, #1
9000ef98:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000ef9a:	d1f6      	bne.n	9000ef8a <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
9000ef9c:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
9000ef9e:	f8da 3000 	ldr.w	r3, [sl]
9000efa2:	b15b      	cbz	r3, 9000efbc <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
9000efa4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000efa8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000efac:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000efb0:	f3bf 8f4f 	dsb	sy
9000efb4:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
9000efb8:	2001      	movs	r0, #1
9000efba:	e000      	b.n	9000efbe <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
9000efbc:	2000      	movs	r0, #0
9000efbe:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
9000efc0:	f7fe fbd2 	bl	9000d768 <vPortExitCritical>
}
9000efc4:	9801      	ldr	r0, [sp, #4]
9000efc6:	b003      	add	sp, #12
9000efc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000efcc:	6833      	ldr	r3, [r6, #0]
9000efce:	2b00      	cmp	r3, #0
9000efd0:	d1a1      	bne.n	9000ef16 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000efd2:	4b0a      	ldr	r3, [pc, #40]	; (9000effc <xTaskResumeAll.part.0+0x11c>)
9000efd4:	681a      	ldr	r2, [r3, #0]
9000efd6:	6812      	ldr	r2, [r2, #0]
9000efd8:	2a00      	cmp	r2, #0
9000efda:	d1c4      	bne.n	9000ef66 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
9000efdc:	4b08      	ldr	r3, [pc, #32]	; (9000f000 <xTaskResumeAll.part.0+0x120>)
9000efde:	f04f 32ff 	mov.w	r2, #4294967295
9000efe2:	601a      	str	r2, [r3, #0]
9000efe4:	e7c5      	b.n	9000ef72 <xTaskResumeAll.part.0+0x92>
9000efe6:	f8df a028 	ldr.w	sl, [pc, #40]	; 9000f010 <xTaskResumeAll.part.0+0x130>
9000efea:	e7c2      	b.n	9000ef72 <xTaskResumeAll.part.0+0x92>
9000efec:	240233ec 	.word	0x240233ec
9000eff0:	240233e4 	.word	0x240233e4
9000eff4:	2402342c 	.word	0x2402342c
9000eff8:	240233f4 	.word	0x240233f4
9000effc:	24022f7c 	.word	0x24022f7c
9000f000:	24023420 	.word	0x24023420
9000f004:	24023428 	.word	0x24023428
9000f008:	24022f84 	.word	0x24022f84
9000f00c:	24022f78 	.word	0x24022f78
9000f010:	24023470 	.word	0x24023470

9000f014 <xTaskCreateStatic>:
	{
9000f014:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000f018:	b083      	sub	sp, #12
9000f01a:	4698      	mov	r8, r3
		configASSERT( puxStackBuffer != NULL );
9000f01c:	e9dd 340b 	ldrd	r3, r4, [sp, #44]	; 0x2c
9000f020:	b1bb      	cbz	r3, 9000f052 <xTaskCreateStatic+0x3e>
		configASSERT( pxTaskBuffer != NULL );
9000f022:	b16c      	cbz	r4, 9000f040 <xTaskCreateStatic+0x2c>
			volatile size_t xSize = sizeof( StaticTask_t );
9000f024:	2360      	movs	r3, #96	; 0x60
9000f026:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( TCB_t ) );
9000f028:	9b01      	ldr	r3, [sp, #4]
9000f02a:	2b60      	cmp	r3, #96	; 0x60
9000f02c:	d01a      	beq.n	9000f064 <xTaskCreateStatic+0x50>
9000f02e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f032:	f383 8811 	msr	BASEPRI, r3
9000f036:	f3bf 8f6f 	isb	sy
9000f03a:	f3bf 8f4f 	dsb	sy
9000f03e:	e7fe      	b.n	9000f03e <xTaskCreateStatic+0x2a>
9000f040:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f044:	f383 8811 	msr	BASEPRI, r3
9000f048:	f3bf 8f6f 	isb	sy
9000f04c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9000f050:	e7fe      	b.n	9000f050 <xTaskCreateStatic+0x3c>
9000f052:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f056:	f383 8811 	msr	BASEPRI, r3
9000f05a:	f3bf 8f6f 	isb	sy
9000f05e:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
9000f062:	e7fe      	b.n	9000f062 <xTaskCreateStatic+0x4e>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000f064:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f066:	0096      	lsls	r6, r2, #2
9000f068:	4607      	mov	r7, r0
9000f06a:	460d      	mov	r5, r1
9000f06c:	4618      	mov	r0, r3
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000f06e:	6323      	str	r3, [r4, #48]	; 0x30
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9000f070:	9b01      	ldr	r3, [sp, #4]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000f072:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f074:	4632      	mov	r2, r6
9000f076:	21a5      	movs	r1, #165	; 0xa5
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000f078:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f07c:	f017 fbf8 	bl	90026870 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f080:	1f32      	subs	r2, r6, #4
9000f082:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000f084:	4413      	add	r3, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000f086:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
9000f08a:	2d00      	cmp	r5, #0
9000f08c:	d069      	beq.n	9000f162 <xTaskCreateStatic+0x14e>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f08e:	782b      	ldrb	r3, [r5, #0]
9000f090:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
9000f094:	2b00      	cmp	r3, #0
9000f096:	d03b      	beq.n	9000f110 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f098:	786b      	ldrb	r3, [r5, #1]
9000f09a:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
9000f09e:	2b00      	cmp	r3, #0
9000f0a0:	d036      	beq.n	9000f110 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f0a2:	78ab      	ldrb	r3, [r5, #2]
9000f0a4:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
9000f0a8:	b393      	cbz	r3, 9000f110 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f0aa:	78eb      	ldrb	r3, [r5, #3]
9000f0ac:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
9000f0b0:	b373      	cbz	r3, 9000f110 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f0b2:	792b      	ldrb	r3, [r5, #4]
9000f0b4:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
9000f0b8:	b353      	cbz	r3, 9000f110 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f0ba:	796b      	ldrb	r3, [r5, #5]
9000f0bc:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
9000f0c0:	b333      	cbz	r3, 9000f110 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f0c2:	79ab      	ldrb	r3, [r5, #6]
9000f0c4:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
9000f0c8:	b313      	cbz	r3, 9000f110 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f0ca:	79eb      	ldrb	r3, [r5, #7]
9000f0cc:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
9000f0d0:	b1f3      	cbz	r3, 9000f110 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f0d2:	7a2b      	ldrb	r3, [r5, #8]
9000f0d4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
9000f0d8:	b1d3      	cbz	r3, 9000f110 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f0da:	7a6b      	ldrb	r3, [r5, #9]
9000f0dc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
9000f0e0:	b1b3      	cbz	r3, 9000f110 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f0e2:	7aab      	ldrb	r3, [r5, #10]
9000f0e4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
9000f0e8:	b193      	cbz	r3, 9000f110 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f0ea:	7aeb      	ldrb	r3, [r5, #11]
9000f0ec:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
9000f0f0:	b173      	cbz	r3, 9000f110 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f0f2:	7b2b      	ldrb	r3, [r5, #12]
9000f0f4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
9000f0f8:	b153      	cbz	r3, 9000f110 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f0fa:	7b6b      	ldrb	r3, [r5, #13]
9000f0fc:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
9000f100:	b133      	cbz	r3, 9000f110 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f102:	7bab      	ldrb	r3, [r5, #14]
9000f104:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
9000f108:	b113      	cbz	r3, 9000f110 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f10a:	7beb      	ldrb	r3, [r5, #15]
9000f10c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000f110:	2300      	movs	r3, #0
9000f112:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000f116:	9d0a      	ldr	r5, [sp, #40]	; 0x28
		pxNewTCB->uxMutexesHeld = 0;
9000f118:	2600      	movs	r6, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f11a:	1d20      	adds	r0, r4, #4
9000f11c:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
9000f11e:	6526      	str	r6, [r4, #80]	; 0x50
9000f120:	bf28      	it	cs
9000f122:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
9000f124:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9000f126:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f128:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f12c:	f7fe fa52 	bl	9000d5d4 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000f130:	f104 0018 	add.w	r0, r4, #24
9000f134:	f7fe fa4e 	bl	9000d5d4 <vListInitialiseItem>
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f138:	4642      	mov	r2, r8
9000f13a:	4639      	mov	r1, r7
		pxNewTCB->ulNotifiedValue = 0;
9000f13c:	65a6      	str	r6, [r4, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f13e:	4648      	mov	r0, r9
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f140:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000f142:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000f144:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
9000f146:	6566      	str	r6, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000f148:	f884 605c 	strb.w	r6, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f14c:	f7fe fac0 	bl	9000d6d0 <pxPortInitialiseStack>
9000f150:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
9000f152:	4620      	mov	r0, r4
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f154:	6023      	str	r3, [r4, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000f156:	f7ff fd45 	bl	9000ebe4 <prvAddNewTaskToReadyList>
	}
9000f15a:	4620      	mov	r0, r4
9000f15c:	b003      	add	sp, #12
9000f15e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9000f162:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
9000f166:	e7d6      	b.n	9000f116 <xTaskCreateStatic+0x102>

9000f168 <xTaskCreate>:
	{
9000f168:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9000f16c:	0096      	lsls	r6, r2, #2
	{
9000f16e:	4680      	mov	r8, r0
9000f170:	460d      	mov	r5, r1
9000f172:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9000f174:	4630      	mov	r0, r6
9000f176:	f7fe f8ff 	bl	9000d378 <pvPortMalloc>
			if( pxStack != NULL )
9000f17a:	2800      	cmp	r0, #0
9000f17c:	f000 8083 	beq.w	9000f286 <xTaskCreate+0x11e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
9000f180:	4607      	mov	r7, r0
9000f182:	2060      	movs	r0, #96	; 0x60
9000f184:	f7fe f8f8 	bl	9000d378 <pvPortMalloc>
				if( pxNewTCB != NULL )
9000f188:	4604      	mov	r4, r0
9000f18a:	2800      	cmp	r0, #0
9000f18c:	d07f      	beq.n	9000f28e <xTaskCreate+0x126>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
9000f18e:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
9000f190:	6307      	str	r7, [r0, #48]	; 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f192:	4632      	mov	r2, r6
9000f194:	4638      	mov	r0, r7
9000f196:	21a5      	movs	r1, #165	; 0xa5
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
9000f198:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f19c:	f017 fb68 	bl	90026870 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f1a0:	f8d4 a030 	ldr.w	sl, [r4, #48]	; 0x30
	if( pcName != NULL )
9000f1a4:	2d00      	cmp	r5, #0
9000f1a6:	d078      	beq.n	9000f29a <xTaskCreate+0x132>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f1a8:	782b      	ldrb	r3, [r5, #0]
9000f1aa:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
9000f1ae:	2b00      	cmp	r3, #0
9000f1b0:	d03b      	beq.n	9000f22a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f1b2:	786b      	ldrb	r3, [r5, #1]
9000f1b4:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
9000f1b8:	2b00      	cmp	r3, #0
9000f1ba:	d036      	beq.n	9000f22a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f1bc:	78ab      	ldrb	r3, [r5, #2]
9000f1be:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
9000f1c2:	b393      	cbz	r3, 9000f22a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f1c4:	78eb      	ldrb	r3, [r5, #3]
9000f1c6:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
9000f1ca:	b373      	cbz	r3, 9000f22a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f1cc:	792b      	ldrb	r3, [r5, #4]
9000f1ce:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
9000f1d2:	b353      	cbz	r3, 9000f22a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f1d4:	796b      	ldrb	r3, [r5, #5]
9000f1d6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
9000f1da:	b333      	cbz	r3, 9000f22a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f1dc:	79ab      	ldrb	r3, [r5, #6]
9000f1de:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
9000f1e2:	b313      	cbz	r3, 9000f22a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f1e4:	79eb      	ldrb	r3, [r5, #7]
9000f1e6:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
9000f1ea:	b1f3      	cbz	r3, 9000f22a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f1ec:	7a2b      	ldrb	r3, [r5, #8]
9000f1ee:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
9000f1f2:	b1d3      	cbz	r3, 9000f22a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f1f4:	7a6b      	ldrb	r3, [r5, #9]
9000f1f6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
9000f1fa:	b1b3      	cbz	r3, 9000f22a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f1fc:	7aab      	ldrb	r3, [r5, #10]
9000f1fe:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
9000f202:	b193      	cbz	r3, 9000f22a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f204:	7aeb      	ldrb	r3, [r5, #11]
9000f206:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
9000f20a:	b173      	cbz	r3, 9000f22a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f20c:	7b2b      	ldrb	r3, [r5, #12]
9000f20e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
9000f212:	b153      	cbz	r3, 9000f22a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f214:	7b6b      	ldrb	r3, [r5, #13]
9000f216:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
9000f21a:	b133      	cbz	r3, 9000f22a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f21c:	7bab      	ldrb	r3, [r5, #14]
9000f21e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
9000f222:	b113      	cbz	r3, 9000f22a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f224:	7beb      	ldrb	r3, [r5, #15]
9000f226:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000f22a:	2300      	movs	r3, #0
9000f22c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000f230:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
9000f232:	2700      	movs	r7, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f234:	1d20      	adds	r0, r4, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f236:	3e04      	subs	r6, #4
9000f238:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
9000f23a:	6527      	str	r7, [r4, #80]	; 0x50
9000f23c:	bf28      	it	cs
9000f23e:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
9000f240:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9000f242:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f244:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f248:	f7fe f9c4 	bl	9000d5d4 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000f24c:	f104 0018 	add.w	r0, r4, #24
9000f250:	f7fe f9c0 	bl	9000d5d4 <vListInitialiseItem>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f254:	eb0a 0006 	add.w	r0, sl, r6
		pxNewTCB->ulNotifiedValue = 0;
9000f258:	65a7      	str	r7, [r4, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f25a:	464a      	mov	r2, r9
9000f25c:	4641      	mov	r1, r8
9000f25e:	f020 0007 	bic.w	r0, r0, #7
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f262:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000f264:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000f266:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
9000f268:	6567      	str	r7, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000f26a:	f884 705c 	strb.w	r7, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f26e:	f7fe fa2f 	bl	9000d6d0 <pxPortInitialiseStack>
	if( pxCreatedTask != NULL )
9000f272:	9b09      	ldr	r3, [sp, #36]	; 0x24
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f274:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
9000f276:	b103      	cbz	r3, 9000f27a <xTaskCreate+0x112>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
9000f278:	601c      	str	r4, [r3, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000f27a:	4620      	mov	r0, r4
9000f27c:	f7ff fcb2 	bl	9000ebe4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
9000f280:	2001      	movs	r0, #1
	}
9000f282:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
9000f286:	f04f 30ff 	mov.w	r0, #4294967295
	}
9000f28a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					vPortFree( pxStack );
9000f28e:	4638      	mov	r0, r7
9000f290:	f7fe f930 	bl	9000d4f4 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
9000f294:	f04f 30ff 	mov.w	r0, #4294967295
9000f298:	e7f3      	b.n	9000f282 <xTaskCreate+0x11a>
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9000f29a:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
9000f29e:	e7c7      	b.n	9000f230 <xTaskCreate+0xc8>

9000f2a0 <vTaskDelay>:
	{
9000f2a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
9000f2a2:	b950      	cbnz	r0, 9000f2ba <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
9000f2a4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000f2a8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000f2ac:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000f2b0:	f3bf 8f4f 	dsb	sy
9000f2b4:	f3bf 8f6f 	isb	sy
	}
9000f2b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
9000f2ba:	4d1e      	ldr	r5, [pc, #120]	; (9000f334 <vTaskDelay+0x94>)
9000f2bc:	682b      	ldr	r3, [r5, #0]
9000f2be:	b143      	cbz	r3, 9000f2d2 <vTaskDelay+0x32>
9000f2c0:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f2c4:	f383 8811 	msr	BASEPRI, r3
9000f2c8:	f3bf 8f6f 	isb	sy
9000f2cc:	f3bf 8f4f 	dsb	sy
9000f2d0:	e7fe      	b.n	9000f2d0 <vTaskDelay+0x30>
	++uxSchedulerSuspended;
9000f2d2:	682b      	ldr	r3, [r5, #0]
9000f2d4:	4604      	mov	r4, r0
9000f2d6:	3301      	adds	r3, #1
9000f2d8:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
9000f2da:	4b17      	ldr	r3, [pc, #92]	; (9000f338 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f2dc:	4e17      	ldr	r6, [pc, #92]	; (9000f33c <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
9000f2de:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f2e0:	6830      	ldr	r0, [r6, #0]
9000f2e2:	3004      	adds	r0, #4
9000f2e4:	f7fe f9a2 	bl	9000d62c <uxListRemove>
		else
		{
			/* Calculate the time at which the task should be woken if the event
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;
9000f2e8:	19e4      	adds	r4, r4, r7

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000f2ea:	6833      	ldr	r3, [r6, #0]
9000f2ec:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
9000f2ee:	d315      	bcc.n	9000f31c <vTaskDelay+0x7c>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f2f0:	4b13      	ldr	r3, [pc, #76]	; (9000f340 <vTaskDelay+0xa0>)
9000f2f2:	6818      	ldr	r0, [r3, #0]
9000f2f4:	6831      	ldr	r1, [r6, #0]
9000f2f6:	3104      	adds	r1, #4
9000f2f8:	f7fe f980 	bl	9000d5fc <vListInsert>
	configASSERT( uxSchedulerSuspended );
9000f2fc:	682b      	ldr	r3, [r5, #0]
9000f2fe:	b943      	cbnz	r3, 9000f312 <vTaskDelay+0x72>
9000f300:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f304:	f383 8811 	msr	BASEPRI, r3
9000f308:	f3bf 8f6f 	isb	sy
9000f30c:	f3bf 8f4f 	dsb	sy
9000f310:	e7fe      	b.n	9000f310 <vTaskDelay+0x70>
9000f312:	f7ff fde5 	bl	9000eee0 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
9000f316:	2800      	cmp	r0, #0
9000f318:	d0c4      	beq.n	9000f2a4 <vTaskDelay+0x4>
	}
9000f31a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f31c:	4b09      	ldr	r3, [pc, #36]	; (9000f344 <vTaskDelay+0xa4>)
9000f31e:	6818      	ldr	r0, [r3, #0]
9000f320:	6831      	ldr	r1, [r6, #0]
9000f322:	3104      	adds	r1, #4
9000f324:	f7fe f96a 	bl	9000d5fc <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
9000f328:	4b07      	ldr	r3, [pc, #28]	; (9000f348 <vTaskDelay+0xa8>)
9000f32a:	681a      	ldr	r2, [r3, #0]
9000f32c:	4294      	cmp	r4, r2
9000f32e:	d2e5      	bcs.n	9000f2fc <vTaskDelay+0x5c>
				{
					xNextTaskUnblockTime = xTimeToWake;
9000f330:	601c      	str	r4, [r3, #0]
9000f332:	e7e3      	b.n	9000f2fc <vTaskDelay+0x5c>
9000f334:	240233ec 	.word	0x240233ec
9000f338:	2402346c 	.word	0x2402346c
9000f33c:	24022f78 	.word	0x24022f78
9000f340:	24022f80 	.word	0x24022f80
9000f344:	24022f7c 	.word	0x24022f7c
9000f348:	24023420 	.word	0x24023420

9000f34c <vTaskStartScheduler>:
{
9000f34c:	b570      	push	{r4, r5, r6, lr}
9000f34e:	b084      	sub	sp, #16
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
9000f350:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
9000f352:	4668      	mov	r0, sp
9000f354:	aa02      	add	r2, sp, #8
9000f356:	a901      	add	r1, sp, #4
		StackType_t *pxIdleTaskStackBuffer = NULL;
9000f358:	e9cd 4400 	strd	r4, r4, [sp]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
9000f35c:	f7fd ffee 	bl	9000d33c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
9000f360:	9d00      	ldr	r5, [sp, #0]
9000f362:	e9dd 0601 	ldrd	r0, r6, [sp, #4]
		configASSERT( puxStackBuffer != NULL );
9000f366:	b1b8      	cbz	r0, 9000f398 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
9000f368:	b16d      	cbz	r5, 9000f386 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
9000f36a:	2260      	movs	r2, #96	; 0x60
9000f36c:	9203      	str	r2, [sp, #12]
			configASSERT( xSize == sizeof( TCB_t ) );
9000f36e:	9a03      	ldr	r2, [sp, #12]
9000f370:	2a60      	cmp	r2, #96	; 0x60
9000f372:	d01a      	beq.n	9000f3aa <vTaskStartScheduler+0x5e>
9000f374:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f378:	f383 8811 	msr	BASEPRI, r3
9000f37c:	f3bf 8f6f 	isb	sy
9000f380:	f3bf 8f4f 	dsb	sy
9000f384:	e7fe      	b.n	9000f384 <vTaskStartScheduler+0x38>
9000f386:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f38a:	f383 8811 	msr	BASEPRI, r3
9000f38e:	f3bf 8f6f 	isb	sy
9000f392:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9000f396:	e7fe      	b.n	9000f396 <vTaskStartScheduler+0x4a>
9000f398:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f39c:	f383 8811 	msr	BASEPRI, r3
9000f3a0:	f3bf 8f6f 	isb	sy
9000f3a4:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
9000f3a8:	e7fe      	b.n	9000f3a8 <vTaskStartScheduler+0x5c>
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f3aa:	00b6      	lsls	r6, r6, #2
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000f3ac:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f3ae:	21a5      	movs	r1, #165	; 0xa5
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000f3b0:	6328      	str	r0, [r5, #48]	; 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f3b2:	4632      	mov	r2, r6
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000f3b4:	f885 305d 	strb.w	r3, [r5, #93]	; 0x5d
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9000f3b8:	9b03      	ldr	r3, [sp, #12]
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f3ba:	f017 fa59 	bl	90026870 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f3be:	1f33      	subs	r3, r6, #4
9000f3c0:	6b2a      	ldr	r2, [r5, #48]	; 0x30
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f3c2:	492a      	ldr	r1, [pc, #168]	; (9000f46c <vTaskStartScheduler+0x120>)
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f3c4:	1d28      	adds	r0, r5, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f3c6:	441a      	add	r2, r3
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f3c8:	f885 4038 	strb.w	r4, [r5, #56]	; 0x38
9000f3cc:	6369      	str	r1, [r5, #52]	; 0x34
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000f3ce:	f885 4043 	strb.w	r4, [r5, #67]	; 0x43
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000f3d2:	f022 0607 	bic.w	r6, r2, #7
	pxNewTCB->uxPriority = uxPriority;
9000f3d6:	62ec      	str	r4, [r5, #44]	; 0x2c
		pxNewTCB->uxMutexesHeld = 0;
9000f3d8:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f3dc:	f7fe f8fa 	bl	9000d5d4 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000f3e0:	f105 0018 	add.w	r0, r5, #24
9000f3e4:	f7fe f8f6 	bl	9000d5d4 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f3e8:	2338      	movs	r3, #56	; 0x38
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f3ea:	4622      	mov	r2, r4
9000f3ec:	4920      	ldr	r1, [pc, #128]	; (9000f470 <vTaskStartScheduler+0x124>)
		pxNewTCB->ulNotifiedValue = 0;
9000f3ee:	65ac      	str	r4, [r5, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f3f0:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f3f2:	61ab      	str	r3, [r5, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000f3f4:	612d      	str	r5, [r5, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000f3f6:	626d      	str	r5, [r5, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
9000f3f8:	656c      	str	r4, [r5, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000f3fa:	f885 405c 	strb.w	r4, [r5, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f3fe:	f7fe f967 	bl	9000d6d0 <pxPortInitialiseStack>
9000f402:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
9000f404:	4628      	mov	r0, r5
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f406:	602b      	str	r3, [r5, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000f408:	f7ff fbec 	bl	9000ebe4 <prvAddNewTaskToReadyList>
			xReturn = xTimerCreateTimerTask();
9000f40c:	f000 fca4 	bl	9000fd58 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
9000f410:	2801      	cmp	r0, #1
9000f412:	d00c      	beq.n	9000f42e <vTaskStartScheduler+0xe2>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
9000f414:	3001      	adds	r0, #1
9000f416:	d001      	beq.n	9000f41c <vTaskStartScheduler+0xd0>
}
9000f418:	b004      	add	sp, #16
9000f41a:	bd70      	pop	{r4, r5, r6, pc}
9000f41c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f420:	f383 8811 	msr	BASEPRI, r3
9000f424:	f3bf 8f6f 	isb	sy
9000f428:	f3bf 8f4f 	dsb	sy
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
9000f42c:	e7fe      	b.n	9000f42c <vTaskStartScheduler+0xe0>
9000f42e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f432:	f383 8811 	msr	BASEPRI, r3
9000f436:	f3bf 8f6f 	isb	sy
9000f43a:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
9000f43e:	4b0d      	ldr	r3, [pc, #52]	; (9000f474 <vTaskStartScheduler+0x128>)
9000f440:	f04f 32ff 	mov.w	r2, #4294967295
		xSchedulerRunning = pdTRUE;
9000f444:	490c      	ldr	r1, [pc, #48]	; (9000f478 <vTaskStartScheduler+0x12c>)
		xNextTaskUnblockTime = portMAX_DELAY;
9000f446:	601a      	str	r2, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
9000f448:	4b0c      	ldr	r3, [pc, #48]	; (9000f47c <vTaskStartScheduler+0x130>)
		traceTASK_SWITCHED_IN();
9000f44a:	4a0d      	ldr	r2, [pc, #52]	; (9000f480 <vTaskStartScheduler+0x134>)
		xSchedulerRunning = pdTRUE;
9000f44c:	6008      	str	r0, [r1, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
9000f44e:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
9000f450:	6813      	ldr	r3, [r2, #0]
		if( xTask == NULL )
9000f452:	b143      	cbz	r3, 9000f466 <vTaskStartScheduler+0x11a>
		if( xTCB->pxTaskTag != NULL )
9000f454:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000f456:	b10b      	cbz	r3, 9000f45c <vTaskStartScheduler+0x110>
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f458:	2000      	movs	r0, #0
9000f45a:	4798      	blx	r3
}
9000f45c:	b004      	add	sp, #16
9000f45e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		if( xPortStartScheduler() != pdFALSE )
9000f462:	f7fe b9f1 	b.w	9000d848 <xPortStartScheduler>
			xTCB = pxCurrentTCB;
9000f466:	6813      	ldr	r3, [r2, #0]
9000f468:	e7f4      	b.n	9000f454 <vTaskStartScheduler+0x108>
9000f46a:	bf00      	nop
9000f46c:	454c4449 	.word	0x454c4449
9000f470:	9000ecf5 	.word	0x9000ecf5
9000f474:	24023420 	.word	0x24023420
9000f478:	24023440 	.word	0x24023440
9000f47c:	2402346c 	.word	0x2402346c
9000f480:	24022f78 	.word	0x24022f78

9000f484 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
9000f484:	4a02      	ldr	r2, [pc, #8]	; (9000f490 <vTaskSuspendAll+0xc>)
9000f486:	6813      	ldr	r3, [r2, #0]
9000f488:	3301      	adds	r3, #1
9000f48a:	6013      	str	r3, [r2, #0]
}
9000f48c:	4770      	bx	lr
9000f48e:	bf00      	nop
9000f490:	240233ec 	.word	0x240233ec

9000f494 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
9000f494:	4b06      	ldr	r3, [pc, #24]	; (9000f4b0 <xTaskResumeAll+0x1c>)
9000f496:	681b      	ldr	r3, [r3, #0]
9000f498:	b943      	cbnz	r3, 9000f4ac <xTaskResumeAll+0x18>
9000f49a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f49e:	f383 8811 	msr	BASEPRI, r3
9000f4a2:	f3bf 8f6f 	isb	sy
9000f4a6:	f3bf 8f4f 	dsb	sy
9000f4aa:	e7fe      	b.n	9000f4aa <xTaskResumeAll+0x16>
9000f4ac:	f7ff bd18 	b.w	9000eee0 <xTaskResumeAll.part.0>
9000f4b0:	240233ec 	.word	0x240233ec

9000f4b4 <xTaskGetTickCount>:
		xTicks = xTickCount;
9000f4b4:	4b01      	ldr	r3, [pc, #4]	; (9000f4bc <xTaskGetTickCount+0x8>)
9000f4b6:	6818      	ldr	r0, [r3, #0]
}
9000f4b8:	4770      	bx	lr
9000f4ba:	bf00      	nop
9000f4bc:	2402346c 	.word	0x2402346c

9000f4c0 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000f4c0:	4b05      	ldr	r3, [pc, #20]	; (9000f4d8 <xTaskIncrementTick+0x18>)
9000f4c2:	681b      	ldr	r3, [r3, #0]
9000f4c4:	b90b      	cbnz	r3, 9000f4ca <xTaskIncrementTick+0xa>
9000f4c6:	f7ff bc63 	b.w	9000ed90 <xTaskIncrementTick.part.0>
		++xPendedTicks;
9000f4ca:	4a04      	ldr	r2, [pc, #16]	; (9000f4dc <xTaskIncrementTick+0x1c>)
}
9000f4cc:	2000      	movs	r0, #0
		++xPendedTicks;
9000f4ce:	6813      	ldr	r3, [r2, #0]
9000f4d0:	3301      	adds	r3, #1
9000f4d2:	6013      	str	r3, [r2, #0]
}
9000f4d4:	4770      	bx	lr
9000f4d6:	bf00      	nop
9000f4d8:	240233ec 	.word	0x240233ec
9000f4dc:	24023428 	.word	0x24023428

9000f4e0 <vTaskSetApplicationTaskTag>:
	{
9000f4e0:	b538      	push	{r3, r4, r5, lr}
9000f4e2:	460d      	mov	r5, r1
		if( xTask == NULL )
9000f4e4:	b138      	cbz	r0, 9000f4f6 <vTaskSetApplicationTaskTag+0x16>
9000f4e6:	4604      	mov	r4, r0
		taskENTER_CRITICAL();
9000f4e8:	f7fe f91c 	bl	9000d724 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
9000f4ec:	6565      	str	r5, [r4, #84]	; 0x54
	}
9000f4ee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
9000f4f2:	f7fe b939 	b.w	9000d768 <vPortExitCritical>
			xTCB = ( TCB_t * ) pxCurrentTCB;
9000f4f6:	4b04      	ldr	r3, [pc, #16]	; (9000f508 <vTaskSetApplicationTaskTag+0x28>)
9000f4f8:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
9000f4fa:	f7fe f913 	bl	9000d724 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
9000f4fe:	6565      	str	r5, [r4, #84]	; 0x54
	}
9000f500:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
9000f504:	f7fe b930 	b.w	9000d768 <vPortExitCritical>
9000f508:	24022f78 	.word	0x24022f78

9000f50c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
9000f50c:	4b27      	ldr	r3, [pc, #156]	; (9000f5ac <vTaskSwitchContext+0xa0>)
9000f50e:	681b      	ldr	r3, [r3, #0]
9000f510:	b11b      	cbz	r3, 9000f51a <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
9000f512:	4b27      	ldr	r3, [pc, #156]	; (9000f5b0 <vTaskSwitchContext+0xa4>)
9000f514:	2201      	movs	r2, #1
9000f516:	601a      	str	r2, [r3, #0]
9000f518:	4770      	bx	lr
{
9000f51a:	b570      	push	{r4, r5, r6, lr}
		xYieldPending = pdFALSE;
9000f51c:	4a24      	ldr	r2, [pc, #144]	; (9000f5b0 <vTaskSwitchContext+0xa4>)
		traceTASK_SWITCHED_OUT();
9000f51e:	4c25      	ldr	r4, [pc, #148]	; (9000f5b4 <vTaskSwitchContext+0xa8>)
		xYieldPending = pdFALSE;
9000f520:	6013      	str	r3, [r2, #0]
		traceTASK_SWITCHED_OUT();
9000f522:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
9000f524:	2b00      	cmp	r3, #0
9000f526:	d036      	beq.n	9000f596 <vTaskSwitchContext+0x8a>
		if( xTCB->pxTaskTag != NULL )
9000f528:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000f52a:	b10b      	cbz	r3, 9000f530 <vTaskSwitchContext+0x24>
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f52c:	2001      	movs	r0, #1
9000f52e:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f530:	4d21      	ldr	r5, [pc, #132]	; (9000f5b8 <vTaskSwitchContext+0xac>)
9000f532:	4922      	ldr	r1, [pc, #136]	; (9000f5bc <vTaskSwitchContext+0xb0>)
9000f534:	682b      	ldr	r3, [r5, #0]
9000f536:	eb03 0283 	add.w	r2, r3, r3, lsl #2
9000f53a:	0098      	lsls	r0, r3, #2
9000f53c:	0092      	lsls	r2, r2, #2
9000f53e:	588a      	ldr	r2, [r1, r2]
9000f540:	b942      	cbnz	r2, 9000f554 <vTaskSwitchContext+0x48>
9000f542:	b1fb      	cbz	r3, 9000f584 <vTaskSwitchContext+0x78>
9000f544:	3b01      	subs	r3, #1
9000f546:	eb03 0283 	add.w	r2, r3, r3, lsl #2
9000f54a:	0098      	lsls	r0, r3, #2
9000f54c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
9000f550:	2a00      	cmp	r2, #0
9000f552:	d0f6      	beq.n	9000f542 <vTaskSwitchContext+0x36>
9000f554:	4418      	add	r0, r3
9000f556:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
9000f55a:	f8dc 1004 	ldr.w	r1, [ip, #4]
9000f55e:	4662      	mov	r2, ip
9000f560:	6849      	ldr	r1, [r1, #4]
9000f562:	3208      	adds	r2, #8
9000f564:	4291      	cmp	r1, r2
9000f566:	f8cc 1004 	str.w	r1, [ip, #4]
9000f56a:	d01b      	beq.n	9000f5a4 <vTaskSwitchContext+0x98>
9000f56c:	68ca      	ldr	r2, [r1, #12]
9000f56e:	6022      	str	r2, [r4, #0]
9000f570:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
9000f572:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
9000f574:	b1a3      	cbz	r3, 9000f5a0 <vTaskSwitchContext+0x94>
		if( xTCB->pxTaskTag != NULL )
9000f576:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000f578:	b11b      	cbz	r3, 9000f582 <vTaskSwitchContext+0x76>
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f57a:	2000      	movs	r0, #0
}
9000f57c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f580:	4718      	bx	r3
}
9000f582:	bd70      	pop	{r4, r5, r6, pc}
9000f584:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f588:	f383 8811 	msr	BASEPRI, r3
9000f58c:	f3bf 8f6f 	isb	sy
9000f590:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f594:	e7fe      	b.n	9000f594 <vTaskSwitchContext+0x88>
			xTCB = pxCurrentTCB;
9000f596:	6823      	ldr	r3, [r4, #0]
		if( xTCB->pxTaskTag != NULL )
9000f598:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000f59a:	2b00      	cmp	r3, #0
9000f59c:	d1c6      	bne.n	9000f52c <vTaskSwitchContext+0x20>
9000f59e:	e7c7      	b.n	9000f530 <vTaskSwitchContext+0x24>
			xTCB = pxCurrentTCB;
9000f5a0:	6823      	ldr	r3, [r4, #0]
9000f5a2:	e7e8      	b.n	9000f576 <vTaskSwitchContext+0x6a>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f5a4:	6849      	ldr	r1, [r1, #4]
9000f5a6:	f8cc 1004 	str.w	r1, [ip, #4]
9000f5aa:	e7df      	b.n	9000f56c <vTaskSwitchContext+0x60>
9000f5ac:	240233ec 	.word	0x240233ec
9000f5b0:	24023470 	.word	0x24023470
9000f5b4:	24022f78 	.word	0x24022f78
9000f5b8:	240233f4 	.word	0x240233f4
9000f5bc:	24022f84 	.word	0x24022f84

9000f5c0 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
9000f5c0:	b1f0      	cbz	r0, 9000f600 <vTaskPlaceOnEventList+0x40>
{
9000f5c2:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
9000f5c4:	4d1a      	ldr	r5, [pc, #104]	; (9000f630 <vTaskPlaceOnEventList+0x70>)
9000f5c6:	460c      	mov	r4, r1
9000f5c8:	6829      	ldr	r1, [r5, #0]
9000f5ca:	3118      	adds	r1, #24
9000f5cc:	f7fe f816 	bl	9000d5fc <vListInsert>
const TickType_t xConstTickCount = xTickCount;
9000f5d0:	4b18      	ldr	r3, [pc, #96]	; (9000f634 <vTaskPlaceOnEventList+0x74>)
9000f5d2:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f5d4:	6828      	ldr	r0, [r5, #0]
9000f5d6:	3004      	adds	r0, #4
9000f5d8:	f7fe f828 	bl	9000d62c <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
9000f5dc:	1c63      	adds	r3, r4, #1
9000f5de:	d020      	beq.n	9000f622 <vTaskPlaceOnEventList+0x62>
			xTimeToWake = xConstTickCount + xTicksToWait;
9000f5e0:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000f5e2:	682b      	ldr	r3, [r5, #0]
9000f5e4:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
9000f5e6:	d214      	bcs.n	9000f612 <vTaskPlaceOnEventList+0x52>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f5e8:	4b13      	ldr	r3, [pc, #76]	; (9000f638 <vTaskPlaceOnEventList+0x78>)
9000f5ea:	6818      	ldr	r0, [r3, #0]
9000f5ec:	6829      	ldr	r1, [r5, #0]
9000f5ee:	3104      	adds	r1, #4
9000f5f0:	f7fe f804 	bl	9000d5fc <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
9000f5f4:	4b11      	ldr	r3, [pc, #68]	; (9000f63c <vTaskPlaceOnEventList+0x7c>)
9000f5f6:	681a      	ldr	r2, [r3, #0]
9000f5f8:	4294      	cmp	r4, r2
9000f5fa:	d200      	bcs.n	9000f5fe <vTaskPlaceOnEventList+0x3e>
					xNextTaskUnblockTime = xTimeToWake;
9000f5fc:	601c      	str	r4, [r3, #0]
}
9000f5fe:	bd70      	pop	{r4, r5, r6, pc}
9000f600:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f604:	f383 8811 	msr	BASEPRI, r3
9000f608:	f3bf 8f6f 	isb	sy
9000f60c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
9000f610:	e7fe      	b.n	9000f610 <vTaskPlaceOnEventList+0x50>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f612:	4b0b      	ldr	r3, [pc, #44]	; (9000f640 <vTaskPlaceOnEventList+0x80>)
9000f614:	6818      	ldr	r0, [r3, #0]
9000f616:	6829      	ldr	r1, [r5, #0]
}
9000f618:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f61c:	3104      	adds	r1, #4
9000f61e:	f7fd bfed 	b.w	9000d5fc <vListInsert>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f622:	6829      	ldr	r1, [r5, #0]
9000f624:	4807      	ldr	r0, [pc, #28]	; (9000f644 <vTaskPlaceOnEventList+0x84>)
9000f626:	3104      	adds	r1, #4
}
9000f628:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f62c:	f7fd bfd6 	b.w	9000d5dc <vListInsertEnd>
9000f630:	24022f78 	.word	0x24022f78
9000f634:	2402346c 	.word	0x2402346c
9000f638:	24022f7c 	.word	0x24022f7c
9000f63c:	24023420 	.word	0x24023420
9000f640:	24022f80 	.word	0x24022f80
9000f644:	24023444 	.word	0x24023444

9000f648 <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
9000f648:	b358      	cbz	r0, 9000f6a2 <vTaskPlaceOnEventListRestricted+0x5a>
	{
9000f64a:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
9000f64c:	4e1d      	ldr	r6, [pc, #116]	; (9000f6c4 <vTaskPlaceOnEventListRestricted+0x7c>)
9000f64e:	460c      	mov	r4, r1
9000f650:	4615      	mov	r5, r2
9000f652:	6831      	ldr	r1, [r6, #0]
9000f654:	3118      	adds	r1, #24
9000f656:	f7fd ffc1 	bl	9000d5dc <vListInsertEnd>
		if( xWaitIndefinitely != pdFALSE )
9000f65a:	b165      	cbz	r5, 9000f676 <vTaskPlaceOnEventListRestricted+0x2e>
const TickType_t xConstTickCount = xTickCount;
9000f65c:	4b1a      	ldr	r3, [pc, #104]	; (9000f6c8 <vTaskPlaceOnEventListRestricted+0x80>)
9000f65e:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f660:	6830      	ldr	r0, [r6, #0]
9000f662:	3004      	adds	r0, #4
9000f664:	f7fd ffe2 	bl	9000d62c <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f668:	6831      	ldr	r1, [r6, #0]
9000f66a:	4818      	ldr	r0, [pc, #96]	; (9000f6cc <vTaskPlaceOnEventListRestricted+0x84>)
9000f66c:	3104      	adds	r1, #4
	}
9000f66e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f672:	f7fd bfb3 	b.w	9000d5dc <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
9000f676:	4b14      	ldr	r3, [pc, #80]	; (9000f6c8 <vTaskPlaceOnEventListRestricted+0x80>)
9000f678:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f67a:	6830      	ldr	r0, [r6, #0]
9000f67c:	3004      	adds	r0, #4
9000f67e:	f7fd ffd5 	bl	9000d62c <uxListRemove>
			xTimeToWake = xConstTickCount + xTicksToWait;
9000f682:	1964      	adds	r4, r4, r5
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000f684:	6833      	ldr	r3, [r6, #0]
9000f686:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
9000f688:	d214      	bcs.n	9000f6b4 <vTaskPlaceOnEventListRestricted+0x6c>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f68a:	4b11      	ldr	r3, [pc, #68]	; (9000f6d0 <vTaskPlaceOnEventListRestricted+0x88>)
9000f68c:	6818      	ldr	r0, [r3, #0]
9000f68e:	6831      	ldr	r1, [r6, #0]
9000f690:	3104      	adds	r1, #4
9000f692:	f7fd ffb3 	bl	9000d5fc <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
9000f696:	4b0f      	ldr	r3, [pc, #60]	; (9000f6d4 <vTaskPlaceOnEventListRestricted+0x8c>)
9000f698:	681a      	ldr	r2, [r3, #0]
9000f69a:	4294      	cmp	r4, r2
9000f69c:	d200      	bcs.n	9000f6a0 <vTaskPlaceOnEventListRestricted+0x58>
					xNextTaskUnblockTime = xTimeToWake;
9000f69e:	601c      	str	r4, [r3, #0]
	}
9000f6a0:	bd70      	pop	{r4, r5, r6, pc}
9000f6a2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f6a6:	f383 8811 	msr	BASEPRI, r3
9000f6aa:	f3bf 8f6f 	isb	sy
9000f6ae:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
9000f6b2:	e7fe      	b.n	9000f6b2 <vTaskPlaceOnEventListRestricted+0x6a>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f6b4:	4b08      	ldr	r3, [pc, #32]	; (9000f6d8 <vTaskPlaceOnEventListRestricted+0x90>)
9000f6b6:	6818      	ldr	r0, [r3, #0]
9000f6b8:	6831      	ldr	r1, [r6, #0]
	}
9000f6ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f6be:	3104      	adds	r1, #4
9000f6c0:	f7fd bf9c 	b.w	9000d5fc <vListInsert>
9000f6c4:	24022f78 	.word	0x24022f78
9000f6c8:	2402346c 	.word	0x2402346c
9000f6cc:	24023444 	.word	0x24023444
9000f6d0:	24022f7c 	.word	0x24022f7c
9000f6d4:	24023420 	.word	0x24023420
9000f6d8:	24022f80 	.word	0x24022f80

9000f6dc <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f6dc:	68c3      	ldr	r3, [r0, #12]
{
9000f6de:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f6e0:	68dc      	ldr	r4, [r3, #12]
{
9000f6e2:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
9000f6e4:	b35c      	cbz	r4, 9000f73e <xTaskRemoveFromEventList+0x62>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
9000f6e6:	f104 0518 	add.w	r5, r4, #24
9000f6ea:	4628      	mov	r0, r5
9000f6ec:	f7fd ff9e 	bl	9000d62c <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000f6f0:	4b19      	ldr	r3, [pc, #100]	; (9000f758 <xTaskRemoveFromEventList+0x7c>)
9000f6f2:	681b      	ldr	r3, [r3, #0]
9000f6f4:	b17b      	cbz	r3, 9000f716 <xTaskRemoveFromEventList+0x3a>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
9000f6f6:	4629      	mov	r1, r5
9000f6f8:	4818      	ldr	r0, [pc, #96]	; (9000f75c <xTaskRemoveFromEventList+0x80>)
9000f6fa:	f7fd ff6f 	bl	9000d5dc <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
9000f6fe:	4b18      	ldr	r3, [pc, #96]	; (9000f760 <xTaskRemoveFromEventList+0x84>)
9000f700:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000f702:	681b      	ldr	r3, [r3, #0]
9000f704:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000f706:	429a      	cmp	r2, r3
9000f708:	d922      	bls.n	9000f750 <xTaskRemoveFromEventList+0x74>
		xYieldPending = pdTRUE;
9000f70a:	2301      	movs	r3, #1
9000f70c:	4a15      	ldr	r2, [pc, #84]	; (9000f764 <xTaskRemoveFromEventList+0x88>)
		xReturn = pdTRUE;
9000f70e:	4618      	mov	r0, r3
		xYieldPending = pdTRUE;
9000f710:	6013      	str	r3, [r2, #0]
}
9000f712:	b003      	add	sp, #12
9000f714:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
9000f716:	1d21      	adds	r1, r4, #4
9000f718:	4608      	mov	r0, r1
9000f71a:	9101      	str	r1, [sp, #4]
9000f71c:	f7fd ff86 	bl	9000d62c <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
9000f720:	4a11      	ldr	r2, [pc, #68]	; (9000f768 <xTaskRemoveFromEventList+0x8c>)
9000f722:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000f724:	6810      	ldr	r0, [r2, #0]
9000f726:	9901      	ldr	r1, [sp, #4]
9000f728:	4283      	cmp	r3, r0
9000f72a:	d900      	bls.n	9000f72e <xTaskRemoveFromEventList+0x52>
9000f72c:	6013      	str	r3, [r2, #0]
9000f72e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000f732:	480e      	ldr	r0, [pc, #56]	; (9000f76c <xTaskRemoveFromEventList+0x90>)
9000f734:	eb00 0083 	add.w	r0, r0, r3, lsl #2
9000f738:	f7fd ff50 	bl	9000d5dc <vListInsertEnd>
9000f73c:	e7df      	b.n	9000f6fe <xTaskRemoveFromEventList+0x22>
9000f73e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f742:	f383 8811 	msr	BASEPRI, r3
9000f746:	f3bf 8f6f 	isb	sy
9000f74a:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
9000f74e:	e7fe      	b.n	9000f74e <xTaskRemoveFromEventList+0x72>
		xReturn = pdFALSE;
9000f750:	2000      	movs	r0, #0
}
9000f752:	b003      	add	sp, #12
9000f754:	bd30      	pop	{r4, r5, pc}
9000f756:	bf00      	nop
9000f758:	240233ec 	.word	0x240233ec
9000f75c:	2402342c 	.word	0x2402342c
9000f760:	24022f78 	.word	0x24022f78
9000f764:	24023470 	.word	0x24023470
9000f768:	240233f4 	.word	0x240233f4
9000f76c:	24022f84 	.word	0x24022f84

9000f770 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9000f770:	4a03      	ldr	r2, [pc, #12]	; (9000f780 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f772:	4b04      	ldr	r3, [pc, #16]	; (9000f784 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9000f774:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f776:	681b      	ldr	r3, [r3, #0]
9000f778:	e9c0 2300 	strd	r2, r3, [r0]
}
9000f77c:	4770      	bx	lr
9000f77e:	bf00      	nop
9000f780:	24023424 	.word	0x24023424
9000f784:	2402346c 	.word	0x2402346c

9000f788 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
9000f788:	b328      	cbz	r0, 9000f7d6 <xTaskCheckForTimeOut+0x4e>
{
9000f78a:	b5f0      	push	{r4, r5, r6, r7, lr}
9000f78c:	460d      	mov	r5, r1
9000f78e:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
9000f790:	b1c1      	cbz	r1, 9000f7c4 <xTaskCheckForTimeOut+0x3c>
9000f792:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
9000f794:	f7fd ffc6 	bl	9000d724 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
9000f798:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
9000f79a:	4a1d      	ldr	r2, [pc, #116]	; (9000f810 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
9000f79c:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
9000f79e:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
9000f7a0:	d030      	beq.n	9000f804 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
9000f7a2:	f8df c070 	ldr.w	ip, [pc, #112]	; 9000f814 <xTaskCheckForTimeOut+0x8c>
9000f7a6:	6826      	ldr	r6, [r4, #0]
9000f7a8:	f8dc 7000 	ldr.w	r7, [ip]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
9000f7ac:	6860      	ldr	r0, [r4, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
9000f7ae:	42be      	cmp	r6, r7
9000f7b0:	d01a      	beq.n	9000f7e8 <xTaskCheckForTimeOut+0x60>
9000f7b2:	4288      	cmp	r0, r1
9000f7b4:	d818      	bhi.n	9000f7e8 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
9000f7b6:	2001      	movs	r0, #1
9000f7b8:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
9000f7ba:	f7fd ffd5 	bl	9000d768 <vPortExitCritical>
}
9000f7be:	9801      	ldr	r0, [sp, #4]
9000f7c0:	b003      	add	sp, #12
9000f7c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000f7c4:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f7c8:	f383 8811 	msr	BASEPRI, r3
9000f7cc:	f3bf 8f6f 	isb	sy
9000f7d0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
9000f7d4:	e7fe      	b.n	9000f7d4 <xTaskCheckForTimeOut+0x4c>
9000f7d6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f7da:	f383 8811 	msr	BASEPRI, r3
9000f7de:	f3bf 8f6f 	isb	sy
9000f7e2:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
9000f7e6:	e7fe      	b.n	9000f7e6 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
9000f7e8:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
9000f7ec:	4573      	cmp	r3, lr
9000f7ee:	d90b      	bls.n	9000f808 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
9000f7f0:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9000f7f2:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f7f6:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
9000f7f8:	4403      	add	r3, r0
			xReturn = pdFALSE;
9000f7fa:	2000      	movs	r0, #0
			*pxTicksToWait -= xElapsedTime;
9000f7fc:	602b      	str	r3, [r5, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f7fe:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
9000f802:	e7d9      	b.n	9000f7b8 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
9000f804:	2000      	movs	r0, #0
9000f806:	e7d7      	b.n	9000f7b8 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
9000f808:	2300      	movs	r3, #0
			xReturn = pdTRUE;
9000f80a:	2001      	movs	r0, #1
			*pxTicksToWait = 0;
9000f80c:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
9000f80e:	e7d3      	b.n	9000f7b8 <xTaskCheckForTimeOut+0x30>
9000f810:	2402346c 	.word	0x2402346c
9000f814:	24023424 	.word	0x24023424

9000f818 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
9000f818:	4b01      	ldr	r3, [pc, #4]	; (9000f820 <vTaskMissedYield+0x8>)
9000f81a:	2201      	movs	r2, #1
9000f81c:	601a      	str	r2, [r3, #0]
}
9000f81e:	4770      	bx	lr
9000f820:	24023470 	.word	0x24023470

9000f824 <xTaskGetCurrentTaskHandle>:
		xReturn = pxCurrentTCB;
9000f824:	4b01      	ldr	r3, [pc, #4]	; (9000f82c <xTaskGetCurrentTaskHandle+0x8>)
9000f826:	6818      	ldr	r0, [r3, #0]
	}
9000f828:	4770      	bx	lr
9000f82a:	bf00      	nop
9000f82c:	24022f78 	.word	0x24022f78

9000f830 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
9000f830:	4b05      	ldr	r3, [pc, #20]	; (9000f848 <xTaskGetSchedulerState+0x18>)
9000f832:	681b      	ldr	r3, [r3, #0]
9000f834:	b133      	cbz	r3, 9000f844 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000f836:	4b05      	ldr	r3, [pc, #20]	; (9000f84c <xTaskGetSchedulerState+0x1c>)
9000f838:	6818      	ldr	r0, [r3, #0]
9000f83a:	fab0 f080 	clz	r0, r0
9000f83e:	0940      	lsrs	r0, r0, #5
9000f840:	0040      	lsls	r0, r0, #1
9000f842:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
9000f844:	2001      	movs	r0, #1
	}
9000f846:	4770      	bx	lr
9000f848:	24023440 	.word	0x24023440
9000f84c:	240233ec 	.word	0x240233ec

9000f850 <xTaskPriorityInherit>:
	{
9000f850:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
9000f852:	4604      	mov	r4, r0
	{
9000f854:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
9000f856:	b1c8      	cbz	r0, 9000f88c <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
9000f858:	4d1d      	ldr	r5, [pc, #116]	; (9000f8d0 <xTaskPriorityInherit+0x80>)
9000f85a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
9000f85c:	682a      	ldr	r2, [r5, #0]
9000f85e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
9000f860:	4293      	cmp	r3, r2
9000f862:	d215      	bcs.n	9000f890 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000f864:	6982      	ldr	r2, [r0, #24]
9000f866:	2a00      	cmp	r2, #0
9000f868:	db04      	blt.n	9000f874 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f86a:	682a      	ldr	r2, [r5, #0]
9000f86c:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
9000f86e:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
9000f872:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
9000f874:	4e17      	ldr	r6, [pc, #92]	; (9000f8d4 <xTaskPriorityInherit+0x84>)
9000f876:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000f87a:	6962      	ldr	r2, [r4, #20]
9000f87c:	eb06 0383 	add.w	r3, r6, r3, lsl #2
9000f880:	429a      	cmp	r2, r3
9000f882:	d00e      	beq.n	9000f8a2 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f884:	682b      	ldr	r3, [r5, #0]
				xReturn = pdTRUE;
9000f886:	2001      	movs	r0, #1
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f888:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000f88a:	62e3      	str	r3, [r4, #44]	; 0x2c
	}
9000f88c:	b002      	add	sp, #8
9000f88e:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
9000f890:	682b      	ldr	r3, [r5, #0]
9000f892:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
9000f894:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000f896:	4298      	cmp	r0, r3
9000f898:	bf2c      	ite	cs
9000f89a:	2000      	movcs	r0, #0
9000f89c:	2001      	movcc	r0, #1
	}
9000f89e:	b002      	add	sp, #8
9000f8a0:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f8a2:	1d21      	adds	r1, r4, #4
9000f8a4:	4608      	mov	r0, r1
9000f8a6:	9101      	str	r1, [sp, #4]
9000f8a8:	f7fd fec0 	bl	9000d62c <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f8ac:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000f8ae:	4b0a      	ldr	r3, [pc, #40]	; (9000f8d8 <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f8b0:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000f8b2:	681a      	ldr	r2, [r3, #0]
9000f8b4:	9901      	ldr	r1, [sp, #4]
9000f8b6:	4290      	cmp	r0, r2
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f8b8:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000f8ba:	d900      	bls.n	9000f8be <xTaskPriorityInherit+0x6e>
9000f8bc:	6018      	str	r0, [r3, #0]
9000f8be:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000f8c2:	eb06 0080 	add.w	r0, r6, r0, lsl #2
9000f8c6:	f7fd fe89 	bl	9000d5dc <vListInsertEnd>
				xReturn = pdTRUE;
9000f8ca:	2001      	movs	r0, #1
9000f8cc:	e7de      	b.n	9000f88c <xTaskPriorityInherit+0x3c>
9000f8ce:	bf00      	nop
9000f8d0:	24022f78 	.word	0x24022f78
9000f8d4:	24022f84 	.word	0x24022f84
9000f8d8:	240233f4 	.word	0x240233f4

9000f8dc <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
9000f8dc:	b318      	cbz	r0, 9000f926 <xTaskPriorityDisinherit+0x4a>
			configASSERT( pxTCB == pxCurrentTCB );
9000f8de:	4b1f      	ldr	r3, [pc, #124]	; (9000f95c <xTaskPriorityDisinherit+0x80>)
	{
9000f8e0:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
9000f8e2:	681c      	ldr	r4, [r3, #0]
	{
9000f8e4:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
9000f8e6:	4284      	cmp	r4, r0
9000f8e8:	d008      	beq.n	9000f8fc <xTaskPriorityDisinherit+0x20>
9000f8ea:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f8ee:	f383 8811 	msr	BASEPRI, r3
9000f8f2:	f3bf 8f6f 	isb	sy
9000f8f6:	f3bf 8f4f 	dsb	sy
9000f8fa:	e7fe      	b.n	9000f8fa <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
9000f8fc:	6d23      	ldr	r3, [r4, #80]	; 0x50
9000f8fe:	b14b      	cbz	r3, 9000f914 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
9000f900:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
			( pxTCB->uxMutexesHeld )--;
9000f902:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
9000f904:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
9000f906:	6523      	str	r3, [r4, #80]	; 0x50
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
9000f908:	4291      	cmp	r1, r2
9000f90a:	d000      	beq.n	9000f90e <xTaskPriorityDisinherit+0x32>
9000f90c:	b16b      	cbz	r3, 9000f92a <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
9000f90e:	2000      	movs	r0, #0
	}
9000f910:	b002      	add	sp, #8
9000f912:	bd10      	pop	{r4, pc}
9000f914:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f918:	f383 8811 	msr	BASEPRI, r3
9000f91c:	f3bf 8f6f 	isb	sy
9000f920:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
9000f924:	e7fe      	b.n	9000f924 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
9000f926:	2000      	movs	r0, #0
	}
9000f928:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f92a:	1d21      	adds	r1, r4, #4
9000f92c:	4608      	mov	r0, r1
9000f92e:	9101      	str	r1, [sp, #4]
9000f930:	f7fd fe7c 	bl	9000d62c <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
9000f934:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
9000f936:	4b0a      	ldr	r3, [pc, #40]	; (9000f960 <xTaskPriorityDisinherit+0x84>)
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f938:	f1c0 0238 	rsb	r2, r0, #56	; 0x38
					prvAddTaskToReadyList( pxTCB );
9000f93c:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
9000f93e:	62e0      	str	r0, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f940:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
9000f942:	681a      	ldr	r2, [r3, #0]
9000f944:	4290      	cmp	r0, r2
9000f946:	d900      	bls.n	9000f94a <xTaskPriorityDisinherit+0x6e>
9000f948:	6018      	str	r0, [r3, #0]
9000f94a:	4b06      	ldr	r3, [pc, #24]	; (9000f964 <xTaskPriorityDisinherit+0x88>)
9000f94c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000f950:	eb03 0080 	add.w	r0, r3, r0, lsl #2
9000f954:	f7fd fe42 	bl	9000d5dc <vListInsertEnd>
					xReturn = pdTRUE;
9000f958:	2001      	movs	r0, #1
		return xReturn;
9000f95a:	e7d9      	b.n	9000f910 <xTaskPriorityDisinherit+0x34>
9000f95c:	24022f78 	.word	0x24022f78
9000f960:	240233f4 	.word	0x240233f4
9000f964:	24022f84 	.word	0x24022f84

9000f968 <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
9000f968:	2800      	cmp	r0, #0
9000f96a:	d040      	beq.n	9000f9ee <vTaskPriorityDisinheritAfterTimeout+0x86>
			configASSERT( pxTCB->uxMutexesHeld );
9000f96c:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
9000f96e:	b530      	push	{r4, r5, lr}
9000f970:	4604      	mov	r4, r0
9000f972:	b083      	sub	sp, #12
			configASSERT( pxTCB->uxMutexesHeld );
9000f974:	b153      	cbz	r3, 9000f98c <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
9000f976:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
9000f978:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000f97a:	4281      	cmp	r1, r0
9000f97c:	bf38      	it	cc
9000f97e:	4601      	movcc	r1, r0
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
9000f980:	2b01      	cmp	r3, #1
9000f982:	d101      	bne.n	9000f988 <vTaskPriorityDisinheritAfterTimeout+0x20>
9000f984:	428a      	cmp	r2, r1
9000f986:	d10a      	bne.n	9000f99e <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
9000f988:	b003      	add	sp, #12
9000f98a:	bd30      	pop	{r4, r5, pc}
9000f98c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f990:	f383 8811 	msr	BASEPRI, r3
9000f994:	f3bf 8f6f 	isb	sy
9000f998:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
9000f99c:	e7fe      	b.n	9000f99c <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
9000f99e:	4b19      	ldr	r3, [pc, #100]	; (9000fa04 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
9000f9a0:	681b      	ldr	r3, [r3, #0]
9000f9a2:	42a3      	cmp	r3, r4
9000f9a4:	d024      	beq.n	9000f9f0 <vTaskPriorityDisinheritAfterTimeout+0x88>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000f9a6:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
9000f9a8:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000f9aa:	2b00      	cmp	r3, #0
9000f9ac:	db02      	blt.n	9000f9b4 <vTaskPriorityDisinheritAfterTimeout+0x4c>
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f9ae:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
9000f9b2:	61a1      	str	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
9000f9b4:	4d14      	ldr	r5, [pc, #80]	; (9000fa08 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
9000f9b6:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9000f9ba:	6961      	ldr	r1, [r4, #20]
9000f9bc:	eb05 0382 	add.w	r3, r5, r2, lsl #2
9000f9c0:	4299      	cmp	r1, r3
9000f9c2:	d1e1      	bne.n	9000f988 <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f9c4:	1d21      	adds	r1, r4, #4
9000f9c6:	4608      	mov	r0, r1
9000f9c8:	9101      	str	r1, [sp, #4]
9000f9ca:	f7fd fe2f 	bl	9000d62c <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
9000f9ce:	4b0f      	ldr	r3, [pc, #60]	; (9000fa0c <vTaskPriorityDisinheritAfterTimeout+0xa4>)
9000f9d0:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9000f9d2:	681a      	ldr	r2, [r3, #0]
9000f9d4:	9901      	ldr	r1, [sp, #4]
9000f9d6:	4290      	cmp	r0, r2
9000f9d8:	d900      	bls.n	9000f9dc <vTaskPriorityDisinheritAfterTimeout+0x74>
9000f9da:	6018      	str	r0, [r3, #0]
9000f9dc:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000f9e0:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
9000f9e4:	b003      	add	sp, #12
9000f9e6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
9000f9ea:	f7fd bdf7 	b.w	9000d5dc <vListInsertEnd>
9000f9ee:	4770      	bx	lr
9000f9f0:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f9f4:	f383 8811 	msr	BASEPRI, r3
9000f9f8:	f3bf 8f6f 	isb	sy
9000f9fc:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
9000fa00:	e7fe      	b.n	9000fa00 <vTaskPriorityDisinheritAfterTimeout+0x98>
9000fa02:	bf00      	nop
9000fa04:	24022f78 	.word	0x24022f78
9000fa08:	24022f84 	.word	0x24022f84
9000fa0c:	240233f4 	.word	0x240233f4

9000fa10 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
9000fa10:	4b04      	ldr	r3, [pc, #16]	; (9000fa24 <pvTaskIncrementMutexHeldCount+0x14>)
9000fa12:	681a      	ldr	r2, [r3, #0]
9000fa14:	b11a      	cbz	r2, 9000fa1e <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
9000fa16:	6819      	ldr	r1, [r3, #0]
9000fa18:	6d0a      	ldr	r2, [r1, #80]	; 0x50
9000fa1a:	3201      	adds	r2, #1
9000fa1c:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
9000fa1e:	6818      	ldr	r0, [r3, #0]
	}
9000fa20:	4770      	bx	lr
9000fa22:	bf00      	nop
9000fa24:	24022f78 	.word	0x24022f78

9000fa28 <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
9000fa28:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000fa2c:	4e22      	ldr	r6, [pc, #136]	; (9000fab8 <prvSwitchTimerLists+0x90>)
9000fa2e:	b085      	sub	sp, #20
	if( xTimerQueue != NULL )
9000fa30:	f8df 908c 	ldr.w	r9, [pc, #140]	; 9000fac0 <prvSwitchTimerLists+0x98>
		xMessage.xMessageID = xCommandID;
9000fa34:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
9000fa38:	e00d      	b.n	9000fa56 <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000fa3a:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fa3c:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000fa3e:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000fa40:	1d25      	adds	r5, r4, #4
9000fa42:	4628      	mov	r0, r5
9000fa44:	f7fd fdf2 	bl	9000d62c <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9000fa48:	6a23      	ldr	r3, [r4, #32]
9000fa4a:	4620      	mov	r0, r4
9000fa4c:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000fa4e:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
9000fa52:	075b      	lsls	r3, r3, #29
9000fa54:	d40a      	bmi.n	9000fa6c <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
9000fa56:	6833      	ldr	r3, [r6, #0]
9000fa58:	681a      	ldr	r2, [r3, #0]
9000fa5a:	2a00      	cmp	r2, #0
9000fa5c:	d1ed      	bne.n	9000fa3a <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
9000fa5e:	4a17      	ldr	r2, [pc, #92]	; (9000fabc <prvSwitchTimerLists+0x94>)
9000fa60:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
9000fa62:	6013      	str	r3, [r2, #0]
	pxCurrentTimerList = pxOverflowTimerList;
9000fa64:	6031      	str	r1, [r6, #0]
}
9000fa66:	b005      	add	sp, #20
9000fa68:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
9000fa6c:	69a3      	ldr	r3, [r4, #24]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000fa6e:	4629      	mov	r1, r5
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
9000fa70:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
9000fa72:	429f      	cmp	r7, r3
9000fa74:	d205      	bcs.n	9000fa82 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000fa76:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
9000fa78:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000fa7a:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000fa7c:	f7fd fdbe 	bl	9000d5fc <vListInsert>
9000fa80:	e7e9      	b.n	9000fa56 <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
9000fa82:	f8d9 3000 	ldr.w	r3, [r9]
9000fa86:	b16b      	cbz	r3, 9000faa4 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
9000fa88:	9402      	str	r4, [sp, #8]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
9000fa8a:	e9cd 8700 	strd	r8, r7, [sp]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9000fa8e:	f7ff fecf 	bl	9000f830 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9000fa92:	2300      	movs	r3, #0
9000fa94:	4669      	mov	r1, sp
9000fa96:	f8d9 0000 	ldr.w	r0, [r9]
9000fa9a:	461a      	mov	r2, r3
9000fa9c:	f7fe f93a 	bl	9000dd14 <xQueueGenericSend>
				configASSERT( xResult );
9000faa0:	2800      	cmp	r0, #0
9000faa2:	d1d8      	bne.n	9000fa56 <prvSwitchTimerLists+0x2e>
9000faa4:	f04f 0350 	mov.w	r3, #80	; 0x50
9000faa8:	f383 8811 	msr	BASEPRI, r3
9000faac:	f3bf 8f6f 	isb	sy
9000fab0:	f3bf 8f4f 	dsb	sy
9000fab4:	e7fe      	b.n	9000fab4 <prvSwitchTimerLists+0x8c>
9000fab6:	bf00      	nop
9000fab8:	24023474 	.word	0x24023474
9000fabc:	24023478 	.word	0x24023478
9000fac0:	24023598 	.word	0x24023598

9000fac4 <prvTimerTask>:
{
9000fac4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000fac8:	4e9f      	ldr	r6, [pc, #636]	; (9000fd48 <prvTimerTask+0x284>)
9000faca:	b089      	sub	sp, #36	; 0x24
9000facc:	4d9f      	ldr	r5, [pc, #636]	; (9000fd4c <prvTimerTask+0x288>)
					portYIELD_WITHIN_API();
9000face:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
9000fad2:	4c9f      	ldr	r4, [pc, #636]	; (9000fd50 <prvTimerTask+0x28c>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
9000fad4:	6833      	ldr	r3, [r6, #0]
9000fad6:	681f      	ldr	r7, [r3, #0]
9000fad8:	2f00      	cmp	r7, #0
9000fada:	f000 80b2 	beq.w	9000fc42 <prvTimerTask+0x17e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000fade:	68db      	ldr	r3, [r3, #12]
9000fae0:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
9000fae2:	f7ff fccf 	bl	9000f484 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
9000fae6:	f7ff fce5 	bl	9000f4b4 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9000faea:	682a      	ldr	r2, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9000faec:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
9000faee:	4290      	cmp	r0, r2
9000faf0:	f0c0 80af 	bcc.w	9000fc52 <prvTimerTask+0x18e>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
9000faf4:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
9000faf6:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
9000faf8:	f200 80d0 	bhi.w	9000fc9c <prvTimerTask+0x1d8>
				( void ) xTaskResumeAll();
9000fafc:	f7ff fcca 	bl	9000f494 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fb00:	6832      	ldr	r2, [r6, #0]
9000fb02:	68d2      	ldr	r2, [r2, #12]
9000fb04:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000fb08:	f10b 0804 	add.w	r8, fp, #4
9000fb0c:	4640      	mov	r0, r8
9000fb0e:	f7fd fd8d 	bl	9000d62c <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000fb12:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
9000fb16:	0741      	lsls	r1, r0, #29
9000fb18:	f100 80d0 	bmi.w	9000fcbc <prvTimerTask+0x1f8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9000fb1c:	f020 0001 	bic.w	r0, r0, #1
9000fb20:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9000fb24:	f8db 3020 	ldr.w	r3, [fp, #32]
9000fb28:	4658      	mov	r0, fp
9000fb2a:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
9000fb2c:	2200      	movs	r2, #0
9000fb2e:	4669      	mov	r1, sp
9000fb30:	6820      	ldr	r0, [r4, #0]
9000fb32:	f7fe fbdb 	bl	9000e2ec <xQueueReceive>
9000fb36:	2800      	cmp	r0, #0
9000fb38:	d0cc      	beq.n	9000fad4 <prvTimerTask+0x10>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
9000fb3a:	9b00      	ldr	r3, [sp, #0]
9000fb3c:	2b00      	cmp	r3, #0
9000fb3e:	db77      	blt.n	9000fc30 <prvTimerTask+0x16c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
9000fb40:	9f02      	ldr	r7, [sp, #8]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
9000fb42:	697b      	ldr	r3, [r7, #20]
9000fb44:	b113      	cbz	r3, 9000fb4c <prvTimerTask+0x88>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000fb46:	1d38      	adds	r0, r7, #4
9000fb48:	f7fd fd70 	bl	9000d62c <uxListRemove>
	xTimeNow = xTaskGetTickCount();
9000fb4c:	f7ff fcb2 	bl	9000f4b4 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9000fb50:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9000fb52:	4680      	mov	r8, r0
	if( xTimeNow < xLastTime )
9000fb54:	4298      	cmp	r0, r3
9000fb56:	f0c0 8083 	bcc.w	9000fc60 <prvTimerTask+0x19c>
			switch( xMessage.xMessageID )
9000fb5a:	9b00      	ldr	r3, [sp, #0]
	xLastTime = xTimeNow;
9000fb5c:	f8c5 8000 	str.w	r8, [r5]
			switch( xMessage.xMessageID )
9000fb60:	2b09      	cmp	r3, #9
9000fb62:	d8e3      	bhi.n	9000fb2c <prvTimerTask+0x68>
9000fb64:	e8df f003 	tbb	[pc, r3]
9000fb68:	54050505 	.word	0x54050505
9000fb6c:	05055b3e 	.word	0x05055b3e
9000fb70:	3e54      	.short	0x3e54
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000fb72:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
9000fb76:	69ba      	ldr	r2, [r7, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000fb78:	f043 0301 	orr.w	r3, r3, #1
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000fb7c:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000fb7e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
9000fb82:	9b01      	ldr	r3, [sp, #4]
9000fb84:	1899      	adds	r1, r3, r2
9000fb86:	bf2c      	ite	cs
9000fb88:	2001      	movcs	r0, #1
9000fb8a:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
9000fb8c:	4541      	cmp	r1, r8
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9000fb8e:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
9000fb90:	f200 8086 	bhi.w	9000fca0 <prvTimerTask+0x1dc>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000fb94:	eba8 0303 	sub.w	r3, r8, r3
9000fb98:	429a      	cmp	r2, r3
9000fb9a:	f200 80c0 	bhi.w	9000fd1e <prvTimerTask+0x25a>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9000fb9e:	6a3b      	ldr	r3, [r7, #32]
9000fba0:	4638      	mov	r0, r7
9000fba2:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000fba4:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
9000fba8:	075b      	lsls	r3, r3, #29
9000fbaa:	d5bf      	bpl.n	9000fb2c <prvTimerTask+0x68>
	if( xTimerQueue != NULL )
9000fbac:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
9000fbae:	9901      	ldr	r1, [sp, #4]
9000fbb0:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
9000fbb2:	b172      	cbz	r2, 9000fbd2 <prvTimerTask+0x10e>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
9000fbb4:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
9000fbb6:	e9cd 3705 	strd	r3, r7, [sp, #20]
		xMessage.xMessageID = xCommandID;
9000fbba:	2300      	movs	r3, #0
9000fbbc:	9304      	str	r3, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9000fbbe:	f7ff fe37 	bl	9000f830 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9000fbc2:	2300      	movs	r3, #0
9000fbc4:	a904      	add	r1, sp, #16
9000fbc6:	6820      	ldr	r0, [r4, #0]
9000fbc8:	461a      	mov	r2, r3
9000fbca:	f7fe f8a3 	bl	9000dd14 <xQueueGenericSend>
							configASSERT( xResult );
9000fbce:	2800      	cmp	r0, #0
9000fbd0:	d1ac      	bne.n	9000fb2c <prvTimerTask+0x68>
9000fbd2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fbd6:	f383 8811 	msr	BASEPRI, r3
9000fbda:	f3bf 8f6f 	isb	sy
9000fbde:	f3bf 8f4f 	dsb	sy
9000fbe2:	e7fe      	b.n	9000fbe2 <prvTimerTask+0x11e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000fbe4:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
9000fbe8:	f043 0301 	orr.w	r3, r3, #1
9000fbec:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
9000fbf0:	9b01      	ldr	r3, [sp, #4]
9000fbf2:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
9000fbf4:	2b00      	cmp	r3, #0
9000fbf6:	f000 809e 	beq.w	9000fd36 <prvTimerTask+0x272>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
9000fbfa:	4443      	add	r3, r8
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000fbfc:	1d39      	adds	r1, r7, #4
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000fbfe:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
9000fc00:	4543      	cmp	r3, r8
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9000fc02:	607b      	str	r3, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
9000fc04:	d856      	bhi.n	9000fcb4 <prvTimerTask+0x1f0>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000fc06:	4b53      	ldr	r3, [pc, #332]	; (9000fd54 <prvTimerTask+0x290>)
9000fc08:	6818      	ldr	r0, [r3, #0]
9000fc0a:	f7fd fcf7 	bl	9000d5fc <vListInsert>
	return xProcessTimerNow;
9000fc0e:	e78d      	b.n	9000fb2c <prvTimerTask+0x68>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9000fc10:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
9000fc14:	f023 0301 	bic.w	r3, r3, #1
9000fc18:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
9000fc1c:	e786      	b.n	9000fb2c <prvTimerTask+0x68>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
9000fc1e:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
9000fc22:	079a      	lsls	r2, r3, #30
9000fc24:	d572      	bpl.n	9000fd0c <prvTimerTask+0x248>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9000fc26:	f023 0301 	bic.w	r3, r3, #1
9000fc2a:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
9000fc2e:	e77d      	b.n	9000fb2c <prvTimerTask+0x68>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
9000fc30:	9b01      	ldr	r3, [sp, #4]
9000fc32:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
9000fc36:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
9000fc38:	9b00      	ldr	r3, [sp, #0]
9000fc3a:	2b00      	cmp	r3, #0
9000fc3c:	f6ff af76 	blt.w	9000fb2c <prvTimerTask+0x68>
9000fc40:	e77e      	b.n	9000fb40 <prvTimerTask+0x7c>
	vTaskSuspendAll();
9000fc42:	f7ff fc1f 	bl	9000f484 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
9000fc46:	f7ff fc35 	bl	9000f4b4 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9000fc4a:	682a      	ldr	r2, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9000fc4c:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
9000fc4e:	4282      	cmp	r2, r0
9000fc50:	d909      	bls.n	9000fc66 <prvTimerTask+0x1a2>
		prvSwitchTimerLists();
9000fc52:	f7ff fee9 	bl	9000fa28 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
9000fc56:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
9000fc5a:	f7ff fc1b 	bl	9000f494 <xTaskResumeAll>
9000fc5e:	e765      	b.n	9000fb2c <prvTimerTask+0x68>
		prvSwitchTimerLists();
9000fc60:	f7ff fee2 	bl	9000fa28 <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
9000fc64:	e779      	b.n	9000fb5a <prvTimerTask+0x96>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
9000fc66:	4b3b      	ldr	r3, [pc, #236]	; (9000fd54 <prvTimerTask+0x290>)
	xLastTime = xTimeNow;
9000fc68:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
9000fc6c:	681a      	ldr	r2, [r3, #0]
9000fc6e:	6812      	ldr	r2, [r2, #0]
9000fc70:	fab2 f282 	clz	r2, r2
9000fc74:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
9000fc76:	eba7 010a 	sub.w	r1, r7, sl
9000fc7a:	6820      	ldr	r0, [r4, #0]
9000fc7c:	f7fe ff4e 	bl	9000eb1c <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
9000fc80:	f7ff fc08 	bl	9000f494 <xTaskResumeAll>
9000fc84:	2800      	cmp	r0, #0
9000fc86:	f47f af51 	bne.w	9000fb2c <prvTimerTask+0x68>
					portYIELD_WITHIN_API();
9000fc8a:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
9000fc8e:	f8c9 3d04 	str.w	r3, [r9, #3332]	; 0xd04
9000fc92:	f3bf 8f4f 	dsb	sy
9000fc96:	f3bf 8f6f 	isb	sy
9000fc9a:	e747      	b.n	9000fb2c <prvTimerTask+0x68>
9000fc9c:	2200      	movs	r2, #0
9000fc9e:	e7ea      	b.n	9000fc76 <prvTimerTask+0x1b2>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
9000fca0:	4543      	cmp	r3, r8
9000fca2:	d902      	bls.n	9000fcaa <prvTimerTask+0x1e6>
9000fca4:	2800      	cmp	r0, #0
9000fca6:	f43f af7a 	beq.w	9000fb9e <prvTimerTask+0xda>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000fcaa:	1d39      	adds	r1, r7, #4
9000fcac:	6830      	ldr	r0, [r6, #0]
9000fcae:	f7fd fca5 	bl	9000d5fc <vListInsert>
	return xProcessTimerNow;
9000fcb2:	e73b      	b.n	9000fb2c <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000fcb4:	6830      	ldr	r0, [r6, #0]
9000fcb6:	f7fd fca1 	bl	9000d5fc <vListInsert>
9000fcba:	e737      	b.n	9000fb2c <prvTimerTask+0x68>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
9000fcbc:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000fcc0:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
9000fcc4:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
9000fcc6:	4582      	cmp	sl, r0
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9000fcc8:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
9000fccc:	d322      	bcc.n	9000fd14 <prvTimerTask+0x250>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000fcce:	ebaa 0307 	sub.w	r3, sl, r7
9000fcd2:	429a      	cmp	r2, r3
9000fcd4:	d829      	bhi.n	9000fd2a <prvTimerTask+0x266>
	if( xTimerQueue != NULL )
9000fcd6:	6823      	ldr	r3, [r4, #0]
9000fcd8:	b17b      	cbz	r3, 9000fcfa <prvTimerTask+0x236>
		xMessage.xMessageID = xCommandID;
9000fcda:	2300      	movs	r3, #0
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
9000fcdc:	9705      	str	r7, [sp, #20]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
9000fcde:	f8cd b018 	str.w	fp, [sp, #24]
		xMessage.xMessageID = xCommandID;
9000fce2:	9304      	str	r3, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9000fce4:	f7ff fda4 	bl	9000f830 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9000fce8:	2300      	movs	r3, #0
9000fcea:	a904      	add	r1, sp, #16
9000fcec:	6820      	ldr	r0, [r4, #0]
9000fcee:	461a      	mov	r2, r3
9000fcf0:	f7fe f810 	bl	9000dd14 <xQueueGenericSend>
			configASSERT( xResult );
9000fcf4:	2800      	cmp	r0, #0
9000fcf6:	f47f af15 	bne.w	9000fb24 <prvTimerTask+0x60>
9000fcfa:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fcfe:	f383 8811 	msr	BASEPRI, r3
9000fd02:	f3bf 8f6f 	isb	sy
9000fd06:	f3bf 8f4f 	dsb	sy
9000fd0a:	e7fe      	b.n	9000fd0a <prvTimerTask+0x246>
							vPortFree( pxTimer );
9000fd0c:	4638      	mov	r0, r7
9000fd0e:	f7fd fbf1 	bl	9000d4f4 <vPortFree>
9000fd12:	e70b      	b.n	9000fb2c <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000fd14:	4641      	mov	r1, r8
9000fd16:	6830      	ldr	r0, [r6, #0]
9000fd18:	f7fd fc70 	bl	9000d5fc <vListInsert>
	return xProcessTimerNow;
9000fd1c:	e702      	b.n	9000fb24 <prvTimerTask+0x60>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000fd1e:	4b0d      	ldr	r3, [pc, #52]	; (9000fd54 <prvTimerTask+0x290>)
9000fd20:	1d39      	adds	r1, r7, #4
9000fd22:	6818      	ldr	r0, [r3, #0]
9000fd24:	f7fd fc6a 	bl	9000d5fc <vListInsert>
	return xProcessTimerNow;
9000fd28:	e700      	b.n	9000fb2c <prvTimerTask+0x68>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000fd2a:	4b0a      	ldr	r3, [pc, #40]	; (9000fd54 <prvTimerTask+0x290>)
9000fd2c:	4641      	mov	r1, r8
9000fd2e:	6818      	ldr	r0, [r3, #0]
9000fd30:	f7fd fc64 	bl	9000d5fc <vListInsert>
	return xProcessTimerNow;
9000fd34:	e6f6      	b.n	9000fb24 <prvTimerTask+0x60>
9000fd36:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fd3a:	f383 8811 	msr	BASEPRI, r3
9000fd3e:	f3bf 8f6f 	isb	sy
9000fd42:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
9000fd46:	e7fe      	b.n	9000fd46 <prvTimerTask+0x282>
9000fd48:	24023474 	.word	0x24023474
9000fd4c:	24023544 	.word	0x24023544
9000fd50:	24023598 	.word	0x24023598
9000fd54:	24023478 	.word	0x24023478

9000fd58 <xTimerCreateTimerTask>:
{
9000fd58:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
9000fd5a:	4c23      	ldr	r4, [pc, #140]	; (9000fde8 <xTimerCreateTimerTask+0x90>)
{
9000fd5c:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
9000fd5e:	f7fd fce1 	bl	9000d724 <vPortEnterCritical>
		if( xTimerQueue == NULL )
9000fd62:	6825      	ldr	r5, [r4, #0]
9000fd64:	b335      	cbz	r5, 9000fdb4 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
9000fd66:	f7fd fcff 	bl	9000d768 <vPortExitCritical>
	if( xTimerQueue != NULL )
9000fd6a:	6823      	ldr	r3, [r4, #0]
9000fd6c:	b1cb      	cbz	r3, 9000fda2 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
9000fd6e:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
9000fd70:	aa07      	add	r2, sp, #28
9000fd72:	a906      	add	r1, sp, #24
9000fd74:	a805      	add	r0, sp, #20
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
9000fd76:	2502      	movs	r5, #2
			StackType_t *pxTimerTaskStackBuffer = NULL;
9000fd78:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
9000fd7c:	f7fd faec 	bl	9000d358 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
9000fd80:	4623      	mov	r3, r4
9000fd82:	9a07      	ldr	r2, [sp, #28]
9000fd84:	9500      	str	r5, [sp, #0]
9000fd86:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
9000fd8a:	e9cd 1001 	strd	r1, r0, [sp, #4]
9000fd8e:	4917      	ldr	r1, [pc, #92]	; (9000fdec <xTimerCreateTimerTask+0x94>)
9000fd90:	4817      	ldr	r0, [pc, #92]	; (9000fdf0 <xTimerCreateTimerTask+0x98>)
9000fd92:	f7ff f93f 	bl	9000f014 <xTaskCreateStatic>
9000fd96:	4b17      	ldr	r3, [pc, #92]	; (9000fdf4 <xTimerCreateTimerTask+0x9c>)
9000fd98:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
9000fd9a:	b110      	cbz	r0, 9000fda2 <xTimerCreateTimerTask+0x4a>
}
9000fd9c:	2001      	movs	r0, #1
9000fd9e:	b009      	add	sp, #36	; 0x24
9000fda0:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000fda2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fda6:	f383 8811 	msr	BASEPRI, r3
9000fdaa:	f3bf 8f6f 	isb	sy
9000fdae:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
9000fdb2:	e7fe      	b.n	9000fdb2 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
9000fdb4:	4f10      	ldr	r7, [pc, #64]	; (9000fdf8 <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
9000fdb6:	4e11      	ldr	r6, [pc, #68]	; (9000fdfc <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
9000fdb8:	4638      	mov	r0, r7
9000fdba:	f7fd fbff 	bl	9000d5bc <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
9000fdbe:	4630      	mov	r0, r6
9000fdc0:	f7fd fbfc 	bl	9000d5bc <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
9000fdc4:	4a0e      	ldr	r2, [pc, #56]	; (9000fe00 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000fdc6:	9500      	str	r5, [sp, #0]
9000fdc8:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
9000fdca:	6017      	str	r7, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000fdcc:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
9000fdce:	4a0d      	ldr	r2, [pc, #52]	; (9000fe04 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000fdd0:	4b0d      	ldr	r3, [pc, #52]	; (9000fe08 <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
9000fdd2:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000fdd4:	4a0d      	ldr	r2, [pc, #52]	; (9000fe0c <xTimerCreateTimerTask+0xb4>)
9000fdd6:	f7fd fe47 	bl	9000da68 <xQueueGenericCreateStatic>
9000fdda:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
9000fddc:	2800      	cmp	r0, #0
9000fdde:	d0c2      	beq.n	9000fd66 <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
9000fde0:	490b      	ldr	r1, [pc, #44]	; (9000fe10 <xTimerCreateTimerTask+0xb8>)
9000fde2:	f7fe fe73 	bl	9000eacc <vQueueAddToRegistry>
9000fde6:	e7be      	b.n	9000fd66 <xTimerCreateTimerTask+0xe>
9000fde8:	24023598 	.word	0x24023598
9000fdec:	9002a208 	.word	0x9002a208
9000fdf0:	9000fac5 	.word	0x9000fac5
9000fdf4:	2402359c 	.word	0x2402359c
9000fdf8:	2402351c 	.word	0x2402351c
9000fdfc:	24023530 	.word	0x24023530
9000fe00:	24023474 	.word	0x24023474
9000fe04:	24023478 	.word	0x24023478
9000fe08:	24023548 	.word	0x24023548
9000fe0c:	2402347c 	.word	0x2402347c
9000fe10:	9002a200 	.word	0x9002a200

9000fe14 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
9000fe14:	8880      	ldrh	r0, [r0, #4]
9000fe16:	4770      	bx	lr

9000fe18 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
9000fe18:	b570      	push	{r4, r5, r6, lr}
9000fe1a:	6803      	ldr	r3, [r0, #0]
9000fe1c:	460c      	mov	r4, r1
9000fe1e:	2100      	movs	r1, #0
9000fe20:	4605      	mov	r5, r0
9000fe22:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000fe24:	4798      	blx	r3
9000fe26:	4606      	mov	r6, r0
9000fe28:	682b      	ldr	r3, [r5, #0]
9000fe2a:	4628      	mov	r0, r5
9000fe2c:	1ba4      	subs	r4, r4, r6
9000fe2e:	6a1b      	ldr	r3, [r3, #32]
9000fe30:	b2a4      	uxth	r4, r4
9000fe32:	4798      	blx	r3
9000fe34:	fbb4 f0f0 	udiv	r0, r4, r0
9000fe38:	bd70      	pop	{r4, r5, r6, pc}

9000fe3a <_ZN8touchgfx17AbstractPartition5clearEv>:
9000fe3a:	2300      	movs	r3, #0
9000fe3c:	8083      	strh	r3, [r0, #4]
9000fe3e:	4770      	bx	lr

9000fe40 <_ZN8touchgfx17AbstractPartition8allocateEt>:
9000fe40:	b510      	push	{r4, lr}
9000fe42:	6803      	ldr	r3, [r0, #0]
9000fe44:	4604      	mov	r4, r0
9000fe46:	8881      	ldrh	r1, [r0, #4]
9000fe48:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000fe4a:	4798      	blx	r3
9000fe4c:	88a3      	ldrh	r3, [r4, #4]
9000fe4e:	3301      	adds	r3, #1
9000fe50:	80a3      	strh	r3, [r4, #4]
9000fe52:	bd10      	pop	{r4, pc}

9000fe54 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
9000fe54:	6803      	ldr	r3, [r0, #0]
9000fe56:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000fe58:	4718      	bx	r3

9000fe5a <_ZN8touchgfx17AbstractPartitionD1Ev>:
9000fe5a:	4770      	bx	lr

9000fe5c <_ZN8touchgfx17AbstractPartitionC1Ev>:
9000fe5c:	4a02      	ldr	r2, [pc, #8]	; (9000fe68 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
9000fe5e:	6002      	str	r2, [r0, #0]
9000fe60:	2200      	movs	r2, #0
9000fe62:	8082      	strh	r2, [r0, #4]
9000fe64:	4770      	bx	lr
9000fe66:	bf00      	nop
9000fe68:	9002a218 	.word	0x9002a218

9000fe6c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
9000fe6c:	6a83      	ldr	r3, [r0, #40]	; 0x28
9000fe6e:	2000      	movs	r0, #0
9000fe70:	b12b      	cbz	r3, 9000fe7e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
9000fe72:	b920      	cbnz	r0, 9000fe7e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
9000fe74:	1a5a      	subs	r2, r3, r1
9000fe76:	699b      	ldr	r3, [r3, #24]
9000fe78:	4250      	negs	r0, r2
9000fe7a:	4150      	adcs	r0, r2
9000fe7c:	e7f8      	b.n	9000fe70 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
9000fe7e:	4770      	bx	lr

9000fe80 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
9000fe80:	2300      	movs	r3, #0
9000fe82:	6148      	str	r0, [r1, #20]
9000fe84:	618b      	str	r3, [r1, #24]
9000fe86:	6a83      	ldr	r3, [r0, #40]	; 0x28
9000fe88:	b913      	cbnz	r3, 9000fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
9000fe8a:	6281      	str	r1, [r0, #40]	; 0x28
9000fe8c:	4770      	bx	lr
9000fe8e:	4613      	mov	r3, r2
9000fe90:	699a      	ldr	r2, [r3, #24]
9000fe92:	2a00      	cmp	r2, #0
9000fe94:	d1fb      	bne.n	9000fe8e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
9000fe96:	6199      	str	r1, [r3, #24]
9000fe98:	4770      	bx	lr

9000fe9a <_ZN8touchgfx9Container9removeAllEv>:
9000fe9a:	2200      	movs	r2, #0
9000fe9c:	6a83      	ldr	r3, [r0, #40]	; 0x28
9000fe9e:	b123      	cbz	r3, 9000feaa <_ZN8touchgfx9Container9removeAllEv+0x10>
9000fea0:	6999      	ldr	r1, [r3, #24]
9000fea2:	6281      	str	r1, [r0, #40]	; 0x28
9000fea4:	e9c3 2205 	strd	r2, r2, [r3, #20]
9000fea8:	e7f8      	b.n	9000fe9c <_ZN8touchgfx9Container9removeAllEv+0x2>
9000feaa:	4770      	bx	lr

9000feac <_ZN8touchgfx9Container6unlinkEv>:
9000feac:	2300      	movs	r3, #0
9000feae:	6283      	str	r3, [r0, #40]	; 0x28
9000feb0:	4770      	bx	lr

9000feb2 <_ZNK8touchgfx9Container12getSolidRectEv>:
9000feb2:	2200      	movs	r2, #0
9000feb4:	8002      	strh	r2, [r0, #0]
9000feb6:	8042      	strh	r2, [r0, #2]
9000feb8:	8082      	strh	r2, [r0, #4]
9000feba:	80c2      	strh	r2, [r0, #6]
9000febc:	4770      	bx	lr

9000febe <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
9000febe:	b570      	push	{r4, r5, r6, lr}
9000fec0:	460d      	mov	r5, r1
9000fec2:	4616      	mov	r6, r2
9000fec4:	6a84      	ldr	r4, [r0, #40]	; 0x28
9000fec6:	b13c      	cbz	r4, 9000fed8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
9000fec8:	6823      	ldr	r3, [r4, #0]
9000feca:	4620      	mov	r0, r4
9000fecc:	4632      	mov	r2, r6
9000fece:	4629      	mov	r1, r5
9000fed0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000fed2:	4798      	blx	r3
9000fed4:	69a4      	ldr	r4, [r4, #24]
9000fed6:	e7f6      	b.n	9000fec6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
9000fed8:	bd70      	pop	{r4, r5, r6, pc}

9000feda <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
9000feda:	b538      	push	{r3, r4, r5, lr}
9000fedc:	460d      	mov	r5, r1
9000fede:	6a84      	ldr	r4, [r0, #40]	; 0x28
9000fee0:	b134      	cbz	r4, 9000fef0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
9000fee2:	682b      	ldr	r3, [r5, #0]
9000fee4:	4621      	mov	r1, r4
9000fee6:	4628      	mov	r0, r5
9000fee8:	689b      	ldr	r3, [r3, #8]
9000feea:	4798      	blx	r3
9000feec:	69a4      	ldr	r4, [r4, #24]
9000feee:	e7f7      	b.n	9000fee0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
9000fef0:	bd38      	pop	{r3, r4, r5, pc}

9000fef2 <_ZN8touchgfx9ContainerD1Ev>:
9000fef2:	4770      	bx	lr

9000fef4 <_ZN8touchgfx9ContainerD0Ev>:
9000fef4:	b510      	push	{r4, lr}
9000fef6:	4604      	mov	r4, r0
9000fef8:	212c      	movs	r1, #44	; 0x2c
9000fefa:	f016 f9b2 	bl	90026262 <_ZdlPvj>
9000fefe:	4620      	mov	r0, r4
9000ff00:	bd10      	pop	{r4, pc}

9000ff02 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
9000ff02:	6a83      	ldr	r3, [r0, #40]	; 0x28
9000ff04:	b19b      	cbz	r3, 9000ff2e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
9000ff06:	428b      	cmp	r3, r1
9000ff08:	d109      	bne.n	9000ff1e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
9000ff0a:	699a      	ldr	r2, [r3, #24]
9000ff0c:	2100      	movs	r1, #0
9000ff0e:	6159      	str	r1, [r3, #20]
9000ff10:	6282      	str	r2, [r0, #40]	; 0x28
9000ff12:	b902      	cbnz	r2, 9000ff16 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
9000ff14:	4770      	bx	lr
9000ff16:	6199      	str	r1, [r3, #24]
9000ff18:	4770      	bx	lr
9000ff1a:	4613      	mov	r3, r2
9000ff1c:	b13a      	cbz	r2, 9000ff2e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
9000ff1e:	699a      	ldr	r2, [r3, #24]
9000ff20:	428a      	cmp	r2, r1
9000ff22:	d1fa      	bne.n	9000ff1a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
9000ff24:	698a      	ldr	r2, [r1, #24]
9000ff26:	619a      	str	r2, [r3, #24]
9000ff28:	2300      	movs	r3, #0
9000ff2a:	e9c1 3305 	strd	r3, r3, [r1, #20]
9000ff2e:	4770      	bx	lr

9000ff30 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
9000ff30:	b410      	push	{r4}
9000ff32:	6a83      	ldr	r3, [r0, #40]	; 0x28
9000ff34:	4604      	mov	r4, r0
9000ff36:	b92b      	cbnz	r3, 9000ff44 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
9000ff38:	6803      	ldr	r3, [r0, #0]
9000ff3a:	4611      	mov	r1, r2
9000ff3c:	f85d 4b04 	ldr.w	r4, [sp], #4
9000ff40:	6e1b      	ldr	r3, [r3, #96]	; 0x60
9000ff42:	4718      	bx	r3
9000ff44:	b941      	cbnz	r1, 9000ff58 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
9000ff46:	6193      	str	r3, [r2, #24]
9000ff48:	6282      	str	r2, [r0, #40]	; 0x28
9000ff4a:	6154      	str	r4, [r2, #20]
9000ff4c:	f85d 4b04 	ldr.w	r4, [sp], #4
9000ff50:	4770      	bx	lr
9000ff52:	4603      	mov	r3, r0
9000ff54:	2800      	cmp	r0, #0
9000ff56:	d0f9      	beq.n	9000ff4c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
9000ff58:	4299      	cmp	r1, r3
9000ff5a:	6998      	ldr	r0, [r3, #24]
9000ff5c:	d1f9      	bne.n	9000ff52 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
9000ff5e:	6190      	str	r0, [r2, #24]
9000ff60:	618a      	str	r2, [r1, #24]
9000ff62:	e7f2      	b.n	9000ff4a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

9000ff64 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
9000ff64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000ff68:	461f      	mov	r7, r3
9000ff6a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
9000ff6e:	460d      	mov	r5, r1
9000ff70:	4616      	mov	r6, r2
9000ff72:	b103      	cbz	r3, 9000ff76 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
9000ff74:	6038      	str	r0, [r7, #0]
9000ff76:	6a84      	ldr	r4, [r0, #40]	; 0x28
9000ff78:	b314      	cbz	r4, 9000ffc0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
9000ff7a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
9000ff7e:	b1eb      	cbz	r3, 9000ffbc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000ff80:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9000ff84:	428d      	cmp	r5, r1
9000ff86:	db19      	blt.n	9000ffbc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000ff88:	b289      	uxth	r1, r1
9000ff8a:	8923      	ldrh	r3, [r4, #8]
9000ff8c:	440b      	add	r3, r1
9000ff8e:	b21b      	sxth	r3, r3
9000ff90:	429d      	cmp	r5, r3
9000ff92:	da13      	bge.n	9000ffbc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000ff94:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
9000ff98:	4296      	cmp	r6, r2
9000ff9a:	db0f      	blt.n	9000ffbc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000ff9c:	b292      	uxth	r2, r2
9000ff9e:	8963      	ldrh	r3, [r4, #10]
9000ffa0:	4413      	add	r3, r2
9000ffa2:	b21b      	sxth	r3, r3
9000ffa4:	429e      	cmp	r6, r3
9000ffa6:	da09      	bge.n	9000ffbc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000ffa8:	6823      	ldr	r3, [r4, #0]
9000ffaa:	1ab2      	subs	r2, r6, r2
9000ffac:	1a69      	subs	r1, r5, r1
9000ffae:	4620      	mov	r0, r4
9000ffb0:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
9000ffb4:	b212      	sxth	r2, r2
9000ffb6:	463b      	mov	r3, r7
9000ffb8:	b209      	sxth	r1, r1
9000ffba:	47c0      	blx	r8
9000ffbc:	69a4      	ldr	r4, [r4, #24]
9000ffbe:	e7db      	b.n	9000ff78 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
9000ffc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9000ffc4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
9000ffc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000ffc8:	4c6d      	ldr	r4, [pc, #436]	; (90010180 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
9000ffca:	b0a1      	sub	sp, #132	; 0x84
9000ffcc:	4606      	mov	r6, r0
9000ffce:	6824      	ldr	r4, [r4, #0]
9000ffd0:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
9000ffd2:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
9000ffd6:	2400      	movs	r4, #0
9000ffd8:	9303      	str	r3, [sp, #12]
9000ffda:	802c      	strh	r4, [r5, #0]
9000ffdc:	9d2b      	ldr	r5, [sp, #172]	; 0xac
9000ffde:	802c      	strh	r4, [r5, #0]
9000ffe0:	601c      	str	r4, [r3, #0]
9000ffe2:	e9cd 1201 	strd	r1, r2, [sp, #4]
9000ffe6:	f7ff ffbd 	bl	9000ff64 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
9000ffea:	f1b9 0f03 	cmp.w	r9, #3
9000ffee:	f340 80c1 	ble.w	90010174 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
9000fff2:	4631      	mov	r1, r6
9000fff4:	a80c      	add	r0, sp, #48	; 0x30
9000fff6:	f006 f8fb 	bl	900161f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9000fffa:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
9000fffe:	9306      	str	r3, [sp, #24]
90010000:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
90010004:	9307      	str	r3, [sp, #28]
90010006:	9b03      	ldr	r3, [sp, #12]
90010008:	f8d3 a000 	ldr.w	sl, [r3]
9001000c:	f1ba 0f00 	cmp.w	sl, #0
90010010:	f000 80b3 	beq.w	9001017a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
90010014:	4651      	mov	r1, sl
90010016:	a810      	add	r0, sp, #64	; 0x40
90010018:	f006 f8ea 	bl	900161f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001001c:	2002      	movs	r0, #2
9001001e:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
90010022:	9b01      	ldr	r3, [sp, #4]
90010024:	9a06      	ldr	r2, [sp, #24]
90010026:	fb91 f1f0 	sdiv	r1, r1, r0
9001002a:	189d      	adds	r5, r3, r2
9001002c:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
90010030:	9a07      	ldr	r2, [sp, #28]
90010032:	4419      	add	r1, r3
90010034:	9b02      	ldr	r3, [sp, #8]
90010036:	4413      	add	r3, r2
90010038:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
9001003c:	1a6d      	subs	r5, r5, r1
9001003e:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
90010042:	fb92 f2f0 	sdiv	r2, r2, r0
90010046:	440a      	add	r2, r1
90010048:	1a9b      	subs	r3, r3, r2
9001004a:	435b      	muls	r3, r3
9001004c:	fb05 3505 	mla	r5, r5, r5, r3
90010050:	4f4c      	ldr	r7, [pc, #304]	; (90010184 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
90010052:	ac10      	add	r4, sp, #64	; 0x40
90010054:	f1b9 0f0c 	cmp.w	r9, #12
90010058:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9001005a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
9001005c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9001005e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90010060:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90010062:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90010064:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
90010068:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9001006c:	f04f 0303 	mov.w	r3, #3
90010070:	bfd8      	it	le
90010072:	f109 32ff 	addle.w	r2, r9, #4294967295
90010076:	f04f 0400 	mov.w	r4, #0
9001007a:	f8cd 9000 	str.w	r9, [sp]
9001007e:	bfcc      	ite	gt
90010080:	4698      	movgt	r8, r3
90010082:	fb92 f8f3 	sdivle	r8, r2, r3
90010086:	1c63      	adds	r3, r4, #1
90010088:	aa10      	add	r2, sp, #64	; 0x40
9001008a:	f004 0401 	and.w	r4, r4, #1
9001008e:	f04f 0b00 	mov.w	fp, #0
90010092:	9308      	str	r3, [sp, #32]
90010094:	9b00      	ldr	r3, [sp, #0]
90010096:	eb02 1444 	add.w	r4, r2, r4, lsl #5
9001009a:	fb93 f3f8 	sdiv	r3, r3, r8
9001009e:	3404      	adds	r4, #4
900100a0:	b29b      	uxth	r3, r3
900100a2:	9304      	str	r3, [sp, #16]
900100a4:	9a04      	ldr	r2, [sp, #16]
900100a6:	f854 3c04 	ldr.w	r3, [r4, #-4]
900100aa:	fb13 f302 	smulbb	r3, r3, r2
900100ae:	9a01      	ldr	r2, [sp, #4]
900100b0:	b29b      	uxth	r3, r3
900100b2:	1899      	adds	r1, r3, r2
900100b4:	9305      	str	r3, [sp, #20]
900100b6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
900100ba:	b209      	sxth	r1, r1
900100bc:	4299      	cmp	r1, r3
900100be:	db4d      	blt.n	9001015c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900100c0:	8932      	ldrh	r2, [r6, #8]
900100c2:	4413      	add	r3, r2
900100c4:	b21b      	sxth	r3, r3
900100c6:	4299      	cmp	r1, r3
900100c8:	da48      	bge.n	9001015c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900100ca:	9b04      	ldr	r3, [sp, #16]
900100cc:	6827      	ldr	r7, [r4, #0]
900100ce:	fb17 f703 	smulbb	r7, r7, r3
900100d2:	9b02      	ldr	r3, [sp, #8]
900100d4:	b2bf      	uxth	r7, r7
900100d6:	18fa      	adds	r2, r7, r3
900100d8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
900100dc:	b212      	sxth	r2, r2
900100de:	429a      	cmp	r2, r3
900100e0:	db3c      	blt.n	9001015c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900100e2:	8970      	ldrh	r0, [r6, #10]
900100e4:	4403      	add	r3, r0
900100e6:	b21b      	sxth	r3, r3
900100e8:	429a      	cmp	r2, r3
900100ea:	da37      	bge.n	9001015c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900100ec:	2300      	movs	r3, #0
900100ee:	4630      	mov	r0, r6
900100f0:	930b      	str	r3, [sp, #44]	; 0x2c
900100f2:	ab0b      	add	r3, sp, #44	; 0x2c
900100f4:	f7ff ff36 	bl	9000ff64 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
900100f8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
900100fa:	b37a      	cbz	r2, 9001015c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900100fc:	4552      	cmp	r2, sl
900100fe:	d02d      	beq.n	9001015c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90010100:	4611      	mov	r1, r2
90010102:	a80e      	add	r0, sp, #56	; 0x38
90010104:	9209      	str	r2, [sp, #36]	; 0x24
90010106:	f006 f873 	bl	900161f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001010a:	f04f 0e02 	mov.w	lr, #2
9001010e:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
90010112:	9a06      	ldr	r2, [sp, #24]
90010114:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
90010118:	9b01      	ldr	r3, [sp, #4]
9001011a:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
9001011e:	4413      	add	r3, r2
90010120:	9a07      	ldr	r2, [sp, #28]
90010122:	fb91 f1fe 	sdiv	r1, r1, lr
90010126:	fb9c fcfe 	sdiv	ip, ip, lr
9001012a:	4401      	add	r1, r0
9001012c:	1a58      	subs	r0, r3, r1
9001012e:	9b02      	ldr	r3, [sp, #8]
90010130:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
90010134:	4413      	add	r3, r2
90010136:	9a09      	ldr	r2, [sp, #36]	; 0x24
90010138:	448c      	add	ip, r1
9001013a:	eba3 030c 	sub.w	r3, r3, ip
9001013e:	435b      	muls	r3, r3
90010140:	fb00 3300 	mla	r3, r0, r0, r3
90010144:	42ab      	cmp	r3, r5
90010146:	d208      	bcs.n	9001015a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
90010148:	990b      	ldr	r1, [sp, #44]	; 0x2c
9001014a:	461d      	mov	r5, r3
9001014c:	9803      	ldr	r0, [sp, #12]
9001014e:	6001      	str	r1, [r0, #0]
90010150:	992a      	ldr	r1, [sp, #168]	; 0xa8
90010152:	9805      	ldr	r0, [sp, #20]
90010154:	8008      	strh	r0, [r1, #0]
90010156:	992b      	ldr	r1, [sp, #172]	; 0xac
90010158:	800f      	strh	r7, [r1, #0]
9001015a:	4692      	mov	sl, r2
9001015c:	f10b 0b01 	add.w	fp, fp, #1
90010160:	3408      	adds	r4, #8
90010162:	f1bb 0f04 	cmp.w	fp, #4
90010166:	d19d      	bne.n	900100a4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
90010168:	9b00      	ldr	r3, [sp, #0]
9001016a:	9c08      	ldr	r4, [sp, #32]
9001016c:	444b      	add	r3, r9
9001016e:	4544      	cmp	r4, r8
90010170:	9300      	str	r3, [sp, #0]
90010172:	d188      	bne.n	90010086 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
90010174:	b021      	add	sp, #132	; 0x84
90010176:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001017a:	f04f 35ff 	mov.w	r5, #4294967295
9001017e:	e767      	b.n	90010050 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
90010180:	240235ac 	.word	0x240235ac
90010184:	900273e4 	.word	0x900273e4

90010188 <_ZN8touchgfx4RectaNERKS0_>:
90010188:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001018c:	f9b1 7000 	ldrsh.w	r7, [r1]
90010190:	888c      	ldrh	r4, [r1, #4]
90010192:	f9b0 9000 	ldrsh.w	r9, [r0]
90010196:	443c      	add	r4, r7
90010198:	b2a4      	uxth	r4, r4
9001019a:	fa0f f884 	sxth.w	r8, r4
9001019e:	45c1      	cmp	r9, r8
900101a0:	da2f      	bge.n	90010202 <_ZN8touchgfx4RectaNERKS0_+0x7a>
900101a2:	8882      	ldrh	r2, [r0, #4]
900101a4:	444a      	add	r2, r9
900101a6:	b292      	uxth	r2, r2
900101a8:	fa0f fe82 	sxth.w	lr, r2
900101ac:	4577      	cmp	r7, lr
900101ae:	da28      	bge.n	90010202 <_ZN8touchgfx4RectaNERKS0_+0x7a>
900101b0:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
900101b4:	88cb      	ldrh	r3, [r1, #6]
900101b6:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
900101ba:	442b      	add	r3, r5
900101bc:	b21b      	sxth	r3, r3
900101be:	429e      	cmp	r6, r3
900101c0:	da1f      	bge.n	90010202 <_ZN8touchgfx4RectaNERKS0_+0x7a>
900101c2:	88c3      	ldrh	r3, [r0, #6]
900101c4:	4433      	add	r3, r6
900101c6:	b29b      	uxth	r3, r3
900101c8:	fa0f fc83 	sxth.w	ip, r3
900101cc:	4565      	cmp	r5, ip
900101ce:	da18      	bge.n	90010202 <_ZN8touchgfx4RectaNERKS0_+0x7a>
900101d0:	454f      	cmp	r7, r9
900101d2:	bfb8      	it	lt
900101d4:	464f      	movlt	r7, r9
900101d6:	42b5      	cmp	r5, r6
900101d8:	bfb8      	it	lt
900101da:	4635      	movlt	r5, r6
900101dc:	45f0      	cmp	r8, lr
900101de:	bfd8      	it	le
900101e0:	4622      	movle	r2, r4
900101e2:	1bd2      	subs	r2, r2, r7
900101e4:	8082      	strh	r2, [r0, #4]
900101e6:	884a      	ldrh	r2, [r1, #2]
900101e8:	88c9      	ldrh	r1, [r1, #6]
900101ea:	8007      	strh	r7, [r0, #0]
900101ec:	440a      	add	r2, r1
900101ee:	8045      	strh	r5, [r0, #2]
900101f0:	b292      	uxth	r2, r2
900101f2:	b211      	sxth	r1, r2
900101f4:	458c      	cmp	ip, r1
900101f6:	bfa8      	it	ge
900101f8:	4613      	movge	r3, r2
900101fa:	1b5b      	subs	r3, r3, r5
900101fc:	80c3      	strh	r3, [r0, #6]
900101fe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90010202:	2300      	movs	r3, #0
90010204:	8003      	strh	r3, [r0, #0]
90010206:	8043      	strh	r3, [r0, #2]
90010208:	8083      	strh	r3, [r0, #4]
9001020a:	80c3      	strh	r3, [r0, #6]
9001020c:	e7f7      	b.n	900101fe <_ZN8touchgfx4RectaNERKS0_+0x76>

9001020e <_ZNK8touchgfx4Rect7isEmptyEv>:
9001020e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90010212:	2b00      	cmp	r3, #0
90010214:	dd06      	ble.n	90010224 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
90010216:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
9001021a:	2800      	cmp	r0, #0
9001021c:	bfcc      	ite	gt
9001021e:	2000      	movgt	r0, #0
90010220:	2001      	movle	r0, #1
90010222:	4770      	bx	lr
90010224:	2001      	movs	r0, #1
90010226:	4770      	bx	lr

90010228 <_ZNK8touchgfx9Container16getContainedAreaEv>:
90010228:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001022c:	2300      	movs	r3, #0
9001022e:	4604      	mov	r4, r0
90010230:	6a8d      	ldr	r5, [r1, #40]	; 0x28
90010232:	8003      	strh	r3, [r0, #0]
90010234:	8043      	strh	r3, [r0, #2]
90010236:	8083      	strh	r3, [r0, #4]
90010238:	80c3      	strh	r3, [r0, #6]
9001023a:	2d00      	cmp	r5, #0
9001023c:	d040      	beq.n	900102c0 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
9001023e:	1d28      	adds	r0, r5, #4
90010240:	f7ff ffe5 	bl	9001020e <_ZNK8touchgfx4Rect7isEmptyEv>
90010244:	b988      	cbnz	r0, 9001026a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90010246:	4620      	mov	r0, r4
90010248:	f7ff ffe1 	bl	9001020e <_ZNK8touchgfx4Rect7isEmptyEv>
9001024c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90010250:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90010254:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
90010258:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
9001025c:	b138      	cbz	r0, 9001026e <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
9001025e:	8022      	strh	r2, [r4, #0]
90010260:	8063      	strh	r3, [r4, #2]
90010262:	f8a4 e004 	strh.w	lr, [r4, #4]
90010266:	f8a4 c006 	strh.w	ip, [r4, #6]
9001026a:	69ad      	ldr	r5, [r5, #24]
9001026c:	e7e5      	b.n	9001023a <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
9001026e:	f9b4 0000 	ldrsh.w	r0, [r4]
90010272:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
90010276:	4290      	cmp	r0, r2
90010278:	4607      	mov	r7, r0
9001027a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
9001027e:	460e      	mov	r6, r1
90010280:	bfa8      	it	ge
90010282:	4617      	movge	r7, r2
90010284:	4299      	cmp	r1, r3
90010286:	4472      	add	r2, lr
90010288:	f8b4 e006 	ldrh.w	lr, [r4, #6]
9001028c:	bfa8      	it	ge
9001028e:	461e      	movge	r6, r3
90010290:	4440      	add	r0, r8
90010292:	4471      	add	r1, lr
90010294:	4463      	add	r3, ip
90010296:	b200      	sxth	r0, r0
90010298:	8027      	strh	r7, [r4, #0]
9001029a:	b212      	sxth	r2, r2
9001029c:	8066      	strh	r6, [r4, #2]
9001029e:	b209      	sxth	r1, r1
900102a0:	b21b      	sxth	r3, r3
900102a2:	4290      	cmp	r0, r2
900102a4:	bfac      	ite	ge
900102a6:	ebc7 0200 	rsbge	r2, r7, r0
900102aa:	ebc7 0202 	rsblt	r2, r7, r2
900102ae:	4299      	cmp	r1, r3
900102b0:	bfac      	ite	ge
900102b2:	ebc6 0301 	rsbge	r3, r6, r1
900102b6:	ebc6 0303 	rsblt	r3, r6, r3
900102ba:	80a2      	strh	r2, [r4, #4]
900102bc:	80e3      	strh	r3, [r4, #6]
900102be:	e7d4      	b.n	9001026a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
900102c0:	4620      	mov	r0, r4
900102c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900102c6 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
900102c6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
900102ca:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
900102ce:	b383      	cbz	r3, 90010332 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
900102d0:	6a84      	ldr	r4, [r0, #40]	; 0x28
900102d2:	b374      	cbz	r4, 90010332 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
900102d4:	f9b1 5000 	ldrsh.w	r5, [r1]
900102d8:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
900102dc:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
900102e0:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
900102e4:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
900102e8:	b303      	cbz	r3, 9001032c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
900102ea:	4668      	mov	r0, sp
900102ec:	1d21      	adds	r1, r4, #4
900102ee:	f8ad 5000 	strh.w	r5, [sp]
900102f2:	f8ad 6002 	strh.w	r6, [sp, #2]
900102f6:	f8ad 7004 	strh.w	r7, [sp, #4]
900102fa:	f8ad 8006 	strh.w	r8, [sp, #6]
900102fe:	f7ff ff43 	bl	90010188 <_ZN8touchgfx4RectaNERKS0_>
90010302:	4668      	mov	r0, sp
90010304:	f7ff ff83 	bl	9001020e <_ZNK8touchgfx4Rect7isEmptyEv>
90010308:	b980      	cbnz	r0, 9001032c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
9001030a:	f8bd 3000 	ldrh.w	r3, [sp]
9001030e:	4669      	mov	r1, sp
90010310:	88a2      	ldrh	r2, [r4, #4]
90010312:	4620      	mov	r0, r4
90010314:	1a9b      	subs	r3, r3, r2
90010316:	88e2      	ldrh	r2, [r4, #6]
90010318:	f8ad 3000 	strh.w	r3, [sp]
9001031c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90010320:	1a9b      	subs	r3, r3, r2
90010322:	f8ad 3002 	strh.w	r3, [sp, #2]
90010326:	6823      	ldr	r3, [r4, #0]
90010328:	689b      	ldr	r3, [r3, #8]
9001032a:	4798      	blx	r3
9001032c:	69a4      	ldr	r4, [r4, #24]
9001032e:	2c00      	cmp	r4, #0
90010330:	d1d8      	bne.n	900102e4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
90010332:	b002      	add	sp, #8
90010334:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90010338 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
90010338:	b573      	push	{r0, r1, r4, r5, r6, lr}
9001033a:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
9001033e:	460d      	mov	r5, r1
90010340:	4616      	mov	r6, r2
90010342:	b323      	cbz	r3, 9001038e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90010344:	6a84      	ldr	r4, [r0, #40]	; 0x28
90010346:	b314      	cbz	r4, 9001038e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90010348:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
9001034c:	b1eb      	cbz	r3, 9001038a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
9001034e:	6828      	ldr	r0, [r5, #0]
90010350:	466b      	mov	r3, sp
90010352:	6869      	ldr	r1, [r5, #4]
90010354:	c303      	stmia	r3!, {r0, r1}
90010356:	4668      	mov	r0, sp
90010358:	1d21      	adds	r1, r4, #4
9001035a:	f7ff ff15 	bl	90010188 <_ZN8touchgfx4RectaNERKS0_>
9001035e:	4668      	mov	r0, sp
90010360:	f7ff ff55 	bl	9001020e <_ZNK8touchgfx4Rect7isEmptyEv>
90010364:	b988      	cbnz	r0, 9001038a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
90010366:	f8bd 3000 	ldrh.w	r3, [sp]
9001036a:	4669      	mov	r1, sp
9001036c:	88a2      	ldrh	r2, [r4, #4]
9001036e:	4620      	mov	r0, r4
90010370:	1a9b      	subs	r3, r3, r2
90010372:	88e2      	ldrh	r2, [r4, #6]
90010374:	f8ad 3000 	strh.w	r3, [sp]
90010378:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001037c:	1a9b      	subs	r3, r3, r2
9001037e:	4632      	mov	r2, r6
90010380:	f8ad 3002 	strh.w	r3, [sp, #2]
90010384:	6823      	ldr	r3, [r4, #0]
90010386:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
90010388:	4798      	blx	r3
9001038a:	69a4      	ldr	r4, [r4, #24]
9001038c:	e7db      	b.n	90010346 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
9001038e:	b002      	add	sp, #8
90010390:	bd70      	pop	{r4, r5, r6, pc}

90010392 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
90010392:	6803      	ldr	r3, [r0, #0]
90010394:	b513      	push	{r0, r1, r4, lr}
90010396:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
9001039a:	2300      	movs	r3, #0
9001039c:	e9cd 3300 	strd	r3, r3, [sp]
900103a0:	466b      	mov	r3, sp
900103a2:	47a0      	blx	r4
900103a4:	b002      	add	sp, #8
900103a6:	bd10      	pop	{r4, pc}

900103a8 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
900103a8:	2301      	movs	r3, #1
900103aa:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
900103ae:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
900103b2:	4770      	bx	lr

900103b4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
900103b4:	2301      	movs	r3, #1
900103b6:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
900103ba:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
900103be:	4770      	bx	lr

900103c0 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
900103c0:	6843      	ldr	r3, [r0, #4]
900103c2:	2201      	movs	r2, #1
900103c4:	725a      	strb	r2, [r3, #9]
900103c6:	6840      	ldr	r0, [r0, #4]
900103c8:	6803      	ldr	r3, [r0, #0]
900103ca:	691b      	ldr	r3, [r3, #16]
900103cc:	4718      	bx	r3

900103ce <_ZN8touchgfx3HAL8flushDMAEv>:
900103ce:	6840      	ldr	r0, [r0, #4]
900103d0:	6803      	ldr	r3, [r0, #0]
900103d2:	689b      	ldr	r3, [r3, #8]
900103d4:	4718      	bx	r3

900103d6 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
900103d6:	b530      	push	{r4, r5, lr}
900103d8:	b08b      	sub	sp, #44	; 0x2c
900103da:	6804      	ldr	r4, [r0, #0]
900103dc:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
900103e0:	9509      	str	r5, [sp, #36]	; 0x24
900103e2:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
900103e6:	9508      	str	r5, [sp, #32]
900103e8:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
900103ec:	9507      	str	r5, [sp, #28]
900103ee:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
900103f2:	9506      	str	r5, [sp, #24]
900103f4:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
900103f8:	9505      	str	r5, [sp, #20]
900103fa:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
900103fe:	9504      	str	r5, [sp, #16]
90010400:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
90010404:	9503      	str	r5, [sp, #12]
90010406:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
9001040a:	9502      	str	r5, [sp, #8]
9001040c:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
90010410:	e9cd 3500 	strd	r3, r5, [sp]
90010414:	4613      	mov	r3, r2
90010416:	6be4      	ldr	r4, [r4, #60]	; 0x3c
90010418:	2200      	movs	r2, #0
9001041a:	47a0      	blx	r4
9001041c:	b00b      	add	sp, #44	; 0x2c
9001041e:	bd30      	pop	{r4, r5, pc}

90010420 <_ZN8touchgfx3HAL10beginFrameEv>:
90010420:	4b04      	ldr	r3, [pc, #16]	; (90010434 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
90010422:	781b      	ldrb	r3, [r3, #0]
90010424:	b123      	cbz	r3, 90010430 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
90010426:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
9001042a:	f080 0001 	eor.w	r0, r0, #1
9001042e:	4770      	bx	lr
90010430:	2001      	movs	r0, #1
90010432:	4770      	bx	lr
90010434:	240235aa 	.word	0x240235aa

90010438 <_ZN8touchgfx3HAL8endFrameEv>:
90010438:	b510      	push	{r4, lr}
9001043a:	4604      	mov	r4, r0
9001043c:	6840      	ldr	r0, [r0, #4]
9001043e:	6803      	ldr	r3, [r0, #0]
90010440:	689b      	ldr	r3, [r3, #8]
90010442:	4798      	blx	r3
90010444:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
90010448:	b113      	cbz	r3, 90010450 <_ZN8touchgfx3HAL8endFrameEv+0x18>
9001044a:	2301      	movs	r3, #1
9001044c:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
90010450:	bd10      	pop	{r4, pc}

90010452 <_ZN8touchgfx3HAL10initializeEv>:
90010452:	b510      	push	{r4, lr}
90010454:	4604      	mov	r4, r0
90010456:	f7f1 fa9f 	bl	90001998 <_ZN8touchgfx10OSWrappers10initializeEv>
9001045a:	f7f0 f851 	bl	90000500 <_ZN8touchgfx4GPIO4initEv>
9001045e:	6860      	ldr	r0, [r4, #4]
90010460:	6803      	ldr	r3, [r0, #0]
90010462:	68db      	ldr	r3, [r3, #12]
90010464:	4798      	blx	r3
90010466:	68e0      	ldr	r0, [r4, #12]
90010468:	6803      	ldr	r3, [r0, #0]
9001046a:	689b      	ldr	r3, [r3, #8]
9001046c:	4798      	blx	r3
9001046e:	6823      	ldr	r3, [r4, #0]
90010470:	4620      	mov	r0, r4
90010472:	6f5b      	ldr	r3, [r3, #116]	; 0x74
90010474:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90010478:	4718      	bx	r3
	...

9001047c <_ZN8touchgfx3HAL4tickEv>:
9001047c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
9001047e:	6803      	ldr	r3, [r0, #0]
90010480:	4604      	mov	r4, r0
90010482:	4d5b      	ldr	r5, [pc, #364]	; (900105f0 <_ZN8touchgfx3HAL4tickEv+0x174>)
90010484:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
90010488:	4798      	blx	r3
9001048a:	2800      	cmp	r0, #0
9001048c:	f000 8095 	beq.w	900105ba <_ZN8touchgfx3HAL4tickEv+0x13e>
90010490:	2001      	movs	r0, #1
90010492:	2600      	movs	r6, #0
90010494:	f7f0 f85e 	bl	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90010498:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
9001049c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
900104a0:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
900104a4:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
900104a8:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
900104ac:	b133      	cbz	r3, 900104bc <_ZN8touchgfx3HAL4tickEv+0x40>
900104ae:	6823      	ldr	r3, [r4, #0]
900104b0:	4620      	mov	r0, r4
900104b2:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
900104b6:	4798      	blx	r3
900104b8:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
900104bc:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
900104c0:	2601      	movs	r6, #1
900104c2:	6862      	ldr	r2, [r4, #4]
900104c4:	f083 0301 	eor.w	r3, r3, #1
900104c8:	702e      	strb	r6, [r5, #0]
900104ca:	7253      	strb	r3, [r2, #9]
900104cc:	f004 fd7c 	bl	90014fc8 <_ZN8touchgfx11Application11getInstanceEv>
900104d0:	6803      	ldr	r3, [r0, #0]
900104d2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900104d4:	4798      	blx	r3
900104d6:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
900104da:	b90b      	cbnz	r3, 900104e0 <_ZN8touchgfx3HAL4tickEv+0x64>
900104dc:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
900104e0:	f004 fd72 	bl	90014fc8 <_ZN8touchgfx11Application11getInstanceEv>
900104e4:	6803      	ldr	r3, [r0, #0]
900104e6:	695b      	ldr	r3, [r3, #20]
900104e8:	4798      	blx	r3
900104ea:	6de0      	ldr	r0, [r4, #92]	; 0x5c
900104ec:	6803      	ldr	r3, [r0, #0]
900104ee:	691b      	ldr	r3, [r3, #16]
900104f0:	4798      	blx	r3
900104f2:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
900104f6:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
900104fa:	3b01      	subs	r3, #1
900104fc:	b2db      	uxtb	r3, r3
900104fe:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
90010502:	b10a      	cbz	r2, 90010508 <_ZN8touchgfx3HAL4tickEv+0x8c>
90010504:	2b00      	cmp	r3, #0
90010506:	d1eb      	bne.n	900104e0 <_ZN8touchgfx3HAL4tickEv+0x64>
90010508:	4a3a      	ldr	r2, [pc, #232]	; (900105f4 <_ZN8touchgfx3HAL4tickEv+0x178>)
9001050a:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
9001050e:	7813      	ldrb	r3, [r2, #0]
90010510:	3301      	adds	r3, #1
90010512:	b25b      	sxtb	r3, r3
90010514:	4299      	cmp	r1, r3
90010516:	7013      	strb	r3, [r2, #0]
90010518:	dc10      	bgt.n	9001053c <_ZN8touchgfx3HAL4tickEv+0xc0>
9001051a:	2300      	movs	r3, #0
9001051c:	68e0      	ldr	r0, [r4, #12]
9001051e:	a902      	add	r1, sp, #8
90010520:	7013      	strb	r3, [r2, #0]
90010522:	aa03      	add	r2, sp, #12
90010524:	6803      	ldr	r3, [r0, #0]
90010526:	68db      	ldr	r3, [r3, #12]
90010528:	4798      	blx	r3
9001052a:	6823      	ldr	r3, [r4, #0]
9001052c:	2800      	cmp	r0, #0
9001052e:	d050      	beq.n	900105d2 <_ZN8touchgfx3HAL4tickEv+0x156>
90010530:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
90010534:	4620      	mov	r0, r4
90010536:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
9001053a:	4798      	blx	r3
9001053c:	2300      	movs	r3, #0
9001053e:	6960      	ldr	r0, [r4, #20]
90010540:	f88d 3007 	strb.w	r3, [sp, #7]
90010544:	b158      	cbz	r0, 9001055e <_ZN8touchgfx3HAL4tickEv+0xe2>
90010546:	6803      	ldr	r3, [r0, #0]
90010548:	f10d 0107 	add.w	r1, sp, #7
9001054c:	68db      	ldr	r3, [r3, #12]
9001054e:	4798      	blx	r3
90010550:	b128      	cbz	r0, 9001055e <_ZN8touchgfx3HAL4tickEv+0xe2>
90010552:	6de0      	ldr	r0, [r4, #92]	; 0x5c
90010554:	f89d 1007 	ldrb.w	r1, [sp, #7]
90010558:	6803      	ldr	r3, [r0, #0]
9001055a:	68db      	ldr	r3, [r3, #12]
9001055c:	4798      	blx	r3
9001055e:	f104 001c 	add.w	r0, r4, #28
90010562:	f015 fa0b 	bl	9002597c <_ZN8touchgfx8Gestures4tickEv>
90010566:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
9001056a:	b30b      	cbz	r3, 900105b0 <_ZN8touchgfx3HAL4tickEv+0x134>
9001056c:	6920      	ldr	r0, [r4, #16]
9001056e:	6803      	ldr	r3, [r0, #0]
90010570:	691b      	ldr	r3, [r3, #16]
90010572:	4798      	blx	r3
90010574:	6f63      	ldr	r3, [r4, #116]	; 0x74
90010576:	4606      	mov	r6, r0
90010578:	b903      	cbnz	r3, 9001057c <_ZN8touchgfx3HAL4tickEv+0x100>
9001057a:	6760      	str	r0, [r4, #116]	; 0x74
9001057c:	6f63      	ldr	r3, [r4, #116]	; 0x74
9001057e:	4a1e      	ldr	r2, [pc, #120]	; (900105f8 <_ZN8touchgfx3HAL4tickEv+0x17c>)
90010580:	1af3      	subs	r3, r6, r3
90010582:	4293      	cmp	r3, r2
90010584:	d914      	bls.n	900105b0 <_ZN8touchgfx3HAL4tickEv+0x134>
90010586:	6920      	ldr	r0, [r4, #16]
90010588:	6803      	ldr	r3, [r0, #0]
9001058a:	699b      	ldr	r3, [r3, #24]
9001058c:	4798      	blx	r3
9001058e:	6f63      	ldr	r3, [r4, #116]	; 0x74
90010590:	2264      	movs	r2, #100	; 0x64
90010592:	1af3      	subs	r3, r6, r3
90010594:	fbb3 f3f2 	udiv	r3, r3, r2
90010598:	fbb0 f0f3 	udiv	r0, r0, r3
9001059c:	2800      	cmp	r0, #0
9001059e:	dc1d      	bgt.n	900105dc <_ZN8touchgfx3HAL4tickEv+0x160>
900105a0:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
900105a4:	6920      	ldr	r0, [r4, #16]
900105a6:	2100      	movs	r1, #0
900105a8:	6803      	ldr	r3, [r0, #0]
900105aa:	69db      	ldr	r3, [r3, #28]
900105ac:	4798      	blx	r3
900105ae:	6766      	str	r6, [r4, #116]	; 0x74
900105b0:	f004 fd0a 	bl	90014fc8 <_ZN8touchgfx11Application11getInstanceEv>
900105b4:	6803      	ldr	r3, [r0, #0]
900105b6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900105b8:	4798      	blx	r3
900105ba:	6823      	ldr	r3, [r4, #0]
900105bc:	4620      	mov	r0, r4
900105be:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
900105c2:	4798      	blx	r3
900105c4:	2001      	movs	r0, #1
900105c6:	f7ef fff9 	bl	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
900105ca:	2300      	movs	r3, #0
900105cc:	702b      	strb	r3, [r5, #0]
900105ce:	b004      	add	sp, #16
900105d0:	bd70      	pop	{r4, r5, r6, pc}
900105d2:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
900105d6:	4620      	mov	r0, r4
900105d8:	4798      	blx	r3
900105da:	e7af      	b.n	9001053c <_ZN8touchgfx3HAL4tickEv+0xc0>
900105dc:	2863      	cmp	r0, #99	; 0x63
900105de:	bfcb      	itete	gt
900105e0:	2300      	movgt	r3, #0
900105e2:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
900105e6:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
900105ea:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
900105ee:	e7d9      	b.n	900105a4 <_ZN8touchgfx3HAL4tickEv+0x128>
900105f0:	240235b0 	.word	0x240235b0
900105f4:	240235b1 	.word	0x240235b1
900105f8:	05f5e100 	.word	0x05f5e100

900105fc <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
900105fc:	b510      	push	{r4, lr}
900105fe:	4604      	mov	r4, r0
90010600:	f7f1 f9fc 	bl	900019fc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
90010604:	2200      	movs	r2, #0
90010606:	6863      	ldr	r3, [r4, #4]
90010608:	729a      	strb	r2, [r3, #10]
9001060a:	bd10      	pop	{r4, pc}

9001060c <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
9001060c:	65c1      	str	r1, [r0, #92]	; 0x5c
9001060e:	301c      	adds	r0, #28
90010610:	f015 b9b2 	b.w	90025978 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

90010614 <_ZN8touchgfx3HAL5touchEll>:
90010614:	b530      	push	{r4, r5, lr}
90010616:	b087      	sub	sp, #28
90010618:	4604      	mov	r4, r0
9001061a:	a804      	add	r0, sp, #16
9001061c:	e9cd 1204 	strd	r1, r2, [sp, #16]
90010620:	f004 fa9c 	bl	90014b5c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
90010624:	9b04      	ldr	r3, [sp, #16]
90010626:	a906      	add	r1, sp, #24
90010628:	a803      	add	r0, sp, #12
9001062a:	f8ad 300c 	strh.w	r3, [sp, #12]
9001062e:	9b05      	ldr	r3, [sp, #20]
90010630:	f821 3d0a 	strh.w	r3, [r1, #-10]!
90010634:	f004 fae4 	bl	90014c00 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
90010638:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
9001063c:	f104 001c 	add.w	r0, r4, #28
90010640:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90010644:	f8bd 300e 	ldrh.w	r3, [sp, #14]
90010648:	b189      	cbz	r1, 9001066e <_ZN8touchgfx3HAL5touchEll+0x5a>
9001064a:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
9001064e:	9300      	str	r3, [sp, #0]
90010650:	4613      	mov	r3, r2
90010652:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
90010656:	462a      	mov	r2, r5
90010658:	f015 f99e 	bl	90025998 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
9001065c:	b128      	cbz	r0, 9001066a <_ZN8touchgfx3HAL5touchEll+0x56>
9001065e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90010662:	6623      	str	r3, [r4, #96]	; 0x60
90010664:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90010668:	6663      	str	r3, [r4, #100]	; 0x64
9001066a:	b007      	add	sp, #28
9001066c:	bd30      	pop	{r4, r5, pc}
9001066e:	f015 f9d3 	bl	90025a18 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
90010672:	2301      	movs	r3, #1
90010674:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
90010678:	e7f1      	b.n	9001065e <_ZN8touchgfx3HAL5touchEll+0x4a>

9001067a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
9001067a:	b510      	push	{r4, lr}
9001067c:	2b00      	cmp	r3, #0
9001067e:	d046      	beq.n	9001070e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90010680:	ea81 0002 	eor.w	r0, r1, r2
90010684:	07c4      	lsls	r4, r0, #31
90010686:	d508      	bpl.n	9001069a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
90010688:	440b      	add	r3, r1
9001068a:	3a01      	subs	r2, #1
9001068c:	428b      	cmp	r3, r1
9001068e:	d93e      	bls.n	9001070e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90010690:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90010694:	f801 0b01 	strb.w	r0, [r1], #1
90010698:	e7f8      	b.n	9001068c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
9001069a:	07d0      	lsls	r0, r2, #31
9001069c:	bf42      	ittt	mi
9001069e:	f812 0b01 	ldrbmi.w	r0, [r2], #1
900106a2:	f103 33ff 	addmi.w	r3, r3, #4294967295
900106a6:	f801 0b01 	strbmi.w	r0, [r1], #1
900106aa:	2b01      	cmp	r3, #1
900106ac:	d911      	bls.n	900106d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
900106ae:	ea81 0402 	eor.w	r4, r1, r2
900106b2:	4610      	mov	r0, r2
900106b4:	07a4      	lsls	r4, r4, #30
900106b6:	d022      	beq.n	900106fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
900106b8:	f023 0401 	bic.w	r4, r3, #1
900106bc:	440c      	add	r4, r1
900106be:	428c      	cmp	r4, r1
900106c0:	4602      	mov	r2, r0
900106c2:	d904      	bls.n	900106ce <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
900106c4:	8812      	ldrh	r2, [r2, #0]
900106c6:	3002      	adds	r0, #2
900106c8:	f821 2b02 	strh.w	r2, [r1], #2
900106cc:	e7f7      	b.n	900106be <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
900106ce:	f003 0301 	and.w	r3, r3, #1
900106d2:	f023 0003 	bic.w	r0, r3, #3
900106d6:	4408      	add	r0, r1
900106d8:	4288      	cmp	r0, r1
900106da:	4614      	mov	r4, r2
900106dc:	d904      	bls.n	900106e8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
900106de:	6824      	ldr	r4, [r4, #0]
900106e0:	3204      	adds	r2, #4
900106e2:	f841 4b04 	str.w	r4, [r1], #4
900106e6:	e7f7      	b.n	900106d8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
900106e8:	f003 0303 	and.w	r3, r3, #3
900106ec:	3a01      	subs	r2, #1
900106ee:	440b      	add	r3, r1
900106f0:	428b      	cmp	r3, r1
900106f2:	d90c      	bls.n	9001070e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
900106f4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
900106f8:	f801 0b01 	strb.w	r0, [r1], #1
900106fc:	e7f8      	b.n	900106f0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
900106fe:	0790      	lsls	r0, r2, #30
90010700:	d0e7      	beq.n	900106d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90010702:	f832 0b02 	ldrh.w	r0, [r2], #2
90010706:	3b02      	subs	r3, #2
90010708:	f821 0b02 	strh.w	r0, [r1], #2
9001070c:	e7e1      	b.n	900106d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
9001070e:	2001      	movs	r0, #1
90010710:	bd10      	pop	{r4, pc}

90010712 <_ZN8touchgfx3HAL7noTouchEv>:
90010712:	b510      	push	{r4, lr}
90010714:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
90010718:	4604      	mov	r4, r0
9001071a:	b153      	cbz	r3, 90010732 <_ZN8touchgfx3HAL7noTouchEv+0x20>
9001071c:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
90010720:	2101      	movs	r1, #1
90010722:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
90010726:	301c      	adds	r0, #28
90010728:	f015 f976 	bl	90025a18 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
9001072c:	2300      	movs	r3, #0
9001072e:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
90010732:	bd10      	pop	{r4, pc}

90010734 <_ZN8touchgfx8Drawable5setXYEss>:
90010734:	b570      	push	{r4, r5, r6, lr}
90010736:	6803      	ldr	r3, [r0, #0]
90010738:	4604      	mov	r4, r0
9001073a:	4615      	mov	r5, r2
9001073c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001073e:	4798      	blx	r3
90010740:	6823      	ldr	r3, [r4, #0]
90010742:	4629      	mov	r1, r5
90010744:	4620      	mov	r0, r4
90010746:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90010748:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001074c:	4718      	bx	r3
	...

90010750 <_ZN8touchgfx3HAL3lcdEv>:
90010750:	4b04      	ldr	r3, [pc, #16]	; (90010764 <_ZN8touchgfx3HAL3lcdEv+0x14>)
90010752:	681b      	ldr	r3, [r3, #0]
90010754:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90010758:	b10a      	cbz	r2, 9001075e <_ZN8touchgfx3HAL3lcdEv+0xe>
9001075a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
9001075c:	b900      	cbnz	r0, 90010760 <_ZN8touchgfx3HAL3lcdEv+0x10>
9001075e:	6898      	ldr	r0, [r3, #8]
90010760:	4770      	bx	lr
90010762:	bf00      	nop
90010764:	240235ac 	.word	0x240235ac

90010768 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
90010768:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001076c:	b085      	sub	sp, #20
9001076e:	4604      	mov	r4, r0
90010770:	2000      	movs	r0, #0
90010772:	4699      	mov	r9, r3
90010774:	ad04      	add	r5, sp, #16
90010776:	460f      	mov	r7, r1
90010778:	4690      	mov	r8, r2
9001077a:	f845 0d04 	str.w	r0, [r5, #-4]!
9001077e:	69a0      	ldr	r0, [r4, #24]
90010780:	6806      	ldr	r6, [r0, #0]
90010782:	9501      	str	r5, [sp, #4]
90010784:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
90010788:	9500      	str	r5, [sp, #0]
9001078a:	6835      	ldr	r5, [r6, #0]
9001078c:	47a8      	blx	r5
9001078e:	4d10      	ldr	r5, [pc, #64]	; (900107d0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
90010790:	4606      	mov	r6, r0
90010792:	f8a5 9000 	strh.w	r9, [r5]
90010796:	f7ff ffdb 	bl	90010750 <_ZN8touchgfx3HAL3lcdEv>
9001079a:	6803      	ldr	r3, [r0, #0]
9001079c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001079e:	4798      	blx	r3
900107a0:	b128      	cbz	r0, 900107ae <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
900107a2:	2801      	cmp	r0, #1
900107a4:	d00b      	beq.n	900107be <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
900107a6:	4630      	mov	r0, r6
900107a8:	b005      	add	sp, #20
900107aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900107ae:	882b      	ldrh	r3, [r5, #0]
900107b0:	fb08 7203 	mla	r2, r8, r3, r7
900107b4:	9b03      	ldr	r3, [sp, #12]
900107b6:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
900107ba:	63e3      	str	r3, [r4, #60]	; 0x3c
900107bc:	e7f3      	b.n	900107a6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
900107be:	882a      	ldrh	r2, [r5, #0]
900107c0:	9b03      	ldr	r3, [sp, #12]
900107c2:	fb08 7202 	mla	r2, r8, r2, r7
900107c6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900107ca:	1a9a      	subs	r2, r3, r2
900107cc:	63e2      	str	r2, [r4, #60]	; 0x3c
900107ce:	e7ea      	b.n	900107a6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
900107d0:	240235a6 	.word	0x240235a6

900107d4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
900107d4:	b5f0      	push	{r4, r5, r6, r7, lr}
900107d6:	b08b      	sub	sp, #44	; 0x2c
900107d8:	4617      	mov	r7, r2
900107da:	4604      	mov	r4, r0
900107dc:	460e      	mov	r6, r1
900107de:	461d      	mov	r5, r3
900107e0:	f7ff ffb6 	bl	90010750 <_ZN8touchgfx3HAL3lcdEv>
900107e4:	6803      	ldr	r3, [r0, #0]
900107e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900107e8:	4798      	blx	r3
900107ea:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
900107ee:	9007      	str	r0, [sp, #28]
900107f0:	4631      	mov	r1, r6
900107f2:	6822      	ldr	r2, [r4, #0]
900107f4:	e9cd 0308 	strd	r0, r3, [sp, #32]
900107f8:	4b0c      	ldr	r3, [pc, #48]	; (9001082c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
900107fa:	4620      	mov	r0, r4
900107fc:	881b      	ldrh	r3, [r3, #0]
900107fe:	9306      	str	r3, [sp, #24]
90010800:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
90010804:	9305      	str	r3, [sp, #20]
90010806:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
9001080a:	9304      	str	r3, [sp, #16]
9001080c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90010810:	9303      	str	r3, [sp, #12]
90010812:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
90010816:	9302      	str	r3, [sp, #8]
90010818:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
9001081c:	e9cd 5300 	strd	r5, r3, [sp]
90010820:	463b      	mov	r3, r7
90010822:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
90010824:	2200      	movs	r2, #0
90010826:	47a8      	blx	r5
90010828:	b00b      	add	sp, #44	; 0x2c
9001082a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001082c:	240235a6 	.word	0x240235a6

90010830 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
90010830:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010834:	4698      	mov	r8, r3
90010836:	6803      	ldr	r3, [r0, #0]
90010838:	b08b      	sub	sp, #44	; 0x2c
9001083a:	4617      	mov	r7, r2
9001083c:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
9001083e:	460e      	mov	r6, r1
90010840:	4b13      	ldr	r3, [pc, #76]	; (90010890 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
90010842:	4604      	mov	r4, r0
90010844:	f8b3 9000 	ldrh.w	r9, [r3]
90010848:	f7ff ff82 	bl	90010750 <_ZN8touchgfx3HAL3lcdEv>
9001084c:	6803      	ldr	r3, [r0, #0]
9001084e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010850:	4798      	blx	r3
90010852:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
90010856:	2200      	movs	r2, #0
90010858:	4631      	mov	r1, r6
9001085a:	e9cd 0308 	strd	r0, r3, [sp, #32]
9001085e:	2302      	movs	r3, #2
90010860:	4620      	mov	r0, r4
90010862:	e9cd 9306 	strd	r9, r3, [sp, #24]
90010866:	2301      	movs	r3, #1
90010868:	9305      	str	r3, [sp, #20]
9001086a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
9001086e:	9304      	str	r3, [sp, #16]
90010870:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
90010874:	9303      	str	r3, [sp, #12]
90010876:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
9001087a:	9302      	str	r3, [sp, #8]
9001087c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90010880:	e9cd 8300 	strd	r8, r3, [sp]
90010884:	463b      	mov	r3, r7
90010886:	47a8      	blx	r5
90010888:	b00b      	add	sp, #44	; 0x2c
9001088a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001088e:	bf00      	nop
90010890:	240235a6 	.word	0x240235a6

90010894 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
90010894:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010898:	4698      	mov	r8, r3
9001089a:	6803      	ldr	r3, [r0, #0]
9001089c:	b087      	sub	sp, #28
9001089e:	460e      	mov	r6, r1
900108a0:	6d9d      	ldr	r5, [r3, #88]	; 0x58
900108a2:	4617      	mov	r7, r2
900108a4:	4b0f      	ldr	r3, [pc, #60]	; (900108e4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
900108a6:	4604      	mov	r4, r0
900108a8:	f8b3 9000 	ldrh.w	r9, [r3]
900108ac:	f7ff ff50 	bl	90010750 <_ZN8touchgfx3HAL3lcdEv>
900108b0:	6803      	ldr	r3, [r0, #0]
900108b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900108b4:	4798      	blx	r3
900108b6:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
900108ba:	463a      	mov	r2, r7
900108bc:	4631      	mov	r1, r6
900108be:	f8cd 900c 	str.w	r9, [sp, #12]
900108c2:	e9cd 0304 	strd	r0, r3, [sp, #16]
900108c6:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
900108ca:	4620      	mov	r0, r4
900108cc:	9302      	str	r3, [sp, #8]
900108ce:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
900108d2:	9301      	str	r3, [sp, #4]
900108d4:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
900108d8:	9300      	str	r3, [sp, #0]
900108da:	4643      	mov	r3, r8
900108dc:	47a8      	blx	r5
900108de:	b007      	add	sp, #28
900108e0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900108e4:	240235a6 	.word	0x240235a6

900108e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
900108e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900108ec:	4604      	mov	r4, r0
900108ee:	b08f      	sub	sp, #60	; 0x3c
900108f0:	4610      	mov	r0, r2
900108f2:	460d      	mov	r5, r1
900108f4:	4691      	mov	r9, r2
900108f6:	461e      	mov	r6, r3
900108f8:	f007 fc12 	bl	90018120 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
900108fc:	2800      	cmp	r0, #0
900108fe:	f000 809d 	beq.w	90010a3c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
90010902:	6823      	ldr	r3, [r4, #0]
90010904:	4620      	mov	r0, r4
90010906:	f8df b198 	ldr.w	fp, [pc, #408]	; 90010aa0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
9001090a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
9001090e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90010910:	4798      	blx	r3
90010912:	6823      	ldr	r3, [r4, #0]
90010914:	4620      	mov	r0, r4
90010916:	f8df a18c 	ldr.w	sl, [pc, #396]	; 90010aa4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
9001091a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001091c:	4798      	blx	r3
9001091e:	f8bb 3000 	ldrh.w	r3, [fp]
90010922:	4f5c      	ldr	r7, [pc, #368]	; (90010a94 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90010924:	9301      	str	r3, [sp, #4]
90010926:	f8ba 3000 	ldrh.w	r3, [sl]
9001092a:	f828 9d1c 	strh.w	r9, [r8, #-28]!
9001092e:	4640      	mov	r0, r8
90010930:	9302      	str	r3, [sp, #8]
90010932:	883b      	ldrh	r3, [r7, #0]
90010934:	9303      	str	r3, [sp, #12]
90010936:	4b58      	ldr	r3, [pc, #352]	; (90010a98 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90010938:	881a      	ldrh	r2, [r3, #0]
9001093a:	9305      	str	r3, [sp, #20]
9001093c:	9204      	str	r2, [sp, #16]
9001093e:	f007 fc83 	bl	90018248 <_ZNK8touchgfx6Bitmap8getWidthEv>
90010942:	8038      	strh	r0, [r7, #0]
90010944:	4640      	mov	r0, r8
90010946:	f007 fcb3 	bl	900182b0 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001094a:	9b05      	ldr	r3, [sp, #20]
9001094c:	b280      	uxth	r0, r0
9001094e:	8018      	strh	r0, [r3, #0]
90010950:	4b52      	ldr	r3, [pc, #328]	; (90010a9c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
90010952:	781b      	ldrb	r3, [r3, #0]
90010954:	2b00      	cmp	r3, #0
90010956:	d174      	bne.n	90010a42 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
90010958:	883b      	ldrh	r3, [r7, #0]
9001095a:	f8aa 0000 	strh.w	r0, [sl]
9001095e:	f8ab 3000 	strh.w	r3, [fp]
90010962:	4648      	mov	r0, r9
90010964:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
90010968:	f007 fbda 	bl	90018120 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
9001096c:	2200      	movs	r2, #0
9001096e:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
90010972:	4611      	mov	r1, r2
90010974:	4628      	mov	r0, r5
90010976:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
9001097a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
9001097e:	f7ff fed9 	bl	90010734 <_ZN8touchgfx8Drawable5setXYEss>
90010982:	2301      	movs	r3, #1
90010984:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
90010988:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
9001098c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90010990:	2b00      	cmp	r3, #0
90010992:	dd5c      	ble.n	90010a4e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90010994:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90010998:	2b00      	cmp	r3, #0
9001099a:	dd58      	ble.n	90010a4e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
9001099c:	462a      	mov	r2, r5
9001099e:	ab0a      	add	r3, sp, #40	; 0x28
900109a0:	f852 0f04 	ldr.w	r0, [r2, #4]!
900109a4:	6851      	ldr	r1, [r2, #4]
900109a6:	c303      	stmia	r3!, {r0, r1}
900109a8:	4631      	mov	r1, r6
900109aa:	a80a      	add	r0, sp, #40	; 0x28
900109ac:	f7ff fbec 	bl	90010188 <_ZN8touchgfx4RectaNERKS0_>
900109b0:	4b38      	ldr	r3, [pc, #224]	; (90010a94 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
900109b2:	2100      	movs	r1, #0
900109b4:	f9b3 2000 	ldrsh.w	r2, [r3]
900109b8:	4b37      	ldr	r3, [pc, #220]	; (90010a98 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
900109ba:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
900109be:	aa0a      	add	r2, sp, #40	; 0x28
900109c0:	f9b3 3000 	ldrsh.w	r3, [r3]
900109c4:	910c      	str	r1, [sp, #48]	; 0x30
900109c6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
900109ca:	ab08      	add	r3, sp, #32
900109cc:	e892 0003 	ldmia.w	r2, {r0, r1}
900109d0:	e883 0003 	stmia.w	r3, {r0, r1}
900109d4:	4618      	mov	r0, r3
900109d6:	a90c      	add	r1, sp, #48	; 0x30
900109d8:	f7ff fbd6 	bl	90010188 <_ZN8touchgfx4RectaNERKS0_>
900109dc:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
900109de:	2b00      	cmp	r3, #0
900109e0:	d13c      	bne.n	90010a5c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
900109e2:	2000      	movs	r0, #0
900109e4:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
900109e8:	2600      	movs	r6, #0
900109ea:	696b      	ldr	r3, [r5, #20]
900109ec:	a908      	add	r1, sp, #32
900109ee:	682a      	ldr	r2, [r5, #0]
900109f0:	4628      	mov	r0, r5
900109f2:	9305      	str	r3, [sp, #20]
900109f4:	616e      	str	r6, [r5, #20]
900109f6:	6892      	ldr	r2, [r2, #8]
900109f8:	4790      	blx	r2
900109fa:	9b05      	ldr	r3, [sp, #20]
900109fc:	4652      	mov	r2, sl
900109fe:	4649      	mov	r1, r9
90010a00:	616b      	str	r3, [r5, #20]
90010a02:	4628      	mov	r0, r5
90010a04:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
90010a08:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
90010a0c:	f7ff fe92 	bl	90010734 <_ZN8touchgfx8Drawable5setXYEss>
90010a10:	9a01      	ldr	r2, [sp, #4]
90010a12:	4b23      	ldr	r3, [pc, #140]	; (90010aa0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
90010a14:	4620      	mov	r0, r4
90010a16:	801a      	strh	r2, [r3, #0]
90010a18:	9a02      	ldr	r2, [sp, #8]
90010a1a:	4b22      	ldr	r3, [pc, #136]	; (90010aa4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
90010a1c:	801a      	strh	r2, [r3, #0]
90010a1e:	9a03      	ldr	r2, [sp, #12]
90010a20:	4b1c      	ldr	r3, [pc, #112]	; (90010a94 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90010a22:	801a      	strh	r2, [r3, #0]
90010a24:	4b1c      	ldr	r3, [pc, #112]	; (90010a98 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90010a26:	9a04      	ldr	r2, [sp, #16]
90010a28:	801a      	strh	r2, [r3, #0]
90010a2a:	6823      	ldr	r3, [r4, #0]
90010a2c:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
90010a30:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90010a32:	4798      	blx	r3
90010a34:	6823      	ldr	r3, [r4, #0]
90010a36:	4620      	mov	r0, r4
90010a38:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010a3a:	4798      	blx	r3
90010a3c:	b00f      	add	sp, #60	; 0x3c
90010a3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90010a42:	883b      	ldrh	r3, [r7, #0]
90010a44:	f8ab 0000 	strh.w	r0, [fp]
90010a48:	f8aa 3000 	strh.w	r3, [sl]
90010a4c:	e789      	b.n	90010962 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
90010a4e:	462a      	mov	r2, r5
90010a50:	ab0a      	add	r3, sp, #40	; 0x28
90010a52:	f852 0f04 	ldr.w	r0, [r2, #4]!
90010a56:	6851      	ldr	r1, [r2, #4]
90010a58:	c303      	stmia	r3!, {r0, r1}
90010a5a:	e7a9      	b.n	900109b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
90010a5c:	a807      	add	r0, sp, #28
90010a5e:	f007 fd63 	bl	90018528 <_ZNK8touchgfx6Bitmap9getFormatEv>
90010a62:	4606      	mov	r6, r0
90010a64:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
90010a66:	6803      	ldr	r3, [r0, #0]
90010a68:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010a6a:	4798      	blx	r3
90010a6c:	4286      	cmp	r6, r0
90010a6e:	d1b8      	bne.n	900109e2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
90010a70:	f7ff fe6e 	bl	90010750 <_ZN8touchgfx3HAL3lcdEv>
90010a74:	6803      	ldr	r3, [r0, #0]
90010a76:	4606      	mov	r6, r0
90010a78:	a807      	add	r0, sp, #28
90010a7a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90010a7c:	9305      	str	r3, [sp, #20]
90010a7e:	f007 fd53 	bl	90018528 <_ZNK8touchgfx6Bitmap9getFormatEv>
90010a82:	9b05      	ldr	r3, [sp, #20]
90010a84:	4601      	mov	r1, r0
90010a86:	4630      	mov	r0, r6
90010a88:	4798      	blx	r3
90010a8a:	f080 0001 	eor.w	r0, r0, #1
90010a8e:	b2c0      	uxtb	r0, r0
90010a90:	e7a8      	b.n	900109e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
90010a92:	bf00      	nop
90010a94:	240235a0 	.word	0x240235a0
90010a98:	240235a2 	.word	0x240235a2
90010a9c:	240235a4 	.word	0x240235a4
90010aa0:	240235a6 	.word	0x240235a6
90010aa4:	240235a8 	.word	0x240235a8

90010aa8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
90010aa8:	4b07      	ldr	r3, [pc, #28]	; (90010ac8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
90010aaa:	b510      	push	{r4, lr}
90010aac:	781b      	ldrb	r3, [r3, #0]
90010aae:	4604      	mov	r4, r0
90010ab0:	b13b      	cbz	r3, 90010ac2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90010ab2:	6803      	ldr	r3, [r0, #0]
90010ab4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90010ab6:	4798      	blx	r3
90010ab8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90010aba:	4283      	cmp	r3, r0
90010abc:	d101      	bne.n	90010ac2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90010abe:	6c20      	ldr	r0, [r4, #64]	; 0x40
90010ac0:	bd10      	pop	{r4, pc}
90010ac2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
90010ac4:	e7fc      	b.n	90010ac0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
90010ac6:	bf00      	nop
90010ac8:	240235aa 	.word	0x240235aa

90010acc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
90010acc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010ad0:	461d      	mov	r5, r3
90010ad2:	b08a      	sub	sp, #40	; 0x28
90010ad4:	f44f 6380 	mov.w	r3, #1024	; 0x400
90010ad8:	4690      	mov	r8, r2
90010ada:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
90010ade:	2400      	movs	r4, #0
90010ae0:	4607      	mov	r7, r0
90010ae2:	fb06 8505 	mla	r5, r6, r5, r8
90010ae6:	9404      	str	r4, [sp, #16]
90010ae8:	f88d 4020 	strb.w	r4, [sp, #32]
90010aec:	e9cd 3101 	strd	r3, r1, [sp, #4]
90010af0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
90010af4:	f8ad 3018 	strh.w	r3, [sp, #24]
90010af8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
90010afc:	f8ad 301a 	strh.w	r3, [sp, #26]
90010b00:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90010b04:	f8ad 301c 	strh.w	r3, [sp, #28]
90010b08:	f7ff ffce 	bl	90010aa8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010b0c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90010b10:	6878      	ldr	r0, [r7, #4]
90010b12:	f8ad 601e 	strh.w	r6, [sp, #30]
90010b16:	a901      	add	r1, sp, #4
90010b18:	9505      	str	r5, [sp, #20]
90010b1a:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
90010b1e:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
90010b22:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
90010b26:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
90010b2a:	6803      	ldr	r3, [r0, #0]
90010b2c:	685b      	ldr	r3, [r3, #4]
90010b2e:	4798      	blx	r3
90010b30:	b00a      	add	sp, #40	; 0x28
90010b32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90010b36 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
90010b36:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010b3a:	b08b      	sub	sp, #44	; 0x2c
90010b3c:	2400      	movs	r4, #0
90010b3e:	4691      	mov	r9, r2
90010b40:	461d      	mov	r5, r3
90010b42:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
90010b46:	f44f 6300 	mov.w	r3, #2048	; 0x800
90010b4a:	4688      	mov	r8, r1
90010b4c:	4607      	mov	r7, r0
90010b4e:	9404      	str	r4, [sp, #16]
90010b50:	fb06 9505 	mla	r5, r6, r5, r9
90010b54:	e9cd 3401 	strd	r3, r4, [sp, #4]
90010b58:	f7ff ffa6 	bl	90010aa8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010b5c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90010b60:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90010b64:	6878      	ldr	r0, [r7, #4]
90010b66:	f8ad 3018 	strh.w	r3, [sp, #24]
90010b6a:	a901      	add	r1, sp, #4
90010b6c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
90010b70:	9505      	str	r5, [sp, #20]
90010b72:	f8ad 301a 	strh.w	r3, [sp, #26]
90010b76:	f8ad 401c 	strh.w	r4, [sp, #28]
90010b7a:	f8ad 601e 	strh.w	r6, [sp, #30]
90010b7e:	f8cd 8010 	str.w	r8, [sp, #16]
90010b82:	f8ad 4020 	strh.w	r4, [sp, #32]
90010b86:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
90010b8a:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
90010b8e:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
90010b92:	6803      	ldr	r3, [r0, #0]
90010b94:	685b      	ldr	r3, [r3, #4]
90010b96:	4798      	blx	r3
90010b98:	b00b      	add	sp, #44	; 0x2c
90010b9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

90010ba0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
90010ba0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010ba4:	b08a      	sub	sp, #40	; 0x28
90010ba6:	4698      	mov	r8, r3
90010ba8:	2300      	movs	r3, #0
90010baa:	4606      	mov	r6, r0
90010bac:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
90010bb0:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
90010bb4:	2d0b      	cmp	r5, #11
90010bb6:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
90010bba:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
90010bbe:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
90010bc2:	9304      	str	r3, [sp, #16]
90010bc4:	d137      	bne.n	90010c36 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
90010bc6:	2380      	movs	r3, #128	; 0x80
90010bc8:	f88d 0020 	strb.w	r0, [sp, #32]
90010bcc:	4630      	mov	r0, r6
90010bce:	9203      	str	r2, [sp, #12]
90010bd0:	e9cd 3101 	strd	r3, r1, [sp, #4]
90010bd4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
90010bd8:	f8ad 3018 	strh.w	r3, [sp, #24]
90010bdc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90010be0:	f8ad 301a 	strh.w	r3, [sp, #26]
90010be4:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
90010be8:	f8ad 301c 	strh.w	r3, [sp, #28]
90010bec:	f7ff ff5c 	bl	90010aa8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010bf0:	2c0b      	cmp	r4, #11
90010bf2:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
90010bf6:	f8ad 701e 	strh.w	r7, [sp, #30]
90010bfa:	bf94      	ite	ls
90010bfc:	4b19      	ldrls	r3, [pc, #100]	; (90010c64 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
90010bfe:	2100      	movhi	r1, #0
90010c00:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
90010c04:	bf98      	it	ls
90010c06:	5d19      	ldrbls	r1, [r3, r4]
90010c08:	fb02 8307 	mla	r3, r2, r7, r8
90010c0c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
90010c10:	10c9      	asrs	r1, r1, #3
90010c12:	fb01 0003 	mla	r0, r1, r3, r0
90010c16:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
90010c1a:	a901      	add	r1, sp, #4
90010c1c:	9005      	str	r0, [sp, #20]
90010c1e:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
90010c22:	2300      	movs	r3, #0
90010c24:	6870      	ldr	r0, [r6, #4]
90010c26:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
90010c2a:	6803      	ldr	r3, [r0, #0]
90010c2c:	685b      	ldr	r3, [r3, #4]
90010c2e:	4798      	blx	r3
90010c30:	b00a      	add	sp, #40	; 0x28
90010c32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90010c36:	2d02      	cmp	r5, #2
90010c38:	d109      	bne.n	90010c4e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
90010c3a:	28ff      	cmp	r0, #255	; 0xff
90010c3c:	d105      	bne.n	90010c4a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
90010c3e:	f1bc 0f00 	cmp.w	ip, #0
90010c42:	bf14      	ite	ne
90010c44:	2340      	movne	r3, #64	; 0x40
90010c46:	2320      	moveq	r3, #32
90010c48:	e7be      	b.n	90010bc8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90010c4a:	2340      	movs	r3, #64	; 0x40
90010c4c:	e7bc      	b.n	90010bc8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90010c4e:	28ff      	cmp	r0, #255	; 0xff
90010c50:	d105      	bne.n	90010c5e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
90010c52:	f1bc 0f00 	cmp.w	ip, #0
90010c56:	bf14      	ite	ne
90010c58:	2304      	movne	r3, #4
90010c5a:	2301      	moveq	r3, #1
90010c5c:	e7b4      	b.n	90010bc8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90010c5e:	2304      	movs	r3, #4
90010c60:	e7b2      	b.n	90010bc8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90010c62:	bf00      	nop
90010c64:	9002a2d4 	.word	0x9002a2d4

90010c68 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
90010c68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010c6c:	b08b      	sub	sp, #44	; 0x2c
90010c6e:	461d      	mov	r5, r3
90010c70:	2400      	movs	r4, #0
90010c72:	4688      	mov	r8, r1
90010c74:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
90010c78:	4693      	mov	fp, r2
90010c7a:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
90010c7e:	4607      	mov	r7, r0
90010c80:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90010c84:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
90010c88:	9404      	str	r4, [sp, #16]
90010c8a:	bf14      	ite	ne
90010c8c:	2308      	movne	r3, #8
90010c8e:	2302      	moveq	r3, #2
90010c90:	fb05 b50a 	mla	r5, r5, sl, fp
90010c94:	e9cd 3401 	strd	r3, r4, [sp, #4]
90010c98:	f7ff ff06 	bl	90010aa8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010c9c:	2e0b      	cmp	r6, #11
90010c9e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
90010ca2:	a901      	add	r1, sp, #4
90010ca4:	bf98      	it	ls
90010ca6:	4b13      	ldrls	r3, [pc, #76]	; (90010cf4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
90010ca8:	f8ad a01e 	strh.w	sl, [sp, #30]
90010cac:	bf98      	it	ls
90010cae:	5d9c      	ldrbls	r4, [r3, r6]
90010cb0:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
90010cb4:	10e4      	asrs	r4, r4, #3
90010cb6:	f8cd 8010 	str.w	r8, [sp, #16]
90010cba:	f8ad 3018 	strh.w	r3, [sp, #24]
90010cbe:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
90010cc2:	fb04 0405 	mla	r4, r4, r5, r0
90010cc6:	6878      	ldr	r0, [r7, #4]
90010cc8:	f8ad 301a 	strh.w	r3, [sp, #26]
90010ccc:	2300      	movs	r3, #0
90010cce:	9405      	str	r4, [sp, #20]
90010cd0:	f8ad 301c 	strh.w	r3, [sp, #28]
90010cd4:	f88d 9020 	strb.w	r9, [sp, #32]
90010cd8:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
90010cdc:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
90010ce0:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
90010ce4:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
90010ce8:	6803      	ldr	r3, [r0, #0]
90010cea:	685b      	ldr	r3, [r3, #4]
90010cec:	4798      	blx	r3
90010cee:	b00b      	add	sp, #44	; 0x2c
90010cf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90010cf4:	9002a2d4 	.word	0x9002a2d4

90010cf8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
90010cf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010cfc:	461e      	mov	r6, r3
90010cfe:	4b0a      	ldr	r3, [pc, #40]	; (90010d28 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
90010d00:	460f      	mov	r7, r1
90010d02:	4690      	mov	r8, r2
90010d04:	881d      	ldrh	r5, [r3, #0]
90010d06:	f7ff fd23 	bl	90010750 <_ZN8touchgfx3HAL3lcdEv>
90010d0a:	6803      	ldr	r3, [r0, #0]
90010d0c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010d0e:	4798      	blx	r3
90010d10:	280b      	cmp	r0, #11
90010d12:	bf96      	itet	ls
90010d14:	4b05      	ldrls	r3, [pc, #20]	; (90010d2c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
90010d16:	2400      	movhi	r4, #0
90010d18:	5c1c      	ldrbls	r4, [r3, r0]
90010d1a:	fb08 7005 	mla	r0, r8, r5, r7
90010d1e:	10e4      	asrs	r4, r4, #3
90010d20:	fb04 6000 	mla	r0, r4, r0, r6
90010d24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90010d28:	240235a6 	.word	0x240235a6
90010d2c:	9002a2d4 	.word	0x9002a2d4

90010d30 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
90010d30:	b5f0      	push	{r4, r5, r6, r7, lr}
90010d32:	b08b      	sub	sp, #44	; 0x2c
90010d34:	461f      	mov	r7, r3
90010d36:	4604      	mov	r4, r0
90010d38:	4616      	mov	r6, r2
90010d3a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
90010d3e:	2500      	movs	r5, #0
90010d40:	e9cd 3101 	strd	r3, r1, [sp, #4]
90010d44:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
90010d48:	9504      	str	r5, [sp, #16]
90010d4a:	f8ad 3018 	strh.w	r3, [sp, #24]
90010d4e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
90010d52:	f8ad 301a 	strh.w	r3, [sp, #26]
90010d56:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90010d5a:	f8ad 301c 	strh.w	r3, [sp, #28]
90010d5e:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
90010d62:	f88d 3020 	strb.w	r3, [sp, #32]
90010d66:	f7ff fe9f 	bl	90010aa8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010d6a:	463a      	mov	r2, r7
90010d6c:	4631      	mov	r1, r6
90010d6e:	4603      	mov	r3, r0
90010d70:	4620      	mov	r0, r4
90010d72:	f7ff ffc1 	bl	90010cf8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010d76:	4b0e      	ldr	r3, [pc, #56]	; (90010db0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
90010d78:	9005      	str	r0, [sp, #20]
90010d7a:	881b      	ldrh	r3, [r3, #0]
90010d7c:	f8ad 301e 	strh.w	r3, [sp, #30]
90010d80:	f7ff fce6 	bl	90010750 <_ZN8touchgfx3HAL3lcdEv>
90010d84:	6803      	ldr	r3, [r0, #0]
90010d86:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010d88:	4798      	blx	r3
90010d8a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90010d8c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
90010d90:	a901      	add	r1, sp, #4
90010d92:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
90010d96:	9304      	str	r3, [sp, #16]
90010d98:	6860      	ldr	r0, [r4, #4]
90010d9a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
90010d9e:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
90010da2:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
90010da6:	6803      	ldr	r3, [r0, #0]
90010da8:	685b      	ldr	r3, [r3, #4]
90010daa:	4798      	blx	r3
90010dac:	b00b      	add	sp, #44	; 0x2c
90010dae:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010db0:	240235a6 	.word	0x240235a6

90010db4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
90010db4:	b5f0      	push	{r4, r5, r6, r7, lr}
90010db6:	b08d      	sub	sp, #52	; 0x34
90010db8:	2501      	movs	r5, #1
90010dba:	4604      	mov	r4, r0
90010dbc:	466b      	mov	r3, sp
90010dbe:	9503      	str	r5, [sp, #12]
90010dc0:	e883 0006 	stmia.w	r3, {r1, r2}
90010dc4:	2300      	movs	r3, #0
90010dc6:	f8bd 6000 	ldrh.w	r6, [sp]
90010dca:	f8bd 7002 	ldrh.w	r7, [sp, #2]
90010dce:	9306      	str	r3, [sp, #24]
90010dd0:	6803      	ldr	r3, [r0, #0]
90010dd2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90010dd4:	4798      	blx	r3
90010dd6:	463a      	mov	r2, r7
90010dd8:	4631      	mov	r1, r6
90010dda:	4603      	mov	r3, r0
90010ddc:	4620      	mov	r0, r4
90010dde:	f7ff ff8b 	bl	90010cf8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010de2:	6c63      	ldr	r3, [r4, #68]	; 0x44
90010de4:	9004      	str	r0, [sp, #16]
90010de6:	9307      	str	r3, [sp, #28]
90010de8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90010dec:	f8ad 3020 	strh.w	r3, [sp, #32]
90010df0:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90010df4:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90010df8:	4b0e      	ldr	r3, [pc, #56]	; (90010e34 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
90010dfa:	881b      	ldrh	r3, [r3, #0]
90010dfc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
90010e00:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
90010e04:	f7ff fca4 	bl	90010750 <_ZN8touchgfx3HAL3lcdEv>
90010e08:	6803      	ldr	r3, [r0, #0]
90010e0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010e0c:	4798      	blx	r3
90010e0e:	23ff      	movs	r3, #255	; 0xff
90010e10:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
90010e14:	a903      	add	r1, sp, #12
90010e16:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
90010e1a:	6860      	ldr	r0, [r4, #4]
90010e1c:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
90010e20:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
90010e24:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
90010e28:	6803      	ldr	r3, [r0, #0]
90010e2a:	685b      	ldr	r3, [r3, #4]
90010e2c:	4798      	blx	r3
90010e2e:	6c60      	ldr	r0, [r4, #68]	; 0x44
90010e30:	b00d      	add	sp, #52	; 0x34
90010e32:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010e34:	240235a6 	.word	0x240235a6

90010e38 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
90010e38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010e3c:	b08c      	sub	sp, #48	; 0x30
90010e3e:	461e      	mov	r6, r3
90010e40:	2300      	movs	r3, #0
90010e42:	4604      	mov	r4, r0
90010e44:	466d      	mov	r5, sp
90010e46:	9306      	str	r3, [sp, #24]
90010e48:	6803      	ldr	r3, [r0, #0]
90010e4a:	e885 0006 	stmia.w	r5, {r1, r2}
90010e4e:	2501      	movs	r5, #1
90010e50:	f8bd 7000 	ldrh.w	r7, [sp]
90010e54:	f8bd 8002 	ldrh.w	r8, [sp, #2]
90010e58:	9503      	str	r5, [sp, #12]
90010e5a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90010e5c:	4798      	blx	r3
90010e5e:	4642      	mov	r2, r8
90010e60:	4639      	mov	r1, r7
90010e62:	4603      	mov	r3, r0
90010e64:	4620      	mov	r0, r4
90010e66:	f7ff ff47 	bl	90010cf8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010e6a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90010e6e:	9004      	str	r0, [sp, #16]
90010e70:	f8ad 3020 	strh.w	r3, [sp, #32]
90010e74:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90010e78:	9607      	str	r6, [sp, #28]
90010e7a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90010e7e:	4b10      	ldr	r3, [pc, #64]	; (90010ec0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
90010e80:	881b      	ldrh	r3, [r3, #0]
90010e82:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
90010e86:	9b12      	ldr	r3, [sp, #72]	; 0x48
90010e88:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
90010e8c:	f7ff fc60 	bl	90010750 <_ZN8touchgfx3HAL3lcdEv>
90010e90:	6803      	ldr	r3, [r0, #0]
90010e92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010e94:	4798      	blx	r3
90010e96:	23ff      	movs	r3, #255	; 0xff
90010e98:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
90010e9c:	a903      	add	r1, sp, #12
90010e9e:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
90010ea2:	6860      	ldr	r0, [r4, #4]
90010ea4:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
90010ea8:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
90010eac:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
90010eb0:	6803      	ldr	r3, [r0, #0]
90010eb2:	685b      	ldr	r3, [r3, #4]
90010eb4:	4798      	blx	r3
90010eb6:	4630      	mov	r0, r6
90010eb8:	b00c      	add	sp, #48	; 0x30
90010eba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90010ebe:	bf00      	nop
90010ec0:	240235a6 	.word	0x240235a6

90010ec4 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
90010ec4:	b5f0      	push	{r4, r5, r6, r7, lr}
90010ec6:	b085      	sub	sp, #20
90010ec8:	4605      	mov	r5, r0
90010eca:	ac02      	add	r4, sp, #8
90010ecc:	e884 0006 	stmia.w	r4, {r1, r2}
90010ed0:	f8bd 6008 	ldrh.w	r6, [sp, #8]
90010ed4:	f8bd 700a 	ldrh.w	r7, [sp, #10]
90010ed8:	f7ff fde6 	bl	90010aa8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010edc:	4631      	mov	r1, r6
90010ede:	4603      	mov	r3, r0
90010ee0:	463a      	mov	r2, r7
90010ee2:	4628      	mov	r0, r5
90010ee4:	f7ff ff08 	bl	90010cf8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010ee8:	4a05      	ldr	r2, [pc, #20]	; (90010f00 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
90010eea:	682b      	ldr	r3, [r5, #0]
90010eec:	8812      	ldrh	r2, [r2, #0]
90010eee:	9200      	str	r2, [sp, #0]
90010ef0:	6ede      	ldr	r6, [r3, #108]	; 0x6c
90010ef2:	4603      	mov	r3, r0
90010ef4:	4628      	mov	r0, r5
90010ef6:	e894 0006 	ldmia.w	r4, {r1, r2}
90010efa:	47b0      	blx	r6
90010efc:	b005      	add	sp, #20
90010efe:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010f00:	240235a6 	.word	0x240235a6

90010f04 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
90010f04:	b570      	push	{r4, r5, r6, lr}
90010f06:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
90010f0a:	4604      	mov	r4, r0
90010f0c:	b19b      	cbz	r3, 90010f36 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
90010f0e:	2002      	movs	r0, #2
90010f10:	f7ef fb88 	bl	90000624 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
90010f14:	2300      	movs	r3, #0
90010f16:	4620      	mov	r0, r4
90010f18:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
90010f1c:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
90010f20:	6823      	ldr	r3, [r4, #0]
90010f22:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
90010f26:	f7ff fdbf 	bl	90010aa8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010f2a:	4601      	mov	r1, r0
90010f2c:	4620      	mov	r0, r4
90010f2e:	462b      	mov	r3, r5
90010f30:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010f34:	4718      	bx	r3
90010f36:	bd70      	pop	{r4, r5, r6, pc}

90010f38 <_ZN8touchgfx3HAL12setMCUActiveEb>:
90010f38:	b570      	push	{r4, r5, r6, lr}
90010f3a:	4605      	mov	r5, r0
90010f3c:	460c      	mov	r4, r1
90010f3e:	2003      	movs	r0, #3
90010f40:	b149      	cbz	r1, 90010f56 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
90010f42:	f7ef fb07 	bl	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90010f46:	6928      	ldr	r0, [r5, #16]
90010f48:	b168      	cbz	r0, 90010f66 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90010f4a:	6803      	ldr	r3, [r0, #0]
90010f4c:	2101      	movs	r1, #1
90010f4e:	695b      	ldr	r3, [r3, #20]
90010f50:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010f54:	4718      	bx	r3
90010f56:	f7ef fb31 	bl	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90010f5a:	6928      	ldr	r0, [r5, #16]
90010f5c:	b118      	cbz	r0, 90010f66 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90010f5e:	6803      	ldr	r3, [r0, #0]
90010f60:	4621      	mov	r1, r4
90010f62:	695b      	ldr	r3, [r3, #20]
90010f64:	e7f4      	b.n	90010f50 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
90010f66:	bd70      	pop	{r4, r5, r6, pc}

90010f68 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
90010f68:	b538      	push	{r3, r4, r5, lr}
90010f6a:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
90010f6e:	4604      	mov	r4, r0
90010f70:	460d      	mov	r5, r1
90010f72:	428b      	cmp	r3, r1
90010f74:	d006      	beq.n	90010f84 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
90010f76:	6803      	ldr	r3, [r0, #0]
90010f78:	b929      	cbnz	r1, 90010f86 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
90010f7a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
90010f7e:	4798      	blx	r3
90010f80:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
90010f84:	bd38      	pop	{r3, r4, r5, pc}
90010f86:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
90010f8a:	e7f8      	b.n	90010f7e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

90010f8c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
90010f8c:	4b0d      	ldr	r3, [pc, #52]	; (90010fc4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
90010f8e:	b510      	push	{r4, lr}
90010f90:	781b      	ldrb	r3, [r3, #0]
90010f92:	4604      	mov	r4, r0
90010f94:	b95b      	cbnz	r3, 90010fae <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90010f96:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
90010f9a:	2b02      	cmp	r3, #2
90010f9c:	d007      	beq.n	90010fae <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90010f9e:	6840      	ldr	r0, [r0, #4]
90010fa0:	f000 f91a 	bl	900111d8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
90010fa4:	b118      	cbz	r0, 90010fae <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90010fa6:	6862      	ldr	r2, [r4, #4]
90010fa8:	7a53      	ldrb	r3, [r2, #9]
90010faa:	2b00      	cmp	r3, #0
90010fac:	d0fc      	beq.n	90010fa8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
90010fae:	f7f0 fd1d 	bl	900019ec <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90010fb2:	4620      	mov	r0, r4
90010fb4:	2100      	movs	r1, #0
90010fb6:	f7ff ffd7 	bl	90010f68 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90010fba:	4620      	mov	r0, r4
90010fbc:	f7ff fd74 	bl	90010aa8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010fc0:	bd10      	pop	{r4, pc}
90010fc2:	bf00      	nop
90010fc4:	240235aa 	.word	0x240235aa

90010fc8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
90010fc8:	b570      	push	{r4, r5, r6, lr}
90010fca:	4604      	mov	r4, r0
90010fcc:	6803      	ldr	r3, [r0, #0]
90010fce:	b919      	cbnz	r1, 90010fd8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
90010fd0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90010fd2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010fd6:	4718      	bx	r3
90010fd8:	2200      	movs	r2, #0
90010fda:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
90010fde:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
90010fe2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90010fe4:	4798      	blx	r3
90010fe6:	6863      	ldr	r3, [r4, #4]
90010fe8:	2101      	movs	r1, #1
90010fea:	4605      	mov	r5, r0
90010fec:	4620      	mov	r0, r4
90010fee:	7299      	strb	r1, [r3, #10]
90010ff0:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
90010ff4:	f7ff ffb8 	bl	90010f68 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90010ff8:	4628      	mov	r0, r5
90010ffa:	bd70      	pop	{r4, r5, r6, pc}

90010ffc <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
90010ffc:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
90011000:	1a13      	subs	r3, r2, r0
90011002:	4258      	negs	r0, r3
90011004:	4158      	adcs	r0, r3
90011006:	4770      	bx	lr

90011008 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
90011008:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
9001100c:	1a9b      	subs	r3, r3, r2
9001100e:	2b00      	cmp	r3, #0
90011010:	bfdc      	itt	le
90011012:	6882      	ldrle	r2, [r0, #8]
90011014:	189b      	addle	r3, r3, r2
90011016:	2b01      	cmp	r3, #1
90011018:	bfcc      	ite	gt
9001101a:	2000      	movgt	r0, #0
9001101c:	2001      	movle	r0, #1
9001101e:	4770      	bx	lr

90011020 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
90011020:	6902      	ldr	r2, [r0, #16]
90011022:	6843      	ldr	r3, [r0, #4]
90011024:	2024      	movs	r0, #36	; 0x24
90011026:	fb00 3002 	mla	r0, r0, r2, r3
9001102a:	4770      	bx	lr

9001102c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
9001102c:	6803      	ldr	r3, [r0, #0]
9001102e:	691b      	ldr	r3, [r3, #16]
90011030:	4718      	bx	r3

90011032 <_ZN8touchgfx13DMA_Interface7executeEv>:
90011032:	2301      	movs	r3, #1
90011034:	b570      	push	{r4, r5, r6, lr}
90011036:	7203      	strb	r3, [r0, #8]
90011038:	4604      	mov	r4, r0
9001103a:	6840      	ldr	r0, [r0, #4]
9001103c:	6803      	ldr	r3, [r0, #0]
9001103e:	699b      	ldr	r3, [r3, #24]
90011040:	4798      	blx	r3
90011042:	6803      	ldr	r3, [r0, #0]
90011044:	4605      	mov	r5, r0
90011046:	2b40      	cmp	r3, #64	; 0x40
90011048:	d00c      	beq.n	90011064 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
9001104a:	d810      	bhi.n	9001106e <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
9001104c:	2b04      	cmp	r3, #4
9001104e:	d01d      	beq.n	9001108c <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
90011050:	d804      	bhi.n	9001105c <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
90011052:	2b01      	cmp	r3, #1
90011054:	d006      	beq.n	90011064 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90011056:	2b02      	cmp	r3, #2
90011058:	d02c      	beq.n	900110b4 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
9001105a:	bd70      	pop	{r4, r5, r6, pc}
9001105c:	2b08      	cmp	r3, #8
9001105e:	d01d      	beq.n	9001109c <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
90011060:	2b20      	cmp	r3, #32
90011062:	d1fa      	bne.n	9001105a <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
90011064:	6823      	ldr	r3, [r4, #0]
90011066:	4620      	mov	r0, r4
90011068:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9001106a:	4798      	blx	r3
9001106c:	e013      	b.n	90011096 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
9001106e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
90011072:	d0f7      	beq.n	90011064 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90011074:	d804      	bhi.n	90011080 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
90011076:	2b80      	cmp	r3, #128	; 0x80
90011078:	d0f4      	beq.n	90011064 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
9001107a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
9001107e:	e7f0      	b.n	90011062 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
90011080:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
90011084:	d0ee      	beq.n	90011064 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90011086:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
9001108a:	e7e5      	b.n	90011058 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
9001108c:	6823      	ldr	r3, [r4, #0]
9001108e:	7f01      	ldrb	r1, [r0, #28]
90011090:	4620      	mov	r0, r4
90011092:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90011094:	4798      	blx	r3
90011096:	6823      	ldr	r3, [r4, #0]
90011098:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001109a:	e006      	b.n	900110aa <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
9001109c:	6823      	ldr	r3, [r4, #0]
9001109e:	7f01      	ldrb	r1, [r0, #28]
900110a0:	4620      	mov	r0, r4
900110a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900110a4:	4798      	blx	r3
900110a6:	6823      	ldr	r3, [r4, #0]
900110a8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900110aa:	4629      	mov	r1, r5
900110ac:	4620      	mov	r0, r4
900110ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900110b2:	4718      	bx	r3
900110b4:	6823      	ldr	r3, [r4, #0]
900110b6:	4620      	mov	r0, r4
900110b8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900110ba:	4798      	blx	r3
900110bc:	e7f3      	b.n	900110a6 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

900110be <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
900110be:	4770      	bx	lr

900110c0 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
900110c0:	4770      	bx	lr

900110c2 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
900110c2:	4770      	bx	lr

900110c4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
900110c4:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
900110c8:	b510      	push	{r4, lr}
900110ca:	1ad2      	subs	r2, r2, r3
900110cc:	2a00      	cmp	r2, #0
900110ce:	bfdc      	itt	le
900110d0:	6884      	ldrle	r4, [r0, #8]
900110d2:	1912      	addle	r2, r2, r4
900110d4:	2a01      	cmp	r2, #1
900110d6:	dd16      	ble.n	90011106 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
900110d8:	6842      	ldr	r2, [r0, #4]
900110da:	2424      	movs	r4, #36	; 0x24
900110dc:	fb04 2303 	mla	r3, r4, r3, r2
900110e0:	f101 0220 	add.w	r2, r1, #32
900110e4:	f851 4b04 	ldr.w	r4, [r1], #4
900110e8:	4291      	cmp	r1, r2
900110ea:	f843 4b04 	str.w	r4, [r3], #4
900110ee:	d1f9      	bne.n	900110e4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
900110f0:	780a      	ldrb	r2, [r1, #0]
900110f2:	701a      	strb	r2, [r3, #0]
900110f4:	68c3      	ldr	r3, [r0, #12]
900110f6:	6882      	ldr	r2, [r0, #8]
900110f8:	f3bf 8f5b 	dmb	ish
900110fc:	3301      	adds	r3, #1
900110fe:	429a      	cmp	r2, r3
90011100:	bfd8      	it	le
90011102:	1a9b      	suble	r3, r3, r2
90011104:	60c3      	str	r3, [r0, #12]
90011106:	bd10      	pop	{r4, pc}

90011108 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
90011108:	6903      	ldr	r3, [r0, #16]
9001110a:	6882      	ldr	r2, [r0, #8]
9001110c:	f3bf 8f5b 	dmb	ish
90011110:	3301      	adds	r3, #1
90011112:	429a      	cmp	r2, r3
90011114:	bfd8      	it	le
90011116:	1a9b      	suble	r3, r3, r2
90011118:	6103      	str	r3, [r0, #16]
9001111a:	4770      	bx	lr

9001111c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
9001111c:	b570      	push	{r4, r5, r6, lr}
9001111e:	4604      	mov	r4, r0
90011120:	460e      	mov	r6, r1
90011122:	6860      	ldr	r0, [r4, #4]
90011124:	6803      	ldr	r3, [r0, #0]
90011126:	685b      	ldr	r3, [r3, #4]
90011128:	4798      	blx	r3
9001112a:	2800      	cmp	r0, #0
9001112c:	d1f9      	bne.n	90011122 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
9001112e:	4d0d      	ldr	r5, [pc, #52]	; (90011164 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
90011130:	6828      	ldr	r0, [r5, #0]
90011132:	6803      	ldr	r3, [r0, #0]
90011134:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90011136:	4798      	blx	r3
90011138:	f7f0 fc66 	bl	90001a08 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
9001113c:	6828      	ldr	r0, [r5, #0]
9001113e:	2101      	movs	r1, #1
90011140:	f7ff ff12 	bl	90010f68 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90011144:	6860      	ldr	r0, [r4, #4]
90011146:	4631      	mov	r1, r6
90011148:	6803      	ldr	r3, [r0, #0]
9001114a:	689b      	ldr	r3, [r3, #8]
9001114c:	4798      	blx	r3
9001114e:	6823      	ldr	r3, [r4, #0]
90011150:	4620      	mov	r0, r4
90011152:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011154:	4798      	blx	r3
90011156:	6828      	ldr	r0, [r5, #0]
90011158:	6803      	ldr	r3, [r0, #0]
9001115a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001115e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
90011160:	4718      	bx	r3
90011162:	bf00      	nop
90011164:	240235ac 	.word	0x240235ac

90011168 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
90011168:	b508      	push	{r3, lr}
9001116a:	f7f0 fc3f 	bl	900019ec <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
9001116e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
90011172:	f7f0 bc43 	b.w	900019fc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

90011176 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
90011176:	b510      	push	{r4, lr}
90011178:	4604      	mov	r4, r0
9001117a:	2114      	movs	r1, #20
9001117c:	f015 f871 	bl	90026262 <_ZdlPvj>
90011180:	4620      	mov	r0, r4
90011182:	bd10      	pop	{r4, pc}

90011184 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
90011184:	b570      	push	{r4, r5, r6, lr}
90011186:	4604      	mov	r4, r0
90011188:	6840      	ldr	r0, [r0, #4]
9001118a:	6803      	ldr	r3, [r0, #0]
9001118c:	681b      	ldr	r3, [r3, #0]
9001118e:	4798      	blx	r3
90011190:	4605      	mov	r5, r0
90011192:	b930      	cbnz	r0, 900111a2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90011194:	7a23      	ldrb	r3, [r4, #8]
90011196:	b123      	cbz	r3, 900111a2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90011198:	6860      	ldr	r0, [r4, #4]
9001119a:	6803      	ldr	r3, [r0, #0]
9001119c:	695b      	ldr	r3, [r3, #20]
9001119e:	4798      	blx	r3
900111a0:	7225      	strb	r5, [r4, #8]
900111a2:	6860      	ldr	r0, [r4, #4]
900111a4:	6803      	ldr	r3, [r0, #0]
900111a6:	681b      	ldr	r3, [r3, #0]
900111a8:	4798      	blx	r3
900111aa:	b928      	cbnz	r0, 900111b8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
900111ac:	6823      	ldr	r3, [r4, #0]
900111ae:	4620      	mov	r0, r4
900111b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900111b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900111b6:	4718      	bx	r3
900111b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900111bc:	f7f0 bc2c 	b.w	90001a18 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

900111c0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
900111c0:	b510      	push	{r4, lr}
900111c2:	6082      	str	r2, [r0, #8]
900111c4:	2200      	movs	r2, #0
900111c6:	4c03      	ldr	r4, [pc, #12]	; (900111d4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
900111c8:	e9c0 2203 	strd	r2, r2, [r0, #12]
900111cc:	e9c0 4100 	strd	r4, r1, [r0]
900111d0:	bd10      	pop	{r4, pc}
900111d2:	bf00      	nop
900111d4:	9002a2e8 	.word	0x9002a2e8

900111d8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
900111d8:	6840      	ldr	r0, [r0, #4]
900111da:	6803      	ldr	r3, [r0, #0]
900111dc:	681b      	ldr	r3, [r3, #0]
900111de:	4718      	bx	r3

900111e0 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
900111e0:	094a      	lsrs	r2, r1, #5
900111e2:	4b06      	ldr	r3, [pc, #24]	; (900111fc <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
900111e4:	60c1      	str	r1, [r0, #12]
900111e6:	ea03 2311 	and.w	r3, r3, r1, lsr #8
900111ea:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900111ee:	f3c1 01c4 	ubfx	r1, r1, #3, #5
900111f2:	4313      	orrs	r3, r2
900111f4:	4319      	orrs	r1, r3
900111f6:	8201      	strh	r1, [r0, #16]
900111f8:	4770      	bx	lr
900111fa:	bf00      	nop
900111fc:	fffff800 	.word	0xfffff800

90011200 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90011200:	f1a0 0008 	sub.w	r0, r0, #8
90011204:	e7ec      	b.n	900111e0 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
90011206:	bf00      	nop

90011208 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
90011208:	b508      	push	{r3, lr}
9001120a:	4b05      	ldr	r3, [pc, #20]	; (90011220 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
9001120c:	6818      	ldr	r0, [r3, #0]
9001120e:	6803      	ldr	r3, [r0, #0]
90011210:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
90011214:	4798      	blx	r3
90011216:	1e43      	subs	r3, r0, #1
90011218:	4258      	negs	r0, r3
9001121a:	4158      	adcs	r0, r3
9001121c:	bd08      	pop	{r3, pc}
9001121e:	bf00      	nop
90011220:	240235ac 	.word	0x240235ac

90011224 <_ZN8touchgfx13PainterRGB565D1Ev>:
90011224:	4770      	bx	lr

90011226 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
90011226:	3808      	subs	r0, #8
90011228:	4770      	bx	lr

9001122a <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
9001122a:	b430      	push	{r4, r5}
9001122c:	eb01 0442 	add.w	r4, r1, r2, lsl #1
90011230:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
90011234:	8a02      	ldrh	r2, [r0, #16]
90011236:	f89d 3010 	ldrb.w	r3, [sp, #16]
9001123a:	4629      	mov	r1, r5
9001123c:	9202      	str	r2, [sp, #8]
9001123e:	68c2      	ldr	r2, [r0, #12]
90011240:	4620      	mov	r0, r4
90011242:	bc30      	pop	{r4, r5}
90011244:	f7f0 bec0 	b.w	90001fc8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

90011248 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
90011248:	f7f0 beb4 	b.w	90001fb4 <_ZN8touchgfx5paint8tearDownEv>

9001124c <_ZN8touchgfx13PainterRGB565D0Ev>:
9001124c:	b510      	push	{r4, lr}
9001124e:	4604      	mov	r4, r0
90011250:	2114      	movs	r1, #20
90011252:	f015 f806 	bl	90026262 <_ZdlPvj>
90011256:	4620      	mov	r0, r4
90011258:	bd10      	pop	{r4, pc}

9001125a <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
9001125a:	f1a0 0008 	sub.w	r0, r0, #8
9001125e:	e7f5      	b.n	9001124c <_ZN8touchgfx13PainterRGB565D0Ev>

90011260 <_ZNK8touchgfx13AbstractShape14getMinimalRectEv>:
90011260:	f101 0344 	add.w	r3, r1, #68	; 0x44
90011264:	4602      	mov	r2, r0
90011266:	cb03      	ldmia	r3!, {r0, r1}
90011268:	6010      	str	r0, [r2, #0]
9001126a:	4610      	mov	r0, r2
9001126c:	6051      	str	r1, [r2, #4]
9001126e:	4770      	bx	lr

90011270 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
90011270:	b507      	push	{r0, r1, r2, lr}
90011272:	f44f 4200 	mov.w	r2, #32768	; 0x8000
90011276:	ab01      	add	r3, sp, #4
90011278:	6809      	ldr	r1, [r1, #0]
9001127a:	6800      	ldr	r0, [r0, #0]
9001127c:	f005 f8ea 	bl	90016454 <_ZN8touchgfx6muldivElllRl>
90011280:	b003      	add	sp, #12
90011282:	f85d fb04 	ldr.w	pc, [sp], #4
	...

90011288 <_ZN8touchgfx7CWRUtil4sineEi>:
90011288:	f44f 73b4 	mov.w	r3, #360	; 0x168
9001128c:	fb90 f2f3 	sdiv	r2, r0, r3
90011290:	fb02 0013 	mls	r0, r2, r3, r0
90011294:	2800      	cmp	r0, #0
90011296:	bfb8      	it	lt
90011298:	18c0      	addlt	r0, r0, r3
9001129a:	4b0a      	ldr	r3, [pc, #40]	; (900112c4 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
9001129c:	285a      	cmp	r0, #90	; 0x5a
9001129e:	dc02      	bgt.n	900112a6 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
900112a0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
900112a4:	4770      	bx	lr
900112a6:	28b4      	cmp	r0, #180	; 0xb4
900112a8:	dc02      	bgt.n	900112b0 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
900112aa:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
900112ae:	e7f7      	b.n	900112a0 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
900112b0:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
900112b4:	bfd4      	ite	le
900112b6:	38b4      	suble	r0, #180	; 0xb4
900112b8:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
900112bc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
900112c0:	4240      	negs	r0, r0
900112c2:	4770      	bx	lr
900112c4:	9002a33c 	.word	0x9002a33c

900112c8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
900112c8:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
900112cc:	fb90 f2f3 	sdiv	r2, r0, r3
900112d0:	b573      	push	{r0, r1, r4, r5, r6, lr}
900112d2:	fb02 0013 	mls	r0, r2, r3, r0
900112d6:	2800      	cmp	r0, #0
900112d8:	bfb8      	it	lt
900112da:	18c0      	addlt	r0, r0, r3
900112dc:	1144      	asrs	r4, r0, #5
900112de:	f000 061f 	and.w	r6, r0, #31
900112e2:	4620      	mov	r0, r4
900112e4:	f7ff ffd0 	bl	90011288 <_ZN8touchgfx7CWRUtil4sineEi>
900112e8:	4605      	mov	r5, r0
900112ea:	b90e      	cbnz	r6, 900112f0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
900112ec:	b002      	add	sp, #8
900112ee:	bd70      	pop	{r4, r5, r6, pc}
900112f0:	1c60      	adds	r0, r4, #1
900112f2:	f7ff ffc9 	bl	90011288 <_ZN8touchgfx7CWRUtil4sineEi>
900112f6:	ab01      	add	r3, sp, #4
900112f8:	2220      	movs	r2, #32
900112fa:	4631      	mov	r1, r6
900112fc:	1b40      	subs	r0, r0, r5
900112fe:	f005 f8a9 	bl	90016454 <_ZN8touchgfx6muldivElllRl>
90011302:	4428      	add	r0, r5
90011304:	e7f2      	b.n	900112ec <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

90011306 <_ZN8touchgfx7CWRUtil5mulQ5ENS0_2Q5ENS0_3Q10E>:
90011306:	b507      	push	{r0, r1, r2, lr}
90011308:	f44f 6280 	mov.w	r2, #1024	; 0x400
9001130c:	ab01      	add	r3, sp, #4
9001130e:	0140      	lsls	r0, r0, #5
90011310:	f005 f8a0 	bl	90016454 <_ZN8touchgfx6muldivElllRl>
90011314:	2320      	movs	r3, #32
90011316:	fb90 f0f3 	sdiv	r0, r0, r3
9001131a:	b003      	add	sp, #12
9001131c:	f85d fb04 	ldr.w	pc, [sp], #4

90011320 <_ZN8touchgfx13AbstractShapeC1Ev>:
90011320:	b510      	push	{r4, lr}
90011322:	4604      	mov	r4, r0
90011324:	f000 f9a0 	bl	90011668 <_ZN8touchgfx12CanvasWidgetC1Ev>
90011328:	4b08      	ldr	r3, [pc, #32]	; (9001134c <_ZN8touchgfx13AbstractShapeC1Ev+0x2c>)
9001132a:	f44f 6280 	mov.w	r2, #1024	; 0x400
9001132e:	4620      	mov	r0, r4
90011330:	6023      	str	r3, [r4, #0]
90011332:	2300      	movs	r3, #0
90011334:	e9c4 220f 	strd	r2, r2, [r4, #60]	; 0x3c
90011338:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
9001133c:	63a3      	str	r3, [r4, #56]	; 0x38
9001133e:	60a3      	str	r3, [r4, #8]
90011340:	e9c4 330c 	strd	r3, r3, [r4, #48]	; 0x30
90011344:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
90011348:	bd10      	pop	{r4, pc}
9001134a:	bf00      	nop
9001134c:	9002a3fc 	.word	0x9002a3fc

90011350 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv>:
90011350:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011354:	6803      	ldr	r3, [r0, #0]
90011356:	b087      	sub	sp, #28
90011358:	4604      	mov	r4, r0
9001135a:	2500      	movs	r5, #0
9001135c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
9001135e:	4798      	blx	r3
90011360:	9000      	str	r0, [sp, #0]
90011362:	6ba0      	ldr	r0, [r4, #56]	; 0x38
90011364:	462e      	mov	r6, r5
90011366:	46a8      	mov	r8, r5
90011368:	462f      	mov	r7, r5
9001136a:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
9001136e:	46a9      	mov	r9, r5
90011370:	f7ff ffaa 	bl	900112c8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90011374:	9002      	str	r0, [sp, #8]
90011376:	6ba0      	ldr	r0, [r4, #56]	; 0x38
90011378:	f7ff ffa6 	bl	900112c8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9001137c:	9003      	str	r0, [sp, #12]
9001137e:	9b00      	ldr	r3, [sp, #0]
90011380:	429d      	cmp	r5, r3
90011382:	da6d      	bge.n	90011460 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0x110>
90011384:	6823      	ldr	r3, [r4, #0]
90011386:	4629      	mov	r1, r5
90011388:	4620      	mov	r0, r4
9001138a:	6f9b      	ldr	r3, [r3, #120]	; 0x78
9001138c:	4798      	blx	r3
9001138e:	6823      	ldr	r3, [r4, #0]
90011390:	4682      	mov	sl, r0
90011392:	4629      	mov	r1, r5
90011394:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90011396:	4620      	mov	r0, r4
90011398:	4798      	blx	r3
9001139a:	6be1      	ldr	r1, [r4, #60]	; 0x3c
9001139c:	4683      	mov	fp, r0
9001139e:	4650      	mov	r0, sl
900113a0:	f7ff ffb1 	bl	90011306 <_ZN8touchgfx7CWRUtil5mulQ5ENS0_2Q5ENS0_3Q10E>
900113a4:	a902      	add	r1, sp, #8
900113a6:	9004      	str	r0, [sp, #16]
900113a8:	a804      	add	r0, sp, #16
900113aa:	f7ff ff61 	bl	90011270 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900113ae:	6b22      	ldr	r2, [r4, #48]	; 0x30
900113b0:	6c21      	ldr	r1, [r4, #64]	; 0x40
900113b2:	4402      	add	r2, r0
900113b4:	4658      	mov	r0, fp
900113b6:	9201      	str	r2, [sp, #4]
900113b8:	f7ff ffa5 	bl	90011306 <_ZN8touchgfx7CWRUtil5mulQ5ENS0_2Q5ENS0_3Q10E>
900113bc:	ab06      	add	r3, sp, #24
900113be:	a903      	add	r1, sp, #12
900113c0:	f843 0d04 	str.w	r0, [r3, #-4]!
900113c4:	4618      	mov	r0, r3
900113c6:	f7ff ff53 	bl	90011270 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900113ca:	9a01      	ldr	r2, [sp, #4]
900113cc:	1a12      	subs	r2, r2, r0
900113ce:	b125      	cbz	r5, 900113da <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0x8a>
900113d0:	2320      	movs	r3, #32
900113d2:	fb92 f3f3 	sdiv	r3, r2, r3
900113d6:	429f      	cmp	r7, r3
900113d8:	da03      	bge.n	900113e2 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0x92>
900113da:	2720      	movs	r7, #32
900113dc:	fb92 f7f7 	sdiv	r7, r2, r7
900113e0:	b125      	cbz	r5, 900113ec <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0x9c>
900113e2:	2320      	movs	r3, #32
900113e4:	fb92 f3f3 	sdiv	r3, r2, r3
900113e8:	4599      	cmp	r9, r3
900113ea:	dd03      	ble.n	900113f4 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0xa4>
900113ec:	f04f 0920 	mov.w	r9, #32
900113f0:	fb92 f9f9 	sdiv	r9, r2, r9
900113f4:	6c21      	ldr	r1, [r4, #64]	; 0x40
900113f6:	4658      	mov	r0, fp
900113f8:	9201      	str	r2, [sp, #4]
900113fa:	f7ff ff84 	bl	90011306 <_ZN8touchgfx7CWRUtil5mulQ5ENS0_2Q5ENS0_3Q10E>
900113fe:	a902      	add	r1, sp, #8
90011400:	9004      	str	r0, [sp, #16]
90011402:	a804      	add	r0, sp, #16
90011404:	f7ff ff34 	bl	90011270 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90011408:	6b63      	ldr	r3, [r4, #52]	; 0x34
9001140a:	6be1      	ldr	r1, [r4, #60]	; 0x3c
9001140c:	eb00 0b03 	add.w	fp, r0, r3
90011410:	4650      	mov	r0, sl
90011412:	f7ff ff78 	bl	90011306 <_ZN8touchgfx7CWRUtil5mulQ5ENS0_2Q5ENS0_3Q10E>
90011416:	ab06      	add	r3, sp, #24
90011418:	a903      	add	r1, sp, #12
9001141a:	f843 0d04 	str.w	r0, [r3, #-4]!
9001141e:	4618      	mov	r0, r3
90011420:	f7ff ff26 	bl	90011270 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90011424:	9a01      	ldr	r2, [sp, #4]
90011426:	eb00 030b 	add.w	r3, r0, fp
9001142a:	b125      	cbz	r5, 90011436 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0xe6>
9001142c:	2120      	movs	r1, #32
9001142e:	fb93 f1f1 	sdiv	r1, r3, r1
90011432:	428e      	cmp	r6, r1
90011434:	da03      	bge.n	9001143e <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0xee>
90011436:	2620      	movs	r6, #32
90011438:	fb93 f6f6 	sdiv	r6, r3, r6
9001143c:	b125      	cbz	r5, 90011448 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0xf8>
9001143e:	2120      	movs	r1, #32
90011440:	fb93 f1f1 	sdiv	r1, r3, r1
90011444:	4588      	cmp	r8, r1
90011446:	dd03      	ble.n	90011450 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0x100>
90011448:	f04f 0820 	mov.w	r8, #32
9001144c:	fb93 f8f8 	sdiv	r8, r3, r8
90011450:	6821      	ldr	r1, [r4, #0]
90011452:	4620      	mov	r0, r4
90011454:	f8d1 a080 	ldr.w	sl, [r1, #128]	; 0x80
90011458:	4629      	mov	r1, r5
9001145a:	47d0      	blx	sl
9001145c:	3501      	adds	r5, #1
9001145e:	e78e      	b.n	9001137e <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0x2e>
90011460:	3701      	adds	r7, #1
90011462:	3601      	adds	r6, #1
90011464:	f8a4 9044 	strh.w	r9, [r4, #68]	; 0x44
90011468:	f8a4 8046 	strh.w	r8, [r4, #70]	; 0x46
9001146c:	eba7 0909 	sub.w	r9, r7, r9
90011470:	eba6 0808 	sub.w	r8, r6, r8
90011474:	f8a4 9048 	strh.w	r9, [r4, #72]	; 0x48
90011478:	f8a4 804a 	strh.w	r8, [r4, #74]	; 0x4a
9001147c:	b007      	add	sp, #28
9001147e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

90011484 <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE>:
90011484:	b5f0      	push	{r4, r5, r6, r7, lr}
90011486:	6803      	ldr	r3, [r0, #0]
90011488:	b0a3      	sub	sp, #140	; 0x8c
9001148a:	4604      	mov	r4, r0
9001148c:	460f      	mov	r7, r1
9001148e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
90011490:	4798      	blx	r3
90011492:	4606      	mov	r6, r0
90011494:	2800      	cmp	r0, #0
90011496:	d04f      	beq.n	90011538 <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0xb4>
90011498:	4621      	mov	r1, r4
9001149a:	a803      	add	r0, sp, #12
9001149c:	6aa5      	ldr	r5, [r4, #40]	; 0x28
9001149e:	f004 fea7 	bl	900161f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900114a2:	6823      	ldr	r3, [r4, #0]
900114a4:	4620      	mov	r0, r4
900114a6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
900114a8:	4798      	blx	r3
900114aa:	aa03      	add	r2, sp, #12
900114ac:	4629      	mov	r1, r5
900114ae:	9000      	str	r0, [sp, #0]
900114b0:	463b      	mov	r3, r7
900114b2:	a805      	add	r0, sp, #20
900114b4:	f014 fbfe 	bl	90025cb4 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
900114b8:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
900114bc:	2100      	movs	r1, #0
900114be:	4620      	mov	r0, r4
900114c0:	f88d 3058 	strb.w	r3, [sp, #88]	; 0x58
900114c4:	6823      	ldr	r3, [r4, #0]
900114c6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
900114ca:	4798      	blx	r3
900114cc:	6823      	ldr	r3, [r4, #0]
900114ce:	4605      	mov	r5, r0
900114d0:	2100      	movs	r1, #0
900114d2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
900114d6:	4620      	mov	r0, r4
900114d8:	4798      	blx	r3
900114da:	4629      	mov	r1, r5
900114dc:	2501      	movs	r5, #1
900114de:	4602      	mov	r2, r0
900114e0:	a805      	add	r0, sp, #20
900114e2:	f014 fd33 	bl	90025f4c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
900114e6:	42b5      	cmp	r5, r6
900114e8:	da17      	bge.n	9001151a <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0x96>
900114ea:	6823      	ldr	r3, [r4, #0]
900114ec:	4629      	mov	r1, r5
900114ee:	4620      	mov	r0, r4
900114f0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
900114f4:	4798      	blx	r3
900114f6:	6823      	ldr	r3, [r4, #0]
900114f8:	4607      	mov	r7, r0
900114fa:	4629      	mov	r1, r5
900114fc:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
90011500:	4620      	mov	r0, r4
90011502:	4798      	blx	r3
90011504:	4639      	mov	r1, r7
90011506:	4602      	mov	r2, r0
90011508:	a805      	add	r0, sp, #20
9001150a:	f014 fd6c 	bl	90025fe6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9001150e:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
90011512:	429a      	cmp	r2, r3
90011514:	d30e      	bcc.n	90011534 <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0xb0>
90011516:	3501      	adds	r5, #1
90011518:	e7e5      	b.n	900114e6 <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0x62>
9001151a:	21ff      	movs	r1, #255	; 0xff
9001151c:	a805      	add	r0, sp, #20
9001151e:	f014 fc5d 	bl	90025ddc <_ZN8touchgfx6Canvas6renderEh>
90011522:	4604      	mov	r4, r0
90011524:	4b05      	ldr	r3, [pc, #20]	; (9001153c <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0xb8>)
90011526:	a80a      	add	r0, sp, #40	; 0x28
90011528:	9305      	str	r3, [sp, #20]
9001152a:	f001 f9af 	bl	9001288c <_ZN8touchgfx7OutlineD1Ev>
9001152e:	4620      	mov	r0, r4
90011530:	b023      	add	sp, #140	; 0x8c
90011532:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011534:	2400      	movs	r4, #0
90011536:	e7f5      	b.n	90011524 <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0xa0>
90011538:	2401      	movs	r4, #1
9001153a:	e7f8      	b.n	9001152e <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0xaa>
9001153c:	9002ac48 	.word	0x9002ac48

90011540 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
90011540:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90011542:	6803      	ldr	r3, [r0, #0]
90011544:	460d      	mov	r5, r1
90011546:	4604      	mov	r4, r0
90011548:	4601      	mov	r1, r0
9001154a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
9001154c:	a802      	add	r0, sp, #8
9001154e:	4798      	blx	r3
90011550:	6828      	ldr	r0, [r5, #0]
90011552:	6869      	ldr	r1, [r5, #4]
90011554:	466b      	mov	r3, sp
90011556:	c303      	stmia	r3!, {r0, r1}
90011558:	4668      	mov	r0, sp
9001155a:	4619      	mov	r1, r3
9001155c:	f7fe fe14 	bl	90010188 <_ZN8touchgfx4RectaNERKS0_>
90011560:	6aa0      	ldr	r0, [r4, #40]	; 0x28
90011562:	b188      	cbz	r0, 90011588 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90011564:	6803      	ldr	r3, [r0, #0]
90011566:	1d21      	adds	r1, r4, #4
90011568:	68db      	ldr	r3, [r3, #12]
9001156a:	4798      	blx	r3
9001156c:	b160      	cbz	r0, 90011588 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001156e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90011572:	2b00      	cmp	r3, #0
90011574:	dd08      	ble.n	90011588 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90011576:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
9001157a:	2d00      	cmp	r5, #0
9001157c:	dd04      	ble.n	90011588 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001157e:	4a2b      	ldr	r2, [pc, #172]	; (9001162c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
90011580:	7812      	ldrb	r2, [r2, #0]
90011582:	b11a      	cbz	r2, 9001158c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
90011584:	2a01      	cmp	r2, #1
90011586:	d029      	beq.n	900115dc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
90011588:	b004      	add	sp, #16
9001158a:	bd70      	pop	{r4, r5, r6, pc}
9001158c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90011590:	441d      	add	r5, r3
90011592:	b2ad      	uxth	r5, r5
90011594:	b22e      	sxth	r6, r5
90011596:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
9001159a:	42b3      	cmp	r3, r6
9001159c:	daf4      	bge.n	90011588 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001159e:	6823      	ldr	r3, [r4, #0]
900115a0:	4669      	mov	r1, sp
900115a2:	4620      	mov	r0, r4
900115a4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
900115a6:	4798      	blx	r3
900115a8:	b940      	cbnz	r0, 900115bc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
900115aa:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
900115ae:	2b01      	cmp	r3, #1
900115b0:	d004      	beq.n	900115bc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
900115b2:	3301      	adds	r3, #1
900115b4:	105b      	asrs	r3, r3, #1
900115b6:	f8ad 3006 	strh.w	r3, [sp, #6]
900115ba:	e7f0      	b.n	9001159e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
900115bc:	f8bd 2006 	ldrh.w	r2, [sp, #6]
900115c0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900115c4:	4413      	add	r3, r2
900115c6:	b29b      	uxth	r3, r3
900115c8:	441a      	add	r2, r3
900115ca:	f8ad 3002 	strh.w	r3, [sp, #2]
900115ce:	b212      	sxth	r2, r2
900115d0:	4296      	cmp	r6, r2
900115d2:	dae0      	bge.n	90011596 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
900115d4:	1aeb      	subs	r3, r5, r3
900115d6:	f8ad 3006 	strh.w	r3, [sp, #6]
900115da:	e7dc      	b.n	90011596 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
900115dc:	f8bd 5000 	ldrh.w	r5, [sp]
900115e0:	441d      	add	r5, r3
900115e2:	b2ad      	uxth	r5, r5
900115e4:	b22e      	sxth	r6, r5
900115e6:	f9bd 3000 	ldrsh.w	r3, [sp]
900115ea:	42b3      	cmp	r3, r6
900115ec:	dacc      	bge.n	90011588 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900115ee:	6823      	ldr	r3, [r4, #0]
900115f0:	4669      	mov	r1, sp
900115f2:	4620      	mov	r0, r4
900115f4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
900115f6:	4798      	blx	r3
900115f8:	b940      	cbnz	r0, 9001160c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
900115fa:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
900115fe:	2b01      	cmp	r3, #1
90011600:	d004      	beq.n	9001160c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90011602:	3301      	adds	r3, #1
90011604:	105b      	asrs	r3, r3, #1
90011606:	f8ad 3004 	strh.w	r3, [sp, #4]
9001160a:	e7f0      	b.n	900115ee <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
9001160c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
90011610:	f8bd 3000 	ldrh.w	r3, [sp]
90011614:	4413      	add	r3, r2
90011616:	b29b      	uxth	r3, r3
90011618:	441a      	add	r2, r3
9001161a:	f8ad 3000 	strh.w	r3, [sp]
9001161e:	b212      	sxth	r2, r2
90011620:	4296      	cmp	r6, r2
90011622:	dae0      	bge.n	900115e6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90011624:	1aeb      	subs	r3, r5, r3
90011626:	f8ad 3004 	strh.w	r3, [sp, #4]
9001162a:	e7dc      	b.n	900115e6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
9001162c:	240235a4 	.word	0x240235a4

90011630 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
90011630:	b51f      	push	{r0, r1, r2, r3, r4, lr}
90011632:	6803      	ldr	r3, [r0, #0]
90011634:	4604      	mov	r4, r0
90011636:	4601      	mov	r1, r0
90011638:	4668      	mov	r0, sp
9001163a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
9001163c:	4798      	blx	r3
9001163e:	2100      	movs	r1, #0
90011640:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90011644:	4668      	mov	r0, sp
90011646:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
9001164a:	9102      	str	r1, [sp, #8]
9001164c:	a902      	add	r1, sp, #8
9001164e:	f8ad 200c 	strh.w	r2, [sp, #12]
90011652:	f8ad 300e 	strh.w	r3, [sp, #14]
90011656:	f7fe fd97 	bl	90010188 <_ZN8touchgfx4RectaNERKS0_>
9001165a:	6823      	ldr	r3, [r4, #0]
9001165c:	4669      	mov	r1, sp
9001165e:	4620      	mov	r0, r4
90011660:	691b      	ldr	r3, [r3, #16]
90011662:	4798      	blx	r3
90011664:	b004      	add	sp, #16
90011666:	bd10      	pop	{r4, pc}

90011668 <_ZN8touchgfx12CanvasWidgetC1Ev>:
90011668:	2101      	movs	r1, #1
9001166a:	2200      	movs	r2, #0
9001166c:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
90011670:	490a      	ldr	r1, [pc, #40]	; (9001169c <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
90011672:	8082      	strh	r2, [r0, #4]
90011674:	6001      	str	r1, [r0, #0]
90011676:	21ff      	movs	r1, #255	; 0xff
90011678:	80c2      	strh	r2, [r0, #6]
9001167a:	8102      	strh	r2, [r0, #8]
9001167c:	8142      	strh	r2, [r0, #10]
9001167e:	8182      	strh	r2, [r0, #12]
90011680:	81c2      	strh	r2, [r0, #14]
90011682:	8202      	strh	r2, [r0, #16]
90011684:	8242      	strh	r2, [r0, #18]
90011686:	61c2      	str	r2, [r0, #28]
90011688:	8402      	strh	r2, [r0, #32]
9001168a:	8442      	strh	r2, [r0, #34]	; 0x22
9001168c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
90011690:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
90011694:	6282      	str	r2, [r0, #40]	; 0x28
90011696:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001169a:	4770      	bx	lr
9001169c:	9002a490 	.word	0x9002a490

900116a0 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
900116a0:	b508      	push	{r3, lr}
900116a2:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
900116a6:	b10b      	cbz	r3, 900116ac <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
900116a8:	f7f0 fe9a 	bl	900023e0 <_ZNK8touchgfx8Drawable17invalidateContentEv>
900116ac:	bd08      	pop	{r3, pc}

900116ae <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
900116ae:	6803      	ldr	r3, [r0, #0]
900116b0:	f64f 71fe 	movw	r1, #65534	; 0xfffe
900116b4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
900116b6:	4718      	bx	r3

900116b8 <_ZN8touchgfx14SnapshotWidgetD1Ev>:
900116b8:	4770      	bx	lr

900116ba <_ZN8touchgfx14SnapshotWidgetD0Ev>:
900116ba:	b510      	push	{r4, lr}
900116bc:	4604      	mov	r4, r0
900116be:	212c      	movs	r1, #44	; 0x2c
900116c0:	f014 fdcf 	bl	90026262 <_ZdlPvj>
900116c4:	4620      	mov	r0, r4
900116c6:	bd10      	pop	{r4, pc}

900116c8 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
900116c8:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
900116cc:	2bff      	cmp	r3, #255	; 0xff
900116ce:	b510      	push	{r4, lr}
900116d0:	d104      	bne.n	900116dc <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
900116d2:	8cca      	ldrh	r2, [r1, #38]	; 0x26
900116d4:	f64f 73ff 	movw	r3, #65535	; 0xffff
900116d8:	429a      	cmp	r2, r3
900116da:	d105      	bne.n	900116e8 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
900116dc:	2300      	movs	r3, #0
900116de:	8003      	strh	r3, [r0, #0]
900116e0:	8043      	strh	r3, [r0, #2]
900116e2:	8083      	strh	r3, [r0, #4]
900116e4:	80c3      	strh	r3, [r0, #6]
900116e6:	bd10      	pop	{r4, pc}
900116e8:	2300      	movs	r3, #0
900116ea:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
900116ee:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
900116f2:	8003      	strh	r3, [r0, #0]
900116f4:	8043      	strh	r3, [r0, #2]
900116f6:	8084      	strh	r4, [r0, #4]
900116f8:	80c2      	strh	r2, [r0, #6]
900116fa:	e7f4      	b.n	900116e6 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

900116fc <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
900116fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011700:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
90011704:	b087      	sub	sp, #28
90011706:	4604      	mov	r4, r0
90011708:	4689      	mov	r9, r1
9001170a:	b363      	cbz	r3, 90011766 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
9001170c:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
9001170e:	f64f 73ff 	movw	r3, #65535	; 0xffff
90011712:	429a      	cmp	r2, r3
90011714:	d027      	beq.n	90011766 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
90011716:	ad06      	add	r5, sp, #24
90011718:	2700      	movs	r7, #0
9001171a:	f825 2d0c 	strh.w	r2, [r5, #-12]!
9001171e:	4628      	mov	r0, r5
90011720:	f006 fd92 	bl	90018248 <_ZNK8touchgfx6Bitmap8getWidthEv>
90011724:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90011728:	a904      	add	r1, sp, #16
9001172a:	f8ad 0014 	strh.w	r0, [sp, #20]
9001172e:	f8ad 3016 	strh.w	r3, [sp, #22]
90011732:	4620      	mov	r0, r4
90011734:	6823      	ldr	r3, [r4, #0]
90011736:	9704      	str	r7, [sp, #16]
90011738:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001173a:	4798      	blx	r3
9001173c:	f7ff f808 	bl	90010750 <_ZN8touchgfx3HAL3lcdEv>
90011740:	6803      	ldr	r3, [r0, #0]
90011742:	4606      	mov	r6, r0
90011744:	4628      	mov	r0, r5
90011746:	f8d3 800c 	ldr.w	r8, [r3, #12]
9001174a:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
9001174c:	f8ad 300c 	strh.w	r3, [sp, #12]
90011750:	f006 fe66 	bl	90018420 <_ZNK8touchgfx6Bitmap7getDataEv>
90011754:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
90011758:	4601      	mov	r1, r0
9001175a:	9701      	str	r7, [sp, #4]
9001175c:	aa04      	add	r2, sp, #16
9001175e:	9300      	str	r3, [sp, #0]
90011760:	4630      	mov	r0, r6
90011762:	464b      	mov	r3, r9
90011764:	47c0      	blx	r8
90011766:	b007      	add	sp, #28
90011768:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

9001176c <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
9001176c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
9001176e:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90011772:	460d      	mov	r5, r1
90011774:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
90011778:	2100      	movs	r1, #0
9001177a:	f8ad 3006 	strh.w	r3, [sp, #6]
9001177e:	4604      	mov	r4, r0
90011780:	6803      	ldr	r3, [r0, #0]
90011782:	f8ad 2004 	strh.w	r2, [sp, #4]
90011786:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90011788:	9100      	str	r1, [sp, #0]
9001178a:	4669      	mov	r1, sp
9001178c:	4798      	blx	r3
9001178e:	4621      	mov	r1, r4
90011790:	a802      	add	r0, sp, #8
90011792:	f004 fd2d 	bl	900161f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90011796:	f7fe ffdb 	bl	90010750 <_ZN8touchgfx3HAL3lcdEv>
9001179a:	6803      	ldr	r3, [r0, #0]
9001179c:	aa02      	add	r2, sp, #8
9001179e:	4669      	mov	r1, sp
900117a0:	695e      	ldr	r6, [r3, #20]
900117a2:	462b      	mov	r3, r5
900117a4:	47b0      	blx	r6
900117a6:	f64f 73ff 	movw	r3, #65535	; 0xffff
900117aa:	2800      	cmp	r0, #0
900117ac:	bf08      	it	eq
900117ae:	461d      	moveq	r5, r3
900117b0:	84e5      	strh	r5, [r4, #38]	; 0x26
900117b2:	b004      	add	sp, #16
900117b4:	bd70      	pop	{r4, r5, r6, pc}
	...

900117b8 <_ZN8touchgfx14SnapshotWidgetC1Ev>:
900117b8:	2200      	movs	r2, #0
900117ba:	8082      	strh	r2, [r0, #4]
900117bc:	80c2      	strh	r2, [r0, #6]
900117be:	8102      	strh	r2, [r0, #8]
900117c0:	8142      	strh	r2, [r0, #10]
900117c2:	8182      	strh	r2, [r0, #12]
900117c4:	81c2      	strh	r2, [r0, #14]
900117c6:	8202      	strh	r2, [r0, #16]
900117c8:	8242      	strh	r2, [r0, #18]
900117ca:	61c2      	str	r2, [r0, #28]
900117cc:	8402      	strh	r2, [r0, #32]
900117ce:	8442      	strh	r2, [r0, #34]	; 0x22
900117d0:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
900117d4:	e9c0 2205 	strd	r2, r2, [r0, #20]
900117d8:	2201      	movs	r2, #1
900117da:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
900117de:	4a04      	ldr	r2, [pc, #16]	; (900117f0 <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
900117e0:	6002      	str	r2, [r0, #0]
900117e2:	f64f 72ff 	movw	r2, #65535	; 0xffff
900117e6:	84c2      	strh	r2, [r0, #38]	; 0x26
900117e8:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
900117ec:	4770      	bx	lr
900117ee:	bf00      	nop
900117f0:	9002a508 	.word	0x9002a508

900117f4 <_ZNK8touchgfx5Image17invalidateContentEv>:
900117f4:	b508      	push	{r3, lr}
900117f6:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
900117fa:	b10b      	cbz	r3, 90011800 <_ZNK8touchgfx5Image17invalidateContentEv+0xc>
900117fc:	f7f0 fdf0 	bl	900023e0 <_ZNK8touchgfx8Drawable17invalidateContentEv>
90011800:	bd08      	pop	{r3, pc}

90011802 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
90011802:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
90011806:	4770      	bx	lr

90011808 <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
90011808:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
9001180c:	4770      	bx	lr

9001180e <_ZN8touchgfx13ScalableImageD1Ev>:
9001180e:	4770      	bx	lr

90011810 <_ZN8touchgfx13ScalableImageD0Ev>:
90011810:	b510      	push	{r4, lr}
90011812:	4604      	mov	r4, r0
90011814:	212c      	movs	r1, #44	; 0x2c
90011816:	f014 fd24 	bl	90026262 <_ZdlPvj>
9001181a:	4620      	mov	r0, r4
9001181c:	bd10      	pop	{r4, pc}

9001181e <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
9001181e:	b5f0      	push	{r4, r5, r6, r7, lr}
90011820:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
90011824:	b085      	sub	sp, #20
90011826:	4604      	mov	r4, r0
90011828:	460d      	mov	r5, r1
9001182a:	2bff      	cmp	r3, #255	; 0xff
9001182c:	d128      	bne.n	90011880 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
9001182e:	f101 0626 	add.w	r6, r1, #38	; 0x26
90011832:	4668      	mov	r0, sp
90011834:	4631      	mov	r1, r6
90011836:	f006 fd6f 	bl	90018318 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001183a:	f9bd 7004 	ldrsh.w	r7, [sp, #4]
9001183e:	4630      	mov	r0, r6
90011840:	f006 fd02 	bl	90018248 <_ZNK8touchgfx6Bitmap8getWidthEv>
90011844:	4287      	cmp	r7, r0
90011846:	d11b      	bne.n	90011880 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
90011848:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
9001184c:	4630      	mov	r0, r6
9001184e:	f006 fd2f 	bl	900182b0 <_ZNK8touchgfx6Bitmap9getHeightEv>
90011852:	4287      	cmp	r7, r0
90011854:	d114      	bne.n	90011880 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
90011856:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
9001185a:	2100      	movs	r1, #0
9001185c:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
90011860:	f8ad 300e 	strh.w	r3, [sp, #14]
90011864:	466b      	mov	r3, sp
90011866:	9102      	str	r1, [sp, #8]
90011868:	f8ad 200c 	strh.w	r2, [sp, #12]
9001186c:	cb03      	ldmia	r3!, {r0, r1}
9001186e:	6020      	str	r0, [r4, #0]
90011870:	4620      	mov	r0, r4
90011872:	6061      	str	r1, [r4, #4]
90011874:	4619      	mov	r1, r3
90011876:	f7fe fc87 	bl	90010188 <_ZN8touchgfx4RectaNERKS0_>
9001187a:	4620      	mov	r0, r4
9001187c:	b005      	add	sp, #20
9001187e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011880:	2300      	movs	r3, #0
90011882:	8023      	strh	r3, [r4, #0]
90011884:	8063      	strh	r3, [r4, #2]
90011886:	80a3      	strh	r3, [r4, #4]
90011888:	80e3      	strh	r3, [r4, #6]
9001188a:	e7f6      	b.n	9001187a <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x5c>

9001188c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
9001188c:	b538      	push	{r3, r4, r5, lr}
9001188e:	2300      	movs	r3, #0
90011890:	2501      	movs	r5, #1
90011892:	4604      	mov	r4, r0
90011894:	8083      	strh	r3, [r0, #4]
90011896:	80c3      	strh	r3, [r0, #6]
90011898:	8103      	strh	r3, [r0, #8]
9001189a:	8143      	strh	r3, [r0, #10]
9001189c:	8183      	strh	r3, [r0, #12]
9001189e:	81c3      	strh	r3, [r0, #14]
900118a0:	8203      	strh	r3, [r0, #16]
900118a2:	8243      	strh	r3, [r0, #18]
900118a4:	61c3      	str	r3, [r0, #28]
900118a6:	8403      	strh	r3, [r0, #32]
900118a8:	8443      	strh	r3, [r0, #34]	; 0x22
900118aa:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
900118ae:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
900118b2:	e9c0 3305 	strd	r3, r3, [r0, #20]
900118b6:	4b07      	ldr	r3, [pc, #28]	; (900118d4 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
900118b8:	6003      	str	r3, [r0, #0]
900118ba:	880b      	ldrh	r3, [r1, #0]
900118bc:	84c3      	strh	r3, [r0, #38]	; 0x26
900118be:	23ff      	movs	r3, #255	; 0xff
900118c0:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
900118c4:	f000 ff6f 	bl	900127a6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
900118c8:	4b03      	ldr	r3, [pc, #12]	; (900118d8 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
900118ca:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
900118ce:	4620      	mov	r0, r4
900118d0:	6023      	str	r3, [r4, #0]
900118d2:	bd38      	pop	{r3, r4, r5, pc}
900118d4:	9002a7c4 	.word	0x9002a7c4
900118d8:	9002a578 	.word	0x9002a578

900118dc <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
900118dc:	4603      	mov	r3, r0
900118de:	3026      	adds	r0, #38	; 0x26
900118e0:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
900118e4:	b90b      	cbnz	r3, 900118ea <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
900118e6:	f004 bd27 	b.w	90016338 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
900118ea:	f004 bd35 	b.w	90016358 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

900118f0 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
900118f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900118f4:	4604      	mov	r4, r0
900118f6:	b0b3      	sub	sp, #204	; 0xcc
900118f8:	469b      	mov	fp, r3
900118fa:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
900118fe:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90011902:	2500      	movs	r5, #0
90011904:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
90011908:	f8ad 304a 	strh.w	r3, [sp, #74]	; 0x4a
9001190c:	ab11      	add	r3, sp, #68	; 0x44
9001190e:	9206      	str	r2, [sp, #24]
90011910:	4618      	mov	r0, r3
90011912:	9511      	str	r5, [sp, #68]	; 0x44
90011914:	9307      	str	r3, [sp, #28]
90011916:	ad13      	add	r5, sp, #76	; 0x4c
90011918:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	; 0xf0
9001191c:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	; 0xf8
90011920:	f7fe fc32 	bl	90010188 <_ZN8touchgfx4RectaNERKS0_>
90011924:	9b07      	ldr	r3, [sp, #28]
90011926:	e893 0003 	ldmia.w	r3, {r0, r1}
9001192a:	e885 0003 	stmia.w	r5, {r0, r1}
9001192e:	6821      	ldr	r1, [r4, #0]
90011930:	4620      	mov	r0, r4
90011932:	6ace      	ldr	r6, [r1, #44]	; 0x2c
90011934:	4629      	mov	r1, r5
90011936:	47b0      	blx	r6
90011938:	4621      	mov	r1, r4
9001193a:	a815      	add	r0, sp, #84	; 0x54
9001193c:	1d26      	adds	r6, r4, #4
9001193e:	f004 fc57 	bl	900161f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90011942:	a815      	add	r0, sp, #84	; 0x54
90011944:	f003 f98a 	bl	90014c5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90011948:	9b07      	ldr	r3, [sp, #28]
9001194a:	4631      	mov	r1, r6
9001194c:	4618      	mov	r0, r3
9001194e:	f003 f9c9 	bl	90014ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90011952:	4628      	mov	r0, r5
90011954:	f104 0526 	add.w	r5, r4, #38	; 0x26
90011958:	f003 f980 	bl	90014c5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001195c:	4628      	mov	r0, r5
9001195e:	f006 fd5f 	bl	90018420 <_ZNK8touchgfx6Bitmap7getDataEv>
90011962:	9007      	str	r0, [sp, #28]
90011964:	2800      	cmp	r0, #0
90011966:	f000 80ce 	beq.w	90011b06 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x216>
9001196a:	f8db 200c 	ldr.w	r2, [fp, #12]
9001196e:	a809      	add	r0, sp, #36	; 0x24
90011970:	f8db 1000 	ldr.w	r1, [fp]
90011974:	920c      	str	r2, [sp, #48]	; 0x30
90011976:	f8da 2000 	ldr.w	r2, [sl]
9001197a:	9109      	str	r1, [sp, #36]	; 0x24
9001197c:	920d      	str	r2, [sp, #52]	; 0x34
9001197e:	f8da 2004 	ldr.w	r2, [sl, #4]
90011982:	f8db 1004 	ldr.w	r1, [fp, #4]
90011986:	920e      	str	r2, [sp, #56]	; 0x38
90011988:	f8da 2008 	ldr.w	r2, [sl, #8]
9001198c:	910a      	str	r1, [sp, #40]	; 0x28
9001198e:	920f      	str	r2, [sp, #60]	; 0x3c
90011990:	f8db 1008 	ldr.w	r1, [fp, #8]
90011994:	f8da 200c 	ldr.w	r2, [sl, #12]
90011998:	910b      	str	r1, [sp, #44]	; 0x2c
9001199a:	a90d      	add	r1, sp, #52	; 0x34
9001199c:	9210      	str	r2, [sp, #64]	; 0x40
9001199e:	4632      	mov	r2, r6
900119a0:	f003 f984 	bl	90014cac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
900119a4:	4632      	mov	r2, r6
900119a6:	a90e      	add	r1, sp, #56	; 0x38
900119a8:	a80a      	add	r0, sp, #40	; 0x28
900119aa:	f003 f97f 	bl	90014cac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
900119ae:	4632      	mov	r2, r6
900119b0:	a90f      	add	r1, sp, #60	; 0x3c
900119b2:	a80b      	add	r0, sp, #44	; 0x2c
900119b4:	f003 f97a 	bl	90014cac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
900119b8:	4632      	mov	r2, r6
900119ba:	a910      	add	r1, sp, #64	; 0x40
900119bc:	a80c      	add	r0, sp, #48	; 0x30
900119be:	f003 f975 	bl	90014cac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
900119c2:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
900119c6:	ed97 3a00 	vldr	s6, [r7]
900119ca:	eef0 6a67 	vmov.f32	s13, s15
900119ce:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
900119d2:	edd7 4a01 	vldr	s9, [r7, #4]
900119d6:	eeb0 7a67 	vmov.f32	s14, s15
900119da:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
900119de:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
900119e2:	ed99 2a00 	vldr	s4, [r9]
900119e6:	eeb0 6a67 	vmov.f32	s12, s15
900119ea:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
900119ee:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
900119f2:	edd8 2a00 	vldr	s5, [r8]
900119f6:	edd9 3a01 	vldr	s7, [r9, #4]
900119fa:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
900119fe:	ed98 4a01 	vldr	s8, [r8, #4]
90011a02:	ed99 5a02 	vldr	s10, [r9, #8]
90011a06:	edd8 5a02 	vldr	s11, [r8, #8]
90011a0a:	ee16 6a10 	vmov	r6, s12
90011a0e:	eeb0 6a67 	vmov.f32	s12, s15
90011a12:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
90011a16:	f8d9 e00c 	ldr.w	lr, [r9, #12]
90011a1a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90011a1e:	f8d8 c00c 	ldr.w	ip, [r8, #12]
90011a22:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
90011a26:	ed8d 2a20 	vstr	s4, [sp, #128]	; 0x80
90011a2a:	ee16 0a10 	vmov	r0, s12
90011a2e:	eeb0 6a67 	vmov.f32	s12, s15
90011a32:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
90011a36:	edcd 2a21 	vstr	s5, [sp, #132]	; 0x84
90011a3a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90011a3e:	ed8d 3a22 	vstr	s6, [sp, #136]	; 0x88
90011a42:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
90011a46:	edcd 3a25 	vstr	s7, [sp, #148]	; 0x94
90011a4a:	ee16 1a10 	vmov	r1, s12
90011a4e:	eeb0 6a67 	vmov.f32	s12, s15
90011a52:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
90011a56:	ed8d 4a26 	vstr	s8, [sp, #152]	; 0x98
90011a5a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90011a5e:	edcd 4a27 	vstr	s9, [sp, #156]	; 0x9c
90011a62:	f8d7 a008 	ldr.w	sl, [r7, #8]
90011a66:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
90011a6a:	68ff      	ldr	r7, [r7, #12]
90011a6c:	ee16 2a10 	vmov	r2, s12
90011a70:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
90011a74:	9624      	str	r6, [sp, #144]	; 0x90
90011a76:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90011a7a:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
90011a7e:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
90011a82:	4628      	mov	r0, r5
90011a84:	ed8d 5a2a 	vstr	s10, [sp, #168]	; 0xa8
90011a88:	9b06      	ldr	r3, [sp, #24]
90011a8a:	922d      	str	r2, [sp, #180]	; 0xb4
90011a8c:	4a1f      	ldr	r2, [pc, #124]	; (90011b0c <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21c>)
90011a8e:	9317      	str	r3, [sp, #92]	; 0x5c
90011a90:	8812      	ldrh	r2, [r2, #0]
90011a92:	9b07      	ldr	r3, [sp, #28]
90011a94:	9218      	str	r2, [sp, #96]	; 0x60
90011a96:	9319      	str	r3, [sp, #100]	; 0x64
90011a98:	edcd 5a2b 	vstr	s11, [sp, #172]	; 0xac
90011a9c:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
90011aa0:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
90011aa4:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
90011aa8:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
90011aac:	9731      	str	r7, [sp, #196]	; 0xc4
90011aae:	f006 fce7 	bl	90018480 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
90011ab2:	901a      	str	r0, [sp, #104]	; 0x68
90011ab4:	4628      	mov	r0, r5
90011ab6:	f006 fbc7 	bl	90018248 <_ZNK8touchgfx6Bitmap8getWidthEv>
90011aba:	901b      	str	r0, [sp, #108]	; 0x6c
90011abc:	4628      	mov	r0, r5
90011abe:	f006 fbf7 	bl	900182b0 <_ZNK8touchgfx6Bitmap9getHeightEv>
90011ac2:	901c      	str	r0, [sp, #112]	; 0x70
90011ac4:	4628      	mov	r0, r5
90011ac6:	f006 fbbf 	bl	90018248 <_ZNK8touchgfx6Bitmap8getWidthEv>
90011aca:	4b11      	ldr	r3, [pc, #68]	; (90011b10 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
90011acc:	901d      	str	r0, [sp, #116]	; 0x74
90011ace:	681b      	ldr	r3, [r3, #0]
90011ad0:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90011ad4:	b10a      	cbz	r2, 90011ada <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
90011ad6:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
90011ad8:	b905      	cbnz	r5, 90011adc <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ec>
90011ada:	689d      	ldr	r5, [r3, #8]
90011adc:	682b      	ldr	r3, [r5, #0]
90011ade:	4620      	mov	r0, r4
90011ae0:	6c1e      	ldr	r6, [r3, #64]	; 0x40
90011ae2:	f7ff fefb 	bl	900118dc <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
90011ae6:	f64f 73ff 	movw	r3, #65535	; 0xffff
90011aea:	aa1e      	add	r2, sp, #120	; 0x78
90011aec:	a917      	add	r1, sp, #92	; 0x5c
90011aee:	9304      	str	r3, [sp, #16]
90011af0:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
90011af4:	e9cd 0302 	strd	r0, r3, [sp, #8]
90011af8:	ab13      	add	r3, sp, #76	; 0x4c
90011afa:	4628      	mov	r0, r5
90011afc:	9301      	str	r3, [sp, #4]
90011afe:	ab15      	add	r3, sp, #84	; 0x54
90011b00:	9300      	str	r3, [sp, #0]
90011b02:	ab19      	add	r3, sp, #100	; 0x64
90011b04:	47b0      	blx	r6
90011b06:	b033      	add	sp, #204	; 0xcc
90011b08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90011b0c:	240235a6 	.word	0x240235a6
90011b10:	240235ac 	.word	0x240235ac

90011b14 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
90011b14:	b570      	push	{r4, r5, r6, lr}
90011b16:	ed2d 8b04 	vpush	{d8-d9}
90011b1a:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
90011b1e:	b098      	sub	sp, #96	; 0x60
90011b20:	4604      	mov	r4, r0
90011b22:	460e      	mov	r6, r1
90011b24:	2b00      	cmp	r3, #0
90011b26:	d065      	beq.n	90011bf4 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
90011b28:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90011b2c:	f100 0526 	add.w	r5, r0, #38	; 0x26
90011b30:	ed9f 8a37 	vldr	s16, [pc, #220]	; 90011c10 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
90011b34:	ee09 3a10 	vmov	s18, r3
90011b38:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90011b3c:	4628      	mov	r0, r5
90011b3e:	ee08 3a90 	vmov	s17, r3
90011b42:	4b34      	ldr	r3, [pc, #208]	; (90011c14 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
90011b44:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
90011b48:	930c      	str	r3, [sp, #48]	; 0x30
90011b4a:	eef8 8ae8 	vcvt.f32.s32	s17, s17
90011b4e:	930d      	str	r3, [sp, #52]	; 0x34
90011b50:	930e      	str	r3, [sp, #56]	; 0x38
90011b52:	ee39 9a08 	vadd.f32	s18, s18, s16
90011b56:	930f      	str	r3, [sp, #60]	; 0x3c
90011b58:	f006 fb76 	bl	90018248 <_ZNK8touchgfx6Bitmap8getWidthEv>
90011b5c:	ee07 0a90 	vmov	s15, r0
90011b60:	4628      	mov	r0, r5
90011b62:	ee78 8a88 	vadd.f32	s17, s17, s16
90011b66:	eef8 9ae7 	vcvt.f32.s32	s19, s15
90011b6a:	f006 fba1 	bl	900182b0 <_ZNK8touchgfx6Bitmap9getHeightEv>
90011b6e:	4b2a      	ldr	r3, [pc, #168]	; (90011c18 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
90011b70:	ee07 0a90 	vmov	s15, r0
90011b74:	781b      	ldrb	r3, [r3, #0]
90011b76:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
90011b7a:	eef0 7a48 	vmov.f32	s15, s16
90011b7e:	2b01      	cmp	r3, #1
90011b80:	d13c      	bne.n	90011bfc <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
90011b82:	eef0 6a69 	vmov.f32	s13, s19
90011b86:	ee19 3a90 	vmov	r3, s19
90011b8a:	eeb0 6a47 	vmov.f32	s12, s14
90011b8e:	eef0 5a47 	vmov.f32	s11, s14
90011b92:	eef0 9a48 	vmov.f32	s19, s16
90011b96:	eeb0 7a48 	vmov.f32	s14, s16
90011b9a:	9314      	str	r3, [sp, #80]	; 0x50
90011b9c:	ab14      	add	r3, sp, #80	; 0x50
90011b9e:	2200      	movs	r2, #0
90011ba0:	4631      	mov	r1, r6
90011ba2:	9303      	str	r3, [sp, #12]
90011ba4:	ab10      	add	r3, sp, #64	; 0x40
90011ba6:	4620      	mov	r0, r4
90011ba8:	edcd 7a04 	vstr	s15, [sp, #16]
90011bac:	9302      	str	r3, [sp, #8]
90011bae:	ab0c      	add	r3, sp, #48	; 0x30
90011bb0:	ed8d 9a05 	vstr	s18, [sp, #20]
90011bb4:	9301      	str	r3, [sp, #4]
90011bb6:	ab08      	add	r3, sp, #32
90011bb8:	ed8d 9a06 	vstr	s18, [sp, #24]
90011bbc:	9300      	str	r3, [sp, #0]
90011bbe:	ab04      	add	r3, sp, #16
90011bc0:	edcd 7a07 	vstr	s15, [sp, #28]
90011bc4:	edcd 7a08 	vstr	s15, [sp, #32]
90011bc8:	edcd 7a09 	vstr	s15, [sp, #36]	; 0x24
90011bcc:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
90011bd0:	edcd 8a0b 	vstr	s17, [sp, #44]	; 0x2c
90011bd4:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
90011bd8:	edcd 9a11 	vstr	s19, [sp, #68]	; 0x44
90011bdc:	edcd 5a12 	vstr	s11, [sp, #72]	; 0x48
90011be0:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
90011be4:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
90011be8:	ed8d 7a16 	vstr	s14, [sp, #88]	; 0x58
90011bec:	edcd 6a17 	vstr	s13, [sp, #92]	; 0x5c
90011bf0:	f7ff fe7e 	bl	900118f0 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
90011bf4:	b018      	add	sp, #96	; 0x60
90011bf6:	ecbd 8b04 	vpop	{d8-d9}
90011bfa:	bd70      	pop	{r4, r5, r6, pc}
90011bfc:	eef0 6a47 	vmov.f32	s13, s14
90011c00:	ee18 3a10 	vmov	r3, s16
90011c04:	eef0 5a69 	vmov.f32	s11, s19
90011c08:	eeb0 6a48 	vmov.f32	s12, s16
90011c0c:	e7c5      	b.n	90011b9a <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
90011c0e:	bf00      	nop
90011c10:	00000000 	.word	0x00000000
90011c14:	42c80000 	.word	0x42c80000
90011c18:	240235a4 	.word	0x240235a4

90011c1c <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
90011c1c:	2000      	movs	r0, #0
90011c1e:	4770      	bx	lr

90011c20 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
90011c20:	4b07      	ldr	r3, [pc, #28]	; (90011c40 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
90011c22:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90011c24:	881b      	ldrh	r3, [r3, #0]
90011c26:	4293      	cmp	r3, r2
90011c28:	bf81      	itttt	hi
90011c2a:	4b06      	ldrhi	r3, [pc, #24]	; (90011c44 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
90011c2c:	681b      	ldrhi	r3, [r3, #0]
90011c2e:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
90011c32:	7858      	ldrbhi	r0, [r3, #1]
90011c34:	bf8c      	ite	hi
90011c36:	f000 0003 	andhi.w	r0, r0, #3
90011c3a:	2000      	movls	r0, #0
90011c3c:	4770      	bx	lr
90011c3e:	bf00      	nop
90011c40:	24023608 	.word	0x24023608
90011c44:	24023604 	.word	0x24023604

90011c48 <_ZN8touchgfx8TextAreaD1Ev>:
90011c48:	4770      	bx	lr
	...

90011c4c <_ZNK8touchgfx8TextArea13getTextHeightEv>:
90011c4c:	4b11      	ldr	r3, [pc, #68]	; (90011c94 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
90011c4e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011c52:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
90011c54:	4604      	mov	r4, r0
90011c56:	881b      	ldrh	r3, [r3, #0]
90011c58:	428b      	cmp	r3, r1
90011c5a:	d918      	bls.n	90011c8e <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
90011c5c:	6803      	ldr	r3, [r0, #0]
90011c5e:	6f9d      	ldr	r5, [r3, #120]	; 0x78
90011c60:	4b0d      	ldr	r3, [pc, #52]	; (90011c98 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
90011c62:	6818      	ldr	r0, [r3, #0]
90011c64:	f7f2 fd52 	bl	9000470c <_ZNK8touchgfx5Texts7getTextEt>
90011c68:	6823      	ldr	r3, [r4, #0]
90011c6a:	4606      	mov	r6, r0
90011c6c:	4620      	mov	r0, r4
90011c6e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90011c70:	4798      	blx	r3
90011c72:	6823      	ldr	r3, [r4, #0]
90011c74:	4607      	mov	r7, r0
90011c76:	4620      	mov	r0, r4
90011c78:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90011c7c:	4798      	blx	r3
90011c7e:	463a      	mov	r2, r7
90011c80:	4603      	mov	r3, r0
90011c82:	4631      	mov	r1, r6
90011c84:	4620      	mov	r0, r4
90011c86:	46ac      	mov	ip, r5
90011c88:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90011c8c:	4760      	bx	ip
90011c8e:	2000      	movs	r0, #0
90011c90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90011c94:	24023608 	.word	0x24023608
90011c98:	24023610 	.word	0x24023610

90011c9c <_ZNK8touchgfx8TextArea12getTextWidthEv>:
90011c9c:	4b18      	ldr	r3, [pc, #96]	; (90011d00 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
90011c9e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
90011ca2:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
90011ca4:	4604      	mov	r4, r0
90011ca6:	881b      	ldrh	r3, [r3, #0]
90011ca8:	428b      	cmp	r3, r1
90011caa:	d926      	bls.n	90011cfa <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
90011cac:	4b15      	ldr	r3, [pc, #84]	; (90011d04 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
90011cae:	681b      	ldr	r3, [r3, #0]
90011cb0:	eb03 0241 	add.w	r2, r3, r1, lsl #1
90011cb4:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
90011cb8:	4b13      	ldr	r3, [pc, #76]	; (90011d08 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
90011cba:	7855      	ldrb	r5, [r2, #1]
90011cbc:	681b      	ldr	r3, [r3, #0]
90011cbe:	f3c5 0581 	ubfx	r5, r5, #2, #2
90011cc2:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
90011cc6:	6833      	ldr	r3, [r6, #0]
90011cc8:	69df      	ldr	r7, [r3, #28]
90011cca:	4b10      	ldr	r3, [pc, #64]	; (90011d0c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
90011ccc:	6818      	ldr	r0, [r3, #0]
90011cce:	f7f2 fd1d 	bl	9000470c <_ZNK8touchgfx5Texts7getTextEt>
90011cd2:	6823      	ldr	r3, [r4, #0]
90011cd4:	4680      	mov	r8, r0
90011cd6:	4620      	mov	r0, r4
90011cd8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90011cda:	4798      	blx	r3
90011cdc:	6823      	ldr	r3, [r4, #0]
90011cde:	4681      	mov	r9, r0
90011ce0:	4620      	mov	r0, r4
90011ce2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90011ce6:	4798      	blx	r3
90011ce8:	464b      	mov	r3, r9
90011cea:	9000      	str	r0, [sp, #0]
90011cec:	4642      	mov	r2, r8
90011cee:	4629      	mov	r1, r5
90011cf0:	4630      	mov	r0, r6
90011cf2:	47b8      	blx	r7
90011cf4:	b003      	add	sp, #12
90011cf6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90011cfa:	2000      	movs	r0, #0
90011cfc:	e7fa      	b.n	90011cf4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
90011cfe:	bf00      	nop
90011d00:	24023608 	.word	0x24023608
90011d04:	24023604 	.word	0x24023604
90011d08:	2402360c 	.word	0x2402360c
90011d0c:	24023610 	.word	0x24023610

90011d10 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
90011d10:	b40e      	push	{r1, r2, r3}
90011d12:	4b30      	ldr	r3, [pc, #192]	; (90011dd4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
90011d14:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90011d18:	881a      	ldrh	r2, [r3, #0]
90011d1a:	b09d      	sub	sp, #116	; 0x74
90011d1c:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
90011d1e:	4604      	mov	r4, r0
90011d20:	429a      	cmp	r2, r3
90011d22:	d954      	bls.n	90011dce <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
90011d24:	aa26      	add	r2, sp, #152	; 0x98
90011d26:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 90011dd8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
90011d2a:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 90011ddc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
90011d2e:	9202      	str	r2, [sp, #8]
90011d30:	f8d9 2000 	ldr.w	r2, [r9]
90011d34:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
90011d38:	f8d8 3000 	ldr.w	r3, [r8]
90011d3c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90011d40:	682b      	ldr	r3, [r5, #0]
90011d42:	4628      	mov	r0, r5
90011d44:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90011d46:	4798      	blx	r3
90011d48:	4606      	mov	r6, r0
90011d4a:	b207      	sxth	r7, r0
90011d4c:	a803      	add	r0, sp, #12
90011d4e:	f004 feee 	bl	90016b2e <_ZN8touchgfx12TextProviderC1Ev>
90011d52:	682b      	ldr	r3, [r5, #0]
90011d54:	4628      	mov	r0, r5
90011d56:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90011d58:	4798      	blx	r3
90011d5a:	682b      	ldr	r3, [r5, #0]
90011d5c:	4682      	mov	sl, r0
90011d5e:	4628      	mov	r0, r5
90011d60:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90011d62:	4798      	blx	r3
90011d64:	4653      	mov	r3, sl
90011d66:	9000      	str	r0, [sp, #0]
90011d68:	a803      	add	r0, sp, #12
90011d6a:	9a02      	ldr	r2, [sp, #8]
90011d6c:	9925      	ldr	r1, [sp, #148]	; 0x94
90011d6e:	f004 ff39 	bl	90016be4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90011d72:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90011d74:	f8d9 3000 	ldr.w	r3, [r9]
90011d78:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
90011d7c:	8925      	ldrh	r5, [r4, #8]
90011d7e:	eb03 0142 	add.w	r1, r3, r2, lsl #1
90011d82:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
90011d86:	eba5 050c 	sub.w	r5, r5, ip
90011d8a:	784a      	ldrb	r2, [r1, #1]
90011d8c:	f8d8 3000 	ldr.w	r3, [r8]
90011d90:	b22d      	sxth	r5, r5
90011d92:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
90011d96:	f3c2 0281 	ubfx	r2, r2, #2, #2
90011d9a:	9500      	str	r5, [sp, #0]
90011d9c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
90011da0:	a803      	add	r0, sp, #12
90011da2:	f002 fc61 	bl	90014668 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
90011da6:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
90011daa:	b203      	sxth	r3, r0
90011dac:	18b9      	adds	r1, r7, r2
90011dae:	2900      	cmp	r1, #0
90011db0:	dd0b      	ble.n	90011dca <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
90011db2:	3b01      	subs	r3, #1
90011db4:	fb13 f302 	smulbb	r3, r3, r2
90011db8:	fb16 3300 	smlabb	r3, r6, r0, r3
90011dbc:	b21f      	sxth	r7, r3
90011dbe:	4638      	mov	r0, r7
90011dc0:	b01d      	add	sp, #116	; 0x74
90011dc2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90011dc6:	b003      	add	sp, #12
90011dc8:	4770      	bx	lr
90011dca:	2b00      	cmp	r3, #0
90011dcc:	dcf7      	bgt.n	90011dbe <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90011dce:	2700      	movs	r7, #0
90011dd0:	e7f5      	b.n	90011dbe <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90011dd2:	bf00      	nop
90011dd4:	24023608 	.word	0x24023608
90011dd8:	24023604 	.word	0x24023604
90011ddc:	2402360c 	.word	0x2402360c

90011de0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
90011de0:	4bbd      	ldr	r3, [pc, #756]	; (900120d8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
90011de2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011de6:	460c      	mov	r4, r1
90011de8:	881b      	ldrh	r3, [r3, #0]
90011dea:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
90011dec:	b0a9      	sub	sp, #164	; 0xa4
90011dee:	4680      	mov	r8, r0
90011df0:	428b      	cmp	r3, r1
90011df2:	d809      	bhi.n	90011e08 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
90011df4:	2300      	movs	r3, #0
90011df6:	f04f 32ff 	mov.w	r2, #4294967295
90011dfa:	6083      	str	r3, [r0, #8]
90011dfc:	e9c0 3200 	strd	r3, r2, [r0]
90011e00:	4640      	mov	r0, r8
90011e02:	b029      	add	sp, #164	; 0xa4
90011e04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90011e08:	4eb4      	ldr	r6, [pc, #720]	; (900120dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
90011e0a:	6833      	ldr	r3, [r6, #0]
90011e0c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
90011e10:	4bb3      	ldr	r3, [pc, #716]	; (900120e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
90011e12:	681b      	ldr	r3, [r3, #0]
90011e14:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90011e18:	4bb2      	ldr	r3, [pc, #712]	; (900120e4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
90011e1a:	6818      	ldr	r0, [r3, #0]
90011e1c:	f7f2 fc76 	bl	9000470c <_ZNK8touchgfx5Texts7getTextEt>
90011e20:	682b      	ldr	r3, [r5, #0]
90011e22:	4681      	mov	r9, r0
90011e24:	4628      	mov	r0, r5
90011e26:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90011e28:	4798      	blx	r3
90011e2a:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
90011e2c:	b203      	sxth	r3, r0
90011e2e:	4682      	mov	sl, r0
90011e30:	4407      	add	r7, r0
90011e32:	a80f      	add	r0, sp, #60	; 0x3c
90011e34:	9304      	str	r3, [sp, #16]
90011e36:	b2bb      	uxth	r3, r7
90011e38:	9303      	str	r3, [sp, #12]
90011e3a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
90011e3e:	2b00      	cmp	r3, #0
90011e40:	f040 80a5 	bne.w	90011f8e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
90011e44:	f004 fe73 	bl	90016b2e <_ZN8touchgfx12TextProviderC1Ev>
90011e48:	682b      	ldr	r3, [r5, #0]
90011e4a:	4628      	mov	r0, r5
90011e4c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90011e4e:	4798      	blx	r3
90011e50:	682b      	ldr	r3, [r5, #0]
90011e52:	4606      	mov	r6, r0
90011e54:	4628      	mov	r0, r5
90011e56:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90011e58:	4798      	blx	r3
90011e5a:	6823      	ldr	r3, [r4, #0]
90011e5c:	4607      	mov	r7, r0
90011e5e:	4620      	mov	r0, r4
90011e60:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90011e62:	4798      	blx	r3
90011e64:	6823      	ldr	r3, [r4, #0]
90011e66:	4683      	mov	fp, r0
90011e68:	4620      	mov	r0, r4
90011e6a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90011e6e:	4798      	blx	r3
90011e70:	463b      	mov	r3, r7
90011e72:	4649      	mov	r1, r9
90011e74:	4632      	mov	r2, r6
90011e76:	2600      	movs	r6, #0
90011e78:	e9cd b000 	strd	fp, r0, [sp]
90011e7c:	a80f      	add	r0, sp, #60	; 0x3c
90011e7e:	4637      	mov	r7, r6
90011e80:	f004 fec5 	bl	90016c0e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90011e84:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90011e88:	f8df b250 	ldr.w	fp, [pc, #592]	; 900120dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
90011e8c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90011e90:	bf0c      	ite	eq
90011e92:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
90011e96:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
90011e9a:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90011e9c:	4629      	mov	r1, r5
90011e9e:	f8db 3000 	ldr.w	r3, [fp]
90011ea2:	a80f      	add	r0, sp, #60	; 0x3c
90011ea4:	3701      	adds	r7, #1
90011ea6:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90011eaa:	f647 72ff 	movw	r2, #32767	; 0x7fff
90011eae:	b2bf      	uxth	r7, r7
90011eb0:	785b      	ldrb	r3, [r3, #1]
90011eb2:	f3c3 0381 	ubfx	r3, r3, #2, #2
90011eb6:	f002 f8de 	bl	90014076 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90011eba:	9b03      	ldr	r3, [sp, #12]
90011ebc:	4286      	cmp	r6, r0
90011ebe:	eba9 0903 	sub.w	r9, r9, r3
90011ec2:	bfb8      	it	lt
90011ec4:	4606      	movlt	r6, r0
90011ec6:	a80f      	add	r0, sp, #60	; 0x3c
90011ec8:	fa0f f989 	sxth.w	r9, r9
90011ecc:	b236      	sxth	r6, r6
90011ece:	f004 fe55 	bl	90016b7c <_ZN8touchgfx12TextProvider11endOfStringEv>
90011ed2:	b918      	cbnz	r0, 90011edc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90011ed4:	7a2b      	ldrb	r3, [r5, #8]
90011ed6:	444b      	add	r3, r9
90011ed8:	2b00      	cmp	r3, #0
90011eda:	dcde      	bgt.n	90011e9a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
90011edc:	9b03      	ldr	r3, [sp, #12]
90011ede:	4620      	mov	r0, r4
90011ee0:	9a04      	ldr	r2, [sp, #16]
90011ee2:	fb13 f707 	smulbb	r7, r3, r7
90011ee6:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
90011ee8:	f895 9009 	ldrb.w	r9, [r5, #9]
90011eec:	1aff      	subs	r7, r7, r3
90011eee:	b2bf      	uxth	r7, r7
90011ef0:	b23b      	sxth	r3, r7
90011ef2:	429a      	cmp	r2, r3
90011ef4:	bfa8      	it	ge
90011ef6:	4657      	movge	r7, sl
90011ef8:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90011efc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90011f00:	6823      	ldr	r3, [r4, #0]
90011f02:	444f      	add	r7, r9
90011f04:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90011f06:	bf08      	it	eq
90011f08:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
90011f0c:	fa1f f987 	uxth.w	r9, r7
90011f10:	bf18      	it	ne
90011f12:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
90011f16:	4798      	blx	r3
90011f18:	2801      	cmp	r0, #1
90011f1a:	fa0f f789 	sxth.w	r7, r9
90011f1e:	b2b3      	uxth	r3, r6
90011f20:	f000 80e2 	beq.w	900120e8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
90011f24:	2802      	cmp	r0, #2
90011f26:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
90011f2a:	f000 80e3 	beq.w	900120f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
90011f2e:	7aea      	ldrb	r2, [r5, #11]
90011f30:	b236      	sxth	r6, r6
90011f32:	7b2d      	ldrb	r5, [r5, #12]
90011f34:	1ab6      	subs	r6, r6, r2
90011f36:	442a      	add	r2, r5
90011f38:	fa1f fa86 	uxth.w	sl, r6
90011f3c:	4413      	add	r3, r2
90011f3e:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
90011f42:	fa0f fb8a 	sxth.w	fp, sl
90011f46:	b29b      	uxth	r3, r3
90011f48:	2a02      	cmp	r2, #2
90011f4a:	b21e      	sxth	r6, r3
90011f4c:	f000 80d6 	beq.w	900120fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
90011f50:	2a03      	cmp	r2, #3
90011f52:	f000 80de 	beq.w	90012112 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
90011f56:	2a01      	cmp	r2, #1
90011f58:	f040 80e6 	bne.w	90012128 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
90011f5c:	8925      	ldrh	r5, [r4, #8]
90011f5e:	4633      	mov	r3, r6
90011f60:	463e      	mov	r6, r7
90011f62:	eba5 0909 	sub.w	r9, r5, r9
90011f66:	461f      	mov	r7, r3
90011f68:	465d      	mov	r5, fp
90011f6a:	fa0f fb89 	sxth.w	fp, r9
90011f6e:	4b5d      	ldr	r3, [pc, #372]	; (900120e4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
90011f70:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90011f72:	6818      	ldr	r0, [r3, #0]
90011f74:	f7f2 fbca 	bl	9000470c <_ZNK8touchgfx5Texts7getTextEt>
90011f78:	f8a8 b000 	strh.w	fp, [r8]
90011f7c:	f8a8 5002 	strh.w	r5, [r8, #2]
90011f80:	f8a8 6004 	strh.w	r6, [r8, #4]
90011f84:	f8a8 7006 	strh.w	r7, [r8, #6]
90011f88:	f8c8 0008 	str.w	r0, [r8, #8]
90011f8c:	e738      	b.n	90011e00 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
90011f8e:	f004 fdce 	bl	90016b2e <_ZN8touchgfx12TextProviderC1Ev>
90011f92:	682b      	ldr	r3, [r5, #0]
90011f94:	4628      	mov	r0, r5
90011f96:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90011f98:	4798      	blx	r3
90011f9a:	682b      	ldr	r3, [r5, #0]
90011f9c:	4607      	mov	r7, r0
90011f9e:	4628      	mov	r0, r5
90011fa0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90011fa2:	4798      	blx	r3
90011fa4:	6823      	ldr	r3, [r4, #0]
90011fa6:	4683      	mov	fp, r0
90011fa8:	4620      	mov	r0, r4
90011faa:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90011fac:	4798      	blx	r3
90011fae:	6822      	ldr	r2, [r4, #0]
90011fb0:	9005      	str	r0, [sp, #20]
90011fb2:	4620      	mov	r0, r4
90011fb4:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
90011fb8:	4790      	blx	r2
90011fba:	9b05      	ldr	r3, [sp, #20]
90011fbc:	463a      	mov	r2, r7
90011fbe:	4649      	mov	r1, r9
90011fc0:	9001      	str	r0, [sp, #4]
90011fc2:	a80f      	add	r0, sp, #60	; 0x3c
90011fc4:	9300      	str	r3, [sp, #0]
90011fc6:	465b      	mov	r3, fp
90011fc8:	f004 fe21 	bl	90016c0e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90011fcc:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90011fd0:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
90011fd4:	af0f      	add	r7, sp, #60	; 0x3c
90011fd6:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90011fda:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90011fde:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90011fe0:	bf0a      	itet	eq
90011fe2:	464a      	moveq	r2, r9
90011fe4:	461a      	movne	r2, r3
90011fe6:	4699      	moveq	r9, r3
90011fe8:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
90011fec:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
90011ff0:	1ad2      	subs	r2, r2, r3
90011ff2:	6833      	ldr	r3, [r6, #0]
90011ff4:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
90011ff8:	eb03 0341 	add.w	r3, r3, r1, lsl #1
90011ffc:	7859      	ldrb	r1, [r3, #1]
90011ffe:	2300      	movs	r3, #0
90012000:	9707      	str	r7, [sp, #28]
90012002:	f3c1 0181 	ubfx	r1, r1, #2, #2
90012006:	f8ad 3018 	strh.w	r3, [sp, #24]
9001200a:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
9001200e:	f88d 1020 	strb.w	r1, [sp, #32]
90012012:	9509      	str	r5, [sp, #36]	; 0x24
90012014:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
90012018:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
9001201c:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
90012020:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
90012024:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
90012028:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001202c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
90012030:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90012034:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
90012038:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
9001203c:	b350      	cbz	r0, 90012094 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
9001203e:	682b      	ldr	r3, [r5, #0]
90012040:	4628      	mov	r0, r5
90012042:	695b      	ldr	r3, [r3, #20]
90012044:	4798      	blx	r3
90012046:	4607      	mov	r7, r0
90012048:	b320      	cbz	r0, 90012094 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
9001204a:	9809      	ldr	r0, [sp, #36]	; 0x24
9001204c:	4639      	mov	r1, r7
9001204e:	6803      	ldr	r3, [r0, #0]
90012050:	68db      	ldr	r3, [r3, #12]
90012052:	4798      	blx	r3
90012054:	4606      	mov	r6, r0
90012056:	b1e8      	cbz	r0, 90012094 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90012058:	7b43      	ldrb	r3, [r0, #13]
9001205a:	7a82      	ldrb	r2, [r0, #10]
9001205c:	005b      	lsls	r3, r3, #1
9001205e:	f403 7380 	and.w	r3, r3, #256	; 0x100
90012062:	4313      	orrs	r3, r2
90012064:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
90012068:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
9001206c:	2b06      	cmp	r3, #6
9001206e:	d111      	bne.n	90012094 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90012070:	9809      	ldr	r0, [sp, #36]	; 0x24
90012072:	4632      	mov	r2, r6
90012074:	4639      	mov	r1, r7
90012076:	6803      	ldr	r3, [r0, #0]
90012078:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9001207a:	4798      	blx	r3
9001207c:	7b73      	ldrb	r3, [r6, #13]
9001207e:	005b      	lsls	r3, r3, #1
90012080:	f403 7280 	and.w	r2, r3, #256	; 0x100
90012084:	7ab3      	ldrb	r3, [r6, #10]
90012086:	4313      	orrs	r3, r2
90012088:	4418      	add	r0, r3
9001208a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
9001208e:	4418      	add	r0, r3
90012090:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
90012094:	2600      	movs	r6, #0
90012096:	4637      	mov	r7, r6
90012098:	a806      	add	r0, sp, #24
9001209a:	3701      	adds	r7, #1
9001209c:	f002 f9e1 	bl	90014462 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
900120a0:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
900120a4:	9b03      	ldr	r3, [sp, #12]
900120a6:	b2bf      	uxth	r7, r7
900120a8:	4286      	cmp	r6, r0
900120aa:	eba9 0903 	sub.w	r9, r9, r3
900120ae:	f8bd 3018 	ldrh.w	r3, [sp, #24]
900120b2:	bfb8      	it	lt
900120b4:	4606      	movlt	r6, r0
900120b6:	fa0f f989 	sxth.w	r9, r9
900120ba:	b236      	sxth	r6, r6
900120bc:	2b00      	cmp	r3, #0
900120be:	f43f af0d 	beq.w	90011edc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
900120c2:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
900120c6:	2b00      	cmp	r3, #0
900120c8:	f47f af08 	bne.w	90011edc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
900120cc:	7a2b      	ldrb	r3, [r5, #8]
900120ce:	444b      	add	r3, r9
900120d0:	2b00      	cmp	r3, #0
900120d2:	dce1      	bgt.n	90012098 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
900120d4:	e702      	b.n	90011edc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
900120d6:	bf00      	nop
900120d8:	24023608 	.word	0x24023608
900120dc:	24023604 	.word	0x24023604
900120e0:	2402360c 	.word	0x2402360c
900120e4:	24023610 	.word	0x24023610
900120e8:	ebaa 0606 	sub.w	r6, sl, r6
900120ec:	2002      	movs	r0, #2
900120ee:	fb96 f6f0 	sdiv	r6, r6, r0
900120f2:	e71c      	b.n	90011f2e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
900120f4:	441e      	add	r6, r3
900120f6:	ebaa 0606 	sub.w	r6, sl, r6
900120fa:	e718      	b.n	90011f2e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
900120fc:	8925      	ldrh	r5, [r4, #8]
900120fe:	1aed      	subs	r5, r5, r3
90012100:	eba5 050a 	sub.w	r5, r5, sl
90012104:	fa0f fb85 	sxth.w	fp, r5
90012108:	8965      	ldrh	r5, [r4, #10]
9001210a:	eba5 0509 	sub.w	r5, r5, r9
9001210e:	b22d      	sxth	r5, r5
90012110:	e72d      	b.n	90011f6e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
90012112:	8965      	ldrh	r5, [r4, #10]
90012114:	f04f 0b00 	mov.w	fp, #0
90012118:	1aed      	subs	r5, r5, r3
9001211a:	4633      	mov	r3, r6
9001211c:	463e      	mov	r6, r7
9001211e:	eba5 050a 	sub.w	r5, r5, sl
90012122:	461f      	mov	r7, r3
90012124:	b22d      	sxth	r5, r5
90012126:	e722      	b.n	90011f6e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
90012128:	2500      	movs	r5, #0
9001212a:	e720      	b.n	90011f6e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

9001212c <_ZN8touchgfx8TextAreaD0Ev>:
9001212c:	b510      	push	{r4, lr}
9001212e:	4604      	mov	r4, r0
90012130:	2148      	movs	r1, #72	; 0x48
90012132:	f014 f896 	bl	90026262 <_ZdlPvj>
90012136:	4620      	mov	r0, r4
90012138:	bd10      	pop	{r4, pc}
	...

9001213c <_ZNK8touchgfx8TextArea17invalidateContentEv>:
9001213c:	b513      	push	{r0, r1, r4, lr}
9001213e:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
90012142:	4604      	mov	r4, r0
90012144:	b1fb      	cbz	r3, 90012186 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90012146:	4b16      	ldr	r3, [pc, #88]	; (900121a0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
90012148:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
9001214a:	881b      	ldrh	r3, [r3, #0]
9001214c:	428b      	cmp	r3, r1
9001214e:	d91a      	bls.n	90012186 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90012150:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90012154:	2b00      	cmp	r3, #0
90012156:	dd16      	ble.n	90012186 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90012158:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
9001215c:	2b00      	cmp	r3, #0
9001215e:	dd12      	ble.n	90012186 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90012160:	4b10      	ldr	r3, [pc, #64]	; (900121a4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
90012162:	6818      	ldr	r0, [r3, #0]
90012164:	f7f2 fad2 	bl	9000470c <_ZNK8touchgfx5Texts7getTextEt>
90012168:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
9001216c:	6822      	ldr	r2, [r4, #0]
9001216e:	2b00      	cmp	r3, #0
90012170:	db06      	blt.n	90012180 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
90012172:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
90012176:	2b00      	cmp	r3, #0
90012178:	db02      	blt.n	90012180 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
9001217a:	6c63      	ldr	r3, [r4, #68]	; 0x44
9001217c:	4298      	cmp	r0, r3
9001217e:	d004      	beq.n	9001218a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
90012180:	6953      	ldr	r3, [r2, #20]
90012182:	4620      	mov	r0, r4
90012184:	4798      	blx	r3
90012186:	b002      	add	sp, #8
90012188:	bd10      	pop	{r4, pc}
9001218a:	f104 013c 	add.w	r1, r4, #60	; 0x3c
9001218e:	466b      	mov	r3, sp
90012190:	6912      	ldr	r2, [r2, #16]
90012192:	c903      	ldmia	r1, {r0, r1}
90012194:	e883 0003 	stmia.w	r3, {r0, r1}
90012198:	4619      	mov	r1, r3
9001219a:	4620      	mov	r0, r4
9001219c:	4790      	blx	r2
9001219e:	e7f2      	b.n	90012186 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
900121a0:	24023608 	.word	0x24023608
900121a4:	24023610 	.word	0x24023610

900121a8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
900121a8:	4b45      	ldr	r3, [pc, #276]	; (900122c0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
900121aa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900121ae:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
900121b0:	b08e      	sub	sp, #56	; 0x38
900121b2:	881b      	ldrh	r3, [r3, #0]
900121b4:	4604      	mov	r4, r0
900121b6:	4293      	cmp	r3, r2
900121b8:	d97e      	bls.n	900122b8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
900121ba:	6808      	ldr	r0, [r1, #0]
900121bc:	ab05      	add	r3, sp, #20
900121be:	6849      	ldr	r1, [r1, #4]
900121c0:	4d40      	ldr	r5, [pc, #256]	; (900122c4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
900121c2:	c303      	stmia	r3!, {r0, r1}
900121c4:	4611      	mov	r1, r2
900121c6:	6828      	ldr	r0, [r5, #0]
900121c8:	f7f2 faa0 	bl	9000470c <_ZNK8touchgfx5Texts7getTextEt>
900121cc:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
900121d0:	2b00      	cmp	r3, #0
900121d2:	db11      	blt.n	900121f8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
900121d4:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
900121d8:	2b00      	cmp	r3, #0
900121da:	db0d      	blt.n	900121f8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
900121dc:	6c63      	ldr	r3, [r4, #68]	; 0x44
900121de:	4298      	cmp	r0, r3
900121e0:	d10a      	bne.n	900121f8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
900121e2:	f104 023c 	add.w	r2, r4, #60	; 0x3c
900121e6:	ab09      	add	r3, sp, #36	; 0x24
900121e8:	e892 0003 	ldmia.w	r2, {r0, r1}
900121ec:	e883 0003 	stmia.w	r3, {r0, r1}
900121f0:	4619      	mov	r1, r3
900121f2:	a805      	add	r0, sp, #20
900121f4:	f7fd ffc8 	bl	90010188 <_ZN8touchgfx4RectaNERKS0_>
900121f8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
900121fc:	2b00      	cmp	r3, #0
900121fe:	dd5b      	ble.n	900122b8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90012200:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
90012204:	2b00      	cmp	r3, #0
90012206:	dd57      	ble.n	900122b8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90012208:	4f2f      	ldr	r7, [pc, #188]	; (900122c8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
9001220a:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
9001220c:	683b      	ldr	r3, [r7, #0]
9001220e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90012212:	4b2e      	ldr	r3, [pc, #184]	; (900122cc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
90012214:	681b      	ldr	r3, [r3, #0]
90012216:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
9001221a:	2e00      	cmp	r6, #0
9001221c:	d04c      	beq.n	900122b8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
9001221e:	6823      	ldr	r3, [r4, #0]
90012220:	4620      	mov	r0, r4
90012222:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
90012226:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90012228:	4798      	blx	r3
9001222a:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
9001222c:	683b      	ldr	r3, [r7, #0]
9001222e:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
90012232:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90012236:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
9001223a:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
9001223e:	785b      	ldrb	r3, [r3, #1]
90012240:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
90012244:	f3c3 0381 	ubfx	r3, r3, #2, #2
90012248:	6b21      	ldr	r1, [r4, #48]	; 0x30
9001224a:	9609      	str	r6, [sp, #36]	; 0x24
9001224c:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
90012250:	4b1f      	ldr	r3, [pc, #124]	; (900122d0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
90012252:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
90012256:	681b      	ldr	r3, [r3, #0]
90012258:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
9001225c:	910b      	str	r1, [sp, #44]	; 0x2c
9001225e:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
90012262:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
90012266:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
9001226a:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
9001226e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90012272:	b10a      	cbz	r2, 90012278 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
90012274:	6cde      	ldr	r6, [r3, #76]	; 0x4c
90012276:	b906      	cbnz	r6, 9001227a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
90012278:	689e      	ldr	r6, [r3, #8]
9001227a:	af07      	add	r7, sp, #28
9001227c:	4621      	mov	r1, r4
9001227e:	4638      	mov	r0, r7
90012280:	f003 ffb6 	bl	900161f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90012284:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90012286:	6828      	ldr	r0, [r5, #0]
90012288:	f7f2 fa40 	bl	9000470c <_ZNK8touchgfx5Texts7getTextEt>
9001228c:	6823      	ldr	r3, [r4, #0]
9001228e:	4605      	mov	r5, r0
90012290:	4620      	mov	r0, r4
90012292:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90012294:	4798      	blx	r3
90012296:	6823      	ldr	r3, [r4, #0]
90012298:	4680      	mov	r8, r0
9001229a:	4620      	mov	r0, r4
9001229c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
900122a0:	4798      	blx	r3
900122a2:	ab09      	add	r3, sp, #36	; 0x24
900122a4:	9501      	str	r5, [sp, #4]
900122a6:	9300      	str	r3, [sp, #0]
900122a8:	ab05      	add	r3, sp, #20
900122aa:	e9cd 8002 	strd	r8, r0, [sp, #8]
900122ae:	4630      	mov	r0, r6
900122b0:	e897 0006 	ldmia.w	r7, {r1, r2}
900122b4:	f7f2 f9da 	bl	9000466c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
900122b8:	b00e      	add	sp, #56	; 0x38
900122ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900122be:	bf00      	nop
900122c0:	24023608 	.word	0x24023608
900122c4:	24023610 	.word	0x24023610
900122c8:	24023604 	.word	0x24023604
900122cc:	2402360c 	.word	0x2402360c
900122d0:	240235ac 	.word	0x240235ac

900122d4 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
900122d4:	b570      	push	{r4, r5, r6, lr}
900122d6:	6803      	ldr	r3, [r0, #0]
900122d8:	4604      	mov	r4, r0
900122da:	4615      	mov	r5, r2
900122dc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900122de:	4798      	blx	r3
900122e0:	6823      	ldr	r3, [r4, #0]
900122e2:	4629      	mov	r1, r5
900122e4:	4620      	mov	r0, r4
900122e6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900122e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900122ec:	4718      	bx	r3
	...

900122f0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
900122f0:	b538      	push	{r3, r4, r5, lr}
900122f2:	4b0e      	ldr	r3, [pc, #56]	; (9001232c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
900122f4:	4604      	mov	r4, r0
900122f6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
900122f8:	881b      	ldrh	r3, [r3, #0]
900122fa:	429a      	cmp	r2, r3
900122fc:	d214      	bcs.n	90012328 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
900122fe:	6803      	ldr	r3, [r0, #0]
90012300:	6f5b      	ldr	r3, [r3, #116]	; 0x74
90012302:	4798      	blx	r3
90012304:	6823      	ldr	r3, [r4, #0]
90012306:	4605      	mov	r5, r0
90012308:	4620      	mov	r0, r4
9001230a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
9001230c:	4798      	blx	r3
9001230e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90012312:	b22d      	sxth	r5, r5
90012314:	4601      	mov	r1, r0
90012316:	f013 0ffd 	tst.w	r3, #253	; 0xfd
9001231a:	bf06      	itte	eq
9001231c:	4602      	moveq	r2, r0
9001231e:	4629      	moveq	r1, r5
90012320:	462a      	movne	r2, r5
90012322:	4620      	mov	r0, r4
90012324:	f7ff ffd6 	bl	900122d4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
90012328:	bd38      	pop	{r3, r4, r5, pc}
9001232a:	bf00      	nop
9001232c:	24023608 	.word	0x24023608

90012330 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
90012330:	b530      	push	{r4, r5, lr}
90012332:	888b      	ldrh	r3, [r1, #4]
90012334:	b085      	sub	sp, #20
90012336:	4604      	mov	r4, r0
90012338:	8583      	strh	r3, [r0, #44]	; 0x2c
9001233a:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
9001233e:	b923      	cbnz	r3, 9001234a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90012340:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90012344:	b90b      	cbnz	r3, 9001234a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90012346:	f7ff ffd3 	bl	900122f0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
9001234a:	6823      	ldr	r3, [r4, #0]
9001234c:	466d      	mov	r5, sp
9001234e:	4621      	mov	r1, r4
90012350:	343c      	adds	r4, #60	; 0x3c
90012352:	4628      	mov	r0, r5
90012354:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90012358:	4798      	blx	r3
9001235a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
9001235e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
90012362:	b005      	add	sp, #20
90012364:	bd30      	pop	{r4, r5, pc}

90012366 <_ZNK8touchgfx3Box12getSolidRectEv>:
90012366:	2300      	movs	r3, #0
90012368:	8083      	strh	r3, [r0, #4]
9001236a:	80c3      	strh	r3, [r0, #6]
9001236c:	8003      	strh	r3, [r0, #0]
9001236e:	8043      	strh	r3, [r0, #2]
90012370:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
90012374:	2bff      	cmp	r3, #255	; 0xff
90012376:	bf01      	itttt	eq
90012378:	890b      	ldrheq	r3, [r1, #8]
9001237a:	8083      	strheq	r3, [r0, #4]
9001237c:	894b      	ldrheq	r3, [r1, #10]
9001237e:	80c3      	strheq	r3, [r0, #6]
90012380:	4770      	bx	lr
	...

90012384 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
90012384:	b537      	push	{r0, r1, r2, r4, r5, lr}
90012386:	4604      	mov	r4, r0
90012388:	466b      	mov	r3, sp
9001238a:	6808      	ldr	r0, [r1, #0]
9001238c:	6849      	ldr	r1, [r1, #4]
9001238e:	c303      	stmia	r3!, {r0, r1}
90012390:	6823      	ldr	r3, [r4, #0]
90012392:	4669      	mov	r1, sp
90012394:	4620      	mov	r0, r4
90012396:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90012398:	4798      	blx	r3
9001239a:	4b08      	ldr	r3, [pc, #32]	; (900123bc <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
9001239c:	681b      	ldr	r3, [r3, #0]
9001239e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900123a2:	b10a      	cbz	r2, 900123a8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
900123a4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900123a6:	b900      	cbnz	r0, 900123aa <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
900123a8:	6898      	ldr	r0, [r3, #8]
900123aa:	6803      	ldr	r3, [r0, #0]
900123ac:	4669      	mov	r1, sp
900123ae:	6aa2      	ldr	r2, [r4, #40]	; 0x28
900123b0:	6a1d      	ldr	r5, [r3, #32]
900123b2:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
900123b6:	47a8      	blx	r5
900123b8:	b003      	add	sp, #12
900123ba:	bd30      	pop	{r4, r5, pc}
900123bc:	240235ac 	.word	0x240235ac

900123c0 <_ZN8touchgfx3BoxD1Ev>:
900123c0:	4770      	bx	lr

900123c2 <_ZN8touchgfx3BoxD0Ev>:
900123c2:	b510      	push	{r4, lr}
900123c4:	4604      	mov	r4, r0
900123c6:	212c      	movs	r1, #44	; 0x2c
900123c8:	f013 ff4b 	bl	90026262 <_ZdlPvj>
900123cc:	4620      	mov	r0, r4
900123ce:	bd10      	pop	{r4, pc}

900123d0 <_ZNK8touchgfx3Box17invalidateContentEv>:
900123d0:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
900123d4:	b12a      	cbz	r2, 900123e2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
900123d6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
900123da:	b112      	cbz	r2, 900123e2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
900123dc:	6803      	ldr	r3, [r0, #0]
900123de:	695b      	ldr	r3, [r3, #20]
900123e0:	4718      	bx	r3
900123e2:	4770      	bx	lr

900123e4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
900123e4:	4b30      	ldr	r3, [pc, #192]	; (900124a8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
900123e6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900123ea:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
900123ec:	b08d      	sub	sp, #52	; 0x34
900123ee:	881b      	ldrh	r3, [r3, #0]
900123f0:	4604      	mov	r4, r0
900123f2:	460f      	mov	r7, r1
900123f4:	4293      	cmp	r3, r2
900123f6:	d954      	bls.n	900124a2 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
900123f8:	4b2c      	ldr	r3, [pc, #176]	; (900124ac <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
900123fa:	6819      	ldr	r1, [r3, #0]
900123fc:	eb01 0342 	add.w	r3, r1, r2, lsl #1
90012400:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
90012404:	4a2a      	ldr	r2, [pc, #168]	; (900124b0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
90012406:	6812      	ldr	r2, [r2, #0]
90012408:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
9001240c:	2900      	cmp	r1, #0
9001240e:	d048      	beq.n	900124a2 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90012410:	785a      	ldrb	r2, [r3, #1]
90012412:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
90012416:	f3c2 0801 	ubfx	r8, r2, #0, #2
9001241a:	f3c2 0281 	ubfx	r2, r2, #2, #2
9001241e:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
90012422:	4b24      	ldr	r3, [pc, #144]	; (900124b4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
90012424:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
90012428:	681a      	ldr	r2, [r3, #0]
9001242a:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
9001242e:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
90012432:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
90012436:	6b26      	ldr	r6, [r4, #48]	; 0x30
90012438:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
9001243c:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
90012440:	9107      	str	r1, [sp, #28]
90012442:	f88d 8020 	strb.w	r8, [sp, #32]
90012446:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
9001244a:	9609      	str	r6, [sp, #36]	; 0x24
9001244c:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
90012450:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
90012454:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
90012458:	b10b      	cbz	r3, 9001245e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
9001245a:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
9001245c:	b905      	cbnz	r5, 90012460 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
9001245e:	6895      	ldr	r5, [r2, #8]
90012460:	ae05      	add	r6, sp, #20
90012462:	4621      	mov	r1, r4
90012464:	4630      	mov	r0, r6
90012466:	f003 fec3 	bl	900161f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001246a:	4b13      	ldr	r3, [pc, #76]	; (900124b8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
9001246c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
9001246e:	6818      	ldr	r0, [r3, #0]
90012470:	f7f2 f94c 	bl	9000470c <_ZNK8touchgfx5Texts7getTextEt>
90012474:	6823      	ldr	r3, [r4, #0]
90012476:	4680      	mov	r8, r0
90012478:	4620      	mov	r0, r4
9001247a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
9001247c:	4798      	blx	r3
9001247e:	6823      	ldr	r3, [r4, #0]
90012480:	4681      	mov	r9, r0
90012482:	4620      	mov	r0, r4
90012484:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90012488:	4798      	blx	r3
9001248a:	ab07      	add	r3, sp, #28
9001248c:	f8cd 8004 	str.w	r8, [sp, #4]
90012490:	9300      	str	r3, [sp, #0]
90012492:	463b      	mov	r3, r7
90012494:	e9cd 9002 	strd	r9, r0, [sp, #8]
90012498:	4628      	mov	r0, r5
9001249a:	e896 0006 	ldmia.w	r6, {r1, r2}
9001249e:	f7f2 f8e5 	bl	9000466c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
900124a2:	b00d      	add	sp, #52	; 0x34
900124a4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900124a8:	24023608 	.word	0x24023608
900124ac:	24023604 	.word	0x24023604
900124b0:	2402360c 	.word	0x2402360c
900124b4:	240235ac 	.word	0x240235ac
900124b8:	24023610 	.word	0x24023610

900124bc <_ZN8touchgfx13BoxWithBorderD1Ev>:
900124bc:	4770      	bx	lr

900124be <_ZN8touchgfx13BoxWithBorderD0Ev>:
900124be:	b510      	push	{r4, lr}
900124c0:	4604      	mov	r4, r0
900124c2:	2134      	movs	r1, #52	; 0x34
900124c4:	f013 fecd 	bl	90026262 <_ZdlPvj>
900124c8:	4620      	mov	r0, r4
900124ca:	bd10      	pop	{r4, pc}

900124cc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
900124cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900124d0:	8e03      	ldrh	r3, [r0, #48]	; 0x30
900124d2:	4604      	mov	r4, r0
900124d4:	460e      	mov	r6, r1
900124d6:	b08e      	sub	sp, #56	; 0x38
900124d8:	b218      	sxth	r0, r3
900124da:	8921      	ldrh	r1, [r4, #8]
900124dc:	005b      	lsls	r3, r3, #1
900124de:	8962      	ldrh	r2, [r4, #10]
900124e0:	f8ad 0000 	strh.w	r0, [sp]
900124e4:	b29b      	uxth	r3, r3
900124e6:	f8ad 0002 	strh.w	r0, [sp, #2]
900124ea:	1ac9      	subs	r1, r1, r3
900124ec:	1ad3      	subs	r3, r2, r3
900124ee:	b209      	sxth	r1, r1
900124f0:	b21b      	sxth	r3, r3
900124f2:	2900      	cmp	r1, #0
900124f4:	f8ad 1004 	strh.w	r1, [sp, #4]
900124f8:	f8ad 3006 	strh.w	r3, [sp, #6]
900124fc:	dd5e      	ble.n	900125bc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
900124fe:	2b00      	cmp	r3, #0
90012500:	dd5c      	ble.n	900125bc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
90012502:	6830      	ldr	r0, [r6, #0]
90012504:	ab02      	add	r3, sp, #8
90012506:	6871      	ldr	r1, [r6, #4]
90012508:	c303      	stmia	r3!, {r0, r1}
9001250a:	4669      	mov	r1, sp
9001250c:	a802      	add	r0, sp, #8
9001250e:	f7fd fe3b 	bl	90010188 <_ZN8touchgfx4RectaNERKS0_>
90012512:	4620      	mov	r0, r4
90012514:	a902      	add	r1, sp, #8
90012516:	f7ff ff35 	bl	90012384 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
9001251a:	8e20      	ldrh	r0, [r4, #48]	; 0x30
9001251c:	2800      	cmp	r0, #0
9001251e:	d05f      	beq.n	900125e0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
90012520:	8963      	ldrh	r3, [r4, #10]
90012522:	b202      	sxth	r2, r0
90012524:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90012528:	2500      	movs	r5, #0
9001252a:	1a1f      	subs	r7, r3, r0
9001252c:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
90012530:	f8ad 101c 	strh.w	r1, [sp, #28]
90012534:	b21b      	sxth	r3, r3
90012536:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
9001253a:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
9001253e:	af04      	add	r7, sp, #16
90012540:	1a09      	subs	r1, r1, r0
90012542:	9506      	str	r5, [sp, #24]
90012544:	f8ad 201e 	strh.w	r2, [sp, #30]
90012548:	f8ad 5020 	strh.w	r5, [sp, #32]
9001254c:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
90012550:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
90012554:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
90012558:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
9001255c:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
90012560:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
90012564:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
90012568:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
9001256c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90012570:	ab06      	add	r3, sp, #24
90012572:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90012576:	e893 0003 	ldmia.w	r3, {r0, r1}
9001257a:	e887 0003 	stmia.w	r7, {r0, r1}
9001257e:	4631      	mov	r1, r6
90012580:	4638      	mov	r0, r7
90012582:	f7fd fe01 	bl	90010188 <_ZN8touchgfx4RectaNERKS0_>
90012586:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
9001258a:	2b00      	cmp	r3, #0
9001258c:	dd12      	ble.n	900125b4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
9001258e:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90012592:	2b00      	cmp	r3, #0
90012594:	dd0e      	ble.n	900125b4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
90012596:	6823      	ldr	r3, [r4, #0]
90012598:	4639      	mov	r1, r7
9001259a:	4620      	mov	r0, r4
9001259c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001259e:	4798      	blx	r3
900125a0:	f7fe f8d6 	bl	90010750 <_ZN8touchgfx3HAL3lcdEv>
900125a4:	6803      	ldr	r3, [r0, #0]
900125a6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
900125a8:	4639      	mov	r1, r7
900125aa:	f8d3 8020 	ldr.w	r8, [r3, #32]
900125ae:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
900125b2:	47c0      	blx	r8
900125b4:	3501      	adds	r5, #1
900125b6:	2d04      	cmp	r5, #4
900125b8:	d1da      	bne.n	90012570 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
900125ba:	e011      	b.n	900125e0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
900125bc:	6830      	ldr	r0, [r6, #0]
900125be:	ab06      	add	r3, sp, #24
900125c0:	6871      	ldr	r1, [r6, #4]
900125c2:	c303      	stmia	r3!, {r0, r1}
900125c4:	6823      	ldr	r3, [r4, #0]
900125c6:	a906      	add	r1, sp, #24
900125c8:	4620      	mov	r0, r4
900125ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900125cc:	4798      	blx	r3
900125ce:	f7fe f8bf 	bl	90010750 <_ZN8touchgfx3HAL3lcdEv>
900125d2:	6803      	ldr	r3, [r0, #0]
900125d4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
900125d6:	a906      	add	r1, sp, #24
900125d8:	6a1d      	ldr	r5, [r3, #32]
900125da:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
900125de:	47a8      	blx	r5
900125e0:	b00e      	add	sp, #56	; 0x38
900125e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900125e6 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
900125e6:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
900125ea:	4770      	bx	lr

900125ec <_ZNK8touchgfx6Button17invalidateContentEv>:
900125ec:	b508      	push	{r3, lr}
900125ee:	f890 3032 	ldrb.w	r3, [r0, #50]	; 0x32
900125f2:	b10b      	cbz	r3, 900125f8 <_ZNK8touchgfx6Button17invalidateContentEv+0xc>
900125f4:	f7ef fef4 	bl	900023e0 <_ZNK8touchgfx8Drawable17invalidateContentEv>
900125f8:	bd08      	pop	{r3, pc}

900125fa <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
900125fa:	4770      	bx	lr

900125fc <_ZN8touchgfx14ButtonWithIconD1Ev>:
900125fc:	4770      	bx	lr

900125fe <_ZN8touchgfx14ButtonWithIconD0Ev>:
900125fe:	b510      	push	{r4, lr}
90012600:	4604      	mov	r4, r0
90012602:	213c      	movs	r1, #60	; 0x3c
90012604:	f013 fe2d 	bl	90026262 <_ZdlPvj>
90012608:	4620      	mov	r0, r4
9001260a:	bd10      	pop	{r4, pc}

9001260c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
9001260c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012610:	461c      	mov	r4, r3
90012612:	4606      	mov	r6, r0
90012614:	9f06      	ldr	r7, [sp, #24]
90012616:	f013 fd74 	bl	90026102 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
9001261a:	8823      	ldrh	r3, [r4, #0]
9001261c:	f04f 0802 	mov.w	r8, #2
90012620:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
90012624:	4638      	mov	r0, r7
90012626:	86b3      	strh	r3, [r6, #52]	; 0x34
90012628:	883b      	ldrh	r3, [r7, #0]
9001262a:	fb95 f5f8 	sdiv	r5, r5, r8
9001262e:	86f3      	strh	r3, [r6, #54]	; 0x36
90012630:	b2ad      	uxth	r5, r5
90012632:	f005 fe09 	bl	90018248 <_ZNK8touchgfx6Bitmap8getWidthEv>
90012636:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
9001263a:	fb90 f0f8 	sdiv	r0, r0, r8
9001263e:	1a2d      	subs	r5, r5, r0
90012640:	4638      	mov	r0, r7
90012642:	fb94 f4f8 	sdiv	r4, r4, r8
90012646:	8735      	strh	r5, [r6, #56]	; 0x38
90012648:	b2a4      	uxth	r4, r4
9001264a:	f005 fe31 	bl	900182b0 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001264e:	fb90 f0f8 	sdiv	r0, r0, r8
90012652:	1a24      	subs	r4, r4, r0
90012654:	8774      	strh	r4, [r6, #58]	; 0x3a
90012656:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9001265a <_ZN8touchgfx14AbstractButton13executeActionEv>:
9001265a:	b510      	push	{r4, lr}
9001265c:	4604      	mov	r4, r0
9001265e:	6a80      	ldr	r0, [r0, #40]	; 0x28
90012660:	b150      	cbz	r0, 90012678 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
90012662:	6803      	ldr	r3, [r0, #0]
90012664:	68db      	ldr	r3, [r3, #12]
90012666:	4798      	blx	r3
90012668:	b130      	cbz	r0, 90012678 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
9001266a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9001266c:	4621      	mov	r1, r4
9001266e:	6803      	ldr	r3, [r0, #0]
90012670:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90012674:	689b      	ldr	r3, [r3, #8]
90012676:	4718      	bx	r3
90012678:	bd10      	pop	{r4, pc}
	...

9001267c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
9001267c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012680:	4604      	mov	r4, r0
90012682:	b08c      	sub	sp, #48	; 0x30
90012684:	460d      	mov	r5, r1
90012686:	f013 fd6f 	bl	90026168 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
9001268a:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
9001268e:	2b00      	cmp	r3, #0
90012690:	d05d      	beq.n	9001274e <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
90012692:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
90012694:	a805      	add	r0, sp, #20
90012696:	f8ad 3014 	strh.w	r3, [sp, #20]
9001269a:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
9001269e:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
900126a2:	f005 fdd1 	bl	90018248 <_ZNK8touchgfx6Bitmap8getWidthEv>
900126a6:	4606      	mov	r6, r0
900126a8:	a805      	add	r0, sp, #20
900126aa:	f005 fe01 	bl	900182b0 <_ZNK8touchgfx6Bitmap9getHeightEv>
900126ae:	6869      	ldr	r1, [r5, #4]
900126b0:	f8ad 001e 	strh.w	r0, [sp, #30]
900126b4:	ab08      	add	r3, sp, #32
900126b6:	6828      	ldr	r0, [r5, #0]
900126b8:	ad08      	add	r5, sp, #32
900126ba:	f8ad 8018 	strh.w	r8, [sp, #24]
900126be:	f8ad 701a 	strh.w	r7, [sp, #26]
900126c2:	f8ad 601c 	strh.w	r6, [sp, #28]
900126c6:	c303      	stmia	r3!, {r0, r1}
900126c8:	a906      	add	r1, sp, #24
900126ca:	4628      	mov	r0, r5
900126cc:	f7fd fd5c 	bl	90010188 <_ZN8touchgfx4RectaNERKS0_>
900126d0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
900126d4:	f64f 73ff 	movw	r3, #65535	; 0xffff
900126d8:	429a      	cmp	r2, r3
900126da:	d035      	beq.n	90012748 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
900126dc:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
900126e0:	2b00      	cmp	r3, #0
900126e2:	dd31      	ble.n	90012748 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
900126e4:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
900126e8:	2b00      	cmp	r3, #0
900126ea:	dd2d      	ble.n	90012748 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
900126ec:	2300      	movs	r3, #0
900126ee:	a90a      	add	r1, sp, #40	; 0x28
900126f0:	4620      	mov	r0, r4
900126f2:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
900126f6:	6823      	ldr	r3, [r4, #0]
900126f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900126fa:	4798      	blx	r3
900126fc:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90012700:	8f22      	ldrh	r2, [r4, #56]	; 0x38
90012702:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
90012706:	1a9b      	subs	r3, r3, r2
90012708:	f8ad 3020 	strh.w	r3, [sp, #32]
9001270c:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
9001270e:	1ac9      	subs	r1, r1, r3
90012710:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
90012714:	490f      	ldr	r1, [pc, #60]	; (90012754 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
90012716:	6809      	ldr	r1, [r1, #0]
90012718:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
9001271c:	b108      	cbz	r0, 90012722 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
9001271e:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
90012720:	b900      	cbnz	r0, 90012724 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
90012722:	6888      	ldr	r0, [r1, #8]
90012724:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
90012728:	2601      	movs	r6, #1
9001272a:	440b      	add	r3, r1
9001272c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
90012730:	440a      	add	r2, r1
90012732:	6801      	ldr	r1, [r0, #0]
90012734:	9602      	str	r6, [sp, #8]
90012736:	b21b      	sxth	r3, r3
90012738:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
9001273c:	b212      	sxth	r2, r2
9001273e:	e9cd 5400 	strd	r5, r4, [sp]
90012742:	688c      	ldr	r4, [r1, #8]
90012744:	a905      	add	r1, sp, #20
90012746:	47a0      	blx	r4
90012748:	b00c      	add	sp, #48	; 0x30
9001274a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001274e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
90012750:	e7a0      	b.n	90012694 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
90012752:	bf00      	nop
90012754:	240235ac 	.word	0x240235ac

90012758 <_ZN8touchgfx14ButtonWithIconC1Ev>:
90012758:	2101      	movs	r1, #1
9001275a:	2200      	movs	r2, #0
9001275c:	b510      	push	{r4, lr}
9001275e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
90012762:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
90012766:	f64f 71ff 	movw	r1, #65535	; 0xffff
9001276a:	4c0d      	ldr	r4, [pc, #52]	; (900127a0 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
9001276c:	8082      	strh	r2, [r0, #4]
9001276e:	80c2      	strh	r2, [r0, #6]
90012770:	8102      	strh	r2, [r0, #8]
90012772:	8142      	strh	r2, [r0, #10]
90012774:	8182      	strh	r2, [r0, #12]
90012776:	81c2      	strh	r2, [r0, #14]
90012778:	8202      	strh	r2, [r0, #16]
9001277a:	8242      	strh	r2, [r0, #18]
9001277c:	61c2      	str	r2, [r0, #28]
9001277e:	8402      	strh	r2, [r0, #32]
90012780:	8442      	strh	r2, [r0, #34]	; 0x22
90012782:	6282      	str	r2, [r0, #40]	; 0x28
90012784:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
90012788:	85c1      	strh	r1, [r0, #46]	; 0x2e
9001278a:	8601      	strh	r1, [r0, #48]	; 0x30
9001278c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
90012790:	6004      	str	r4, [r0, #0]
90012792:	8681      	strh	r1, [r0, #52]	; 0x34
90012794:	86c1      	strh	r1, [r0, #54]	; 0x36
90012796:	8702      	strh	r2, [r0, #56]	; 0x38
90012798:	8742      	strh	r2, [r0, #58]	; 0x3a
9001279a:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001279e:	bd10      	pop	{r4, pc}
900127a0:	9002a74c 	.word	0x9002a74c

900127a4 <_ZN8touchgfx5ImageD1Ev>:
900127a4:	4770      	bx	lr

900127a6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
900127a6:	b570      	push	{r4, r5, r6, lr}
900127a8:	880b      	ldrh	r3, [r1, #0]
900127aa:	460d      	mov	r5, r1
900127ac:	4604      	mov	r4, r0
900127ae:	84c3      	strh	r3, [r0, #38]	; 0x26
900127b0:	4608      	mov	r0, r1
900127b2:	f005 fd49 	bl	90018248 <_ZNK8touchgfx6Bitmap8getWidthEv>
900127b6:	4606      	mov	r6, r0
900127b8:	4628      	mov	r0, r5
900127ba:	f005 fd79 	bl	900182b0 <_ZNK8touchgfx6Bitmap9getHeightEv>
900127be:	6823      	ldr	r3, [r4, #0]
900127c0:	4605      	mov	r5, r0
900127c2:	4631      	mov	r1, r6
900127c4:	4620      	mov	r0, r4
900127c6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900127c8:	4798      	blx	r3
900127ca:	6823      	ldr	r3, [r4, #0]
900127cc:	4629      	mov	r1, r5
900127ce:	4620      	mov	r0, r4
900127d0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900127d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900127d6:	4718      	bx	r3

900127d8 <_ZN8touchgfx5ImageD0Ev>:
900127d8:	b510      	push	{r4, lr}
900127da:	4604      	mov	r4, r0
900127dc:	212c      	movs	r1, #44	; 0x2c
900127de:	f013 fd40 	bl	90026262 <_ZdlPvj>
900127e2:	4620      	mov	r0, r4
900127e4:	bd10      	pop	{r4, pc}

900127e6 <_ZNK8touchgfx5Image12getSolidRectEv>:
900127e6:	b510      	push	{r4, lr}
900127e8:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
900127ec:	4604      	mov	r4, r0
900127ee:	2bff      	cmp	r3, #255	; 0xff
900127f0:	d006      	beq.n	90012800 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
900127f2:	2300      	movs	r3, #0
900127f4:	8003      	strh	r3, [r0, #0]
900127f6:	8043      	strh	r3, [r0, #2]
900127f8:	8083      	strh	r3, [r0, #4]
900127fa:	80c3      	strh	r3, [r0, #6]
900127fc:	4620      	mov	r0, r4
900127fe:	bd10      	pop	{r4, pc}
90012800:	3126      	adds	r1, #38	; 0x26
90012802:	f005 fd89 	bl	90018318 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90012806:	e7f9      	b.n	900127fc <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

90012808 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
90012808:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001280c:	4604      	mov	r4, r0
9001280e:	b088      	sub	sp, #32
90012810:	2500      	movs	r5, #0
90012812:	460f      	mov	r7, r1
90012814:	f854 3b26 	ldr.w	r3, [r4], #38
90012818:	a904      	add	r1, sp, #16
9001281a:	4606      	mov	r6, r0
9001281c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001281e:	e9cd 5504 	strd	r5, r5, [sp, #16]
90012822:	4798      	blx	r3
90012824:	4620      	mov	r0, r4
90012826:	f005 fd0f 	bl	90018248 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001282a:	4680      	mov	r8, r0
9001282c:	4620      	mov	r0, r4
9001282e:	f005 fd3f 	bl	900182b0 <_ZNK8touchgfx6Bitmap9getHeightEv>
90012832:	9506      	str	r5, [sp, #24]
90012834:	ad06      	add	r5, sp, #24
90012836:	f8ad 001e 	strh.w	r0, [sp, #30]
9001283a:	4639      	mov	r1, r7
9001283c:	f8ad 801c 	strh.w	r8, [sp, #28]
90012840:	4628      	mov	r0, r5
90012842:	f7fd fca1 	bl	90010188 <_ZN8touchgfx4RectaNERKS0_>
90012846:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001284a:	2b00      	cmp	r3, #0
9001284c:	dd19      	ble.n	90012882 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
9001284e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90012852:	2b00      	cmp	r3, #0
90012854:	dd15      	ble.n	90012882 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
90012856:	4b0c      	ldr	r3, [pc, #48]	; (90012888 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
90012858:	681b      	ldr	r3, [r3, #0]
9001285a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
9001285e:	b10a      	cbz	r2, 90012864 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
90012860:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90012862:	b900      	cbnz	r0, 90012866 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
90012864:	6898      	ldr	r0, [r3, #8]
90012866:	2701      	movs	r7, #1
90012868:	6801      	ldr	r1, [r0, #0]
9001286a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001286e:	9702      	str	r7, [sp, #8]
90012870:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
90012874:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90012878:	e9cd 5600 	strd	r5, r6, [sp]
9001287c:	688d      	ldr	r5, [r1, #8]
9001287e:	4621      	mov	r1, r4
90012880:	47a8      	blx	r5
90012882:	b008      	add	sp, #32
90012884:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90012888:	240235ac 	.word	0x240235ac

9001288c <_ZN8touchgfx7OutlineD1Ev>:
9001288c:	4770      	bx	lr

9001288e <_ZN8touchgfx7OutlineD0Ev>:
9001288e:	b510      	push	{r4, lr}
90012890:	4604      	mov	r4, r0
90012892:	2130      	movs	r1, #48	; 0x30
90012894:	f013 fce5 	bl	90026262 <_ZdlPvj>
90012898:	4620      	mov	r0, r4
9001289a:	bd10      	pop	{r4, pc}

9001289c <_ZN8touchgfx7Outline5resetEv>:
9001289c:	b510      	push	{r4, lr}
9001289e:	4604      	mov	r4, r0
900128a0:	f000 fe86 	bl	900135b0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
900128a4:	60e0      	str	r0, [r4, #12]
900128a6:	f000 fe89 	bl	900135bc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
900128aa:	68e3      	ldr	r3, [r4, #12]
900128ac:	08c0      	lsrs	r0, r0, #3
900128ae:	2200      	movs	r2, #0
900128b0:	f647 71ff 	movw	r1, #32767	; 0x7fff
900128b4:	6123      	str	r3, [r4, #16]
900128b6:	3801      	subs	r0, #1
900128b8:	60a2      	str	r2, [r4, #8]
900128ba:	6060      	str	r0, [r4, #4]
900128bc:	8019      	strh	r1, [r3, #0]
900128be:	8059      	strh	r1, [r3, #2]
900128c0:	809a      	strh	r2, [r3, #4]
900128c2:	80da      	strh	r2, [r3, #6]
900128c4:	6a63      	ldr	r3, [r4, #36]	; 0x24
900128c6:	f023 0301 	bic.w	r3, r3, #1
900128ca:	f043 0302 	orr.w	r3, r3, #2
900128ce:	6263      	str	r3, [r4, #36]	; 0x24
900128d0:	bd10      	pop	{r4, pc}
	...

900128d4 <_ZN8touchgfx7OutlineC1Ev>:
900128d4:	4b0a      	ldr	r3, [pc, #40]	; (90012900 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
900128d6:	b510      	push	{r4, lr}
900128d8:	6003      	str	r3, [r0, #0]
900128da:	2300      	movs	r3, #0
900128dc:	4604      	mov	r4, r0
900128de:	6243      	str	r3, [r0, #36]	; 0x24
900128e0:	e9c0 3301 	strd	r3, r3, [r0, #4]
900128e4:	e9c0 3303 	strd	r3, r3, [r0, #12]
900128e8:	e9c0 3305 	strd	r3, r3, [r0, #20]
900128ec:	e9c0 3307 	strd	r3, r3, [r0, #28]
900128f0:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
900128f4:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
900128f8:	f7ff ffd0 	bl	9001289c <_ZN8touchgfx7Outline5resetEv>
900128fc:	4620      	mov	r0, r4
900128fe:	bd10      	pop	{r4, pc}
90012900:	9002a830 	.word	0x9002a830

90012904 <_ZN8touchgfx7Outline10renderLineEiiii>:
90012904:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012908:	b093      	sub	sp, #76	; 0x4c
9001290a:	1156      	asrs	r6, r2, #5
9001290c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
9001290e:	9305      	str	r3, [sp, #20]
90012910:	1153      	asrs	r3, r2, #5
90012912:	f004 051f 	and.w	r5, r4, #31
90012916:	9303      	str	r3, [sp, #12]
90012918:	1163      	asrs	r3, r4, #5
9001291a:	9504      	str	r5, [sp, #16]
9001291c:	1165      	asrs	r5, r4, #5
9001291e:	9306      	str	r3, [sp, #24]
90012920:	f002 031f 	and.w	r3, r2, #31
90012924:	42ae      	cmp	r6, r5
90012926:	f040 80f4 	bne.w	90012b12 <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
9001292a:	9c04      	ldr	r4, [sp, #16]
9001292c:	9a05      	ldr	r2, [sp, #20]
9001292e:	42a3      	cmp	r3, r4
90012930:	ea4f 1e62 	mov.w	lr, r2, asr #5
90012934:	6902      	ldr	r2, [r0, #16]
90012936:	d125      	bne.n	90012984 <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
90012938:	f9b2 3000 	ldrsh.w	r3, [r2]
9001293c:	459e      	cmp	lr, r3
9001293e:	d103      	bne.n	90012948 <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
90012940:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90012944:	429e      	cmp	r6, r3
90012946:	d035      	beq.n	900129b4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90012948:	88d1      	ldrh	r1, [r2, #6]
9001294a:	8893      	ldrh	r3, [r2, #4]
9001294c:	430b      	orrs	r3, r1
9001294e:	d010      	beq.n	90012972 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90012950:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90012954:	2b00      	cmp	r3, #0
90012956:	db0c      	blt.n	90012972 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90012958:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9001295a:	428b      	cmp	r3, r1
9001295c:	da09      	bge.n	90012972 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
9001295e:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90012962:	428b      	cmp	r3, r1
90012964:	f103 0301 	add.w	r3, r3, #1
90012968:	bf38      	it	cc
9001296a:	3208      	addcc	r2, #8
9001296c:	6083      	str	r3, [r0, #8]
9001296e:	bf38      	it	cc
90012970:	6102      	strcc	r2, [r0, #16]
90012972:	6903      	ldr	r3, [r0, #16]
90012974:	9a03      	ldr	r2, [sp, #12]
90012976:	f8a3 e000 	strh.w	lr, [r3]
9001297a:	805a      	strh	r2, [r3, #2]
9001297c:	2200      	movs	r2, #0
9001297e:	809a      	strh	r2, [r3, #4]
90012980:	80da      	strh	r2, [r3, #6]
90012982:	e017      	b.n	900129b4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90012984:	9c05      	ldr	r4, [sp, #20]
90012986:	114e      	asrs	r6, r1, #5
90012988:	f001 0c1f 	and.w	ip, r1, #31
9001298c:	f8b2 8004 	ldrh.w	r8, [r2, #4]
90012990:	f004 041f 	and.w	r4, r4, #31
90012994:	4576      	cmp	r6, lr
90012996:	f8b2 a006 	ldrh.w	sl, [r2, #6]
9001299a:	9402      	str	r4, [sp, #8]
9001299c:	9c04      	ldr	r4, [sp, #16]
9001299e:	eba4 0403 	sub.w	r4, r4, r3
900129a2:	d10a      	bne.n	900129ba <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
900129a4:	9b02      	ldr	r3, [sp, #8]
900129a6:	44a0      	add	r8, r4
900129a8:	449c      	add	ip, r3
900129aa:	f8a2 8004 	strh.w	r8, [r2, #4]
900129ae:	fb04 a40c 	mla	r4, r4, ip, sl
900129b2:	80d4      	strh	r4, [r2, #6]
900129b4:	b013      	add	sp, #76	; 0x4c
900129b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900129ba:	9d05      	ldr	r5, [sp, #20]
900129bc:	1a69      	subs	r1, r5, r1
900129be:	bf51      	iteee	pl
900129c0:	f1cc 0520 	rsbpl	r5, ip, #32
900129c4:	fb04 f40c 	mulmi.w	r4, r4, ip
900129c8:	4249      	negmi	r1, r1
900129ca:	2500      	movmi	r5, #0
900129cc:	bf5d      	ittte	pl
900129ce:	436c      	mulpl	r4, r5
900129d0:	2520      	movpl	r5, #32
900129d2:	f04f 0901 	movpl.w	r9, #1
900129d6:	f04f 39ff 	movmi.w	r9, #4294967295
900129da:	9501      	str	r5, [sp, #4]
900129dc:	9f01      	ldr	r7, [sp, #4]
900129de:	444e      	add	r6, r9
900129e0:	fb94 f5f1 	sdiv	r5, r4, r1
900129e4:	fb01 4415 	mls	r4, r1, r5, r4
900129e8:	44bc      	add	ip, r7
900129ea:	2c00      	cmp	r4, #0
900129ec:	bfbc      	itt	lt
900129ee:	f105 35ff 	addlt.w	r5, r5, #4294967295
900129f2:	1864      	addlt	r4, r4, r1
900129f4:	44a8      	add	r8, r5
900129f6:	fb05 ac0c 	mla	ip, r5, ip, sl
900129fa:	f8a2 8004 	strh.w	r8, [r2, #4]
900129fe:	f8a2 c006 	strh.w	ip, [r2, #6]
90012a02:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012a06:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90012a0a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
90012a0e:	ea58 0202 	orrs.w	r2, r8, r2
90012a12:	d011      	beq.n	90012a38 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90012a14:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90012a18:	f1b8 0f00 	cmp.w	r8, #0
90012a1c:	db0c      	blt.n	90012a38 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90012a1e:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
90012a20:	4590      	cmp	r8, r2
90012a22:	da09      	bge.n	90012a38 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90012a24:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
90012a28:	4590      	cmp	r8, r2
90012a2a:	bf3c      	itt	cc
90012a2c:	f10c 0208 	addcc.w	r2, ip, #8
90012a30:	6102      	strcc	r2, [r0, #16]
90012a32:	f108 0201 	add.w	r2, r8, #1
90012a36:	6082      	str	r2, [r0, #8]
90012a38:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012a3c:	2700      	movs	r7, #0
90012a3e:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90012a42:	45b6      	cmp	lr, r6
90012a44:	f8ac 6000 	strh.w	r6, [ip]
90012a48:	442b      	add	r3, r5
90012a4a:	f8ac 2002 	strh.w	r2, [ip, #2]
90012a4e:	f8ac 7004 	strh.w	r7, [ip, #4]
90012a52:	f8ac 7006 	strh.w	r7, [ip, #6]
90012a56:	d04b      	beq.n	90012af0 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
90012a58:	9f04      	ldr	r7, [sp, #16]
90012a5a:	1a64      	subs	r4, r4, r1
90012a5c:	f04f 0a00 	mov.w	sl, #0
90012a60:	1aff      	subs	r7, r7, r3
90012a62:	443d      	add	r5, r7
90012a64:	016d      	lsls	r5, r5, #5
90012a66:	fb95 f8f1 	sdiv	r8, r5, r1
90012a6a:	fb01 5518 	mls	r5, r1, r8, r5
90012a6e:	2d00      	cmp	r5, #0
90012a70:	bfbc      	itt	lt
90012a72:	f108 38ff 	addlt.w	r8, r8, #4294967295
90012a76:	186d      	addlt	r5, r5, r1
90012a78:	f108 0701 	add.w	r7, r8, #1
90012a7c:	9703      	str	r7, [sp, #12]
90012a7e:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012a82:	1964      	adds	r4, r4, r5
90012a84:	444e      	add	r6, r9
90012a86:	bf54      	ite	pl
90012a88:	9f03      	ldrpl	r7, [sp, #12]
90012a8a:	4647      	movmi	r7, r8
90012a8c:	f8bc b004 	ldrh.w	fp, [ip, #4]
90012a90:	bf58      	it	pl
90012a92:	1a64      	subpl	r4, r4, r1
90012a94:	443b      	add	r3, r7
90012a96:	44bb      	add	fp, r7
90012a98:	f8ac b004 	strh.w	fp, [ip, #4]
90012a9c:	f8bc b006 	ldrh.w	fp, [ip, #6]
90012aa0:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90012aa4:	f8ac b006 	strh.w	fp, [ip, #6]
90012aa8:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012aac:	f8bc b006 	ldrh.w	fp, [ip, #6]
90012ab0:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90012ab4:	ea5b 0707 	orrs.w	r7, fp, r7
90012ab8:	d011      	beq.n	90012ade <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90012aba:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90012abe:	f1bb 0f00 	cmp.w	fp, #0
90012ac2:	db0c      	blt.n	90012ade <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90012ac4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90012ac6:	45bb      	cmp	fp, r7
90012ac8:	da09      	bge.n	90012ade <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90012aca:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90012ace:	45bb      	cmp	fp, r7
90012ad0:	bf3c      	itt	cc
90012ad2:	f10c 0708 	addcc.w	r7, ip, #8
90012ad6:	6107      	strcc	r7, [r0, #16]
90012ad8:	f10b 0701 	add.w	r7, fp, #1
90012adc:	6087      	str	r7, [r0, #8]
90012ade:	6907      	ldr	r7, [r0, #16]
90012ae0:	45b6      	cmp	lr, r6
90012ae2:	803e      	strh	r6, [r7, #0]
90012ae4:	807a      	strh	r2, [r7, #2]
90012ae6:	f8a7 a004 	strh.w	sl, [r7, #4]
90012aea:	f8a7 a006 	strh.w	sl, [r7, #6]
90012aee:	d1c6      	bne.n	90012a7e <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
90012af0:	9a04      	ldr	r2, [sp, #16]
90012af2:	1ad3      	subs	r3, r2, r3
90012af4:	6902      	ldr	r2, [r0, #16]
90012af6:	8891      	ldrh	r1, [r2, #4]
90012af8:	88d6      	ldrh	r6, [r2, #6]
90012afa:	4419      	add	r1, r3
90012afc:	8091      	strh	r1, [r2, #4]
90012afe:	9902      	ldr	r1, [sp, #8]
90012b00:	f101 0c20 	add.w	ip, r1, #32
90012b04:	9901      	ldr	r1, [sp, #4]
90012b06:	ebac 0c01 	sub.w	ip, ip, r1
90012b0a:	fb03 630c 	mla	r3, r3, ip, r6
90012b0e:	80d3      	strh	r3, [r2, #6]
90012b10:	e750      	b.n	900129b4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90012b12:	9d05      	ldr	r5, [sp, #20]
90012b14:	1aa2      	subs	r2, r4, r2
90012b16:	eba5 0501 	sub.w	r5, r5, r1
90012b1a:	9202      	str	r2, [sp, #8]
90012b1c:	9508      	str	r5, [sp, #32]
90012b1e:	f140 8128 	bpl.w	90012d72 <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
90012b22:	9a03      	ldr	r2, [sp, #12]
90012b24:	2a00      	cmp	r2, #0
90012b26:	f6ff af45 	blt.w	900129b4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90012b2a:	9a02      	ldr	r2, [sp, #8]
90012b2c:	f04f 34ff 	mov.w	r4, #4294967295
90012b30:	4252      	negs	r2, r2
90012b32:	940b      	str	r4, [sp, #44]	; 0x2c
90012b34:	2400      	movs	r4, #0
90012b36:	9202      	str	r2, [sp, #8]
90012b38:	9a06      	ldr	r2, [sp, #24]
90012b3a:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
90012b3e:	9206      	str	r2, [sp, #24]
90012b40:	462a      	mov	r2, r5
90012b42:	435a      	muls	r2, r3
90012b44:	9401      	str	r4, [sp, #4]
90012b46:	9c02      	ldr	r4, [sp, #8]
90012b48:	9d02      	ldr	r5, [sp, #8]
90012b4a:	fb92 f4f4 	sdiv	r4, r2, r4
90012b4e:	fb05 2214 	mls	r2, r5, r4, r2
90012b52:	2a00      	cmp	r2, #0
90012b54:	9207      	str	r2, [sp, #28]
90012b56:	bfbc      	itt	lt
90012b58:	1952      	addlt	r2, r2, r5
90012b5a:	f104 34ff 	addlt.w	r4, r4, #4294967295
90012b5e:	6905      	ldr	r5, [r0, #16]
90012b60:	bfb8      	it	lt
90012b62:	9207      	strlt	r2, [sp, #28]
90012b64:	eb04 0901 	add.w	r9, r4, r1
90012b68:	9a01      	ldr	r2, [sp, #4]
90012b6a:	ea4f 1669 	mov.w	r6, r9, asr #5
90012b6e:	429a      	cmp	r2, r3
90012b70:	f040 8111 	bne.w	90012d96 <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
90012b74:	f9b5 3000 	ldrsh.w	r3, [r5]
90012b78:	429e      	cmp	r6, r3
90012b7a:	d104      	bne.n	90012b86 <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
90012b7c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90012b80:	9a03      	ldr	r2, [sp, #12]
90012b82:	429a      	cmp	r2, r3
90012b84:	d01b      	beq.n	90012bbe <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90012b86:	88ea      	ldrh	r2, [r5, #6]
90012b88:	88ab      	ldrh	r3, [r5, #4]
90012b8a:	4313      	orrs	r3, r2
90012b8c:	d010      	beq.n	90012bb0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90012b8e:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90012b92:	2a00      	cmp	r2, #0
90012b94:	db0c      	blt.n	90012bb0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90012b96:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90012b98:	429a      	cmp	r2, r3
90012b9a:	da09      	bge.n	90012bb0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90012b9c:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
90012ba0:	429a      	cmp	r2, r3
90012ba2:	f102 0201 	add.w	r2, r2, #1
90012ba6:	bf38      	it	cc
90012ba8:	3508      	addcc	r5, #8
90012baa:	6082      	str	r2, [r0, #8]
90012bac:	bf38      	it	cc
90012bae:	6105      	strcc	r5, [r0, #16]
90012bb0:	6903      	ldr	r3, [r0, #16]
90012bb2:	9a03      	ldr	r2, [sp, #12]
90012bb4:	801e      	strh	r6, [r3, #0]
90012bb6:	805a      	strh	r2, [r3, #2]
90012bb8:	2200      	movs	r2, #0
90012bba:	809a      	strh	r2, [r3, #4]
90012bbc:	80da      	strh	r2, [r3, #6]
90012bbe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90012bc0:	9a03      	ldr	r2, [sp, #12]
90012bc2:	6901      	ldr	r1, [r0, #16]
90012bc4:	441a      	add	r2, r3
90012bc6:	f9b1 3000 	ldrsh.w	r3, [r1]
90012bca:	42b3      	cmp	r3, r6
90012bcc:	d103      	bne.n	90012bd6 <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
90012bce:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90012bd2:	429a      	cmp	r2, r3
90012bd4:	d01a      	beq.n	90012c0c <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
90012bd6:	88cc      	ldrh	r4, [r1, #6]
90012bd8:	888b      	ldrh	r3, [r1, #4]
90012bda:	4323      	orrs	r3, r4
90012bdc:	d010      	beq.n	90012c00 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90012bde:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90012be2:	2c00      	cmp	r4, #0
90012be4:	db0c      	blt.n	90012c00 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90012be6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90012be8:	429c      	cmp	r4, r3
90012bea:	da09      	bge.n	90012c00 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90012bec:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90012bf0:	429c      	cmp	r4, r3
90012bf2:	f104 0401 	add.w	r4, r4, #1
90012bf6:	bf38      	it	cc
90012bf8:	3108      	addcc	r1, #8
90012bfa:	6084      	str	r4, [r0, #8]
90012bfc:	bf38      	it	cc
90012bfe:	6101      	strcc	r1, [r0, #16]
90012c00:	6903      	ldr	r3, [r0, #16]
90012c02:	2100      	movs	r1, #0
90012c04:	801e      	strh	r6, [r3, #0]
90012c06:	805a      	strh	r2, [r3, #2]
90012c08:	8099      	strh	r1, [r3, #4]
90012c0a:	80d9      	strh	r1, [r3, #6]
90012c0c:	9b06      	ldr	r3, [sp, #24]
90012c0e:	4293      	cmp	r3, r2
90012c10:	f000 8082 	beq.w	90012d18 <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
90012c14:	9b08      	ldr	r3, [sp, #32]
90012c16:	9902      	ldr	r1, [sp, #8]
90012c18:	015b      	lsls	r3, r3, #5
90012c1a:	9c02      	ldr	r4, [sp, #8]
90012c1c:	fb93 f1f1 	sdiv	r1, r3, r1
90012c20:	fb04 3311 	mls	r3, r4, r1, r3
90012c24:	9103      	str	r1, [sp, #12]
90012c26:	2b00      	cmp	r3, #0
90012c28:	9308      	str	r3, [sp, #32]
90012c2a:	da04      	bge.n	90012c36 <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
90012c2c:	1e4b      	subs	r3, r1, #1
90012c2e:	9303      	str	r3, [sp, #12]
90012c30:	9b08      	ldr	r3, [sp, #32]
90012c32:	4423      	add	r3, r4
90012c34:	9308      	str	r3, [sp, #32]
90012c36:	9b07      	ldr	r3, [sp, #28]
90012c38:	464f      	mov	r7, r9
90012c3a:	9902      	ldr	r1, [sp, #8]
90012c3c:	2600      	movs	r6, #0
90012c3e:	1a5b      	subs	r3, r3, r1
90012c40:	9307      	str	r3, [sp, #28]
90012c42:	9b01      	ldr	r3, [sp, #4]
90012c44:	f1c3 0320 	rsb	r3, r3, #32
90012c48:	930e      	str	r3, [sp, #56]	; 0x38
90012c4a:	990e      	ldr	r1, [sp, #56]	; 0x38
90012c4c:	9b01      	ldr	r3, [sp, #4]
90012c4e:	1a5b      	subs	r3, r3, r1
90012c50:	930a      	str	r3, [sp, #40]	; 0x28
90012c52:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
90012c56:	185b      	adds	r3, r3, r1
90012c58:	bf58      	it	pl
90012c5a:	9902      	ldrpl	r1, [sp, #8]
90012c5c:	9307      	str	r3, [sp, #28]
90012c5e:	bf57      	itett	pl
90012c60:	1a5b      	subpl	r3, r3, r1
90012c62:	9903      	ldrmi	r1, [sp, #12]
90012c64:	9307      	strpl	r3, [sp, #28]
90012c66:	9b03      	ldrpl	r3, [sp, #12]
90012c68:	bf58      	it	pl
90012c6a:	1c59      	addpl	r1, r3, #1
90012c6c:	2a00      	cmp	r2, #0
90012c6e:	4489      	add	r9, r1
90012c70:	ea4f 1a69 	mov.w	sl, r9, asr #5
90012c74:	db2e      	blt.n	90012cd4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90012c76:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90012c78:	4293      	cmp	r3, r2
90012c7a:	dd2b      	ble.n	90012cd4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90012c7c:	9c01      	ldr	r4, [sp, #4]
90012c7e:	6905      	ldr	r5, [r0, #16]
90012c80:	46a0      	mov	r8, r4
90012c82:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90012c84:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
90012c88:	45a0      	cmp	r8, r4
90012c8a:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
90012c8e:	f040 814c 	bne.w	90012f2a <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
90012c92:	f9b5 1000 	ldrsh.w	r1, [r5]
90012c96:	4551      	cmp	r1, sl
90012c98:	d103      	bne.n	90012ca2 <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
90012c9a:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90012c9e:	4291      	cmp	r1, r2
90012ca0:	d018      	beq.n	90012cd4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90012ca2:	ea5c 010e 	orrs.w	r1, ip, lr
90012ca6:	d00f      	beq.n	90012cc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90012ca8:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90012cac:	2900      	cmp	r1, #0
90012cae:	db0b      	blt.n	90012cc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90012cb0:	428b      	cmp	r3, r1
90012cb2:	dd09      	ble.n	90012cc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90012cb4:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90012cb8:	4299      	cmp	r1, r3
90012cba:	f101 0101 	add.w	r1, r1, #1
90012cbe:	bf38      	it	cc
90012cc0:	3508      	addcc	r5, #8
90012cc2:	6081      	str	r1, [r0, #8]
90012cc4:	bf38      	it	cc
90012cc6:	6105      	strcc	r5, [r0, #16]
90012cc8:	6903      	ldr	r3, [r0, #16]
90012cca:	f8a3 a000 	strh.w	sl, [r3]
90012cce:	805a      	strh	r2, [r3, #2]
90012cd0:	809e      	strh	r6, [r3, #4]
90012cd2:	80de      	strh	r6, [r3, #6]
90012cd4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90012cd6:	6901      	ldr	r1, [r0, #16]
90012cd8:	441a      	add	r2, r3
90012cda:	88cc      	ldrh	r4, [r1, #6]
90012cdc:	888b      	ldrh	r3, [r1, #4]
90012cde:	4323      	orrs	r3, r4
90012ce0:	d010      	beq.n	90012d04 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90012ce2:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90012ce6:	2c00      	cmp	r4, #0
90012ce8:	db0c      	blt.n	90012d04 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90012cea:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90012cec:	429c      	cmp	r4, r3
90012cee:	da09      	bge.n	90012d04 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90012cf0:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90012cf4:	429c      	cmp	r4, r3
90012cf6:	f104 0401 	add.w	r4, r4, #1
90012cfa:	bf38      	it	cc
90012cfc:	3108      	addcc	r1, #8
90012cfe:	6084      	str	r4, [r0, #8]
90012d00:	bf38      	it	cc
90012d02:	6101      	strcc	r1, [r0, #16]
90012d04:	6903      	ldr	r3, [r0, #16]
90012d06:	464f      	mov	r7, r9
90012d08:	f8a3 a000 	strh.w	sl, [r3]
90012d0c:	805a      	strh	r2, [r3, #2]
90012d0e:	809e      	strh	r6, [r3, #4]
90012d10:	80de      	strh	r6, [r3, #6]
90012d12:	9b06      	ldr	r3, [sp, #24]
90012d14:	4293      	cmp	r3, r2
90012d16:	d19c      	bne.n	90012c52 <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
90012d18:	9b01      	ldr	r3, [sp, #4]
90012d1a:	6907      	ldr	r7, [r0, #16]
90012d1c:	f1c3 0620 	rsb	r6, r3, #32
90012d20:	9b05      	ldr	r3, [sp, #20]
90012d22:	ea4f 1e63 	mov.w	lr, r3, asr #5
90012d26:	9b04      	ldr	r3, [sp, #16]
90012d28:	429e      	cmp	r6, r3
90012d2a:	f040 81c7 	bne.w	900130bc <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
90012d2e:	f9b7 3000 	ldrsh.w	r3, [r7]
90012d32:	459e      	cmp	lr, r3
90012d34:	d104      	bne.n	90012d40 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
90012d36:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90012d3a:	429a      	cmp	r2, r3
90012d3c:	f43f ae3a 	beq.w	900129b4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90012d40:	88f9      	ldrh	r1, [r7, #6]
90012d42:	88bb      	ldrh	r3, [r7, #4]
90012d44:	430b      	orrs	r3, r1
90012d46:	d010      	beq.n	90012d6a <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90012d48:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90012d4c:	2b00      	cmp	r3, #0
90012d4e:	db0c      	blt.n	90012d6a <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90012d50:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
90012d52:	428b      	cmp	r3, r1
90012d54:	da09      	bge.n	90012d6a <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90012d56:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90012d5a:	428b      	cmp	r3, r1
90012d5c:	f103 0301 	add.w	r3, r3, #1
90012d60:	bf38      	it	cc
90012d62:	3708      	addcc	r7, #8
90012d64:	6083      	str	r3, [r0, #8]
90012d66:	bf38      	it	cc
90012d68:	6107      	strcc	r7, [r0, #16]
90012d6a:	6903      	ldr	r3, [r0, #16]
90012d6c:	f8a3 e000 	strh.w	lr, [r3]
90012d70:	e603      	b.n	9001297a <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
90012d72:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
90012d74:	9c03      	ldr	r4, [sp, #12]
90012d76:	42a2      	cmp	r2, r4
90012d78:	f6ff ae1c 	blt.w	900129b4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90012d7c:	9c06      	ldr	r4, [sp, #24]
90012d7e:	42a2      	cmp	r2, r4
90012d80:	9c08      	ldr	r4, [sp, #32]
90012d82:	bfbc      	itt	lt
90012d84:	3201      	addlt	r2, #1
90012d86:	9206      	strlt	r2, [sp, #24]
90012d88:	f1c3 0220 	rsb	r2, r3, #32
90012d8c:	4362      	muls	r2, r4
90012d8e:	2401      	movs	r4, #1
90012d90:	940b      	str	r4, [sp, #44]	; 0x2c
90012d92:	2420      	movs	r4, #32
90012d94:	e6d6      	b.n	90012b44 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
90012d96:	ea4f 1861 	mov.w	r8, r1, asr #5
90012d9a:	f009 021f 	and.w	r2, r9, #31
90012d9e:	f001 011f 	and.w	r1, r1, #31
90012da2:	f8b5 e004 	ldrh.w	lr, [r5, #4]
90012da6:	920c      	str	r2, [sp, #48]	; 0x30
90012da8:	45b0      	cmp	r8, r6
90012daa:	9a01      	ldr	r2, [sp, #4]
90012dac:	f8b5 a006 	ldrh.w	sl, [r5, #6]
90012db0:	eba2 0203 	sub.w	r2, r2, r3
90012db4:	d108      	bne.n	90012dc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
90012db6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90012db8:	4496      	add	lr, r2
90012dba:	4419      	add	r1, r3
90012dbc:	f8a5 e004 	strh.w	lr, [r5, #4]
90012dc0:	fb02 a101 	mla	r1, r2, r1, sl
90012dc4:	80e9      	strh	r1, [r5, #6]
90012dc6:	e6fa      	b.n	90012bbe <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90012dc8:	2c00      	cmp	r4, #0
90012dca:	f2c0 80a7 	blt.w	90012f1c <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
90012dce:	2701      	movs	r7, #1
90012dd0:	f1c1 0c20 	rsb	ip, r1, #32
90012dd4:	970a      	str	r7, [sp, #40]	; 0x28
90012dd6:	2720      	movs	r7, #32
90012dd8:	fb02 f20c 	mul.w	r2, r2, ip
90012ddc:	9709      	str	r7, [sp, #36]	; 0x24
90012dde:	9f09      	ldr	r7, [sp, #36]	; 0x24
90012de0:	fb92 fcf4 	sdiv	ip, r2, r4
90012de4:	fb04 221c 	mls	r2, r4, ip, r2
90012de8:	4439      	add	r1, r7
90012dea:	2a00      	cmp	r2, #0
90012dec:	bfbc      	itt	lt
90012dee:	f10c 3cff 	addlt.w	ip, ip, #4294967295
90012df2:	1912      	addlt	r2, r2, r4
90012df4:	fb0c a101 	mla	r1, ip, r1, sl
90012df8:	44e6      	add	lr, ip
90012dfa:	80e9      	strh	r1, [r5, #6]
90012dfc:	990a      	ldr	r1, [sp, #40]	; 0x28
90012dfe:	f8a5 e004 	strh.w	lr, [r5, #4]
90012e02:	eb08 0501 	add.w	r5, r8, r1
90012e06:	6901      	ldr	r1, [r0, #16]
90012e08:	f8b1 8006 	ldrh.w	r8, [r1, #6]
90012e0c:	f8b1 e004 	ldrh.w	lr, [r1, #4]
90012e10:	ea58 070e 	orrs.w	r7, r8, lr
90012e14:	d010      	beq.n	90012e38 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90012e16:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
90012e1a:	f1be 0f00 	cmp.w	lr, #0
90012e1e:	db0b      	blt.n	90012e38 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90012e20:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90012e22:	45be      	cmp	lr, r7
90012e24:	da08      	bge.n	90012e38 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90012e26:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90012e2a:	45be      	cmp	lr, r7
90012e2c:	bf3c      	itt	cc
90012e2e:	3108      	addcc	r1, #8
90012e30:	6101      	strcc	r1, [r0, #16]
90012e32:	f10e 0101 	add.w	r1, lr, #1
90012e36:	6081      	str	r1, [r0, #8]
90012e38:	6901      	ldr	r1, [r0, #16]
90012e3a:	f04f 0e00 	mov.w	lr, #0
90012e3e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
90012e42:	42ae      	cmp	r6, r5
90012e44:	800d      	strh	r5, [r1, #0]
90012e46:	4463      	add	r3, ip
90012e48:	f8a1 8002 	strh.w	r8, [r1, #2]
90012e4c:	f8a1 e004 	strh.w	lr, [r1, #4]
90012e50:	f8a1 e006 	strh.w	lr, [r1, #6]
90012e54:	d053      	beq.n	90012efe <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
90012e56:	9901      	ldr	r1, [sp, #4]
90012e58:	1b12      	subs	r2, r2, r4
90012e5a:	1ac9      	subs	r1, r1, r3
90012e5c:	4461      	add	r1, ip
90012e5e:	0149      	lsls	r1, r1, #5
90012e60:	fb91 fef4 	sdiv	lr, r1, r4
90012e64:	fb04 111e 	mls	r1, r4, lr, r1
90012e68:	2900      	cmp	r1, #0
90012e6a:	bfbc      	itt	lt
90012e6c:	f10e 3eff 	addlt.w	lr, lr, #4294967295
90012e70:	1909      	addlt	r1, r1, r4
90012e72:	f10e 0701 	add.w	r7, lr, #1
90012e76:	970d      	str	r7, [sp, #52]	; 0x34
90012e78:	f8d0 a010 	ldr.w	sl, [r0, #16]
90012e7c:	1852      	adds	r2, r2, r1
90012e7e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90012e80:	bf54      	ite	pl
90012e82:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
90012e86:	46f4      	movmi	ip, lr
90012e88:	f8ba b004 	ldrh.w	fp, [sl, #4]
90012e8c:	bf58      	it	pl
90012e8e:	1b12      	subpl	r2, r2, r4
90012e90:	4463      	add	r3, ip
90012e92:	443d      	add	r5, r7
90012e94:	44e3      	add	fp, ip
90012e96:	f8aa b004 	strh.w	fp, [sl, #4]
90012e9a:	f8ba b006 	ldrh.w	fp, [sl, #6]
90012e9e:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
90012ea2:	f8aa b006 	strh.w	fp, [sl, #6]
90012ea6:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012eaa:	f8bc b006 	ldrh.w	fp, [ip, #6]
90012eae:	f8bc a004 	ldrh.w	sl, [ip, #4]
90012eb2:	ea5b 070a 	orrs.w	r7, fp, sl
90012eb6:	d014      	beq.n	90012ee2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90012eb8:	f9bc a002 	ldrsh.w	sl, [ip, #2]
90012ebc:	f1ba 0f00 	cmp.w	sl, #0
90012ec0:	db0f      	blt.n	90012ee2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90012ec2:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90012ec4:	45ba      	cmp	sl, r7
90012ec6:	da0c      	bge.n	90012ee2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90012ec8:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
90012ecc:	45ba      	cmp	sl, r7
90012ece:	f10a 0a01 	add.w	sl, sl, #1
90012ed2:	bf38      	it	cc
90012ed4:	f10c 0c08 	addcc.w	ip, ip, #8
90012ed8:	f8c0 a008 	str.w	sl, [r0, #8]
90012edc:	bf38      	it	cc
90012ede:	f8c0 c010 	strcc.w	ip, [r0, #16]
90012ee2:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012ee6:	f04f 0700 	mov.w	r7, #0
90012eea:	42ae      	cmp	r6, r5
90012eec:	f8ac 5000 	strh.w	r5, [ip]
90012ef0:	f8ac 8002 	strh.w	r8, [ip, #2]
90012ef4:	f8ac 7004 	strh.w	r7, [ip, #4]
90012ef8:	f8ac 7006 	strh.w	r7, [ip, #6]
90012efc:	d1bc      	bne.n	90012e78 <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
90012efe:	6904      	ldr	r4, [r0, #16]
90012f00:	9a01      	ldr	r2, [sp, #4]
90012f02:	990c      	ldr	r1, [sp, #48]	; 0x30
90012f04:	1ad3      	subs	r3, r2, r3
90012f06:	88a2      	ldrh	r2, [r4, #4]
90012f08:	3120      	adds	r1, #32
90012f0a:	441a      	add	r2, r3
90012f0c:	80a2      	strh	r2, [r4, #4]
90012f0e:	9a09      	ldr	r2, [sp, #36]	; 0x24
90012f10:	1a89      	subs	r1, r1, r2
90012f12:	88e2      	ldrh	r2, [r4, #6]
90012f14:	fb03 2301 	mla	r3, r3, r1, r2
90012f18:	80e3      	strh	r3, [r4, #6]
90012f1a:	e650      	b.n	90012bbe <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90012f1c:	f04f 37ff 	mov.w	r7, #4294967295
90012f20:	434a      	muls	r2, r1
90012f22:	4264      	negs	r4, r4
90012f24:	970a      	str	r7, [sp, #40]	; 0x28
90012f26:	2700      	movs	r7, #0
90012f28:	e758      	b.n	90012ddc <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
90012f2a:	ea4f 1867 	mov.w	r8, r7, asr #5
90012f2e:	f009 031f 	and.w	r3, r9, #31
90012f32:	f007 071f 	and.w	r7, r7, #31
90012f36:	fa1f fc8c 	uxth.w	ip, ip
90012f3a:	45d0      	cmp	r8, sl
90012f3c:	930f      	str	r3, [sp, #60]	; 0x3c
90012f3e:	fa1f fe8e 	uxth.w	lr, lr
90012f42:	d10a      	bne.n	90012f5a <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
90012f44:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90012f46:	449c      	add	ip, r3
90012f48:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90012f4a:	441f      	add	r7, r3
90012f4c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90012f4e:	f8a5 c004 	strh.w	ip, [r5, #4]
90012f52:	fb03 e707 	mla	r7, r3, r7, lr
90012f56:	80ef      	strh	r7, [r5, #6]
90012f58:	e6bc      	b.n	90012cd4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90012f5a:	2900      	cmp	r1, #0
90012f5c:	f2c0 80a6 	blt.w	900130ac <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
90012f60:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90012f62:	f1c7 0320 	rsb	r3, r7, #32
90012f66:	4363      	muls	r3, r4
90012f68:	2401      	movs	r4, #1
90012f6a:	940d      	str	r4, [sp, #52]	; 0x34
90012f6c:	2420      	movs	r4, #32
90012f6e:	940c      	str	r4, [sp, #48]	; 0x30
90012f70:	fb93 f4f1 	sdiv	r4, r3, r1
90012f74:	fb01 3b14 	mls	fp, r1, r4, r3
90012f78:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90012f7a:	f1bb 0f00 	cmp.w	fp, #0
90012f7e:	441f      	add	r7, r3
90012f80:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90012f82:	bfbc      	itt	lt
90012f84:	f104 34ff 	addlt.w	r4, r4, #4294967295
90012f88:	448b      	addlt	fp, r1
90012f8a:	fb04 e707 	mla	r7, r4, r7, lr
90012f8e:	44a4      	add	ip, r4
90012f90:	80ef      	strh	r7, [r5, #6]
90012f92:	f8a5 c004 	strh.w	ip, [r5, #4]
90012f96:	eb08 0503 	add.w	r5, r8, r3
90012f9a:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012f9e:	f8bc e006 	ldrh.w	lr, [ip, #6]
90012fa2:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90012fa6:	ea5e 0307 	orrs.w	r3, lr, r7
90012faa:	d011      	beq.n	90012fd0 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90012fac:	f9bc e002 	ldrsh.w	lr, [ip, #2]
90012fb0:	f1be 0f00 	cmp.w	lr, #0
90012fb4:	db0c      	blt.n	90012fd0 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90012fb6:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90012fb8:	45be      	cmp	lr, r7
90012fba:	da09      	bge.n	90012fd0 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90012fbc:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90012fc0:	45be      	cmp	lr, r7
90012fc2:	bf3c      	itt	cc
90012fc4:	f10c 0708 	addcc.w	r7, ip, #8
90012fc8:	6107      	strcc	r7, [r0, #16]
90012fca:	f10e 0701 	add.w	r7, lr, #1
90012fce:	6087      	str	r7, [r0, #8]
90012fd0:	6907      	ldr	r7, [r0, #16]
90012fd2:	b213      	sxth	r3, r2
90012fd4:	4555      	cmp	r5, sl
90012fd6:	9310      	str	r3, [sp, #64]	; 0x40
90012fd8:	807b      	strh	r3, [r7, #2]
90012fda:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90012fdc:	803d      	strh	r5, [r7, #0]
90012fde:	80be      	strh	r6, [r7, #4]
90012fe0:	eb04 0c03 	add.w	ip, r4, r3
90012fe4:	80fe      	strh	r6, [r7, #6]
90012fe6:	d050      	beq.n	9001308a <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
90012fe8:	9b01      	ldr	r3, [sp, #4]
90012fea:	eba3 070c 	sub.w	r7, r3, ip
90012fee:	ebab 0301 	sub.w	r3, fp, r1
90012ff2:	443c      	add	r4, r7
90012ff4:	9309      	str	r3, [sp, #36]	; 0x24
90012ff6:	0164      	lsls	r4, r4, #5
90012ff8:	fb94 f8f1 	sdiv	r8, r4, r1
90012ffc:	fb01 4418 	mls	r4, r1, r8, r4
90013000:	2c00      	cmp	r4, #0
90013002:	bfbc      	itt	lt
90013004:	f108 38ff 	addlt.w	r8, r8, #4294967295
90013008:	1864      	addlt	r4, r4, r1
9001300a:	f108 0701 	add.w	r7, r8, #1
9001300e:	9711      	str	r7, [sp, #68]	; 0x44
90013010:	9b09      	ldr	r3, [sp, #36]	; 0x24
90013012:	f8d0 e010 	ldr.w	lr, [r0, #16]
90013016:	191b      	adds	r3, r3, r4
90013018:	f8be b004 	ldrh.w	fp, [lr, #4]
9001301c:	bf54      	ite	pl
9001301e:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
90013020:	4647      	movmi	r7, r8
90013022:	9309      	str	r3, [sp, #36]	; 0x24
90013024:	bf58      	it	pl
90013026:	1a5b      	subpl	r3, r3, r1
90013028:	44bb      	add	fp, r7
9001302a:	44bc      	add	ip, r7
9001302c:	bf58      	it	pl
9001302e:	9309      	strpl	r3, [sp, #36]	; 0x24
90013030:	f8ae b004 	strh.w	fp, [lr, #4]
90013034:	f8be b006 	ldrh.w	fp, [lr, #6]
90013038:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
9001303c:	9f0d      	ldr	r7, [sp, #52]	; 0x34
9001303e:	f8ae b006 	strh.w	fp, [lr, #6]
90013042:	443d      	add	r5, r7
90013044:	f8d0 e010 	ldr.w	lr, [r0, #16]
90013048:	f8be b006 	ldrh.w	fp, [lr, #6]
9001304c:	f8be 7004 	ldrh.w	r7, [lr, #4]
90013050:	ea5b 0307 	orrs.w	r3, fp, r7
90013054:	d011      	beq.n	9001307a <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90013056:	f9be b002 	ldrsh.w	fp, [lr, #2]
9001305a:	f1bb 0f00 	cmp.w	fp, #0
9001305e:	db0c      	blt.n	9001307a <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90013060:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90013062:	45bb      	cmp	fp, r7
90013064:	da09      	bge.n	9001307a <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90013066:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
9001306a:	45bb      	cmp	fp, r7
9001306c:	bf3c      	itt	cc
9001306e:	f10e 0708 	addcc.w	r7, lr, #8
90013072:	6107      	strcc	r7, [r0, #16]
90013074:	f10b 0701 	add.w	r7, fp, #1
90013078:	6087      	str	r7, [r0, #8]
9001307a:	6907      	ldr	r7, [r0, #16]
9001307c:	4555      	cmp	r5, sl
9001307e:	9b10      	ldr	r3, [sp, #64]	; 0x40
90013080:	803d      	strh	r5, [r7, #0]
90013082:	807b      	strh	r3, [r7, #2]
90013084:	80be      	strh	r6, [r7, #4]
90013086:	80fe      	strh	r6, [r7, #6]
90013088:	d1c2      	bne.n	90013010 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
9001308a:	9b01      	ldr	r3, [sp, #4]
9001308c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001308e:	eba3 0c0c 	sub.w	ip, r3, ip
90013092:	6903      	ldr	r3, [r0, #16]
90013094:	3720      	adds	r7, #32
90013096:	8899      	ldrh	r1, [r3, #4]
90013098:	4461      	add	r1, ip
9001309a:	8099      	strh	r1, [r3, #4]
9001309c:	990c      	ldr	r1, [sp, #48]	; 0x30
9001309e:	1a7f      	subs	r7, r7, r1
900130a0:	88d9      	ldrh	r1, [r3, #6]
900130a2:	fb0c 1c07 	mla	ip, ip, r7, r1
900130a6:	f8a3 c006 	strh.w	ip, [r3, #6]
900130aa:	e613      	b.n	90012cd4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
900130ac:	f04f 34ff 	mov.w	r4, #4294967295
900130b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900130b2:	4249      	negs	r1, r1
900130b4:	940d      	str	r4, [sp, #52]	; 0x34
900130b6:	2400      	movs	r4, #0
900130b8:	437b      	muls	r3, r7
900130ba:	e758      	b.n	90012f6e <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
900130bc:	9905      	ldr	r1, [sp, #20]
900130be:	ea4f 1b69 	mov.w	fp, r9, asr #5
900130c2:	f009 0c1f 	and.w	ip, r9, #31
900130c6:	f8b7 8004 	ldrh.w	r8, [r7, #4]
900130ca:	f001 011f 	and.w	r1, r1, #31
900130ce:	45f3      	cmp	fp, lr
900130d0:	f8b7 a006 	ldrh.w	sl, [r7, #6]
900130d4:	9102      	str	r1, [sp, #8]
900130d6:	9904      	ldr	r1, [sp, #16]
900130d8:	eba1 0406 	sub.w	r4, r1, r6
900130dc:	d108      	bne.n	900130f0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
900130de:	9b02      	ldr	r3, [sp, #8]
900130e0:	44a0      	add	r8, r4
900130e2:	449c      	add	ip, r3
900130e4:	f8a7 8004 	strh.w	r8, [r7, #4]
900130e8:	fb04 a40c 	mla	r4, r4, ip, sl
900130ec:	80fc      	strh	r4, [r7, #6]
900130ee:	e461      	b.n	900129b4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900130f0:	9905      	ldr	r1, [sp, #20]
900130f2:	ebb1 0109 	subs.w	r1, r1, r9
900130f6:	bf51      	iteee	pl
900130f8:	f1cc 0520 	rsbpl	r5, ip, #32
900130fc:	fb04 f40c 	mulmi.w	r4, r4, ip
90013100:	4249      	negmi	r1, r1
90013102:	2500      	movmi	r5, #0
90013104:	bf5d      	ittte	pl
90013106:	436c      	mulpl	r4, r5
90013108:	2520      	movpl	r5, #32
9001310a:	f04f 0901 	movpl.w	r9, #1
9001310e:	f04f 39ff 	movmi.w	r9, #4294967295
90013112:	9501      	str	r5, [sp, #4]
90013114:	9b01      	ldr	r3, [sp, #4]
90013116:	fb94 f5f1 	sdiv	r5, r4, r1
9001311a:	fb01 4415 	mls	r4, r1, r5, r4
9001311e:	449c      	add	ip, r3
90013120:	eb0b 0309 	add.w	r3, fp, r9
90013124:	2c00      	cmp	r4, #0
90013126:	bfbc      	itt	lt
90013128:	f105 35ff 	addlt.w	r5, r5, #4294967295
9001312c:	1864      	addlt	r4, r4, r1
9001312e:	44a8      	add	r8, r5
90013130:	fb05 ac0c 	mla	ip, r5, ip, sl
90013134:	f8a7 8004 	strh.w	r8, [r7, #4]
90013138:	f8a7 c006 	strh.w	ip, [r7, #6]
9001313c:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013140:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90013144:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90013148:	ea58 0707 	orrs.w	r7, r8, r7
9001314c:	d011      	beq.n	90013172 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
9001314e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90013152:	f1b8 0f00 	cmp.w	r8, #0
90013156:	db0c      	blt.n	90013172 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90013158:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
9001315a:	45b8      	cmp	r8, r7
9001315c:	da09      	bge.n	90013172 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
9001315e:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
90013162:	45b8      	cmp	r8, r7
90013164:	bf3c      	itt	cc
90013166:	f10c 0708 	addcc.w	r7, ip, #8
9001316a:	6107      	strcc	r7, [r0, #16]
9001316c:	f108 0701 	add.w	r7, r8, #1
90013170:	6087      	str	r7, [r0, #8]
90013172:	6907      	ldr	r7, [r0, #16]
90013174:	f04f 0c00 	mov.w	ip, #0
90013178:	b212      	sxth	r2, r2
9001317a:	459e      	cmp	lr, r3
9001317c:	803b      	strh	r3, [r7, #0]
9001317e:	442e      	add	r6, r5
90013180:	807a      	strh	r2, [r7, #2]
90013182:	f8a7 c004 	strh.w	ip, [r7, #4]
90013186:	f8a7 c006 	strh.w	ip, [r7, #6]
9001318a:	d04b      	beq.n	90013224 <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
9001318c:	9f04      	ldr	r7, [sp, #16]
9001318e:	1a64      	subs	r4, r4, r1
90013190:	f04f 0a00 	mov.w	sl, #0
90013194:	1bbf      	subs	r7, r7, r6
90013196:	443d      	add	r5, r7
90013198:	016d      	lsls	r5, r5, #5
9001319a:	fb95 f8f1 	sdiv	r8, r5, r1
9001319e:	fb01 5518 	mls	r5, r1, r8, r5
900131a2:	4565      	cmp	r5, ip
900131a4:	bfbc      	itt	lt
900131a6:	f108 38ff 	addlt.w	r8, r8, #4294967295
900131aa:	186d      	addlt	r5, r5, r1
900131ac:	f108 0701 	add.w	r7, r8, #1
900131b0:	9703      	str	r7, [sp, #12]
900131b2:	f8d0 c010 	ldr.w	ip, [r0, #16]
900131b6:	1964      	adds	r4, r4, r5
900131b8:	444b      	add	r3, r9
900131ba:	bf54      	ite	pl
900131bc:	9f03      	ldrpl	r7, [sp, #12]
900131be:	4647      	movmi	r7, r8
900131c0:	f8bc b004 	ldrh.w	fp, [ip, #4]
900131c4:	bf58      	it	pl
900131c6:	1a64      	subpl	r4, r4, r1
900131c8:	443e      	add	r6, r7
900131ca:	44bb      	add	fp, r7
900131cc:	f8ac b004 	strh.w	fp, [ip, #4]
900131d0:	f8bc b006 	ldrh.w	fp, [ip, #6]
900131d4:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
900131d8:	f8ac b006 	strh.w	fp, [ip, #6]
900131dc:	f8d0 c010 	ldr.w	ip, [r0, #16]
900131e0:	f8bc b006 	ldrh.w	fp, [ip, #6]
900131e4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
900131e8:	ea5b 0707 	orrs.w	r7, fp, r7
900131ec:	d011      	beq.n	90013212 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
900131ee:	f9bc b002 	ldrsh.w	fp, [ip, #2]
900131f2:	f1bb 0f00 	cmp.w	fp, #0
900131f6:	db0c      	blt.n	90013212 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
900131f8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
900131fa:	45bb      	cmp	fp, r7
900131fc:	da09      	bge.n	90013212 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
900131fe:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90013202:	45bb      	cmp	fp, r7
90013204:	bf3c      	itt	cc
90013206:	f10c 0708 	addcc.w	r7, ip, #8
9001320a:	6107      	strcc	r7, [r0, #16]
9001320c:	f10b 0701 	add.w	r7, fp, #1
90013210:	6087      	str	r7, [r0, #8]
90013212:	6907      	ldr	r7, [r0, #16]
90013214:	459e      	cmp	lr, r3
90013216:	803b      	strh	r3, [r7, #0]
90013218:	807a      	strh	r2, [r7, #2]
9001321a:	f8a7 a004 	strh.w	sl, [r7, #4]
9001321e:	f8a7 a006 	strh.w	sl, [r7, #6]
90013222:	d1c6      	bne.n	900131b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
90013224:	9b04      	ldr	r3, [sp, #16]
90013226:	1b9e      	subs	r6, r3, r6
90013228:	6903      	ldr	r3, [r0, #16]
9001322a:	889a      	ldrh	r2, [r3, #4]
9001322c:	4432      	add	r2, r6
9001322e:	809a      	strh	r2, [r3, #4]
90013230:	9a02      	ldr	r2, [sp, #8]
90013232:	f102 0c20 	add.w	ip, r2, #32
90013236:	9a01      	ldr	r2, [sp, #4]
90013238:	ebac 0c02 	sub.w	ip, ip, r2
9001323c:	88da      	ldrh	r2, [r3, #6]
9001323e:	fb06 260c 	mla	r6, r6, ip, r2
90013242:	80de      	strh	r6, [r3, #6]
90013244:	f7ff bbb6 	b.w	900129b4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

90013248 <_ZN8touchgfx7Outline6lineToEii>:
90013248:	6a43      	ldr	r3, [r0, #36]	; 0x24
9001324a:	079b      	lsls	r3, r3, #30
9001324c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9001324e:	460e      	mov	r6, r1
90013250:	4615      	mov	r5, r2
90013252:	d511      	bpl.n	90013278 <_ZN8touchgfx7Outline6lineToEii+0x30>
90013254:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
90013258:	ea86 0701 	eor.w	r7, r6, r1
9001325c:	ea85 0302 	eor.w	r3, r5, r2
90013260:	433b      	orrs	r3, r7
90013262:	d009      	beq.n	90013278 <_ZN8touchgfx7Outline6lineToEii+0x30>
90013264:	4633      	mov	r3, r6
90013266:	9500      	str	r5, [sp, #0]
90013268:	f7ff fb4c 	bl	90012904 <_ZN8touchgfx7Outline10renderLineEiiii>
9001326c:	6a43      	ldr	r3, [r0, #36]	; 0x24
9001326e:	f043 0301 	orr.w	r3, r3, #1
90013272:	e9c0 6505 	strd	r6, r5, [r0, #20]
90013276:	6243      	str	r3, [r0, #36]	; 0x24
90013278:	b003      	add	sp, #12
9001327a:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001327c <_ZN8touchgfx7Outline6moveToEii>:
9001327c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001327e:	6a43      	ldr	r3, [r0, #36]	; 0x24
90013280:	4615      	mov	r5, r2
90013282:	4604      	mov	r4, r0
90013284:	460e      	mov	r6, r1
90013286:	079a      	lsls	r2, r3, #30
90013288:	d401      	bmi.n	9001328e <_ZN8touchgfx7Outline6moveToEii+0x12>
9001328a:	f7ff fb07 	bl	9001289c <_ZN8touchgfx7Outline5resetEv>
9001328e:	6a63      	ldr	r3, [r4, #36]	; 0x24
90013290:	07db      	lsls	r3, r3, #31
90013292:	d504      	bpl.n	9001329e <_ZN8touchgfx7Outline6moveToEii+0x22>
90013294:	4620      	mov	r0, r4
90013296:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
9001329a:	f7ff ffd5 	bl	90013248 <_ZN8touchgfx7Outline6lineToEii>
9001329e:	6923      	ldr	r3, [r4, #16]
900132a0:	1170      	asrs	r0, r6, #5
900132a2:	1169      	asrs	r1, r5, #5
900132a4:	f9b3 2000 	ldrsh.w	r2, [r3]
900132a8:	4290      	cmp	r0, r2
900132aa:	d103      	bne.n	900132b4 <_ZN8touchgfx7Outline6moveToEii+0x38>
900132ac:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
900132b0:	4291      	cmp	r1, r2
900132b2:	d01a      	beq.n	900132ea <_ZN8touchgfx7Outline6moveToEii+0x6e>
900132b4:	88df      	ldrh	r7, [r3, #6]
900132b6:	889a      	ldrh	r2, [r3, #4]
900132b8:	433a      	orrs	r2, r7
900132ba:	d010      	beq.n	900132de <_ZN8touchgfx7Outline6moveToEii+0x62>
900132bc:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
900132c0:	2a00      	cmp	r2, #0
900132c2:	db0c      	blt.n	900132de <_ZN8touchgfx7Outline6moveToEii+0x62>
900132c4:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
900132c6:	42ba      	cmp	r2, r7
900132c8:	da09      	bge.n	900132de <_ZN8touchgfx7Outline6moveToEii+0x62>
900132ca:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
900132ce:	42ba      	cmp	r2, r7
900132d0:	f102 0201 	add.w	r2, r2, #1
900132d4:	bf38      	it	cc
900132d6:	3308      	addcc	r3, #8
900132d8:	60a2      	str	r2, [r4, #8]
900132da:	bf38      	it	cc
900132dc:	6123      	strcc	r3, [r4, #16]
900132de:	6923      	ldr	r3, [r4, #16]
900132e0:	2200      	movs	r2, #0
900132e2:	8018      	strh	r0, [r3, #0]
900132e4:	8059      	strh	r1, [r3, #2]
900132e6:	809a      	strh	r2, [r3, #4]
900132e8:	80da      	strh	r2, [r3, #6]
900132ea:	6166      	str	r6, [r4, #20]
900132ec:	6225      	str	r5, [r4, #32]
900132ee:	e9c4 5606 	strd	r5, r6, [r4, #24]
900132f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

900132f4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
900132f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900132f8:	b0d0      	sub	sp, #320	; 0x140
900132fa:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
900132fe:	466c      	mov	r4, sp
90013300:	4627      	mov	r7, r4
90013302:	1a0d      	subs	r5, r1, r0
90013304:	f100 0308 	add.w	r3, r0, #8
90013308:	2d48      	cmp	r5, #72	; 0x48
9001330a:	f340 80d5 	ble.w	900134b8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
9001330e:	112d      	asrs	r5, r5, #4
90013310:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
90013314:	f9b0 9000 	ldrsh.w	r9, [r0]
90013318:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
9001331c:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
90013320:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90013324:	6816      	ldr	r6, [r2, #0]
90013326:	6006      	str	r6, [r0, #0]
90013328:	6856      	ldr	r6, [r2, #4]
9001332a:	6046      	str	r6, [r0, #4]
9001332c:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90013330:	f8a2 8002 	strh.w	r8, [r2, #2]
90013334:	f8a2 e004 	strh.w	lr, [r2, #4]
90013338:	f8a2 c006 	strh.w	ip, [r2, #6]
9001333c:	f1a1 0208 	sub.w	r2, r1, #8
90013340:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90013344:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
90013348:	4565      	cmp	r5, ip
9001334a:	db06      	blt.n	9001335a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
9001334c:	d119      	bne.n	90013382 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
9001334e:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
90013352:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
90013356:	42ae      	cmp	r6, r5
90013358:	dd13      	ble.n	90013382 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
9001335a:	460e      	mov	r6, r1
9001335c:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
90013360:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
90013364:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90013368:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
9001336c:	601d      	str	r5, [r3, #0]
9001336e:	6875      	ldr	r5, [r6, #4]
90013370:	605d      	str	r5, [r3, #4]
90013372:	f821 9c08 	strh.w	r9, [r1, #-8]
90013376:	f821 cc06 	strh.w	ip, [r1, #-6]
9001337a:	f821 8c04 	strh.w	r8, [r1, #-4]
9001337e:	f821 ec02 	strh.w	lr, [r1, #-2]
90013382:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
90013386:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
9001338a:	42ae      	cmp	r6, r5
9001338c:	db06      	blt.n	9001339c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
9001338e:	d116      	bne.n	900133be <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90013390:	f9b0 c000 	ldrsh.w	ip, [r0]
90013394:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
90013398:	45ac      	cmp	ip, r5
9001339a:	da10      	bge.n	900133be <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
9001339c:	681d      	ldr	r5, [r3, #0]
9001339e:	f9b0 8000 	ldrsh.w	r8, [r0]
900133a2:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
900133a6:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
900133aa:	6005      	str	r5, [r0, #0]
900133ac:	685d      	ldr	r5, [r3, #4]
900133ae:	f8a0 8008 	strh.w	r8, [r0, #8]
900133b2:	6045      	str	r5, [r0, #4]
900133b4:	8146      	strh	r6, [r0, #10]
900133b6:	f8a0 e00c 	strh.w	lr, [r0, #12]
900133ba:	f8a0 c00e 	strh.w	ip, [r0, #14]
900133be:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
900133c2:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
900133c6:	4565      	cmp	r5, ip
900133c8:	db06      	blt.n	900133d8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
900133ca:	d119      	bne.n	90013400 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900133cc:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
900133d0:	f9b0 5000 	ldrsh.w	r5, [r0]
900133d4:	42ae      	cmp	r6, r5
900133d6:	da13      	bge.n	90013400 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900133d8:	460e      	mov	r6, r1
900133da:	f9b0 9000 	ldrsh.w	r9, [r0]
900133de:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
900133e2:	f856 5d08 	ldr.w	r5, [r6, #-8]!
900133e6:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
900133ea:	6005      	str	r5, [r0, #0]
900133ec:	6875      	ldr	r5, [r6, #4]
900133ee:	6045      	str	r5, [r0, #4]
900133f0:	f821 9c08 	strh.w	r9, [r1, #-8]
900133f4:	f821 cc06 	strh.w	ip, [r1, #-6]
900133f8:	f821 8c04 	strh.w	r8, [r1, #-4]
900133fc:	f821 ec02 	strh.w	lr, [r1, #-2]
90013400:	3308      	adds	r3, #8
90013402:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
90013406:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
9001340a:	45e6      	cmp	lr, ip
9001340c:	dbf8      	blt.n	90013400 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
9001340e:	d105      	bne.n	9001341c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90013410:	f9b3 6000 	ldrsh.w	r6, [r3]
90013414:	f9b0 5000 	ldrsh.w	r5, [r0]
90013418:	42ae      	cmp	r6, r5
9001341a:	dbf1      	blt.n	90013400 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
9001341c:	4615      	mov	r5, r2
9001341e:	3a08      	subs	r2, #8
90013420:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
90013424:	45b4      	cmp	ip, r6
90013426:	dbf9      	blt.n	9001341c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90013428:	d105      	bne.n	90013436 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
9001342a:	f9b0 8000 	ldrsh.w	r8, [r0]
9001342e:	f9b2 6000 	ldrsh.w	r6, [r2]
90013432:	45b0      	cmp	r8, r6
90013434:	dbf2      	blt.n	9001341c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90013436:	4293      	cmp	r3, r2
90013438:	f1a5 0608 	sub.w	r6, r5, #8
9001343c:	d816      	bhi.n	9001346c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
9001343e:	f8d6 c000 	ldr.w	ip, [r6]
90013442:	f9b3 a000 	ldrsh.w	sl, [r3]
90013446:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
9001344a:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
9001344e:	f8c3 c000 	str.w	ip, [r3]
90013452:	f8d6 c004 	ldr.w	ip, [r6, #4]
90013456:	f8c3 c004 	str.w	ip, [r3, #4]
9001345a:	f825 ac08 	strh.w	sl, [r5, #-8]
9001345e:	f825 ec06 	strh.w	lr, [r5, #-6]
90013462:	f825 9c04 	strh.w	r9, [r5, #-4]
90013466:	f825 8c02 	strh.w	r8, [r5, #-2]
9001346a:	e7c9      	b.n	90013400 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
9001346c:	f8d6 e000 	ldr.w	lr, [r6]
90013470:	f9b0 a000 	ldrsh.w	sl, [r0]
90013474:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
90013478:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
9001347c:	f8c0 e000 	str.w	lr, [r0]
90013480:	f8d6 e004 	ldr.w	lr, [r6, #4]
90013484:	1a16      	subs	r6, r2, r0
90013486:	f8c0 e004 	str.w	lr, [r0, #4]
9001348a:	f825 ac08 	strh.w	sl, [r5, #-8]
9001348e:	f825 cc06 	strh.w	ip, [r5, #-6]
90013492:	f825 9c04 	strh.w	r9, [r5, #-4]
90013496:	f825 8c02 	strh.w	r8, [r5, #-2]
9001349a:	1acd      	subs	r5, r1, r3
9001349c:	10ed      	asrs	r5, r5, #3
9001349e:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
900134a2:	bfb5      	itete	lt
900134a4:	e9c4 0200 	strdlt	r0, r2, [r4]
900134a8:	e9c4 3100 	strdge	r3, r1, [r4]
900134ac:	460a      	movlt	r2, r1
900134ae:	4603      	movge	r3, r0
900134b0:	3408      	adds	r4, #8
900134b2:	4618      	mov	r0, r3
900134b4:	4611      	mov	r1, r2
900134b6:	e724      	b.n	90013302 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
900134b8:	4299      	cmp	r1, r3
900134ba:	d927      	bls.n	9001350c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
900134bc:	f1a3 0210 	sub.w	r2, r3, #16
900134c0:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
900134c4:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
900134c8:	45ac      	cmp	ip, r5
900134ca:	db06      	blt.n	900134da <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
900134cc:	d11c      	bne.n	90013508 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
900134ce:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
900134d2:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
900134d6:	42ae      	cmp	r6, r5
900134d8:	da16      	bge.n	90013508 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
900134da:	4615      	mov	r5, r2
900134dc:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
900134e0:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
900134e4:	3a08      	subs	r2, #8
900134e6:	f855 6f08 	ldr.w	r6, [r5, #8]!
900134ea:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
900134ee:	6196      	str	r6, [r2, #24]
900134f0:	42a8      	cmp	r0, r5
900134f2:	686e      	ldr	r6, [r5, #4]
900134f4:	f8a2 9010 	strh.w	r9, [r2, #16]
900134f8:	61d6      	str	r6, [r2, #28]
900134fa:	f8a2 c012 	strh.w	ip, [r2, #18]
900134fe:	f8a2 8014 	strh.w	r8, [r2, #20]
90013502:	f8a2 e016 	strh.w	lr, [r2, #22]
90013506:	d1db      	bne.n	900134c0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
90013508:	3308      	adds	r3, #8
9001350a:	e7d5      	b.n	900134b8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
9001350c:	42bc      	cmp	r4, r7
9001350e:	d903      	bls.n	90013518 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
90013510:	e954 0102 	ldrd	r0, r1, [r4, #-8]
90013514:	3c08      	subs	r4, #8
90013516:	e6f4      	b.n	90013302 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90013518:	b050      	add	sp, #320	; 0x140
9001351a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

9001351e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
9001351e:	b510      	push	{r4, lr}
90013520:	6a43      	ldr	r3, [r0, #36]	; 0x24
90013522:	4604      	mov	r4, r0
90013524:	07da      	lsls	r2, r3, #31
90013526:	d507      	bpl.n	90013538 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
90013528:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
9001352c:	f7ff fe8c 	bl	90013248 <_ZN8touchgfx7Outline6lineToEii>
90013530:	6a43      	ldr	r3, [r0, #36]	; 0x24
90013532:	f023 0301 	bic.w	r3, r3, #1
90013536:	6243      	str	r3, [r0, #36]	; 0x24
90013538:	6a63      	ldr	r3, [r4, #36]	; 0x24
9001353a:	079b      	lsls	r3, r3, #30
9001353c:	d521      	bpl.n	90013582 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
9001353e:	6923      	ldr	r3, [r4, #16]
90013540:	88d9      	ldrh	r1, [r3, #6]
90013542:	889a      	ldrh	r2, [r3, #4]
90013544:	430a      	orrs	r2, r1
90013546:	d010      	beq.n	9001356a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90013548:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
9001354c:	2a00      	cmp	r2, #0
9001354e:	db0c      	blt.n	9001356a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90013550:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
90013552:	428a      	cmp	r2, r1
90013554:	da09      	bge.n	9001356a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90013556:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
9001355a:	4291      	cmp	r1, r2
9001355c:	f102 0201 	add.w	r2, r2, #1
90013560:	bf88      	it	hi
90013562:	3308      	addhi	r3, #8
90013564:	60a2      	str	r2, [r4, #8]
90013566:	bf88      	it	hi
90013568:	6123      	strhi	r3, [r4, #16]
9001356a:	68a1      	ldr	r1, [r4, #8]
9001356c:	b129      	cbz	r1, 9001357a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
9001356e:	6863      	ldr	r3, [r4, #4]
90013570:	4299      	cmp	r1, r3
90013572:	d802      	bhi.n	9001357a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90013574:	68e0      	ldr	r0, [r4, #12]
90013576:	f7ff febd 	bl	900132f4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
9001357a:	6a63      	ldr	r3, [r4, #36]	; 0x24
9001357c:	f023 0302 	bic.w	r3, r3, #2
90013580:	6263      	str	r3, [r4, #36]	; 0x24
90013582:	68e0      	ldr	r0, [r4, #12]
90013584:	bd10      	pop	{r4, pc}
	...

90013588 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
90013588:	4b02      	ldr	r3, [pc, #8]	; (90013594 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
9001358a:	6018      	str	r0, [r3, #0]
9001358c:	4b02      	ldr	r3, [pc, #8]	; (90013598 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
9001358e:	6019      	str	r1, [r3, #0]
90013590:	4770      	bx	lr
90013592:	bf00      	nop
90013594:	240235b4 	.word	0x240235b4
90013598:	240235b8 	.word	0x240235b8

9001359c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
9001359c:	2300      	movs	r3, #0
9001359e:	4a02      	ldr	r2, [pc, #8]	; (900135a8 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
900135a0:	6013      	str	r3, [r2, #0]
900135a2:	4a02      	ldr	r2, [pc, #8]	; (900135ac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
900135a4:	6013      	str	r3, [r2, #0]
900135a6:	4770      	bx	lr
900135a8:	240235b4 	.word	0x240235b4
900135ac:	240235b8 	.word	0x240235b8

900135b0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
900135b0:	4b01      	ldr	r3, [pc, #4]	; (900135b8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
900135b2:	6818      	ldr	r0, [r3, #0]
900135b4:	4770      	bx	lr
900135b6:	bf00      	nop
900135b8:	240235b4 	.word	0x240235b4

900135bc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
900135bc:	4b01      	ldr	r3, [pc, #4]	; (900135c4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
900135be:	6818      	ldr	r0, [r3, #0]
900135c0:	4770      	bx	lr
900135c2:	bf00      	nop
900135c4:	240235b8 	.word	0x240235b8

900135c8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
900135c8:	b510      	push	{r4, lr}
900135ca:	6803      	ldr	r3, [r0, #0]
900135cc:	460c      	mov	r4, r1
900135ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900135d0:	4798      	blx	r3
900135d2:	1b03      	subs	r3, r0, r4
900135d4:	4258      	negs	r0, r3
900135d6:	4158      	adcs	r0, r3
900135d8:	bd10      	pop	{r4, pc}
	...

900135dc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
900135dc:	4b01      	ldr	r3, [pc, #4]	; (900135e4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
900135de:	6019      	str	r1, [r3, #0]
900135e0:	4770      	bx	lr
900135e2:	bf00      	nop
900135e4:	240235bc 	.word	0x240235bc

900135e8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
900135e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900135ec:	4696      	mov	lr, r2
900135ee:	b097      	sub	sp, #92	; 0x5c
900135f0:	4605      	mov	r5, r0
900135f2:	4614      	mov	r4, r2
900135f4:	460e      	mov	r6, r1
900135f6:	461f      	mov	r7, r3
900135f8:	f10d 0c1c 	add.w	ip, sp, #28
900135fc:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
90013600:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
90013604:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
90013608:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
9001360c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90013610:	f8de 3000 	ldr.w	r3, [lr]
90013614:	f104 0e14 	add.w	lr, r4, #20
90013618:	f8cc 3000 	str.w	r3, [ip]
9001361c:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
90013620:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90013624:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90013628:	f8de 3000 	ldr.w	r3, [lr]
9001362c:	f104 0e28 	add.w	lr, r4, #40	; 0x28
90013630:	f8cc 3000 	str.w	r3, [ip]
90013634:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
90013638:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
9001363c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90013640:	f8de 3000 	ldr.w	r3, [lr]
90013644:	4631      	mov	r1, r6
90013646:	9a21      	ldr	r2, [sp, #132]	; 0x84
90013648:	4628      	mov	r0, r5
9001364a:	f8cc 3000 	str.w	r3, [ip]
9001364e:	682b      	ldr	r3, [r5, #0]
90013650:	9201      	str	r2, [sp, #4]
90013652:	9a20      	ldr	r2, [sp, #128]	; 0x80
90013654:	f8cd 8008 	str.w	r8, [sp, #8]
90013658:	9200      	str	r2, [sp, #0]
9001365a:	aa07      	add	r2, sp, #28
9001365c:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90013660:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
90013664:	463b      	mov	r3, r7
90013666:	47d8      	blx	fp
90013668:	46a6      	mov	lr, r4
9001366a:	f10d 0c1c 	add.w	ip, sp, #28
9001366e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90013672:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90013676:	f8de 3000 	ldr.w	r3, [lr]
9001367a:	f104 0e28 	add.w	lr, r4, #40	; 0x28
9001367e:	343c      	adds	r4, #60	; 0x3c
90013680:	f8cc 3000 	str.w	r3, [ip]
90013684:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
90013688:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
9001368c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90013690:	f8de 3000 	ldr.w	r3, [lr]
90013694:	f8cc 3000 	str.w	r3, [ip]
90013698:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
9001369c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9001369e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900136a2:	6823      	ldr	r3, [r4, #0]
900136a4:	4631      	mov	r1, r6
900136a6:	4628      	mov	r0, r5
900136a8:	f8cc 3000 	str.w	r3, [ip]
900136ac:	682b      	ldr	r3, [r5, #0]
900136ae:	e9cd 9a03 	strd	r9, sl, [sp, #12]
900136b2:	9a21      	ldr	r2, [sp, #132]	; 0x84
900136b4:	f8cd 8008 	str.w	r8, [sp, #8]
900136b8:	9201      	str	r2, [sp, #4]
900136ba:	9a20      	ldr	r2, [sp, #128]	; 0x80
900136bc:	9200      	str	r2, [sp, #0]
900136be:	aa07      	add	r2, sp, #28
900136c0:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
900136c2:	463b      	mov	r3, r7
900136c4:	47a0      	blx	r4
900136c6:	b017      	add	sp, #92	; 0x5c
900136c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900136cc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
900136cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900136d0:	b08d      	sub	sp, #52	; 0x34
900136d2:	4688      	mov	r8, r1
900136d4:	f8d3 c000 	ldr.w	ip, [r3]
900136d8:	9916      	ldr	r1, [sp, #88]	; 0x58
900136da:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
900136de:	680f      	ldr	r7, [r1, #0]
900136e0:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
900136e4:	eba7 070c 	sub.w	r7, r7, ip
900136e8:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
900136ec:	edd3 6a07 	vldr	s13, [r3, #28]
900136f0:	42bc      	cmp	r4, r7
900136f2:	9918      	ldr	r1, [sp, #96]	; 0x60
900136f4:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
900136f8:	bfa8      	it	ge
900136fa:	463c      	movge	r4, r7
900136fc:	f9b1 9000 	ldrsh.w	r9, [r1]
90013700:	f9ba 1000 	ldrsh.w	r1, [sl]
90013704:	ee07 4a90 	vmov	s15, r4
90013708:	eb09 0e0c 	add.w	lr, r9, ip
9001370c:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
90013710:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
90013714:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
90013718:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
9001371c:	4571      	cmp	r1, lr
9001371e:	ee25 4a04 	vmul.f32	s8, s10, s8
90013722:	ee65 4a24 	vmul.f32	s9, s10, s9
90013726:	ee25 5a27 	vmul.f32	s10, s10, s15
9001372a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
9001372e:	ee71 0aa4 	vadd.f32	s1, s3, s9
90013732:	ee32 1a05 	vadd.f32	s2, s4, s10
90013736:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9001373a:	ee36 0a84 	vadd.f32	s0, s13, s8
9001373e:	ee61 1a87 	vmul.f32	s3, s3, s14
90013742:	ee22 2a07 	vmul.f32	s4, s4, s14
90013746:	f340 808c 	ble.w	90013862 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
9001374a:	eba1 060e 	sub.w	r6, r1, lr
9001374e:	fb96 f5f4 	sdiv	r5, r6, r4
90013752:	ee07 5a10 	vmov	s14, r5
90013756:	2d00      	cmp	r5, #0
90013758:	fb04 6615 	mls	r6, r4, r5, r6
9001375c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90013760:	eea7 0a04 	vfma.f32	s0, s14, s8
90013764:	eee7 0a24 	vfma.f32	s1, s14, s9
90013768:	eea7 1a05 	vfma.f32	s2, s14, s10
9001376c:	dd12      	ble.n	90013794 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
9001376e:	ee70 6a44 	vsub.f32	s13, s0, s8
90013772:	ee70 1ae4 	vsub.f32	s3, s1, s9
90013776:	ee31 2a45 	vsub.f32	s4, s2, s10
9001377a:	eef5 6a40 	vcmp.f32	s13, #0.0
9001377e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013782:	bf14      	ite	ne
90013784:	ee87 7aa6 	vdivne.f32	s14, s15, s13
90013788:	eeb0 7a67 	vmoveq.f32	s14, s15
9001378c:	ee61 1a87 	vmul.f32	s3, s3, s14
90013790:	ee22 2a07 	vmul.f32	s4, s4, s14
90013794:	fb05 f204 	mul.w	r2, r5, r4
90013798:	1abf      	subs	r7, r7, r2
9001379a:	4494      	add	ip, r2
9001379c:	f8ba 2004 	ldrh.w	r2, [sl, #4]
900137a0:	4411      	add	r1, r2
900137a2:	eb09 020c 	add.w	r2, r9, ip
900137a6:	b209      	sxth	r1, r1
900137a8:	443a      	add	r2, r7
900137aa:	428a      	cmp	r2, r1
900137ac:	bfc4      	itt	gt
900137ae:	eba1 0209 	subgt.w	r2, r1, r9
900137b2:	eba2 070c 	subgt.w	r7, r2, ip
900137b6:	2f00      	cmp	r7, #0
900137b8:	dd50      	ble.n	9001385c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
900137ba:	fb97 f1f4 	sdiv	r1, r7, r4
900137be:	fb04 7211 	mls	r2, r4, r1, r7
900137c2:	b90a      	cbnz	r2, 900137c8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
900137c4:	3901      	subs	r1, #1
900137c6:	4622      	mov	r2, r4
900137c8:	eec7 3a80 	vdiv.f32	s7, s15, s0
900137cc:	6840      	ldr	r0, [r0, #4]
900137ce:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
900137d2:	44b6      	add	lr, r6
900137d4:	f8d0 a000 	ldr.w	sl, [r0]
900137d8:	2900      	cmp	r1, #0
900137da:	bfcc      	ite	gt
900137dc:	46a1      	movgt	r9, r4
900137de:	4691      	movle	r9, r2
900137e0:	900b      	str	r0, [sp, #44]	; 0x2c
900137e2:	9817      	ldr	r0, [sp, #92]	; 0x5c
900137e4:	fb04 e505 	mla	r5, r4, r5, lr
900137e8:	eef0 6a42 	vmov.f32	s13, s4
900137ec:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
900137f0:	9008      	str	r0, [sp, #32]
900137f2:	eeb0 7a61 	vmov.f32	s14, s3
900137f6:	9818      	ldr	r0, [sp, #96]	; 0x60
900137f8:	695b      	ldr	r3, [r3, #20]
900137fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900137fe:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
90013802:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
90013806:	980b      	ldr	r0, [sp, #44]	; 0x2c
90013808:	445b      	add	r3, fp
9001380a:	9307      	str	r3, [sp, #28]
9001380c:	ee16 3a90 	vmov	r3, s13
90013810:	e9cd 8505 	strd	r8, r5, [sp, #20]
90013814:	ee60 2aa3 	vmul.f32	s5, s1, s7
90013818:	ee21 3a23 	vmul.f32	s6, s2, s7
9001381c:	ee72 7ae1 	vsub.f32	s15, s5, s3
90013820:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90013824:	ee17 7a90 	vmov	r7, s15
90013828:	ee73 7a42 	vsub.f32	s15, s6, s4
9001382c:	fb97 f7f4 	sdiv	r7, r7, r4
90013830:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90013834:	ee17 ca90 	vmov	ip, s15
90013838:	fb9c fcf4 	sdiv	ip, ip, r4
9001383c:	fb0c 3306 	mla	r3, ip, r6, r3
90013840:	9302      	str	r3, [sp, #8]
90013842:	ee17 3a10 	vmov	r3, s14
90013846:	e9cd 7c03 	strd	r7, ip, [sp, #12]
9001384a:	fb07 3706 	mla	r7, r7, r6, r3
9001384e:	eba9 0306 	sub.w	r3, r9, r6
90013852:	e9cd 4700 	strd	r4, r7, [sp]
90013856:	f8da 4008 	ldr.w	r4, [sl, #8]
9001385a:	47a0      	blx	r4
9001385c:	b00d      	add	sp, #52	; 0x34
9001385e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013862:	2500      	movs	r5, #0
90013864:	462e      	mov	r6, r5
90013866:	e799      	b.n	9001379c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

90013868 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90013868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001386c:	b0db      	sub	sp, #364	; 0x16c
9001386e:	461d      	mov	r5, r3
90013870:	4614      	mov	r4, r2
90013872:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
90013876:	910f      	str	r1, [sp, #60]	; 0x3c
90013878:	4629      	mov	r1, r5
9001387a:	930a      	str	r3, [sp, #40]	; 0x28
9001387c:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
90013880:	9009      	str	r0, [sp, #36]	; 0x24
90013882:	930b      	str	r3, [sp, #44]	; 0x2c
90013884:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
90013888:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
9001388c:	9310      	str	r3, [sp, #64]	; 0x40
9001388e:	6803      	ldr	r3, [r0, #0]
90013890:	6c5f      	ldr	r7, [r3, #68]	; 0x44
90013892:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
90013896:	47b8      	blx	r7
90013898:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001389a:	6058      	str	r0, [r3, #4]
9001389c:	2800      	cmp	r0, #0
9001389e:	f000 83a1 	beq.w	90013fe4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900138a2:	682b      	ldr	r3, [r5, #0]
900138a4:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
900138a8:	ed94 7a02 	vldr	s14, [r4, #8]
900138ac:	9314      	str	r3, [sp, #80]	; 0x50
900138ae:	686b      	ldr	r3, [r5, #4]
900138b0:	eeb4 7ae7 	vcmpe.f32	s14, s15
900138b4:	9315      	str	r3, [sp, #84]	; 0x54
900138b6:	4bc1      	ldr	r3, [pc, #772]	; (90013bbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
900138b8:	7819      	ldrb	r1, [r3, #0]
900138ba:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
900138be:	2900      	cmp	r1, #0
900138c0:	bf16      	itet	ne
900138c2:	4619      	movne	r1, r3
900138c4:	4611      	moveq	r1, r2
900138c6:	4613      	movne	r3, r2
900138c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900138cc:	9116      	str	r1, [sp, #88]	; 0x58
900138ce:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
900138d2:	f240 8387 	bls.w	90013fe4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900138d6:	ed94 7a07 	vldr	s14, [r4, #28]
900138da:	eeb4 7ae7 	vcmpe.f32	s14, s15
900138de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900138e2:	f240 837f 	bls.w	90013fe4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900138e6:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
900138ea:	eeb4 7ae7 	vcmpe.f32	s14, s15
900138ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900138f2:	f240 8377 	bls.w	90013fe4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900138f6:	6822      	ldr	r2, [r4, #0]
900138f8:	4bb1      	ldr	r3, [pc, #708]	; (90013bc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
900138fa:	429a      	cmp	r2, r3
900138fc:	f2c0 8372 	blt.w	90013fe4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013900:	49b0      	ldr	r1, [pc, #704]	; (90013bc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
90013902:	6963      	ldr	r3, [r4, #20]
90013904:	428a      	cmp	r2, r1
90013906:	f300 836d 	bgt.w	90013fe4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001390a:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
9001390e:	48ae      	ldr	r0, [pc, #696]	; (90013bc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
90013910:	33ff      	adds	r3, #255	; 0xff
90013912:	4283      	cmp	r3, r0
90013914:	f200 8366 	bhi.w	90013fe4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013918:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9001391a:	4dac      	ldr	r5, [pc, #688]	; (90013bcc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
9001391c:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
90013920:	33ff      	adds	r3, #255	; 0xff
90013922:	42ab      	cmp	r3, r5
90013924:	f200 835e 	bhi.w	90013fe4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013928:	6862      	ldr	r2, [r4, #4]
9001392a:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
9001392e:	33ff      	adds	r3, #255	; 0xff
90013930:	4283      	cmp	r3, r0
90013932:	f200 8357 	bhi.w	90013fe4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013936:	69a1      	ldr	r1, [r4, #24]
90013938:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
9001393c:	33ff      	adds	r3, #255	; 0xff
9001393e:	4283      	cmp	r3, r0
90013940:	f200 8350 	bhi.w	90013fe4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013944:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90013946:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
9001394a:	30ff      	adds	r0, #255	; 0xff
9001394c:	42a8      	cmp	r0, r5
9001394e:	f200 8349 	bhi.w	90013fe4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013952:	428a      	cmp	r2, r1
90013954:	f280 8110 	bge.w	90013b78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
90013958:	429a      	cmp	r2, r3
9001395a:	f300 8119 	bgt.w	90013b90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
9001395e:	4299      	cmp	r1, r3
90013960:	f280 811d 	bge.w	90013b9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
90013964:	2502      	movs	r5, #2
90013966:	2701      	movs	r7, #1
90013968:	46a9      	mov	r9, r5
9001396a:	46b8      	mov	r8, r7
9001396c:	f04f 0a00 	mov.w	sl, #0
90013970:	4621      	mov	r1, r4
90013972:	a849      	add	r0, sp, #292	; 0x124
90013974:	f003 fe26 	bl	900175c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
90013978:	4622      	mov	r2, r4
9001397a:	4653      	mov	r3, sl
9001397c:	a949      	add	r1, sp, #292	; 0x124
9001397e:	f8cd 9000 	str.w	r9, [sp]
90013982:	a819      	add	r0, sp, #100	; 0x64
90013984:	f003 ff4e 	bl	90017824 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90013988:	4622      	mov	r2, r4
9001398a:	4653      	mov	r3, sl
9001398c:	a949      	add	r1, sp, #292	; 0x124
9001398e:	f8cd 8000 	str.w	r8, [sp]
90013992:	a829      	add	r0, sp, #164	; 0xa4
90013994:	f003 ff46 	bl	90017824 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90013998:	4643      	mov	r3, r8
9001399a:	4622      	mov	r2, r4
9001399c:	a949      	add	r1, sp, #292	; 0x124
9001399e:	f8cd 9000 	str.w	r9, [sp]
900139a2:	a839      	add	r0, sp, #228	; 0xe4
900139a4:	f003 ff3e 	bl	90017824 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
900139a8:	42af      	cmp	r7, r5
900139aa:	af12      	add	r7, sp, #72	; 0x48
900139ac:	bfb7      	itett	lt
900139ae:	2300      	movlt	r3, #0
900139b0:	2301      	movge	r3, #1
900139b2:	ad29      	addlt	r5, sp, #164	; 0xa4
900139b4:	ac19      	addlt	r4, sp, #100	; 0x64
900139b6:	bfb1      	iteee	lt
900139b8:	930e      	strlt	r3, [sp, #56]	; 0x38
900139ba:	ad19      	addge	r5, sp, #100	; 0x64
900139bc:	930e      	strge	r3, [sp, #56]	; 0x38
900139be:	ac29      	addge	r4, sp, #164	; 0xa4
900139c0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900139c2:	e893 0003 	ldmia.w	r3, {r0, r1}
900139c6:	e887 0003 	stmia.w	r7, {r0, r1}
900139ca:	b928      	cbnz	r0, 900139d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
900139cc:	4b80      	ldr	r3, [pc, #512]	; (90013bd0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
900139ce:	6818      	ldr	r0, [r3, #0]
900139d0:	6803      	ldr	r3, [r0, #0]
900139d2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900139d4:	4798      	blx	r3
900139d6:	6038      	str	r0, [r7, #0]
900139d8:	9b64      	ldr	r3, [sp, #400]	; 0x190
900139da:	f8bb 0006 	ldrh.w	r0, [fp, #6]
900139de:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
900139e2:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
900139e4:	930c      	str	r3, [sp, #48]	; 0x30
900139e6:	990c      	ldr	r1, [sp, #48]	; 0x30
900139e8:	6963      	ldr	r3, [r4, #20]
900139ea:	440b      	add	r3, r1
900139ec:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
900139f0:	4408      	add	r0, r1
900139f2:	b200      	sxth	r0, r0
900139f4:	4283      	cmp	r3, r0
900139f6:	900d      	str	r0, [sp, #52]	; 0x34
900139f8:	f280 80dd 	bge.w	90013bb6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
900139fc:	428b      	cmp	r3, r1
900139fe:	da08      	bge.n	90013a12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90013a00:	2a00      	cmp	r2, #0
90013a02:	dd06      	ble.n	90013a12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90013a04:	1acb      	subs	r3, r1, r3
90013a06:	429a      	cmp	r2, r3
90013a08:	f2c0 80e4 	blt.w	90013bd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
90013a0c:	2b00      	cmp	r3, #0
90013a0e:	f300 80e2 	bgt.w	90013bd6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
90013a12:	6967      	ldr	r7, [r4, #20]
90013a14:	f10d 0850 	add.w	r8, sp, #80	; 0x50
90013a18:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90013a1a:	443b      	add	r3, r7
90013a1c:	461f      	mov	r7, r3
90013a1e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90013a20:	1bdf      	subs	r7, r3, r7
90013a22:	4297      	cmp	r7, r2
90013a24:	bfa8      	it	ge
90013a26:	4617      	movge	r7, r2
90013a28:	2f00      	cmp	r7, #0
90013a2a:	f340 8166 	ble.w	90013cfa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
90013a2e:	9b64      	ldr	r3, [sp, #400]	; 0x190
90013a30:	6829      	ldr	r1, [r5, #0]
90013a32:	f9b3 2000 	ldrsh.w	r2, [r3]
90013a36:	f9bb 3000 	ldrsh.w	r3, [fp]
90013a3a:	4411      	add	r1, r2
90013a3c:	6820      	ldr	r0, [r4, #0]
90013a3e:	4299      	cmp	r1, r3
90013a40:	dd1a      	ble.n	90013a78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90013a42:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90013a46:	4402      	add	r2, r0
90013a48:	440b      	add	r3, r1
90013a4a:	b21b      	sxth	r3, r3
90013a4c:	429a      	cmp	r2, r3
90013a4e:	dc13      	bgt.n	90013a78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90013a50:	9a10      	ldr	r2, [sp, #64]	; 0x40
90013a52:	a912      	add	r1, sp, #72	; 0x48
90013a54:	9b09      	ldr	r3, [sp, #36]	; 0x24
90013a56:	9809      	ldr	r0, [sp, #36]	; 0x24
90013a58:	681b      	ldr	r3, [r3, #0]
90013a5a:	9206      	str	r2, [sp, #24]
90013a5c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90013a5e:	9500      	str	r5, [sp, #0]
90013a60:	9205      	str	r2, [sp, #20]
90013a62:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90013a64:	e9cd b203 	strd	fp, r2, [sp, #12]
90013a68:	9a64      	ldr	r2, [sp, #400]	; 0x190
90013a6a:	e9cd 8201 	strd	r8, r2, [sp, #4]
90013a6e:	aa49      	add	r2, sp, #292	; 0x124
90013a70:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
90013a74:	4623      	mov	r3, r4
90013a76:	47c8      	blx	r9
90013a78:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
90013a7c:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
90013a80:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
90013a84:	ee37 7a27 	vadd.f32	s14, s14, s15
90013a88:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
90013a8c:	68a1      	ldr	r1, [r4, #8]
90013a8e:	ee77 7aa6 	vadd.f32	s15, s15, s13
90013a92:	ed94 6a08 	vldr	s12, [r4, #32]
90013a96:	edd4 6a07 	vldr	s13, [r4, #28]
90013a9a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90013a9e:	ee76 6a86 	vadd.f32	s13, s13, s12
90013aa2:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90013aa6:	e9d4 2300 	ldrd	r2, r3, [r4]
90013aaa:	edc4 6a07 	vstr	s13, [r4, #28]
90013aae:	441a      	add	r2, r3
90013ab0:	6963      	ldr	r3, [r4, #20]
90013ab2:	3301      	adds	r3, #1
90013ab4:	6022      	str	r2, [r4, #0]
90013ab6:	6163      	str	r3, [r4, #20]
90013ab8:	69a3      	ldr	r3, [r4, #24]
90013aba:	3b01      	subs	r3, #1
90013abc:	61a3      	str	r3, [r4, #24]
90013abe:	6923      	ldr	r3, [r4, #16]
90013ac0:	440b      	add	r3, r1
90013ac2:	68e1      	ldr	r1, [r4, #12]
90013ac4:	428b      	cmp	r3, r1
90013ac6:	6123      	str	r3, [r4, #16]
90013ac8:	db15      	blt.n	90013af6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
90013aca:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
90013ace:	3201      	adds	r2, #1
90013ad0:	1a5b      	subs	r3, r3, r1
90013ad2:	ee76 6a26 	vadd.f32	s13, s12, s13
90013ad6:	6022      	str	r2, [r4, #0]
90013ad8:	6123      	str	r3, [r4, #16]
90013ada:	edc4 6a07 	vstr	s13, [r4, #28]
90013ade:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
90013ae2:	ee36 7a87 	vadd.f32	s14, s13, s14
90013ae6:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90013aea:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
90013aee:	ee77 7a27 	vadd.f32	s15, s14, s15
90013af2:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90013af6:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
90013afa:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
90013afe:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
90013b02:	ee37 7a27 	vadd.f32	s14, s14, s15
90013b06:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
90013b0a:	68a9      	ldr	r1, [r5, #8]
90013b0c:	ee77 7aa6 	vadd.f32	s15, s15, s13
90013b10:	ed95 6a08 	vldr	s12, [r5, #32]
90013b14:	edd5 6a07 	vldr	s13, [r5, #28]
90013b18:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90013b1c:	ee76 6a86 	vadd.f32	s13, s13, s12
90013b20:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90013b24:	e9d5 2300 	ldrd	r2, r3, [r5]
90013b28:	edc5 6a07 	vstr	s13, [r5, #28]
90013b2c:	441a      	add	r2, r3
90013b2e:	696b      	ldr	r3, [r5, #20]
90013b30:	3301      	adds	r3, #1
90013b32:	602a      	str	r2, [r5, #0]
90013b34:	616b      	str	r3, [r5, #20]
90013b36:	69ab      	ldr	r3, [r5, #24]
90013b38:	3b01      	subs	r3, #1
90013b3a:	61ab      	str	r3, [r5, #24]
90013b3c:	692b      	ldr	r3, [r5, #16]
90013b3e:	440b      	add	r3, r1
90013b40:	68e9      	ldr	r1, [r5, #12]
90013b42:	428b      	cmp	r3, r1
90013b44:	612b      	str	r3, [r5, #16]
90013b46:	db15      	blt.n	90013b74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
90013b48:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
90013b4c:	3201      	adds	r2, #1
90013b4e:	1a5b      	subs	r3, r3, r1
90013b50:	ee76 6a26 	vadd.f32	s13, s12, s13
90013b54:	602a      	str	r2, [r5, #0]
90013b56:	612b      	str	r3, [r5, #16]
90013b58:	edc5 6a07 	vstr	s13, [r5, #28]
90013b5c:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
90013b60:	ee36 7a87 	vadd.f32	s14, s13, s14
90013b64:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90013b68:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
90013b6c:	ee77 7a27 	vadd.f32	s15, s14, s15
90013b70:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90013b74:	3f01      	subs	r7, #1
90013b76:	e757      	b.n	90013a28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
90013b78:	4299      	cmp	r1, r3
90013b7a:	dc13      	bgt.n	90013ba4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
90013b7c:	429a      	cmp	r2, r3
90013b7e:	da14      	bge.n	90013baa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
90013b80:	2502      	movs	r5, #2
90013b82:	2703      	movs	r7, #3
90013b84:	f04f 0800 	mov.w	r8, #0
90013b88:	46a9      	mov	r9, r5
90013b8a:	f04f 0a01 	mov.w	sl, #1
90013b8e:	e6ef      	b.n	90013970 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90013b90:	2501      	movs	r5, #1
90013b92:	2700      	movs	r7, #0
90013b94:	46a9      	mov	r9, r5
90013b96:	46b8      	mov	r8, r7
90013b98:	f04f 0a02 	mov.w	sl, #2
90013b9c:	e6e8      	b.n	90013970 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90013b9e:	2501      	movs	r5, #1
90013ba0:	2702      	movs	r7, #2
90013ba2:	e6e1      	b.n	90013968 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
90013ba4:	2500      	movs	r5, #0
90013ba6:	2701      	movs	r7, #1
90013ba8:	e7f4      	b.n	90013b94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
90013baa:	2702      	movs	r7, #2
90013bac:	2503      	movs	r5, #3
90013bae:	f04f 0900 	mov.w	r9, #0
90013bb2:	46b8      	mov	r8, r7
90013bb4:	e7e9      	b.n	90013b8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
90013bb6:	4613      	mov	r3, r2
90013bb8:	e728      	b.n	90013a0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
90013bba:	bf00      	nop
90013bbc:	240235a4 	.word	0x240235a4
90013bc0:	fffd8f01 	.word	0xfffd8f01
90013bc4:	00027100 	.word	0x00027100
90013bc8:	0004e1ff 	.word	0x0004e1ff
90013bcc:	0004e1fe 	.word	0x0004e1fe
90013bd0:	240235ac 	.word	0x240235ac
90013bd4:	4613      	mov	r3, r2
90013bd6:	992b      	ldr	r1, [sp, #172]	; 0xac
90013bd8:	469e      	mov	lr, r3
90013bda:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
90013bdc:	469c      	mov	ip, r3
90013bde:	9111      	str	r1, [sp, #68]	; 0x44
90013be0:	f04f 0900 	mov.w	r9, #0
90013be4:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
90013be8:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
90013bec:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
90013bf0:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
90013bf4:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
90013bf8:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
90013bfc:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
90013c00:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
90013c04:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
90013c08:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
90013c0c:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
90013c10:	f1bc 0f00 	cmp.w	ip, #0
90013c14:	d147      	bne.n	90013ca6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
90013c16:	eb03 0c07 	add.w	ip, r3, r7
90013c1a:	1ad7      	subs	r7, r2, r3
90013c1c:	f1b9 0f00 	cmp.w	r9, #0
90013c20:	d009      	beq.n	90013c36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
90013c22:	9029      	str	r0, [sp, #164]	; 0xa4
90013c24:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
90013c28:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
90013c2c:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
90013c30:	912d      	str	r1, [sp, #180]	; 0xb4
90013c32:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
90013c36:	991b      	ldr	r1, [sp, #108]	; 0x6c
90013c38:	f04f 0800 	mov.w	r8, #0
90013c3c:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
90013c40:	9111      	str	r1, [sp, #68]	; 0x44
90013c42:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
90013c46:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
90013c4a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
90013c4e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
90013c52:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
90013c56:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
90013c5a:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
90013c5e:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
90013c62:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
90013c66:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
90013c6a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
90013c6e:	f1be 0f00 	cmp.w	lr, #0
90013c72:	d031      	beq.n	90013cd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
90013c74:	9e11      	ldr	r6, [sp, #68]	; 0x44
90013c76:	4450      	add	r0, sl
90013c78:	ee76 6aa4 	vadd.f32	s13, s13, s9
90013c7c:	4431      	add	r1, r6
90013c7e:	ee37 7a04 	vadd.f32	s14, s14, s8
90013c82:	ee77 7aa3 	vadd.f32	s15, s15, s7
90013c86:	4549      	cmp	r1, r9
90013c88:	db08      	blt.n	90013c9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
90013c8a:	ee77 7a85 	vadd.f32	s15, s15, s10
90013c8e:	3001      	adds	r0, #1
90013c90:	ee76 6aa5 	vadd.f32	s13, s13, s11
90013c94:	eba1 0109 	sub.w	r1, r1, r9
90013c98:	ee37 7a06 	vadd.f32	s14, s14, s12
90013c9c:	f10e 3eff 	add.w	lr, lr, #4294967295
90013ca0:	f04f 0801 	mov.w	r8, #1
90013ca4:	e7e3      	b.n	90013c6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
90013ca6:	9e11      	ldr	r6, [sp, #68]	; 0x44
90013ca8:	4450      	add	r0, sl
90013caa:	ee37 7a24 	vadd.f32	s14, s14, s9
90013cae:	4431      	add	r1, r6
90013cb0:	ee77 7a84 	vadd.f32	s15, s15, s8
90013cb4:	ee76 6aa3 	vadd.f32	s13, s13, s7
90013cb8:	4541      	cmp	r1, r8
90013cba:	db08      	blt.n	90013cce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
90013cbc:	ee76 6a85 	vadd.f32	s13, s13, s10
90013cc0:	3001      	adds	r0, #1
90013cc2:	ee37 7a25 	vadd.f32	s14, s14, s11
90013cc6:	eba1 0108 	sub.w	r1, r1, r8
90013cca:	ee77 7a86 	vadd.f32	s15, s15, s12
90013cce:	f10c 3cff 	add.w	ip, ip, #4294967295
90013cd2:	f04f 0901 	mov.w	r9, #1
90013cd6:	e79b      	b.n	90013c10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
90013cd8:	449c      	add	ip, r3
90013cda:	1aff      	subs	r7, r7, r3
90013cdc:	f1b8 0f00 	cmp.w	r8, #0
90013ce0:	d009      	beq.n	90013cf6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
90013ce2:	9019      	str	r0, [sp, #100]	; 0x64
90013ce4:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
90013ce8:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
90013cec:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
90013cf0:	911d      	str	r1, [sp, #116]	; 0x74
90013cf2:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
90013cf6:	1ad2      	subs	r2, r2, r3
90013cf8:	e68b      	b.n	90013a12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90013cfa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90013cfc:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
90013cfe:	2b00      	cmp	r3, #0
90013d00:	f000 80d1 	beq.w	90013ea6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
90013d04:	ad19      	add	r5, sp, #100	; 0x64
90013d06:	ac39      	add	r4, sp, #228	; 0xe4
90013d08:	9b64      	ldr	r3, [sp, #400]	; 0x190
90013d0a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90013d0e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90013d12:	930c      	str	r3, [sp, #48]	; 0x30
90013d14:	990c      	ldr	r1, [sp, #48]	; 0x30
90013d16:	6963      	ldr	r3, [r4, #20]
90013d18:	440b      	add	r3, r1
90013d1a:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90013d1e:	4408      	add	r0, r1
90013d20:	b200      	sxth	r0, r0
90013d22:	4283      	cmp	r3, r0
90013d24:	900d      	str	r0, [sp, #52]	; 0x34
90013d26:	f280 80c1 	bge.w	90013eac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
90013d2a:	428b      	cmp	r3, r1
90013d2c:	da08      	bge.n	90013d40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90013d2e:	2a00      	cmp	r2, #0
90013d30:	dd06      	ble.n	90013d40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90013d32:	1acb      	subs	r3, r1, r3
90013d34:	429a      	cmp	r2, r3
90013d36:	f2c0 80bb 	blt.w	90013eb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
90013d3a:	2b00      	cmp	r3, #0
90013d3c:	f300 80b9 	bgt.w	90013eb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
90013d40:	6967      	ldr	r7, [r4, #20]
90013d42:	f10d 0850 	add.w	r8, sp, #80	; 0x50
90013d46:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90013d48:	443b      	add	r3, r7
90013d4a:	461f      	mov	r7, r3
90013d4c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90013d4e:	1bdf      	subs	r7, r3, r7
90013d50:	4297      	cmp	r7, r2
90013d52:	bfa8      	it	ge
90013d54:	4617      	movge	r7, r2
90013d56:	2f00      	cmp	r7, #0
90013d58:	f340 813c 	ble.w	90013fd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
90013d5c:	9b64      	ldr	r3, [sp, #400]	; 0x190
90013d5e:	6829      	ldr	r1, [r5, #0]
90013d60:	f9b3 2000 	ldrsh.w	r2, [r3]
90013d64:	f9bb 3000 	ldrsh.w	r3, [fp]
90013d68:	4411      	add	r1, r2
90013d6a:	6820      	ldr	r0, [r4, #0]
90013d6c:	4299      	cmp	r1, r3
90013d6e:	dd1a      	ble.n	90013da6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90013d70:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90013d74:	4402      	add	r2, r0
90013d76:	440b      	add	r3, r1
90013d78:	b21b      	sxth	r3, r3
90013d7a:	429a      	cmp	r2, r3
90013d7c:	dc13      	bgt.n	90013da6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90013d7e:	9a10      	ldr	r2, [sp, #64]	; 0x40
90013d80:	a912      	add	r1, sp, #72	; 0x48
90013d82:	9b09      	ldr	r3, [sp, #36]	; 0x24
90013d84:	9809      	ldr	r0, [sp, #36]	; 0x24
90013d86:	681b      	ldr	r3, [r3, #0]
90013d88:	9206      	str	r2, [sp, #24]
90013d8a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90013d8c:	9500      	str	r5, [sp, #0]
90013d8e:	9205      	str	r2, [sp, #20]
90013d90:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90013d92:	e9cd b203 	strd	fp, r2, [sp, #12]
90013d96:	9a64      	ldr	r2, [sp, #400]	; 0x190
90013d98:	e9cd 8201 	strd	r8, r2, [sp, #4]
90013d9c:	aa49      	add	r2, sp, #292	; 0x124
90013d9e:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
90013da2:	4623      	mov	r3, r4
90013da4:	47c8      	blx	r9
90013da6:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
90013daa:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
90013dae:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
90013db2:	ee37 7a27 	vadd.f32	s14, s14, s15
90013db6:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
90013dba:	68a1      	ldr	r1, [r4, #8]
90013dbc:	ee77 7aa6 	vadd.f32	s15, s15, s13
90013dc0:	ed94 6a08 	vldr	s12, [r4, #32]
90013dc4:	edd4 6a07 	vldr	s13, [r4, #28]
90013dc8:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90013dcc:	ee76 6a86 	vadd.f32	s13, s13, s12
90013dd0:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90013dd4:	e9d4 2300 	ldrd	r2, r3, [r4]
90013dd8:	edc4 6a07 	vstr	s13, [r4, #28]
90013ddc:	441a      	add	r2, r3
90013dde:	6963      	ldr	r3, [r4, #20]
90013de0:	3301      	adds	r3, #1
90013de2:	6022      	str	r2, [r4, #0]
90013de4:	6163      	str	r3, [r4, #20]
90013de6:	69a3      	ldr	r3, [r4, #24]
90013de8:	3b01      	subs	r3, #1
90013dea:	61a3      	str	r3, [r4, #24]
90013dec:	6923      	ldr	r3, [r4, #16]
90013dee:	440b      	add	r3, r1
90013df0:	68e1      	ldr	r1, [r4, #12]
90013df2:	428b      	cmp	r3, r1
90013df4:	6123      	str	r3, [r4, #16]
90013df6:	db15      	blt.n	90013e24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
90013df8:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
90013dfc:	3201      	adds	r2, #1
90013dfe:	1a5b      	subs	r3, r3, r1
90013e00:	ee76 6a26 	vadd.f32	s13, s12, s13
90013e04:	6022      	str	r2, [r4, #0]
90013e06:	6123      	str	r3, [r4, #16]
90013e08:	edc4 6a07 	vstr	s13, [r4, #28]
90013e0c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
90013e10:	ee36 7a87 	vadd.f32	s14, s13, s14
90013e14:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90013e18:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
90013e1c:	ee77 7a27 	vadd.f32	s15, s14, s15
90013e20:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90013e24:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
90013e28:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
90013e2c:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
90013e30:	ee37 7a27 	vadd.f32	s14, s14, s15
90013e34:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
90013e38:	68a9      	ldr	r1, [r5, #8]
90013e3a:	ee77 7aa6 	vadd.f32	s15, s15, s13
90013e3e:	ed95 6a08 	vldr	s12, [r5, #32]
90013e42:	edd5 6a07 	vldr	s13, [r5, #28]
90013e46:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90013e4a:	ee76 6a86 	vadd.f32	s13, s13, s12
90013e4e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90013e52:	e9d5 2300 	ldrd	r2, r3, [r5]
90013e56:	edc5 6a07 	vstr	s13, [r5, #28]
90013e5a:	441a      	add	r2, r3
90013e5c:	696b      	ldr	r3, [r5, #20]
90013e5e:	3301      	adds	r3, #1
90013e60:	602a      	str	r2, [r5, #0]
90013e62:	616b      	str	r3, [r5, #20]
90013e64:	69ab      	ldr	r3, [r5, #24]
90013e66:	3b01      	subs	r3, #1
90013e68:	61ab      	str	r3, [r5, #24]
90013e6a:	692b      	ldr	r3, [r5, #16]
90013e6c:	440b      	add	r3, r1
90013e6e:	68e9      	ldr	r1, [r5, #12]
90013e70:	428b      	cmp	r3, r1
90013e72:	612b      	str	r3, [r5, #16]
90013e74:	db15      	blt.n	90013ea2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
90013e76:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
90013e7a:	3201      	adds	r2, #1
90013e7c:	1a5b      	subs	r3, r3, r1
90013e7e:	ee76 6a26 	vadd.f32	s13, s12, s13
90013e82:	602a      	str	r2, [r5, #0]
90013e84:	612b      	str	r3, [r5, #16]
90013e86:	edc5 6a07 	vstr	s13, [r5, #28]
90013e8a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
90013e8e:	ee36 7a87 	vadd.f32	s14, s13, s14
90013e92:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90013e96:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
90013e9a:	ee77 7a27 	vadd.f32	s15, s14, s15
90013e9e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90013ea2:	3f01      	subs	r7, #1
90013ea4:	e757      	b.n	90013d56 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
90013ea6:	ad39      	add	r5, sp, #228	; 0xe4
90013ea8:	ac19      	add	r4, sp, #100	; 0x64
90013eaa:	e72d      	b.n	90013d08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
90013eac:	4613      	mov	r3, r2
90013eae:	e744      	b.n	90013d3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
90013eb0:	4613      	mov	r3, r2
90013eb2:	9e3b      	ldr	r6, [sp, #236]	; 0xec
90013eb4:	469e      	mov	lr, r3
90013eb6:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
90013eba:	461f      	mov	r7, r3
90013ebc:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
90013ec0:	f04f 0900 	mov.w	r9, #0
90013ec4:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
90013ec8:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
90013ecc:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
90013ed0:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
90013ed4:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
90013ed8:	993d      	ldr	r1, [sp, #244]	; 0xf4
90013eda:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
90013ede:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
90013ee2:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
90013ee6:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
90013eea:	960e      	str	r6, [sp, #56]	; 0x38
90013eec:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
90013ef0:	2f00      	cmp	r7, #0
90013ef2:	d146      	bne.n	90013f82 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
90013ef4:	449c      	add	ip, r3
90013ef6:	1ad7      	subs	r7, r2, r3
90013ef8:	f1b9 0f00 	cmp.w	r9, #0
90013efc:	d009      	beq.n	90013f12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
90013efe:	9039      	str	r0, [sp, #228]	; 0xe4
90013f00:	913d      	str	r1, [sp, #244]	; 0xf4
90013f02:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
90013f06:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
90013f0a:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
90013f0e:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
90013f12:	991b      	ldr	r1, [sp, #108]	; 0x6c
90013f14:	f04f 0800 	mov.w	r8, #0
90013f18:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
90013f1c:	910e      	str	r1, [sp, #56]	; 0x38
90013f1e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
90013f22:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
90013f26:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
90013f2a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
90013f2e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
90013f32:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
90013f36:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
90013f3a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
90013f3e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
90013f42:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
90013f46:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
90013f4a:	f1be 0f00 	cmp.w	lr, #0
90013f4e:	d030      	beq.n	90013fb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
90013f50:	9e0e      	ldr	r6, [sp, #56]	; 0x38
90013f52:	4450      	add	r0, sl
90013f54:	ee76 6aa4 	vadd.f32	s13, s13, s9
90013f58:	4431      	add	r1, r6
90013f5a:	ee37 7a04 	vadd.f32	s14, s14, s8
90013f5e:	ee77 7aa3 	vadd.f32	s15, s15, s7
90013f62:	4549      	cmp	r1, r9
90013f64:	db08      	blt.n	90013f78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
90013f66:	ee77 7a85 	vadd.f32	s15, s15, s10
90013f6a:	3001      	adds	r0, #1
90013f6c:	ee76 6aa5 	vadd.f32	s13, s13, s11
90013f70:	eba1 0109 	sub.w	r1, r1, r9
90013f74:	ee37 7a06 	vadd.f32	s14, s14, s12
90013f78:	f10e 3eff 	add.w	lr, lr, #4294967295
90013f7c:	f04f 0801 	mov.w	r8, #1
90013f80:	e7e3      	b.n	90013f4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
90013f82:	9e0e      	ldr	r6, [sp, #56]	; 0x38
90013f84:	4450      	add	r0, sl
90013f86:	ee37 7a24 	vadd.f32	s14, s14, s9
90013f8a:	4431      	add	r1, r6
90013f8c:	ee77 7a84 	vadd.f32	s15, s15, s8
90013f90:	ee76 6aa3 	vadd.f32	s13, s13, s7
90013f94:	4541      	cmp	r1, r8
90013f96:	db08      	blt.n	90013faa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
90013f98:	ee76 6a85 	vadd.f32	s13, s13, s10
90013f9c:	3001      	adds	r0, #1
90013f9e:	ee37 7a25 	vadd.f32	s14, s14, s11
90013fa2:	eba1 0108 	sub.w	r1, r1, r8
90013fa6:	ee77 7a86 	vadd.f32	s15, s15, s12
90013faa:	3f01      	subs	r7, #1
90013fac:	f04f 0901 	mov.w	r9, #1
90013fb0:	e79e      	b.n	90013ef0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
90013fb2:	449c      	add	ip, r3
90013fb4:	1aff      	subs	r7, r7, r3
90013fb6:	f1b8 0f00 	cmp.w	r8, #0
90013fba:	d009      	beq.n	90013fd0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
90013fbc:	9019      	str	r0, [sp, #100]	; 0x64
90013fbe:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
90013fc2:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
90013fc6:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
90013fca:	911d      	str	r1, [sp, #116]	; 0x74
90013fcc:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
90013fd0:	1ad2      	subs	r2, r2, r3
90013fd2:	e6b5      	b.n	90013d40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90013fd4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90013fd6:	681b      	ldr	r3, [r3, #0]
90013fd8:	b923      	cbnz	r3, 90013fe4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013fda:	4b04      	ldr	r3, [pc, #16]	; (90013fec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
90013fdc:	6818      	ldr	r0, [r3, #0]
90013fde:	6803      	ldr	r3, [r0, #0]
90013fe0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013fe2:	4798      	blx	r3
90013fe4:	b05b      	add	sp, #364	; 0x16c
90013fe6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013fea:	bf00      	nop
90013fec:	240235ac 	.word	0x240235ac

90013ff0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
90013ff0:	b570      	push	{r4, r5, r6, lr}
90013ff2:	4604      	mov	r4, r0
90013ff4:	2500      	movs	r5, #0
90013ff6:	9805      	ldr	r0, [sp, #20]
90013ff8:	f89d 601c 	ldrb.w	r6, [sp, #28]
90013ffc:	6061      	str	r1, [r4, #4]
90013ffe:	8263      	strh	r3, [r4, #18]
90014000:	f89d 1010 	ldrb.w	r1, [sp, #16]
90014004:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90014008:	8025      	strh	r5, [r4, #0]
9001400a:	7221      	strb	r1, [r4, #8]
9001400c:	7266      	strb	r6, [r4, #9]
9001400e:	60e0      	str	r0, [r4, #12]
90014010:	8222      	strh	r2, [r4, #16]
90014012:	82a3      	strh	r3, [r4, #20]
90014014:	82e5      	strh	r5, [r4, #22]
90014016:	8325      	strh	r5, [r4, #24]
90014018:	8365      	strh	r5, [r4, #26]
9001401a:	83a5      	strh	r5, [r4, #28]
9001401c:	83e5      	strh	r5, [r4, #30]
9001401e:	8425      	strh	r5, [r4, #32]
90014020:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
90014024:	b32e      	cbz	r6, 90014072 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90014026:	6803      	ldr	r3, [r0, #0]
90014028:	695b      	ldr	r3, [r3, #20]
9001402a:	4798      	blx	r3
9001402c:	4606      	mov	r6, r0
9001402e:	b300      	cbz	r0, 90014072 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90014030:	68e0      	ldr	r0, [r4, #12]
90014032:	4631      	mov	r1, r6
90014034:	6803      	ldr	r3, [r0, #0]
90014036:	68db      	ldr	r3, [r3, #12]
90014038:	4798      	blx	r3
9001403a:	4605      	mov	r5, r0
9001403c:	b1c8      	cbz	r0, 90014072 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
9001403e:	7b43      	ldrb	r3, [r0, #13]
90014040:	7a82      	ldrb	r2, [r0, #10]
90014042:	005b      	lsls	r3, r3, #1
90014044:	f403 7380 	and.w	r3, r3, #256	; 0x100
90014048:	4313      	orrs	r3, r2
9001404a:	8423      	strh	r3, [r4, #32]
9001404c:	7a63      	ldrb	r3, [r4, #9]
9001404e:	2b06      	cmp	r3, #6
90014050:	d10f      	bne.n	90014072 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90014052:	68e0      	ldr	r0, [r4, #12]
90014054:	462a      	mov	r2, r5
90014056:	4631      	mov	r1, r6
90014058:	6803      	ldr	r3, [r0, #0]
9001405a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9001405c:	4798      	blx	r3
9001405e:	7b6b      	ldrb	r3, [r5, #13]
90014060:	005b      	lsls	r3, r3, #1
90014062:	f403 7280 	and.w	r2, r3, #256	; 0x100
90014066:	7aab      	ldrb	r3, [r5, #10]
90014068:	4313      	orrs	r3, r2
9001406a:	4418      	add	r0, r3
9001406c:	8c23      	ldrh	r3, [r4, #32]
9001406e:	4418      	add	r0, r3
90014070:	8420      	strh	r0, [r4, #32]
90014072:	4620      	mov	r0, r4
90014074:	bd70      	pop	{r4, r5, r6, pc}

90014076 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
90014076:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001407a:	2400      	movs	r4, #0
9001407c:	b085      	sub	sp, #20
9001407e:	4681      	mov	r9, r0
90014080:	4688      	mov	r8, r1
90014082:	4692      	mov	sl, r2
90014084:	469b      	mov	fp, r3
90014086:	4627      	mov	r7, r4
90014088:	4625      	mov	r5, r4
9001408a:	4626      	mov	r6, r4
9001408c:	4554      	cmp	r4, sl
9001408e:	da2a      	bge.n	900140e6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90014090:	2300      	movs	r3, #0
90014092:	9303      	str	r3, [sp, #12]
90014094:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90014098:	429d      	cmp	r5, r3
9001409a:	d004      	beq.n	900140a6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
9001409c:	f242 030b 	movw	r3, #8203	; 0x200b
900140a0:	429d      	cmp	r5, r3
900140a2:	bf18      	it	ne
900140a4:	462f      	movne	r7, r5
900140a6:	ab03      	add	r3, sp, #12
900140a8:	4642      	mov	r2, r8
900140aa:	4659      	mov	r1, fp
900140ac:	4648      	mov	r0, r9
900140ae:	f003 f89f 	bl	900171f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900140b2:	4605      	mov	r5, r0
900140b4:	b1b8      	cbz	r0, 900140e6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
900140b6:	280a      	cmp	r0, #10
900140b8:	d015      	beq.n	900140e6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
900140ba:	9a03      	ldr	r2, [sp, #12]
900140bc:	b18a      	cbz	r2, 900140e2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
900140be:	7b50      	ldrb	r0, [r2, #13]
900140c0:	4639      	mov	r1, r7
900140c2:	7a93      	ldrb	r3, [r2, #10]
900140c4:	0040      	lsls	r0, r0, #1
900140c6:	8895      	ldrh	r5, [r2, #4]
900140c8:	f400 7080 	and.w	r0, r0, #256	; 0x100
900140cc:	4303      	orrs	r3, r0
900140ce:	4640      	mov	r0, r8
900140d0:	9301      	str	r3, [sp, #4]
900140d2:	f8d8 3000 	ldr.w	r3, [r8]
900140d6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900140d8:	4798      	blx	r3
900140da:	9b01      	ldr	r3, [sp, #4]
900140dc:	4418      	add	r0, r3
900140de:	4406      	add	r6, r0
900140e0:	b2b6      	uxth	r6, r6
900140e2:	3401      	adds	r4, #1
900140e4:	e7d2      	b.n	9001408c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
900140e6:	4630      	mov	r0, r6
900140e8:	b005      	add	sp, #20
900140ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900140ee <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
900140ee:	2a02      	cmp	r2, #2
900140f0:	b530      	push	{r4, r5, lr}
900140f2:	d011      	beq.n	90014118 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
900140f4:	2a03      	cmp	r2, #3
900140f6:	d01c      	beq.n	90014132 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
900140f8:	2a01      	cmp	r2, #1
900140fa:	d10c      	bne.n	90014116 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
900140fc:	888b      	ldrh	r3, [r1, #4]
900140fe:	8801      	ldrh	r1, [r0, #0]
90014100:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
90014104:	1a5b      	subs	r3, r3, r1
90014106:	8844      	ldrh	r4, [r0, #2]
90014108:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
9001410c:	1a9b      	subs	r3, r3, r2
9001410e:	8004      	strh	r4, [r0, #0]
90014110:	8081      	strh	r1, [r0, #4]
90014112:	8043      	strh	r3, [r0, #2]
90014114:	80c2      	strh	r2, [r0, #6]
90014116:	bd30      	pop	{r4, r5, pc}
90014118:	88cb      	ldrh	r3, [r1, #6]
9001411a:	8842      	ldrh	r2, [r0, #2]
9001411c:	1a9b      	subs	r3, r3, r2
9001411e:	88c2      	ldrh	r2, [r0, #6]
90014120:	1a9b      	subs	r3, r3, r2
90014122:	888a      	ldrh	r2, [r1, #4]
90014124:	8801      	ldrh	r1, [r0, #0]
90014126:	8043      	strh	r3, [r0, #2]
90014128:	1a52      	subs	r2, r2, r1
9001412a:	8881      	ldrh	r1, [r0, #4]
9001412c:	1a52      	subs	r2, r2, r1
9001412e:	8002      	strh	r2, [r0, #0]
90014130:	e7f1      	b.n	90014116 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90014132:	88cb      	ldrh	r3, [r1, #6]
90014134:	8841      	ldrh	r1, [r0, #2]
90014136:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
9001413a:	1a5b      	subs	r3, r3, r1
9001413c:	f9b0 5000 	ldrsh.w	r5, [r0]
90014140:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
90014144:	1a9b      	subs	r3, r3, r2
90014146:	8045      	strh	r5, [r0, #2]
90014148:	8082      	strh	r2, [r0, #4]
9001414a:	8003      	strh	r3, [r0, #0]
9001414c:	80c4      	strh	r4, [r0, #6]
9001414e:	e7e2      	b.n	90014116 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

90014150 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
90014150:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014154:	b09f      	sub	sp, #124	; 0x7c
90014156:	920f      	str	r2, [sp, #60]	; 0x3c
90014158:	9312      	str	r3, [sp, #72]	; 0x48
9001415a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
9001415c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9001415e:	8812      	ldrh	r2, [r2, #0]
90014160:	889b      	ldrh	r3, [r3, #4]
90014162:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
90014164:	4413      	add	r3, r2
90014166:	900e      	str	r0, [sp, #56]	; 0x38
90014168:	6828      	ldr	r0, [r5, #0]
9001416a:	b21b      	sxth	r3, r3
9001416c:	9117      	str	r1, [sp, #92]	; 0x5c
9001416e:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
90014172:	9311      	str	r3, [sp, #68]	; 0x44
90014174:	6803      	ldr	r3, [r0, #0]
90014176:	f89d 40b8 	ldrb.w	r4, [sp, #184]	; 0xb8
9001417a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9001417c:	4798      	blx	r3
9001417e:	682b      	ldr	r3, [r5, #0]
90014180:	9013      	str	r0, [sp, #76]	; 0x4c
90014182:	7b1a      	ldrb	r2, [r3, #12]
90014184:	7adb      	ldrb	r3, [r3, #11]
90014186:	9215      	str	r2, [sp, #84]	; 0x54
90014188:	9316      	str	r3, [sp, #88]	; 0x58
9001418a:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
9001418e:	2c00      	cmp	r4, #0
90014190:	d067      	beq.n	90014262 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
90014192:	7c2b      	ldrb	r3, [r5, #16]
90014194:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
90014196:	2b06      	cmp	r3, #6
90014198:	bf14      	ite	ne
9001419a:	2301      	movne	r3, #1
9001419c:	2302      	moveq	r3, #2
9001419e:	4413      	add	r3, r2
900141a0:	f04f 0900 	mov.w	r9, #0
900141a4:	9310      	str	r3, [sp, #64]	; 0x40
900141a6:	464c      	mov	r4, r9
900141a8:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
900141ac:	f8cd 9030 	str.w	r9, [sp, #48]	; 0x30
900141b0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900141b2:	9a10      	ldr	r2, [sp, #64]	; 0x40
900141b4:	4293      	cmp	r3, r2
900141b6:	f280 808b 	bge.w	900142d0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
900141ba:	2300      	movs	r3, #0
900141bc:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
900141c0:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
900141c4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
900141c8:	429c      	cmp	r4, r3
900141ca:	d006      	beq.n	900141da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
900141cc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900141ce:	f242 020b 	movw	r2, #8203	; 0x200b
900141d2:	4294      	cmp	r4, r2
900141d4:	bf18      	it	ne
900141d6:	4623      	movne	r3, r4
900141d8:	930c      	str	r3, [sp, #48]	; 0x30
900141da:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900141dc:	992d      	ldr	r1, [sp, #180]	; 0xb4
900141de:	682a      	ldr	r2, [r5, #0]
900141e0:	428b      	cmp	r3, r1
900141e2:	db40      	blt.n	90014266 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
900141e4:	6813      	ldr	r3, [r2, #0]
900141e6:	4610      	mov	r0, r2
900141e8:	695b      	ldr	r3, [r3, #20]
900141ea:	4798      	blx	r3
900141ec:	4604      	mov	r4, r0
900141ee:	6828      	ldr	r0, [r5, #0]
900141f0:	aa1d      	add	r2, sp, #116	; 0x74
900141f2:	4621      	mov	r1, r4
900141f4:	6803      	ldr	r3, [r0, #0]
900141f6:	689f      	ldr	r7, [r3, #8]
900141f8:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
900141fc:	47b8      	blx	r7
900141fe:	901c      	str	r0, [sp, #112]	; 0x70
90014200:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90014204:	429c      	cmp	r4, r3
90014206:	f000 80eb 	beq.w	900143e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001420a:	f242 030b 	movw	r3, #8203	; 0x200b
9001420e:	429c      	cmp	r4, r3
90014210:	f000 80e6 	beq.w	900143e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90014214:	2c00      	cmp	r4, #0
90014216:	f000 810d 	beq.w	90014434 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
9001421a:	2c0a      	cmp	r4, #10
9001421c:	d05e      	beq.n	900142dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
9001421e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
90014220:	b36a      	cbz	r2, 9001427e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
90014222:	8894      	ldrh	r4, [r2, #4]
90014224:	f1bb 0f00 	cmp.w	fp, #0
90014228:	d03a      	beq.n	900142a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
9001422a:	f892 900d 	ldrb.w	r9, [r2, #13]
9001422e:	f1bb 0f01 	cmp.w	fp, #1
90014232:	ea4f 0949 	mov.w	r9, r9, lsl #1
90014236:	f409 7380 	and.w	r3, r9, #256	; 0x100
9001423a:	f892 900a 	ldrb.w	r9, [r2, #10]
9001423e:	ea49 0903 	orr.w	r9, r9, r3
90014242:	d133      	bne.n	900142ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
90014244:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90014246:	eba6 0609 	sub.w	r6, r6, r9
9001424a:	2b00      	cmp	r3, #0
9001424c:	d14d      	bne.n	900142ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
9001424e:	9a15      	ldr	r2, [sp, #84]	; 0x54
90014250:	eb09 0306 	add.w	r3, r9, r6
90014254:	4413      	add	r3, r2
90014256:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90014258:	f9b2 2000 	ldrsh.w	r2, [r2]
9001425c:	4293      	cmp	r3, r2
9001425e:	da4e      	bge.n	900142fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
90014260:	e036      	b.n	900142d0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
90014262:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
90014264:	e79c      	b.n	900141a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
90014266:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
9001426a:	4659      	mov	r1, fp
9001426c:	982c      	ldr	r0, [sp, #176]	; 0xb0
9001426e:	9301      	str	r3, [sp, #4]
90014270:	ab1d      	add	r3, sp, #116	; 0x74
90014272:	9300      	str	r3, [sp, #0]
90014274:	ab1c      	add	r3, sp, #112	; 0x70
90014276:	f003 f804 	bl	90017282 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
9001427a:	4604      	mov	r4, r0
9001427c:	e7c0      	b.n	90014200 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
9001427e:	6828      	ldr	r0, [r5, #0]
90014280:	6803      	ldr	r3, [r0, #0]
90014282:	691b      	ldr	r3, [r3, #16]
90014284:	4798      	blx	r3
90014286:	f64f 63ff 	movw	r3, #65279	; 0xfeff
9001428a:	4298      	cmp	r0, r3
9001428c:	f000 80a8 	beq.w	900143e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90014290:	f242 030b 	movw	r3, #8203	; 0x200b
90014294:	4298      	cmp	r0, r3
90014296:	f000 80a3 	beq.w	900143e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001429a:	f1bb 0f00 	cmp.w	fp, #0
9001429e:	d100      	bne.n	900142a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
900142a0:	444e      	add	r6, r9
900142a2:	9a1c      	ldr	r2, [sp, #112]	; 0x70
900142a4:	2a00      	cmp	r2, #0
900142a6:	d1c0      	bne.n	9001422a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
900142a8:	4691      	mov	r9, r2
900142aa:	e099      	b.n	900143e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900142ac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900142ae:	2b00      	cmp	r3, #0
900142b0:	f000 80c2 	beq.w	90014438 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e8>
900142b4:	f1bb 0f00 	cmp.w	fp, #0
900142b8:	d117      	bne.n	900142ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
900142ba:	6828      	ldr	r0, [r5, #0]
900142bc:	990c      	ldr	r1, [sp, #48]	; 0x30
900142be:	6803      	ldr	r3, [r0, #0]
900142c0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900142c2:	4798      	blx	r3
900142c4:	4406      	add	r6, r0
900142c6:	9b16      	ldr	r3, [sp, #88]	; 0x58
900142c8:	9a11      	ldr	r2, [sp, #68]	; 0x44
900142ca:	1af3      	subs	r3, r6, r3
900142cc:	4293      	cmp	r3, r2
900142ce:	dd16      	ble.n	900142fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
900142d0:	2c00      	cmp	r4, #0
900142d2:	f000 80af 	beq.w	90014434 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
900142d6:	2c0a      	cmp	r4, #10
900142d8:	f040 809d 	bne.w	90014416 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
900142dc:	240a      	movs	r4, #10
900142de:	fab4 f084 	clz	r0, r4
900142e2:	0940      	lsrs	r0, r0, #5
900142e4:	b01f      	add	sp, #124	; 0x7c
900142e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900142ea:	6828      	ldr	r0, [r5, #0]
900142ec:	990c      	ldr	r1, [sp, #48]	; 0x30
900142ee:	6803      	ldr	r3, [r0, #0]
900142f0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900142f2:	4798      	blx	r3
900142f4:	f1bb 0f01 	cmp.w	fp, #1
900142f8:	eba6 0600 	sub.w	r6, r6, r0
900142fc:	d0a7      	beq.n	9001424e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
900142fe:	981c      	ldr	r0, [sp, #112]	; 0x70
90014300:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90014302:	f990 1009 	ldrsb.w	r1, [r0, #9]
90014306:	f9b3 8000 	ldrsh.w	r8, [r3]
9001430a:	7b43      	ldrb	r3, [r0, #13]
9001430c:	4431      	add	r1, r6
9001430e:	015b      	lsls	r3, r3, #5
90014310:	f403 7280 	and.w	r2, r3, #256	; 0x100
90014314:	7983      	ldrb	r3, [r0, #6]
90014316:	4313      	orrs	r3, r2
90014318:	440b      	add	r3, r1
9001431a:	4543      	cmp	r3, r8
9001431c:	db60      	blt.n	900143e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001431e:	9b11      	ldr	r3, [sp, #68]	; 0x44
90014320:	4299      	cmp	r1, r3
90014322:	da5d      	bge.n	900143e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90014324:	6828      	ldr	r0, [r5, #0]
90014326:	45b0      	cmp	r8, r6
90014328:	6803      	ldr	r3, [r0, #0]
9001432a:	bfcc      	ite	gt
9001432c:	eba8 0806 	subgt.w	r8, r8, r6
90014330:	f04f 0800 	movle.w	r8, #0
90014334:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90014336:	bfc8      	it	gt
90014338:	fa1f f888 	uxthgt.w	r8, r8
9001433c:	4798      	blx	r3
9001433e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
90014340:	7b53      	ldrb	r3, [r2, #13]
90014342:	00d9      	lsls	r1, r3, #3
90014344:	f401 7780 	and.w	r7, r1, #256	; 0x100
90014348:	7a11      	ldrb	r1, [r2, #8]
9001434a:	4339      	orrs	r1, r7
9001434c:	065f      	lsls	r7, r3, #25
9001434e:	9f12      	ldr	r7, [sp, #72]	; 0x48
90014350:	bf48      	it	mi
90014352:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
90014356:	4407      	add	r7, r0
90014358:	bf48      	it	mi
9001435a:	b209      	sxthmi	r1, r1
9001435c:	1a7f      	subs	r7, r7, r1
9001435e:	9929      	ldr	r1, [sp, #164]	; 0xa4
90014360:	b2bf      	uxth	r7, r7
90014362:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
90014366:	fa0f fa87 	sxth.w	sl, r7
9001436a:	4551      	cmp	r1, sl
9001436c:	dd3c      	ble.n	900143e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
9001436e:	011b      	lsls	r3, r3, #4
90014370:	79d0      	ldrb	r0, [r2, #7]
90014372:	f403 7380 	and.w	r3, r3, #256	; 0x100
90014376:	4303      	orrs	r3, r0
90014378:	449a      	add	sl, r3
9001437a:	4551      	cmp	r1, sl
9001437c:	dc30      	bgt.n	900143e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001437e:	1bcf      	subs	r7, r1, r7
90014380:	468a      	mov	sl, r1
90014382:	b23f      	sxth	r7, r7
90014384:	9219      	str	r2, [sp, #100]	; 0x64
90014386:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90014388:	9b1d      	ldr	r3, [sp, #116]	; 0x74
9001438a:	6828      	ldr	r0, [r5, #0]
9001438c:	2a00      	cmp	r2, #0
9001438e:	d12d      	bne.n	900143ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
90014390:	9318      	str	r3, [sp, #96]	; 0x60
90014392:	b2bf      	uxth	r7, r7
90014394:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90014396:	6819      	ldr	r1, [r3, #0]
90014398:	6ccb      	ldr	r3, [r1, #76]	; 0x4c
9001439a:	6801      	ldr	r1, [r0, #0]
9001439c:	9314      	str	r3, [sp, #80]	; 0x50
9001439e:	6c09      	ldr	r1, [r1, #64]	; 0x40
900143a0:	4788      	blx	r1
900143a2:	79a9      	ldrb	r1, [r5, #6]
900143a4:	9b18      	ldr	r3, [sp, #96]	; 0x60
900143a6:	910b      	str	r1, [sp, #44]	; 0x2c
900143a8:	7ba9      	ldrb	r1, [r5, #14]
900143aa:	9a19      	ldr	r2, [sp, #100]	; 0x64
900143ac:	910a      	str	r1, [sp, #40]	; 0x28
900143ae:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
900143b2:	9109      	str	r1, [sp, #36]	; 0x24
900143b4:	68a9      	ldr	r1, [r5, #8]
900143b6:	9306      	str	r3, [sp, #24]
900143b8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
900143ba:	9205      	str	r2, [sp, #20]
900143bc:	9304      	str	r3, [sp, #16]
900143be:	f8cd a004 	str.w	sl, [sp, #4]
900143c2:	e9cd 8702 	strd	r8, r7, [sp, #8]
900143c6:	44b0      	add	r8, r6
900143c8:	9f14      	ldr	r7, [sp, #80]	; 0x50
900143ca:	fa0f f388 	sxth.w	r3, r8
900143ce:	9300      	str	r3, [sp, #0]
900143d0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900143d2:	e9cd 0107 	strd	r0, r1, [sp, #28]
900143d6:	9917      	ldr	r1, [sp, #92]	; 0x5c
900143d8:	681a      	ldr	r2, [r3, #0]
900143da:	980e      	ldr	r0, [sp, #56]	; 0x38
900143dc:	685b      	ldr	r3, [r3, #4]
900143de:	47b8      	blx	r7
900143e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900143e2:	3301      	adds	r3, #1
900143e4:	930d      	str	r3, [sp, #52]	; 0x34
900143e6:	e6e3      	b.n	900141b0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
900143e8:	2700      	movs	r7, #0
900143ea:	e7cb      	b.n	90014384 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
900143ec:	9a0e      	ldr	r2, [sp, #56]	; 0x38
900143ee:	f8d2 c008 	ldr.w	ip, [r2, #8]
900143f2:	9a12      	ldr	r2, [sp, #72]	; 0x48
900143f4:	f8dc 1000 	ldr.w	r1, [ip]
900143f8:	e9cd 6204 	strd	r6, r2, [sp, #16]
900143fc:	79aa      	ldrb	r2, [r5, #6]
900143fe:	9203      	str	r2, [sp, #12]
90014400:	7baa      	ldrb	r2, [r5, #14]
90014402:	9202      	str	r2, [sp, #8]
90014404:	68aa      	ldr	r2, [r5, #8]
90014406:	e9cd 0200 	strd	r0, r2, [sp]
9001440a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
9001440c:	4660      	mov	r0, ip
9001440e:	688f      	ldr	r7, [r1, #8]
90014410:	990f      	ldr	r1, [sp, #60]	; 0x3c
90014412:	47b8      	blx	r7
90014414:	e7e4      	b.n	900143e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90014416:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90014418:	3501      	adds	r5, #1
9001441a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
9001441c:	429d      	cmp	r5, r3
9001441e:	f6bf af5e 	bge.w	900142de <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
90014422:	4659      	mov	r1, fp
90014424:	982c      	ldr	r0, [sp, #176]	; 0xb0
90014426:	f7f0 f8cf 	bl	900045c8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001442a:	4604      	mov	r4, r0
9001442c:	b110      	cbz	r0, 90014434 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
9001442e:	280a      	cmp	r0, #10
90014430:	d1f2      	bne.n	90014418 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c8>
90014432:	e753      	b.n	900142dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
90014434:	2400      	movs	r4, #0
90014436:	e752      	b.n	900142de <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
90014438:	f1bb 0f00 	cmp.w	fp, #0
9001443c:	f43f af43 	beq.w	900142c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
90014440:	e75d      	b.n	900142fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

90014442 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
90014442:	b530      	push	{r4, r5, lr}
90014444:	8ac4      	ldrh	r4, [r0, #22]
90014446:	8b45      	ldrh	r5, [r0, #26]
90014448:	8343      	strh	r3, [r0, #26]
9001444a:	442c      	add	r4, r5
9001444c:	1ae4      	subs	r4, r4, r3
9001444e:	8b83      	ldrh	r3, [r0, #28]
90014450:	82c4      	strh	r4, [r0, #22]
90014452:	8b04      	ldrh	r4, [r0, #24]
90014454:	4422      	add	r2, r4
90014456:	440c      	add	r4, r1
90014458:	1a59      	subs	r1, r3, r1
9001445a:	83c2      	strh	r2, [r0, #30]
9001445c:	8304      	strh	r4, [r0, #24]
9001445e:	8381      	strh	r1, [r0, #28]
90014460:	bd30      	pop	{r4, r5, pc}

90014462 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
90014462:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014466:	4604      	mov	r4, r0
90014468:	8a47      	ldrh	r7, [r0, #18]
9001446a:	68c0      	ldr	r0, [r0, #12]
9001446c:	b085      	sub	sp, #20
9001446e:	6803      	ldr	r3, [r0, #0]
90014470:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90014472:	4798      	blx	r3
90014474:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
90014478:	7a63      	ldrb	r3, [r4, #9]
9001447a:	eb06 0640 	add.w	r6, r6, r0, lsl #1
9001447e:	3b01      	subs	r3, #1
90014480:	42b7      	cmp	r7, r6
90014482:	bfac      	ite	ge
90014484:	f04f 0900 	movge.w	r9, #0
90014488:	f04f 0901 	movlt.w	r9, #1
9001448c:	2b05      	cmp	r3, #5
9001448e:	d804      	bhi.n	9001449a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
90014490:	e8df f003 	tbb	[pc, r3]
90014494:	470f0854 	.word	0x470f0854
90014498:	4c4c      	.short	0x4c4c
9001449a:	2500      	movs	r5, #0
9001449c:	46a9      	mov	r9, r5
9001449e:	462e      	mov	r6, r5
900144a0:	462f      	mov	r7, r5
900144a2:	e00e      	b.n	900144c2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
900144a4:	42b7      	cmp	r7, r6
900144a6:	f04f 0500 	mov.w	r5, #0
900144aa:	bfb4      	ite	lt
900144ac:	2600      	movlt	r6, #0
900144ae:	2601      	movge	r6, #1
900144b0:	e7f6      	b.n	900144a0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
900144b2:	42b7      	cmp	r7, r6
900144b4:	464d      	mov	r5, r9
900144b6:	f04f 0900 	mov.w	r9, #0
900144ba:	bfb4      	ite	lt
900144bc:	2600      	movlt	r6, #0
900144be:	2601      	movge	r6, #1
900144c0:	464f      	mov	r7, r9
900144c2:	f04f 0800 	mov.w	r8, #0
900144c6:	f8a4 8016 	strh.w	r8, [r4, #22]
900144ca:	f8a4 8018 	strh.w	r8, [r4, #24]
900144ce:	f8cd 8004 	str.w	r8, [sp, #4]
900144d2:	2300      	movs	r3, #0
900144d4:	9303      	str	r3, [sp, #12]
900144d6:	8823      	ldrh	r3, [r4, #0]
900144d8:	2b20      	cmp	r3, #32
900144da:	d033      	beq.n	90014544 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
900144dc:	f242 010b 	movw	r1, #8203	; 0x200b
900144e0:	1a5a      	subs	r2, r3, r1
900144e2:	f1d2 0a00 	rsbs	sl, r2, #0
900144e6:	eb4a 0a02 	adc.w	sl, sl, r2
900144ea:	f64f 62ff 	movw	r2, #65279	; 0xfeff
900144ee:	4293      	cmp	r3, r2
900144f0:	d008      	beq.n	90014504 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
900144f2:	428b      	cmp	r3, r1
900144f4:	9a01      	ldr	r2, [sp, #4]
900144f6:	bf0e      	itee	eq
900144f8:	f04f 0a01 	moveq.w	sl, #1
900144fc:	461a      	movne	r2, r3
900144fe:	f04f 0a00 	movne.w	sl, #0
90014502:	9201      	str	r2, [sp, #4]
90014504:	ab03      	add	r3, sp, #12
90014506:	68e2      	ldr	r2, [r4, #12]
90014508:	7a21      	ldrb	r1, [r4, #8]
9001450a:	6860      	ldr	r0, [r4, #4]
9001450c:	f002 fe70 	bl	900171f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90014510:	8020      	strh	r0, [r4, #0]
90014512:	b9d8      	cbnz	r0, 9001454c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
90014514:	8ba2      	ldrh	r2, [r4, #28]
90014516:	2300      	movs	r3, #0
90014518:	4611      	mov	r1, r2
9001451a:	4620      	mov	r0, r4
9001451c:	f7ff ff91 	bl	90014442 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90014520:	e06e      	b.n	90014600 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90014522:	2500      	movs	r5, #0
90014524:	2701      	movs	r7, #1
90014526:	46a9      	mov	r9, r5
90014528:	462e      	mov	r6, r5
9001452a:	e7ca      	b.n	900144c2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
9001452c:	42b7      	cmp	r7, r6
9001452e:	f04f 0500 	mov.w	r5, #0
90014532:	bfb4      	ite	lt
90014534:	2700      	movlt	r7, #0
90014536:	2701      	movge	r7, #1
90014538:	462e      	mov	r6, r5
9001453a:	e7c2      	b.n	900144c2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
9001453c:	2500      	movs	r5, #0
9001453e:	2601      	movs	r6, #1
90014540:	46a9      	mov	r9, r5
90014542:	e7ad      	b.n	900144a0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90014544:	9301      	str	r3, [sp, #4]
90014546:	f04f 0a01 	mov.w	sl, #1
9001454a:	e7db      	b.n	90014504 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
9001454c:	8b63      	ldrh	r3, [r4, #26]
9001454e:	280a      	cmp	r0, #10
90014550:	f103 0301 	add.w	r3, r3, #1
90014554:	8363      	strh	r3, [r4, #26]
90014556:	d0dd      	beq.n	90014514 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
90014558:	9a03      	ldr	r2, [sp, #12]
9001455a:	bb62      	cbnz	r2, 900145b6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
9001455c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90014560:	4298      	cmp	r0, r3
90014562:	d003      	beq.n	9001456c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90014564:	f242 030b 	movw	r3, #8203	; 0x200b
90014568:	4298      	cmp	r0, r3
9001456a:	d1b2      	bne.n	900144d2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001456c:	8823      	ldrh	r3, [r4, #0]
9001456e:	8ba1      	ldrh	r1, [r4, #28]
90014570:	2b20      	cmp	r3, #32
90014572:	d003      	beq.n	9001457c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
90014574:	f242 000b 	movw	r0, #8203	; 0x200b
90014578:	4283      	cmp	r3, r0
9001457a:	d131      	bne.n	900145e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
9001457c:	f1ba 0f00 	cmp.w	sl, #0
90014580:	bf0a      	itet	eq
90014582:	4688      	moveq	r8, r1
90014584:	4650      	movne	r0, sl
90014586:	2001      	moveq	r0, #1
90014588:	440a      	add	r2, r1
9001458a:	8b23      	ldrh	r3, [r4, #24]
9001458c:	f8b4 c010 	ldrh.w	ip, [r4, #16]
90014590:	b292      	uxth	r2, r2
90014592:	83a2      	strh	r2, [r4, #28]
90014594:	4413      	add	r3, r2
90014596:	f1b9 0f00 	cmp.w	r9, #0
9001459a:	d102      	bne.n	900145a2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
9001459c:	2d00      	cmp	r5, #0
9001459e:	d042      	beq.n	90014626 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
900145a0:	b300      	cbz	r0, 900145e4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
900145a2:	8c21      	ldrh	r1, [r4, #32]
900145a4:	4419      	add	r1, r3
900145a6:	458c      	cmp	ip, r1
900145a8:	da37      	bge.n	9001461a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
900145aa:	8ae1      	ldrh	r1, [r4, #22]
900145ac:	2900      	cmp	r1, #0
900145ae:	d034      	beq.n	9001461a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
900145b0:	4563      	cmp	r3, ip
900145b2:	dd8e      	ble.n	900144d2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900145b4:	e01d      	b.n	900145f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
900145b6:	8893      	ldrh	r3, [r2, #4]
900145b8:	9901      	ldr	r1, [sp, #4]
900145ba:	8023      	strh	r3, [r4, #0]
900145bc:	f892 b00d 	ldrb.w	fp, [r2, #13]
900145c0:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
900145c4:	f40b 7080 	and.w	r0, fp, #256	; 0x100
900145c8:	f892 b00a 	ldrb.w	fp, [r2, #10]
900145cc:	ea4b 0b00 	orr.w	fp, fp, r0
900145d0:	68e0      	ldr	r0, [r4, #12]
900145d2:	6803      	ldr	r3, [r0, #0]
900145d4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900145d6:	4798      	blx	r3
900145d8:	eb0b 0200 	add.w	r2, fp, r0
900145dc:	b292      	uxth	r2, r2
900145de:	e7c5      	b.n	9001456c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
900145e0:	2000      	movs	r0, #0
900145e2:	e7d1      	b.n	90014588 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
900145e4:	4563      	cmp	r3, ip
900145e6:	f77f af74 	ble.w	900144d2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900145ea:	8ae3      	ldrh	r3, [r4, #22]
900145ec:	2b00      	cmp	r3, #0
900145ee:	f43f af70 	beq.w	900144d2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900145f2:	2301      	movs	r3, #1
900145f4:	8c22      	ldrh	r2, [r4, #32]
900145f6:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
900145fa:	8be3      	ldrh	r3, [r4, #30]
900145fc:	4413      	add	r3, r2
900145fe:	83e3      	strh	r3, [r4, #30]
90014600:	68e0      	ldr	r0, [r4, #12]
90014602:	6803      	ldr	r3, [r0, #0]
90014604:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90014606:	4798      	blx	r3
90014608:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
9001460c:	4418      	add	r0, r3
9001460e:	8a63      	ldrh	r3, [r4, #18]
90014610:	1a18      	subs	r0, r3, r0
90014612:	8260      	strh	r0, [r4, #18]
90014614:	b005      	add	sp, #20
90014616:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001461a:	2300      	movs	r3, #0
9001461c:	4611      	mov	r1, r2
9001461e:	4620      	mov	r0, r4
90014620:	f7ff ff0f 	bl	90014442 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90014624:	e755      	b.n	900144d2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014626:	4563      	cmp	r3, ip
90014628:	dd14      	ble.n	90014654 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
9001462a:	b117      	cbz	r7, 90014632 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
9001462c:	2301      	movs	r3, #1
9001462e:	460a      	mov	r2, r1
90014630:	e772      	b.n	90014518 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
90014632:	2e00      	cmp	r6, #0
90014634:	f43f af4d 	beq.w	900144d2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014638:	2800      	cmp	r0, #0
9001463a:	f47f af4a 	bne.w	900144d2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001463e:	f1ba 0f00 	cmp.w	sl, #0
90014642:	d002      	beq.n	9001464a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
90014644:	2301      	movs	r3, #1
90014646:	4642      	mov	r2, r8
90014648:	e767      	b.n	9001451a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
9001464a:	8ae3      	ldrh	r3, [r4, #22]
9001464c:	2b00      	cmp	r3, #0
9001464e:	f43f af40 	beq.w	900144d2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014652:	e7d5      	b.n	90014600 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90014654:	2800      	cmp	r0, #0
90014656:	f47f af3c 	bne.w	900144d2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001465a:	f1ba 0f00 	cmp.w	sl, #0
9001465e:	f43f af38 	beq.w	900144d2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014662:	2301      	movs	r3, #1
90014664:	4642      	mov	r2, r8
90014666:	e7da      	b.n	9001461e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

90014668 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
90014668:	b5f0      	push	{r4, r5, r6, r7, lr}
9001466a:	4605      	mov	r5, r0
9001466c:	b08f      	sub	sp, #60	; 0x3c
9001466e:	4617      	mov	r7, r2
90014670:	461c      	mov	r4, r3
90014672:	460e      	mov	r6, r1
90014674:	b1d1      	cbz	r1, 900146ac <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
90014676:	681b      	ldr	r3, [r3, #0]
90014678:	4620      	mov	r0, r4
9001467a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001467c:	4798      	blx	r3
9001467e:	4240      	negs	r0, r0
90014680:	9603      	str	r6, [sp, #12]
90014682:	f64f 73ff 	movw	r3, #65535	; 0xffff
90014686:	b200      	sxth	r0, r0
90014688:	9700      	str	r7, [sp, #0]
9001468a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
9001468e:	4629      	mov	r1, r5
90014690:	e9cd 4001 	strd	r4, r0, [sp, #4]
90014694:	2401      	movs	r4, #1
90014696:	a805      	add	r0, sp, #20
90014698:	f7ff fcaa 	bl	90013ff0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
9001469c:	a805      	add	r0, sp, #20
9001469e:	f7ff fee0 	bl	90014462 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
900146a2:	f8bd 3014 	ldrh.w	r3, [sp, #20]
900146a6:	b163      	cbz	r3, 900146c2 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
900146a8:	3401      	adds	r4, #1
900146aa:	e7f7      	b.n	9001469c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
900146ac:	2401      	movs	r4, #1
900146ae:	f002 fe6b 	bl	90017388 <_ZN8touchgfx12TextProvider11getNextCharEv>
900146b2:	280a      	cmp	r0, #10
900146b4:	4628      	mov	r0, r5
900146b6:	bf08      	it	eq
900146b8:	3401      	addeq	r4, #1
900146ba:	f002 fe65 	bl	90017388 <_ZN8touchgfx12TextProvider11getNextCharEv>
900146be:	2800      	cmp	r0, #0
900146c0:	d1f7      	bne.n	900146b2 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
900146c2:	b2a0      	uxth	r0, r4
900146c4:	b00f      	add	sp, #60	; 0x3c
900146c6:	bdf0      	pop	{r4, r5, r6, r7, pc}

900146c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
900146c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900146cc:	b0e3      	sub	sp, #396	; 0x18c
900146ce:	461c      	mov	r4, r3
900146d0:	4683      	mov	fp, r0
900146d2:	4688      	mov	r8, r1
900146d4:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
900146d6:	2b00      	cmp	r3, #0
900146d8:	f000 8112 	beq.w	90014900 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900146dc:	6823      	ldr	r3, [r4, #0]
900146de:	2b00      	cmp	r3, #0
900146e0:	f000 810e 	beq.w	90014900 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900146e4:	7ba3      	ldrb	r3, [r4, #14]
900146e6:	2b00      	cmp	r3, #0
900146e8:	f000 810a 	beq.w	90014900 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900146ec:	ad0a      	add	r5, sp, #40	; 0x28
900146ee:	6810      	ldr	r0, [r2, #0]
900146f0:	6851      	ldr	r1, [r2, #4]
900146f2:	462b      	mov	r3, r5
900146f4:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
900146f8:	c303      	stmia	r3!, {r0, r1}
900146fa:	2100      	movs	r1, #0
900146fc:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90014700:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
90014704:	4628      	mov	r0, r5
90014706:	910c      	str	r1, [sp, #48]	; 0x30
90014708:	a90c      	add	r1, sp, #48	; 0x30
9001470a:	79a2      	ldrb	r2, [r4, #6]
9001470c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90014710:	f7ff fced 	bl	900140ee <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90014714:	a90c      	add	r1, sp, #48	; 0x30
90014716:	79a2      	ldrb	r2, [r4, #6]
90014718:	4608      	mov	r0, r1
9001471a:	f7ff fce8 	bl	900140ee <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
9001471e:	a817      	add	r0, sp, #92	; 0x5c
90014720:	f002 fa05 	bl	90016b2e <_ZN8touchgfx12TextProviderC1Ev>
90014724:	6820      	ldr	r0, [r4, #0]
90014726:	6803      	ldr	r3, [r0, #0]
90014728:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001472a:	4798      	blx	r3
9001472c:	4606      	mov	r6, r0
9001472e:	6820      	ldr	r0, [r4, #0]
90014730:	6803      	ldr	r3, [r0, #0]
90014732:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90014734:	4798      	blx	r3
90014736:	4633      	mov	r3, r6
90014738:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
9001473a:	996c      	ldr	r1, [sp, #432]	; 0x1b0
9001473c:	9000      	str	r0, [sp, #0]
9001473e:	a817      	add	r0, sp, #92	; 0x5c
90014740:	f002 fa50 	bl	90016be4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90014744:	6820      	ldr	r0, [r4, #0]
90014746:	f894 a004 	ldrb.w	sl, [r4, #4]
9001474a:	6803      	ldr	r3, [r0, #0]
9001474c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001474e:	4798      	blx	r3
90014750:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
90014754:	6823      	ldr	r3, [r4, #0]
90014756:	4607      	mov	r7, r0
90014758:	4406      	add	r6, r0
9001475a:	a830      	add	r0, sp, #192	; 0xc0
9001475c:	f893 9009 	ldrb.w	r9, [r3, #9]
90014760:	f002 f9e5 	bl	90016b2e <_ZN8touchgfx12TextProviderC1Ev>
90014764:	7c23      	ldrb	r3, [r4, #16]
90014766:	b17b      	cbz	r3, 90014788 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
90014768:	6820      	ldr	r0, [r4, #0]
9001476a:	6803      	ldr	r3, [r0, #0]
9001476c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001476e:	4798      	blx	r3
90014770:	9009      	str	r0, [sp, #36]	; 0x24
90014772:	6820      	ldr	r0, [r4, #0]
90014774:	6802      	ldr	r2, [r0, #0]
90014776:	6d12      	ldr	r2, [r2, #80]	; 0x50
90014778:	4790      	blx	r2
9001477a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001477c:	9000      	str	r0, [sp, #0]
9001477e:	a830      	add	r0, sp, #192	; 0xc0
90014780:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
90014782:	996c      	ldr	r1, [sp, #432]	; 0x1b0
90014784:	f002 fa2e 	bl	90016be4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90014788:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
9001478c:	a80e      	add	r0, sp, #56	; 0x38
9001478e:	7be2      	ldrb	r2, [r4, #15]
90014790:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
90014794:	1a8a      	subs	r2, r1, r2
90014796:	7c21      	ldrb	r1, [r4, #16]
90014798:	9103      	str	r1, [sp, #12]
9001479a:	b292      	uxth	r2, r2
9001479c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
900147a0:	9102      	str	r1, [sp, #8]
900147a2:	6821      	ldr	r1, [r4, #0]
900147a4:	9101      	str	r1, [sp, #4]
900147a6:	7961      	ldrb	r1, [r4, #5]
900147a8:	9100      	str	r1, [sp, #0]
900147aa:	a930      	add	r1, sp, #192	; 0xc0
900147ac:	f7ff fc20 	bl	90013ff0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
900147b0:	2e00      	cmp	r6, #0
900147b2:	dc5b      	bgt.n	9001486c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
900147b4:	af17      	add	r7, sp, #92	; 0x5c
900147b6:	f04f 0900 	mov.w	r9, #0
900147ba:	7c23      	ldrb	r3, [r4, #16]
900147bc:	2b00      	cmp	r3, #0
900147be:	f000 80b1 	beq.w	90014924 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
900147c2:	a80e      	add	r0, sp, #56	; 0x38
900147c4:	f7ff fe4d 	bl	90014462 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
900147c8:	f1ba 0f00 	cmp.w	sl, #0
900147cc:	f000 80a5 	beq.w	9001491a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
900147d0:	7c23      	ldrb	r3, [r4, #16]
900147d2:	2264      	movs	r2, #100	; 0x64
900147d4:	4639      	mov	r1, r7
900147d6:	a849      	add	r0, sp, #292	; 0x124
900147d8:	9309      	str	r3, [sp, #36]	; 0x24
900147da:	f012 f92a 	bl	90026a32 <memcpy>
900147de:	9b09      	ldr	r3, [sp, #36]	; 0x24
900147e0:	2b00      	cmp	r3, #0
900147e2:	f000 80a7 	beq.w	90014934 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
900147e6:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
900147ea:	7922      	ldrb	r2, [r4, #4]
900147ec:	2a01      	cmp	r2, #1
900147ee:	f040 808a 	bne.w	90014906 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
900147f2:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
900147f6:	1ac0      	subs	r0, r0, r3
900147f8:	2302      	movs	r3, #2
900147fa:	fb90 f0f3 	sdiv	r0, r0, r3
900147fe:	b200      	sxth	r0, r0
90014800:	7c23      	ldrb	r3, [r4, #16]
90014802:	2b00      	cmp	r3, #0
90014804:	f000 808b 	beq.w	9001491e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
90014808:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
9001480c:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
90014810:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
90014814:	e9cd 2105 	strd	r2, r1, [sp, #20]
90014818:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
9001481c:	2100      	movs	r1, #0
9001481e:	4410      	add	r0, r2
90014820:	4642      	mov	r2, r8
90014822:	b200      	sxth	r0, r0
90014824:	e9cd 9703 	strd	r9, r7, [sp, #12]
90014828:	9000      	str	r0, [sp, #0]
9001482a:	4658      	mov	r0, fp
9001482c:	e9cd 5401 	strd	r5, r4, [sp, #4]
90014830:	f7ff fc8e 	bl	90014150 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
90014834:	2800      	cmp	r0, #0
90014836:	d163      	bne.n	90014900 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90014838:	b2b2      	uxth	r2, r6
9001483a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
9001483e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
90014842:	4413      	add	r3, r2
90014844:	1a8a      	subs	r2, r1, r2
90014846:	b21b      	sxth	r3, r3
90014848:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
9001484c:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
90014850:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90014854:	2a00      	cmp	r2, #0
90014856:	d153      	bne.n	90014900 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90014858:	6822      	ldr	r2, [r4, #0]
9001485a:	8869      	ldrh	r1, [r5, #2]
9001485c:	7a12      	ldrb	r2, [r2, #8]
9001485e:	1a9b      	subs	r3, r3, r2
90014860:	88ea      	ldrh	r2, [r5, #6]
90014862:	440a      	add	r2, r1
90014864:	b212      	sxth	r2, r2
90014866:	4293      	cmp	r3, r2
90014868:	dda7      	ble.n	900147ba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
9001486a:	e049      	b.n	90014900 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
9001486c:	7c23      	ldrb	r3, [r4, #16]
9001486e:	444f      	add	r7, r9
90014870:	b1c3      	cbz	r3, 900148a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
90014872:	f64f 79ff 	movw	r9, #65535	; 0xffff
90014876:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
9001487a:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
9001487e:	443b      	add	r3, r7
90014880:	4293      	cmp	r3, r2
90014882:	da97      	bge.n	900147b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90014884:	a80e      	add	r0, sp, #56	; 0x38
90014886:	f7ff fdec 	bl	90014462 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
9001488a:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
9001488e:	3b01      	subs	r3, #1
90014890:	b29b      	uxth	r3, r3
90014892:	454b      	cmp	r3, r9
90014894:	9309      	str	r3, [sp, #36]	; 0x24
90014896:	d021      	beq.n	900148dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
90014898:	7961      	ldrb	r1, [r4, #5]
9001489a:	a817      	add	r0, sp, #92	; 0x5c
9001489c:	f7ef fe94 	bl	900045c8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
900148a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
900148a2:	e7f4      	b.n	9001488e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
900148a4:	fa1f f986 	uxth.w	r9, r6
900148a8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
900148ac:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
900148b0:	443b      	add	r3, r7
900148b2:	4293      	cmp	r3, r2
900148b4:	f6bf af7e 	bge.w	900147b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
900148b8:	a817      	add	r0, sp, #92	; 0x5c
900148ba:	f002 fd65 	bl	90017388 <_ZN8touchgfx12TextProvider11getNextCharEv>
900148be:	b1f8      	cbz	r0, 90014900 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900148c0:	280a      	cmp	r0, #10
900148c2:	d1f1      	bne.n	900148a8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
900148c4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
900148c8:	444b      	add	r3, r9
900148ca:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
900148ce:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
900148d2:	eba3 0309 	sub.w	r3, r3, r9
900148d6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
900148da:	e7e5      	b.n	900148a8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
900148dc:	b2b3      	uxth	r3, r6
900148de:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
900148e2:	441a      	add	r2, r3
900148e4:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
900148e8:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
900148ec:	1ad3      	subs	r3, r2, r3
900148ee:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
900148f2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
900148f6:	b11b      	cbz	r3, 90014900 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900148f8:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
900148fc:	2b00      	cmp	r3, #0
900148fe:	d0ba      	beq.n	90014876 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
90014900:	b063      	add	sp, #396	; 0x18c
90014902:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014906:	2a02      	cmp	r2, #2
90014908:	d105      	bne.n	90014916 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
9001490a:	7be2      	ldrb	r2, [r4, #15]
9001490c:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
90014910:	1a80      	subs	r0, r0, r2
90014912:	1ac0      	subs	r0, r0, r3
90014914:	e773      	b.n	900147fe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
90014916:	2000      	movs	r0, #0
90014918:	e772      	b.n	90014800 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
9001491a:	7be0      	ldrb	r0, [r4, #15]
9001491c:	e770      	b.n	90014800 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
9001491e:	f647 72ff 	movw	r2, #32767	; 0x7fff
90014922:	e773      	b.n	9001480c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
90014924:	f1ba 0f00 	cmp.w	sl, #0
90014928:	d0f7      	beq.n	9001491a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
9001492a:	2264      	movs	r2, #100	; 0x64
9001492c:	4639      	mov	r1, r7
9001492e:	a849      	add	r0, sp, #292	; 0x124
90014930:	f012 f87f 	bl	90026a32 <memcpy>
90014934:	2300      	movs	r3, #0
90014936:	f647 72ff 	movw	r2, #32767	; 0x7fff
9001493a:	6821      	ldr	r1, [r4, #0]
9001493c:	a849      	add	r0, sp, #292	; 0x124
9001493e:	f7ff fb9a 	bl	90014076 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90014942:	b203      	sxth	r3, r0
90014944:	e751      	b.n	900147ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

90014946 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
90014946:	2b03      	cmp	r3, #3
90014948:	d818      	bhi.n	9001497c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
9001494a:	e8df f003 	tbb	[pc, r3]
9001494e:	0602      	.short	0x0602
90014950:	130d      	.short	0x130d
90014952:	f9b0 2000 	ldrsh.w	r2, [r0]
90014956:	1850      	adds	r0, r2, r1
90014958:	4770      	bx	lr
9001495a:	8803      	ldrh	r3, [r0, #0]
9001495c:	8880      	ldrh	r0, [r0, #4]
9001495e:	4418      	add	r0, r3
90014960:	b200      	sxth	r0, r0
90014962:	1a80      	subs	r0, r0, r2
90014964:	3801      	subs	r0, #1
90014966:	4770      	bx	lr
90014968:	8803      	ldrh	r3, [r0, #0]
9001496a:	8880      	ldrh	r0, [r0, #4]
9001496c:	4418      	add	r0, r3
9001496e:	b200      	sxth	r0, r0
90014970:	1a40      	subs	r0, r0, r1
90014972:	e7f7      	b.n	90014964 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
90014974:	f9b0 0000 	ldrsh.w	r0, [r0]
90014978:	4410      	add	r0, r2
9001497a:	4770      	bx	lr
9001497c:	2000      	movs	r0, #0
9001497e:	4770      	bx	lr

90014980 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
90014980:	2b03      	cmp	r3, #3
90014982:	d817      	bhi.n	900149b4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
90014984:	e8df f003 	tbb	[pc, r3]
90014988:	10090602 	.word	0x10090602
9001498c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90014990:	1850      	adds	r0, r2, r1
90014992:	4770      	bx	lr
90014994:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90014998:	e7fa      	b.n	90014990 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
9001499a:	8843      	ldrh	r3, [r0, #2]
9001499c:	88c0      	ldrh	r0, [r0, #6]
9001499e:	4418      	add	r0, r3
900149a0:	b200      	sxth	r0, r0
900149a2:	1a80      	subs	r0, r0, r2
900149a4:	3801      	subs	r0, #1
900149a6:	4770      	bx	lr
900149a8:	8843      	ldrh	r3, [r0, #2]
900149aa:	88c0      	ldrh	r0, [r0, #6]
900149ac:	4418      	add	r0, r3
900149ae:	b200      	sxth	r0, r0
900149b0:	1a40      	subs	r0, r0, r1
900149b2:	e7f7      	b.n	900149a4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
900149b4:	2000      	movs	r0, #0
900149b6:	4770      	bx	lr

900149b8 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
900149b8:	4b01      	ldr	r3, [pc, #4]	; (900149c0 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
900149ba:	2200      	movs	r2, #0
900149bc:	601a      	str	r2, [r3, #0]
900149be:	4770      	bx	lr
900149c0:	240235bc 	.word	0x240235bc

900149c4 <_ZN8touchgfx16TouchCalibration4clzuEm>:
900149c4:	4603      	mov	r3, r0
900149c6:	b1c8      	cbz	r0, 900149fc <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
900149c8:	0c02      	lsrs	r2, r0, #16
900149ca:	0412      	lsls	r2, r2, #16
900149cc:	b9a2      	cbnz	r2, 900149f8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
900149ce:	0403      	lsls	r3, r0, #16
900149d0:	2010      	movs	r0, #16
900149d2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
900149d6:	bf04      	itt	eq
900149d8:	021b      	lsleq	r3, r3, #8
900149da:	3008      	addeq	r0, #8
900149dc:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
900149e0:	bf04      	itt	eq
900149e2:	011b      	lsleq	r3, r3, #4
900149e4:	3004      	addeq	r0, #4
900149e6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
900149ea:	bf04      	itt	eq
900149ec:	009b      	lsleq	r3, r3, #2
900149ee:	3002      	addeq	r0, #2
900149f0:	2b00      	cmp	r3, #0
900149f2:	db04      	blt.n	900149fe <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
900149f4:	3001      	adds	r0, #1
900149f6:	4770      	bx	lr
900149f8:	2000      	movs	r0, #0
900149fa:	e7ea      	b.n	900149d2 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
900149fc:	2020      	movs	r0, #32
900149fe:	4770      	bx	lr

90014a00 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
90014a00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014a04:	b087      	sub	sp, #28
90014a06:	460d      	mov	r5, r1
90014a08:	4616      	mov	r6, r2
90014a0a:	4698      	mov	r8, r3
90014a0c:	4601      	mov	r1, r0
90014a0e:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
90014a12:	b120      	cbz	r0, 90014a1e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90014a14:	b11a      	cbz	r2, 90014a1e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90014a16:	2d1f      	cmp	r5, #31
90014a18:	d801      	bhi.n	90014a1e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90014a1a:	2b1f      	cmp	r3, #31
90014a1c:	d904      	bls.n	90014a28 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
90014a1e:	2000      	movs	r0, #0
90014a20:	6038      	str	r0, [r7, #0]
90014a22:	b007      	add	sp, #28
90014a24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014a28:	b97d      	cbnz	r5, 90014a4a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
90014a2a:	b143      	cbz	r3, 90014a3e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
90014a2c:	4602      	mov	r2, r0
90014a2e:	462b      	mov	r3, r5
90014a30:	4641      	mov	r1, r8
90014a32:	4630      	mov	r0, r6
90014a34:	e9cd 4700 	strd	r4, r7, [sp]
90014a38:	f7ff ffe2 	bl	90014a00 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90014a3c:	e7f1      	b.n	90014a22 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90014a3e:	f04f 33ff 	mov.w	r3, #4294967295
90014a42:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
90014a46:	603b      	str	r3, [r7, #0]
90014a48:	e7eb      	b.n	90014a22 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90014a4a:	fa32 fa05 	lsrs.w	sl, r2, r5
90014a4e:	d106      	bne.n	90014a5e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
90014a50:	4346      	muls	r6, r0
90014a52:	fbb6 f0f4 	udiv	r0, r6, r4
90014a56:	fb04 6610 	mls	r6, r4, r0, r6
90014a5a:	603e      	str	r6, [r7, #0]
90014a5c:	e7e1      	b.n	90014a22 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90014a5e:	2201      	movs	r2, #1
90014a60:	fa00 fb05 	lsl.w	fp, r0, r5
90014a64:	40aa      	lsls	r2, r5
90014a66:	fbbb f9f4 	udiv	r9, fp, r4
90014a6a:	3a01      	subs	r2, #1
90014a6c:	fb0a f309 	mul.w	r3, sl, r9
90014a70:	fb04 b919 	mls	r9, r4, r9, fp
90014a74:	4016      	ands	r6, r2
90014a76:	9303      	str	r3, [sp, #12]
90014a78:	4630      	mov	r0, r6
90014a7a:	f7ff ffa3 	bl	900149c4 <_ZN8touchgfx16TouchCalibration4clzuEm>
90014a7e:	462b      	mov	r3, r5
90014a80:	460a      	mov	r2, r1
90014a82:	4601      	mov	r1, r0
90014a84:	4630      	mov	r0, r6
90014a86:	e9cd 4700 	strd	r4, r7, [sp]
90014a8a:	f7ff ffb9 	bl	90014a00 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90014a8e:	4606      	mov	r6, r0
90014a90:	4648      	mov	r0, r9
90014a92:	eb05 0108 	add.w	r1, r5, r8
90014a96:	f7ff ff95 	bl	900149c4 <_ZN8touchgfx16TouchCalibration4clzuEm>
90014a9a:	ab05      	add	r3, sp, #20
90014a9c:	464a      	mov	r2, r9
90014a9e:	e9cd 4300 	strd	r4, r3, [sp]
90014aa2:	4603      	mov	r3, r0
90014aa4:	4650      	mov	r0, sl
90014aa6:	f7ff ffab 	bl	90014a00 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90014aaa:	6839      	ldr	r1, [r7, #0]
90014aac:	9a05      	ldr	r2, [sp, #20]
90014aae:	9b03      	ldr	r3, [sp, #12]
90014ab0:	4411      	add	r1, r2
90014ab2:	fbb1 f2f4 	udiv	r2, r1, r4
90014ab6:	18d3      	adds	r3, r2, r3
90014ab8:	fb04 1412 	mls	r4, r4, r2, r1
90014abc:	441e      	add	r6, r3
90014abe:	603c      	str	r4, [r7, #0]
90014ac0:	4430      	add	r0, r6
90014ac2:	e7ae      	b.n	90014a22 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

90014ac4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
90014ac4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90014ac8:	b085      	sub	sp, #20
90014aca:	f1b0 0900 	subs.w	r9, r0, #0
90014ace:	461d      	mov	r5, r3
90014ad0:	4617      	mov	r7, r2
90014ad2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90014ad4:	bfbb      	ittet	lt
90014ad6:	f1c9 0900 	rsblt	r9, r9, #0
90014ada:	f04f 36ff 	movlt.w	r6, #4294967295
90014ade:	2601      	movge	r6, #1
90014ae0:	6823      	ldrlt	r3, [r4, #0]
90014ae2:	bfbc      	itt	lt
90014ae4:	425b      	neglt	r3, r3
90014ae6:	6023      	strlt	r3, [r4, #0]
90014ae8:	2a00      	cmp	r2, #0
90014aea:	da04      	bge.n	90014af6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
90014aec:	6823      	ldr	r3, [r4, #0]
90014aee:	4257      	negs	r7, r2
90014af0:	4276      	negs	r6, r6
90014af2:	425b      	negs	r3, r3
90014af4:	6023      	str	r3, [r4, #0]
90014af6:	2d00      	cmp	r5, #0
90014af8:	4638      	mov	r0, r7
90014afa:	bfba      	itte	lt
90014afc:	426d      	neglt	r5, r5
90014afe:	f04f 38ff 	movlt.w	r8, #4294967295
90014b02:	f04f 0801 	movge.w	r8, #1
90014b06:	f7ff ff5d 	bl	900149c4 <_ZN8touchgfx16TouchCalibration4clzuEm>
90014b0a:	ab03      	add	r3, sp, #12
90014b0c:	463a      	mov	r2, r7
90014b0e:	e9cd 5300 	strd	r5, r3, [sp]
90014b12:	4603      	mov	r3, r0
90014b14:	4648      	mov	r0, r9
90014b16:	f7ff ff73 	bl	90014a00 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90014b1a:	6823      	ldr	r3, [r4, #0]
90014b1c:	9a03      	ldr	r2, [sp, #12]
90014b1e:	4546      	cmp	r6, r8
90014b20:	441a      	add	r2, r3
90014b22:	fb92 f3f5 	sdiv	r3, r2, r5
90014b26:	4418      	add	r0, r3
90014b28:	fb05 2313 	mls	r3, r5, r3, r2
90014b2c:	bf18      	it	ne
90014b2e:	4240      	negne	r0, r0
90014b30:	1c72      	adds	r2, r6, #1
90014b32:	6023      	str	r3, [r4, #0]
90014b34:	d105      	bne.n	90014b42 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
90014b36:	2b00      	cmp	r3, #0
90014b38:	f1c3 0200 	rsb	r2, r3, #0
90014b3c:	db0b      	blt.n	90014b56 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
90014b3e:	6022      	str	r2, [r4, #0]
90014b40:	e006      	b.n	90014b50 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90014b42:	2e01      	cmp	r6, #1
90014b44:	d104      	bne.n	90014b50 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90014b46:	2b00      	cmp	r3, #0
90014b48:	da02      	bge.n	90014b50 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90014b4a:	442b      	add	r3, r5
90014b4c:	3801      	subs	r0, #1
90014b4e:	6023      	str	r3, [r4, #0]
90014b50:	b005      	add	sp, #20
90014b52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90014b56:	3801      	subs	r0, #1
90014b58:	1b52      	subs	r2, r2, r5
90014b5a:	e7f0      	b.n	90014b3e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

90014b5c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
90014b5c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90014b60:	4c1c      	ldr	r4, [pc, #112]	; (90014bd4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
90014b62:	4605      	mov	r5, r0
90014b64:	6807      	ldr	r7, [r0, #0]
90014b66:	69a3      	ldr	r3, [r4, #24]
90014b68:	b92b      	cbnz	r3, 90014b76 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
90014b6a:	6840      	ldr	r0, [r0, #4]
90014b6c:	e9c5 7000 	strd	r7, r0, [r5]
90014b70:	b004      	add	sp, #16
90014b72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90014b76:	f04f 0802 	mov.w	r8, #2
90014b7a:	68a2      	ldr	r2, [r4, #8]
90014b7c:	ae04      	add	r6, sp, #16
90014b7e:	6820      	ldr	r0, [r4, #0]
90014b80:	fb93 f1f8 	sdiv	r1, r3, r8
90014b84:	440a      	add	r2, r1
90014b86:	69e1      	ldr	r1, [r4, #28]
90014b88:	f846 2d04 	str.w	r2, [r6, #-4]!
90014b8c:	463a      	mov	r2, r7
90014b8e:	9600      	str	r6, [sp, #0]
90014b90:	f7ff ff98 	bl	90014ac4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90014b94:	69a3      	ldr	r3, [r4, #24]
90014b96:	4607      	mov	r7, r0
90014b98:	686a      	ldr	r2, [r5, #4]
90014b9a:	6a21      	ldr	r1, [r4, #32]
90014b9c:	9600      	str	r6, [sp, #0]
90014b9e:	6860      	ldr	r0, [r4, #4]
90014ba0:	f7ff ff90 	bl	90014ac4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90014ba4:	69a3      	ldr	r3, [r4, #24]
90014ba6:	6962      	ldr	r2, [r4, #20]
90014ba8:	4407      	add	r7, r0
90014baa:	6a61      	ldr	r1, [r4, #36]	; 0x24
90014bac:	9600      	str	r6, [sp, #0]
90014bae:	68e0      	ldr	r0, [r4, #12]
90014bb0:	fb93 f8f8 	sdiv	r8, r3, r8
90014bb4:	4442      	add	r2, r8
90014bb6:	9203      	str	r2, [sp, #12]
90014bb8:	682a      	ldr	r2, [r5, #0]
90014bba:	f7ff ff83 	bl	90014ac4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90014bbe:	4680      	mov	r8, r0
90014bc0:	9600      	str	r6, [sp, #0]
90014bc2:	69a3      	ldr	r3, [r4, #24]
90014bc4:	686a      	ldr	r2, [r5, #4]
90014bc6:	6aa1      	ldr	r1, [r4, #40]	; 0x28
90014bc8:	6920      	ldr	r0, [r4, #16]
90014bca:	f7ff ff7b 	bl	90014ac4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90014bce:	4440      	add	r0, r8
90014bd0:	e7cc      	b.n	90014b6c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
90014bd2:	bf00      	nop
90014bd4:	240235c0 	.word	0x240235c0

90014bd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
90014bd8:	4b07      	ldr	r3, [pc, #28]	; (90014bf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
90014bda:	781b      	ldrb	r3, [r3, #0]
90014bdc:	2b01      	cmp	r3, #1
90014bde:	d109      	bne.n	90014bf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
90014be0:	f9b1 3000 	ldrsh.w	r3, [r1]
90014be4:	f9b0 2000 	ldrsh.w	r2, [r0]
90014be8:	8003      	strh	r3, [r0, #0]
90014bea:	4b04      	ldr	r3, [pc, #16]	; (90014bfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
90014bec:	881b      	ldrh	r3, [r3, #0]
90014bee:	3b01      	subs	r3, #1
90014bf0:	1a9b      	subs	r3, r3, r2
90014bf2:	800b      	strh	r3, [r1, #0]
90014bf4:	4770      	bx	lr
90014bf6:	bf00      	nop
90014bf8:	240235a4 	.word	0x240235a4
90014bfc:	240235a0 	.word	0x240235a0

90014c00 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
90014c00:	4b07      	ldr	r3, [pc, #28]	; (90014c20 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
90014c02:	b510      	push	{r4, lr}
90014c04:	781b      	ldrb	r3, [r3, #0]
90014c06:	2b01      	cmp	r3, #1
90014c08:	d108      	bne.n	90014c1c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
90014c0a:	4b06      	ldr	r3, [pc, #24]	; (90014c24 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
90014c0c:	880c      	ldrh	r4, [r1, #0]
90014c0e:	881b      	ldrh	r3, [r3, #0]
90014c10:	f9b0 2000 	ldrsh.w	r2, [r0]
90014c14:	3b01      	subs	r3, #1
90014c16:	1b1b      	subs	r3, r3, r4
90014c18:	8003      	strh	r3, [r0, #0]
90014c1a:	800a      	strh	r2, [r1, #0]
90014c1c:	bd10      	pop	{r4, pc}
90014c1e:	bf00      	nop
90014c20:	240235a4 	.word	0x240235a4
90014c24:	240235a0 	.word	0x240235a0

90014c28 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
90014c28:	4b0a      	ldr	r3, [pc, #40]	; (90014c54 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
90014c2a:	b510      	push	{r4, lr}
90014c2c:	781b      	ldrb	r3, [r3, #0]
90014c2e:	2b01      	cmp	r3, #1
90014c30:	d10e      	bne.n	90014c50 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
90014c32:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90014c36:	8843      	ldrh	r3, [r0, #2]
90014c38:	f9b0 4000 	ldrsh.w	r4, [r0]
90014c3c:	18ca      	adds	r2, r1, r3
90014c3e:	4b06      	ldr	r3, [pc, #24]	; (90014c58 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
90014c40:	8044      	strh	r4, [r0, #2]
90014c42:	881b      	ldrh	r3, [r3, #0]
90014c44:	1a9b      	subs	r3, r3, r2
90014c46:	8003      	strh	r3, [r0, #0]
90014c48:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90014c4c:	8081      	strh	r1, [r0, #4]
90014c4e:	80c3      	strh	r3, [r0, #6]
90014c50:	bd10      	pop	{r4, pc}
90014c52:	bf00      	nop
90014c54:	240235a4 	.word	0x240235a4
90014c58:	240235a0 	.word	0x240235a0

90014c5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
90014c5c:	4b08      	ldr	r3, [pc, #32]	; (90014c80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
90014c5e:	781b      	ldrb	r3, [r3, #0]
90014c60:	2b01      	cmp	r3, #1
90014c62:	d10c      	bne.n	90014c7e <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
90014c64:	8803      	ldrh	r3, [r0, #0]
90014c66:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
90014c6a:	8842      	ldrh	r2, [r0, #2]
90014c6c:	8002      	strh	r2, [r0, #0]
90014c6e:	185a      	adds	r2, r3, r1
90014c70:	4b04      	ldr	r3, [pc, #16]	; (90014c84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
90014c72:	881b      	ldrh	r3, [r3, #0]
90014c74:	1a9b      	subs	r3, r3, r2
90014c76:	8043      	strh	r3, [r0, #2]
90014c78:	88c3      	ldrh	r3, [r0, #6]
90014c7a:	80c1      	strh	r1, [r0, #6]
90014c7c:	8083      	strh	r3, [r0, #4]
90014c7e:	4770      	bx	lr
90014c80:	240235a4 	.word	0x240235a4
90014c84:	240235a0 	.word	0x240235a0

90014c88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
90014c88:	4b07      	ldr	r3, [pc, #28]	; (90014ca8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
90014c8a:	b510      	push	{r4, lr}
90014c8c:	781b      	ldrb	r3, [r3, #0]
90014c8e:	2b01      	cmp	r3, #1
90014c90:	d108      	bne.n	90014ca4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
90014c92:	f9b1 3000 	ldrsh.w	r3, [r1]
90014c96:	f9b0 4000 	ldrsh.w	r4, [r0]
90014c9a:	8003      	strh	r3, [r0, #0]
90014c9c:	8893      	ldrh	r3, [r2, #4]
90014c9e:	3b01      	subs	r3, #1
90014ca0:	1b1b      	subs	r3, r3, r4
90014ca2:	800b      	strh	r3, [r1, #0]
90014ca4:	bd10      	pop	{r4, pc}
90014ca6:	bf00      	nop
90014ca8:	240235a4 	.word	0x240235a4

90014cac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
90014cac:	4b0b      	ldr	r3, [pc, #44]	; (90014cdc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
90014cae:	781b      	ldrb	r3, [r3, #0]
90014cb0:	2b01      	cmp	r3, #1
90014cb2:	d111      	bne.n	90014cd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
90014cb4:	680b      	ldr	r3, [r1, #0]
90014cb6:	ed90 7a00 	vldr	s14, [r0]
90014cba:	6003      	str	r3, [r0, #0]
90014cbc:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
90014cc0:	eddf 6a07 	vldr	s13, [pc, #28]	; 90014ce0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
90014cc4:	ee07 3a90 	vmov	s15, r3
90014cc8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90014ccc:	ee77 7ae6 	vsub.f32	s15, s15, s13
90014cd0:	ee77 7ac7 	vsub.f32	s15, s15, s14
90014cd4:	edc1 7a00 	vstr	s15, [r1]
90014cd8:	4770      	bx	lr
90014cda:	bf00      	nop
90014cdc:	240235a4 	.word	0x240235a4
90014ce0:	38d1b717 	.word	0x38d1b717

90014ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
90014ce4:	4b0a      	ldr	r3, [pc, #40]	; (90014d10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
90014ce6:	460a      	mov	r2, r1
90014ce8:	b510      	push	{r4, lr}
90014cea:	781b      	ldrb	r3, [r3, #0]
90014cec:	2b01      	cmp	r3, #1
90014cee:	d10d      	bne.n	90014d0c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
90014cf0:	8881      	ldrh	r1, [r0, #4]
90014cf2:	8803      	ldrh	r3, [r0, #0]
90014cf4:	440b      	add	r3, r1
90014cf6:	4601      	mov	r1, r0
90014cf8:	3b01      	subs	r3, #1
90014cfa:	f821 3b02 	strh.w	r3, [r1], #2
90014cfe:	f7ff ffc3 	bl	90014c88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
90014d02:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90014d06:	88c2      	ldrh	r2, [r0, #6]
90014d08:	80c3      	strh	r3, [r0, #6]
90014d0a:	8082      	strh	r2, [r0, #4]
90014d0c:	bd10      	pop	{r4, pc}
90014d0e:	bf00      	nop
90014d10:	240235a4 	.word	0x240235a4

90014d14 <_ZN8touchgfx11Application19changeToStartScreenEv>:
90014d14:	4770      	bx	lr
	...

90014d18 <_ZN8touchgfx11Application13requestRedrawEv>:
90014d18:	4b06      	ldr	r3, [pc, #24]	; (90014d34 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
90014d1a:	2100      	movs	r1, #0
90014d1c:	f9b3 2000 	ldrsh.w	r2, [r3]
90014d20:	4b05      	ldr	r3, [pc, #20]	; (90014d38 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
90014d22:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
90014d26:	f9b3 3000 	ldrsh.w	r3, [r3]
90014d2a:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
90014d2e:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
90014d32:	4770      	bx	lr
90014d34:	240235a0 	.word	0x240235a0
90014d38:	240235a2 	.word	0x240235a2

90014d3c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
90014d3c:	4b03      	ldr	r3, [pc, #12]	; (90014d4c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
90014d3e:	6818      	ldr	r0, [r3, #0]
90014d40:	b110      	cbz	r0, 90014d48 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
90014d42:	6803      	ldr	r3, [r0, #0]
90014d44:	699b      	ldr	r3, [r3, #24]
90014d46:	4718      	bx	r3
90014d48:	4770      	bx	lr
90014d4a:	bf00      	nop
90014d4c:	240235f0 	.word	0x240235f0

90014d50 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
90014d50:	4770      	bx	lr
	...

90014d54 <_ZN8touchgfx11Application4drawEv>:
90014d54:	4b09      	ldr	r3, [pc, #36]	; (90014d7c <_ZN8touchgfx11Application4drawEv+0x28>)
90014d56:	b507      	push	{r0, r1, r2, lr}
90014d58:	f9b3 2000 	ldrsh.w	r2, [r3]
90014d5c:	2100      	movs	r1, #0
90014d5e:	4b08      	ldr	r3, [pc, #32]	; (90014d80 <_ZN8touchgfx11Application4drawEv+0x2c>)
90014d60:	9100      	str	r1, [sp, #0]
90014d62:	4669      	mov	r1, sp
90014d64:	f9b3 3000 	ldrsh.w	r3, [r3]
90014d68:	f8ad 2004 	strh.w	r2, [sp, #4]
90014d6c:	f8ad 3006 	strh.w	r3, [sp, #6]
90014d70:	6803      	ldr	r3, [r0, #0]
90014d72:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90014d74:	4798      	blx	r3
90014d76:	b003      	add	sp, #12
90014d78:	f85d fb04 	ldr.w	pc, [sp], #4
90014d7c:	240235a0 	.word	0x240235a0
90014d80:	240235a2 	.word	0x240235a2

90014d84 <_ZN8touchgfx11Application10invalidateEv>:
90014d84:	4b09      	ldr	r3, [pc, #36]	; (90014dac <_ZN8touchgfx11Application10invalidateEv+0x28>)
90014d86:	b082      	sub	sp, #8
90014d88:	2100      	movs	r1, #0
90014d8a:	f9b3 2000 	ldrsh.w	r2, [r3]
90014d8e:	4b08      	ldr	r3, [pc, #32]	; (90014db0 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
90014d90:	f8ad 2004 	strh.w	r2, [sp, #4]
90014d94:	aa02      	add	r2, sp, #8
90014d96:	f9b3 3000 	ldrsh.w	r3, [r3]
90014d9a:	9100      	str	r1, [sp, #0]
90014d9c:	f8ad 3006 	strh.w	r3, [sp, #6]
90014da0:	6803      	ldr	r3, [r0, #0]
90014da2:	e912 0006 	ldmdb	r2, {r1, r2}
90014da6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90014da8:	b002      	add	sp, #8
90014daa:	4718      	bx	r3
90014dac:	240235a0 	.word	0x240235a0
90014db0:	240235a2 	.word	0x240235a2

90014db4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
90014db4:	4b03      	ldr	r3, [pc, #12]	; (90014dc4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
90014db6:	6818      	ldr	r0, [r3, #0]
90014db8:	b110      	cbz	r0, 90014dc0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
90014dba:	6803      	ldr	r3, [r0, #0]
90014dbc:	69db      	ldr	r3, [r3, #28]
90014dbe:	4718      	bx	r3
90014dc0:	4770      	bx	lr
90014dc2:	bf00      	nop
90014dc4:	240235f0 	.word	0x240235f0

90014dc8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
90014dc8:	4b03      	ldr	r3, [pc, #12]	; (90014dd8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
90014dca:	6818      	ldr	r0, [r3, #0]
90014dcc:	b110      	cbz	r0, 90014dd4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
90014dce:	6803      	ldr	r3, [r0, #0]
90014dd0:	6a1b      	ldr	r3, [r3, #32]
90014dd2:	4718      	bx	r3
90014dd4:	4770      	bx	lr
90014dd6:	bf00      	nop
90014dd8:	240235f0 	.word	0x240235f0

90014ddc <_ZN8touchgfx11Application16clearCachedAreasEv>:
90014ddc:	2300      	movs	r3, #0
90014dde:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
90014de2:	4770      	bx	lr

90014de4 <_ZN8touchgfx11Application14handleKeyEventEh>:
90014de4:	4b03      	ldr	r3, [pc, #12]	; (90014df4 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
90014de6:	6818      	ldr	r0, [r3, #0]
90014de8:	b110      	cbz	r0, 90014df0 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
90014dea:	6803      	ldr	r3, [r0, #0]
90014dec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90014dee:	4718      	bx	r3
90014df0:	4770      	bx	lr
90014df2:	bf00      	nop
90014df4:	240235f0 	.word	0x240235f0

90014df8 <_ZN8touchgfx11ApplicationD1Ev>:
90014df8:	4770      	bx	lr

90014dfa <_ZN8touchgfx11ApplicationD0Ev>:
90014dfa:	b510      	push	{r4, lr}
90014dfc:	4604      	mov	r4, r0
90014dfe:	f44f 719e 	mov.w	r1, #316	; 0x13c
90014e02:	f011 fa2e 	bl	90026262 <_ZdlPvj>
90014e06:	4620      	mov	r0, r4
90014e08:	bd10      	pop	{r4, pc}

90014e0a <_ZNK8touchgfx4Rect9intersectERKS0_>:
90014e0a:	b510      	push	{r4, lr}
90014e0c:	f9b1 4000 	ldrsh.w	r4, [r1]
90014e10:	888a      	ldrh	r2, [r1, #4]
90014e12:	f9b0 3000 	ldrsh.w	r3, [r0]
90014e16:	4422      	add	r2, r4
90014e18:	b212      	sxth	r2, r2
90014e1a:	4293      	cmp	r3, r2
90014e1c:	da15      	bge.n	90014e4a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90014e1e:	8882      	ldrh	r2, [r0, #4]
90014e20:	4413      	add	r3, r2
90014e22:	b21b      	sxth	r3, r3
90014e24:	429c      	cmp	r4, r3
90014e26:	da10      	bge.n	90014e4a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90014e28:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90014e2c:	88c9      	ldrh	r1, [r1, #6]
90014e2e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90014e32:	4419      	add	r1, r3
90014e34:	b209      	sxth	r1, r1
90014e36:	428a      	cmp	r2, r1
90014e38:	da07      	bge.n	90014e4a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90014e3a:	88c0      	ldrh	r0, [r0, #6]
90014e3c:	4410      	add	r0, r2
90014e3e:	b200      	sxth	r0, r0
90014e40:	4283      	cmp	r3, r0
90014e42:	bfac      	ite	ge
90014e44:	2000      	movge	r0, #0
90014e46:	2001      	movlt	r0, #1
90014e48:	bd10      	pop	{r4, pc}
90014e4a:	2000      	movs	r0, #0
90014e4c:	e7fc      	b.n	90014e48 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

90014e4e <_ZN8touchgfx4Rect10restrictToEss>:
90014e4e:	f9b0 3000 	ldrsh.w	r3, [r0]
90014e52:	2b00      	cmp	r3, #0
90014e54:	b510      	push	{r4, lr}
90014e56:	da04      	bge.n	90014e62 <_ZN8touchgfx4Rect10restrictToEss+0x14>
90014e58:	8884      	ldrh	r4, [r0, #4]
90014e5a:	4423      	add	r3, r4
90014e5c:	8083      	strh	r3, [r0, #4]
90014e5e:	2300      	movs	r3, #0
90014e60:	8003      	strh	r3, [r0, #0]
90014e62:	f9b0 4000 	ldrsh.w	r4, [r0]
90014e66:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90014e6a:	1b09      	subs	r1, r1, r4
90014e6c:	428b      	cmp	r3, r1
90014e6e:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90014e72:	bfc8      	it	gt
90014e74:	8081      	strhgt	r1, [r0, #4]
90014e76:	2b00      	cmp	r3, #0
90014e78:	da04      	bge.n	90014e84 <_ZN8touchgfx4Rect10restrictToEss+0x36>
90014e7a:	88c1      	ldrh	r1, [r0, #6]
90014e7c:	440b      	add	r3, r1
90014e7e:	80c3      	strh	r3, [r0, #6]
90014e80:	2300      	movs	r3, #0
90014e82:	8043      	strh	r3, [r0, #2]
90014e84:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90014e88:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
90014e8c:	1a52      	subs	r2, r2, r1
90014e8e:	4293      	cmp	r3, r2
90014e90:	bfc8      	it	gt
90014e92:	80c2      	strhgt	r2, [r0, #6]
90014e94:	bd10      	pop	{r4, pc}
	...

90014e98 <_ZN8touchgfx11Application4drawERNS_4RectE>:
90014e98:	4b10      	ldr	r3, [pc, #64]	; (90014edc <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
90014e9a:	b510      	push	{r4, lr}
90014e9c:	460c      	mov	r4, r1
90014e9e:	f9b3 2000 	ldrsh.w	r2, [r3]
90014ea2:	4b0f      	ldr	r3, [pc, #60]	; (90014ee0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
90014ea4:	4620      	mov	r0, r4
90014ea6:	f9b3 1000 	ldrsh.w	r1, [r3]
90014eaa:	f7ff ffd0 	bl	90014e4e <_ZN8touchgfx4Rect10restrictToEss>
90014eae:	4b0d      	ldr	r3, [pc, #52]	; (90014ee4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
90014eb0:	6818      	ldr	r0, [r3, #0]
90014eb2:	b190      	cbz	r0, 90014eda <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
90014eb4:	6803      	ldr	r3, [r0, #0]
90014eb6:	4621      	mov	r1, r4
90014eb8:	689b      	ldr	r3, [r3, #8]
90014eba:	4798      	blx	r3
90014ebc:	4b0a      	ldr	r3, [pc, #40]	; (90014ee8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
90014ebe:	6818      	ldr	r0, [r3, #0]
90014ec0:	b118      	cbz	r0, 90014eca <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
90014ec2:	6803      	ldr	r3, [r0, #0]
90014ec4:	4621      	mov	r1, r4
90014ec6:	689b      	ldr	r3, [r3, #8]
90014ec8:	4798      	blx	r3
90014eca:	4b08      	ldr	r3, [pc, #32]	; (90014eec <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
90014ecc:	4621      	mov	r1, r4
90014ece:	6818      	ldr	r0, [r3, #0]
90014ed0:	6803      	ldr	r3, [r0, #0]
90014ed2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90014ed6:	69db      	ldr	r3, [r3, #28]
90014ed8:	4718      	bx	r3
90014eda:	bd10      	pop	{r4, pc}
90014edc:	240235a2 	.word	0x240235a2
90014ee0:	240235a0 	.word	0x240235a0
90014ee4:	240235f0 	.word	0x240235f0
90014ee8:	240235ec 	.word	0x240235ec
90014eec:	240235ac 	.word	0x240235ac

90014ef0 <_ZNK8touchgfx4Rect8includesERKS0_>:
90014ef0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90014ef2:	4606      	mov	r6, r0
90014ef4:	4608      	mov	r0, r1
90014ef6:	460f      	mov	r7, r1
90014ef8:	f7fb f989 	bl	9001020e <_ZNK8touchgfx4Rect7isEmptyEv>
90014efc:	b9e8      	cbnz	r0, 90014f3a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90014efe:	f9b7 5000 	ldrsh.w	r5, [r7]
90014f02:	f9b6 4000 	ldrsh.w	r4, [r6]
90014f06:	42a5      	cmp	r5, r4
90014f08:	db17      	blt.n	90014f3a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90014f0a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
90014f0e:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
90014f12:	429a      	cmp	r2, r3
90014f14:	db11      	blt.n	90014f3a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90014f16:	88b9      	ldrh	r1, [r7, #4]
90014f18:	440d      	add	r5, r1
90014f1a:	88b1      	ldrh	r1, [r6, #4]
90014f1c:	440c      	add	r4, r1
90014f1e:	b22d      	sxth	r5, r5
90014f20:	b224      	sxth	r4, r4
90014f22:	42a5      	cmp	r5, r4
90014f24:	dc09      	bgt.n	90014f3a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90014f26:	88f8      	ldrh	r0, [r7, #6]
90014f28:	4410      	add	r0, r2
90014f2a:	88f2      	ldrh	r2, [r6, #6]
90014f2c:	4413      	add	r3, r2
90014f2e:	b200      	sxth	r0, r0
90014f30:	b21b      	sxth	r3, r3
90014f32:	4298      	cmp	r0, r3
90014f34:	bfcc      	ite	gt
90014f36:	2000      	movgt	r0, #0
90014f38:	2001      	movle	r0, #1
90014f3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90014f3c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
90014f3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90014f3e:	4604      	mov	r4, r0
90014f40:	4608      	mov	r0, r1
90014f42:	460d      	mov	r5, r1
90014f44:	f7fb f963 	bl	9001020e <_ZNK8touchgfx4Rect7isEmptyEv>
90014f48:	b978      	cbnz	r0, 90014f6a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
90014f4a:	4620      	mov	r0, r4
90014f4c:	f7fb f95f 	bl	9001020e <_ZNK8touchgfx4Rect7isEmptyEv>
90014f50:	f9b5 6000 	ldrsh.w	r6, [r5]
90014f54:	b150      	cbz	r0, 90014f6c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
90014f56:	8026      	strh	r6, [r4, #0]
90014f58:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90014f5c:	8063      	strh	r3, [r4, #2]
90014f5e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
90014f62:	80a3      	strh	r3, [r4, #4]
90014f64:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90014f68:	80e3      	strh	r3, [r4, #6]
90014f6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90014f6c:	f9b4 1000 	ldrsh.w	r1, [r4]
90014f70:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90014f74:	42b1      	cmp	r1, r6
90014f76:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
90014f7a:	f8b5 c004 	ldrh.w	ip, [r5, #4]
90014f7e:	460f      	mov	r7, r1
90014f80:	88ed      	ldrh	r5, [r5, #6]
90014f82:	bfa8      	it	ge
90014f84:	4637      	movge	r7, r6
90014f86:	4293      	cmp	r3, r2
90014f88:	4618      	mov	r0, r3
90014f8a:	4466      	add	r6, ip
90014f8c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90014f90:	bfa8      	it	ge
90014f92:	4610      	movge	r0, r2
90014f94:	442a      	add	r2, r5
90014f96:	88e5      	ldrh	r5, [r4, #6]
90014f98:	4461      	add	r1, ip
90014f9a:	b236      	sxth	r6, r6
90014f9c:	8027      	strh	r7, [r4, #0]
90014f9e:	442b      	add	r3, r5
90014fa0:	b209      	sxth	r1, r1
90014fa2:	b212      	sxth	r2, r2
90014fa4:	8060      	strh	r0, [r4, #2]
90014fa6:	b21b      	sxth	r3, r3
90014fa8:	428e      	cmp	r6, r1
90014faa:	bfac      	ite	ge
90014fac:	ebc7 0106 	rsbge	r1, r7, r6
90014fb0:	ebc7 0101 	rsblt	r1, r7, r1
90014fb4:	429a      	cmp	r2, r3
90014fb6:	bfac      	ite	ge
90014fb8:	ebc0 0202 	rsbge	r2, r0, r2
90014fbc:	ebc0 0203 	rsblt	r2, r0, r3
90014fc0:	80a1      	strh	r1, [r4, #4]
90014fc2:	80e2      	strh	r2, [r4, #6]
90014fc4:	e7d1      	b.n	90014f6a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

90014fc8 <_ZN8touchgfx11Application11getInstanceEv>:
90014fc8:	4b01      	ldr	r3, [pc, #4]	; (90014fd0 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
90014fca:	6818      	ldr	r0, [r3, #0]
90014fcc:	4770      	bx	lr
90014fce:	bf00      	nop
90014fd0:	24023600 	.word	0x24023600

90014fd4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
90014fd4:	2300      	movs	r3, #0
90014fd6:	b510      	push	{r4, lr}
90014fd8:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
90014fdc:	4604      	mov	r4, r0
90014fde:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
90014fe2:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
90014fe6:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
90014fea:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
90014fee:	429a      	cmp	r2, r3
90014ff0:	d90e      	bls.n	90015010 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
90014ff2:	18e2      	adds	r2, r4, r3
90014ff4:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
90014ff8:	b122      	cbz	r2, 90015004 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
90014ffa:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
90014ffe:	6803      	ldr	r3, [r0, #0]
90015000:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90015002:	4798      	blx	r3
90015004:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
90015008:	3301      	adds	r3, #1
9001500a:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
9001500e:	e7ea      	b.n	90014fe6 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
90015010:	bd10      	pop	{r4, pc}

90015012 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
90015012:	2300      	movs	r3, #0
90015014:	f100 0284 	add.w	r2, r0, #132	; 0x84
90015018:	30a4      	adds	r0, #164	; 0xa4
9001501a:	f820 3c24 	strh.w	r3, [r0, #-36]
9001501e:	f802 3b01 	strb.w	r3, [r2], #1
90015022:	4282      	cmp	r2, r0
90015024:	d1fb      	bne.n	9001501e <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
90015026:	4770      	bx	lr

90015028 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
90015028:	b570      	push	{r4, r5, r6, lr}
9001502a:	4c0b      	ldr	r4, [pc, #44]	; (90015058 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
9001502c:	4605      	mov	r5, r0
9001502e:	460e      	mov	r6, r1
90015030:	6820      	ldr	r0, [r4, #0]
90015032:	b110      	cbz	r0, 9001503a <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
90015034:	6803      	ldr	r3, [r0, #0]
90015036:	695b      	ldr	r3, [r3, #20]
90015038:	4798      	blx	r3
9001503a:	1d28      	adds	r0, r5, #4
9001503c:	f7ff ffe9 	bl	90015012 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
90015040:	6026      	str	r6, [r4, #0]
90015042:	6833      	ldr	r3, [r6, #0]
90015044:	4630      	mov	r0, r6
90015046:	68db      	ldr	r3, [r3, #12]
90015048:	4798      	blx	r3
9001504a:	682b      	ldr	r3, [r5, #0]
9001504c:	4628      	mov	r0, r5
9001504e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90015050:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015054:	4718      	bx	r3
90015056:	bf00      	nop
90015058:	240235f0 	.word	0x240235f0

9001505c <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
9001505c:	2300      	movs	r3, #0
9001505e:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
90015062:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
90015066:	461a      	mov	r2, r3
90015068:	b5f0      	push	{r4, r5, r6, r7, lr}
9001506a:	461c      	mov	r4, r3
9001506c:	461d      	mov	r5, r3
9001506e:	459c      	cmp	ip, r3
90015070:	dd1a      	ble.n	900150a8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
90015072:	18c6      	adds	r6, r0, r3
90015074:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
90015078:	b16e      	cbz	r6, 90015096 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
9001507a:	429a      	cmp	r2, r3
9001507c:	d008      	beq.n	90015090 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
9001507e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
90015082:	fa1f fe82 	uxth.w	lr, r2
90015086:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
9001508a:	1887      	adds	r7, r0, r2
9001508c:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
90015090:	3201      	adds	r2, #1
90015092:	3301      	adds	r3, #1
90015094:	e7eb      	b.n	9001506e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
90015096:	4299      	cmp	r1, r3
90015098:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
9001509c:	bfa8      	it	ge
9001509e:	3501      	addge	r5, #1
900150a0:	429e      	cmp	r6, r3
900150a2:	bfc8      	it	gt
900150a4:	3401      	addgt	r4, #1
900150a6:	e7f4      	b.n	90015092 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
900150a8:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
900150ac:	1b49      	subs	r1, r1, r5
900150ae:	1b1b      	subs	r3, r3, r4
900150b0:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
900150b4:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
900150b8:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
900150bc:	4293      	cmp	r3, r2
900150be:	dd03      	ble.n	900150c8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
900150c0:	3b01      	subs	r3, #1
900150c2:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
900150c6:	e7f7      	b.n	900150b8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
900150c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

900150cc <_ZN8touchgfx11Application15handleTickEventEv>:
900150cc:	b570      	push	{r4, r5, r6, lr}
900150ce:	4d16      	ldr	r5, [pc, #88]	; (90015128 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
900150d0:	4604      	mov	r4, r0
900150d2:	6828      	ldr	r0, [r5, #0]
900150d4:	b140      	cbz	r0, 900150e8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
900150d6:	7a03      	ldrb	r3, [r0, #8]
900150d8:	b933      	cbnz	r3, 900150e8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
900150da:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
900150de:	6803      	ldr	r3, [r0, #0]
900150e0:	689b      	ldr	r3, [r3, #8]
900150e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900150e6:	4718      	bx	r3
900150e8:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
900150ec:	4e0f      	ldr	r6, [pc, #60]	; (9001512c <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
900150ee:	b973      	cbnz	r3, 9001510e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900150f0:	b168      	cbz	r0, 9001510e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900150f2:	7a03      	ldrb	r3, [r0, #8]
900150f4:	b15b      	cbz	r3, 9001510e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900150f6:	6830      	ldr	r0, [r6, #0]
900150f8:	b110      	cbz	r0, 90015100 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
900150fa:	6803      	ldr	r3, [r0, #0]
900150fc:	691b      	ldr	r3, [r3, #16]
900150fe:	4798      	blx	r3
90015100:	6828      	ldr	r0, [r5, #0]
90015102:	6803      	ldr	r3, [r0, #0]
90015104:	68db      	ldr	r3, [r3, #12]
90015106:	4798      	blx	r3
90015108:	2301      	movs	r3, #1
9001510a:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
9001510e:	3404      	adds	r4, #4
90015110:	4620      	mov	r0, r4
90015112:	f7ff ff5f 	bl	90014fd4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
90015116:	4620      	mov	r0, r4
90015118:	f7ff ffa0 	bl	9001505c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
9001511c:	6830      	ldr	r0, [r6, #0]
9001511e:	b110      	cbz	r0, 90015126 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
90015120:	6803      	ldr	r3, [r0, #0]
90015122:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90015124:	e7dd      	b.n	900150e2 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
90015126:	bd70      	pop	{r4, r5, r6, pc}
90015128:	240235f4 	.word	0x240235f4
9001512c:	240235f0 	.word	0x240235f0

90015130 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
90015130:	4603      	mov	r3, r0
90015132:	f100 0140 	add.w	r1, r0, #64	; 0x40
90015136:	2200      	movs	r2, #0
90015138:	801a      	strh	r2, [r3, #0]
9001513a:	3308      	adds	r3, #8
9001513c:	f823 2c06 	strh.w	r2, [r3, #-6]
90015140:	f823 2c04 	strh.w	r2, [r3, #-4]
90015144:	f823 2c02 	strh.w	r2, [r3, #-2]
90015148:	428b      	cmp	r3, r1
9001514a:	d1f5      	bne.n	90015138 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
9001514c:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
90015150:	4770      	bx	lr
	...

90015154 <_ZN8touchgfx11ApplicationC1Ev>:
90015154:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90015156:	4b1d      	ldr	r3, [pc, #116]	; (900151cc <_ZN8touchgfx11ApplicationC1Ev+0x78>)
90015158:	4606      	mov	r6, r0
9001515a:	4604      	mov	r4, r0
9001515c:	2500      	movs	r5, #0
9001515e:	f846 3b04 	str.w	r3, [r6], #4
90015162:	22a8      	movs	r2, #168	; 0xa8
90015164:	2100      	movs	r1, #0
90015166:	4630      	mov	r0, r6
90015168:	f011 fb82 	bl	90026870 <memset>
9001516c:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
90015170:	f104 00ac 	add.w	r0, r4, #172	; 0xac
90015174:	4f16      	ldr	r7, [pc, #88]	; (900151d0 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
90015176:	f7ff ffdb 	bl	90015130 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
9001517a:	f104 00ee 	add.w	r0, r4, #238	; 0xee
9001517e:	f7ff ffd7 	bl	90015130 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90015182:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
90015186:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
9001518a:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
9001518e:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
90015192:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
90015196:	490f      	ldr	r1, [pc, #60]	; (900151d4 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
90015198:	480f      	ldr	r0, [pc, #60]	; (900151d8 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
9001519a:	f010 fb9b 	bl	900258d4 <CRC_Lock>
9001519e:	4b0f      	ldr	r3, [pc, #60]	; (900151dc <_ZN8touchgfx11ApplicationC1Ev+0x88>)
900151a0:	b158      	cbz	r0, 900151ba <_ZN8touchgfx11ApplicationC1Ev+0x66>
900151a2:	801d      	strh	r5, [r3, #0]
900151a4:	2300      	movs	r3, #0
900151a6:	4a0e      	ldr	r2, [pc, #56]	; (900151e0 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
900151a8:	4630      	mov	r0, r6
900151aa:	6013      	str	r3, [r2, #0]
900151ac:	4a0d      	ldr	r2, [pc, #52]	; (900151e4 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
900151ae:	603b      	str	r3, [r7, #0]
900151b0:	6013      	str	r3, [r2, #0]
900151b2:	f7ff ff2e 	bl	90015012 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
900151b6:	4620      	mov	r0, r4
900151b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900151ba:	f44f 6280 	mov.w	r2, #1024	; 0x400
900151be:	2002      	movs	r0, #2
900151c0:	801a      	strh	r2, [r3, #0]
900151c2:	6038      	str	r0, [r7, #0]
900151c4:	f001 fb06 	bl	900167d4 <_ZN8touchgfx6Screen4drawEv>
900151c8:	e7ec      	b.n	900151a4 <_ZN8touchgfx11ApplicationC1Ev+0x50>
900151ca:	bf00      	nop
900151cc:	9002a840 	.word	0x9002a840
900151d0:	240235f0 	.word	0x240235f0
900151d4:	b5e8b5cd 	.word	0xb5e8b5cd
900151d8:	f407a5c2 	.word	0xf407a5c2
900151dc:	24000074 	.word	0x24000074
900151e0:	24023600 	.word	0x24023600
900151e4:	240235f4 	.word	0x240235f4

900151e8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
900151e8:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
900151ec:	3b01      	subs	r3, #1
900151ee:	b29b      	uxth	r3, r3
900151f0:	428b      	cmp	r3, r1
900151f2:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
900151f6:	b510      	push	{r4, lr}
900151f8:	d908      	bls.n	9001520c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
900151fa:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
900151fe:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
90015202:	681a      	ldr	r2, [r3, #0]
90015204:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
90015208:	685a      	ldr	r2, [r3, #4]
9001520a:	6062      	str	r2, [r4, #4]
9001520c:	bd10      	pop	{r4, pc}
	...

90015210 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
90015210:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015214:	b08f      	sub	sp, #60	; 0x3c
90015216:	4b8f      	ldr	r3, [pc, #572]	; (90015454 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
90015218:	4683      	mov	fp, r0
9001521a:	ac0a      	add	r4, sp, #40	; 0x28
9001521c:	e884 0006 	stmia.w	r4, {r1, r2}
90015220:	f9b3 2000 	ldrsh.w	r2, [r3]
90015224:	4620      	mov	r0, r4
90015226:	4b8c      	ldr	r3, [pc, #560]	; (90015458 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
90015228:	f9b3 1000 	ldrsh.w	r1, [r3]
9001522c:	f7ff fe0f 	bl	90014e4e <_ZN8touchgfx4Rect10restrictToEss>
90015230:	4620      	mov	r0, r4
90015232:	f7fa ffec 	bl	9001020e <_ZNK8touchgfx4Rect7isEmptyEv>
90015236:	2800      	cmp	r0, #0
90015238:	d16a      	bne.n	90015310 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001523a:	9403      	str	r4, [sp, #12]
9001523c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
90015240:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
90015244:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
90015248:	9301      	str	r3, [sp, #4]
9001524a:	35a4      	adds	r5, #164	; 0xa4
9001524c:	b15c      	cbz	r4, 90015266 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
9001524e:	4629      	mov	r1, r5
90015250:	9803      	ldr	r0, [sp, #12]
90015252:	f7ff fe4d 	bl	90014ef0 <_ZNK8touchgfx4Rect8includesERKS0_>
90015256:	3c01      	subs	r4, #1
90015258:	b118      	cbz	r0, 90015262 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
9001525a:	b2a1      	uxth	r1, r4
9001525c:	9801      	ldr	r0, [sp, #4]
9001525e:	f7ff ffc3 	bl	900151e8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90015262:	3d08      	subs	r5, #8
90015264:	e7f2      	b.n	9001524c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
90015266:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
9001526a:	f10a 33ff 	add.w	r3, sl, #4294967295
9001526e:	f8cd a010 	str.w	sl, [sp, #16]
90015272:	9302      	str	r3, [sp, #8]
90015274:	ea4f 03ca 	mov.w	r3, sl, lsl #3
90015278:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
9001527c:	9306      	str	r3, [sp, #24]
9001527e:	445c      	add	r4, fp
90015280:	2500      	movs	r5, #0
90015282:	4626      	mov	r6, r4
90015284:	f8cd a014 	str.w	sl, [sp, #20]
90015288:	462f      	mov	r7, r5
9001528a:	9b05      	ldr	r3, [sp, #20]
9001528c:	2b00      	cmp	r3, #0
9001528e:	d073      	beq.n	90015378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
90015290:	9903      	ldr	r1, [sp, #12]
90015292:	4630      	mov	r0, r6
90015294:	f7ff fdb9 	bl	90014e0a <_ZNK8touchgfx4Rect9intersectERKS0_>
90015298:	b350      	cbz	r0, 900152f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
9001529a:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
9001529e:	f9b6 c000 	ldrsh.w	ip, [r6]
900152a2:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
900152a6:	45e6      	cmp	lr, ip
900152a8:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
900152ac:	db33      	blt.n	90015316 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
900152ae:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
900152b2:	88b3      	ldrh	r3, [r6, #4]
900152b4:	4472      	add	r2, lr
900152b6:	4463      	add	r3, ip
900152b8:	b212      	sxth	r2, r2
900152ba:	b21b      	sxth	r3, r3
900152bc:	429a      	cmp	r2, r3
900152be:	dc2a      	bgt.n	90015316 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
900152c0:	fa1f f289 	uxth.w	r2, r9
900152c4:	88f3      	ldrh	r3, [r6, #6]
900152c6:	45c8      	cmp	r8, r9
900152c8:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
900152cc:	4413      	add	r3, r2
900152ce:	fa1f fc88 	uxth.w	ip, r8
900152d2:	b29b      	uxth	r3, r3
900152d4:	fa0f fe83 	sxth.w	lr, r3
900152d8:	db0f      	blt.n	900152fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
900152da:	eba3 030c 	sub.w	r3, r3, ip
900152de:	1ac9      	subs	r1, r1, r3
900152e0:	b209      	sxth	r1, r1
900152e2:	2900      	cmp	r1, #0
900152e4:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
900152e8:	dd12      	ble.n	90015310 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
900152ea:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
900152ee:	4605      	mov	r5, r0
900152f0:	9b05      	ldr	r3, [sp, #20]
900152f2:	3e08      	subs	r6, #8
900152f4:	3b01      	subs	r3, #1
900152f6:	9305      	str	r3, [sp, #20]
900152f8:	e7c7      	b.n	9001528a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
900152fa:	4461      	add	r1, ip
900152fc:	b209      	sxth	r1, r1
900152fe:	4571      	cmp	r1, lr
90015300:	dc38      	bgt.n	90015374 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90015302:	eba2 020c 	sub.w	r2, r2, ip
90015306:	b212      	sxth	r2, r2
90015308:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
9001530c:	2a00      	cmp	r2, #0
9001530e:	dcee      	bgt.n	900152ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
90015310:	b00f      	add	sp, #60	; 0x3c
90015312:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015316:	45c8      	cmp	r8, r9
90015318:	db2c      	blt.n	90015374 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
9001531a:	88f3      	ldrh	r3, [r6, #6]
9001531c:	4499      	add	r9, r3
9001531e:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
90015322:	4498      	add	r8, r3
90015324:	fa0f f989 	sxth.w	r9, r9
90015328:	fa0f f888 	sxth.w	r8, r8
9001532c:	45c1      	cmp	r9, r8
9001532e:	db21      	blt.n	90015374 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90015330:	fa1f f28c 	uxth.w	r2, ip
90015334:	88b3      	ldrh	r3, [r6, #4]
90015336:	45e6      	cmp	lr, ip
90015338:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
9001533c:	4413      	add	r3, r2
9001533e:	fa1f f88e 	uxth.w	r8, lr
90015342:	b29b      	uxth	r3, r3
90015344:	fa0f f983 	sxth.w	r9, r3
90015348:	db0a      	blt.n	90015360 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
9001534a:	eba3 0308 	sub.w	r3, r3, r8
9001534e:	1ac9      	subs	r1, r1, r3
90015350:	b209      	sxth	r1, r1
90015352:	2900      	cmp	r1, #0
90015354:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
90015358:	ddda      	ble.n	90015310 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001535a:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
9001535e:	e7c6      	b.n	900152ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
90015360:	4441      	add	r1, r8
90015362:	b209      	sxth	r1, r1
90015364:	4549      	cmp	r1, r9
90015366:	dc05      	bgt.n	90015374 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90015368:	eba2 0208 	sub.w	r2, r2, r8
9001536c:	b212      	sxth	r2, r2
9001536e:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
90015372:	e7cb      	b.n	9001530c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
90015374:	4607      	mov	r7, r0
90015376:	e7bb      	b.n	900152f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
90015378:	2d00      	cmp	r5, #0
9001537a:	d181      	bne.n	90015280 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
9001537c:	2f00      	cmp	r7, #0
9001537e:	f000 81dd 	beq.w	9001573c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
90015382:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
90015386:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
9001538a:	b2b3      	uxth	r3, r6
9001538c:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
90015390:	9305      	str	r3, [sp, #20]
90015392:	9a05      	ldr	r2, [sp, #20]
90015394:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
90015398:	4413      	add	r3, r2
9001539a:	b2ba      	uxth	r2, r7
9001539c:	4492      	add	sl, r2
9001539e:	b29b      	uxth	r3, r3
900153a0:	fa1f fa8a 	uxth.w	sl, sl
900153a4:	fa0f f883 	sxth.w	r8, r3
900153a8:	fa0f f98a 	sxth.w	r9, sl
900153ac:	e9cd 2307 	strd	r2, r3, [sp, #28]
900153b0:	9b04      	ldr	r3, [sp, #16]
900153b2:	2b00      	cmp	r3, #0
900153b4:	d052      	beq.n	9001545c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
900153b6:	9903      	ldr	r1, [sp, #12]
900153b8:	4620      	mov	r0, r4
900153ba:	f7ff fd26 	bl	90014e0a <_ZNK8touchgfx4Rect9intersectERKS0_>
900153be:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
900153c2:	b1c0      	cbz	r0, 900153f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
900153c4:	f9b4 e000 	ldrsh.w	lr, [r4]
900153c8:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
900153cc:	4576      	cmp	r6, lr
900153ce:	dc22      	bgt.n	90015416 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
900153d0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
900153d4:	44f4      	add	ip, lr
900153d6:	fa0f fc8c 	sxth.w	ip, ip
900153da:	45e0      	cmp	r8, ip
900153dc:	db1b      	blt.n	90015416 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
900153de:	428f      	cmp	r7, r1
900153e0:	fa1f fc81 	uxth.w	ip, r1
900153e4:	88e1      	ldrh	r1, [r4, #6]
900153e6:	dc0d      	bgt.n	90015404 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
900153e8:	ebaa 0c0c 	sub.w	ip, sl, ip
900153ec:	f8a4 9002 	strh.w	r9, [r4, #2]
900153f0:	eba1 010c 	sub.w	r1, r1, ip
900153f4:	80e1      	strh	r1, [r4, #6]
900153f6:	4628      	mov	r0, r5
900153f8:	9904      	ldr	r1, [sp, #16]
900153fa:	3c08      	subs	r4, #8
900153fc:	4605      	mov	r5, r0
900153fe:	3901      	subs	r1, #1
90015400:	9104      	str	r1, [sp, #16]
90015402:	e7d3      	b.n	900153ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
90015404:	4461      	add	r1, ip
90015406:	b209      	sxth	r1, r1
90015408:	4549      	cmp	r1, r9
9001540a:	dcf5      	bgt.n	900153f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
9001540c:	eba2 0c0c 	sub.w	ip, r2, ip
90015410:	f8a4 c006 	strh.w	ip, [r4, #6]
90015414:	e7ef      	b.n	900153f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90015416:	428f      	cmp	r7, r1
90015418:	dcee      	bgt.n	900153f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
9001541a:	f8b4 c006 	ldrh.w	ip, [r4, #6]
9001541e:	4461      	add	r1, ip
90015420:	b209      	sxth	r1, r1
90015422:	4589      	cmp	r9, r1
90015424:	dbe8      	blt.n	900153f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90015426:	4576      	cmp	r6, lr
90015428:	fa1f fc8e 	uxth.w	ip, lr
9001542c:	88a1      	ldrh	r1, [r4, #4]
9001542e:	dc07      	bgt.n	90015440 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
90015430:	eba3 0c0c 	sub.w	ip, r3, ip
90015434:	f8a4 8000 	strh.w	r8, [r4]
90015438:	eba1 010c 	sub.w	r1, r1, ip
9001543c:	80a1      	strh	r1, [r4, #4]
9001543e:	e7da      	b.n	900153f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90015440:	4461      	add	r1, ip
90015442:	b209      	sxth	r1, r1
90015444:	4588      	cmp	r8, r1
90015446:	dbd7      	blt.n	900153f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90015448:	9905      	ldr	r1, [sp, #20]
9001544a:	eba1 0c0c 	sub.w	ip, r1, ip
9001544e:	f8a4 c004 	strh.w	ip, [r4, #4]
90015452:	e7d0      	b.n	900153f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90015454:	240235a2 	.word	0x240235a2
90015458:	240235a0 	.word	0x240235a0
9001545c:	2d00      	cmp	r5, #0
9001545e:	f000 816d 	beq.w	9001573c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
90015462:	9b06      	ldr	r3, [sp, #24]
90015464:	445b      	add	r3, fp
90015466:	461c      	mov	r4, r3
90015468:	9b02      	ldr	r3, [sp, #8]
9001546a:	3301      	adds	r3, #1
9001546c:	f000 8166 	beq.w	9001573c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
90015470:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
90015474:	9803      	ldr	r0, [sp, #12]
90015476:	4629      	mov	r1, r5
90015478:	f7ff fd3a 	bl	90014ef0 <_ZNK8touchgfx4Rect8includesERKS0_>
9001547c:	b120      	cbz	r0, 90015488 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
9001547e:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90015482:	9801      	ldr	r0, [sp, #4]
90015484:	f7ff feb0 	bl	900151e8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90015488:	9903      	ldr	r1, [sp, #12]
9001548a:	4628      	mov	r0, r5
9001548c:	f7ff fcbd 	bl	90014e0a <_ZNK8touchgfx4Rect9intersectERKS0_>
90015490:	2800      	cmp	r0, #0
90015492:	f000 809c 	beq.w	900155ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
90015496:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
9001549a:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
9001549e:	fa1f f189 	uxth.w	r1, r9
900154a2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
900154a6:	9309      	str	r3, [sp, #36]	; 0x24
900154a8:	eb01 0c03 	add.w	ip, r1, r3
900154ac:	b283      	uxth	r3, r0
900154ae:	4548      	cmp	r0, r9
900154b0:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
900154b4:	fa1f fa8c 	uxth.w	sl, ip
900154b8:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
900154bc:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
900154c0:	eb03 050c 	add.w	r5, r3, ip
900154c4:	b2ad      	uxth	r5, r5
900154c6:	9505      	str	r5, [sp, #20]
900154c8:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
900154cc:	9504      	str	r5, [sp, #16]
900154ce:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
900154d2:	f340 8099 	ble.w	90015608 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
900154d6:	1a5b      	subs	r3, r3, r1
900154d8:	4596      	cmp	lr, r2
900154da:	fa0f f08a 	sxth.w	r0, sl
900154de:	b29b      	uxth	r3, r3
900154e0:	b21e      	sxth	r6, r3
900154e2:	dd2e      	ble.n	90015542 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
900154e4:	9f02      	ldr	r7, [sp, #8]
900154e6:	fa1f fe8e 	uxth.w	lr, lr
900154ea:	b292      	uxth	r2, r2
900154ec:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
900154f0:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
900154f4:	9f04      	ldr	r7, [sp, #16]
900154f6:	ebae 0102 	sub.w	r1, lr, r2
900154fa:	44a6      	add	lr, r4
900154fc:	1a3f      	subs	r7, r7, r0
900154fe:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
90015502:	b289      	uxth	r1, r1
90015504:	4402      	add	r2, r0
90015506:	fa0f fe8e 	sxth.w	lr, lr
9001550a:	b20d      	sxth	r5, r1
9001550c:	b212      	sxth	r2, r2
9001550e:	436f      	muls	r7, r5
90015510:	ebae 0202 	sub.w	r2, lr, r2
90015514:	4372      	muls	r2, r6
90015516:	4297      	cmp	r7, r2
90015518:	db09      	blt.n	9001552e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
9001551a:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
9001551e:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
90015522:	449c      	add	ip, r3
90015524:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
90015528:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
9001552c:	e686      	b.n	9001523c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001552e:	4421      	add	r1, r4
90015530:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
90015534:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
90015538:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
9001553c:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
90015540:	e67c      	b.n	9001523c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90015542:	9f04      	ldr	r7, [sp, #16]
90015544:	42b8      	cmp	r0, r7
90015546:	da27      	bge.n	90015598 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
90015548:	9902      	ldr	r1, [sp, #8]
9001554a:	1a3f      	subs	r7, r7, r0
9001554c:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
90015550:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
90015554:	eb05 010e 	add.w	r1, r5, lr
90015558:	fa1f f881 	uxth.w	r8, r1
9001555c:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
90015560:	4411      	add	r1, r2
90015562:	fa0f f988 	sxth.w	r9, r8
90015566:	eba2 020e 	sub.w	r2, r2, lr
9001556a:	eba1 0108 	sub.w	r1, r1, r8
9001556e:	4372      	muls	r2, r6
90015570:	b289      	uxth	r1, r1
90015572:	fa0f f881 	sxth.w	r8, r1
90015576:	fb08 f707 	mul.w	r7, r8, r7
9001557a:	42ba      	cmp	r2, r7
9001557c:	dc06      	bgt.n	9001558c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
9001557e:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
90015582:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
90015586:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
9001558a:	e7ca      	b.n	90015522 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
9001558c:	4429      	add	r1, r5
9001558e:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
90015592:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
90015596:	e651      	b.n	9001523c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90015598:	9805      	ldr	r0, [sp, #20]
9001559a:	2d06      	cmp	r5, #6
9001559c:	ebaa 0000 	sub.w	r0, sl, r0
900155a0:	b280      	uxth	r0, r0
900155a2:	fa0f fe80 	sxth.w	lr, r0
900155a6:	d817      	bhi.n	900155d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
900155a8:	9b04      	ldr	r3, [sp, #16]
900155aa:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
900155ae:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
900155b2:	1c6b      	adds	r3, r5, #1
900155b4:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
900155b8:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
900155bc:	9b01      	ldr	r3, [sp, #4]
900155be:	9801      	ldr	r0, [sp, #4]
900155c0:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
900155c4:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
900155c8:	805a      	strh	r2, [r3, #2]
900155ca:	809e      	strh	r6, [r3, #4]
900155cc:	80d9      	strh	r1, [r3, #6]
900155ce:	9b02      	ldr	r3, [sp, #8]
900155d0:	3c08      	subs	r4, #8
900155d2:	3b01      	subs	r3, #1
900155d4:	9302      	str	r3, [sp, #8]
900155d6:	e747      	b.n	90015468 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
900155d8:	9a02      	ldr	r2, [sp, #8]
900155da:	45b6      	cmp	lr, r6
900155dc:	ea4f 02c2 	mov.w	r2, r2, lsl #3
900155e0:	db0d      	blt.n	900155fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
900155e2:	449c      	add	ip, r3
900155e4:	445a      	add	r2, fp
900155e6:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
900155ea:	fa1f fc8c 	uxth.w	ip, ip
900155ee:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
900155f2:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
900155f6:	448c      	add	ip, r1
900155f8:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
900155fc:	e61e      	b.n	9001523c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900155fe:	445a      	add	r2, fp
90015600:	4484      	add	ip, r0
90015602:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
90015606:	e78f      	b.n	90015528 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90015608:	fa1f f18e 	uxth.w	r1, lr
9001560c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
90015610:	b293      	uxth	r3, r2
90015612:	4596      	cmp	lr, r2
90015614:	eb01 0806 	add.w	r8, r1, r6
90015618:	9306      	str	r3, [sp, #24]
9001561a:	fa1f f888 	uxth.w	r8, r8
9001561e:	9f06      	ldr	r7, [sp, #24]
90015620:	fa0f f388 	sxth.w	r3, r8
90015624:	9307      	str	r3, [sp, #28]
90015626:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
9001562a:	443b      	add	r3, r7
9001562c:	b29b      	uxth	r3, r3
9001562e:	9308      	str	r3, [sp, #32]
90015630:	da24      	bge.n	9001567c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
90015632:	9905      	ldr	r1, [sp, #20]
90015634:	eba3 0308 	sub.w	r3, r3, r8
90015638:	eba2 020e 	sub.w	r2, r2, lr
9001563c:	eba9 0000 	sub.w	r0, r9, r0
90015640:	ebaa 0401 	sub.w	r4, sl, r1
90015644:	b29b      	uxth	r3, r3
90015646:	b2a4      	uxth	r4, r4
90015648:	b219      	sxth	r1, r3
9001564a:	b225      	sxth	r5, r4
9001564c:	4348      	muls	r0, r1
9001564e:	436a      	muls	r2, r5
90015650:	4282      	cmp	r2, r0
90015652:	9a02      	ldr	r2, [sp, #8]
90015654:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90015658:	445a      	add	r2, fp
9001565a:	dc06      	bgt.n	9001566a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
9001565c:	9b07      	ldr	r3, [sp, #28]
9001565e:	44a4      	add	ip, r4
90015660:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
90015664:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
90015668:	e75e      	b.n	90015528 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
9001566a:	9904      	ldr	r1, [sp, #16]
9001566c:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
90015670:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
90015674:	4433      	add	r3, r6
90015676:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
9001567a:	e5df      	b.n	9001523c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001567c:	9f06      	ldr	r7, [sp, #24]
9001567e:	9b04      	ldr	r3, [sp, #16]
90015680:	1bc9      	subs	r1, r1, r7
90015682:	fa0f f78a 	sxth.w	r7, sl
90015686:	b289      	uxth	r1, r1
90015688:	429f      	cmp	r7, r3
9001568a:	fa0f fe81 	sxth.w	lr, r1
9001568e:	dd23      	ble.n	900156d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
90015690:	9a05      	ldr	r2, [sp, #20]
90015692:	eba9 0000 	sub.w	r0, r9, r0
90015696:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
9001569a:	ebaa 0202 	sub.w	r2, sl, r2
9001569e:	9d07      	ldr	r5, [sp, #28]
900156a0:	fb0e f000 	mul.w	r0, lr, r0
900156a4:	b292      	uxth	r2, r2
900156a6:	eba5 0a03 	sub.w	sl, r5, r3
900156aa:	9b02      	ldr	r3, [sp, #8]
900156ac:	b214      	sxth	r4, r2
900156ae:	00db      	lsls	r3, r3, #3
900156b0:	fb04 fa0a 	mul.w	sl, r4, sl
900156b4:	445b      	add	r3, fp
900156b6:	4550      	cmp	r0, sl
900156b8:	db03      	blt.n	900156c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
900156ba:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
900156be:	4494      	add	ip, r2
900156c0:	e732      	b.n	90015528 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
900156c2:	9a04      	ldr	r2, [sp, #16]
900156c4:	4431      	add	r1, r6
900156c6:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
900156ca:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
900156ce:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
900156d2:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
900156d6:	e75c      	b.n	90015592 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
900156d8:	9b08      	ldr	r3, [sp, #32]
900156da:	2d06      	cmp	r5, #6
900156dc:	eba3 0308 	sub.w	r3, r3, r8
900156e0:	b29b      	uxth	r3, r3
900156e2:	b218      	sxth	r0, r3
900156e4:	d813      	bhi.n	9001570e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
900156e6:	9b07      	ldr	r3, [sp, #28]
900156e8:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
900156ec:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
900156f0:	1c6b      	adds	r3, r5, #1
900156f2:	9901      	ldr	r1, [sp, #4]
900156f4:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
900156f8:	9b01      	ldr	r3, [sp, #4]
900156fa:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
900156fe:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90015702:	805a      	strh	r2, [r3, #2]
90015704:	9a09      	ldr	r2, [sp, #36]	; 0x24
90015706:	f8a3 e006 	strh.w	lr, [r3, #6]
9001570a:	809a      	strh	r2, [r3, #4]
9001570c:	e75f      	b.n	900155ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
9001570e:	9c02      	ldr	r4, [sp, #8]
90015710:	4570      	cmp	r0, lr
90015712:	ea4f 04c4 	mov.w	r4, r4, lsl #3
90015716:	db0d      	blt.n	90015734 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
90015718:	4431      	add	r1, r6
9001571a:	9b06      	ldr	r3, [sp, #24]
9001571c:	445c      	add	r4, fp
9001571e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
90015722:	b289      	uxth	r1, r1
90015724:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
90015728:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
9001572c:	4419      	add	r1, r3
9001572e:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
90015732:	e583      	b.n	9001523c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90015734:	445c      	add	r4, fp
90015736:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
9001573a:	e79b      	b.n	90015674 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
9001573c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
90015740:	f64f 76ff 	movw	r6, #65535	; 0xffff
90015744:	1e65      	subs	r5, r4, #1
90015746:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
9001574a:	b2ad      	uxth	r5, r5
9001574c:	42b5      	cmp	r5, r6
9001574e:	d044      	beq.n	900157da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
90015750:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
90015754:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
90015758:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
9001575c:	4282      	cmp	r2, r0
9001575e:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
90015762:	d11f      	bne.n	900157a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
90015764:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
90015768:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
9001576c:	459c      	cmp	ip, r3
9001576e:	d119      	bne.n	900157a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
90015770:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
90015774:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
90015778:	19d8      	adds	r0, r3, r7
9001577a:	b200      	sxth	r0, r0
9001577c:	4288      	cmp	r0, r1
9001577e:	d109      	bne.n	90015794 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
90015780:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
90015784:	4413      	add	r3, r2
90015786:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
9001578a:	4629      	mov	r1, r5
9001578c:	9801      	ldr	r0, [sp, #4]
9001578e:	f7ff fd2b 	bl	900151e8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90015792:	e003      	b.n	9001579c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90015794:	4411      	add	r1, r2
90015796:	b209      	sxth	r1, r1
90015798:	42b9      	cmp	r1, r7
9001579a:	d0f3      	beq.n	90015784 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
9001579c:	3d01      	subs	r5, #1
9001579e:	3c08      	subs	r4, #8
900157a0:	b2ad      	uxth	r5, r5
900157a2:	e7d3      	b.n	9001574c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
900157a4:	42b9      	cmp	r1, r7
900157a6:	d1f9      	bne.n	9001579c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
900157a8:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
900157ac:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
900157b0:	4299      	cmp	r1, r3
900157b2:	d1f3      	bne.n	9001579c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
900157b4:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
900157b8:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
900157bc:	181f      	adds	r7, r3, r0
900157be:	b23f      	sxth	r7, r7
900157c0:	42ba      	cmp	r2, r7
900157c2:	d105      	bne.n	900157d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
900157c4:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
900157c8:	440b      	add	r3, r1
900157ca:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
900157ce:	e7dc      	b.n	9001578a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
900157d0:	440a      	add	r2, r1
900157d2:	b212      	sxth	r2, r2
900157d4:	4290      	cmp	r0, r2
900157d6:	d1e1      	bne.n	9001579c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
900157d8:	e7f6      	b.n	900157c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
900157da:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
900157de:	2e07      	cmp	r6, #7
900157e0:	ea4f 04c6 	mov.w	r4, r6, lsl #3
900157e4:	d812      	bhi.n	9001580c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
900157e6:	1c75      	adds	r5, r6, #1
900157e8:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
900157ec:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
900157f0:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
900157f4:	9d01      	ldr	r5, [sp, #4]
900157f6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
900157fa:	442c      	add	r4, r5
900157fc:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
90015800:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
90015804:	8061      	strh	r1, [r4, #2]
90015806:	80a2      	strh	r2, [r4, #4]
90015808:	80e3      	strh	r3, [r4, #6]
9001580a:	e581      	b.n	90015310 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001580c:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
90015810:	3e01      	subs	r6, #1
90015812:	445c      	add	r4, fp
90015814:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
90015818:	f04f 37ff 	mov.w	r7, #4294967295
9001581c:	2500      	movs	r5, #0
9001581e:	9305      	str	r3, [sp, #20]
90015820:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
90015824:	1e72      	subs	r2, r6, #1
90015826:	9302      	str	r3, [sp, #8]
90015828:	4691      	mov	r9, r2
9001582a:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
9001582e:	9304      	str	r3, [sp, #16]
90015830:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
90015834:	f1b9 3fff 	cmp.w	r9, #4294967295
90015838:	6818      	ldr	r0, [r3, #0]
9001583a:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
9001583e:	9207      	str	r2, [sp, #28]
90015840:	bf16      	itet	ne
90015842:	9905      	ldrne	r1, [sp, #20]
90015844:	f8dd e00c 	ldreq.w	lr, [sp, #12]
90015848:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
9001584c:	9306      	str	r3, [sp, #24]
9001584e:	f8be 1006 	ldrh.w	r1, [lr, #6]
90015852:	f8be 8004 	ldrh.w	r8, [lr, #4]
90015856:	fb18 f801 	smulbb	r8, r8, r1
9001585a:	6859      	ldr	r1, [r3, #4]
9001585c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90015860:	4671      	mov	r1, lr
90015862:	a80c      	add	r0, sp, #48	; 0x30
90015864:	f7ff fb6a 	bl	90014f3c <_ZN8touchgfx4Rect11expandToFitERKS0_>
90015868:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
9001586c:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
90015870:	f04f 0c08 	mov.w	ip, #8
90015874:	9b04      	ldr	r3, [sp, #16]
90015876:	9a02      	ldr	r2, [sp, #8]
90015878:	fb10 f001 	smulbb	r0, r0, r1
9001587c:	fb02 8803 	mla	r8, r2, r3, r8
90015880:	eba0 0108 	sub.w	r1, r0, r8
90015884:	fb90 f0fc 	sdiv	r0, r0, ip
90015888:	4288      	cmp	r0, r1
9001588a:	dc20      	bgt.n	900158ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
9001588c:	4551      	cmp	r1, sl
9001588e:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
90015892:	da03      	bge.n	9001589c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
90015894:	b1d9      	cbz	r1, 900158ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
90015896:	468a      	mov	sl, r1
90015898:	464f      	mov	r7, r9
9001589a:	4635      	mov	r5, r6
9001589c:	f109 39ff 	add.w	r9, r9, #4294967295
900158a0:	f119 0f02 	cmn.w	r9, #2
900158a4:	d1c6      	bne.n	90015834 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
900158a6:	4616      	mov	r6, r2
900158a8:	3201      	adds	r2, #1
900158aa:	f1a4 0408 	sub.w	r4, r4, #8
900158ae:	d1b7      	bne.n	90015820 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
900158b0:	9b01      	ldr	r3, [sp, #4]
900158b2:	b2ac      	uxth	r4, r5
900158b4:	00ed      	lsls	r5, r5, #3
900158b6:	1958      	adds	r0, r3, r5
900158b8:	1c7b      	adds	r3, r7, #1
900158ba:	d10b      	bne.n	900158d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
900158bc:	4601      	mov	r1, r0
900158be:	9803      	ldr	r0, [sp, #12]
900158c0:	f7ff fb3c 	bl	90014f3c <_ZN8touchgfx4Rect11expandToFitERKS0_>
900158c4:	4621      	mov	r1, r4
900158c6:	9801      	ldr	r0, [sp, #4]
900158c8:	f7ff fc8e 	bl	900151e8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900158cc:	e4b6      	b.n	9001523c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900158ce:	464f      	mov	r7, r9
900158d0:	4635      	mov	r5, r6
900158d2:	e7ed      	b.n	900158b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
900158d4:	9b01      	ldr	r3, [sp, #4]
900158d6:	00ff      	lsls	r7, r7, #3
900158d8:	445d      	add	r5, fp
900158da:	19d9      	adds	r1, r3, r7
900158dc:	445f      	add	r7, fp
900158de:	f7ff fb2d 	bl	90014f3c <_ZN8touchgfx4Rect11expandToFitERKS0_>
900158e2:	9b03      	ldr	r3, [sp, #12]
900158e4:	cb03      	ldmia	r3!, {r0, r1}
900158e6:	9b03      	ldr	r3, [sp, #12]
900158e8:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
900158ec:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
900158f0:	f855 0fac 	ldr.w	r0, [r5, #172]!
900158f4:	6869      	ldr	r1, [r5, #4]
900158f6:	c303      	stmia	r3!, {r0, r1}
900158f8:	e7e4      	b.n	900158c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
900158fa:	bf00      	nop

900158fc <_ZN8touchgfx11Application15drawCachedAreasEv>:
900158fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015900:	f500 7698 	add.w	r6, r0, #304	; 0x130
90015904:	b09b      	sub	sp, #108	; 0x6c
90015906:	4604      	mov	r4, r0
90015908:	4630      	mov	r0, r6
9001590a:	f7fa fc80 	bl	9001020e <_ZNK8touchgfx4Rect7isEmptyEv>
9001590e:	4605      	mov	r5, r0
90015910:	b948      	cbnz	r0, 90015926 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
90015912:	6823      	ldr	r3, [r4, #0]
90015914:	4620      	mov	r0, r4
90015916:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90015918:	e896 0006 	ldmia.w	r6, {r1, r2}
9001591c:	4798      	blx	r3
9001591e:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
90015922:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
90015926:	4bc5      	ldr	r3, [pc, #788]	; (90015c3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
90015928:	681b      	ldr	r3, [r3, #0]
9001592a:	2b00      	cmp	r3, #0
9001592c:	d03f      	beq.n	900159ae <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
9001592e:	4dc4      	ldr	r5, [pc, #784]	; (90015c40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
90015930:	4628      	mov	r0, r5
90015932:	f7fa fc6c 	bl	9001020e <_ZNK8touchgfx4Rect7isEmptyEv>
90015936:	4606      	mov	r6, r0
90015938:	2800      	cmp	r0, #0
9001593a:	d138      	bne.n	900159ae <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
9001593c:	4628      	mov	r0, r5
9001593e:	f7ff f973 	bl	90014c28 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90015942:	6823      	ldr	r3, [r4, #0]
90015944:	6829      	ldr	r1, [r5, #0]
90015946:	4620      	mov	r0, r4
90015948:	6c1b      	ldr	r3, [r3, #64]	; 0x40
9001594a:	686a      	ldr	r2, [r5, #4]
9001594c:	4798      	blx	r3
9001594e:	802e      	strh	r6, [r5, #0]
90015950:	806e      	strh	r6, [r5, #2]
90015952:	80ae      	strh	r6, [r5, #4]
90015954:	80ee      	strh	r6, [r5, #6]
90015956:	f10d 0824 	add.w	r8, sp, #36	; 0x24
9001595a:	4dba      	ldr	r5, [pc, #744]	; (90015c44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
9001595c:	4640      	mov	r0, r8
9001595e:	f7ff fbe7 	bl	90015130 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90015962:	882e      	ldrh	r6, [r5, #0]
90015964:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
90015968:	f104 00ac 	add.w	r0, r4, #172	; 0xac
9001596c:	4633      	mov	r3, r6
9001596e:	42bb      	cmp	r3, r7
90015970:	d224      	bcs.n	900159bc <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
90015972:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
90015976:	2907      	cmp	r1, #7
90015978:	d816      	bhi.n	900159a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
9001597a:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
9001597e:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
90015982:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
90015986:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
9001598a:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
9001598e:	1c4a      	adds	r2, r1, #1
90015990:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
90015994:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
90015998:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
9001599c:	f8a2 a002 	strh.w	sl, [r2, #2]
900159a0:	f8a2 e004 	strh.w	lr, [r2, #4]
900159a4:	f8a2 c006 	strh.w	ip, [r2, #6]
900159a8:	3301      	adds	r3, #1
900159aa:	b29b      	uxth	r3, r3
900159ac:	e7df      	b.n	9001596e <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
900159ae:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
900159b2:	2b00      	cmp	r3, #0
900159b4:	d1cf      	bne.n	90015956 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
900159b6:	b01b      	add	sp, #108	; 0x6c
900159b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900159bc:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
900159c0:	42b3      	cmp	r3, r6
900159c2:	d90c      	bls.n	900159de <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
900159c4:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
900159c8:	6822      	ldr	r2, [r4, #0]
900159ca:	3601      	adds	r6, #1
900159cc:	4620      	mov	r0, r4
900159ce:	6c17      	ldr	r7, [r2, #64]	; 0x40
900159d0:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
900159d4:	b2b6      	uxth	r6, r6
900159d6:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
900159da:	47b8      	blx	r7
900159dc:	e7ee      	b.n	900159bc <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
900159de:	4a9a      	ldr	r2, [pc, #616]	; (90015c48 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
900159e0:	6813      	ldr	r3, [r2, #0]
900159e2:	4691      	mov	r9, r2
900159e4:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
900159e8:	2b01      	cmp	r3, #1
900159ea:	f040 80e0 	bne.w	90015bae <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
900159ee:	8829      	ldrh	r1, [r5, #0]
900159f0:	2600      	movs	r6, #0
900159f2:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
900159f6:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
900159fa:	33ae      	adds	r3, #174	; 0xae
900159fc:	428f      	cmp	r7, r1
900159fe:	f103 0308 	add.w	r3, r3, #8
90015a02:	dd0a      	ble.n	90015a1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
90015a04:	f833 2c04 	ldrh.w	r2, [r3, #-4]
90015a08:	3101      	adds	r1, #1
90015a0a:	f833 0c08 	ldrh.w	r0, [r3, #-8]
90015a0e:	4402      	add	r2, r0
90015a10:	b212      	sxth	r2, r2
90015a12:	4296      	cmp	r6, r2
90015a14:	bfb8      	it	lt
90015a16:	4616      	movlt	r6, r2
90015a18:	e7f0      	b.n	900159fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
90015a1a:	4b8c      	ldr	r3, [pc, #560]	; (90015c4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
90015a1c:	f8df 9228 	ldr.w	r9, [pc, #552]	; 90015c48 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
90015a20:	881b      	ldrh	r3, [r3, #0]
90015a22:	2b0f      	cmp	r3, #15
90015a24:	bf8c      	ite	hi
90015a26:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
90015a2a:	f04f 0b01 	movls.w	fp, #1
90015a2e:	2300      	movs	r3, #0
90015a30:	e9cd 3305 	strd	r3, r3, [sp, #20]
90015a34:	f8bd 7016 	ldrh.w	r7, [sp, #22]
90015a38:	f8bd 001a 	ldrh.w	r0, [sp, #26]
90015a3c:	4b82      	ldr	r3, [pc, #520]	; (90015c48 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
90015a3e:	4438      	add	r0, r7
90015a40:	b207      	sxth	r7, r0
90015a42:	6818      	ldr	r0, [r3, #0]
90015a44:	42b7      	cmp	r7, r6
90015a46:	6803      	ldr	r3, [r0, #0]
90015a48:	f280 8083 	bge.w	90015b52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
90015a4c:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
90015a50:	4798      	blx	r3
90015a52:	eb07 030b 	add.w	r3, r7, fp
90015a56:	4298      	cmp	r0, r3
90015a58:	da07      	bge.n	90015a6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
90015a5a:	42b0      	cmp	r0, r6
90015a5c:	da05      	bge.n	90015a6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
90015a5e:	4287      	cmp	r7, r0
90015a60:	dd6c      	ble.n	90015b3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
90015a62:	2f00      	cmp	r7, #0
90015a64:	dd6a      	ble.n	90015b3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
90015a66:	4630      	mov	r0, r6
90015a68:	e004      	b.n	90015a74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
90015a6a:	4287      	cmp	r7, r0
90015a6c:	dcfb      	bgt.n	90015a66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
90015a6e:	42b0      	cmp	r0, r6
90015a70:	bfa8      	it	ge
90015a72:	4630      	movge	r0, r6
90015a74:	4b76      	ldr	r3, [pc, #472]	; (90015c50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
90015a76:	1bc0      	subs	r0, r0, r7
90015a78:	2200      	movs	r2, #0
90015a7a:	f8ad 7016 	strh.w	r7, [sp, #22]
90015a7e:	f9b3 3000 	ldrsh.w	r3, [r3]
90015a82:	882f      	ldrh	r7, [r5, #0]
90015a84:	f8ad 2014 	strh.w	r2, [sp, #20]
90015a88:	f8ad 3018 	strh.w	r3, [sp, #24]
90015a8c:	f8ad 001a 	strh.w	r0, [sp, #26]
90015a90:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
90015a94:	42bb      	cmp	r3, r7
90015a96:	d9cd      	bls.n	90015a34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
90015a98:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
90015a9c:	ab07      	add	r3, sp, #28
90015a9e:	f852 0fac 	ldr.w	r0, [r2, #172]!
90015aa2:	6851      	ldr	r1, [r2, #4]
90015aa4:	c303      	stmia	r3!, {r0, r1}
90015aa6:	a905      	add	r1, sp, #20
90015aa8:	a807      	add	r0, sp, #28
90015aaa:	f7ff f9ae 	bl	90014e0a <_ZNK8touchgfx4Rect9intersectERKS0_>
90015aae:	2800      	cmp	r0, #0
90015ab0:	d04c      	beq.n	90015b4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
90015ab2:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
90015ab6:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
90015aba:	f8bd a020 	ldrh.w	sl, [sp, #32]
90015abe:	4686      	mov	lr, r0
90015ac0:	4290      	cmp	r0, r2
90015ac2:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
90015ac6:	4450      	add	r0, sl
90015ac8:	f8bd a018 	ldrh.w	sl, [sp, #24]
90015acc:	bfb8      	it	lt
90015ace:	4696      	movlt	lr, r2
90015ad0:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90015ad4:	4452      	add	r2, sl
90015ad6:	b280      	uxth	r0, r0
90015ad8:	4299      	cmp	r1, r3
90015ada:	468c      	mov	ip, r1
90015adc:	b292      	uxth	r2, r2
90015ade:	9302      	str	r3, [sp, #8]
90015ae0:	bfb8      	it	lt
90015ae2:	469c      	movlt	ip, r3
90015ae4:	b203      	sxth	r3, r0
90015ae6:	fa0f fa82 	sxth.w	sl, r2
90015aea:	f8ad e01c 	strh.w	lr, [sp, #28]
90015aee:	f8ad c01e 	strh.w	ip, [sp, #30]
90015af2:	4553      	cmp	r3, sl
90015af4:	bfb8      	it	lt
90015af6:	4602      	movlt	r2, r0
90015af8:	9b02      	ldr	r3, [sp, #8]
90015afa:	eba2 020e 	sub.w	r2, r2, lr
90015afe:	f8ad 2020 	strh.w	r2, [sp, #32]
90015b02:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
90015b06:	4411      	add	r1, r2
90015b08:	f8bd 201a 	ldrh.w	r2, [sp, #26]
90015b0c:	4413      	add	r3, r2
90015b0e:	b289      	uxth	r1, r1
90015b10:	b29b      	uxth	r3, r3
90015b12:	b208      	sxth	r0, r1
90015b14:	b21a      	sxth	r2, r3
90015b16:	4290      	cmp	r0, r2
90015b18:	bfb8      	it	lt
90015b1a:	460b      	movlt	r3, r1
90015b1c:	eba3 030c 	sub.w	r3, r3, ip
90015b20:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90015b24:	a807      	add	r0, sp, #28
90015b26:	f7fa fb72 	bl	9001020e <_ZNK8touchgfx4Rect7isEmptyEv>
90015b2a:	b920      	cbnz	r0, 90015b36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
90015b2c:	6823      	ldr	r3, [r4, #0]
90015b2e:	a907      	add	r1, sp, #28
90015b30:	4620      	mov	r0, r4
90015b32:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90015b34:	4798      	blx	r3
90015b36:	3701      	adds	r7, #1
90015b38:	b2bf      	uxth	r7, r7
90015b3a:	e7a9      	b.n	90015a90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
90015b3c:	f8d9 0000 	ldr.w	r0, [r9]
90015b40:	2101      	movs	r1, #1
90015b42:	6803      	ldr	r3, [r0, #0]
90015b44:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
90015b48:	4798      	blx	r3
90015b4a:	e773      	b.n	90015a34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
90015b4c:	e9cd 0007 	strd	r0, r0, [sp, #28]
90015b50:	e7e8      	b.n	90015b24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
90015b52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90015b54:	4798      	blx	r3
90015b56:	4b3f      	ldr	r3, [pc, #252]	; (90015c54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
90015b58:	781b      	ldrb	r3, [r3, #0]
90015b5a:	2b00      	cmp	r3, #0
90015b5c:	f43f af2b 	beq.w	900159b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
90015b60:	2300      	movs	r3, #0
90015b62:	f104 00ee 	add.w	r0, r4, #238	; 0xee
90015b66:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
90015b6a:	882b      	ldrh	r3, [r5, #0]
90015b6c:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
90015b70:	42ab      	cmp	r3, r5
90015b72:	f4bf af20 	bcs.w	900159b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
90015b76:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
90015b7a:	2907      	cmp	r1, #7
90015b7c:	d814      	bhi.n	90015ba8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
90015b7e:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
90015b82:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
90015b86:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
90015b8a:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
90015b8e:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
90015b92:	1c4a      	adds	r2, r1, #1
90015b94:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
90015b98:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
90015b9c:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
90015ba0:	f8a2 c002 	strh.w	ip, [r2, #2]
90015ba4:	8097      	strh	r7, [r2, #4]
90015ba6:	80d6      	strh	r6, [r2, #6]
90015ba8:	3301      	adds	r3, #1
90015baa:	b29b      	uxth	r3, r3
90015bac:	e7e0      	b.n	90015b70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
90015bae:	2b02      	cmp	r3, #2
90015bb0:	f040 8133 	bne.w	90015e1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
90015bb4:	4b28      	ldr	r3, [pc, #160]	; (90015c58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
90015bb6:	f104 0aac 	add.w	sl, r4, #172	; 0xac
90015bba:	781b      	ldrb	r3, [r3, #0]
90015bbc:	2b01      	cmp	r3, #1
90015bbe:	f000 8098 	beq.w	90015cf2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90015bc2:	882a      	ldrh	r2, [r5, #0]
90015bc4:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
90015bc8:	3201      	adds	r2, #1
90015bca:	b292      	uxth	r2, r2
90015bcc:	2900      	cmp	r1, #0
90015bce:	d0c2      	beq.n	90015b56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90015bd0:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
90015bd4:	4694      	mov	ip, r2
90015bd6:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
90015bda:	f04f 0900 	mov.w	r9, #0
90015bde:	441e      	add	r6, r3
90015be0:	b236      	sxth	r6, r6
90015be2:	fa1f f38c 	uxth.w	r3, ip
90015be6:	ea4f 07c9 	mov.w	r7, r9, lsl #3
90015bea:	4299      	cmp	r1, r3
90015bec:	f240 80be 	bls.w	90015d6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
90015bf0:	4427      	add	r7, r4
90015bf2:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
90015bf6:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
90015bfa:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
90015bfe:	4283      	cmp	r3, r0
90015c00:	f340 80a0 	ble.w	90015d44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
90015c04:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
90015c08:	46e1      	mov	r9, ip
90015c0a:	4406      	add	r6, r0
90015c0c:	b236      	sxth	r6, r6
90015c0e:	429e      	cmp	r6, r3
90015c10:	bfa8      	it	ge
90015c12:	461e      	movge	r6, r3
90015c14:	f10c 0c01 	add.w	ip, ip, #1
90015c18:	e7e3      	b.n	90015be2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
90015c1a:	d10a      	bne.n	90015c32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
90015c1c:	4562      	cmp	r2, ip
90015c1e:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
90015c22:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
90015c26:	bfb8      	it	lt
90015c28:	4662      	movlt	r2, ip
90015c2a:	4288      	cmp	r0, r1
90015c2c:	bfb8      	it	lt
90015c2e:	461f      	movlt	r7, r3
90015c30:	e086      	b.n	90015d40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
90015c32:	428a      	cmp	r2, r1
90015c34:	bfb8      	it	lt
90015c36:	460a      	movlt	r2, r1
90015c38:	e082      	b.n	90015d40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
90015c3a:	bf00      	nop
90015c3c:	240235ec 	.word	0x240235ec
90015c40:	240235f8 	.word	0x240235f8
90015c44:	24000074 	.word	0x24000074
90015c48:	240235ac 	.word	0x240235ac
90015c4c:	240235a2 	.word	0x240235a2
90015c50:	240235a0 	.word	0x240235a0
90015c54:	240235aa 	.word	0x240235aa
90015c58:	240235a4 	.word	0x240235a4
90015c5c:	19a1      	adds	r1, r4, r6
90015c5e:	ab07      	add	r3, sp, #28
90015c60:	f851 0fac 	ldr.w	r0, [r1, #172]!
90015c64:	6849      	ldr	r1, [r1, #4]
90015c66:	c303      	stmia	r3!, {r0, r1}
90015c68:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
90015c6c:	a807      	add	r0, sp, #28
90015c6e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
90015c72:	2b13      	cmp	r3, #19
90015c74:	440b      	add	r3, r1
90015c76:	bfd8      	it	le
90015c78:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
90015c7c:	1a9b      	subs	r3, r3, r2
90015c7e:	f8ad 201c 	strh.w	r2, [sp, #28]
90015c82:	f8ad 3020 	strh.w	r3, [sp, #32]
90015c86:	f7fe ffe9 	bl	90014c5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90015c8a:	a807      	add	r0, sp, #28
90015c8c:	f7fa fabf 	bl	9001020e <_ZNK8touchgfx4Rect7isEmptyEv>
90015c90:	bb78      	cbnz	r0, 90015cf2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90015c92:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
90015c96:	4426      	add	r6, r4
90015c98:	f8d9 0000 	ldr.w	r0, [r9]
90015c9c:	f1bc 0f14 	cmp.w	ip, #20
90015ca0:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90015ca4:	f8d0 e000 	ldr.w	lr, [r0]
90015ca8:	bfa8      	it	ge
90015caa:	f04f 0c14 	movge.w	ip, #20
90015cae:	f8bd 201e 	ldrh.w	r2, [sp, #30]
90015cb2:	f8bd 101c 	ldrh.w	r1, [sp, #28]
90015cb6:	fa1f fc8c 	uxth.w	ip, ip
90015cba:	f8cd c000 	str.w	ip, [sp]
90015cbe:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
90015cc2:	47d8      	blx	fp
90015cc4:	4683      	mov	fp, r0
90015cc6:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
90015cca:	a807      	add	r0, sp, #28
90015ccc:	f7fe ffac 	bl	90014c28 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90015cd0:	6823      	ldr	r3, [r4, #0]
90015cd2:	4620      	mov	r0, r4
90015cd4:	a907      	add	r1, sp, #28
90015cd6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90015cd8:	4798      	blx	r3
90015cda:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
90015cde:	eba0 000b 	sub.w	r0, r0, fp
90015ce2:	b200      	sxth	r0, r0
90015ce4:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
90015ce8:	b918      	cbnz	r0, 90015cf2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90015cea:	b2b9      	uxth	r1, r7
90015cec:	4650      	mov	r0, sl
90015cee:	f7ff fa7b 	bl	900151e8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90015cf2:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
90015cf6:	f1bb 0f00 	cmp.w	fp, #0
90015cfa:	f43f af2c 	beq.w	90015b56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90015cfe:	882b      	ldrh	r3, [r5, #0]
90015d00:	2700      	movs	r7, #0
90015d02:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
90015d06:	3301      	adds	r3, #1
90015d08:	b29b      	uxth	r3, r3
90015d0a:	b299      	uxth	r1, r3
90015d0c:	00fe      	lsls	r6, r7, #3
90015d0e:	458b      	cmp	fp, r1
90015d10:	d9a4      	bls.n	90015c5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
90015d12:	4426      	add	r6, r4
90015d14:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
90015d18:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
90015d1c:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
90015d20:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
90015d24:	4408      	add	r0, r1
90015d26:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
90015d2a:	4461      	add	r1, ip
90015d2c:	b200      	sxth	r0, r0
90015d2e:	b209      	sxth	r1, r1
90015d30:	4288      	cmp	r0, r1
90015d32:	f6bf af72 	bge.w	90015c1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
90015d36:	4584      	cmp	ip, r0
90015d38:	4662      	mov	r2, ip
90015d3a:	461f      	mov	r7, r3
90015d3c:	bfb8      	it	lt
90015d3e:	4602      	movlt	r2, r0
90015d40:	3301      	adds	r3, #1
90015d42:	e7e2      	b.n	90015d0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
90015d44:	d10e      	bne.n	90015d64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
90015d46:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
90015d4a:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
90015d4e:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
90015d52:	4473      	add	r3, lr
90015d54:	b21b      	sxth	r3, r3
90015d56:	429e      	cmp	r6, r3
90015d58:	bfa8      	it	ge
90015d5a:	461e      	movge	r6, r3
90015d5c:	4287      	cmp	r7, r0
90015d5e:	bfb8      	it	lt
90015d60:	46e1      	movlt	r9, ip
90015d62:	e757      	b.n	90015c14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90015d64:	4286      	cmp	r6, r0
90015d66:	bfa8      	it	ge
90015d68:	4606      	movge	r6, r0
90015d6a:	e753      	b.n	90015c14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90015d6c:	eb0a 0007 	add.w	r0, sl, r7
90015d70:	4427      	add	r7, r4
90015d72:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
90015d76:	f1bb 0f13 	cmp.w	fp, #19
90015d7a:	bfdc      	itt	le
90015d7c:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
90015d80:	445e      	addle	r6, fp
90015d82:	e9cd 2102 	strd	r2, r1, [sp, #8]
90015d86:	bfd8      	it	le
90015d88:	b236      	sxthle	r6, r6
90015d8a:	f7fa fa40 	bl	9001020e <_ZNK8touchgfx4Rect7isEmptyEv>
90015d8e:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
90015d92:	2800      	cmp	r0, #0
90015d94:	f47f af1a 	bne.w	90015bcc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
90015d98:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
90015d9c:	fa1f fb8b 	uxth.w	fp, fp
90015da0:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
90015da4:	1ab6      	subs	r6, r6, r2
90015da6:	4829      	ldr	r0, [pc, #164]	; (90015e4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
90015da8:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
90015dac:	2e14      	cmp	r6, #20
90015dae:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
90015db2:	6800      	ldr	r0, [r0, #0]
90015db4:	bfa8      	it	ge
90015db6:	2614      	movge	r6, #20
90015db8:	f8ad 101c 	strh.w	r1, [sp, #28]
90015dbc:	f8ad 201e 	strh.w	r2, [sp, #30]
90015dc0:	b289      	uxth	r1, r1
90015dc2:	f8ad 3020 	strh.w	r3, [sp, #32]
90015dc6:	b2b6      	uxth	r6, r6
90015dc8:	f8d0 c000 	ldr.w	ip, [r0]
90015dcc:	b292      	uxth	r2, r2
90015dce:	455e      	cmp	r6, fp
90015dd0:	bf94      	ite	ls
90015dd2:	9600      	strls	r6, [sp, #0]
90015dd4:	f8cd b000 	strhi.w	fp, [sp]
90015dd8:	b29b      	uxth	r3, r3
90015dda:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
90015dde:	47b0      	blx	r6
90015de0:	6823      	ldr	r3, [r4, #0]
90015de2:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
90015de6:	a907      	add	r1, sp, #28
90015de8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90015dea:	4620      	mov	r0, r4
90015dec:	4798      	blx	r3
90015dee:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
90015df2:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
90015df6:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
90015dfa:	1a5b      	subs	r3, r3, r1
90015dfc:	440a      	add	r2, r1
90015dfe:	b21b      	sxth	r3, r3
90015e00:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
90015e04:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
90015e08:	2b00      	cmp	r3, #0
90015e0a:	f47f aeda 	bne.w	90015bc2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
90015e0e:	fa1f f189 	uxth.w	r1, r9
90015e12:	4650      	mov	r0, sl
90015e14:	f7ff f9e8 	bl	900151e8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90015e18:	e6d3      	b.n	90015bc2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
90015e1a:	882e      	ldrh	r6, [r5, #0]
90015e1c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
90015e20:	42b3      	cmp	r3, r6
90015e22:	f67f ae98 	bls.w	90015b56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90015e26:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
90015e2a:	ab07      	add	r3, sp, #28
90015e2c:	f852 0fac 	ldr.w	r0, [r2, #172]!
90015e30:	6851      	ldr	r1, [r2, #4]
90015e32:	c303      	stmia	r3!, {r0, r1}
90015e34:	a807      	add	r0, sp, #28
90015e36:	f7fa f9ea 	bl	9001020e <_ZNK8touchgfx4Rect7isEmptyEv>
90015e3a:	b920      	cbnz	r0, 90015e46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
90015e3c:	6823      	ldr	r3, [r4, #0]
90015e3e:	a907      	add	r1, sp, #28
90015e40:	4620      	mov	r0, r4
90015e42:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90015e44:	4798      	blx	r3
90015e46:	3601      	adds	r6, #1
90015e48:	b2b6      	uxth	r6, r6
90015e4a:	e7e7      	b.n	90015e1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
90015e4c:	240235ac 	.word	0x240235ac

90015e50 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
90015e50:	4b03      	ldr	r3, [pc, #12]	; (90015e60 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
90015e52:	2200      	movs	r2, #0
90015e54:	801a      	strh	r2, [r3, #0]
90015e56:	805a      	strh	r2, [r3, #2]
90015e58:	809a      	strh	r2, [r3, #4]
90015e5a:	80da      	strh	r2, [r3, #6]
90015e5c:	4770      	bx	lr
90015e5e:	bf00      	nop
90015e60:	240235f8 	.word	0x240235f8

90015e64 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
90015e64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015e68:	b09d      	sub	sp, #116	; 0x74
90015e6a:	4606      	mov	r6, r0
90015e6c:	4614      	mov	r4, r2
90015e6e:	468a      	mov	sl, r1
90015e70:	a803      	add	r0, sp, #12
90015e72:	461d      	mov	r5, r3
90015e74:	f000 fe5b 	bl	90016b2e <_ZN8touchgfx12TextProviderC1Ev>
90015e78:	6833      	ldr	r3, [r6, #0]
90015e7a:	4630      	mov	r0, r6
90015e7c:	f242 0b0b 	movw	fp, #8203	; 0x200b
90015e80:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90015e82:	4798      	blx	r3
90015e84:	6833      	ldr	r3, [r6, #0]
90015e86:	4607      	mov	r7, r0
90015e88:	4630      	mov	r0, r6
90015e8a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90015e8c:	4798      	blx	r3
90015e8e:	462a      	mov	r2, r5
90015e90:	2500      	movs	r5, #0
90015e92:	4621      	mov	r1, r4
90015e94:	9000      	str	r0, [sp, #0]
90015e96:	463b      	mov	r3, r7
90015e98:	462c      	mov	r4, r5
90015e9a:	46a9      	mov	r9, r5
90015e9c:	46a8      	mov	r8, r5
90015e9e:	a803      	add	r0, sp, #12
90015ea0:	f000 fea0 	bl	90016be4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90015ea4:	2300      	movs	r3, #0
90015ea6:	9302      	str	r3, [sp, #8]
90015ea8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90015eac:	429c      	cmp	r4, r3
90015eae:	d002      	beq.n	90015eb6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
90015eb0:	455c      	cmp	r4, fp
90015eb2:	bf18      	it	ne
90015eb4:	4625      	movne	r5, r4
90015eb6:	ab02      	add	r3, sp, #8
90015eb8:	4632      	mov	r2, r6
90015eba:	4651      	mov	r1, sl
90015ebc:	a803      	add	r0, sp, #12
90015ebe:	f001 f997 	bl	900171f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90015ec2:	4604      	mov	r4, r0
90015ec4:	b108      	cbz	r0, 90015eca <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
90015ec6:	280a      	cmp	r0, #10
90015ec8:	d10a      	bne.n	90015ee0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
90015eca:	45c1      	cmp	r9, r8
90015ecc:	bf38      	it	cc
90015ece:	46c1      	movcc	r9, r8
90015ed0:	f04f 0800 	mov.w	r8, #0
90015ed4:	2c00      	cmp	r4, #0
90015ed6:	d1e5      	bne.n	90015ea4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90015ed8:	4648      	mov	r0, r9
90015eda:	b01d      	add	sp, #116	; 0x74
90015edc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015ee0:	9a02      	ldr	r2, [sp, #8]
90015ee2:	2a00      	cmp	r2, #0
90015ee4:	d0de      	beq.n	90015ea4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90015ee6:	7b57      	ldrb	r7, [r2, #13]
90015ee8:	4629      	mov	r1, r5
90015eea:	6833      	ldr	r3, [r6, #0]
90015eec:	007f      	lsls	r7, r7, #1
90015eee:	8894      	ldrh	r4, [r2, #4]
90015ef0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90015ef2:	f407 7080 	and.w	r0, r7, #256	; 0x100
90015ef6:	7a97      	ldrb	r7, [r2, #10]
90015ef8:	4307      	orrs	r7, r0
90015efa:	4630      	mov	r0, r6
90015efc:	4798      	blx	r3
90015efe:	4438      	add	r0, r7
90015f00:	4480      	add	r8, r0
90015f02:	fa1f f888 	uxth.w	r8, r8
90015f06:	e7e5      	b.n	90015ed4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

90015f08 <_ZNK8touchgfx4Font12getCharWidthEt>:
90015f08:	b508      	push	{r3, lr}
90015f0a:	6803      	ldr	r3, [r0, #0]
90015f0c:	68db      	ldr	r3, [r3, #12]
90015f0e:	4798      	blx	r3
90015f10:	b128      	cbz	r0, 90015f1e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
90015f12:	7b43      	ldrb	r3, [r0, #13]
90015f14:	7a80      	ldrb	r0, [r0, #10]
90015f16:	005b      	lsls	r3, r3, #1
90015f18:	f403 7380 	and.w	r3, r3, #256	; 0x100
90015f1c:	4318      	orrs	r0, r3
90015f1e:	bd08      	pop	{r3, pc}

90015f20 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
90015f20:	b40e      	push	{r1, r2, r3}
90015f22:	b5f0      	push	{r4, r5, r6, r7, lr}
90015f24:	b09e      	sub	sp, #120	; 0x78
90015f26:	4605      	mov	r5, r0
90015f28:	ab23      	add	r3, sp, #140	; 0x8c
90015f2a:	a805      	add	r0, sp, #20
90015f2c:	f853 4b04 	ldr.w	r4, [r3], #4
90015f30:	9303      	str	r3, [sp, #12]
90015f32:	f000 fdfc 	bl	90016b2e <_ZN8touchgfx12TextProviderC1Ev>
90015f36:	682b      	ldr	r3, [r5, #0]
90015f38:	4628      	mov	r0, r5
90015f3a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90015f3c:	4798      	blx	r3
90015f3e:	682b      	ldr	r3, [r5, #0]
90015f40:	4606      	mov	r6, r0
90015f42:	4628      	mov	r0, r5
90015f44:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90015f46:	4798      	blx	r3
90015f48:	4633      	mov	r3, r6
90015f4a:	4621      	mov	r1, r4
90015f4c:	ae1e      	add	r6, sp, #120	; 0x78
90015f4e:	2400      	movs	r4, #0
90015f50:	9000      	str	r0, [sp, #0]
90015f52:	9a03      	ldr	r2, [sp, #12]
90015f54:	a805      	add	r0, sp, #20
90015f56:	f000 fe45 	bl	90016be4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90015f5a:	f846 4d68 	str.w	r4, [r6, #-104]!
90015f5e:	462a      	mov	r2, r5
90015f60:	4633      	mov	r3, r6
90015f62:	4621      	mov	r1, r4
90015f64:	a805      	add	r0, sp, #20
90015f66:	f001 f943 	bl	900171f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90015f6a:	b300      	cbz	r0, 90015fae <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
90015f6c:	280a      	cmp	r0, #10
90015f6e:	d01a      	beq.n	90015fa6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
90015f70:	9f04      	ldr	r7, [sp, #16]
90015f72:	b1c7      	cbz	r7, 90015fa6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
90015f74:	7b78      	ldrb	r0, [r7, #13]
90015f76:	7a3b      	ldrb	r3, [r7, #8]
90015f78:	00c1      	lsls	r1, r0, #3
90015f7a:	88ea      	ldrh	r2, [r5, #6]
90015f7c:	f401 7180 	and.w	r1, r1, #256	; 0x100
90015f80:	4319      	orrs	r1, r3
90015f82:	0643      	lsls	r3, r0, #25
90015f84:	ea4f 1000 	mov.w	r0, r0, lsl #4
90015f88:	bf48      	it	mi
90015f8a:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
90015f8e:	f400 7080 	and.w	r0, r0, #256	; 0x100
90015f92:	bf48      	it	mi
90015f94:	b219      	sxthmi	r1, r3
90015f96:	79fb      	ldrb	r3, [r7, #7]
90015f98:	4303      	orrs	r3, r0
90015f9a:	4413      	add	r3, r2
90015f9c:	1a5b      	subs	r3, r3, r1
90015f9e:	b21b      	sxth	r3, r3
90015fa0:	429c      	cmp	r4, r3
90015fa2:	bfb8      	it	lt
90015fa4:	461c      	movlt	r4, r3
90015fa6:	4633      	mov	r3, r6
90015fa8:	462a      	mov	r2, r5
90015faa:	2100      	movs	r1, #0
90015fac:	e7da      	b.n	90015f64 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
90015fae:	b2a0      	uxth	r0, r4
90015fb0:	b01e      	add	sp, #120	; 0x78
90015fb2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
90015fb6:	b003      	add	sp, #12
90015fb8:	4770      	bx	lr

90015fba <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
90015fba:	7a43      	ldrb	r3, [r0, #9]
90015fbc:	8880      	ldrh	r0, [r0, #4]
90015fbe:	4418      	add	r0, r3
90015fc0:	b280      	uxth	r0, r0
90015fc2:	4770      	bx	lr

90015fc4 <_ZNK8touchgfx4Font13getFontHeightEv>:
90015fc4:	6803      	ldr	r3, [r0, #0]
90015fc6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90015fc8:	4718      	bx	r3

90015fca <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
90015fca:	b40e      	push	{r1, r2, r3}
90015fcc:	b570      	push	{r4, r5, r6, lr}
90015fce:	b09d      	sub	sp, #116	; 0x74
90015fd0:	4604      	mov	r4, r0
90015fd2:	ab21      	add	r3, sp, #132	; 0x84
90015fd4:	a803      	add	r0, sp, #12
90015fd6:	f853 5b04 	ldr.w	r5, [r3], #4
90015fda:	9302      	str	r3, [sp, #8]
90015fdc:	f000 fda7 	bl	90016b2e <_ZN8touchgfx12TextProviderC1Ev>
90015fe0:	6823      	ldr	r3, [r4, #0]
90015fe2:	4620      	mov	r0, r4
90015fe4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90015fe6:	4798      	blx	r3
90015fe8:	6823      	ldr	r3, [r4, #0]
90015fea:	4606      	mov	r6, r0
90015fec:	4620      	mov	r0, r4
90015fee:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90015ff0:	2401      	movs	r4, #1
90015ff2:	4798      	blx	r3
90015ff4:	4633      	mov	r3, r6
90015ff6:	9000      	str	r0, [sp, #0]
90015ff8:	4629      	mov	r1, r5
90015ffa:	9a02      	ldr	r2, [sp, #8]
90015ffc:	a803      	add	r0, sp, #12
90015ffe:	f000 fdf1 	bl	90016be4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90016002:	a803      	add	r0, sp, #12
90016004:	f001 f9c0 	bl	90017388 <_ZN8touchgfx12TextProvider11getNextCharEv>
90016008:	b2a3      	uxth	r3, r4
9001600a:	b138      	cbz	r0, 9001601c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
9001600c:	280a      	cmp	r0, #10
9001600e:	a803      	add	r0, sp, #12
90016010:	bf04      	itt	eq
90016012:	3301      	addeq	r3, #1
90016014:	b21c      	sxtheq	r4, r3
90016016:	f001 f9b7 	bl	90017388 <_ZN8touchgfx12TextProvider11getNextCharEv>
9001601a:	e7f5      	b.n	90016008 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
9001601c:	4618      	mov	r0, r3
9001601e:	b01d      	add	sp, #116	; 0x74
90016020:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016024:	b003      	add	sp, #12
90016026:	4770      	bx	lr

90016028 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
90016028:	b40e      	push	{r1, r2, r3}
9001602a:	b5f0      	push	{r4, r5, r6, r7, lr}
9001602c:	b09e      	sub	sp, #120	; 0x78
9001602e:	4604      	mov	r4, r0
90016030:	ab23      	add	r3, sp, #140	; 0x8c
90016032:	a805      	add	r0, sp, #20
90016034:	f853 5b04 	ldr.w	r5, [r3], #4
90016038:	9303      	str	r3, [sp, #12]
9001603a:	f000 fd78 	bl	90016b2e <_ZN8touchgfx12TextProviderC1Ev>
9001603e:	6823      	ldr	r3, [r4, #0]
90016040:	4620      	mov	r0, r4
90016042:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90016044:	4798      	blx	r3
90016046:	6823      	ldr	r3, [r4, #0]
90016048:	4606      	mov	r6, r0
9001604a:	4620      	mov	r0, r4
9001604c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
9001604e:	4798      	blx	r3
90016050:	4633      	mov	r3, r6
90016052:	4629      	mov	r1, r5
90016054:	9000      	str	r0, [sp, #0]
90016056:	9a03      	ldr	r2, [sp, #12]
90016058:	a805      	add	r0, sp, #20
9001605a:	f000 fdc3 	bl	90016be4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001605e:	ad1e      	add	r5, sp, #120	; 0x78
90016060:	2100      	movs	r1, #0
90016062:	f647 76ff 	movw	r6, #32767	; 0x7fff
90016066:	4622      	mov	r2, r4
90016068:	a805      	add	r0, sp, #20
9001606a:	f845 1d68 	str.w	r1, [r5, #-104]!
9001606e:	462b      	mov	r3, r5
90016070:	f001 f8be 	bl	900171f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90016074:	b1d8      	cbz	r0, 900160ae <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
90016076:	280a      	cmp	r0, #10
90016078:	d012      	beq.n	900160a0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
9001607a:	9804      	ldr	r0, [sp, #16]
9001607c:	b180      	cbz	r0, 900160a0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
9001607e:	7b47      	ldrb	r7, [r0, #13]
90016080:	88e2      	ldrh	r2, [r4, #6]
90016082:	00fb      	lsls	r3, r7, #3
90016084:	f403 7180 	and.w	r1, r3, #256	; 0x100
90016088:	7a03      	ldrb	r3, [r0, #8]
9001608a:	430b      	orrs	r3, r1
9001608c:	0679      	lsls	r1, r7, #25
9001608e:	bf44      	itt	mi
90016090:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90016094:	b21b      	sxthmi	r3, r3
90016096:	1ad3      	subs	r3, r2, r3
90016098:	b21b      	sxth	r3, r3
9001609a:	429e      	cmp	r6, r3
9001609c:	bfa8      	it	ge
9001609e:	461e      	movge	r6, r3
900160a0:	462b      	mov	r3, r5
900160a2:	4622      	mov	r2, r4
900160a4:	2100      	movs	r1, #0
900160a6:	a805      	add	r0, sp, #20
900160a8:	f001 f8a2 	bl	900171f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900160ac:	e7e2      	b.n	90016074 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
900160ae:	4630      	mov	r0, r6
900160b0:	b01e      	add	sp, #120	; 0x78
900160b2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
900160b6:	b003      	add	sp, #12
900160b8:	4770      	bx	lr

900160ba <_ZNK8touchgfx8Drawable10invalidateEv>:
900160ba:	b513      	push	{r0, r1, r4, lr}
900160bc:	6803      	ldr	r3, [r0, #0]
900160be:	2400      	movs	r4, #0
900160c0:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
900160c4:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900160c8:	f8ad 1004 	strh.w	r1, [sp, #4]
900160cc:	4669      	mov	r1, sp
900160ce:	691b      	ldr	r3, [r3, #16]
900160d0:	9400      	str	r4, [sp, #0]
900160d2:	f8ad 2006 	strh.w	r2, [sp, #6]
900160d6:	4798      	blx	r3
900160d8:	b002      	add	sp, #8
900160da:	bd10      	pop	{r4, pc}

900160dc <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
900160dc:	b538      	push	{r3, r4, r5, lr}
900160de:	680b      	ldr	r3, [r1, #0]
900160e0:	460c      	mov	r4, r1
900160e2:	4605      	mov	r5, r0
900160e4:	68db      	ldr	r3, [r3, #12]
900160e6:	4798      	blx	r3
900160e8:	6823      	ldr	r3, [r4, #0]
900160ea:	4620      	mov	r0, r4
900160ec:	4629      	mov	r1, r5
900160ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900160f0:	4798      	blx	r3
900160f2:	4628      	mov	r0, r5
900160f4:	bd38      	pop	{r3, r4, r5, pc}

900160f6 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
900160f6:	b410      	push	{r4}
900160f8:	880a      	ldrh	r2, [r1, #0]
900160fa:	8884      	ldrh	r4, [r0, #4]
900160fc:	4422      	add	r2, r4
900160fe:	800a      	strh	r2, [r1, #0]
90016100:	884a      	ldrh	r2, [r1, #2]
90016102:	88c4      	ldrh	r4, [r0, #6]
90016104:	4422      	add	r2, r4
90016106:	804a      	strh	r2, [r1, #2]
90016108:	6940      	ldr	r0, [r0, #20]
9001610a:	b120      	cbz	r0, 90016116 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
9001610c:	6803      	ldr	r3, [r0, #0]
9001610e:	f85d 4b04 	ldr.w	r4, [sp], #4
90016112:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90016114:	4718      	bx	r3
90016116:	f85d 4b04 	ldr.w	r4, [sp], #4
9001611a:	4770      	bx	lr

9001611c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
9001611c:	b570      	push	{r4, r5, r6, lr}
9001611e:	8882      	ldrh	r2, [r0, #4]
90016120:	460c      	mov	r4, r1
90016122:	880b      	ldrh	r3, [r1, #0]
90016124:	4605      	mov	r5, r0
90016126:	4413      	add	r3, r2
90016128:	800b      	strh	r3, [r1, #0]
9001612a:	884b      	ldrh	r3, [r1, #2]
9001612c:	88c2      	ldrh	r2, [r0, #6]
9001612e:	4413      	add	r3, r2
90016130:	804b      	strh	r3, [r1, #2]
90016132:	1d01      	adds	r1, r0, #4
90016134:	4620      	mov	r0, r4
90016136:	f7fa f827 	bl	90010188 <_ZN8touchgfx4RectaNERKS0_>
9001613a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9001613e:	2b00      	cmp	r3, #0
90016140:	dd0b      	ble.n	9001615a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90016142:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90016146:	2b00      	cmp	r3, #0
90016148:	dd07      	ble.n	9001615a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001614a:	6968      	ldr	r0, [r5, #20]
9001614c:	b128      	cbz	r0, 9001615a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001614e:	6803      	ldr	r3, [r0, #0]
90016150:	4621      	mov	r1, r4
90016152:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90016154:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016158:	4718      	bx	r3
9001615a:	bd70      	pop	{r4, r5, r6, pc}

9001615c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
9001615c:	b570      	push	{r4, r5, r6, lr}
9001615e:	8882      	ldrh	r2, [r0, #4]
90016160:	460c      	mov	r4, r1
90016162:	880b      	ldrh	r3, [r1, #0]
90016164:	4605      	mov	r5, r0
90016166:	4413      	add	r3, r2
90016168:	800b      	strh	r3, [r1, #0]
9001616a:	884b      	ldrh	r3, [r1, #2]
9001616c:	88c2      	ldrh	r2, [r0, #6]
9001616e:	4413      	add	r3, r2
90016170:	804b      	strh	r3, [r1, #2]
90016172:	1d01      	adds	r1, r0, #4
90016174:	4620      	mov	r0, r4
90016176:	f7fa f807 	bl	90010188 <_ZN8touchgfx4RectaNERKS0_>
9001617a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9001617e:	2b00      	cmp	r3, #0
90016180:	dd19      	ble.n	900161b6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90016182:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90016186:	2b00      	cmp	r3, #0
90016188:	dd15      	ble.n	900161b6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
9001618a:	6968      	ldr	r0, [r5, #20]
9001618c:	b128      	cbz	r0, 9001619a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
9001618e:	6803      	ldr	r3, [r0, #0]
90016190:	4621      	mov	r1, r4
90016192:	691b      	ldr	r3, [r3, #16]
90016194:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016198:	4718      	bx	r3
9001619a:	4b07      	ldr	r3, [pc, #28]	; (900161b8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
9001619c:	681b      	ldr	r3, [r3, #0]
9001619e:	3304      	adds	r3, #4
900161a0:	429d      	cmp	r5, r3
900161a2:	d108      	bne.n	900161b6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
900161a4:	f7fe ff10 	bl	90014fc8 <_ZN8touchgfx11Application11getInstanceEv>
900161a8:	6803      	ldr	r3, [r0, #0]
900161aa:	6821      	ldr	r1, [r4, #0]
900161ac:	6862      	ldr	r2, [r4, #4]
900161ae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
900161b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900161b4:	4718      	bx	r3
900161b6:	bd70      	pop	{r4, r5, r6, pc}
900161b8:	240235f0 	.word	0x240235f0

900161bc <_ZN8touchgfx8Drawable12moveRelativeEss>:
900161bc:	b570      	push	{r4, r5, r6, lr}
900161be:	4604      	mov	r4, r0
900161c0:	4616      	mov	r6, r2
900161c2:	460d      	mov	r5, r1
900161c4:	b901      	cbnz	r1, 900161c8 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
900161c6:	b192      	cbz	r2, 900161ee <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
900161c8:	6823      	ldr	r3, [r4, #0]
900161ca:	4620      	mov	r0, r4
900161cc:	699b      	ldr	r3, [r3, #24]
900161ce:	4798      	blx	r3
900161d0:	88e2      	ldrh	r2, [r4, #6]
900161d2:	88a1      	ldrh	r1, [r4, #4]
900161d4:	4620      	mov	r0, r4
900161d6:	4432      	add	r2, r6
900161d8:	4429      	add	r1, r5
900161da:	b212      	sxth	r2, r2
900161dc:	b209      	sxth	r1, r1
900161de:	f7fa faa9 	bl	90010734 <_ZN8touchgfx8Drawable5setXYEss>
900161e2:	6823      	ldr	r3, [r4, #0]
900161e4:	4620      	mov	r0, r4
900161e6:	699b      	ldr	r3, [r3, #24]
900161e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900161ec:	4718      	bx	r3
900161ee:	bd70      	pop	{r4, r5, r6, pc}

900161f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
900161f0:	b510      	push	{r4, lr}
900161f2:	2300      	movs	r3, #0
900161f4:	4604      	mov	r4, r0
900161f6:	4608      	mov	r0, r1
900161f8:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
900161fc:	8023      	strh	r3, [r4, #0]
900161fe:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90016202:	8063      	strh	r3, [r4, #2]
90016204:	6803      	ldr	r3, [r0, #0]
90016206:	80a1      	strh	r1, [r4, #4]
90016208:	4621      	mov	r1, r4
9001620a:	80e2      	strh	r2, [r4, #6]
9001620c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001620e:	4798      	blx	r3
90016210:	4620      	mov	r0, r4
90016212:	bd10      	pop	{r4, pc}

90016214 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
90016214:	b530      	push	{r4, r5, lr}
90016216:	8083      	strh	r3, [r0, #4]
90016218:	f8bd 300c 	ldrh.w	r3, [sp, #12]
9001621c:	f89d 5018 	ldrb.w	r5, [sp, #24]
90016220:	80c3      	strh	r3, [r0, #6]
90016222:	f89d 3010 	ldrb.w	r3, [sp, #16]
90016226:	6141      	str	r1, [r0, #20]
90016228:	7203      	strb	r3, [r0, #8]
9001622a:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001622e:	8302      	strh	r2, [r0, #24]
90016230:	7243      	strb	r3, [r0, #9]
90016232:	7a83      	ldrb	r3, [r0, #10]
90016234:	f365 0306 	bfi	r3, r5, #0, #7
90016238:	f89d 501c 	ldrb.w	r5, [sp, #28]
9001623c:	f365 13c7 	bfi	r3, r5, #7, #1
90016240:	7283      	strb	r3, [r0, #10]
90016242:	f89d 3020 	ldrb.w	r3, [sp, #32]
90016246:	72c3      	strb	r3, [r0, #11]
90016248:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
9001624c:	7303      	strb	r3, [r0, #12]
9001624e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
90016252:	81c3      	strh	r3, [r0, #14]
90016254:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
90016258:	8203      	strh	r3, [r0, #16]
9001625a:	4b01      	ldr	r3, [pc, #4]	; (90016260 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
9001625c:	6003      	str	r3, [r0, #0]
9001625e:	bd30      	pop	{r4, r5, pc}
90016260:	9002a894 	.word	0x9002a894

90016264 <_ZNK8touchgfx9ConstFont4findEt>:
90016264:	b5f0      	push	{r4, r5, r6, r7, lr}
90016266:	6944      	ldr	r4, [r0, #20]
90016268:	b3bc      	cbz	r4, 900162da <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001626a:	88a3      	ldrh	r3, [r4, #4]
9001626c:	8b02      	ldrh	r2, [r0, #24]
9001626e:	1acb      	subs	r3, r1, r3
90016270:	f102 32ff 	add.w	r2, r2, #4294967295
90016274:	d431      	bmi.n	900162da <_ZNK8touchgfx9ConstFont4findEt+0x76>
90016276:	4293      	cmp	r3, r2
90016278:	dd0c      	ble.n	90016294 <_ZNK8touchgfx9ConstFont4findEt+0x30>
9001627a:	230e      	movs	r3, #14
9001627c:	fb03 4302 	mla	r3, r3, r2, r4
90016280:	889b      	ldrh	r3, [r3, #4]
90016282:	1a5b      	subs	r3, r3, r1
90016284:	1ad3      	subs	r3, r2, r3
90016286:	429a      	cmp	r2, r3
90016288:	db27      	blt.n	900162da <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001628a:	2b00      	cmp	r3, #0
9001628c:	bfbc      	itt	lt
9001628e:	2302      	movlt	r3, #2
90016290:	fb92 f3f3 	sdivlt	r3, r2, r3
90016294:	2500      	movs	r5, #0
90016296:	260e      	movs	r6, #14
90016298:	4295      	cmp	r5, r2
9001629a:	dc1e      	bgt.n	900162da <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001629c:	fb06 4003 	mla	r0, r6, r3, r4
900162a0:	8887      	ldrh	r7, [r0, #4]
900162a2:	42b9      	cmp	r1, r7
900162a4:	d01a      	beq.n	900162dc <_ZNK8touchgfx9ConstFont4findEt+0x78>
900162a6:	d20d      	bcs.n	900162c4 <_ZNK8touchgfx9ConstFont4findEt+0x60>
900162a8:	1e5a      	subs	r2, r3, #1
900162aa:	4295      	cmp	r5, r2
900162ac:	dc15      	bgt.n	900162da <_ZNK8touchgfx9ConstFont4findEt+0x76>
900162ae:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
900162b2:	1a5b      	subs	r3, r3, r1
900162b4:	1ad3      	subs	r3, r2, r3
900162b6:	429a      	cmp	r2, r3
900162b8:	db0f      	blt.n	900162da <_ZNK8touchgfx9ConstFont4findEt+0x76>
900162ba:	429d      	cmp	r5, r3
900162bc:	ddec      	ble.n	90016298 <_ZNK8touchgfx9ConstFont4findEt+0x34>
900162be:	1953      	adds	r3, r2, r5
900162c0:	105b      	asrs	r3, r3, #1
900162c2:	e7e9      	b.n	90016298 <_ZNK8touchgfx9ConstFont4findEt+0x34>
900162c4:	1c5d      	adds	r5, r3, #1
900162c6:	42aa      	cmp	r2, r5
900162c8:	db07      	blt.n	900162da <_ZNK8touchgfx9ConstFont4findEt+0x76>
900162ca:	8a43      	ldrh	r3, [r0, #18]
900162cc:	1acb      	subs	r3, r1, r3
900162ce:	442b      	add	r3, r5
900162d0:	429d      	cmp	r5, r3
900162d2:	dc02      	bgt.n	900162da <_ZNK8touchgfx9ConstFont4findEt+0x76>
900162d4:	429a      	cmp	r2, r3
900162d6:	dadf      	bge.n	90016298 <_ZNK8touchgfx9ConstFont4findEt+0x34>
900162d8:	e7f1      	b.n	900162be <_ZNK8touchgfx9ConstFont4findEt+0x5a>
900162da:	2000      	movs	r0, #0
900162dc:	bdf0      	pop	{r4, r5, r6, r7, pc}

900162de <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
900162de:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900162e0:	4604      	mov	r4, r0
900162e2:	4617      	mov	r7, r2
900162e4:	461e      	mov	r6, r3
900162e6:	b911      	cbnz	r1, 900162ee <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
900162e8:	2500      	movs	r5, #0
900162ea:	4628      	mov	r0, r5
900162ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900162ee:	290a      	cmp	r1, #10
900162f0:	d0fa      	beq.n	900162e8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
900162f2:	f64f 62ff 	movw	r2, #65279	; 0xfeff
900162f6:	4291      	cmp	r1, r2
900162f8:	d0f6      	beq.n	900162e8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
900162fa:	f242 020b 	movw	r2, #8203	; 0x200b
900162fe:	4291      	cmp	r1, r2
90016300:	d0f2      	beq.n	900162e8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90016302:	f7ff ffaf 	bl	90016264 <_ZNK8touchgfx9ConstFont4findEt>
90016306:	4605      	mov	r5, r0
90016308:	b950      	cbnz	r0, 90016320 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
9001630a:	6823      	ldr	r3, [r4, #0]
9001630c:	4620      	mov	r0, r4
9001630e:	691b      	ldr	r3, [r3, #16]
90016310:	4798      	blx	r3
90016312:	4601      	mov	r1, r0
90016314:	4620      	mov	r0, r4
90016316:	f7ff ffa5 	bl	90016264 <_ZNK8touchgfx9ConstFont4findEt>
9001631a:	4605      	mov	r5, r0
9001631c:	2800      	cmp	r0, #0
9001631e:	d0e3      	beq.n	900162e8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90016320:	6823      	ldr	r3, [r4, #0]
90016322:	4629      	mov	r1, r5
90016324:	4620      	mov	r0, r4
90016326:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
90016328:	4798      	blx	r3
9001632a:	6038      	str	r0, [r7, #0]
9001632c:	6823      	ldr	r3, [r4, #0]
9001632e:	4620      	mov	r0, r4
90016330:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90016332:	4798      	blx	r3
90016334:	7030      	strb	r0, [r6, #0]
90016336:	e7d8      	b.n	900162ea <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

90016338 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
90016338:	b538      	push	{r3, r4, r5, lr}
9001633a:	4605      	mov	r5, r0
9001633c:	f002 f8f4 	bl	90018528 <_ZNK8touchgfx6Bitmap9getFormatEv>
90016340:	4604      	mov	r4, r0
90016342:	4628      	mov	r0, r5
90016344:	f002 f834 	bl	900183b0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90016348:	2800      	cmp	r0, #0
9001634a:	bf14      	ite	ne
9001634c:	2002      	movne	r0, #2
9001634e:	2000      	moveq	r0, #0
90016350:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
90016354:	b280      	uxth	r0, r0
90016356:	bd38      	pop	{r3, r4, r5, pc}

90016358 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
90016358:	b538      	push	{r3, r4, r5, lr}
9001635a:	4605      	mov	r5, r0
9001635c:	f002 f8e4 	bl	90018528 <_ZNK8touchgfx6Bitmap9getFormatEv>
90016360:	4604      	mov	r4, r0
90016362:	4628      	mov	r0, r5
90016364:	f002 f824 	bl	900183b0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90016368:	2800      	cmp	r0, #0
9001636a:	bf14      	ite	ne
9001636c:	2002      	movne	r0, #2
9001636e:	2000      	moveq	r0, #0
90016370:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
90016374:	f040 0001 	orr.w	r0, r0, #1
90016378:	b280      	uxth	r0, r0
9001637a:	bd38      	pop	{r3, r4, r5, pc}

9001637c <_ZN8touchgfx4clzuEm>:
9001637c:	4603      	mov	r3, r0
9001637e:	b1c8      	cbz	r0, 900163b4 <_ZN8touchgfx4clzuEm+0x38>
90016380:	0c02      	lsrs	r2, r0, #16
90016382:	0412      	lsls	r2, r2, #16
90016384:	b9a2      	cbnz	r2, 900163b0 <_ZN8touchgfx4clzuEm+0x34>
90016386:	0403      	lsls	r3, r0, #16
90016388:	2010      	movs	r0, #16
9001638a:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
9001638e:	bf04      	itt	eq
90016390:	021b      	lsleq	r3, r3, #8
90016392:	3008      	addeq	r0, #8
90016394:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
90016398:	bf04      	itt	eq
9001639a:	011b      	lsleq	r3, r3, #4
9001639c:	3004      	addeq	r0, #4
9001639e:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
900163a2:	bf04      	itt	eq
900163a4:	009b      	lsleq	r3, r3, #2
900163a6:	3002      	addeq	r0, #2
900163a8:	2b00      	cmp	r3, #0
900163aa:	db04      	blt.n	900163b6 <_ZN8touchgfx4clzuEm+0x3a>
900163ac:	3001      	adds	r0, #1
900163ae:	4770      	bx	lr
900163b0:	2000      	movs	r0, #0
900163b2:	e7ea      	b.n	9001638a <_ZN8touchgfx4clzuEm+0xe>
900163b4:	2020      	movs	r0, #32
900163b6:	4770      	bx	lr

900163b8 <_ZN8touchgfx7muldivuEmmmRm>:
900163b8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
900163bc:	460f      	mov	r7, r1
900163be:	4615      	mov	r5, r2
900163c0:	461e      	mov	r6, r3
900163c2:	4601      	mov	r1, r0
900163c4:	b100      	cbz	r0, 900163c8 <_ZN8touchgfx7muldivuEmmmRm+0x10>
900163c6:	b927      	cbnz	r7, 900163d2 <_ZN8touchgfx7muldivuEmmmRm+0x1a>
900163c8:	2000      	movs	r0, #0
900163ca:	6030      	str	r0, [r6, #0]
900163cc:	b002      	add	sp, #8
900163ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900163d2:	f7ff ffd3 	bl	9001637c <_ZN8touchgfx4clzuEm>
900163d6:	b980      	cbnz	r0, 900163fa <_ZN8touchgfx7muldivuEmmmRm+0x42>
900163d8:	4638      	mov	r0, r7
900163da:	f7ff ffcf 	bl	9001637c <_ZN8touchgfx4clzuEm>
900163de:	2800      	cmp	r0, #0
900163e0:	dd05      	ble.n	900163ee <_ZN8touchgfx7muldivuEmmmRm+0x36>
900163e2:	4633      	mov	r3, r6
900163e4:	462a      	mov	r2, r5
900163e6:	4638      	mov	r0, r7
900163e8:	f7ff ffe6 	bl	900163b8 <_ZN8touchgfx7muldivuEmmmRm>
900163ec:	e7ee      	b.n	900163cc <_ZN8touchgfx7muldivuEmmmRm+0x14>
900163ee:	f04f 33ff 	mov.w	r3, #4294967295
900163f2:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
900163f6:	6033      	str	r3, [r6, #0]
900163f8:	e7e8      	b.n	900163cc <_ZN8touchgfx7muldivuEmmmRm+0x14>
900163fa:	fa37 f800 	lsrs.w	r8, r7, r0
900163fe:	fb07 f301 	mul.w	r3, r7, r1
90016402:	d105      	bne.n	90016410 <_ZN8touchgfx7muldivuEmmmRm+0x58>
90016404:	fbb3 f0f5 	udiv	r0, r3, r5
90016408:	fb05 3510 	mls	r5, r5, r0, r3
9001640c:	6035      	str	r5, [r6, #0]
9001640e:	e7dd      	b.n	900163cc <_ZN8touchgfx7muldivuEmmmRm+0x14>
90016410:	2301      	movs	r3, #1
90016412:	fa01 fa00 	lsl.w	sl, r1, r0
90016416:	462a      	mov	r2, r5
90016418:	fa03 f000 	lsl.w	r0, r3, r0
9001641c:	4633      	mov	r3, r6
9001641e:	fbba f9f5 	udiv	r9, sl, r5
90016422:	3801      	subs	r0, #1
90016424:	fb08 f409 	mul.w	r4, r8, r9
90016428:	4038      	ands	r0, r7
9001642a:	f7ff ffc5 	bl	900163b8 <_ZN8touchgfx7muldivuEmmmRm>
9001642e:	462a      	mov	r2, r5
90016430:	4607      	mov	r7, r0
90016432:	ab01      	add	r3, sp, #4
90016434:	fb05 a119 	mls	r1, r5, r9, sl
90016438:	4640      	mov	r0, r8
9001643a:	f7ff ffbd 	bl	900163b8 <_ZN8touchgfx7muldivuEmmmRm>
9001643e:	9b01      	ldr	r3, [sp, #4]
90016440:	6832      	ldr	r2, [r6, #0]
90016442:	441a      	add	r2, r3
90016444:	fbb2 f3f5 	udiv	r3, r2, r5
90016448:	441c      	add	r4, r3
9001644a:	fb05 2513 	mls	r5, r5, r3, r2
9001644e:	443c      	add	r4, r7
90016450:	4420      	add	r0, r4
90016452:	e7db      	b.n	9001640c <_ZN8touchgfx7muldivuEmmmRm+0x54>

90016454 <_ZN8touchgfx6muldivElllRl>:
90016454:	b573      	push	{r0, r1, r4, r5, r6, lr}
90016456:	2800      	cmp	r0, #0
90016458:	461e      	mov	r6, r3
9001645a:	bfba      	itte	lt
9001645c:	4240      	neglt	r0, r0
9001645e:	f04f 34ff 	movlt.w	r4, #4294967295
90016462:	2401      	movge	r4, #1
90016464:	2900      	cmp	r1, #0
90016466:	bfbc      	itt	lt
90016468:	4249      	neglt	r1, r1
9001646a:	4264      	neglt	r4, r4
9001646c:	2a00      	cmp	r2, #0
9001646e:	bfb6      	itet	lt
90016470:	4265      	neglt	r5, r4
90016472:	4625      	movge	r5, r4
90016474:	4252      	neglt	r2, r2
90016476:	4288      	cmp	r0, r1
90016478:	bfc2      	ittt	gt
9001647a:	4603      	movgt	r3, r0
9001647c:	4608      	movgt	r0, r1
9001647e:	4619      	movgt	r1, r3
90016480:	ab01      	add	r3, sp, #4
90016482:	f7ff ff99 	bl	900163b8 <_ZN8touchgfx7muldivuEmmmRm>
90016486:	9b01      	ldr	r3, [sp, #4]
90016488:	4368      	muls	r0, r5
9001648a:	435c      	muls	r4, r3
9001648c:	6034      	str	r4, [r6, #0]
9001648e:	b002      	add	sp, #8
90016490:	bd70      	pop	{r4, r5, r6, pc}

90016492 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
90016492:	2000      	movs	r0, #0
90016494:	4770      	bx	lr

90016496 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
90016496:	2001      	movs	r0, #1
90016498:	4770      	bx	lr

9001649a <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
9001649a:	2002      	movs	r0, #2
9001649c:	4770      	bx	lr

9001649e <_ZN8touchgfx6ScreenD1Ev>:
9001649e:	4770      	bx	lr

900164a0 <_ZN8touchgfx6Screen11setupScreenEv>:
900164a0:	4770      	bx	lr

900164a2 <_ZN8touchgfx12GestureEventD1Ev>:
900164a2:	4770      	bx	lr

900164a4 <_ZN8touchgfx9DragEventD1Ev>:
900164a4:	4770      	bx	lr

900164a6 <_ZN8touchgfx10ClickEventD1Ev>:
900164a6:	4770      	bx	lr

900164a8 <_ZN8touchgfx10ClickEventD0Ev>:
900164a8:	b510      	push	{r4, lr}
900164aa:	4604      	mov	r4, r0
900164ac:	210c      	movs	r1, #12
900164ae:	f00f fed8 	bl	90026262 <_ZdlPvj>
900164b2:	4620      	mov	r0, r4
900164b4:	bd10      	pop	{r4, pc}

900164b6 <_ZN8touchgfx9DragEventD0Ev>:
900164b6:	b510      	push	{r4, lr}
900164b8:	4604      	mov	r4, r0
900164ba:	2110      	movs	r1, #16
900164bc:	f00f fed1 	bl	90026262 <_ZdlPvj>
900164c0:	4620      	mov	r0, r4
900164c2:	bd10      	pop	{r4, pc}

900164c4 <_ZN8touchgfx12GestureEventD0Ev>:
900164c4:	b510      	push	{r4, lr}
900164c6:	4604      	mov	r4, r0
900164c8:	210c      	movs	r1, #12
900164ca:	f00f feca 	bl	90026262 <_ZdlPvj>
900164ce:	4620      	mov	r0, r4
900164d0:	bd10      	pop	{r4, pc}

900164d2 <_ZN8touchgfx6ScreenD0Ev>:
900164d2:	b510      	push	{r4, lr}
900164d4:	4604      	mov	r4, r0
900164d6:	213c      	movs	r1, #60	; 0x3c
900164d8:	f00f fec3 	bl	90026262 <_ZdlPvj>
900164dc:	4620      	mov	r0, r4
900164de:	bd10      	pop	{r4, pc}

900164e0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
900164e0:	b530      	push	{r4, r5, lr}
900164e2:	460d      	mov	r5, r1
900164e4:	6b01      	ldr	r1, [r0, #48]	; 0x30
900164e6:	b087      	sub	sp, #28
900164e8:	4604      	mov	r4, r0
900164ea:	b301      	cbz	r1, 9001652e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
900164ec:	a801      	add	r0, sp, #4
900164ee:	f7ff fe7f 	bl	900161f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900164f2:	892a      	ldrh	r2, [r5, #8]
900164f4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
900164f8:	7928      	ldrb	r0, [r5, #4]
900164fa:	1ad2      	subs	r2, r2, r3
900164fc:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
900164fe:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90016502:	441a      	add	r2, r3
90016504:	896b      	ldrh	r3, [r5, #10]
90016506:	f8bd 5006 	ldrh.w	r5, [sp, #6]
9001650a:	f88d 0010 	strb.w	r0, [sp, #16]
9001650e:	1b5b      	subs	r3, r3, r5
90016510:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
90016512:	6b20      	ldr	r0, [r4, #48]	; 0x30
90016514:	442b      	add	r3, r5
90016516:	4d07      	ldr	r5, [pc, #28]	; (90016534 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
90016518:	f8ad 1012 	strh.w	r1, [sp, #18]
9001651c:	a903      	add	r1, sp, #12
9001651e:	9503      	str	r5, [sp, #12]
90016520:	f8ad 2014 	strh.w	r2, [sp, #20]
90016524:	f8ad 3016 	strh.w	r3, [sp, #22]
90016528:	6803      	ldr	r3, [r0, #0]
9001652a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
9001652c:	4798      	blx	r3
9001652e:	b007      	add	sp, #28
90016530:	bd30      	pop	{r4, r5, pc}
90016532:	bf00      	nop
90016534:	9002a924 	.word	0x9002a924

90016538 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
90016538:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001653c:	6b03      	ldr	r3, [r0, #48]	; 0x30
9001653e:	b08a      	sub	sp, #40	; 0x28
90016540:	4604      	mov	r4, r0
90016542:	460d      	mov	r5, r1
90016544:	b113      	cbz	r3, 9001654c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
90016546:	790b      	ldrb	r3, [r1, #4]
90016548:	2b00      	cmp	r3, #0
9001654a:	d044      	beq.n	900165d6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001654c:	f104 0804 	add.w	r8, r4, #4
90016550:	a803      	add	r0, sp, #12
90016552:	4641      	mov	r1, r8
90016554:	f7ff fe4c 	bl	900161f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016558:	792b      	ldrb	r3, [r5, #4]
9001655a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001655e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
90016562:	b983      	cbnz	r3, 90016586 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
90016564:	f104 0336 	add.w	r3, r4, #54	; 0x36
90016568:	892a      	ldrh	r2, [r5, #8]
9001656a:	88e9      	ldrh	r1, [r5, #6]
9001656c:	4640      	mov	r0, r8
9001656e:	1b92      	subs	r2, r2, r6
90016570:	9301      	str	r3, [sp, #4]
90016572:	1bc9      	subs	r1, r1, r7
90016574:	f104 0334 	add.w	r3, r4, #52	; 0x34
90016578:	b212      	sxth	r2, r2
9001657a:	9300      	str	r3, [sp, #0]
9001657c:	b209      	sxth	r1, r1
9001657e:	f104 0330 	add.w	r3, r4, #48	; 0x30
90016582:	f7f9 fd1f 	bl	9000ffc4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
90016586:	6b21      	ldr	r1, [r4, #48]	; 0x30
90016588:	b329      	cbz	r1, 900165d6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001658a:	a805      	add	r0, sp, #20
9001658c:	f7ff fe30 	bl	900161f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016590:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90016594:	792b      	ldrb	r3, [r5, #4]
90016596:	a907      	add	r1, sp, #28
90016598:	1abf      	subs	r7, r7, r2
9001659a:	88ea      	ldrh	r2, [r5, #6]
9001659c:	6b20      	ldr	r0, [r4, #48]	; 0x30
9001659e:	4417      	add	r7, r2
900165a0:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
900165a2:	f88d 3020 	strb.w	r3, [sp, #32]
900165a6:	4417      	add	r7, r2
900165a8:	f8bd 2016 	ldrh.w	r2, [sp, #22]
900165ac:	1ab6      	subs	r6, r6, r2
900165ae:	892a      	ldrh	r2, [r5, #8]
900165b0:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
900165b4:	4416      	add	r6, r2
900165b6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
900165b8:	4416      	add	r6, r2
900165ba:	4a08      	ldr	r2, [pc, #32]	; (900165dc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
900165bc:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
900165c0:	2600      	movs	r6, #0
900165c2:	9207      	str	r2, [sp, #28]
900165c4:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
900165c8:	6803      	ldr	r3, [r0, #0]
900165ca:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900165cc:	4798      	blx	r3
900165ce:	792b      	ldrb	r3, [r5, #4]
900165d0:	b10b      	cbz	r3, 900165d6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
900165d2:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
900165d6:	b00a      	add	sp, #40	; 0x28
900165d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900165dc:	9002a8fc 	.word	0x9002a8fc

900165e0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
900165e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900165e4:	460c      	mov	r4, r1
900165e6:	6b01      	ldr	r1, [r0, #48]	; 0x30
900165e8:	b088      	sub	sp, #32
900165ea:	4605      	mov	r5, r0
900165ec:	2900      	cmp	r1, #0
900165ee:	d06d      	beq.n	900166cc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
900165f0:	4668      	mov	r0, sp
900165f2:	f7ff fdfd 	bl	900161f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900165f6:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
900165f8:	88e3      	ldrh	r3, [r4, #6]
900165fa:	f9bd 8000 	ldrsh.w	r8, [sp]
900165fe:	440b      	add	r3, r1
90016600:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
90016604:	b21b      	sxth	r3, r3
90016606:	4543      	cmp	r3, r8
90016608:	db31      	blt.n	9001666e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001660a:	f8bd c004 	ldrh.w	ip, [sp, #4]
9001660e:	44c4      	add	ip, r8
90016610:	fa0f fc8c 	sxth.w	ip, ip
90016614:	4563      	cmp	r3, ip
90016616:	da2a      	bge.n	9001666e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90016618:	8eea      	ldrh	r2, [r5, #54]	; 0x36
9001661a:	8926      	ldrh	r6, [r4, #8]
9001661c:	4416      	add	r6, r2
9001661e:	b236      	sxth	r6, r6
90016620:	42be      	cmp	r6, r7
90016622:	db24      	blt.n	9001666e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90016624:	f8bd 0006 	ldrh.w	r0, [sp, #6]
90016628:	4438      	add	r0, r7
9001662a:	b200      	sxth	r0, r0
9001662c:	4286      	cmp	r6, r0
9001662e:	da1e      	bge.n	9001666e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90016630:	8963      	ldrh	r3, [r4, #10]
90016632:	4419      	add	r1, r3
90016634:	b209      	sxth	r1, r1
90016636:	4541      	cmp	r1, r8
90016638:	db08      	blt.n	9001664c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001663a:	4561      	cmp	r1, ip
9001663c:	da06      	bge.n	9001664c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001663e:	89a3      	ldrh	r3, [r4, #12]
90016640:	441a      	add	r2, r3
90016642:	b212      	sxth	r2, r2
90016644:	42ba      	cmp	r2, r7
90016646:	db01      	blt.n	9001664c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90016648:	4282      	cmp	r2, r0
9001664a:	db10      	blt.n	9001666e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001664c:	4b21      	ldr	r3, [pc, #132]	; (900166d4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
9001664e:	a904      	add	r1, sp, #16
90016650:	6b28      	ldr	r0, [r5, #48]	; 0x30
90016652:	9304      	str	r3, [sp, #16]
90016654:	2302      	movs	r3, #2
90016656:	f88d 3014 	strb.w	r3, [sp, #20]
9001665a:	2300      	movs	r3, #0
9001665c:	f8ad 3016 	strh.w	r3, [sp, #22]
90016660:	f8ad 3018 	strh.w	r3, [sp, #24]
90016664:	f8ad 301a 	strh.w	r3, [sp, #26]
90016668:	6803      	ldr	r3, [r0, #0]
9001666a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9001666c:	4798      	blx	r3
9001666e:	1d29      	adds	r1, r5, #4
90016670:	a802      	add	r0, sp, #8
90016672:	f7ff fdbd 	bl	900161f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016676:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001667a:	88e0      	ldrh	r0, [r4, #6]
9001667c:	eba3 0808 	sub.w	r8, r3, r8
90016680:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90016684:	7921      	ldrb	r1, [r4, #4]
90016686:	fa1f f888 	uxth.w	r8, r8
9001668a:	1bdf      	subs	r7, r3, r7
9001668c:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
90016690:	b2bb      	uxth	r3, r7
90016692:	4440      	add	r0, r8
90016694:	8922      	ldrh	r2, [r4, #8]
90016696:	8967      	ldrh	r7, [r4, #10]
90016698:	4460      	add	r0, ip
9001669a:	89a4      	ldrh	r4, [r4, #12]
9001669c:	441a      	add	r2, r3
9001669e:	8eee      	ldrh	r6, [r5, #54]	; 0x36
900166a0:	44b8      	add	r8, r7
900166a2:	4423      	add	r3, r4
900166a4:	f8ad 0016 	strh.w	r0, [sp, #22]
900166a8:	4432      	add	r2, r6
900166aa:	44e0      	add	r8, ip
900166ac:	4433      	add	r3, r6
900166ae:	4c0a      	ldr	r4, [pc, #40]	; (900166d8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
900166b0:	6b28      	ldr	r0, [r5, #48]	; 0x30
900166b2:	f88d 1014 	strb.w	r1, [sp, #20]
900166b6:	a904      	add	r1, sp, #16
900166b8:	9404      	str	r4, [sp, #16]
900166ba:	f8ad 2018 	strh.w	r2, [sp, #24]
900166be:	f8ad 801a 	strh.w	r8, [sp, #26]
900166c2:	f8ad 301c 	strh.w	r3, [sp, #28]
900166c6:	6803      	ldr	r3, [r0, #0]
900166c8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
900166ca:	4798      	blx	r3
900166cc:	b008      	add	sp, #32
900166ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900166d2:	bf00      	nop
900166d4:	9002a8fc 	.word	0x9002a8fc
900166d8:	9002a910 	.word	0x9002a910

900166dc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
900166dc:	b537      	push	{r0, r1, r2, r4, r5, lr}
900166de:	4604      	mov	r4, r0
900166e0:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
900166e4:	3201      	adds	r2, #1
900166e6:	d112      	bne.n	9001670e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
900166e8:	2500      	movs	r5, #0
900166ea:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
900166ee:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900166f2:	6803      	ldr	r3, [r0, #0]
900166f4:	9500      	str	r5, [sp, #0]
900166f6:	466d      	mov	r5, sp
900166f8:	f8ad 1004 	strh.w	r1, [sp, #4]
900166fc:	f8ad 2006 	strh.w	r2, [sp, #6]
90016700:	4629      	mov	r1, r5
90016702:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90016704:	4798      	blx	r3
90016706:	e895 0003 	ldmia.w	r5, {r0, r1}
9001670a:	e884 0003 	stmia.w	r4, {r0, r1}
9001670e:	4620      	mov	r0, r4
90016710:	b003      	add	sp, #12
90016712:	bd30      	pop	{r4, r5, pc}

90016714 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
90016714:	b513      	push	{r0, r1, r4, lr}
90016716:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
9001671a:	4604      	mov	r4, r0
9001671c:	3301      	adds	r3, #1
9001671e:	d109      	bne.n	90016734 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
90016720:	4601      	mov	r1, r0
90016722:	4668      	mov	r0, sp
90016724:	f7ff fd64 	bl	900161f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016728:	f8bd 3000 	ldrh.w	r3, [sp]
9001672c:	8423      	strh	r3, [r4, #32]
9001672e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90016732:	8463      	strh	r3, [r4, #34]	; 0x22
90016734:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
90016738:	b002      	add	sp, #8
9001673a:	bd10      	pop	{r4, pc}

9001673c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
9001673c:	b513      	push	{r0, r1, r4, lr}
9001673e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
90016742:	4604      	mov	r4, r0
90016744:	3301      	adds	r3, #1
90016746:	d109      	bne.n	9001675c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
90016748:	4601      	mov	r1, r0
9001674a:	4668      	mov	r0, sp
9001674c:	f7ff fd50 	bl	900161f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016750:	f8bd 3000 	ldrh.w	r3, [sp]
90016754:	8423      	strh	r3, [r4, #32]
90016756:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001675a:	8463      	strh	r3, [r4, #34]	; 0x22
9001675c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
90016760:	b002      	add	sp, #8
90016762:	bd10      	pop	{r4, pc}

90016764 <_ZN8touchgfx6ScreenC1Ev>:
90016764:	b570      	push	{r4, r5, r6, lr}
90016766:	4b17      	ldr	r3, [pc, #92]	; (900167c4 <_ZN8touchgfx6ScreenC1Ev+0x60>)
90016768:	4605      	mov	r5, r0
9001676a:	4a17      	ldr	r2, [pc, #92]	; (900167c8 <_ZN8touchgfx6ScreenC1Ev+0x64>)
9001676c:	2101      	movs	r1, #1
9001676e:	f845 3b04 	str.w	r3, [r5], #4
90016772:	2300      	movs	r3, #0
90016774:	6042      	str	r2, [r0, #4]
90016776:	4604      	mov	r4, r0
90016778:	8103      	strh	r3, [r0, #8]
9001677a:	8143      	strh	r3, [r0, #10]
9001677c:	8183      	strh	r3, [r0, #12]
9001677e:	81c3      	strh	r3, [r0, #14]
90016780:	8203      	strh	r3, [r0, #16]
90016782:	8243      	strh	r3, [r0, #18]
90016784:	8283      	strh	r3, [r0, #20]
90016786:	82c3      	strh	r3, [r0, #22]
90016788:	6203      	str	r3, [r0, #32]
9001678a:	8483      	strh	r3, [r0, #36]	; 0x24
9001678c:	84c3      	strh	r3, [r0, #38]	; 0x26
9001678e:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
90016792:	6343      	str	r3, [r0, #52]	; 0x34
90016794:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
90016798:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
9001679c:	e9c0 3306 	strd	r3, r3, [r0, #24]
900167a0:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
900167a4:	4b09      	ldr	r3, [pc, #36]	; (900167cc <_ZN8touchgfx6ScreenC1Ev+0x68>)
900167a6:	4628      	mov	r0, r5
900167a8:	f9b3 6000 	ldrsh.w	r6, [r3]
900167ac:	6b93      	ldr	r3, [r2, #56]	; 0x38
900167ae:	4a08      	ldr	r2, [pc, #32]	; (900167d0 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
900167b0:	f9b2 1000 	ldrsh.w	r1, [r2]
900167b4:	4798      	blx	r3
900167b6:	6863      	ldr	r3, [r4, #4]
900167b8:	4628      	mov	r0, r5
900167ba:	4631      	mov	r1, r6
900167bc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900167be:	4798      	blx	r3
900167c0:	4620      	mov	r0, r4
900167c2:	bd70      	pop	{r4, r5, r6, pc}
900167c4:	9002a938 	.word	0x9002a938
900167c8:	9002a24c 	.word	0x9002a24c
900167cc:	240235a2 	.word	0x240235a2
900167d0:	240235a0 	.word	0x240235a0

900167d4 <_ZN8touchgfx6Screen4drawEv>:
900167d4:	4b09      	ldr	r3, [pc, #36]	; (900167fc <_ZN8touchgfx6Screen4drawEv+0x28>)
900167d6:	b507      	push	{r0, r1, r2, lr}
900167d8:	f9b3 2000 	ldrsh.w	r2, [r3]
900167dc:	2100      	movs	r1, #0
900167de:	4b08      	ldr	r3, [pc, #32]	; (90016800 <_ZN8touchgfx6Screen4drawEv+0x2c>)
900167e0:	9100      	str	r1, [sp, #0]
900167e2:	4669      	mov	r1, sp
900167e4:	f9b3 3000 	ldrsh.w	r3, [r3]
900167e8:	f8ad 2004 	strh.w	r2, [sp, #4]
900167ec:	f8ad 3006 	strh.w	r3, [sp, #6]
900167f0:	6803      	ldr	r3, [r0, #0]
900167f2:	689b      	ldr	r3, [r3, #8]
900167f4:	4798      	blx	r3
900167f6:	b003      	add	sp, #12
900167f8:	f85d fb04 	ldr.w	pc, [sp], #4
900167fc:	240235a0 	.word	0x240235a0
90016800:	240235a2 	.word	0x240235a2

90016804 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
90016804:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016808:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
9001680c:	b089      	sub	sp, #36	; 0x24
9001680e:	4680      	mov	r8, r0
90016810:	460c      	mov	r4, r1
90016812:	2b00      	cmp	r3, #0
90016814:	4615      	mov	r5, r2
90016816:	dd0e      	ble.n	90016836 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90016818:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
9001681c:	2b00      	cmp	r3, #0
9001681e:	dd0a      	ble.n	90016836 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90016820:	4628      	mov	r0, r5
90016822:	f7ff ff5b 	bl	900166dc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90016826:	4621      	mov	r1, r4
90016828:	f7fe faef 	bl	90014e0a <_ZNK8touchgfx4Rect9intersectERKS0_>
9001682c:	69eb      	ldr	r3, [r5, #28]
9001682e:	b928      	cbnz	r0, 9001683c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
90016830:	461d      	mov	r5, r3
90016832:	2b00      	cmp	r3, #0
90016834:	d1f4      	bne.n	90016820 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
90016836:	b009      	add	sp, #36	; 0x24
90016838:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001683c:	ae04      	add	r6, sp, #16
9001683e:	2b00      	cmp	r3, #0
90016840:	f000 80b5 	beq.w	900169ae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90016844:	682b      	ldr	r3, [r5, #0]
90016846:	4629      	mov	r1, r5
90016848:	a802      	add	r0, sp, #8
9001684a:	68db      	ldr	r3, [r3, #12]
9001684c:	4798      	blx	r3
9001684e:	4628      	mov	r0, r5
90016850:	f7ff ff60 	bl	90016714 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
90016854:	f8bd 7008 	ldrh.w	r7, [sp, #8]
90016858:	4407      	add	r7, r0
9001685a:	4628      	mov	r0, r5
9001685c:	f7ff ff6e 	bl	9001673c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
90016860:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90016864:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90016868:	b23f      	sxth	r7, r7
9001686a:	4418      	add	r0, r3
9001686c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90016870:	4621      	mov	r1, r4
90016872:	f8ad 2014 	strh.w	r2, [sp, #20]
90016876:	f8ad 0012 	strh.w	r0, [sp, #18]
9001687a:	4630      	mov	r0, r6
9001687c:	f8ad 3016 	strh.w	r3, [sp, #22]
90016880:	f8ad 7010 	strh.w	r7, [sp, #16]
90016884:	f7f9 fc80 	bl	90010188 <_ZN8touchgfx4RectaNERKS0_>
90016888:	4628      	mov	r0, r5
9001688a:	f7ff ff27 	bl	900166dc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001688e:	ab06      	add	r3, sp, #24
90016890:	4602      	mov	r2, r0
90016892:	e896 0003 	ldmia.w	r6, {r0, r1}
90016896:	e883 0003 	stmia.w	r3, {r0, r1}
9001689a:	4611      	mov	r1, r2
9001689c:	4618      	mov	r0, r3
9001689e:	f7f9 fc73 	bl	90010188 <_ZN8touchgfx4RectaNERKS0_>
900168a2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
900168a6:	f9b4 1000 	ldrsh.w	r1, [r4]
900168aa:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
900168ae:	4299      	cmp	r1, r3
900168b0:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
900168b4:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
900168b8:	d10b      	bne.n	900168d2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
900168ba:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
900168be:	4552      	cmp	r2, sl
900168c0:	d107      	bne.n	900168d2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
900168c2:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
900168c6:	455a      	cmp	r2, fp
900168c8:	d103      	bne.n	900168d2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
900168ca:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
900168ce:	454a      	cmp	r2, r9
900168d0:	d06d      	beq.n	900169ae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
900168d2:	f1bb 0f00 	cmp.w	fp, #0
900168d6:	dd65      	ble.n	900169a4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
900168d8:	f1b9 0f00 	cmp.w	r9, #0
900168dc:	dd62      	ble.n	900169a4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
900168de:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
900168e2:	fa1f f08a 	uxth.w	r0, sl
900168e6:	4552      	cmp	r2, sl
900168e8:	9000      	str	r0, [sp, #0]
900168ea:	da12      	bge.n	90016912 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
900168ec:	9301      	str	r3, [sp, #4]
900168ee:	9b00      	ldr	r3, [sp, #0]
900168f0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
900168f4:	f8ad 2012 	strh.w	r2, [sp, #18]
900168f8:	1a9a      	subs	r2, r3, r2
900168fa:	f8ad 1010 	strh.w	r1, [sp, #16]
900168fe:	4631      	mov	r1, r6
90016900:	f8ad 0014 	strh.w	r0, [sp, #20]
90016904:	4640      	mov	r0, r8
90016906:	f8ad 2016 	strh.w	r2, [sp, #22]
9001690a:	69ea      	ldr	r2, [r5, #28]
9001690c:	f7ff ff7a 	bl	90016804 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90016910:	9b01      	ldr	r3, [sp, #4]
90016912:	f9b4 2000 	ldrsh.w	r2, [r4]
90016916:	b29f      	uxth	r7, r3
90016918:	429a      	cmp	r2, r3
9001691a:	da0d      	bge.n	90016938 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
9001691c:	f8ad 2010 	strh.w	r2, [sp, #16]
90016920:	1aba      	subs	r2, r7, r2
90016922:	f8ad a012 	strh.w	sl, [sp, #18]
90016926:	4631      	mov	r1, r6
90016928:	f8ad 2014 	strh.w	r2, [sp, #20]
9001692c:	4640      	mov	r0, r8
9001692e:	f8ad 9016 	strh.w	r9, [sp, #22]
90016932:	69ea      	ldr	r2, [r5, #28]
90016934:	f7ff ff66 	bl	90016804 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90016938:	8822      	ldrh	r2, [r4, #0]
9001693a:	445f      	add	r7, fp
9001693c:	88a3      	ldrh	r3, [r4, #4]
9001693e:	b2bf      	uxth	r7, r7
90016940:	4413      	add	r3, r2
90016942:	b23a      	sxth	r2, r7
90016944:	b29b      	uxth	r3, r3
90016946:	b219      	sxth	r1, r3
90016948:	4291      	cmp	r1, r2
9001694a:	dd0d      	ble.n	90016968 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
9001694c:	1bdb      	subs	r3, r3, r7
9001694e:	f8ad 2010 	strh.w	r2, [sp, #16]
90016952:	f8ad a012 	strh.w	sl, [sp, #18]
90016956:	4631      	mov	r1, r6
90016958:	f8ad 3014 	strh.w	r3, [sp, #20]
9001695c:	4640      	mov	r0, r8
9001695e:	f8ad 9016 	strh.w	r9, [sp, #22]
90016962:	69ea      	ldr	r2, [r5, #28]
90016964:	f7ff ff4e 	bl	90016804 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90016968:	88e2      	ldrh	r2, [r4, #6]
9001696a:	8863      	ldrh	r3, [r4, #2]
9001696c:	4413      	add	r3, r2
9001696e:	9a00      	ldr	r2, [sp, #0]
90016970:	444a      	add	r2, r9
90016972:	b29b      	uxth	r3, r3
90016974:	fa1f f982 	uxth.w	r9, r2
90016978:	b219      	sxth	r1, r3
9001697a:	fa0f f289 	sxth.w	r2, r9
9001697e:	428a      	cmp	r2, r1
90016980:	da15      	bge.n	900169ae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90016982:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90016986:	eba3 0309 	sub.w	r3, r3, r9
9001698a:	f9b4 0000 	ldrsh.w	r0, [r4]
9001698e:	f8ad 1014 	strh.w	r1, [sp, #20]
90016992:	4631      	mov	r1, r6
90016994:	f8ad 0010 	strh.w	r0, [sp, #16]
90016998:	f8ad 2012 	strh.w	r2, [sp, #18]
9001699c:	f8ad 3016 	strh.w	r3, [sp, #22]
900169a0:	69ea      	ldr	r2, [r5, #28]
900169a2:	e001      	b.n	900169a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
900169a4:	69ea      	ldr	r2, [r5, #28]
900169a6:	4621      	mov	r1, r4
900169a8:	4640      	mov	r0, r8
900169aa:	f7ff ff2b 	bl	90016804 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
900169ae:	4628      	mov	r0, r5
900169b0:	f7ff fe94 	bl	900166dc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
900169b4:	6861      	ldr	r1, [r4, #4]
900169b6:	4602      	mov	r2, r0
900169b8:	4633      	mov	r3, r6
900169ba:	6820      	ldr	r0, [r4, #0]
900169bc:	c303      	stmia	r3!, {r0, r1}
900169be:	4611      	mov	r1, r2
900169c0:	4630      	mov	r0, r6
900169c2:	f7f9 fbe1 	bl	90010188 <_ZN8touchgfx4RectaNERKS0_>
900169c6:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
900169ca:	2b00      	cmp	r3, #0
900169cc:	f77f af33 	ble.w	90016836 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900169d0:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
900169d4:	2b00      	cmp	r3, #0
900169d6:	f77f af2e 	ble.w	90016836 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900169da:	4628      	mov	r0, r5
900169dc:	f7ff fe9a 	bl	90016714 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
900169e0:	f8bd 3010 	ldrh.w	r3, [sp, #16]
900169e4:	1a18      	subs	r0, r3, r0
900169e6:	f8ad 0010 	strh.w	r0, [sp, #16]
900169ea:	4628      	mov	r0, r5
900169ec:	f7ff fea6 	bl	9001673c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
900169f0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
900169f4:	4631      	mov	r1, r6
900169f6:	1a18      	subs	r0, r3, r0
900169f8:	f8ad 0012 	strh.w	r0, [sp, #18]
900169fc:	4628      	mov	r0, r5
900169fe:	682b      	ldr	r3, [r5, #0]
90016a00:	689b      	ldr	r3, [r3, #8]
90016a02:	4798      	blx	r3
90016a04:	e717      	b.n	90016836 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

90016a06 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
90016a06:	b570      	push	{r4, r5, r6, lr}
90016a08:	1d06      	adds	r6, r0, #4
90016a0a:	b086      	sub	sp, #24
90016a0c:	460c      	mov	r4, r1
90016a0e:	2300      	movs	r3, #0
90016a10:	4631      	mov	r1, r6
90016a12:	4605      	mov	r5, r0
90016a14:	a802      	add	r0, sp, #8
90016a16:	9301      	str	r3, [sp, #4]
90016a18:	f7ff fbea 	bl	900161f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016a1c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
90016a20:	8822      	ldrh	r2, [r4, #0]
90016a22:	f8bd 100a 	ldrh.w	r1, [sp, #10]
90016a26:	1ad2      	subs	r2, r2, r3
90016a28:	8863      	ldrh	r3, [r4, #2]
90016a2a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90016a2e:	1a5b      	subs	r3, r3, r1
90016a30:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
90016a34:	f8ad 2010 	strh.w	r2, [sp, #16]
90016a38:	aa01      	add	r2, sp, #4
90016a3a:	f8ad 0014 	strh.w	r0, [sp, #20]
90016a3e:	4630      	mov	r0, r6
90016a40:	f8ad 1016 	strh.w	r1, [sp, #22]
90016a44:	a904      	add	r1, sp, #16
90016a46:	f8ad 3012 	strh.w	r3, [sp, #18]
90016a4a:	f7f9 fc75 	bl	90010338 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
90016a4e:	9a01      	ldr	r2, [sp, #4]
90016a50:	b11a      	cbz	r2, 90016a5a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
90016a52:	4621      	mov	r1, r4
90016a54:	4628      	mov	r0, r5
90016a56:	f7ff fed5 	bl	90016804 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90016a5a:	b006      	add	sp, #24
90016a5c:	bd70      	pop	{r4, r5, r6, pc}

90016a5e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
90016a5e:	4602      	mov	r2, r0
90016a60:	b530      	push	{r4, r5, lr}
90016a62:	4604      	mov	r4, r0
90016a64:	b085      	sub	sp, #20
90016a66:	f852 0f08 	ldr.w	r0, [r2, #8]!
90016a6a:	460d      	mov	r5, r1
90016a6c:	466b      	mov	r3, sp
90016a6e:	6851      	ldr	r1, [r2, #4]
90016a70:	c303      	stmia	r3!, {r0, r1}
90016a72:	4629      	mov	r1, r5
90016a74:	4668      	mov	r0, sp
90016a76:	f7f9 fb87 	bl	90010188 <_ZN8touchgfx4RectaNERKS0_>
90016a7a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90016a7e:	b12b      	cbz	r3, 90016a8c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
90016a80:	4669      	mov	r1, sp
90016a82:	4620      	mov	r0, r4
90016a84:	f7ff ffbf 	bl	90016a06 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
90016a88:	b005      	add	sp, #20
90016a8a:	bd30      	pop	{r4, r5, pc}
90016a8c:	3404      	adds	r4, #4
90016a8e:	a802      	add	r0, sp, #8
90016a90:	4621      	mov	r1, r4
90016a92:	f7ff fbad 	bl	900161f0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016a96:	f8bd 3000 	ldrh.w	r3, [sp]
90016a9a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
90016a9e:	4669      	mov	r1, sp
90016aa0:	4620      	mov	r0, r4
90016aa2:	1a9b      	subs	r3, r3, r2
90016aa4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90016aa8:	f8ad 3000 	strh.w	r3, [sp]
90016aac:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90016ab0:	1a9b      	subs	r3, r3, r2
90016ab2:	f8ad 3002 	strh.w	r3, [sp, #2]
90016ab6:	f7f9 fc06 	bl	900102c6 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
90016aba:	e7e5      	b.n	90016a88 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

90016abc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
90016abc:	460b      	mov	r3, r1
90016abe:	680a      	ldr	r2, [r1, #0]
90016ac0:	1d01      	adds	r1, r0, #4
90016ac2:	6992      	ldr	r2, [r2, #24]
90016ac4:	4618      	mov	r0, r3
90016ac6:	4710      	bx	r2

90016ac8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
90016ac8:	4298      	cmp	r0, r3
90016aca:	d200      	bcs.n	90016ace <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
90016acc:	b913      	cbnz	r3, 90016ad4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
90016ace:	440a      	add	r2, r1
90016ad0:	b210      	sxth	r0, r2
90016ad2:	4770      	bx	lr
90016ad4:	ee07 0a90 	vmov	s15, r0
90016ad8:	eef8 6a67 	vcvt.f32.u32	s13, s15
90016adc:	ee07 3a90 	vmov	s15, r3
90016ae0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90016ae4:	ee86 7aa7 	vdiv.f32	s14, s13, s15
90016ae8:	ee07 2a90 	vmov	s15, r2
90016aec:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90016af0:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
90016af4:	ee07 1a90 	vmov	s15, r1
90016af8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90016afc:	ee37 7a66 	vsub.f32	s14, s14, s13
90016b00:	ee67 5a07 	vmul.f32	s11, s14, s14
90016b04:	eee5 6a87 	vfma.f32	s13, s11, s14
90016b08:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
90016b0c:	eee6 7a26 	vfma.f32	s15, s12, s13
90016b10:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90016b14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90016b18:	bfcc      	ite	gt
90016b1a:	ee77 7a87 	vaddgt.f32	s15, s15, s14
90016b1e:	ee77 7ac7 	vsuble.f32	s15, s15, s14
90016b22:	eefd 7ae7 	vcvt.s32.f32	s15, s15
90016b26:	ee17 3a90 	vmov	r3, s15
90016b2a:	b218      	sxth	r0, r3
90016b2c:	4770      	bx	lr

90016b2e <_ZN8touchgfx12TextProviderC1Ev>:
90016b2e:	b538      	push	{r3, r4, r5, lr}
90016b30:	2500      	movs	r5, #0
90016b32:	2302      	movs	r3, #2
90016b34:	4604      	mov	r4, r0
90016b36:	220e      	movs	r2, #14
90016b38:	7403      	strb	r3, [r0, #16]
90016b3a:	4629      	mov	r1, r5
90016b3c:	6145      	str	r5, [r0, #20]
90016b3e:	7605      	strb	r5, [r0, #24]
90016b40:	83c5      	strh	r5, [r0, #30]
90016b42:	8405      	strh	r5, [r0, #32]
90016b44:	86c5      	strh	r5, [r0, #54]	; 0x36
90016b46:	8705      	strh	r5, [r0, #56]	; 0x38
90016b48:	87c5      	strh	r5, [r0, #62]	; 0x3e
90016b4a:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
90016b4e:	e9c0 5500 	strd	r5, r5, [r0]
90016b52:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
90016b56:	304c      	adds	r0, #76	; 0x4c
90016b58:	f00f fe8a 	bl	90026870 <memset>
90016b5c:	2301      	movs	r3, #1
90016b5e:	4620      	mov	r0, r4
90016b60:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
90016b64:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
90016b68:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
90016b6c:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
90016b70:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
90016b74:	f7ed fd78 	bl	90004668 <_ZN8touchgfx12TextProvider18initializeInternalEv>
90016b78:	4620      	mov	r0, r4
90016b7a:	bd38      	pop	{r3, r4, r5, pc}

90016b7c <_ZN8touchgfx12TextProvider11endOfStringEv>:
90016b7c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
90016b7e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90016b82:	8c40      	ldrh	r0, [r0, #34]	; 0x22
90016b84:	fab0 f080 	clz	r0, r0
90016b88:	0940      	lsrs	r0, r0, #5
90016b8a:	4770      	bx	lr

90016b8c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
90016b8c:	b530      	push	{r4, r5, lr}
90016b8e:	2500      	movs	r5, #0
90016b90:	2401      	movs	r4, #1
90016b92:	6843      	ldr	r3, [r0, #4]
90016b94:	b913      	cbnz	r3, 90016b9c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
90016b96:	6803      	ldr	r3, [r0, #0]
90016b98:	b313      	cbz	r3, 90016be0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
90016b9a:	6043      	str	r3, [r0, #4]
90016b9c:	7e03      	ldrb	r3, [r0, #24]
90016b9e:	b143      	cbz	r3, 90016bb2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
90016ba0:	6943      	ldr	r3, [r0, #20]
90016ba2:	b12b      	cbz	r3, 90016bb0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90016ba4:	881a      	ldrh	r2, [r3, #0]
90016ba6:	b11a      	cbz	r2, 90016bb0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90016ba8:	1c9a      	adds	r2, r3, #2
90016baa:	6142      	str	r2, [r0, #20]
90016bac:	8818      	ldrh	r0, [r3, #0]
90016bae:	bd30      	pop	{r4, r5, pc}
90016bb0:	7605      	strb	r5, [r0, #24]
90016bb2:	6843      	ldr	r3, [r0, #4]
90016bb4:	8819      	ldrh	r1, [r3, #0]
90016bb6:	b199      	cbz	r1, 90016be0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
90016bb8:	1c9a      	adds	r2, r3, #2
90016bba:	2902      	cmp	r1, #2
90016bbc:	6042      	str	r2, [r0, #4]
90016bbe:	d1f5      	bne.n	90016bac <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
90016bc0:	7c03      	ldrb	r3, [r0, #16]
90016bc2:	2b01      	cmp	r3, #1
90016bc4:	d8e5      	bhi.n	90016b92 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90016bc6:	1c5a      	adds	r2, r3, #1
90016bc8:	3302      	adds	r3, #2
90016bca:	7402      	strb	r2, [r0, #16]
90016bcc:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
90016bd0:	6143      	str	r3, [r0, #20]
90016bd2:	2b00      	cmp	r3, #0
90016bd4:	d0dd      	beq.n	90016b92 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90016bd6:	881b      	ldrh	r3, [r3, #0]
90016bd8:	2b00      	cmp	r3, #0
90016bda:	d0da      	beq.n	90016b92 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90016bdc:	7604      	strb	r4, [r0, #24]
90016bde:	e7d8      	b.n	90016b92 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90016be0:	2000      	movs	r0, #0
90016be2:	e7e4      	b.n	90016bae <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

90016be4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
90016be4:	6001      	str	r1, [r0, #0]
90016be6:	2100      	movs	r1, #0
90016be8:	b430      	push	{r4, r5}
90016bea:	6041      	str	r1, [r0, #4]
90016bec:	6815      	ldr	r5, [r2, #0]
90016bee:	6085      	str	r5, [r0, #8]
90016bf0:	6852      	ldr	r2, [r2, #4]
90016bf2:	6443      	str	r3, [r0, #68]	; 0x44
90016bf4:	9b02      	ldr	r3, [sp, #8]
90016bf6:	60c2      	str	r2, [r0, #12]
90016bf8:	7401      	strb	r1, [r0, #16]
90016bfa:	6141      	str	r1, [r0, #20]
90016bfc:	7601      	strb	r1, [r0, #24]
90016bfe:	8701      	strh	r1, [r0, #56]	; 0x38
90016c00:	8401      	strh	r1, [r0, #32]
90016c02:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
90016c06:	6483      	str	r3, [r0, #72]	; 0x48
90016c08:	bc30      	pop	{r4, r5}
90016c0a:	f7ed bd2d 	b.w	90004668 <_ZN8touchgfx12TextProvider18initializeInternalEv>

90016c0e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
90016c0e:	b408      	push	{r3}
90016c10:	b510      	push	{r4, lr}
90016c12:	b085      	sub	sp, #20
90016c14:	ac07      	add	r4, sp, #28
90016c16:	f854 3b04 	ldr.w	r3, [r4], #4
90016c1a:	9300      	str	r3, [sp, #0]
90016c1c:	4613      	mov	r3, r2
90016c1e:	4622      	mov	r2, r4
90016c20:	9403      	str	r4, [sp, #12]
90016c22:	f7ff ffdf 	bl	90016be4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90016c26:	b005      	add	sp, #20
90016c28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90016c2c:	b001      	add	sp, #4
90016c2e:	4770      	bx	lr

90016c30 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
90016c30:	b5f0      	push	{r4, r5, r6, r7, lr}
90016c32:	4605      	mov	r5, r0
90016c34:	4608      	mov	r0, r1
90016c36:	b1f1      	cbz	r1, 90016c76 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
90016c38:	f105 044c 	add.w	r4, r5, #76	; 0x4c
90016c3c:	460b      	mov	r3, r1
90016c3e:	f101 0708 	add.w	r7, r1, #8
90016c42:	4622      	mov	r2, r4
90016c44:	6818      	ldr	r0, [r3, #0]
90016c46:	3308      	adds	r3, #8
90016c48:	f853 1c04 	ldr.w	r1, [r3, #-4]
90016c4c:	4626      	mov	r6, r4
90016c4e:	42bb      	cmp	r3, r7
90016c50:	c603      	stmia	r6!, {r0, r1}
90016c52:	4634      	mov	r4, r6
90016c54:	d1f6      	bne.n	90016c44 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
90016c56:	6818      	ldr	r0, [r3, #0]
90016c58:	6030      	str	r0, [r6, #0]
90016c5a:	4610      	mov	r0, r2
90016c5c:	889b      	ldrh	r3, [r3, #4]
90016c5e:	80b3      	strh	r3, [r6, #4]
90016c60:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
90016c64:	015b      	lsls	r3, r3, #5
90016c66:	f403 7180 	and.w	r1, r3, #256	; 0x100
90016c6a:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
90016c6e:	430b      	orrs	r3, r1
90016c70:	425b      	negs	r3, r3
90016c72:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
90016c76:	bdf0      	pop	{r4, r5, r6, r7, pc}

90016c78 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
90016c78:	b538      	push	{r3, r4, r5, lr}
90016c7a:	460c      	mov	r4, r1
90016c7c:	6811      	ldr	r1, [r2, #0]
90016c7e:	4610      	mov	r0, r2
90016c80:	68cd      	ldr	r5, [r1, #12]
90016c82:	4619      	mov	r1, r3
90016c84:	47a8      	blx	r5
90016c86:	2800      	cmp	r0, #0
90016c88:	bf08      	it	eq
90016c8a:	4620      	moveq	r0, r4
90016c8c:	bd38      	pop	{r3, r4, r5, pc}
	...

90016c90 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
90016c90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90016c92:	4604      	mov	r4, r0
90016c94:	4615      	mov	r5, r2
90016c96:	4608      	mov	r0, r1
90016c98:	b93a      	cbnz	r2, 90016caa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
90016c9a:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
90016c9e:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
90016ca2:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
90016ca6:	4628      	mov	r0, r5
90016ca8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90016caa:	f892 c00d 	ldrb.w	ip, [r2, #13]
90016cae:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
90016cb2:	8893      	ldrh	r3, [r2, #4]
90016cb4:	ea4f 160c 	mov.w	r6, ip, lsl #4
90016cb8:	f406 7280 	and.w	r2, r6, #256	; 0x100
90016cbc:	79ee      	ldrb	r6, [r5, #7]
90016cbe:	4316      	orrs	r6, r2
90016cc0:	19da      	adds	r2, r3, r7
90016cc2:	b291      	uxth	r1, r2
90016cc4:	b2b7      	uxth	r7, r6
90016cc6:	291d      	cmp	r1, #29
90016cc8:	d87b      	bhi.n	90016dc2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
90016cca:	2201      	movs	r2, #1
90016ccc:	10f6      	asrs	r6, r6, #3
90016cce:	408a      	lsls	r2, r1
90016cd0:	4974      	ldr	r1, [pc, #464]	; (90016ea4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
90016cd2:	420a      	tst	r2, r1
90016cd4:	d12e      	bne.n	90016d34 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
90016cd6:	f412 7f60 	tst.w	r2, #896	; 0x380
90016cda:	d072      	beq.n	90016dc2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
90016cdc:	f104 024c 	add.w	r2, r4, #76	; 0x4c
90016ce0:	462b      	mov	r3, r5
90016ce2:	f105 0e08 	add.w	lr, r5, #8
90016ce6:	4615      	mov	r5, r2
90016ce8:	6818      	ldr	r0, [r3, #0]
90016cea:	3308      	adds	r3, #8
90016cec:	f853 1c04 	ldr.w	r1, [r3, #-4]
90016cf0:	4694      	mov	ip, r2
90016cf2:	4573      	cmp	r3, lr
90016cf4:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90016cf8:	4662      	mov	r2, ip
90016cfa:	d1f5      	bne.n	90016ce8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
90016cfc:	6818      	ldr	r0, [r3, #0]
90016cfe:	f8cc 0000 	str.w	r0, [ip]
90016d02:	889b      	ldrh	r3, [r3, #4]
90016d04:	f8ac 3004 	strh.w	r3, [ip, #4]
90016d08:	b2b3      	uxth	r3, r6
90016d0a:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
90016d0e:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
90016d12:	1aca      	subs	r2, r1, r3
90016d14:	1bcf      	subs	r7, r1, r7
90016d16:	f020 0060 	bic.w	r0, r0, #96	; 0x60
90016d1a:	b292      	uxth	r2, r2
90016d1c:	1afb      	subs	r3, r7, r3
90016d1e:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
90016d22:	10d2      	asrs	r2, r2, #3
90016d24:	f002 0260 	and.w	r2, r2, #96	; 0x60
90016d28:	4302      	orrs	r2, r0
90016d2a:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
90016d2e:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
90016d32:	e7b8      	b.n	90016ca6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
90016d34:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
90016d36:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90016d3a:	8c59      	ldrh	r1, [r3, #34]	; 0x22
90016d3c:	f640 6333 	movw	r3, #3635	; 0xe33
90016d40:	4299      	cmp	r1, r3
90016d42:	d110      	bne.n	90016d66 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
90016d44:	6803      	ldr	r3, [r0, #0]
90016d46:	68db      	ldr	r3, [r3, #12]
90016d48:	4798      	blx	r3
90016d4a:	7b41      	ldrb	r1, [r0, #13]
90016d4c:	00cb      	lsls	r3, r1, #3
90016d4e:	f403 7280 	and.w	r2, r3, #256	; 0x100
90016d52:	7a03      	ldrb	r3, [r0, #8]
90016d54:	0648      	lsls	r0, r1, #25
90016d56:	ea43 0302 	orr.w	r3, r3, r2
90016d5a:	bf44      	itt	mi
90016d5c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90016d60:	b21b      	sxthmi	r3, r3
90016d62:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90016d66:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
90016d6a:	462a      	mov	r2, r5
90016d6c:	f105 0c08 	add.w	ip, r5, #8
90016d70:	443b      	add	r3, r7
90016d72:	4433      	add	r3, r6
90016d74:	f104 064c 	add.w	r6, r4, #76	; 0x4c
90016d78:	b29b      	uxth	r3, r3
90016d7a:	4635      	mov	r5, r6
90016d7c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90016d80:	6810      	ldr	r0, [r2, #0]
90016d82:	3208      	adds	r2, #8
90016d84:	f852 1c04 	ldr.w	r1, [r2, #-4]
90016d88:	4637      	mov	r7, r6
90016d8a:	4562      	cmp	r2, ip
90016d8c:	c703      	stmia	r7!, {r0, r1}
90016d8e:	463e      	mov	r6, r7
90016d90:	d1f6      	bne.n	90016d80 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
90016d92:	6810      	ldr	r0, [r2, #0]
90016d94:	6038      	str	r0, [r7, #0]
90016d96:	8892      	ldrh	r2, [r2, #4]
90016d98:	80ba      	strh	r2, [r7, #4]
90016d9a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
90016d9e:	10db      	asrs	r3, r3, #3
90016da0:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
90016da4:	f003 0360 	and.w	r3, r3, #96	; 0x60
90016da8:	f022 0260 	bic.w	r2, r2, #96	; 0x60
90016dac:	4313      	orrs	r3, r2
90016dae:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
90016db2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
90016db6:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
90016dba:	1a9b      	subs	r3, r3, r2
90016dbc:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
90016dc0:	e771      	b.n	90016ca6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
90016dc2:	f023 0204 	bic.w	r2, r3, #4
90016dc6:	f640 611b 	movw	r1, #3611	; 0xe1b
90016dca:	428a      	cmp	r2, r1
90016dcc:	d003      	beq.n	90016dd6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
90016dce:	f640 621d 	movw	r2, #3613	; 0xe1d
90016dd2:	4293      	cmp	r3, r2
90016dd4:	d120      	bne.n	90016e18 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
90016dd6:	3b01      	subs	r3, #1
90016dd8:	4602      	mov	r2, r0
90016dda:	4629      	mov	r1, r5
90016ddc:	4620      	mov	r0, r4
90016dde:	b29b      	uxth	r3, r3
90016de0:	f7ff ff4a 	bl	90016c78 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
90016de4:	7b41      	ldrb	r1, [r0, #13]
90016de6:	00cb      	lsls	r3, r1, #3
90016de8:	0649      	lsls	r1, r1, #25
90016dea:	f403 7280 	and.w	r2, r3, #256	; 0x100
90016dee:	7a03      	ldrb	r3, [r0, #8]
90016df0:	ea43 0302 	orr.w	r3, r3, r2
90016df4:	bf44      	itt	mi
90016df6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90016dfa:	b21b      	sxthmi	r3, r3
90016dfc:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90016e00:	7b6b      	ldrb	r3, [r5, #13]
90016e02:	7aaa      	ldrb	r2, [r5, #10]
90016e04:	005b      	lsls	r3, r3, #1
90016e06:	f403 7380 	and.w	r3, r3, #256	; 0x100
90016e0a:	4313      	orrs	r3, r2
90016e0c:	115a      	asrs	r2, r3, #5
90016e0e:	eb02 0393 	add.w	r3, r2, r3, lsr #2
90016e12:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
90016e16:	e035      	b.n	90016e84 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
90016e18:	ea4f 02cc 	mov.w	r2, ip, lsl #3
90016e1c:	f01c 0f40 	tst.w	ip, #64	; 0x40
90016e20:	f402 7180 	and.w	r1, r2, #256	; 0x100
90016e24:	7a2a      	ldrb	r2, [r5, #8]
90016e26:	ea42 0201 	orr.w	r2, r2, r1
90016e2a:	f640 6109 	movw	r1, #3593	; 0xe09
90016e2e:	bf1c      	itt	ne
90016e30:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
90016e34:	b212      	sxthne	r2, r2
90016e36:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
90016e3a:	f023 0210 	bic.w	r2, r3, #16
90016e3e:	428a      	cmp	r2, r1
90016e40:	d003      	beq.n	90016e4a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
90016e42:	f640 6213 	movw	r2, #3603	; 0xe13
90016e46:	4293      	cmp	r3, r2
90016e48:	d129      	bne.n	90016e9e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
90016e4a:	7b6e      	ldrb	r6, [r5, #13]
90016e4c:	4629      	mov	r1, r5
90016e4e:	0076      	lsls	r6, r6, #1
90016e50:	f406 7280 	and.w	r2, r6, #256	; 0x100
90016e54:	7aae      	ldrb	r6, [r5, #10]
90016e56:	4316      	orrs	r6, r2
90016e58:	f640 6213 	movw	r2, #3603	; 0xe13
90016e5c:	4293      	cmp	r3, r2
90016e5e:	4602      	mov	r2, r0
90016e60:	4620      	mov	r0, r4
90016e62:	bf16      	itet	ne
90016e64:	f103 33ff 	addne.w	r3, r3, #4294967295
90016e68:	f640 630c 	movweq	r3, #3596	; 0xe0c
90016e6c:	b29b      	uxthne	r3, r3
90016e6e:	f7ff ff03 	bl	90016c78 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
90016e72:	7b43      	ldrb	r3, [r0, #13]
90016e74:	7a82      	ldrb	r2, [r0, #10]
90016e76:	005b      	lsls	r3, r3, #1
90016e78:	f403 7380 	and.w	r3, r3, #256	; 0x100
90016e7c:	4313      	orrs	r3, r2
90016e7e:	1af6      	subs	r6, r6, r3
90016e80:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
90016e84:	7b69      	ldrb	r1, [r5, #13]
90016e86:	00cb      	lsls	r3, r1, #3
90016e88:	f403 7280 	and.w	r2, r3, #256	; 0x100
90016e8c:	7a2b      	ldrb	r3, [r5, #8]
90016e8e:	4313      	orrs	r3, r2
90016e90:	064a      	lsls	r2, r1, #25
90016e92:	bf44      	itt	mi
90016e94:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90016e98:	b21b      	sxthmi	r3, r3
90016e9a:	1bdb      	subs	r3, r3, r7
90016e9c:	e747      	b.n	90016d2e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
90016e9e:	2300      	movs	r3, #0
90016ea0:	e7b7      	b.n	90016e12 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
90016ea2:	bf00      	nop
90016ea4:	3fc00079 	.word	0x3fc00079

90016ea8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
90016ea8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90016eac:	4604      	mov	r4, r0
90016eae:	b942      	cbnz	r2, 90016ec2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
90016eb0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
90016eb4:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
90016eb8:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
90016ebc:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
90016ec0:	e047      	b.n	90016f52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
90016ec2:	7b51      	ldrb	r1, [r2, #13]
90016ec4:	8893      	ldrh	r3, [r2, #4]
90016ec6:	010d      	lsls	r5, r1, #4
90016ec8:	f405 7080 	and.w	r0, r5, #256	; 0x100
90016ecc:	79d5      	ldrb	r5, [r2, #7]
90016ece:	4305      	orrs	r5, r0
90016ed0:	2d04      	cmp	r5, #4
90016ed2:	bfcc      	ite	gt
90016ed4:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
90016ed8:	f04f 0e01 	movle.w	lr, #1
90016edc:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
90016ee0:	f200 80ab 	bhi.w	9001703a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
90016ee4:	f240 60e7 	movw	r0, #1767	; 0x6e7
90016ee8:	4283      	cmp	r3, r0
90016eea:	d216      	bcs.n	90016f1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016eec:	f240 605b 	movw	r0, #1627	; 0x65b
90016ef0:	4283      	cmp	r3, r0
90016ef2:	d859      	bhi.n	90016fa8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
90016ef4:	f240 6057 	movw	r0, #1623	; 0x657
90016ef8:	4283      	cmp	r3, r0
90016efa:	d20e      	bcs.n	90016f1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016efc:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
90016f00:	d24a      	bcs.n	90016f98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
90016f02:	f240 604e 	movw	r0, #1614	; 0x64e
90016f06:	4283      	cmp	r3, r0
90016f08:	d207      	bcs.n	90016f1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016f0a:	f240 601a 	movw	r0, #1562	; 0x61a
90016f0e:	4283      	cmp	r3, r0
90016f10:	d02a      	beq.n	90016f68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016f12:	d821      	bhi.n	90016f58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
90016f14:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
90016f18:	d35b      	bcc.n	90016fd2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90016f1a:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
90016f1e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
90016f22:	f040 80d0 	bne.w	900170c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
90016f26:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
90016f2a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
90016f2e:	f040 80ca 	bne.w	900170c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
90016f32:	00cb      	lsls	r3, r1, #3
90016f34:	0649      	lsls	r1, r1, #25
90016f36:	f403 7080 	and.w	r0, r3, #256	; 0x100
90016f3a:	7a13      	ldrb	r3, [r2, #8]
90016f3c:	ea43 0300 	orr.w	r3, r3, r0
90016f40:	bf44      	itt	mi
90016f42:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90016f46:	b21b      	sxthmi	r3, r3
90016f48:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90016f4c:	1b5d      	subs	r5, r3, r5
90016f4e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
90016f52:	4610      	mov	r0, r2
90016f54:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90016f58:	f240 604b 	movw	r0, #1611	; 0x64b
90016f5c:	4283      	cmp	r3, r0
90016f5e:	d338      	bcc.n	90016fd2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90016f60:	f240 604c 	movw	r0, #1612	; 0x64c
90016f64:	4283      	cmp	r3, r0
90016f66:	d9d8      	bls.n	90016f1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016f68:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
90016f6c:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
90016f70:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
90016f74:	f040 80f3 	bne.w	9001715e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
90016f78:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
90016f7c:	f040 80ef 	bne.w	9001715e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
90016f80:	00cb      	lsls	r3, r1, #3
90016f82:	064e      	lsls	r6, r1, #25
90016f84:	f403 7080 	and.w	r0, r3, #256	; 0x100
90016f88:	7a13      	ldrb	r3, [r2, #8]
90016f8a:	ea43 0300 	orr.w	r3, r3, r0
90016f8e:	bf44      	itt	mi
90016f90:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90016f94:	b21b      	sxthmi	r3, r3
90016f96:	e7d9      	b.n	90016f4c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
90016f98:	f240 6054 	movw	r0, #1620	; 0x654
90016f9c:	4283      	cmp	r3, r0
90016f9e:	d8e3      	bhi.n	90016f68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016fa0:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
90016fa4:	d9e0      	bls.n	90016f68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016fa6:	e7b8      	b.n	90016f1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016fa8:	f240 6074 	movw	r0, #1652	; 0x674
90016fac:	4283      	cmp	r3, r0
90016fae:	d0b4      	beq.n	90016f1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016fb0:	d82d      	bhi.n	9001700e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
90016fb2:	f240 605e 	movw	r0, #1630	; 0x65e
90016fb6:	4283      	cmp	r3, r0
90016fb8:	d804      	bhi.n	90016fc4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
90016fba:	f240 605d 	movw	r0, #1629	; 0x65d
90016fbe:	4283      	cmp	r3, r0
90016fc0:	d3d2      	bcc.n	90016f68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016fc2:	e7aa      	b.n	90016f1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016fc4:	f240 605f 	movw	r0, #1631	; 0x65f
90016fc8:	4283      	cmp	r3, r0
90016fca:	d0cd      	beq.n	90016f68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016fcc:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
90016fd0:	d0a3      	beq.n	90016f1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016fd2:	00cb      	lsls	r3, r1, #3
90016fd4:	0649      	lsls	r1, r1, #25
90016fd6:	f403 7080 	and.w	r0, r3, #256	; 0x100
90016fda:	7a13      	ldrb	r3, [r2, #8]
90016fdc:	ea43 0300 	orr.w	r3, r3, r0
90016fe0:	bf44      	itt	mi
90016fe2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90016fe6:	b21b      	sxthmi	r3, r3
90016fe8:	1b5d      	subs	r5, r3, r5
90016fea:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90016fee:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
90016ff2:	7b53      	ldrb	r3, [r2, #13]
90016ff4:	015b      	lsls	r3, r3, #5
90016ff6:	f403 7180 	and.w	r1, r3, #256	; 0x100
90016ffa:	7993      	ldrb	r3, [r2, #6]
90016ffc:	430b      	orrs	r3, r1
90016ffe:	2105      	movs	r1, #5
90017000:	005b      	lsls	r3, r3, #1
90017002:	fb93 f3f1 	sdiv	r3, r3, r1
90017006:	f992 1009 	ldrsb.w	r1, [r2, #9]
9001700a:	440b      	add	r3, r1
9001700c:	e756      	b.n	90016ebc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
9001700e:	f240 60e2 	movw	r0, #1762	; 0x6e2
90017012:	4283      	cmp	r3, r0
90017014:	d809      	bhi.n	9001702a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
90017016:	f240 60df 	movw	r0, #1759	; 0x6df
9001701a:	4283      	cmp	r3, r0
9001701c:	f4bf af7d 	bcs.w	90016f1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017020:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
90017024:	2b05      	cmp	r3, #5
90017026:	d8d4      	bhi.n	90016fd2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90017028:	e777      	b.n	90016f1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001702a:	f240 60e3 	movw	r0, #1763	; 0x6e3
9001702e:	4283      	cmp	r3, r0
90017030:	d09a      	beq.n	90016f68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90017032:	f240 60e4 	movw	r0, #1764	; 0x6e4
90017036:	4283      	cmp	r3, r0
90017038:	e7ca      	b.n	90016fd0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
9001703a:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
9001703e:	d22b      	bcs.n	90017098 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
90017040:	f640 00ed 	movw	r0, #2285	; 0x8ed
90017044:	4283      	cmp	r3, r0
90017046:	d28f      	bcs.n	90016f68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90017048:	f640 00e5 	movw	r0, #2277	; 0x8e5
9001704c:	4283      	cmp	r3, r0
9001704e:	d816      	bhi.n	9001707e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
90017050:	f640 00e4 	movw	r0, #2276	; 0x8e4
90017054:	4283      	cmp	r3, r0
90017056:	f4bf af60 	bcs.w	90016f1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001705a:	f240 60ec 	movw	r0, #1772	; 0x6ec
9001705e:	4283      	cmp	r3, r0
90017060:	d80a      	bhi.n	90017078 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
90017062:	f240 60eb 	movw	r0, #1771	; 0x6eb
90017066:	4283      	cmp	r3, r0
90017068:	f4bf af57 	bcs.w	90016f1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001706c:	f240 60ea 	movw	r0, #1770	; 0x6ea
90017070:	4283      	cmp	r3, r0
90017072:	f43f af79 	beq.w	90016f68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90017076:	e7ac      	b.n	90016fd2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90017078:	f240 60ed 	movw	r0, #1773	; 0x6ed
9001707c:	e7f8      	b.n	90017070 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
9001707e:	f640 00e8 	movw	r0, #2280	; 0x8e8
90017082:	4283      	cmp	r3, r0
90017084:	d802      	bhi.n	9001708c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
90017086:	f640 00e7 	movw	r0, #2279	; 0x8e7
9001708a:	e798      	b.n	90016fbe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
9001708c:	f640 00e9 	movw	r0, #2281	; 0x8e9
90017090:	4283      	cmp	r3, r0
90017092:	f47f af42 	bne.w	90016f1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017096:	e767      	b.n	90016f68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90017098:	f640 00f6 	movw	r0, #2294	; 0x8f6
9001709c:	4283      	cmp	r3, r0
9001709e:	f43f af63 	beq.w	90016f68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900170a2:	d802      	bhi.n	900170aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
900170a4:	f640 00f2 	movw	r0, #2290	; 0x8f2
900170a8:	e7f2      	b.n	90017090 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
900170aa:	f640 00fa 	movw	r0, #2298	; 0x8fa
900170ae:	4283      	cmp	r3, r0
900170b0:	d805      	bhi.n	900170be <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
900170b2:	f640 00f9 	movw	r0, #2297	; 0x8f9
900170b6:	4283      	cmp	r3, r0
900170b8:	f4ff af2f 	bcc.w	90016f1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900170bc:	e754      	b.n	90016f68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900170be:	f640 00fe 	movw	r0, #2302	; 0x8fe
900170c2:	4283      	cmp	r3, r0
900170c4:	e7af      	b.n	90017026 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
900170c6:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
900170ca:	4617      	mov	r7, r2
900170cc:	f102 0808 	add.w	r8, r2, #8
900170d0:	4666      	mov	r6, ip
900170d2:	6838      	ldr	r0, [r7, #0]
900170d4:	3708      	adds	r7, #8
900170d6:	f857 1c04 	ldr.w	r1, [r7, #-4]
900170da:	46e6      	mov	lr, ip
900170dc:	4547      	cmp	r7, r8
900170de:	e8ae 0003 	stmia.w	lr!, {r0, r1}
900170e2:	46f4      	mov	ip, lr
900170e4:	d1f5      	bne.n	900170d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
900170e6:	6838      	ldr	r0, [r7, #0]
900170e8:	f8ce 0000 	str.w	r0, [lr]
900170ec:	88b9      	ldrh	r1, [r7, #4]
900170ee:	f8ae 1004 	strh.w	r1, [lr, #4]
900170f2:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
900170f6:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
900170fa:	d009      	beq.n	90017110 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
900170fc:	7b51      	ldrb	r1, [r2, #13]
900170fe:	7992      	ldrb	r2, [r2, #6]
90017100:	0149      	lsls	r1, r1, #5
90017102:	f401 7180 	and.w	r1, r1, #256	; 0x100
90017106:	4311      	orrs	r1, r2
90017108:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
9001710c:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
90017110:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
90017114:	b2ad      	uxth	r5, r5
90017116:	d00d      	beq.n	90017134 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
90017118:	442b      	add	r3, r5
9001711a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
9001711e:	b29b      	uxth	r3, r3
90017120:	f022 0260 	bic.w	r2, r2, #96	; 0x60
90017124:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
90017128:	10db      	asrs	r3, r3, #3
9001712a:	f003 0360 	and.w	r3, r3, #96	; 0x60
9001712e:	4313      	orrs	r3, r2
90017130:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
90017134:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
90017138:	00cb      	lsls	r3, r1, #3
9001713a:	064f      	lsls	r7, r1, #25
9001713c:	f403 7280 	and.w	r2, r3, #256	; 0x100
90017140:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
90017144:	ea43 0302 	orr.w	r3, r3, r2
90017148:	bf44      	itt	mi
9001714a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001714e:	b21b      	sxthmi	r3, r3
90017150:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90017154:	1b5b      	subs	r3, r3, r5
90017156:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
9001715a:	4632      	mov	r2, r6
9001715c:	e6f9      	b.n	90016f52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
9001715e:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
90017162:	4617      	mov	r7, r2
90017164:	f102 0908 	add.w	r9, r2, #8
90017168:	4666      	mov	r6, ip
9001716a:	6838      	ldr	r0, [r7, #0]
9001716c:	3708      	adds	r7, #8
9001716e:	f857 1c04 	ldr.w	r1, [r7, #-4]
90017172:	46e0      	mov	r8, ip
90017174:	454f      	cmp	r7, r9
90017176:	e8a8 0003 	stmia.w	r8!, {r0, r1}
9001717a:	46c4      	mov	ip, r8
9001717c:	d1f5      	bne.n	9001716a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
9001717e:	6838      	ldr	r0, [r7, #0]
90017180:	f8c8 0000 	str.w	r0, [r8]
90017184:	88b9      	ldrh	r1, [r7, #4]
90017186:	f8a8 1004 	strh.w	r1, [r8, #4]
9001718a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
9001718e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
90017192:	d009      	beq.n	900171a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
90017194:	7b51      	ldrb	r1, [r2, #13]
90017196:	7992      	ldrb	r2, [r2, #6]
90017198:	0149      	lsls	r1, r1, #5
9001719a:	f401 7180 	and.w	r1, r1, #256	; 0x100
9001719e:	4311      	orrs	r1, r2
900171a0:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
900171a4:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
900171a8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
900171ac:	d00e      	beq.n	900171cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
900171ae:	eba3 030e 	sub.w	r3, r3, lr
900171b2:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
900171b6:	b29b      	uxth	r3, r3
900171b8:	f022 0260 	bic.w	r2, r2, #96	; 0x60
900171bc:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
900171c0:	10db      	asrs	r3, r3, #3
900171c2:	f003 0360 	and.w	r3, r3, #96	; 0x60
900171c6:	4313      	orrs	r3, r2
900171c8:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
900171cc:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
900171d0:	00cb      	lsls	r3, r1, #3
900171d2:	0648      	lsls	r0, r1, #25
900171d4:	f403 7280 	and.w	r2, r3, #256	; 0x100
900171d8:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
900171dc:	ea43 0302 	orr.w	r3, r3, r2
900171e0:	bf44      	itt	mi
900171e2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
900171e6:	b21b      	sxthmi	r3, r3
900171e8:	1b5d      	subs	r5, r3, r5
900171ea:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
900171ee:	e7b4      	b.n	9001715a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

900171f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
900171f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900171f4:	461e      	mov	r6, r3
900171f6:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
900171f8:	4604      	mov	r4, r0
900171fa:	4617      	mov	r7, r2
900171fc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90017200:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
90017204:	f7ed f9e0 	bl	900045c8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90017208:	4605      	mov	r5, r0
9001720a:	b918      	cbnz	r0, 90017214 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
9001720c:	6030      	str	r0, [r6, #0]
9001720e:	4628      	mov	r0, r5
90017210:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90017214:	683b      	ldr	r3, [r7, #0]
90017216:	4601      	mov	r1, r0
90017218:	4638      	mov	r0, r7
9001721a:	68db      	ldr	r3, [r3, #12]
9001721c:	4798      	blx	r3
9001721e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
90017222:	4602      	mov	r2, r0
90017224:	6030      	str	r0, [r6, #0]
90017226:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
9001722a:	d213      	bcs.n	90017254 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
9001722c:	4643      	mov	r3, r8
9001722e:	4639      	mov	r1, r7
90017230:	4620      	mov	r0, r4
90017232:	f7ff fe39 	bl	90016ea8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
90017236:	6030      	str	r0, [r6, #0]
90017238:	6833      	ldr	r3, [r6, #0]
9001723a:	b143      	cbz	r3, 9001724e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
9001723c:	7b5a      	ldrb	r2, [r3, #13]
9001723e:	7a9b      	ldrb	r3, [r3, #10]
90017240:	0052      	lsls	r2, r2, #1
90017242:	f402 7280 	and.w	r2, r2, #256	; 0x100
90017246:	4313      	orrs	r3, r2
90017248:	bf0c      	ite	eq
9001724a:	2301      	moveq	r3, #1
9001724c:	2300      	movne	r3, #0
9001724e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
90017252:	e7dc      	b.n	9001720e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
90017254:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
90017258:	b29b      	uxth	r3, r3
9001725a:	2b7f      	cmp	r3, #127	; 0x7f
9001725c:	d804      	bhi.n	90017268 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
9001725e:	4639      	mov	r1, r7
90017260:	4620      	mov	r0, r4
90017262:	f7ff fd15 	bl	90016c90 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
90017266:	e7e6      	b.n	90017236 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
90017268:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
9001726c:	2b00      	cmp	r3, #0
9001726e:	d0e3      	beq.n	90017238 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
90017270:	f640 1302 	movw	r3, #2306	; 0x902
90017274:	429d      	cmp	r5, r3
90017276:	d1df      	bne.n	90017238 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
90017278:	4601      	mov	r1, r0
9001727a:	4620      	mov	r0, r4
9001727c:	f7ff fcd8 	bl	90016c30 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
90017280:	e7d9      	b.n	90017236 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

90017282 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
90017282:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90017286:	461e      	mov	r6, r3
90017288:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
9001728a:	4604      	mov	r4, r0
9001728c:	4617      	mov	r7, r2
9001728e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90017292:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
90017296:	f7ed f997 	bl	900045c8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001729a:	4605      	mov	r5, r0
9001729c:	b918      	cbnz	r0, 900172a6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
9001729e:	6030      	str	r0, [r6, #0]
900172a0:	4628      	mov	r0, r5
900172a2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
900172a6:	683b      	ldr	r3, [r7, #0]
900172a8:	4601      	mov	r1, r0
900172aa:	4638      	mov	r0, r7
900172ac:	f8d3 9008 	ldr.w	r9, [r3, #8]
900172b0:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
900172b4:	47c8      	blx	r9
900172b6:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
900172ba:	4602      	mov	r2, r0
900172bc:	6030      	str	r0, [r6, #0]
900172be:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
900172c2:	d213      	bcs.n	900172ec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
900172c4:	4643      	mov	r3, r8
900172c6:	4639      	mov	r1, r7
900172c8:	4620      	mov	r0, r4
900172ca:	f7ff fded 	bl	90016ea8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
900172ce:	6030      	str	r0, [r6, #0]
900172d0:	6833      	ldr	r3, [r6, #0]
900172d2:	b143      	cbz	r3, 900172e6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
900172d4:	7b5a      	ldrb	r2, [r3, #13]
900172d6:	7a9b      	ldrb	r3, [r3, #10]
900172d8:	0052      	lsls	r2, r2, #1
900172da:	f402 7280 	and.w	r2, r2, #256	; 0x100
900172de:	4313      	orrs	r3, r2
900172e0:	bf0c      	ite	eq
900172e2:	2301      	moveq	r3, #1
900172e4:	2300      	movne	r3, #0
900172e6:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
900172ea:	e7d9      	b.n	900172a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
900172ec:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
900172f0:	b29b      	uxth	r3, r3
900172f2:	2b7f      	cmp	r3, #127	; 0x7f
900172f4:	d804      	bhi.n	90017300 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
900172f6:	4639      	mov	r1, r7
900172f8:	4620      	mov	r0, r4
900172fa:	f7ff fcc9 	bl	90016c90 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
900172fe:	e7e6      	b.n	900172ce <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
90017300:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
90017304:	2b00      	cmp	r3, #0
90017306:	d0e3      	beq.n	900172d0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
90017308:	f640 1302 	movw	r3, #2306	; 0x902
9001730c:	429d      	cmp	r5, r3
9001730e:	d1df      	bne.n	900172d0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
90017310:	4601      	mov	r1, r0
90017312:	4620      	mov	r0, r4
90017314:	f7ff fc8c 	bl	90016c30 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
90017318:	e7d9      	b.n	900172ce <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

9001731a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
9001731a:	b510      	push	{r4, lr}
9001731c:	4604      	mov	r4, r0
9001731e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
90017322:	8f23      	ldrh	r3, [r4, #56]	; 0x38
90017324:	b1e1      	cbz	r1, 90017360 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
90017326:	2b0a      	cmp	r3, #10
90017328:	d02d      	beq.n	90017386 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
9001732a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
9001732c:	3901      	subs	r1, #1
9001732e:	eb04 0042 	add.w	r0, r4, r2, lsl #1
90017332:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
90017334:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
90017338:	1c51      	adds	r1, r2, #1
9001733a:	b289      	uxth	r1, r1
9001733c:	2901      	cmp	r1, #1
9001733e:	bf8a      	itet	hi
90017340:	f102 32ff 	addhi.w	r2, r2, #4294967295
90017344:	87e1      	strhls	r1, [r4, #62]	; 0x3e
90017346:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
90017348:	1c5a      	adds	r2, r3, #1
9001734a:	8722      	strh	r2, [r4, #56]	; 0x38
9001734c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
9001734e:	4413      	add	r3, r2
90017350:	b29b      	uxth	r3, r3
90017352:	2b09      	cmp	r3, #9
90017354:	bf88      	it	hi
90017356:	3b0a      	subhi	r3, #10
90017358:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001735c:	8458      	strh	r0, [r3, #34]	; 0x22
9001735e:	e7de      	b.n	9001731e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
90017360:	8f23      	ldrh	r3, [r4, #56]	; 0x38
90017362:	2b0a      	cmp	r3, #10
90017364:	d00f      	beq.n	90017386 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
90017366:	4620      	mov	r0, r4
90017368:	f7ff fc10 	bl	90016b8c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
9001736c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
9001736e:	1c5a      	adds	r2, r3, #1
90017370:	8722      	strh	r2, [r4, #56]	; 0x38
90017372:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
90017374:	4413      	add	r3, r2
90017376:	b29b      	uxth	r3, r3
90017378:	2b09      	cmp	r3, #9
9001737a:	bf88      	it	hi
9001737c:	3b0a      	subhi	r3, #10
9001737e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90017382:	8458      	strh	r0, [r3, #34]	; 0x22
90017384:	e7ec      	b.n	90017360 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
90017386:	bd10      	pop	{r4, pc}

90017388 <_ZN8touchgfx12TextProvider11getNextCharEv>:
90017388:	b538      	push	{r3, r4, r5, lr}
9001738a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
9001738c:	4604      	mov	r4, r0
9001738e:	eb00 0243 	add.w	r2, r0, r3, lsl #1
90017392:	8c55      	ldrh	r5, [r2, #34]	; 0x22
90017394:	8f02      	ldrh	r2, [r0, #56]	; 0x38
90017396:	3a01      	subs	r2, #1
90017398:	8702      	strh	r2, [r0, #56]	; 0x38
9001739a:	1c5a      	adds	r2, r3, #1
9001739c:	b292      	uxth	r2, r2
9001739e:	2a09      	cmp	r2, #9
900173a0:	bf8a      	itet	hi
900173a2:	3b09      	subhi	r3, #9
900173a4:	86c2      	strhls	r2, [r0, #54]	; 0x36
900173a6:	86c3      	strhhi	r3, [r0, #54]	; 0x36
900173a8:	f7ff ffb7 	bl	9001731a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
900173ac:	8c23      	ldrh	r3, [r4, #32]
900173ae:	2b01      	cmp	r3, #1
900173b0:	bf9c      	itt	ls
900173b2:	3301      	addls	r3, #1
900173b4:	8423      	strhls	r3, [r4, #32]
900173b6:	8be3      	ldrh	r3, [r4, #30]
900173b8:	b90b      	cbnz	r3, 900173be <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
900173ba:	2302      	movs	r3, #2
900173bc:	83e3      	strh	r3, [r4, #30]
900173be:	8be3      	ldrh	r3, [r4, #30]
900173c0:	4628      	mov	r0, r5
900173c2:	3b01      	subs	r3, #1
900173c4:	b29b      	uxth	r3, r3
900173c6:	83e3      	strh	r3, [r4, #30]
900173c8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
900173cc:	8365      	strh	r5, [r4, #26]
900173ce:	bd38      	pop	{r3, r4, r5, pc}

900173d0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
900173d0:	428a      	cmp	r2, r1
900173d2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900173d6:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
900173d8:	d932      	bls.n	90017440 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
900173da:	8f05      	ldrh	r5, [r0, #56]	; 0x38
900173dc:	1a54      	subs	r4, r2, r1
900173de:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
900173e2:	19ee      	adds	r6, r5, r7
900173e4:	fa1f fe84 	uxth.w	lr, r4
900173e8:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
900173ec:	3e01      	subs	r6, #1
900173ee:	b2b4      	uxth	r4, r6
900173f0:	eba4 090e 	sub.w	r9, r4, lr
900173f4:	fa1f f989 	uxth.w	r9, r9
900173f8:	2c09      	cmp	r4, #9
900173fa:	4626      	mov	r6, r4
900173fc:	bf88      	it	hi
900173fe:	f1a4 060a 	subhi.w	r6, r4, #10
90017402:	f1bc 0f00 	cmp.w	ip, #0
90017406:	f104 34ff 	add.w	r4, r4, #4294967295
9001740a:	bf08      	it	eq
9001740c:	f04f 0c02 	moveq.w	ip, #2
90017410:	eb00 0646 	add.w	r6, r0, r6, lsl #1
90017414:	b2a4      	uxth	r4, r4
90017416:	f10c 3cff 	add.w	ip, ip, #4294967295
9001741a:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
9001741e:	454c      	cmp	r4, r9
90017420:	fa1f fc8c 	uxth.w	ip, ip
90017424:	eb00 064c 	add.w	r6, r0, ip, lsl #1
90017428:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
9001742c:	d1e4      	bne.n	900173f8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
9001742e:	eba5 050e 	sub.w	r5, r5, lr
90017432:	eb0e 0408 	add.w	r4, lr, r8
90017436:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
9001743a:	8705      	strh	r5, [r0, #56]	; 0x38
9001743c:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
90017440:	8f04      	ldrh	r4, [r0, #56]	; 0x38
90017442:	250a      	movs	r5, #10
90017444:	1a64      	subs	r4, r4, r1
90017446:	4439      	add	r1, r7
90017448:	b289      	uxth	r1, r1
9001744a:	8704      	strh	r4, [r0, #56]	; 0x38
9001744c:	2909      	cmp	r1, #9
9001744e:	bf88      	it	hi
90017450:	390a      	subhi	r1, #10
90017452:	86c1      	strh	r1, [r0, #54]	; 0x36
90017454:	b18a      	cbz	r2, 9001747a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
90017456:	8f01      	ldrh	r1, [r0, #56]	; 0x38
90017458:	3a01      	subs	r2, #1
9001745a:	3101      	adds	r1, #1
9001745c:	b292      	uxth	r2, r2
9001745e:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
90017462:	8701      	strh	r1, [r0, #56]	; 0x38
90017464:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
90017466:	b901      	cbnz	r1, 9001746a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
90017468:	86c5      	strh	r5, [r0, #54]	; 0x36
9001746a:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
9001746c:	3901      	subs	r1, #1
9001746e:	b289      	uxth	r1, r1
90017470:	86c1      	strh	r1, [r0, #54]	; 0x36
90017472:	eb00 0141 	add.w	r1, r0, r1, lsl #1
90017476:	844c      	strh	r4, [r1, #34]	; 0x22
90017478:	e7ec      	b.n	90017454 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
9001747a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001747e:	f7ff bf4c 	b.w	9001731a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

90017482 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
90017482:	b570      	push	{r4, r5, r6, lr}
90017484:	2500      	movs	r5, #0
90017486:	4295      	cmp	r5, r2
90017488:	d011      	beq.n	900174ae <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
9001748a:	8bc4      	ldrh	r4, [r0, #30]
9001748c:	f831 6b02 	ldrh.w	r6, [r1], #2
90017490:	4414      	add	r4, r2
90017492:	3c01      	subs	r4, #1
90017494:	1b64      	subs	r4, r4, r5
90017496:	b2a4      	uxth	r4, r4
90017498:	2c01      	cmp	r4, #1
9001749a:	bf88      	it	hi
9001749c:	3c02      	subhi	r4, #2
9001749e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
900174a2:	8b64      	ldrh	r4, [r4, #26]
900174a4:	42b4      	cmp	r4, r6
900174a6:	d117      	bne.n	900174d8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
900174a8:	3501      	adds	r5, #1
900174aa:	b2ad      	uxth	r5, r5
900174ac:	e7eb      	b.n	90017486 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
900174ae:	f8bd 2010 	ldrh.w	r2, [sp, #16]
900174b2:	2400      	movs	r4, #0
900174b4:	4413      	add	r3, r2
900174b6:	b2a2      	uxth	r2, r4
900174b8:	429a      	cmp	r2, r3
900174ba:	da0f      	bge.n	900174dc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
900174bc:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
900174be:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
900174c2:	3401      	adds	r4, #1
900174c4:	4432      	add	r2, r6
900174c6:	b292      	uxth	r2, r2
900174c8:	2a09      	cmp	r2, #9
900174ca:	bf88      	it	hi
900174cc:	3a0a      	subhi	r2, #10
900174ce:	eb00 0242 	add.w	r2, r0, r2, lsl #1
900174d2:	8c52      	ldrh	r2, [r2, #34]	; 0x22
900174d4:	42aa      	cmp	r2, r5
900174d6:	d0ee      	beq.n	900174b6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
900174d8:	2000      	movs	r0, #0
900174da:	bd70      	pop	{r4, r5, r6, pc}
900174dc:	2001      	movs	r0, #1
900174de:	e7fc      	b.n	900174da <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

900174e0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
900174e0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
900174e4:	4605      	mov	r5, r0
900174e6:	4616      	mov	r6, r2
900174e8:	1c8c      	adds	r4, r1, #2
900174ea:	8809      	ldrh	r1, [r1, #0]
900174ec:	ea4f 3a11 	mov.w	sl, r1, lsr #12
900174f0:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
900174f4:	42b3      	cmp	r3, r6
900174f6:	d124      	bne.n	90017542 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
900174f8:	f3c1 2903 	ubfx	r9, r1, #8, #4
900174fc:	f3c1 1803 	ubfx	r8, r1, #4, #4
90017500:	f001 070f 	and.w	r7, r1, #15
90017504:	4652      	mov	r2, sl
90017506:	f8cd 8000 	str.w	r8, [sp]
9001750a:	464b      	mov	r3, r9
9001750c:	4621      	mov	r1, r4
9001750e:	4628      	mov	r0, r5
90017510:	f7ff ffb7 	bl	90017482 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
90017514:	4683      	mov	fp, r0
90017516:	b168      	cbz	r0, 90017534 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
90017518:	eb0a 0109 	add.w	r1, sl, r9
9001751c:	463a      	mov	r2, r7
9001751e:	4628      	mov	r0, r5
90017520:	4441      	add	r1, r8
90017522:	eb04 0341 	add.w	r3, r4, r1, lsl #1
90017526:	4649      	mov	r1, r9
90017528:	f7ff ff52 	bl	900173d0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
9001752c:	4658      	mov	r0, fp
9001752e:	b003      	add	sp, #12
90017530:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017534:	eb07 010a 	add.w	r1, r7, sl
90017538:	4449      	add	r1, r9
9001753a:	4441      	add	r1, r8
9001753c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
90017540:	e7d2      	b.n	900174e8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
90017542:	f04f 0b00 	mov.w	fp, #0
90017546:	e7f1      	b.n	9001752c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

90017548 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
90017548:	b570      	push	{r4, r5, r6, lr}
9001754a:	8810      	ldrh	r0, [r2, #0]
9001754c:	4298      	cmp	r0, r3
9001754e:	d817      	bhi.n	90017580 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90017550:	1e48      	subs	r0, r1, #1
90017552:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
90017556:	4298      	cmp	r0, r3
90017558:	d312      	bcc.n	90017580 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001755a:	2400      	movs	r4, #0
9001755c:	428c      	cmp	r4, r1
9001755e:	d20f      	bcs.n	90017580 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90017560:	1860      	adds	r0, r4, r1
90017562:	1040      	asrs	r0, r0, #1
90017564:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
90017568:	0085      	lsls	r5, r0, #2
9001756a:	42b3      	cmp	r3, r6
9001756c:	d902      	bls.n	90017574 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
9001756e:	3001      	adds	r0, #1
90017570:	b284      	uxth	r4, r0
90017572:	e7f3      	b.n	9001755c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
90017574:	d201      	bcs.n	9001757a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
90017576:	b281      	uxth	r1, r0
90017578:	e7f0      	b.n	9001755c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
9001757a:	442a      	add	r2, r5
9001757c:	8850      	ldrh	r0, [r2, #2]
9001757e:	bd70      	pop	{r4, r5, r6, pc}
90017580:	2000      	movs	r0, #0
90017582:	e7fc      	b.n	9001757e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

90017584 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
90017584:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90017588:	6c45      	ldr	r5, [r0, #68]	; 0x44
9001758a:	4604      	mov	r4, r0
9001758c:	260b      	movs	r6, #11
9001758e:	886f      	ldrh	r7, [r5, #2]
90017590:	087f      	lsrs	r7, r7, #1
90017592:	3e01      	subs	r6, #1
90017594:	d013      	beq.n	900175be <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
90017596:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
90017598:	462a      	mov	r2, r5
9001759a:	4639      	mov	r1, r7
9001759c:	4620      	mov	r0, r4
9001759e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900175a2:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
900175a6:	4643      	mov	r3, r8
900175a8:	f7ff ffce 	bl	90017548 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
900175ac:	b138      	cbz	r0, 900175be <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
900175ae:	eb05 0140 	add.w	r1, r5, r0, lsl #1
900175b2:	4642      	mov	r2, r8
900175b4:	4620      	mov	r0, r4
900175b6:	f7ff ff93 	bl	900174e0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
900175ba:	2800      	cmp	r0, #0
900175bc:	d1e9      	bne.n	90017592 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
900175be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

900175c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
900175c4:	b570      	push	{r4, r5, r6, lr}
900175c6:	694a      	ldr	r2, [r1, #20]
900175c8:	6a8d      	ldr	r5, [r1, #40]	; 0x28
900175ca:	684b      	ldr	r3, [r1, #4]
900175cc:	1b54      	subs	r4, r2, r5
900175ce:	6ace      	ldr	r6, [r1, #44]	; 0x2c
900175d0:	f000 8106 	beq.w	900177e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
900175d4:	1b9b      	subs	r3, r3, r6
900175d6:	d003      	beq.n	900175e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
900175d8:	4363      	muls	r3, r4
900175da:	2210      	movs	r2, #16
900175dc:	fb93 f3f2 	sdiv	r3, r3, r2
900175e0:	680c      	ldr	r4, [r1, #0]
900175e2:	698a      	ldr	r2, [r1, #24]
900175e4:	1b65      	subs	r5, r4, r5
900175e6:	f000 80fd 	beq.w	900177e4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
900175ea:	1b92      	subs	r2, r2, r6
900175ec:	d003      	beq.n	900175f6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
900175ee:	436a      	muls	r2, r5
900175f0:	2410      	movs	r4, #16
900175f2:	fb92 f2f4 	sdiv	r2, r2, r4
900175f6:	1a9b      	subs	r3, r3, r2
900175f8:	ed9f 4a89 	vldr	s8, [pc, #548]	; 90017820 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
900175fc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90017600:	460a      	mov	r2, r1
90017602:	ee07 3a90 	vmov	s15, r3
90017606:	f100 040c 	add.w	r4, r0, #12
9001760a:	4603      	mov	r3, r0
9001760c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90017610:	ee67 7a84 	vmul.f32	s15, s15, s8
90017614:	ee87 3a27 	vdiv.f32	s6, s14, s15
90017618:	eeb1 6a43 	vneg.f32	s12, s6
9001761c:	edd2 7a02 	vldr	s15, [r2, #8]
90017620:	3214      	adds	r2, #20
90017622:	eec7 6a27 	vdiv.f32	s13, s14, s15
90017626:	ece3 6a01 	vstmia	r3!, {s13}
9001762a:	429c      	cmp	r4, r3
9001762c:	ed52 7a02 	vldr	s15, [r2, #-8]
90017630:	ee67 7aa6 	vmul.f32	s15, s15, s13
90017634:	edc3 7a02 	vstr	s15, [r3, #8]
90017638:	ed52 7a01 	vldr	s15, [r2, #-4]
9001763c:	ee67 7aa6 	vmul.f32	s15, s15, s13
90017640:	edc3 7a05 	vstr	s15, [r3, #20]
90017644:	d1ea      	bne.n	9001761c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
90017646:	6aca      	ldr	r2, [r1, #44]	; 0x2c
90017648:	698b      	ldr	r3, [r1, #24]
9001764a:	edd0 4a02 	vldr	s9, [r0, #8]
9001764e:	1a9b      	subs	r3, r3, r2
90017650:	edd0 3a00 	vldr	s7, [r0]
90017654:	edd0 6a01 	vldr	s13, [r0, #4]
90017658:	ee07 3a90 	vmov	s15, r3
9001765c:	684b      	ldr	r3, [r1, #4]
9001765e:	ee76 6ae4 	vsub.f32	s13, s13, s9
90017662:	ed90 5a05 	vldr	s10, [r0, #20]
90017666:	1a9b      	subs	r3, r3, r2
90017668:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001766c:	ee73 4ae4 	vsub.f32	s9, s7, s9
90017670:	ed90 2a03 	vldr	s4, [r0, #12]
90017674:	ee07 3a10 	vmov	s14, r3
90017678:	edd0 5a04 	vldr	s11, [r0, #16]
9001767c:	ee67 7a84 	vmul.f32	s15, s15, s8
90017680:	ed90 1a07 	vldr	s2, [r0, #28]
90017684:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017688:	edd0 2a06 	vldr	s5, [r0, #24]
9001768c:	ee75 5ac5 	vsub.f32	s11, s11, s10
90017690:	ee64 7ae7 	vnmul.f32	s15, s9, s15
90017694:	ee27 7a04 	vmul.f32	s14, s14, s8
90017698:	ee32 5a45 	vsub.f32	s10, s4, s10
9001769c:	eee6 7a87 	vfma.f32	s15, s13, s14
900176a0:	ee67 7a83 	vmul.f32	s15, s15, s6
900176a4:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
900176a8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
900176aa:	694a      	ldr	r2, [r1, #20]
900176ac:	1b13      	subs	r3, r2, r4
900176ae:	ee07 3a10 	vmov	s14, r3
900176b2:	680b      	ldr	r3, [r1, #0]
900176b4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900176b8:	1b1b      	subs	r3, r3, r4
900176ba:	ee27 7a04 	vmul.f32	s14, s14, s8
900176be:	ee64 4ac7 	vnmul.f32	s9, s9, s14
900176c2:	ee07 3a10 	vmov	s14, r3
900176c6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900176ca:	ee27 7a04 	vmul.f32	s14, s14, s8
900176ce:	eee6 4a87 	vfma.f32	s9, s13, s14
900176d2:	ee64 4a86 	vmul.f32	s9, s9, s12
900176d6:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
900176da:	6aca      	ldr	r2, [r1, #44]	; 0x2c
900176dc:	698b      	ldr	r3, [r1, #24]
900176de:	1a9b      	subs	r3, r3, r2
900176e0:	ee06 3a90 	vmov	s13, r3
900176e4:	684b      	ldr	r3, [r1, #4]
900176e6:	1a9b      	subs	r3, r3, r2
900176e8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
900176ec:	ee07 3a10 	vmov	s14, r3
900176f0:	ee66 6a84 	vmul.f32	s13, s13, s8
900176f4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900176f8:	ee65 6a66 	vnmul.f32	s13, s10, s13
900176fc:	ee27 7a04 	vmul.f32	s14, s14, s8
90017700:	eee5 6a87 	vfma.f32	s13, s11, s14
90017704:	ee66 6a83 	vmul.f32	s13, s13, s6
90017708:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
9001770c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
9001770e:	694a      	ldr	r2, [r1, #20]
90017710:	1b13      	subs	r3, r2, r4
90017712:	ee07 3a10 	vmov	s14, r3
90017716:	680b      	ldr	r3, [r1, #0]
90017718:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001771c:	1b1b      	subs	r3, r3, r4
9001771e:	ee27 7a04 	vmul.f32	s14, s14, s8
90017722:	ee25 5a47 	vnmul.f32	s10, s10, s14
90017726:	ee07 3a10 	vmov	s14, r3
9001772a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001772e:	ee27 7a04 	vmul.f32	s14, s14, s8
90017732:	eea5 5a87 	vfma.f32	s10, s11, s14
90017736:	edd0 5a08 	vldr	s11, [r0, #32]
9001773a:	ee31 1a65 	vsub.f32	s2, s2, s11
9001773e:	ee72 5ae5 	vsub.f32	s11, s5, s11
90017742:	ee25 5a06 	vmul.f32	s10, s10, s12
90017746:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
9001774a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9001774c:	698b      	ldr	r3, [r1, #24]
9001774e:	1a9b      	subs	r3, r3, r2
90017750:	ee07 3a10 	vmov	s14, r3
90017754:	684b      	ldr	r3, [r1, #4]
90017756:	1a9b      	subs	r3, r3, r2
90017758:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001775c:	ee01 3a90 	vmov	s3, r3
90017760:	ee27 7a04 	vmul.f32	s14, s14, s8
90017764:	eef8 1ae1 	vcvt.f32.s32	s3, s3
90017768:	ee25 7ac7 	vnmul.f32	s14, s11, s14
9001776c:	ee61 1a84 	vmul.f32	s3, s3, s8
90017770:	eea1 7a21 	vfma.f32	s14, s2, s3
90017774:	ee27 7a03 	vmul.f32	s14, s14, s6
90017778:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
9001777c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
9001777e:	694a      	ldr	r2, [r1, #20]
90017780:	1b13      	subs	r3, r2, r4
90017782:	ee03 3a10 	vmov	s6, r3
90017786:	680b      	ldr	r3, [r1, #0]
90017788:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001778c:	1b1b      	subs	r3, r3, r4
9001778e:	ee23 3a04 	vmul.f32	s6, s6, s8
90017792:	ee65 5ac3 	vnmul.f32	s11, s11, s6
90017796:	ee03 3a10 	vmov	s6, r3
9001779a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001779e:	ee23 4a04 	vmul.f32	s8, s6, s8
900177a2:	eee1 5a04 	vfma.f32	s11, s2, s8
900177a6:	ee25 6a86 	vmul.f32	s12, s11, s12
900177aa:	ee62 5a67 	vnmul.f32	s11, s4, s15
900177ae:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
900177b2:	eee3 5aa6 	vfma.f32	s11, s7, s13
900177b6:	eef5 5ac0 	vcmpe.f32	s11, #0.0
900177ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900177be:	dd13      	ble.n	900177e8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
900177c0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
900177c4:	ee62 7ae7 	vnmul.f32	s15, s5, s15
900177c8:	63c3      	str	r3, [r0, #60]	; 0x3c
900177ca:	eee3 7a87 	vfma.f32	s15, s7, s14
900177ce:	eef5 7ac0 	vcmpe.f32	s15, #0.0
900177d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900177d6:	dd15      	ble.n	90017804 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
900177d8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
900177dc:	6403      	str	r3, [r0, #64]	; 0x40
900177de:	bd70      	pop	{r4, r5, r6, pc}
900177e0:	4623      	mov	r3, r4
900177e2:	e6fd      	b.n	900175e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
900177e4:	462a      	mov	r2, r5
900177e6:	e706      	b.n	900175f6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
900177e8:	d502      	bpl.n	900177f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
900177ea:	f647 73ff 	movw	r3, #32767	; 0x7fff
900177ee:	e7e9      	b.n	900177c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
900177f0:	ee22 2a64 	vnmul.f32	s4, s4, s9
900177f4:	eea3 2a85 	vfma.f32	s4, s7, s10
900177f8:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
900177fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90017800:	dade      	bge.n	900177c0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
90017802:	e7f2      	b.n	900177ea <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
90017804:	d502      	bpl.n	9001780c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
90017806:	f647 73ff 	movw	r3, #32767	; 0x7fff
9001780a:	e7e7      	b.n	900177dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
9001780c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
90017810:	eee3 4a86 	vfma.f32	s9, s7, s12
90017814:	eef5 4ac0 	vcmpe.f32	s9, #0.0
90017818:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001781c:	dadc      	bge.n	900177d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
9001781e:	e7f2      	b.n	90017806 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
90017820:	3d800000 	.word	0x3d800000

90017824 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
90017824:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90017828:	2714      	movs	r7, #20
9001782a:	435f      	muls	r7, r3
9001782c:	eb02 0c07 	add.w	ip, r2, r7
90017830:	f8dc 5004 	ldr.w	r5, [ip, #4]
90017834:	f115 0e0f 	adds.w	lr, r5, #15
90017838:	f100 80a2 	bmi.w	90017980 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
9001783c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
90017840:	9c08      	ldr	r4, [sp, #32]
90017842:	2614      	movs	r6, #20
90017844:	f8c0 e014 	str.w	lr, [r0, #20]
90017848:	4366      	muls	r6, r4
9001784a:	eb02 0806 	add.w	r8, r2, r6
9001784e:	f8d8 5004 	ldr.w	r5, [r8, #4]
90017852:	f115 040f 	adds.w	r4, r5, #15
90017856:	f100 809f 	bmi.w	90017998 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
9001785a:	1124      	asrs	r4, r4, #4
9001785c:	eba4 040e 	sub.w	r4, r4, lr
90017860:	6184      	str	r4, [r0, #24]
90017862:	2c00      	cmp	r4, #0
90017864:	f000 808a 	beq.w	9001797c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
90017868:	f8dc 9004 	ldr.w	r9, [ip, #4]
9001786c:	f8d8 4004 	ldr.w	r4, [r8, #4]
90017870:	5995      	ldr	r5, [r2, r6]
90017872:	eba4 0809 	sub.w	r8, r4, r9
90017876:	59d4      	ldr	r4, [r2, r7]
90017878:	eba5 0a04 	sub.w	sl, r5, r4
9001787c:	ea4f 1608 	mov.w	r6, r8, lsl #4
90017880:	ea4f 150a 	mov.w	r5, sl, lsl #4
90017884:	fb0e fe05 	mul.w	lr, lr, r5
90017888:	fb0a ee19 	mls	lr, sl, r9, lr
9001788c:	fb08 e404 	mla	r4, r8, r4, lr
90017890:	3c01      	subs	r4, #1
90017892:	19a4      	adds	r4, r4, r6
90017894:	f100 808c 	bmi.w	900179b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
90017898:	fb94 fef6 	sdiv	lr, r4, r6
9001789c:	fb06 441e 	mls	r4, r6, lr, r4
900178a0:	f8c0 e000 	str.w	lr, [r0]
900178a4:	6104      	str	r4, [r0, #16]
900178a6:	2d00      	cmp	r5, #0
900178a8:	f2c0 8095 	blt.w	900179d6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
900178ac:	fb95 f4f6 	sdiv	r4, r5, r6
900178b0:	fb06 5514 	mls	r5, r6, r4, r5
900178b4:	6044      	str	r4, [r0, #4]
900178b6:	6085      	str	r5, [r0, #8]
900178b8:	60c6      	str	r6, [r0, #12]
900178ba:	eb01 0383 	add.w	r3, r1, r3, lsl #2
900178be:	f8dc 4004 	ldr.w	r4, [ip, #4]
900178c2:	6945      	ldr	r5, [r0, #20]
900178c4:	59d2      	ldr	r2, [r2, r7]
900178c6:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
900178ca:	eddf 6a4b 	vldr	s13, [pc, #300]	; 900179f8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
900178ce:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
900178d2:	ee07 4a10 	vmov	s14, r4
900178d6:	6804      	ldr	r4, [r0, #0]
900178d8:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
900178dc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900178e0:	ee07 2a90 	vmov	s15, r2
900178e4:	ee27 7a26 	vmul.f32	s14, s14, s13
900178e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900178ec:	ee67 7aa6 	vmul.f32	s15, s15, s13
900178f0:	edd3 6a00 	vldr	s13, [r3]
900178f4:	eee6 6a07 	vfma.f32	s13, s12, s14
900178f8:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
900178fc:	eee6 6a27 	vfma.f32	s13, s12, s15
90017900:	edc0 6a07 	vstr	s13, [r0, #28]
90017904:	edd0 6a01 	vldr	s13, [r0, #4]
90017908:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
9001790c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90017910:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
90017914:	eea6 6aa5 	vfma.f32	s12, s13, s11
90017918:	ed80 6a08 	vstr	s12, [r0, #32]
9001791c:	6a4a      	ldr	r2, [r1, #36]	; 0x24
9001791e:	6242      	str	r2, [r0, #36]	; 0x24
90017920:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
90017924:	ed93 6a03 	vldr	s12, [r3, #12]
90017928:	eea5 6a87 	vfma.f32	s12, s11, s14
9001792c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
90017930:	eea5 6aa7 	vfma.f32	s12, s11, s15
90017934:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
90017938:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
9001793c:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
90017940:	eea6 6aa5 	vfma.f32	s12, s13, s11
90017944:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
90017948:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9001794a:	6302      	str	r2, [r0, #48]	; 0x30
9001794c:	ed93 6a06 	vldr	s12, [r3, #24]
90017950:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
90017954:	eea5 6a87 	vfma.f32	s12, s11, s14
90017958:	eeb0 7a46 	vmov.f32	s14, s12
9001795c:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
90017960:	eea6 7a27 	vfma.f32	s14, s12, s15
90017964:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
90017968:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
9001796c:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
90017970:	eee6 7a87 	vfma.f32	s15, s13, s14
90017974:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
90017978:	6b4b      	ldr	r3, [r1, #52]	; 0x34
9001797a:	63c3      	str	r3, [r0, #60]	; 0x3c
9001797c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90017980:	2410      	movs	r4, #16
90017982:	f1c5 0501 	rsb	r5, r5, #1
90017986:	fb9e fef4 	sdiv	lr, lr, r4
9001798a:	f015 050f 	ands.w	r5, r5, #15
9001798e:	bf18      	it	ne
90017990:	2501      	movne	r5, #1
90017992:	ebae 0e05 	sub.w	lr, lr, r5
90017996:	e753      	b.n	90017840 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
90017998:	f04f 0910 	mov.w	r9, #16
9001799c:	f1c5 0501 	rsb	r5, r5, #1
900179a0:	fb94 f4f9 	sdiv	r4, r4, r9
900179a4:	f015 050f 	ands.w	r5, r5, #15
900179a8:	bf18      	it	ne
900179aa:	2501      	movne	r5, #1
900179ac:	1b64      	subs	r4, r4, r5
900179ae:	e755      	b.n	9001785c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
900179b0:	4264      	negs	r4, r4
900179b2:	fb94 fef6 	sdiv	lr, r4, r6
900179b6:	f1ce 0800 	rsb	r8, lr, #0
900179ba:	fb06 441e 	mls	r4, r6, lr, r4
900179be:	f8c0 8000 	str.w	r8, [r0]
900179c2:	6104      	str	r4, [r0, #16]
900179c4:	2c00      	cmp	r4, #0
900179c6:	f43f af6e 	beq.w	900178a6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
900179ca:	ea6f 0e0e 	mvn.w	lr, lr
900179ce:	1b34      	subs	r4, r6, r4
900179d0:	f8c0 e000 	str.w	lr, [r0]
900179d4:	e766      	b.n	900178a4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
900179d6:	426d      	negs	r5, r5
900179d8:	fb95 f4f6 	sdiv	r4, r5, r6
900179dc:	f1c4 0e00 	rsb	lr, r4, #0
900179e0:	fb06 5514 	mls	r5, r6, r4, r5
900179e4:	f8c0 e004 	str.w	lr, [r0, #4]
900179e8:	6085      	str	r5, [r0, #8]
900179ea:	2d00      	cmp	r5, #0
900179ec:	f43f af64 	beq.w	900178b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
900179f0:	43e4      	mvns	r4, r4
900179f2:	1b75      	subs	r5, r6, r5
900179f4:	6044      	str	r4, [r0, #4]
900179f6:	e75e      	b.n	900178b6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
900179f8:	3d800000 	.word	0x3d800000

900179fc <_ZN8touchgfx7Unicode6strlenEPKt>:
900179fc:	4602      	mov	r2, r0
900179fe:	b148      	cbz	r0, 90017a14 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
90017a00:	2300      	movs	r3, #0
90017a02:	b298      	uxth	r0, r3
90017a04:	3301      	adds	r3, #1
90017a06:	eb02 0143 	add.w	r1, r2, r3, lsl #1
90017a0a:	f831 1c02 	ldrh.w	r1, [r1, #-2]
90017a0e:	2900      	cmp	r1, #0
90017a10:	d1f7      	bne.n	90017a02 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
90017a12:	4770      	bx	lr
90017a14:	4770      	bx	lr

90017a16 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
90017a16:	b530      	push	{r4, r5, lr}
90017a18:	4604      	mov	r4, r0
90017a1a:	b159      	cbz	r1, 90017a34 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
90017a1c:	b148      	cbz	r0, 90017a32 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
90017a1e:	2300      	movs	r3, #0
90017a20:	b298      	uxth	r0, r3
90017a22:	4282      	cmp	r2, r0
90017a24:	d905      	bls.n	90017a32 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
90017a26:	5ccd      	ldrb	r5, [r1, r3]
90017a28:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
90017a2c:	3301      	adds	r3, #1
90017a2e:	2d00      	cmp	r5, #0
90017a30:	d1f6      	bne.n	90017a20 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
90017a32:	bd30      	pop	{r4, r5, pc}
90017a34:	4608      	mov	r0, r1
90017a36:	e7fc      	b.n	90017a32 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

90017a38 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
90017a38:	b5f0      	push	{r4, r5, r6, r7, lr}
90017a3a:	b08b      	sub	sp, #44	; 0x2c
90017a3c:	468c      	mov	ip, r1
90017a3e:	4604      	mov	r4, r0
90017a40:	2100      	movs	r1, #0
90017a42:	261f      	movs	r6, #31
90017a44:	af01      	add	r7, sp, #4
90017a46:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
90017a4a:	1e71      	subs	r1, r6, #1
90017a4c:	fb94 fef3 	sdiv	lr, r4, r3
90017a50:	fb03 441e 	mls	r4, r3, lr, r4
90017a54:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
90017a58:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
90017a5c:	b2ec      	uxtb	r4, r5
90017a5e:	2d09      	cmp	r5, #9
90017a60:	bfd4      	ite	le
90017a62:	3430      	addle	r4, #48	; 0x30
90017a64:	3457      	addgt	r4, #87	; 0x57
90017a66:	b2e4      	uxtb	r4, r4
90017a68:	55bc      	strb	r4, [r7, r6]
90017a6a:	4674      	mov	r4, lr
90017a6c:	b974      	cbnz	r4, 90017a8c <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
90017a6e:	2800      	cmp	r0, #0
90017a70:	da05      	bge.n	90017a7e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
90017a72:	ab0a      	add	r3, sp, #40	; 0x28
90017a74:	4419      	add	r1, r3
90017a76:	232d      	movs	r3, #45	; 0x2d
90017a78:	f801 3c24 	strb.w	r3, [r1, #-36]
90017a7c:	1eb1      	subs	r1, r6, #2
90017a7e:	3101      	adds	r1, #1
90017a80:	4660      	mov	r0, ip
90017a82:	4439      	add	r1, r7
90017a84:	f7ff ffc7 	bl	90017a16 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
90017a88:	b00b      	add	sp, #44	; 0x2c
90017a8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
90017a8c:	460e      	mov	r6, r1
90017a8e:	e7dc      	b.n	90017a4a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

90017a90 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
90017a90:	b5f0      	push	{r4, r5, r6, r7, lr}
90017a92:	468c      	mov	ip, r1
90017a94:	b08b      	sub	sp, #44	; 0x2c
90017a96:	2100      	movs	r1, #0
90017a98:	ae01      	add	r6, sp, #4
90017a9a:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
90017a9e:	211f      	movs	r1, #31
90017aa0:	fbb0 f7f3 	udiv	r7, r0, r3
90017aa4:	fb03 0517 	mls	r5, r3, r7, r0
90017aa8:	4638      	mov	r0, r7
90017aaa:	b2ec      	uxtb	r4, r5
90017aac:	2d09      	cmp	r5, #9
90017aae:	bfd4      	ite	le
90017ab0:	3430      	addle	r4, #48	; 0x30
90017ab2:	3457      	addgt	r4, #87	; 0x57
90017ab4:	b2e4      	uxtb	r4, r4
90017ab6:	558c      	strb	r4, [r1, r6]
90017ab8:	1e4c      	subs	r4, r1, #1
90017aba:	b92f      	cbnz	r7, 90017ac8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
90017abc:	4431      	add	r1, r6
90017abe:	4660      	mov	r0, ip
90017ac0:	f7ff ffa9 	bl	90017a16 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
90017ac4:	b00b      	add	sp, #44	; 0x2c
90017ac6:	bdf0      	pop	{r4, r5, r6, r7, pc}
90017ac8:	4621      	mov	r1, r4
90017aca:	e7e9      	b.n	90017aa0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

90017acc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
90017acc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017ad0:	b085      	sub	sp, #20
90017ad2:	4691      	mov	r9, r2
90017ad4:	6802      	ldr	r2, [r0, #0]
90017ad6:	4688      	mov	r8, r1
90017ad8:	461c      	mov	r4, r3
90017ada:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
90017ade:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
90017ae2:	4683      	mov	fp, r0
90017ae4:	4610      	mov	r0, r2
90017ae6:	9103      	str	r1, [sp, #12]
90017ae8:	9302      	str	r3, [sp, #8]
90017aea:	9201      	str	r2, [sp, #4]
90017aec:	f7ff ff86 	bl	900179fc <_ZN8touchgfx7Unicode6strlenEPKt>
90017af0:	f1b8 0f00 	cmp.w	r8, #0
90017af4:	bf0c      	ite	eq
90017af6:	4684      	moveq	ip, r0
90017af8:	f100 0c01 	addne.w	ip, r0, #1
90017afc:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
90017b00:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
90017b04:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
90017b06:	fa1f fc8c 	uxth.w	ip, ip
90017b0a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90017b0c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
90017b10:	9903      	ldr	r1, [sp, #12]
90017b12:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
90017b16:	d041      	beq.n	90017b9c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
90017b18:	d834      	bhi.n	90017b84 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
90017b1a:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
90017b1e:	d059      	beq.n	90017bd4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
90017b20:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
90017b24:	d03a      	beq.n	90017b9c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
90017b26:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
90017b2a:	d034      	beq.n	90017b96 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
90017b2c:	2400      	movs	r4, #0
90017b2e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
90017b32:	3a01      	subs	r2, #1
90017b34:	b169      	cbz	r1, 90017b52 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90017b36:	9911      	ldr	r1, [sp, #68]	; 0x44
90017b38:	458c      	cmp	ip, r1
90017b3a:	da09      	bge.n	90017b50 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
90017b3c:	eba1 010c 	sub.w	r1, r1, ip
90017b40:	b289      	uxth	r1, r1
90017b42:	b933      	cbnz	r3, 90017b52 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90017b44:	2e00      	cmp	r6, #0
90017b46:	d051      	beq.n	90017bec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
90017b48:	2800      	cmp	r0, #0
90017b4a:	d04f      	beq.n	90017bec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
90017b4c:	440c      	add	r4, r1
90017b4e:	b2a4      	uxth	r4, r4
90017b50:	2100      	movs	r1, #0
90017b52:	682b      	ldr	r3, [r5, #0]
90017b54:	4293      	cmp	r3, r2
90017b56:	da07      	bge.n	90017b68 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
90017b58:	f1b8 0f00 	cmp.w	r8, #0
90017b5c:	d004      	beq.n	90017b68 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
90017b5e:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
90017b62:	682b      	ldr	r3, [r5, #0]
90017b64:	3301      	adds	r3, #1
90017b66:	602b      	str	r3, [r5, #0]
90017b68:	2730      	movs	r7, #48	; 0x30
90017b6a:	2c00      	cmp	r4, #0
90017b6c:	d04e      	beq.n	90017c0c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
90017b6e:	682e      	ldr	r6, [r5, #0]
90017b70:	3c01      	subs	r4, #1
90017b72:	42b2      	cmp	r2, r6
90017b74:	b2a4      	uxth	r4, r4
90017b76:	dd49      	ble.n	90017c0c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
90017b78:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
90017b7c:	682b      	ldr	r3, [r5, #0]
90017b7e:	3301      	adds	r3, #1
90017b80:	602b      	str	r3, [r5, #0]
90017b82:	e7f2      	b.n	90017b6a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
90017b84:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
90017b88:	d01d      	beq.n	90017bc6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
90017b8a:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
90017b8e:	d002      	beq.n	90017b96 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
90017b90:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
90017b94:	e7c9      	b.n	90017b2a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
90017b96:	4684      	mov	ip, r0
90017b98:	f04f 0800 	mov.w	r8, #0
90017b9c:	2c00      	cmp	r4, #0
90017b9e:	d0c6      	beq.n	90017b2e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90017ba0:	b947      	cbnz	r7, 90017bb4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
90017ba2:	2801      	cmp	r0, #1
90017ba4:	d106      	bne.n	90017bb4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
90017ba6:	8814      	ldrh	r4, [r2, #0]
90017ba8:	2c30      	cmp	r4, #48	; 0x30
90017baa:	bf02      	ittt	eq
90017bac:	3202      	addeq	r2, #2
90017bae:	4638      	moveq	r0, r7
90017bb0:	f8cb 2000 	streq.w	r2, [fp]
90017bb4:	45bc      	cmp	ip, r7
90017bb6:	da14      	bge.n	90017be2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
90017bb8:	b2bf      	uxth	r7, r7
90017bba:	eba7 040c 	sub.w	r4, r7, ip
90017bbe:	46bc      	mov	ip, r7
90017bc0:	b2a4      	uxth	r4, r4
90017bc2:	2600      	movs	r6, #0
90017bc4:	e7b3      	b.n	90017b2e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90017bc6:	4684      	mov	ip, r0
90017bc8:	b16c      	cbz	r4, 90017be6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
90017bca:	42b8      	cmp	r0, r7
90017bcc:	dd00      	ble.n	90017bd0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
90017bce:	b2b8      	uxth	r0, r7
90017bd0:	2400      	movs	r4, #0
90017bd2:	e003      	b.n	90017bdc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
90017bd4:	f04f 0c01 	mov.w	ip, #1
90017bd8:	2400      	movs	r4, #0
90017bda:	4660      	mov	r0, ip
90017bdc:	4626      	mov	r6, r4
90017bde:	46a0      	mov	r8, r4
90017be0:	e7a5      	b.n	90017b2e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90017be2:	2400      	movs	r4, #0
90017be4:	e7ed      	b.n	90017bc2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
90017be6:	4626      	mov	r6, r4
90017be8:	46a0      	mov	r8, r4
90017bea:	e7a0      	b.n	90017b2e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90017bec:	2900      	cmp	r1, #0
90017bee:	d0b0      	beq.n	90017b52 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90017bf0:	2720      	movs	r7, #32
90017bf2:	682e      	ldr	r6, [r5, #0]
90017bf4:	2900      	cmp	r1, #0
90017bf6:	d0ac      	beq.n	90017b52 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90017bf8:	3901      	subs	r1, #1
90017bfa:	4296      	cmp	r6, r2
90017bfc:	b289      	uxth	r1, r1
90017bfe:	daa7      	bge.n	90017b50 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
90017c00:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
90017c04:	682b      	ldr	r3, [r5, #0]
90017c06:	3301      	adds	r3, #1
90017c08:	602b      	str	r3, [r5, #0]
90017c0a:	e7f2      	b.n	90017bf2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
90017c0c:	b188      	cbz	r0, 90017c32 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
90017c0e:	682b      	ldr	r3, [r5, #0]
90017c10:	3801      	subs	r0, #1
90017c12:	429a      	cmp	r2, r3
90017c14:	b280      	uxth	r0, r0
90017c16:	dd0c      	ble.n	90017c32 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
90017c18:	f8db 3000 	ldr.w	r3, [fp]
90017c1c:	1c9c      	adds	r4, r3, #2
90017c1e:	f8cb 4000 	str.w	r4, [fp]
90017c22:	881c      	ldrh	r4, [r3, #0]
90017c24:	682b      	ldr	r3, [r5, #0]
90017c26:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
90017c2a:	682b      	ldr	r3, [r5, #0]
90017c2c:	3301      	adds	r3, #1
90017c2e:	602b      	str	r3, [r5, #0]
90017c30:	e7ec      	b.n	90017c0c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
90017c32:	2620      	movs	r6, #32
90017c34:	b151      	cbz	r1, 90017c4c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
90017c36:	6828      	ldr	r0, [r5, #0]
90017c38:	3901      	subs	r1, #1
90017c3a:	4282      	cmp	r2, r0
90017c3c:	b289      	uxth	r1, r1
90017c3e:	dd05      	ble.n	90017c4c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
90017c40:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
90017c44:	682b      	ldr	r3, [r5, #0]
90017c46:	3301      	adds	r3, #1
90017c48:	602b      	str	r3, [r5, #0]
90017c4a:	e7f3      	b.n	90017c34 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
90017c4c:	b005      	add	sp, #20
90017c4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90017c52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
90017c52:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90017c56:	2400      	movs	r4, #0
90017c58:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
90017c5c:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
90017c60:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
90017c64:	8014      	strh	r4, [r2, #0]
90017c66:	701c      	strb	r4, [r3, #0]
90017c68:	f888 4000 	strb.w	r4, [r8]
90017c6c:	f88c 4000 	strb.w	r4, [ip]
90017c70:	f88e 4000 	strb.w	r4, [lr]
90017c74:	703c      	strb	r4, [r7, #0]
90017c76:	6804      	ldr	r4, [r0, #0]
90017c78:	b1a4      	cbz	r4, 90017ca4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
90017c7a:	8824      	ldrh	r4, [r4, #0]
90017c7c:	f04f 0901 	mov.w	r9, #1
90017c80:	b314      	cbz	r4, 90017cc8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90017c82:	2c2b      	cmp	r4, #43	; 0x2b
90017c84:	d001      	beq.n	90017c8a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
90017c86:	2c20      	cmp	r4, #32
90017c88:	d110      	bne.n	90017cac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
90017c8a:	8014      	strh	r4, [r2, #0]
90017c8c:	6804      	ldr	r4, [r0, #0]
90017c8e:	b10c      	cbz	r4, 90017c94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
90017c90:	3402      	adds	r4, #2
90017c92:	6004      	str	r4, [r0, #0]
90017c94:	680c      	ldr	r4, [r1, #0]
90017c96:	b10c      	cbz	r4, 90017c9c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
90017c98:	3401      	adds	r4, #1
90017c9a:	600c      	str	r4, [r1, #0]
90017c9c:	6804      	ldr	r4, [r0, #0]
90017c9e:	b17c      	cbz	r4, 90017cc0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
90017ca0:	8824      	ldrh	r4, [r4, #0]
90017ca2:	e7ed      	b.n	90017c80 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
90017ca4:	680c      	ldr	r4, [r1, #0]
90017ca6:	b17c      	cbz	r4, 90017cc8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90017ca8:	7824      	ldrb	r4, [r4, #0]
90017caa:	e7e7      	b.n	90017c7c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
90017cac:	2c2d      	cmp	r4, #45	; 0x2d
90017cae:	d102      	bne.n	90017cb6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
90017cb0:	f883 9000 	strb.w	r9, [r3]
90017cb4:	e7ea      	b.n	90017c8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
90017cb6:	2c23      	cmp	r4, #35	; 0x23
90017cb8:	d107      	bne.n	90017cca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
90017cba:	f888 9000 	strb.w	r9, [r8]
90017cbe:	e7e5      	b.n	90017c8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
90017cc0:	680c      	ldr	r4, [r1, #0]
90017cc2:	b10c      	cbz	r4, 90017cc8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90017cc4:	7824      	ldrb	r4, [r4, #0]
90017cc6:	e7db      	b.n	90017c80 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
90017cc8:	2400      	movs	r4, #0
90017cca:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
90017cce:	2b09      	cmp	r3, #9
90017cd0:	d901      	bls.n	90017cd6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
90017cd2:	2c2a      	cmp	r4, #42	; 0x2a
90017cd4:	d122      	bne.n	90017d1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
90017cd6:	2301      	movs	r3, #1
90017cd8:	2c30      	cmp	r4, #48	; 0x30
90017cda:	f88e 3000 	strb.w	r3, [lr]
90017cde:	d10d      	bne.n	90017cfc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
90017ce0:	f88c 3000 	strb.w	r3, [ip]
90017ce4:	6803      	ldr	r3, [r0, #0]
90017ce6:	b10b      	cbz	r3, 90017cec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
90017ce8:	3302      	adds	r3, #2
90017cea:	6003      	str	r3, [r0, #0]
90017cec:	680b      	ldr	r3, [r1, #0]
90017cee:	b10b      	cbz	r3, 90017cf4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
90017cf0:	3301      	adds	r3, #1
90017cf2:	600b      	str	r3, [r1, #0]
90017cf4:	6803      	ldr	r3, [r0, #0]
90017cf6:	2b00      	cmp	r3, #0
90017cf8:	d02f      	beq.n	90017d5a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
90017cfa:	881c      	ldrh	r4, [r3, #0]
90017cfc:	2c2a      	cmp	r4, #42	; 0x2a
90017cfe:	d135      	bne.n	90017d6c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
90017d00:	f04f 33ff 	mov.w	r3, #4294967295
90017d04:	6033      	str	r3, [r6, #0]
90017d06:	6803      	ldr	r3, [r0, #0]
90017d08:	b10b      	cbz	r3, 90017d0e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
90017d0a:	3302      	adds	r3, #2
90017d0c:	6003      	str	r3, [r0, #0]
90017d0e:	680b      	ldr	r3, [r1, #0]
90017d10:	b10b      	cbz	r3, 90017d16 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
90017d12:	3301      	adds	r3, #1
90017d14:	600b      	str	r3, [r1, #0]
90017d16:	6803      	ldr	r3, [r0, #0]
90017d18:	b31b      	cbz	r3, 90017d62 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
90017d1a:	881c      	ldrh	r4, [r3, #0]
90017d1c:	2c2e      	cmp	r4, #46	; 0x2e
90017d1e:	d11a      	bne.n	90017d56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
90017d20:	2301      	movs	r3, #1
90017d22:	703b      	strb	r3, [r7, #0]
90017d24:	6803      	ldr	r3, [r0, #0]
90017d26:	b10b      	cbz	r3, 90017d2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
90017d28:	3302      	adds	r3, #2
90017d2a:	6003      	str	r3, [r0, #0]
90017d2c:	680b      	ldr	r3, [r1, #0]
90017d2e:	b10b      	cbz	r3, 90017d34 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
90017d30:	3301      	adds	r3, #1
90017d32:	600b      	str	r3, [r1, #0]
90017d34:	6803      	ldr	r3, [r0, #0]
90017d36:	2b00      	cmp	r3, #0
90017d38:	d036      	beq.n	90017da8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
90017d3a:	881b      	ldrh	r3, [r3, #0]
90017d3c:	2b2a      	cmp	r3, #42	; 0x2a
90017d3e:	d137      	bne.n	90017db0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
90017d40:	f04f 33ff 	mov.w	r3, #4294967295
90017d44:	602b      	str	r3, [r5, #0]
90017d46:	6803      	ldr	r3, [r0, #0]
90017d48:	b10b      	cbz	r3, 90017d4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
90017d4a:	3302      	adds	r3, #2
90017d4c:	6003      	str	r3, [r0, #0]
90017d4e:	680b      	ldr	r3, [r1, #0]
90017d50:	b10b      	cbz	r3, 90017d56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
90017d52:	3301      	adds	r3, #1
90017d54:	600b      	str	r3, [r1, #0]
90017d56:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90017d5a:	680c      	ldr	r4, [r1, #0]
90017d5c:	b134      	cbz	r4, 90017d6c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
90017d5e:	7824      	ldrb	r4, [r4, #0]
90017d60:	e7cc      	b.n	90017cfc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
90017d62:	680b      	ldr	r3, [r1, #0]
90017d64:	2b00      	cmp	r3, #0
90017d66:	d0f6      	beq.n	90017d56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
90017d68:	781c      	ldrb	r4, [r3, #0]
90017d6a:	e7d7      	b.n	90017d1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
90017d6c:	2300      	movs	r3, #0
90017d6e:	220a      	movs	r2, #10
90017d70:	6033      	str	r3, [r6, #0]
90017d72:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
90017d76:	fa1f f38c 	uxth.w	r3, ip
90017d7a:	2b09      	cmp	r3, #9
90017d7c:	d8ce      	bhi.n	90017d1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
90017d7e:	6833      	ldr	r3, [r6, #0]
90017d80:	fb02 c303 	mla	r3, r2, r3, ip
90017d84:	6033      	str	r3, [r6, #0]
90017d86:	6803      	ldr	r3, [r0, #0]
90017d88:	b10b      	cbz	r3, 90017d8e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
90017d8a:	3302      	adds	r3, #2
90017d8c:	6003      	str	r3, [r0, #0]
90017d8e:	680b      	ldr	r3, [r1, #0]
90017d90:	b10b      	cbz	r3, 90017d96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
90017d92:	3301      	adds	r3, #1
90017d94:	600b      	str	r3, [r1, #0]
90017d96:	6803      	ldr	r3, [r0, #0]
90017d98:	b10b      	cbz	r3, 90017d9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
90017d9a:	881c      	ldrh	r4, [r3, #0]
90017d9c:	e7e9      	b.n	90017d72 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90017d9e:	680c      	ldr	r4, [r1, #0]
90017da0:	2c00      	cmp	r4, #0
90017da2:	d0e6      	beq.n	90017d72 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90017da4:	7824      	ldrb	r4, [r4, #0]
90017da6:	e7e4      	b.n	90017d72 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90017da8:	680b      	ldr	r3, [r1, #0]
90017daa:	b10b      	cbz	r3, 90017db0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
90017dac:	781b      	ldrb	r3, [r3, #0]
90017dae:	e7c5      	b.n	90017d3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
90017db0:	2200      	movs	r2, #0
90017db2:	240a      	movs	r4, #10
90017db4:	602a      	str	r2, [r5, #0]
90017db6:	3b30      	subs	r3, #48	; 0x30
90017db8:	682a      	ldr	r2, [r5, #0]
90017dba:	b29e      	uxth	r6, r3
90017dbc:	2e09      	cmp	r6, #9
90017dbe:	d813      	bhi.n	90017de8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
90017dc0:	fb04 3302 	mla	r3, r4, r2, r3
90017dc4:	602b      	str	r3, [r5, #0]
90017dc6:	6803      	ldr	r3, [r0, #0]
90017dc8:	b10b      	cbz	r3, 90017dce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
90017dca:	3302      	adds	r3, #2
90017dcc:	6003      	str	r3, [r0, #0]
90017dce:	680b      	ldr	r3, [r1, #0]
90017dd0:	b10b      	cbz	r3, 90017dd6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
90017dd2:	3301      	adds	r3, #1
90017dd4:	600b      	str	r3, [r1, #0]
90017dd6:	6803      	ldr	r3, [r0, #0]
90017dd8:	b10b      	cbz	r3, 90017dde <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
90017dda:	881b      	ldrh	r3, [r3, #0]
90017ddc:	e7eb      	b.n	90017db6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
90017dde:	680b      	ldr	r3, [r1, #0]
90017de0:	2b00      	cmp	r3, #0
90017de2:	d0e8      	beq.n	90017db6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
90017de4:	781b      	ldrb	r3, [r3, #0]
90017de6:	e7e6      	b.n	90017db6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
90017de8:	2a06      	cmp	r2, #6
90017dea:	bfa8      	it	ge
90017dec:	2206      	movge	r2, #6
90017dee:	602a      	str	r2, [r5, #0]
90017df0:	e7b1      	b.n	90017d56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

90017df2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
90017df2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017df6:	b0a3      	sub	sp, #140	; 0x8c
90017df8:	2600      	movs	r6, #0
90017dfa:	4607      	mov	r7, r0
90017dfc:	4688      	mov	r8, r1
90017dfe:	f10d 0944 	add.w	r9, sp, #68	; 0x44
90017e02:	4631      	mov	r1, r6
90017e04:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
90017e06:	4648      	mov	r0, r9
90017e08:	960d      	str	r6, [sp, #52]	; 0x34
90017e0a:	e9cd 3208 	strd	r3, r2, [sp, #32]
90017e0e:	2242      	movs	r2, #66	; 0x42
90017e10:	f00e fd2e 	bl	90026870 <memset>
90017e14:	b15f      	cbz	r7, 90017e2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
90017e16:	f108 3aff 	add.w	sl, r8, #4294967295
90017e1a:	9a09      	ldr	r2, [sp, #36]	; 0x24
90017e1c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90017e1e:	b152      	cbz	r2, 90017e36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
90017e20:	8812      	ldrh	r2, [r2, #0]
90017e22:	b10a      	cbz	r2, 90017e28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
90017e24:	459a      	cmp	sl, r3
90017e26:	dc2e      	bgt.n	90017e86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
90017e28:	2200      	movs	r2, #0
90017e2a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
90017e2e:	4638      	mov	r0, r7
90017e30:	b023      	add	sp, #140	; 0x8c
90017e32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017e36:	9a08      	ldr	r2, [sp, #32]
90017e38:	2a00      	cmp	r2, #0
90017e3a:	d0f5      	beq.n	90017e28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
90017e3c:	7812      	ldrb	r2, [r2, #0]
90017e3e:	e7f0      	b.n	90017e22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
90017e40:	2d00      	cmp	r5, #0
90017e42:	d0ea      	beq.n	90017e1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90017e44:	782a      	ldrb	r2, [r5, #0]
90017e46:	b142      	cbz	r2, 90017e5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
90017e48:	2a25      	cmp	r2, #37	; 0x25
90017e4a:	d001      	beq.n	90017e50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
90017e4c:	459a      	cmp	sl, r3
90017e4e:	dc08      	bgt.n	90017e62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
90017e50:	f1bb 0f00 	cmp.w	fp, #0
90017e54:	d121      	bne.n	90017e9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
90017e56:	2d00      	cmp	r5, #0
90017e58:	d0df      	beq.n	90017e1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90017e5a:	782a      	ldrb	r2, [r5, #0]
90017e5c:	f04f 0b00 	mov.w	fp, #0
90017e60:	e01d      	b.n	90017e9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
90017e62:	f1bb 0f00 	cmp.w	fp, #0
90017e66:	d077      	beq.n	90017f58 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
90017e68:	f8bb 2000 	ldrh.w	r2, [fp]
90017e6c:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
90017e70:	f1bb 0f00 	cmp.w	fp, #0
90017e74:	d002      	beq.n	90017e7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
90017e76:	f10b 0202 	add.w	r2, fp, #2
90017e7a:	9209      	str	r2, [sp, #36]	; 0x24
90017e7c:	b10d      	cbz	r5, 90017e82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
90017e7e:	3501      	adds	r5, #1
90017e80:	9508      	str	r5, [sp, #32]
90017e82:	3301      	adds	r3, #1
90017e84:	930d      	str	r3, [sp, #52]	; 0x34
90017e86:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90017e88:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
90017e8c:	f1bb 0f00 	cmp.w	fp, #0
90017e90:	d0d6      	beq.n	90017e40 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
90017e92:	f8bb 2000 	ldrh.w	r2, [fp]
90017e96:	2a00      	cmp	r2, #0
90017e98:	d1d6      	bne.n	90017e48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
90017e9a:	f8bb 2000 	ldrh.w	r2, [fp]
90017e9e:	2a00      	cmp	r2, #0
90017ea0:	d0bb      	beq.n	90017e1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90017ea2:	459a      	cmp	sl, r3
90017ea4:	ddb9      	ble.n	90017e1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90017ea6:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
90017eaa:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
90017eae:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
90017eb2:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
90017eb6:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
90017eba:	960e      	str	r6, [sp, #56]	; 0x38
90017ebc:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
90017ec0:	960f      	str	r6, [sp, #60]	; 0x3c
90017ec2:	f1bb 0f00 	cmp.w	fp, #0
90017ec6:	d002      	beq.n	90017ece <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
90017ec8:	f10b 0302 	add.w	r3, fp, #2
90017ecc:	9309      	str	r3, [sp, #36]	; 0x24
90017ece:	b10d      	cbz	r5, 90017ed4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
90017ed0:	1c6b      	adds	r3, r5, #1
90017ed2:	9308      	str	r3, [sp, #32]
90017ed4:	ab0f      	add	r3, sp, #60	; 0x3c
90017ed6:	f10d 0232 	add.w	r2, sp, #50	; 0x32
90017eda:	a908      	add	r1, sp, #32
90017edc:	a809      	add	r0, sp, #36	; 0x24
90017ede:	9305      	str	r3, [sp, #20]
90017ee0:	f10d 0331 	add.w	r3, sp, #49	; 0x31
90017ee4:	9304      	str	r3, [sp, #16]
90017ee6:	ab0e      	add	r3, sp, #56	; 0x38
90017ee8:	9303      	str	r3, [sp, #12]
90017eea:	ab0c      	add	r3, sp, #48	; 0x30
90017eec:	9302      	str	r3, [sp, #8]
90017eee:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
90017ef2:	9301      	str	r3, [sp, #4]
90017ef4:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
90017ef8:	9300      	str	r3, [sp, #0]
90017efa:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
90017efe:	f7ff fea8 	bl	90017c52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
90017f02:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90017f04:	2b00      	cmp	r3, #0
90017f06:	bfbf      	itttt	lt
90017f08:	6823      	ldrlt	r3, [r4, #0]
90017f0a:	3404      	addlt	r4, #4
90017f0c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
90017f10:	930e      	strlt	r3, [sp, #56]	; 0x38
90017f12:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90017f14:	2b00      	cmp	r3, #0
90017f16:	bfbe      	ittt	lt
90017f18:	6823      	ldrlt	r3, [r4, #0]
90017f1a:	3404      	addlt	r4, #4
90017f1c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
90017f20:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
90017f24:	bfb8      	it	lt
90017f26:	930f      	strlt	r3, [sp, #60]	; 0x3c
90017f28:	b1d9      	cbz	r1, 90017f62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
90017f2a:	880b      	ldrh	r3, [r1, #0]
90017f2c:	2b69      	cmp	r3, #105	; 0x69
90017f2e:	d01f      	beq.n	90017f70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90017f30:	d82f      	bhi.n	90017f92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
90017f32:	2b58      	cmp	r3, #88	; 0x58
90017f34:	d01c      	beq.n	90017f70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90017f36:	d818      	bhi.n	90017f6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
90017f38:	2b25      	cmp	r3, #37	; 0x25
90017f3a:	d034      	beq.n	90017fa6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
90017f3c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90017f3e:	e9cd 5b08 	strd	r5, fp, [sp, #32]
90017f42:	f1bb 0f00 	cmp.w	fp, #0
90017f46:	f000 80b7 	beq.w	900180b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
90017f4a:	f8bb 5000 	ldrh.w	r5, [fp]
90017f4e:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
90017f52:	3301      	adds	r3, #1
90017f54:	930d      	str	r3, [sp, #52]	; 0x34
90017f56:	e029      	b.n	90017fac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
90017f58:	b10d      	cbz	r5, 90017f5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
90017f5a:	782a      	ldrb	r2, [r5, #0]
90017f5c:	e786      	b.n	90017e6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
90017f5e:	462a      	mov	r2, r5
90017f60:	e784      	b.n	90017e6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
90017f62:	2a00      	cmp	r2, #0
90017f64:	d0ea      	beq.n	90017f3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90017f66:	7813      	ldrb	r3, [r2, #0]
90017f68:	e7e0      	b.n	90017f2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
90017f6a:	3b63      	subs	r3, #99	; 0x63
90017f6c:	2b01      	cmp	r3, #1
90017f6e:	d8e5      	bhi.n	90017f3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90017f70:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
90017f74:	b329      	cbz	r1, 90017fc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
90017f76:	880b      	ldrh	r3, [r1, #0]
90017f78:	2b69      	cmp	r3, #105	; 0x69
90017f7a:	d063      	beq.n	90018044 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
90017f7c:	d825      	bhi.n	90017fca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
90017f7e:	2b63      	cmp	r3, #99	; 0x63
90017f80:	d038      	beq.n	90017ff4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
90017f82:	2b64      	cmp	r3, #100	; 0x64
90017f84:	d05e      	beq.n	90018044 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
90017f86:	2b58      	cmp	r3, #88	; 0x58
90017f88:	d07a      	beq.n	90018080 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
90017f8a:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
90017f8e:	4625      	mov	r5, r4
90017f90:	e036      	b.n	90018000 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90017f92:	2b73      	cmp	r3, #115	; 0x73
90017f94:	d0ec      	beq.n	90017f70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90017f96:	d802      	bhi.n	90017f9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
90017f98:	2b6f      	cmp	r3, #111	; 0x6f
90017f9a:	d1cf      	bne.n	90017f3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90017f9c:	e7e8      	b.n	90017f70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90017f9e:	2b75      	cmp	r3, #117	; 0x75
90017fa0:	d0e6      	beq.n	90017f70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90017fa2:	2b78      	cmp	r3, #120	; 0x78
90017fa4:	e7f9      	b.n	90017f9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
90017fa6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90017fa8:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
90017fac:	9b09      	ldr	r3, [sp, #36]	; 0x24
90017fae:	b10b      	cbz	r3, 90017fb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
90017fb0:	3302      	adds	r3, #2
90017fb2:	9309      	str	r3, [sp, #36]	; 0x24
90017fb4:	9b08      	ldr	r3, [sp, #32]
90017fb6:	2b00      	cmp	r3, #0
90017fb8:	f43f af2f 	beq.w	90017e1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90017fbc:	3301      	adds	r3, #1
90017fbe:	9308      	str	r3, [sp, #32]
90017fc0:	e72b      	b.n	90017e1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90017fc2:	2a00      	cmp	r2, #0
90017fc4:	d0e1      	beq.n	90017f8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90017fc6:	7813      	ldrb	r3, [r2, #0]
90017fc8:	e7d6      	b.n	90017f78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
90017fca:	2b73      	cmp	r3, #115	; 0x73
90017fcc:	d036      	beq.n	9001803c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
90017fce:	d807      	bhi.n	90017fe0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
90017fd0:	2b6f      	cmp	r3, #111	; 0x6f
90017fd2:	d1da      	bne.n	90017f8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90017fd4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90017fd6:	1d25      	adds	r5, r4, #4
90017fd8:	2308      	movs	r3, #8
90017fda:	eba8 0202 	sub.w	r2, r8, r2
90017fde:	e049      	b.n	90018074 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
90017fe0:	2b75      	cmp	r3, #117	; 0x75
90017fe2:	d042      	beq.n	9001806a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
90017fe4:	2b78      	cmp	r3, #120	; 0x78
90017fe6:	d1d0      	bne.n	90017f8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90017fe8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90017fea:	1d25      	adds	r5, r4, #4
90017fec:	2310      	movs	r3, #16
90017fee:	eba8 0202 	sub.w	r2, r8, r2
90017ff2:	e03f      	b.n	90018074 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
90017ff4:	6823      	ldr	r3, [r4, #0]
90017ff6:	1d25      	adds	r5, r4, #4
90017ff8:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
90017ffc:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
90018000:	9b09      	ldr	r3, [sp, #36]	; 0x24
90018002:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
90018006:	2b00      	cmp	r3, #0
90018008:	d051      	beq.n	900180ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
9001800a:	881a      	ldrh	r2, [r3, #0]
9001800c:	a80d      	add	r0, sp, #52	; 0x34
9001800e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
90018012:	462c      	mov	r4, r5
90018014:	9005      	str	r0, [sp, #20]
90018016:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
9001801a:	9004      	str	r0, [sp, #16]
9001801c:	980e      	ldr	r0, [sp, #56]	; 0x38
9001801e:	9003      	str	r0, [sp, #12]
90018020:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
90018024:	9002      	str	r0, [sp, #8]
90018026:	980f      	ldr	r0, [sp, #60]	; 0x3c
90018028:	9001      	str	r0, [sp, #4]
9001802a:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
9001802e:	e9cd 8706 	strd	r8, r7, [sp, #24]
90018032:	9000      	str	r0, [sp, #0]
90018034:	a810      	add	r0, sp, #64	; 0x40
90018036:	f7ff fd49 	bl	90017acc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
9001803a:	e7b7      	b.n	90017fac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
9001803c:	1d25      	adds	r5, r4, #4
9001803e:	6823      	ldr	r3, [r4, #0]
90018040:	9310      	str	r3, [sp, #64]	; 0x40
90018042:	e7dd      	b.n	90018000 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90018044:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90018046:	230a      	movs	r3, #10
90018048:	4649      	mov	r1, r9
9001804a:	6820      	ldr	r0, [r4, #0]
9001804c:	eba8 0202 	sub.w	r2, r8, r2
90018050:	1d25      	adds	r5, r4, #4
90018052:	b292      	uxth	r2, r2
90018054:	f7ff fcf0 	bl	90017a38 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
90018058:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
9001805c:	2b2d      	cmp	r3, #45	; 0x2d
9001805e:	d1cf      	bne.n	90018000 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90018060:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90018064:	9b10      	ldr	r3, [sp, #64]	; 0x40
90018066:	3302      	adds	r3, #2
90018068:	e7ea      	b.n	90018040 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
9001806a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001806c:	1d25      	adds	r5, r4, #4
9001806e:	230a      	movs	r3, #10
90018070:	eba8 0202 	sub.w	r2, r8, r2
90018074:	b292      	uxth	r2, r2
90018076:	4649      	mov	r1, r9
90018078:	6820      	ldr	r0, [r4, #0]
9001807a:	f7ff fd09 	bl	90017a90 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
9001807e:	e7bf      	b.n	90018000 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90018080:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90018082:	2310      	movs	r3, #16
90018084:	4649      	mov	r1, r9
90018086:	6820      	ldr	r0, [r4, #0]
90018088:	eba8 0202 	sub.w	r2, r8, r2
9001808c:	1d25      	adds	r5, r4, #4
9001808e:	b292      	uxth	r2, r2
90018090:	f7ff fcfe 	bl	90017a90 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
90018094:	f10d 0242 	add.w	r2, sp, #66	; 0x42
90018098:	f832 3f02 	ldrh.w	r3, [r2, #2]!
9001809c:	2b00      	cmp	r3, #0
9001809e:	d0af      	beq.n	90018000 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
900180a0:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
900180a4:	2919      	cmp	r1, #25
900180a6:	d8f7      	bhi.n	90018098 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
900180a8:	3b20      	subs	r3, #32
900180aa:	8013      	strh	r3, [r2, #0]
900180ac:	e7f4      	b.n	90018098 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
900180ae:	9a08      	ldr	r2, [sp, #32]
900180b0:	2a00      	cmp	r2, #0
900180b2:	d0ab      	beq.n	9001800c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
900180b4:	7812      	ldrb	r2, [r2, #0]
900180b6:	e7a9      	b.n	9001800c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
900180b8:	2d00      	cmp	r5, #0
900180ba:	f43f af48 	beq.w	90017f4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
900180be:	782d      	ldrb	r5, [r5, #0]
900180c0:	e745      	b.n	90017f4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

900180c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
900180c2:	b507      	push	{r0, r1, r2, lr}
900180c4:	9300      	str	r3, [sp, #0]
900180c6:	4613      	mov	r3, r2
900180c8:	2200      	movs	r2, #0
900180ca:	f7ff fe92 	bl	90017df2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
900180ce:	b003      	add	sp, #12
900180d0:	f85d fb04 	ldr.w	pc, [sp], #4

900180d4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
900180d4:	b40c      	push	{r2, r3}
900180d6:	b507      	push	{r0, r1, r2, lr}
900180d8:	ab04      	add	r3, sp, #16
900180da:	f853 2b04 	ldr.w	r2, [r3], #4
900180de:	9301      	str	r3, [sp, #4]
900180e0:	f7ff ffef 	bl	900180c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
900180e4:	b003      	add	sp, #12
900180e6:	f85d eb04 	ldr.w	lr, [sp], #4
900180ea:	b002      	add	sp, #8
900180ec:	4770      	bx	lr
	...

900180f0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
900180f0:	4b01      	ldr	r3, [pc, #4]	; (900180f8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
900180f2:	6018      	str	r0, [r3, #0]
900180f4:	4770      	bx	lr
900180f6:	bf00      	nop
900180f8:	24023614 	.word	0x24023614

900180fc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
900180fc:	4b06      	ldr	r3, [pc, #24]	; (90018118 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
900180fe:	881a      	ldrh	r2, [r3, #0]
90018100:	4282      	cmp	r2, r0
90018102:	d807      	bhi.n	90018114 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
90018104:	4b05      	ldr	r3, [pc, #20]	; (9001811c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
90018106:	881b      	ldrh	r3, [r3, #0]
90018108:	4413      	add	r3, r2
9001810a:	4298      	cmp	r0, r3
9001810c:	bfac      	ite	ge
9001810e:	2000      	movge	r0, #0
90018110:	2001      	movlt	r0, #1
90018112:	4770      	bx	lr
90018114:	2000      	movs	r0, #0
90018116:	4770      	bx	lr
90018118:	24023634 	.word	0x24023634
9001811c:	24023638 	.word	0x24023638

90018120 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
90018120:	b508      	push	{r3, lr}
90018122:	4601      	mov	r1, r0
90018124:	f7ff ffea 	bl	900180fc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
90018128:	b118      	cbz	r0, 90018132 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
9001812a:	4b02      	ldr	r3, [pc, #8]	; (90018134 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
9001812c:	681b      	ldr	r3, [r3, #0]
9001812e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
90018132:	bd08      	pop	{r3, pc}
90018134:	24023618 	.word	0x24023618

90018138 <_ZN8touchgfx6Bitmap10clearCacheEv>:
90018138:	b5f0      	push	{r4, r5, r6, r7, lr}
9001813a:	4c24      	ldr	r4, [pc, #144]	; (900181cc <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
9001813c:	6823      	ldr	r3, [r4, #0]
9001813e:	2b00      	cmp	r3, #0
90018140:	d042      	beq.n	900181c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
90018142:	4a23      	ldr	r2, [pc, #140]	; (900181d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
90018144:	4d23      	ldr	r5, [pc, #140]	; (900181d4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
90018146:	8811      	ldrh	r1, [r2, #0]
90018148:	f8b5 c000 	ldrh.w	ip, [r5]
9001814c:	4822      	ldr	r0, [pc, #136]	; (900181d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
9001814e:	4461      	add	r1, ip
90018150:	1c4a      	adds	r2, r1, #1
90018152:	008f      	lsls	r7, r1, #2
90018154:	f022 0201 	bic.w	r2, r2, #1
90018158:	19de      	adds	r6, r3, r7
9001815a:	0412      	lsls	r2, r2, #16
9001815c:	6006      	str	r6, [r0, #0]
9001815e:	4e1f      	ldr	r6, [pc, #124]	; (900181dc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
90018160:	0c12      	lsrs	r2, r2, #16
90018162:	eb07 0742 	add.w	r7, r7, r2, lsl #1
90018166:	19da      	adds	r2, r3, r7
90018168:	6032      	str	r2, [r6, #0]
9001816a:	220e      	movs	r2, #14
9001816c:	fb02 f20c 	mul.w	r2, r2, ip
90018170:	3203      	adds	r2, #3
90018172:	f022 0203 	bic.w	r2, r2, #3
90018176:	443a      	add	r2, r7
90018178:	4f19      	ldr	r7, [pc, #100]	; (900181e0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
9001817a:	4413      	add	r3, r2
9001817c:	603b      	str	r3, [r7, #0]
9001817e:	2300      	movs	r3, #0
90018180:	4f18      	ldr	r7, [pc, #96]	; (900181e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
90018182:	469c      	mov	ip, r3
90018184:	803b      	strh	r3, [r7, #0]
90018186:	4f18      	ldr	r7, [pc, #96]	; (900181e8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
90018188:	683f      	ldr	r7, [r7, #0]
9001818a:	1aba      	subs	r2, r7, r2
9001818c:	4f17      	ldr	r7, [pc, #92]	; (900181ec <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
9001818e:	603a      	str	r2, [r7, #0]
90018190:	f64f 77ff 	movw	r7, #65535	; 0xffff
90018194:	4a16      	ldr	r2, [pc, #88]	; (900181f0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
90018196:	8013      	strh	r3, [r2, #0]
90018198:	428b      	cmp	r3, r1
9001819a:	d10d      	bne.n	900181b8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
9001819c:	882d      	ldrh	r5, [r5, #0]
9001819e:	2300      	movs	r3, #0
900181a0:	6830      	ldr	r0, [r6, #0]
900181a2:	240e      	movs	r4, #14
900181a4:	429d      	cmp	r5, r3
900181a6:	d90f      	bls.n	900181c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
900181a8:	fb04 0203 	mla	r2, r4, r3, r0
900181ac:	3301      	adds	r3, #1
900181ae:	7b11      	ldrb	r1, [r2, #12]
900181b0:	f36f 1145 	bfc	r1, #5, #1
900181b4:	7311      	strb	r1, [r2, #12]
900181b6:	e7f5      	b.n	900181a4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
900181b8:	6822      	ldr	r2, [r4, #0]
900181ba:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
900181be:	6802      	ldr	r2, [r0, #0]
900181c0:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
900181c4:	3301      	adds	r3, #1
900181c6:	e7e7      	b.n	90018198 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
900181c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
900181ca:	bf00      	nop
900181cc:	24023618 	.word	0x24023618
900181d0:	24023634 	.word	0x24023634
900181d4:	24023638 	.word	0x24023638
900181d8:	2402362c 	.word	0x2402362c
900181dc:	2402361c 	.word	0x2402361c
900181e0:	24023624 	.word	0x24023624
900181e4:	24023636 	.word	0x24023636
900181e8:	24023620 	.word	0x24023620
900181ec:	24023630 	.word	0x24023630
900181f0:	24023628 	.word	0x24023628

900181f4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
900181f4:	4b06      	ldr	r3, [pc, #24]	; (90018210 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
900181f6:	681b      	ldr	r3, [r3, #0]
900181f8:	b943      	cbnz	r3, 9001820c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
900181fa:	b139      	cbz	r1, 9001820c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
900181fc:	4b05      	ldr	r3, [pc, #20]	; (90018214 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
900181fe:	801a      	strh	r2, [r3, #0]
90018200:	4b05      	ldr	r3, [pc, #20]	; (90018218 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
90018202:	6019      	str	r1, [r3, #0]
90018204:	4b05      	ldr	r3, [pc, #20]	; (9001821c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
90018206:	6018      	str	r0, [r3, #0]
90018208:	f7ff bf96 	b.w	90018138 <_ZN8touchgfx6Bitmap10clearCacheEv>
9001820c:	4770      	bx	lr
9001820e:	bf00      	nop
90018210:	24023624 	.word	0x24023624
90018214:	24023638 	.word	0x24023638
90018218:	24023620 	.word	0x24023620
9001821c:	24023618 	.word	0x24023618

90018220 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
90018220:	b470      	push	{r4, r5, r6}
90018222:	4c07      	ldr	r4, [pc, #28]	; (90018240 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
90018224:	4605      	mov	r5, r0
90018226:	4610      	mov	r0, r2
90018228:	9a03      	ldr	r2, [sp, #12]
9001822a:	6826      	ldr	r6, [r4, #0]
9001822c:	b936      	cbnz	r6, 9001823c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
9001822e:	6025      	str	r5, [r4, #0]
90018230:	4c04      	ldr	r4, [pc, #16]	; (90018244 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
90018232:	8021      	strh	r1, [r4, #0]
90018234:	4619      	mov	r1, r3
90018236:	bc70      	pop	{r4, r5, r6}
90018238:	f7ff bfdc 	b.w	900181f4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
9001823c:	bc70      	pop	{r4, r5, r6}
9001823e:	4770      	bx	lr
90018240:	2402363c 	.word	0x2402363c
90018244:	24023634 	.word	0x24023634

90018248 <_ZNK8touchgfx6Bitmap8getWidthEv>:
90018248:	4a12      	ldr	r2, [pc, #72]	; (90018294 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
9001824a:	8803      	ldrh	r3, [r0, #0]
9001824c:	8812      	ldrh	r2, [r2, #0]
9001824e:	4293      	cmp	r3, r2
90018250:	d207      	bcs.n	90018262 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
90018252:	4a11      	ldr	r2, [pc, #68]	; (90018298 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
90018254:	2114      	movs	r1, #20
90018256:	6812      	ldr	r2, [r2, #0]
90018258:	fb01 2303 	mla	r3, r1, r3, r2
9001825c:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
90018260:	4770      	bx	lr
90018262:	490e      	ldr	r1, [pc, #56]	; (9001829c <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
90018264:	8809      	ldrh	r1, [r1, #0]
90018266:	4411      	add	r1, r2
90018268:	428b      	cmp	r3, r1
9001826a:	da04      	bge.n	90018276 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
9001826c:	1a9b      	subs	r3, r3, r2
9001826e:	4a0c      	ldr	r2, [pc, #48]	; (900182a0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
90018270:	210e      	movs	r1, #14
90018272:	6812      	ldr	r2, [r2, #0]
90018274:	e7f0      	b.n	90018258 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
90018276:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001827a:	4293      	cmp	r3, r2
9001827c:	d108      	bne.n	90018290 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
9001827e:	4b09      	ldr	r3, [pc, #36]	; (900182a4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
90018280:	781b      	ldrb	r3, [r3, #0]
90018282:	b91b      	cbnz	r3, 9001828c <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
90018284:	4b08      	ldr	r3, [pc, #32]	; (900182a8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
90018286:	f9b3 0000 	ldrsh.w	r0, [r3]
9001828a:	4770      	bx	lr
9001828c:	4b07      	ldr	r3, [pc, #28]	; (900182ac <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
9001828e:	e7fa      	b.n	90018286 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
90018290:	2000      	movs	r0, #0
90018292:	4770      	bx	lr
90018294:	24023634 	.word	0x24023634
90018298:	2402363c 	.word	0x2402363c
9001829c:	24023638 	.word	0x24023638
900182a0:	2402361c 	.word	0x2402361c
900182a4:	240235a4 	.word	0x240235a4
900182a8:	240235a6 	.word	0x240235a6
900182ac:	240235a8 	.word	0x240235a8

900182b0 <_ZNK8touchgfx6Bitmap9getHeightEv>:
900182b0:	4a12      	ldr	r2, [pc, #72]	; (900182fc <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
900182b2:	8803      	ldrh	r3, [r0, #0]
900182b4:	8812      	ldrh	r2, [r2, #0]
900182b6:	4293      	cmp	r3, r2
900182b8:	d207      	bcs.n	900182ca <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
900182ba:	4a11      	ldr	r2, [pc, #68]	; (90018300 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
900182bc:	2114      	movs	r1, #20
900182be:	6812      	ldr	r2, [r2, #0]
900182c0:	fb01 2303 	mla	r3, r1, r3, r2
900182c4:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
900182c8:	4770      	bx	lr
900182ca:	490e      	ldr	r1, [pc, #56]	; (90018304 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
900182cc:	8809      	ldrh	r1, [r1, #0]
900182ce:	4411      	add	r1, r2
900182d0:	428b      	cmp	r3, r1
900182d2:	da04      	bge.n	900182de <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
900182d4:	1a9b      	subs	r3, r3, r2
900182d6:	4a0c      	ldr	r2, [pc, #48]	; (90018308 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
900182d8:	210e      	movs	r1, #14
900182da:	6812      	ldr	r2, [r2, #0]
900182dc:	e7f0      	b.n	900182c0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
900182de:	f64f 72fe 	movw	r2, #65534	; 0xfffe
900182e2:	4293      	cmp	r3, r2
900182e4:	d108      	bne.n	900182f8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
900182e6:	4b09      	ldr	r3, [pc, #36]	; (9001830c <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
900182e8:	781b      	ldrb	r3, [r3, #0]
900182ea:	b91b      	cbnz	r3, 900182f4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
900182ec:	4b08      	ldr	r3, [pc, #32]	; (90018310 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
900182ee:	f9b3 0000 	ldrsh.w	r0, [r3]
900182f2:	4770      	bx	lr
900182f4:	4b07      	ldr	r3, [pc, #28]	; (90018314 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
900182f6:	e7fa      	b.n	900182ee <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
900182f8:	2000      	movs	r0, #0
900182fa:	4770      	bx	lr
900182fc:	24023634 	.word	0x24023634
90018300:	2402363c 	.word	0x2402363c
90018304:	24023638 	.word	0x24023638
90018308:	2402361c 	.word	0x2402361c
9001830c:	240235a4 	.word	0x240235a4
90018310:	240235a8 	.word	0x240235a8
90018314:	240235a6 	.word	0x240235a6

90018318 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
90018318:	4a1f      	ldr	r2, [pc, #124]	; (90018398 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
9001831a:	b510      	push	{r4, lr}
9001831c:	880b      	ldrh	r3, [r1, #0]
9001831e:	8812      	ldrh	r2, [r2, #0]
90018320:	4293      	cmp	r3, r2
90018322:	d213      	bcs.n	9001834c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
90018324:	4a1d      	ldr	r2, [pc, #116]	; (9001839c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
90018326:	2114      	movs	r1, #20
90018328:	6812      	ldr	r2, [r2, #0]
9001832a:	fb01 2303 	mla	r3, r1, r3, r2
9001832e:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
90018332:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
90018336:	8a1a      	ldrh	r2, [r3, #16]
90018338:	8a5b      	ldrh	r3, [r3, #18]
9001833a:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001833e:	8004      	strh	r4, [r0, #0]
90018340:	f3c3 030c 	ubfx	r3, r3, #0, #13
90018344:	8041      	strh	r1, [r0, #2]
90018346:	8082      	strh	r2, [r0, #4]
90018348:	80c3      	strh	r3, [r0, #6]
9001834a:	e00e      	b.n	9001836a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
9001834c:	4914      	ldr	r1, [pc, #80]	; (900183a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
9001834e:	8809      	ldrh	r1, [r1, #0]
90018350:	4411      	add	r1, r2
90018352:	428b      	cmp	r3, r1
90018354:	da0a      	bge.n	9001836c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
90018356:	1a9b      	subs	r3, r3, r2
90018358:	4a12      	ldr	r2, [pc, #72]	; (900183a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
9001835a:	210e      	movs	r1, #14
9001835c:	6812      	ldr	r2, [r2, #0]
9001835e:	fb01 2303 	mla	r3, r1, r3, r2
90018362:	681a      	ldr	r2, [r3, #0]
90018364:	6002      	str	r2, [r0, #0]
90018366:	685a      	ldr	r2, [r3, #4]
90018368:	6042      	str	r2, [r0, #4]
9001836a:	bd10      	pop	{r4, pc}
9001836c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
90018370:	4293      	cmp	r3, r2
90018372:	d10b      	bne.n	9001838c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
90018374:	4b0c      	ldr	r3, [pc, #48]	; (900183a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
90018376:	f9b3 1000 	ldrsh.w	r1, [r3]
9001837a:	4b0c      	ldr	r3, [pc, #48]	; (900183ac <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
9001837c:	8081      	strh	r1, [r0, #4]
9001837e:	f9b3 2000 	ldrsh.w	r2, [r3]
90018382:	2300      	movs	r3, #0
90018384:	80c2      	strh	r2, [r0, #6]
90018386:	8003      	strh	r3, [r0, #0]
90018388:	8043      	strh	r3, [r0, #2]
9001838a:	e7ee      	b.n	9001836a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
9001838c:	2300      	movs	r3, #0
9001838e:	8003      	strh	r3, [r0, #0]
90018390:	8043      	strh	r3, [r0, #2]
90018392:	8083      	strh	r3, [r0, #4]
90018394:	e7d8      	b.n	90018348 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
90018396:	bf00      	nop
90018398:	24023634 	.word	0x24023634
9001839c:	2402363c 	.word	0x2402363c
900183a0:	24023638 	.word	0x24023638
900183a4:	2402361c 	.word	0x2402361c
900183a8:	240235a0 	.word	0x240235a0
900183ac:	240235a2 	.word	0x240235a2

900183b0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
900183b0:	4a17      	ldr	r2, [pc, #92]	; (90018410 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
900183b2:	8803      	ldrh	r3, [r0, #0]
900183b4:	8812      	ldrh	r2, [r2, #0]
900183b6:	4293      	cmp	r3, r2
900183b8:	d213      	bcs.n	900183e2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
900183ba:	4a16      	ldr	r2, [pc, #88]	; (90018414 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
900183bc:	2114      	movs	r1, #20
900183be:	6812      	ldr	r2, [r2, #0]
900183c0:	fb01 2303 	mla	r3, r1, r3, r2
900183c4:	8a1a      	ldrh	r2, [r3, #16]
900183c6:	8919      	ldrh	r1, [r3, #8]
900183c8:	f3c2 020c 	ubfx	r2, r2, #0, #13
900183cc:	428a      	cmp	r2, r1
900183ce:	db1d      	blt.n	9001840c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
900183d0:	8a58      	ldrh	r0, [r3, #18]
900183d2:	f3c0 000c 	ubfx	r0, r0, #0, #13
900183d6:	895b      	ldrh	r3, [r3, #10]
900183d8:	4298      	cmp	r0, r3
900183da:	bfac      	ite	ge
900183dc:	2000      	movge	r0, #0
900183de:	2001      	movlt	r0, #1
900183e0:	4770      	bx	lr
900183e2:	490d      	ldr	r1, [pc, #52]	; (90018418 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
900183e4:	8809      	ldrh	r1, [r1, #0]
900183e6:	4411      	add	r1, r2
900183e8:	428b      	cmp	r3, r1
900183ea:	da0d      	bge.n	90018408 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
900183ec:	1a9b      	subs	r3, r3, r2
900183ee:	4a0b      	ldr	r2, [pc, #44]	; (9001841c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
900183f0:	210e      	movs	r1, #14
900183f2:	6812      	ldr	r2, [r2, #0]
900183f4:	fb01 2303 	mla	r3, r1, r3, r2
900183f8:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
900183fc:	891a      	ldrh	r2, [r3, #8]
900183fe:	4291      	cmp	r1, r2
90018400:	db04      	blt.n	9001840c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
90018402:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
90018406:	e7e6      	b.n	900183d6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
90018408:	2000      	movs	r0, #0
9001840a:	4770      	bx	lr
9001840c:	2001      	movs	r0, #1
9001840e:	4770      	bx	lr
90018410:	24023634 	.word	0x24023634
90018414:	2402363c 	.word	0x2402363c
90018418:	24023638 	.word	0x24023638
9001841c:	2402361c 	.word	0x2402361c

90018420 <_ZNK8touchgfx6Bitmap7getDataEv>:
90018420:	4a12      	ldr	r2, [pc, #72]	; (9001846c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
90018422:	8803      	ldrh	r3, [r0, #0]
90018424:	8811      	ldrh	r1, [r2, #0]
90018426:	428b      	cmp	r3, r1
90018428:	d20b      	bcs.n	90018442 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
9001842a:	4a11      	ldr	r2, [pc, #68]	; (90018470 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001842c:	6812      	ldr	r2, [r2, #0]
9001842e:	b112      	cbz	r2, 90018436 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
90018430:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
90018434:	b9c0      	cbnz	r0, 90018468 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
90018436:	4a0f      	ldr	r2, [pc, #60]	; (90018474 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
90018438:	6811      	ldr	r1, [r2, #0]
9001843a:	2214      	movs	r2, #20
9001843c:	4353      	muls	r3, r2
9001843e:	58c8      	ldr	r0, [r1, r3]
90018440:	4770      	bx	lr
90018442:	4a0d      	ldr	r2, [pc, #52]	; (90018478 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
90018444:	8812      	ldrh	r2, [r2, #0]
90018446:	440a      	add	r2, r1
90018448:	4293      	cmp	r3, r2
9001844a:	da04      	bge.n	90018456 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
9001844c:	4a08      	ldr	r2, [pc, #32]	; (90018470 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001844e:	6812      	ldr	r2, [r2, #0]
90018450:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
90018454:	4770      	bx	lr
90018456:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001845a:	4293      	cmp	r3, r2
9001845c:	d103      	bne.n	90018466 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
9001845e:	4b07      	ldr	r3, [pc, #28]	; (9001847c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
90018460:	681b      	ldr	r3, [r3, #0]
90018462:	6c58      	ldr	r0, [r3, #68]	; 0x44
90018464:	4770      	bx	lr
90018466:	2000      	movs	r0, #0
90018468:	4770      	bx	lr
9001846a:	bf00      	nop
9001846c:	24023634 	.word	0x24023634
90018470:	24023618 	.word	0x24023618
90018474:	2402363c 	.word	0x2402363c
90018478:	24023638 	.word	0x24023638
9001847c:	240235ac 	.word	0x240235ac

90018480 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
90018480:	4b24      	ldr	r3, [pc, #144]	; (90018514 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
90018482:	8802      	ldrh	r2, [r0, #0]
90018484:	8818      	ldrh	r0, [r3, #0]
90018486:	4282      	cmp	r2, r0
90018488:	d221      	bcs.n	900184ce <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
9001848a:	4b23      	ldr	r3, [pc, #140]	; (90018518 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
9001848c:	6819      	ldr	r1, [r3, #0]
9001848e:	2314      	movs	r3, #20
90018490:	fb03 1302 	mla	r3, r3, r2, r1
90018494:	6858      	ldr	r0, [r3, #4]
90018496:	2800      	cmp	r0, #0
90018498:	d03a      	beq.n	90018510 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001849a:	4920      	ldr	r1, [pc, #128]	; (9001851c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001849c:	6809      	ldr	r1, [r1, #0]
9001849e:	2900      	cmp	r1, #0
900184a0:	d036      	beq.n	90018510 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
900184a2:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
900184a6:	2900      	cmp	r1, #0
900184a8:	d032      	beq.n	90018510 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
900184aa:	891a      	ldrh	r2, [r3, #8]
900184ac:	8958      	ldrh	r0, [r3, #10]
900184ae:	4350      	muls	r0, r2
900184b0:	7c5a      	ldrb	r2, [r3, #17]
900184b2:	7cdb      	ldrb	r3, [r3, #19]
900184b4:	0952      	lsrs	r2, r2, #5
900184b6:	f3c3 1342 	ubfx	r3, r3, #5, #3
900184ba:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
900184be:	2b0b      	cmp	r3, #11
900184c0:	bf18      	it	ne
900184c2:	0040      	lslne	r0, r0, #1
900184c4:	3003      	adds	r0, #3
900184c6:	f020 0003 	bic.w	r0, r0, #3
900184ca:	4408      	add	r0, r1
900184cc:	4770      	bx	lr
900184ce:	4b14      	ldr	r3, [pc, #80]	; (90018520 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
900184d0:	881b      	ldrh	r3, [r3, #0]
900184d2:	4403      	add	r3, r0
900184d4:	429a      	cmp	r2, r3
900184d6:	da1a      	bge.n	9001850e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
900184d8:	4b12      	ldr	r3, [pc, #72]	; (90018524 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
900184da:	1a10      	subs	r0, r2, r0
900184dc:	210e      	movs	r1, #14
900184de:	681b      	ldr	r3, [r3, #0]
900184e0:	fb01 3000 	mla	r0, r1, r0, r3
900184e4:	7b03      	ldrb	r3, [r0, #12]
900184e6:	f003 031f 	and.w	r3, r3, #31
900184ea:	2b0b      	cmp	r3, #11
900184ec:	d10b      	bne.n	90018506 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
900184ee:	8903      	ldrh	r3, [r0, #8]
900184f0:	8940      	ldrh	r0, [r0, #10]
900184f2:	4358      	muls	r0, r3
900184f4:	4b09      	ldr	r3, [pc, #36]	; (9001851c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
900184f6:	3003      	adds	r0, #3
900184f8:	6819      	ldr	r1, [r3, #0]
900184fa:	f020 0303 	bic.w	r3, r0, #3
900184fe:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
90018502:	4418      	add	r0, r3
90018504:	4770      	bx	lr
90018506:	2b0d      	cmp	r3, #13
90018508:	d101      	bne.n	9001850e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001850a:	300d      	adds	r0, #13
9001850c:	4770      	bx	lr
9001850e:	2000      	movs	r0, #0
90018510:	4770      	bx	lr
90018512:	bf00      	nop
90018514:	24023634 	.word	0x24023634
90018518:	2402363c 	.word	0x2402363c
9001851c:	24023618 	.word	0x24023618
90018520:	24023638 	.word	0x24023638
90018524:	2402361c 	.word	0x2402361c

90018528 <_ZNK8touchgfx6Bitmap9getFormatEv>:
90018528:	4a17      	ldr	r2, [pc, #92]	; (90018588 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
9001852a:	b510      	push	{r4, lr}
9001852c:	8803      	ldrh	r3, [r0, #0]
9001852e:	8812      	ldrh	r2, [r2, #0]
90018530:	4293      	cmp	r3, r2
90018532:	d20c      	bcs.n	9001854e <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
90018534:	4a15      	ldr	r2, [pc, #84]	; (9001858c <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
90018536:	2114      	movs	r1, #20
90018538:	6812      	ldr	r2, [r2, #0]
9001853a:	fb01 2303 	mla	r3, r1, r3, r2
9001853e:	7c58      	ldrb	r0, [r3, #17]
90018540:	0942      	lsrs	r2, r0, #5
90018542:	7cd8      	ldrb	r0, [r3, #19]
90018544:	f3c0 1042 	ubfx	r0, r0, #5, #3
90018548:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
9001854c:	bd10      	pop	{r4, pc}
9001854e:	4910      	ldr	r1, [pc, #64]	; (90018590 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
90018550:	8809      	ldrh	r1, [r1, #0]
90018552:	4411      	add	r1, r2
90018554:	428b      	cmp	r3, r1
90018556:	da09      	bge.n	9001856c <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
90018558:	1a9b      	subs	r3, r3, r2
9001855a:	4a0e      	ldr	r2, [pc, #56]	; (90018594 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
9001855c:	210e      	movs	r1, #14
9001855e:	6812      	ldr	r2, [r2, #0]
90018560:	fb01 2303 	mla	r3, r1, r3, r2
90018564:	7b18      	ldrb	r0, [r3, #12]
90018566:	f000 001f 	and.w	r0, r0, #31
9001856a:	e7ef      	b.n	9001854c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
9001856c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
90018570:	4293      	cmp	r3, r2
90018572:	d106      	bne.n	90018582 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
90018574:	f7f8 f8ec 	bl	90010750 <_ZN8touchgfx3HAL3lcdEv>
90018578:	6803      	ldr	r3, [r0, #0]
9001857a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001857e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90018580:	4718      	bx	r3
90018582:	2000      	movs	r0, #0
90018584:	e7e2      	b.n	9001854c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
90018586:	bf00      	nop
90018588:	24023634 	.word	0x24023634
9001858c:	2402363c 	.word	0x2402363c
90018590:	24023638 	.word	0x24023638
90018594:	2402361c 	.word	0x2402361c

90018598 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
90018598:	2010      	movs	r0, #16
9001859a:	4770      	bx	lr

9001859c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
9001859c:	4b02      	ldr	r3, [pc, #8]	; (900185a8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
9001859e:	8818      	ldrh	r0, [r3, #0]
900185a0:	0040      	lsls	r0, r0, #1
900185a2:	b280      	uxth	r0, r0
900185a4:	4770      	bx	lr
900185a6:	bf00      	nop
900185a8:	240235a6 	.word	0x240235a6

900185ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
900185ac:	2bff      	cmp	r3, #255	; 0xff
900185ae:	d050      	beq.n	90018652 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
900185b0:	2a0b      	cmp	r2, #11
900185b2:	d04a      	beq.n	9001864a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
900185b4:	d80e      	bhi.n	900185d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
900185b6:	2a03      	cmp	r2, #3
900185b8:	d03f      	beq.n	9001863a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
900185ba:	d804      	bhi.n	900185c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
900185bc:	2a01      	cmp	r2, #1
900185be:	d03e      	beq.n	9001863e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
900185c0:	d93f      	bls.n	90018642 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
900185c2:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
900185c4:	4770      	bx	lr
900185c6:	2a09      	cmp	r2, #9
900185c8:	d03f      	beq.n	9001864a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
900185ca:	d83c      	bhi.n	90018646 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
900185cc:	2a08      	cmp	r2, #8
900185ce:	d03a      	beq.n	90018646 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
900185d0:	2000      	movs	r0, #0
900185d2:	4770      	bx	lr
900185d4:	2a2f      	cmp	r2, #47	; 0x2f
900185d6:	d024      	beq.n	90018622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
900185d8:	d80d      	bhi.n	900185f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
900185da:	2a2d      	cmp	r2, #45	; 0x2d
900185dc:	d014      	beq.n	90018608 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
900185de:	d826      	bhi.n	9001862e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
900185e0:	2a2c      	cmp	r2, #44	; 0x2c
900185e2:	d1f5      	bne.n	900185d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900185e4:	684b      	ldr	r3, [r1, #4]
900185e6:	781b      	ldrb	r3, [r3, #0]
900185e8:	2b01      	cmp	r3, #1
900185ea:	d018      	beq.n	9001861e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
900185ec:	d323      	bcc.n	90018636 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
900185ee:	2b02      	cmp	r3, #2
900185f0:	d1ee      	bne.n	900185d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900185f2:	68c0      	ldr	r0, [r0, #12]
900185f4:	4770      	bx	lr
900185f6:	2a31      	cmp	r2, #49	; 0x31
900185f8:	d004      	beq.n	90018604 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
900185fa:	d328      	bcc.n	9001864e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
900185fc:	2a32      	cmp	r2, #50	; 0x32
900185fe:	d026      	beq.n	9001864e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
90018600:	2a33      	cmp	r2, #51	; 0x33
90018602:	d1e5      	bne.n	900185d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018604:	6f40      	ldr	r0, [r0, #116]	; 0x74
90018606:	4770      	bx	lr
90018608:	684b      	ldr	r3, [r1, #4]
9001860a:	781b      	ldrb	r3, [r3, #0]
9001860c:	2b01      	cmp	r3, #1
9001860e:	d004      	beq.n	9001861a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
90018610:	d30b      	bcc.n	9001862a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90018612:	2b02      	cmp	r3, #2
90018614:	d1dc      	bne.n	900185d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018616:	6940      	ldr	r0, [r0, #20]
90018618:	4770      	bx	lr
9001861a:	6a40      	ldr	r0, [r0, #36]	; 0x24
9001861c:	4770      	bx	lr
9001861e:	69c0      	ldr	r0, [r0, #28]
90018620:	4770      	bx	lr
90018622:	684b      	ldr	r3, [r1, #4]
90018624:	781b      	ldrb	r3, [r3, #0]
90018626:	2b00      	cmp	r3, #0
90018628:	d1d2      	bne.n	900185d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001862a:	6b40      	ldr	r0, [r0, #52]	; 0x34
9001862c:	4770      	bx	lr
9001862e:	684b      	ldr	r3, [r1, #4]
90018630:	781b      	ldrb	r3, [r3, #0]
90018632:	2b00      	cmp	r3, #0
90018634:	d1cc      	bne.n	900185d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018636:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
90018638:	4770      	bx	lr
9001863a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
9001863c:	4770      	bx	lr
9001863e:	6d40      	ldr	r0, [r0, #84]	; 0x54
90018640:	4770      	bx	lr
90018642:	6c40      	ldr	r0, [r0, #68]	; 0x44
90018644:	4770      	bx	lr
90018646:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
90018648:	4770      	bx	lr
9001864a:	6e40      	ldr	r0, [r0, #100]	; 0x64
9001864c:	4770      	bx	lr
9001864e:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
90018650:	4770      	bx	lr
90018652:	2a0b      	cmp	r2, #11
90018654:	d049      	beq.n	900186ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
90018656:	d80e      	bhi.n	90018676 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
90018658:	2a03      	cmp	r2, #3
9001865a:	d040      	beq.n	900186de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
9001865c:	d804      	bhi.n	90018668 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
9001865e:	2a01      	cmp	r2, #1
90018660:	d03f      	beq.n	900186e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
90018662:	d940      	bls.n	900186e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
90018664:	6c00      	ldr	r0, [r0, #64]	; 0x40
90018666:	4770      	bx	lr
90018668:	2a09      	cmp	r2, #9
9001866a:	d03e      	beq.n	900186ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001866c:	d801      	bhi.n	90018672 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
9001866e:	2a08      	cmp	r2, #8
90018670:	d1ae      	bne.n	900185d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018672:	6e00      	ldr	r0, [r0, #96]	; 0x60
90018674:	4770      	bx	lr
90018676:	2a2f      	cmp	r2, #47	; 0x2f
90018678:	d024      	beq.n	900186c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
9001867a:	d80d      	bhi.n	90018698 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
9001867c:	2a2d      	cmp	r2, #45	; 0x2d
9001867e:	d014      	beq.n	900186aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
90018680:	d826      	bhi.n	900186d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
90018682:	2a2c      	cmp	r2, #44	; 0x2c
90018684:	d1a4      	bne.n	900185d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018686:	684b      	ldr	r3, [r1, #4]
90018688:	781b      	ldrb	r3, [r3, #0]
9001868a:	2b01      	cmp	r3, #1
9001868c:	d018      	beq.n	900186c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
9001868e:	d324      	bcc.n	900186da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
90018690:	2b02      	cmp	r3, #2
90018692:	d19d      	bne.n	900185d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018694:	6900      	ldr	r0, [r0, #16]
90018696:	4770      	bx	lr
90018698:	2a31      	cmp	r2, #49	; 0x31
9001869a:	d004      	beq.n	900186a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
9001869c:	d327      	bcc.n	900186ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001869e:	2a32      	cmp	r2, #50	; 0x32
900186a0:	d025      	beq.n	900186ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
900186a2:	2a33      	cmp	r2, #51	; 0x33
900186a4:	d194      	bne.n	900185d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900186a6:	6f80      	ldr	r0, [r0, #120]	; 0x78
900186a8:	4770      	bx	lr
900186aa:	684b      	ldr	r3, [r1, #4]
900186ac:	781b      	ldrb	r3, [r3, #0]
900186ae:	2b01      	cmp	r3, #1
900186b0:	d004      	beq.n	900186bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
900186b2:	d30b      	bcc.n	900186cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
900186b4:	2b02      	cmp	r3, #2
900186b6:	d18b      	bne.n	900185d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900186b8:	6980      	ldr	r0, [r0, #24]
900186ba:	4770      	bx	lr
900186bc:	6a80      	ldr	r0, [r0, #40]	; 0x28
900186be:	4770      	bx	lr
900186c0:	6a00      	ldr	r0, [r0, #32]
900186c2:	4770      	bx	lr
900186c4:	684b      	ldr	r3, [r1, #4]
900186c6:	781b      	ldrb	r3, [r3, #0]
900186c8:	2b00      	cmp	r3, #0
900186ca:	d181      	bne.n	900185d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900186cc:	6b80      	ldr	r0, [r0, #56]	; 0x38
900186ce:	4770      	bx	lr
900186d0:	684b      	ldr	r3, [r1, #4]
900186d2:	781b      	ldrb	r3, [r3, #0]
900186d4:	2b00      	cmp	r3, #0
900186d6:	f47f af7b 	bne.w	900185d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900186da:	6b00      	ldr	r0, [r0, #48]	; 0x30
900186dc:	4770      	bx	lr
900186de:	6d00      	ldr	r0, [r0, #80]	; 0x50
900186e0:	4770      	bx	lr
900186e2:	6d80      	ldr	r0, [r0, #88]	; 0x58
900186e4:	4770      	bx	lr
900186e6:	6c80      	ldr	r0, [r0, #72]	; 0x48
900186e8:	4770      	bx	lr
900186ea:	6e80      	ldr	r0, [r0, #104]	; 0x68
900186ec:	4770      	bx	lr
900186ee:	6f00      	ldr	r0, [r0, #112]	; 0x70
900186f0:	4770      	bx	lr

900186f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900186f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900186f6:	b087      	sub	sp, #28
900186f8:	9815      	ldr	r0, [sp, #84]	; 0x54
900186fa:	9205      	str	r2, [sp, #20]
900186fc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
90018700:	9101      	str	r1, [sp, #4]
90018702:	9202      	str	r2, [sp, #8]
90018704:	6841      	ldr	r1, [r0, #4]
90018706:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
9001870a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001870e:	fb01 2404 	mla	r4, r1, r4, r2
90018712:	6802      	ldr	r2, [r0, #0]
90018714:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90018718:	f8de 2000 	ldr.w	r2, [lr]
9001871c:	9203      	str	r2, [sp, #12]
9001871e:	f8de 2004 	ldr.w	r2, [lr, #4]
90018722:	3204      	adds	r2, #4
90018724:	9204      	str	r2, [sp, #16]
90018726:	9a02      	ldr	r2, [sp, #8]
90018728:	43d6      	mvns	r6, r2
9001872a:	b2f6      	uxtb	r6, r6
9001872c:	9a01      	ldr	r2, [sp, #4]
9001872e:	2a00      	cmp	r2, #0
90018730:	dc03      	bgt.n	9001873a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90018732:	9a05      	ldr	r2, [sp, #20]
90018734:	2a00      	cmp	r2, #0
90018736:	f340 8129 	ble.w	9001898c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001873a:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001873c:	f9be c008 	ldrsh.w	ip, [lr, #8]
90018740:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90018744:	9a12      	ldr	r2, [sp, #72]	; 0x48
90018746:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001874a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001874e:	2b00      	cmp	r3, #0
90018750:	dd0e      	ble.n	90018770 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90018752:	1408      	asrs	r0, r1, #16
90018754:	d405      	bmi.n	90018762 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90018756:	4560      	cmp	r0, ip
90018758:	da03      	bge.n	90018762 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001875a:	1410      	asrs	r0, r2, #16
9001875c:	d401      	bmi.n	90018762 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001875e:	42b8      	cmp	r0, r7
90018760:	db07      	blt.n	90018772 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
90018762:	9813      	ldr	r0, [sp, #76]	; 0x4c
90018764:	3b01      	subs	r3, #1
90018766:	3402      	adds	r4, #2
90018768:	4401      	add	r1, r0
9001876a:	9814      	ldr	r0, [sp, #80]	; 0x50
9001876c:	4402      	add	r2, r0
9001876e:	e7ee      	b.n	9001874e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
90018770:	d071      	beq.n	90018856 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90018772:	1e58      	subs	r0, r3, #1
90018774:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90018776:	fb05 1500 	mla	r5, r5, r0, r1
9001877a:	142d      	asrs	r5, r5, #16
9001877c:	d45f      	bmi.n	9001883e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001877e:	4565      	cmp	r5, ip
90018780:	da5d      	bge.n	9001883e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
90018782:	9d14      	ldr	r5, [sp, #80]	; 0x50
90018784:	fb05 2000 	mla	r0, r5, r0, r2
90018788:	1400      	asrs	r0, r0, #16
9001878a:	d458      	bmi.n	9001883e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001878c:	42b8      	cmp	r0, r7
9001878e:	da56      	bge.n	9001883e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
90018790:	4699      	mov	r9, r3
90018792:	46a2      	mov	sl, r4
90018794:	f8bd b008 	ldrh.w	fp, [sp, #8]
90018798:	f1b9 0f00 	cmp.w	r9, #0
9001879c:	dd57      	ble.n	9001884e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
9001879e:	ea4f 4c22 	mov.w	ip, r2, asr #16
900187a2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
900187a6:	9803      	ldr	r0, [sp, #12]
900187a8:	140d      	asrs	r5, r1, #16
900187aa:	f109 39ff 	add.w	r9, r9, #4294967295
900187ae:	fb07 000c 	mla	r0, r7, ip, r0
900187b2:	5d40      	ldrb	r0, [r0, r5]
900187b4:	9d04      	ldr	r5, [sp, #16]
900187b6:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
900187ba:	f8ba 5000 	ldrh.w	r5, [sl]
900187be:	ea4f 2c20 	mov.w	ip, r0, asr #8
900187c2:	122f      	asrs	r7, r5, #8
900187c4:	ea4f 08e5 	mov.w	r8, r5, asr #3
900187c8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
900187cc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
900187d0:	00ed      	lsls	r5, r5, #3
900187d2:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
900187d6:	fb17 f706 	smulbb	r7, r7, r6
900187da:	b2ed      	uxtb	r5, r5
900187dc:	fb18 f806 	smulbb	r8, r8, r6
900187e0:	fb0c 7c0b 	mla	ip, ip, fp, r7
900187e4:	10c7      	asrs	r7, r0, #3
900187e6:	fb15 f506 	smulbb	r5, r5, r6
900187ea:	00c0      	lsls	r0, r0, #3
900187ec:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
900187f0:	fa1f fc8c 	uxth.w	ip, ip
900187f4:	b2c0      	uxtb	r0, r0
900187f6:	fb07 870b 	mla	r7, r7, fp, r8
900187fa:	fb00 500b 	mla	r0, r0, fp, r5
900187fe:	f10c 0501 	add.w	r5, ip, #1
90018802:	b2bf      	uxth	r7, r7
90018804:	b280      	uxth	r0, r0
90018806:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001880a:	f107 0801 	add.w	r8, r7, #1
9001880e:	1c45      	adds	r5, r0, #1
90018810:	eb08 2817 	add.w	r8, r8, r7, lsr #8
90018814:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90018818:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001881c:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001881e:	ea4f 1858 	mov.w	r8, r8, lsr #5
90018822:	f3c5 25c4 	ubfx	r5, r5, #11, #5
90018826:	4401      	add	r1, r0
90018828:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9001882c:	9814      	ldr	r0, [sp, #80]	; 0x50
9001882e:	ea45 0c0c 	orr.w	ip, r5, ip
90018832:	4402      	add	r2, r0
90018834:	ea4c 0c08 	orr.w	ip, ip, r8
90018838:	f82a cb02 	strh.w	ip, [sl], #2
9001883c:	e7ac      	b.n	90018798 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001883e:	f04f 0800 	mov.w	r8, #0
90018842:	f8bd a008 	ldrh.w	sl, [sp, #8]
90018846:	eb03 0008 	add.w	r0, r3, r8
9001884a:	2800      	cmp	r0, #0
9001884c:	dc41      	bgt.n	900188d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9001884e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90018852:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90018856:	9b01      	ldr	r3, [sp, #4]
90018858:	2b00      	cmp	r3, #0
9001885a:	f340 8097 	ble.w	9001898c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001885e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90018862:	9b10      	ldr	r3, [sp, #64]	; 0x40
90018864:	ee30 0a04 	vadd.f32	s0, s0, s8
90018868:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001886c:	eef0 6a62 	vmov.f32	s13, s5
90018870:	eec7 7a00 	vdiv.f32	s15, s14, s0
90018874:	ee31 1a05 	vadd.f32	s2, s2, s10
90018878:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001887c:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
90018880:	eef0 6a43 	vmov.f32	s13, s6
90018884:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90018888:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
9001888c:	ee20 7aa7 	vmul.f32	s14, s1, s15
90018890:	ee61 7a27 	vmul.f32	s15, s2, s15
90018894:	ee77 2a62 	vsub.f32	s5, s14, s5
90018898:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001889c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900188a0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900188a4:	ee12 2a90 	vmov	r2, s5
900188a8:	eef0 2a47 	vmov.f32	s5, s14
900188ac:	fb92 f3f3 	sdiv	r3, r2, r3
900188b0:	ee13 2a10 	vmov	r2, s6
900188b4:	9313      	str	r3, [sp, #76]	; 0x4c
900188b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
900188b8:	eeb0 3a67 	vmov.f32	s6, s15
900188bc:	fb92 f3f3 	sdiv	r3, r2, r3
900188c0:	9314      	str	r3, [sp, #80]	; 0x50
900188c2:	9b01      	ldr	r3, [sp, #4]
900188c4:	9a05      	ldr	r2, [sp, #20]
900188c6:	3b01      	subs	r3, #1
900188c8:	9301      	str	r3, [sp, #4]
900188ca:	9b10      	ldr	r3, [sp, #64]	; 0x40
900188cc:	bf08      	it	eq
900188ce:	4613      	moveq	r3, r2
900188d0:	e72c      	b.n	9001872c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
900188d2:	140f      	asrs	r7, r1, #16
900188d4:	d453      	bmi.n	9001897e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
900188d6:	f8de 5008 	ldr.w	r5, [lr, #8]
900188da:	42bd      	cmp	r5, r7
900188dc:	dd4f      	ble.n	9001897e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
900188de:	ea5f 4c22 	movs.w	ip, r2, asr #16
900188e2:	d44c      	bmi.n	9001897e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
900188e4:	f8de 000c 	ldr.w	r0, [lr, #12]
900188e8:	4560      	cmp	r0, ip
900188ea:	dd48      	ble.n	9001897e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
900188ec:	9803      	ldr	r0, [sp, #12]
900188ee:	b22d      	sxth	r5, r5
900188f0:	fb0c 0505 	mla	r5, ip, r5, r0
900188f4:	5de8      	ldrb	r0, [r5, r7]
900188f6:	9d04      	ldr	r5, [sp, #16]
900188f8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
900188fc:	f06f 0501 	mvn.w	r5, #1
90018900:	fb05 fb08 	mul.w	fp, r5, r8
90018904:	ea4f 2c20 	mov.w	ip, r0, asr #8
90018908:	f834 500b 	ldrh.w	r5, [r4, fp]
9001890c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90018910:	122f      	asrs	r7, r5, #8
90018912:	ea4f 09e5 	mov.w	r9, r5, asr #3
90018916:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001891a:	00ed      	lsls	r5, r5, #3
9001891c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
90018920:	fb17 f706 	smulbb	r7, r7, r6
90018924:	b2ed      	uxtb	r5, r5
90018926:	fb19 f906 	smulbb	r9, r9, r6
9001892a:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001892e:	10c7      	asrs	r7, r0, #3
90018930:	fb15 f506 	smulbb	r5, r5, r6
90018934:	00c0      	lsls	r0, r0, #3
90018936:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001893a:	fa1f fc8c 	uxth.w	ip, ip
9001893e:	b2c0      	uxtb	r0, r0
90018940:	fb07 970a 	mla	r7, r7, sl, r9
90018944:	fb00 500a 	mla	r0, r0, sl, r5
90018948:	f10c 0501 	add.w	r5, ip, #1
9001894c:	b2bf      	uxth	r7, r7
9001894e:	b280      	uxth	r0, r0
90018950:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
90018954:	f107 0901 	add.w	r9, r7, #1
90018958:	1c45      	adds	r5, r0, #1
9001895a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001895e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90018962:	eb05 2510 	add.w	r5, r5, r0, lsr #8
90018966:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001896a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001896e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90018972:	ea45 0c0c 	orr.w	ip, r5, ip
90018976:	ea4c 0c09 	orr.w	ip, ip, r9
9001897a:	f824 c00b 	strh.w	ip, [r4, fp]
9001897e:	9813      	ldr	r0, [sp, #76]	; 0x4c
90018980:	f108 38ff 	add.w	r8, r8, #4294967295
90018984:	4401      	add	r1, r0
90018986:	9814      	ldr	r0, [sp, #80]	; 0x50
90018988:	4402      	add	r2, r0
9001898a:	e75c      	b.n	90018846 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9001898c:	b007      	add	sp, #28
9001898e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90018992 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90018992:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018996:	b085      	sub	sp, #20
90018998:	4693      	mov	fp, r2
9001899a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001899e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
900189a0:	9d16      	ldr	r5, [sp, #88]	; 0x58
900189a2:	6870      	ldr	r0, [r6, #4]
900189a4:	9100      	str	r1, [sp, #0]
900189a6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
900189aa:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
900189ae:	fb00 2404 	mla	r4, r0, r4, r2
900189b2:	6832      	ldr	r2, [r6, #0]
900189b4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
900189b8:	682a      	ldr	r2, [r5, #0]
900189ba:	9201      	str	r2, [sp, #4]
900189bc:	686a      	ldr	r2, [r5, #4]
900189be:	3204      	adds	r2, #4
900189c0:	9202      	str	r2, [sp, #8]
900189c2:	9a00      	ldr	r2, [sp, #0]
900189c4:	2a00      	cmp	r2, #0
900189c6:	dc03      	bgt.n	900189d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
900189c8:	f1bb 0f00 	cmp.w	fp, #0
900189cc:	f340 80a0 	ble.w	90018b10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
900189d0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900189d2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
900189d6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
900189da:	9a10      	ldr	r2, [sp, #64]	; 0x40
900189dc:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
900189e0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
900189e4:	2b00      	cmp	r3, #0
900189e6:	dd0c      	ble.n	90018a02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900189e8:	1406      	asrs	r6, r0, #16
900189ea:	d405      	bmi.n	900189f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900189ec:	454e      	cmp	r6, r9
900189ee:	da03      	bge.n	900189f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900189f0:	1416      	asrs	r6, r2, #16
900189f2:	d401      	bmi.n	900189f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900189f4:	4546      	cmp	r6, r8
900189f6:	db05      	blt.n	90018a04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
900189f8:	4470      	add	r0, lr
900189fa:	4462      	add	r2, ip
900189fc:	3b01      	subs	r3, #1
900189fe:	3402      	adds	r4, #2
90018a00:	e7f0      	b.n	900189e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90018a02:	d00f      	beq.n	90018a24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90018a04:	1e5e      	subs	r6, r3, #1
90018a06:	fb0e 0706 	mla	r7, lr, r6, r0
90018a0a:	143f      	asrs	r7, r7, #16
90018a0c:	d541      	bpl.n	90018a92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
90018a0e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
90018a12:	4698      	mov	r8, r3
90018a14:	9603      	str	r6, [sp, #12]
90018a16:	f1b8 0f00 	cmp.w	r8, #0
90018a1a:	dc59      	bgt.n	90018ad0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
90018a1c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90018a20:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90018a24:	9b00      	ldr	r3, [sp, #0]
90018a26:	2b00      	cmp	r3, #0
90018a28:	dd72      	ble.n	90018b10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
90018a2a:	ee30 0a04 	vadd.f32	s0, s0, s8
90018a2e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90018a30:	ee70 0aa4 	vadd.f32	s1, s1, s9
90018a34:	eeb0 6a62 	vmov.f32	s12, s5
90018a38:	eec6 7a80 	vdiv.f32	s15, s13, s0
90018a3c:	ee31 1a05 	vadd.f32	s2, s2, s10
90018a40:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90018a44:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
90018a48:	eeb0 6a43 	vmov.f32	s12, s6
90018a4c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90018a50:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
90018a54:	ee20 7aa7 	vmul.f32	s14, s1, s15
90018a58:	ee61 7a27 	vmul.f32	s15, s2, s15
90018a5c:	ee77 2a62 	vsub.f32	s5, s14, s5
90018a60:	ee37 3ac3 	vsub.f32	s6, s15, s6
90018a64:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90018a68:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90018a6c:	ee12 2a90 	vmov	r2, s5
90018a70:	eef0 2a47 	vmov.f32	s5, s14
90018a74:	fb92 fef3 	sdiv	lr, r2, r3
90018a78:	ee13 2a10 	vmov	r2, s6
90018a7c:	eeb0 3a67 	vmov.f32	s6, s15
90018a80:	fb92 fcf3 	sdiv	ip, r2, r3
90018a84:	9b00      	ldr	r3, [sp, #0]
90018a86:	3b01      	subs	r3, #1
90018a88:	9300      	str	r3, [sp, #0]
90018a8a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90018a8c:	bf08      	it	eq
90018a8e:	465b      	moveq	r3, fp
90018a90:	e797      	b.n	900189c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90018a92:	454f      	cmp	r7, r9
90018a94:	dabb      	bge.n	90018a0e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90018a96:	fb0c 2606 	mla	r6, ip, r6, r2
90018a9a:	1436      	asrs	r6, r6, #16
90018a9c:	d4b7      	bmi.n	90018a0e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90018a9e:	4546      	cmp	r6, r8
90018aa0:	dab5      	bge.n	90018a0e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90018aa2:	461e      	mov	r6, r3
90018aa4:	46a0      	mov	r8, r4
90018aa6:	2e00      	cmp	r6, #0
90018aa8:	ddb8      	ble.n	90018a1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90018aaa:	1417      	asrs	r7, r2, #16
90018aac:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
90018ab0:	9901      	ldr	r1, [sp, #4]
90018ab2:	ea4f 4920 	mov.w	r9, r0, asr #16
90018ab6:	4462      	add	r2, ip
90018ab8:	4470      	add	r0, lr
90018aba:	fb0a 1707 	mla	r7, sl, r7, r1
90018abe:	9902      	ldr	r1, [sp, #8]
90018ac0:	3e01      	subs	r6, #1
90018ac2:	f817 7009 	ldrb.w	r7, [r7, r9]
90018ac6:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
90018aca:	f828 7b02 	strh.w	r7, [r8], #2
90018ace:	e7ea      	b.n	90018aa6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
90018ad0:	ea5f 4920 	movs.w	r9, r0, asr #16
90018ad4:	d417      	bmi.n	90018b06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
90018ad6:	68ae      	ldr	r6, [r5, #8]
90018ad8:	454e      	cmp	r6, r9
90018ada:	dd14      	ble.n	90018b06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
90018adc:	ea5f 4a22 	movs.w	sl, r2, asr #16
90018ae0:	d411      	bmi.n	90018b06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
90018ae2:	68ef      	ldr	r7, [r5, #12]
90018ae4:	4557      	cmp	r7, sl
90018ae6:	dd0e      	ble.n	90018b06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
90018ae8:	9f01      	ldr	r7, [sp, #4]
90018aea:	b236      	sxth	r6, r6
90018aec:	f06f 0101 	mvn.w	r1, #1
90018af0:	fb0a 7606 	mla	r6, sl, r6, r7
90018af4:	9f02      	ldr	r7, [sp, #8]
90018af6:	f816 6009 	ldrb.w	r6, [r6, r9]
90018afa:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
90018afe:	fb01 f608 	mul.w	r6, r1, r8
90018b02:	9903      	ldr	r1, [sp, #12]
90018b04:	538f      	strh	r7, [r1, r6]
90018b06:	4470      	add	r0, lr
90018b08:	4462      	add	r2, ip
90018b0a:	f108 38ff 	add.w	r8, r8, #4294967295
90018b0e:	e782      	b.n	90018a16 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90018b10:	b005      	add	sp, #20
90018b12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90018b16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90018b16:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018b1a:	b087      	sub	sp, #28
90018b1c:	9c15      	ldr	r4, [sp, #84]	; 0x54
90018b1e:	9205      	str	r2, [sp, #20]
90018b20:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
90018b24:	9102      	str	r1, [sp, #8]
90018b26:	9203      	str	r2, [sp, #12]
90018b28:	6861      	ldr	r1, [r4, #4]
90018b2a:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
90018b2e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
90018b32:	fb01 2000 	mla	r0, r1, r0, r2
90018b36:	6822      	ldr	r2, [r4, #0]
90018b38:	eb02 0240 	add.w	r2, r2, r0, lsl #1
90018b3c:	9200      	str	r2, [sp, #0]
90018b3e:	f8dc 2000 	ldr.w	r2, [ip]
90018b42:	9204      	str	r2, [sp, #16]
90018b44:	f8dc 2004 	ldr.w	r2, [ip, #4]
90018b48:	3204      	adds	r2, #4
90018b4a:	9201      	str	r2, [sp, #4]
90018b4c:	9a03      	ldr	r2, [sp, #12]
90018b4e:	43d5      	mvns	r5, r2
90018b50:	b2ed      	uxtb	r5, r5
90018b52:	9a02      	ldr	r2, [sp, #8]
90018b54:	2a00      	cmp	r2, #0
90018b56:	dc03      	bgt.n	90018b60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90018b58:	9a05      	ldr	r2, [sp, #20]
90018b5a:	2a00      	cmp	r2, #0
90018b5c:	f340 812c 	ble.w	90018db8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
90018b60:	9a11      	ldr	r2, [sp, #68]	; 0x44
90018b62:	f9bc e008 	ldrsh.w	lr, [ip, #8]
90018b66:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90018b6a:	9a12      	ldr	r2, [sp, #72]	; 0x48
90018b6c:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
90018b70:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90018b74:	2b00      	cmp	r3, #0
90018b76:	dd10      	ble.n	90018b9a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90018b78:	140c      	asrs	r4, r1, #16
90018b7a:	d405      	bmi.n	90018b88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90018b7c:	4574      	cmp	r4, lr
90018b7e:	da03      	bge.n	90018b88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90018b80:	1414      	asrs	r4, r2, #16
90018b82:	d401      	bmi.n	90018b88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90018b84:	42bc      	cmp	r4, r7
90018b86:	db09      	blt.n	90018b9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90018b88:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90018b8a:	3b01      	subs	r3, #1
90018b8c:	9800      	ldr	r0, [sp, #0]
90018b8e:	4421      	add	r1, r4
90018b90:	9c14      	ldr	r4, [sp, #80]	; 0x50
90018b92:	3002      	adds	r0, #2
90018b94:	4422      	add	r2, r4
90018b96:	9000      	str	r0, [sp, #0]
90018b98:	e7ec      	b.n	90018b74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
90018b9a:	d071      	beq.n	90018c80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
90018b9c:	1e5c      	subs	r4, r3, #1
90018b9e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
90018ba0:	fb06 1604 	mla	r6, r6, r4, r1
90018ba4:	1436      	asrs	r6, r6, #16
90018ba6:	d45d      	bmi.n	90018c64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90018ba8:	4576      	cmp	r6, lr
90018baa:	da5b      	bge.n	90018c64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90018bac:	9e14      	ldr	r6, [sp, #80]	; 0x50
90018bae:	fb06 2404 	mla	r4, r6, r4, r2
90018bb2:	1424      	asrs	r4, r4, #16
90018bb4:	d456      	bmi.n	90018c64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90018bb6:	42bc      	cmp	r4, r7
90018bb8:	da54      	bge.n	90018c64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90018bba:	4698      	mov	r8, r3
90018bbc:	f8dd 9000 	ldr.w	r9, [sp]
90018bc0:	f8bd a00c 	ldrh.w	sl, [sp, #12]
90018bc4:	f1b8 0f00 	cmp.w	r8, #0
90018bc8:	dd54      	ble.n	90018c74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
90018bca:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
90018bce:	1414      	asrs	r4, r2, #16
90018bd0:	9804      	ldr	r0, [sp, #16]
90018bd2:	140e      	asrs	r6, r1, #16
90018bd4:	f108 38ff 	add.w	r8, r8, #4294967295
90018bd8:	fb07 0404 	mla	r4, r7, r4, r0
90018bdc:	9801      	ldr	r0, [sp, #4]
90018bde:	f814 e006 	ldrb.w	lr, [r4, r6]
90018be2:	f8b9 4000 	ldrh.w	r4, [r9]
90018be6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
90018bea:	1227      	asrs	r7, r4, #8
90018bec:	eb00 0b0e 	add.w	fp, r0, lr
90018bf0:	f810 e00e 	ldrb.w	lr, [r0, lr]
90018bf4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90018bf8:	9813      	ldr	r0, [sp, #76]	; 0x4c
90018bfa:	f89b 6002 	ldrb.w	r6, [fp, #2]
90018bfe:	f89b b001 	ldrb.w	fp, [fp, #1]
90018c02:	4401      	add	r1, r0
90018c04:	fb16 f60a 	smulbb	r6, r6, sl
90018c08:	9814      	ldr	r0, [sp, #80]	; 0x50
90018c0a:	fb1b fb0a 	smulbb	fp, fp, sl
90018c0e:	fb07 6705 	mla	r7, r7, r5, r6
90018c12:	10e6      	asrs	r6, r4, #3
90018c14:	00e4      	lsls	r4, r4, #3
90018c16:	4402      	add	r2, r0
90018c18:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90018c1c:	b2bf      	uxth	r7, r7
90018c1e:	b2e4      	uxtb	r4, r4
90018c20:	fb06 b605 	mla	r6, r6, r5, fp
90018c24:	fb14 f405 	smulbb	r4, r4, r5
90018c28:	b2b6      	uxth	r6, r6
90018c2a:	fb0e 4e0a 	mla	lr, lr, sl, r4
90018c2e:	1c7c      	adds	r4, r7, #1
90018c30:	f106 0b01 	add.w	fp, r6, #1
90018c34:	fa1f fe8e 	uxth.w	lr, lr
90018c38:	eb04 2717 	add.w	r7, r4, r7, lsr #8
90018c3c:	f10e 0401 	add.w	r4, lr, #1
90018c40:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
90018c44:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
90018c48:	eb04 241e 	add.w	r4, r4, lr, lsr #8
90018c4c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
90018c50:	f3c4 24c4 	ubfx	r4, r4, #11, #5
90018c54:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
90018c58:	4327      	orrs	r7, r4
90018c5a:	ea47 070b 	orr.w	r7, r7, fp
90018c5e:	f829 7b02 	strh.w	r7, [r9], #2
90018c62:	e7af      	b.n	90018bc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
90018c64:	f04f 0e00 	mov.w	lr, #0
90018c68:	f8bd 900c 	ldrh.w	r9, [sp, #12]
90018c6c:	eb03 040e 	add.w	r4, r3, lr
90018c70:	2c00      	cmp	r4, #0
90018c72:	dc43      	bgt.n	90018cfc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
90018c74:	9a00      	ldr	r2, [sp, #0]
90018c76:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90018c7a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90018c7e:	9300      	str	r3, [sp, #0]
90018c80:	9b02      	ldr	r3, [sp, #8]
90018c82:	2b00      	cmp	r3, #0
90018c84:	f340 8098 	ble.w	90018db8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
90018c88:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90018c8c:	9b10      	ldr	r3, [sp, #64]	; 0x40
90018c8e:	ee30 0a04 	vadd.f32	s0, s0, s8
90018c92:	ee70 0aa4 	vadd.f32	s1, s1, s9
90018c96:	eef0 6a62 	vmov.f32	s13, s5
90018c9a:	eec7 7a00 	vdiv.f32	s15, s14, s0
90018c9e:	ee31 1a05 	vadd.f32	s2, s2, s10
90018ca2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90018ca6:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
90018caa:	eef0 6a43 	vmov.f32	s13, s6
90018cae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90018cb2:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
90018cb6:	ee20 7aa7 	vmul.f32	s14, s1, s15
90018cba:	ee61 7a27 	vmul.f32	s15, s2, s15
90018cbe:	ee77 2a62 	vsub.f32	s5, s14, s5
90018cc2:	ee37 3ac3 	vsub.f32	s6, s15, s6
90018cc6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90018cca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90018cce:	ee12 2a90 	vmov	r2, s5
90018cd2:	eef0 2a47 	vmov.f32	s5, s14
90018cd6:	fb92 f3f3 	sdiv	r3, r2, r3
90018cda:	ee13 2a10 	vmov	r2, s6
90018cde:	9313      	str	r3, [sp, #76]	; 0x4c
90018ce0:	9b10      	ldr	r3, [sp, #64]	; 0x40
90018ce2:	eeb0 3a67 	vmov.f32	s6, s15
90018ce6:	fb92 f3f3 	sdiv	r3, r2, r3
90018cea:	9314      	str	r3, [sp, #80]	; 0x50
90018cec:	9b02      	ldr	r3, [sp, #8]
90018cee:	9a05      	ldr	r2, [sp, #20]
90018cf0:	3b01      	subs	r3, #1
90018cf2:	9302      	str	r3, [sp, #8]
90018cf4:	9b10      	ldr	r3, [sp, #64]	; 0x40
90018cf6:	bf08      	it	eq
90018cf8:	4613      	moveq	r3, r2
90018cfa:	e72a      	b.n	90018b52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90018cfc:	140f      	asrs	r7, r1, #16
90018cfe:	d454      	bmi.n	90018daa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90018d00:	f8dc 6008 	ldr.w	r6, [ip, #8]
90018d04:	42be      	cmp	r6, r7
90018d06:	dd50      	ble.n	90018daa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90018d08:	ea5f 4822 	movs.w	r8, r2, asr #16
90018d0c:	d44d      	bmi.n	90018daa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90018d0e:	f8dc 400c 	ldr.w	r4, [ip, #12]
90018d12:	4544      	cmp	r4, r8
90018d14:	dd49      	ble.n	90018daa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90018d16:	9c04      	ldr	r4, [sp, #16]
90018d18:	b236      	sxth	r6, r6
90018d1a:	f06f 0001 	mvn.w	r0, #1
90018d1e:	fb08 4606 	mla	r6, r8, r6, r4
90018d22:	9c01      	ldr	r4, [sp, #4]
90018d24:	fb00 fa0e 	mul.w	sl, r0, lr
90018d28:	9800      	ldr	r0, [sp, #0]
90018d2a:	f816 8007 	ldrb.w	r8, [r6, r7]
90018d2e:	eb08 0848 	add.w	r8, r8, r8, lsl #1
90018d32:	eb04 0b08 	add.w	fp, r4, r8
90018d36:	f830 400a 	ldrh.w	r4, [r0, sl]
90018d3a:	9801      	ldr	r0, [sp, #4]
90018d3c:	f89b 6002 	ldrb.w	r6, [fp, #2]
90018d40:	1227      	asrs	r7, r4, #8
90018d42:	f89b b001 	ldrb.w	fp, [fp, #1]
90018d46:	fb16 f609 	smulbb	r6, r6, r9
90018d4a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90018d4e:	f810 8008 	ldrb.w	r8, [r0, r8]
90018d52:	fb1b fb09 	smulbb	fp, fp, r9
90018d56:	fb07 6705 	mla	r7, r7, r5, r6
90018d5a:	10e6      	asrs	r6, r4, #3
90018d5c:	00e4      	lsls	r4, r4, #3
90018d5e:	9800      	ldr	r0, [sp, #0]
90018d60:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90018d64:	b2bf      	uxth	r7, r7
90018d66:	b2e4      	uxtb	r4, r4
90018d68:	fb06 b605 	mla	r6, r6, r5, fp
90018d6c:	fb14 f405 	smulbb	r4, r4, r5
90018d70:	b2b6      	uxth	r6, r6
90018d72:	fb08 4809 	mla	r8, r8, r9, r4
90018d76:	1c7c      	adds	r4, r7, #1
90018d78:	f106 0b01 	add.w	fp, r6, #1
90018d7c:	fa1f f888 	uxth.w	r8, r8
90018d80:	eb04 2717 	add.w	r7, r4, r7, lsr #8
90018d84:	f108 0401 	add.w	r4, r8, #1
90018d88:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
90018d8c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
90018d90:	eb04 2418 	add.w	r4, r4, r8, lsr #8
90018d94:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
90018d98:	f3c4 24c4 	ubfx	r4, r4, #11, #5
90018d9c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
90018da0:	4327      	orrs	r7, r4
90018da2:	ea47 070b 	orr.w	r7, r7, fp
90018da6:	f820 700a 	strh.w	r7, [r0, sl]
90018daa:	9813      	ldr	r0, [sp, #76]	; 0x4c
90018dac:	f10e 3eff 	add.w	lr, lr, #4294967295
90018db0:	4401      	add	r1, r0
90018db2:	9814      	ldr	r0, [sp, #80]	; 0x50
90018db4:	4402      	add	r2, r0
90018db6:	e759      	b.n	90018c6c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
90018db8:	b007      	add	sp, #28
90018dba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

90018dc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90018dc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018dc4:	b085      	sub	sp, #20
90018dc6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90018dca:	9e13      	ldr	r6, [sp, #76]	; 0x4c
90018dcc:	9d16      	ldr	r5, [sp, #88]	; 0x58
90018dce:	9203      	str	r2, [sp, #12]
90018dd0:	6870      	ldr	r0, [r6, #4]
90018dd2:	686f      	ldr	r7, [r5, #4]
90018dd4:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
90018dd8:	3704      	adds	r7, #4
90018dda:	9101      	str	r1, [sp, #4]
90018ddc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
90018de0:	fb00 2404 	mla	r4, r0, r4, r2
90018de4:	6832      	ldr	r2, [r6, #0]
90018de6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90018dea:	682a      	ldr	r2, [r5, #0]
90018dec:	9202      	str	r2, [sp, #8]
90018dee:	9a01      	ldr	r2, [sp, #4]
90018df0:	2a00      	cmp	r2, #0
90018df2:	dc03      	bgt.n	90018dfc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90018df4:	9a03      	ldr	r2, [sp, #12]
90018df6:	2a00      	cmp	r2, #0
90018df8:	f340 80cc 	ble.w	90018f94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
90018dfc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90018dfe:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
90018e02:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
90018e06:	9a10      	ldr	r2, [sp, #64]	; 0x40
90018e08:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
90018e0c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90018e10:	2b00      	cmp	r3, #0
90018e12:	dd0d      	ble.n	90018e30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90018e14:	1406      	asrs	r6, r0, #16
90018e16:	d405      	bmi.n	90018e24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
90018e18:	454e      	cmp	r6, r9
90018e1a:	da03      	bge.n	90018e24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
90018e1c:	1416      	asrs	r6, r2, #16
90018e1e:	d401      	bmi.n	90018e24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
90018e20:	4546      	cmp	r6, r8
90018e22:	db06      	blt.n	90018e32 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90018e24:	9e12      	ldr	r6, [sp, #72]	; 0x48
90018e26:	4460      	add	r0, ip
90018e28:	3b01      	subs	r3, #1
90018e2a:	3402      	adds	r4, #2
90018e2c:	4432      	add	r2, r6
90018e2e:	e7ef      	b.n	90018e10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
90018e30:	d00f      	beq.n	90018e52 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90018e32:	1e5e      	subs	r6, r3, #1
90018e34:	fb0c 0e06 	mla	lr, ip, r6, r0
90018e38:	ea5f 4e2e 	movs.w	lr, lr, asr #16
90018e3c:	d543      	bpl.n	90018ec6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
90018e3e:	4698      	mov	r8, r3
90018e40:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
90018e44:	f1b8 0f00 	cmp.w	r8, #0
90018e48:	dc71      	bgt.n	90018f2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
90018e4a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90018e4e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90018e52:	9b01      	ldr	r3, [sp, #4]
90018e54:	2b00      	cmp	r3, #0
90018e56:	f340 809d 	ble.w	90018f94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
90018e5a:	ee30 0a04 	vadd.f32	s0, s0, s8
90018e5e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90018e60:	ee70 0aa4 	vadd.f32	s1, s1, s9
90018e64:	eeb0 6a62 	vmov.f32	s12, s5
90018e68:	eec6 7a80 	vdiv.f32	s15, s13, s0
90018e6c:	ee31 1a05 	vadd.f32	s2, s2, s10
90018e70:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90018e74:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
90018e78:	eeb0 6a43 	vmov.f32	s12, s6
90018e7c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90018e80:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
90018e84:	ee20 7aa7 	vmul.f32	s14, s1, s15
90018e88:	ee61 7a27 	vmul.f32	s15, s2, s15
90018e8c:	ee77 2a62 	vsub.f32	s5, s14, s5
90018e90:	ee37 3ac3 	vsub.f32	s6, s15, s6
90018e94:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90018e98:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90018e9c:	ee12 2a90 	vmov	r2, s5
90018ea0:	eef0 2a47 	vmov.f32	s5, s14
90018ea4:	fb92 fcf3 	sdiv	ip, r2, r3
90018ea8:	ee13 2a10 	vmov	r2, s6
90018eac:	eeb0 3a67 	vmov.f32	s6, s15
90018eb0:	fb92 f3f3 	sdiv	r3, r2, r3
90018eb4:	9312      	str	r3, [sp, #72]	; 0x48
90018eb6:	9b01      	ldr	r3, [sp, #4]
90018eb8:	9a03      	ldr	r2, [sp, #12]
90018eba:	3b01      	subs	r3, #1
90018ebc:	9301      	str	r3, [sp, #4]
90018ebe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90018ec0:	bf08      	it	eq
90018ec2:	4613      	moveq	r3, r2
90018ec4:	e793      	b.n	90018dee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
90018ec6:	45ce      	cmp	lr, r9
90018ec8:	dab9      	bge.n	90018e3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90018eca:	9912      	ldr	r1, [sp, #72]	; 0x48
90018ecc:	fb01 2606 	mla	r6, r1, r6, r2
90018ed0:	1436      	asrs	r6, r6, #16
90018ed2:	d4b4      	bmi.n	90018e3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90018ed4:	4546      	cmp	r6, r8
90018ed6:	dab2      	bge.n	90018e3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90018ed8:	4698      	mov	r8, r3
90018eda:	46a2      	mov	sl, r4
90018edc:	f1b8 0f00 	cmp.w	r8, #0
90018ee0:	ddb3      	ble.n	90018e4a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90018ee2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
90018ee6:	1416      	asrs	r6, r2, #16
90018ee8:	9902      	ldr	r1, [sp, #8]
90018eea:	ea4f 4e20 	mov.w	lr, r0, asr #16
90018eee:	f108 38ff 	add.w	r8, r8, #4294967295
90018ef2:	4460      	add	r0, ip
90018ef4:	fb09 1606 	mla	r6, r9, r6, r1
90018ef8:	4928      	ldr	r1, [pc, #160]	; (90018f9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
90018efa:	f816 e00e 	ldrb.w	lr, [r6, lr]
90018efe:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
90018f02:	eb07 0b0e 	add.w	fp, r7, lr
90018f06:	f89b 6001 	ldrb.w	r6, [fp, #1]
90018f0a:	f89b 9002 	ldrb.w	r9, [fp, #2]
90018f0e:	00f6      	lsls	r6, r6, #3
90018f10:	ea01 2909 	and.w	r9, r1, r9, lsl #8
90018f14:	9912      	ldr	r1, [sp, #72]	; 0x48
90018f16:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
90018f1a:	440a      	add	r2, r1
90018f1c:	ea49 0606 	orr.w	r6, r9, r6
90018f20:	f817 900e 	ldrb.w	r9, [r7, lr]
90018f24:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
90018f28:	f82a 6b02 	strh.w	r6, [sl], #2
90018f2c:	e7d6      	b.n	90018edc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90018f2e:	ea5f 4920 	movs.w	r9, r0, asr #16
90018f32:	d429      	bmi.n	90018f88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90018f34:	68ae      	ldr	r6, [r5, #8]
90018f36:	454e      	cmp	r6, r9
90018f38:	dd26      	ble.n	90018f88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90018f3a:	ea5f 4b22 	movs.w	fp, r2, asr #16
90018f3e:	d423      	bmi.n	90018f88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90018f40:	68e9      	ldr	r1, [r5, #12]
90018f42:	4559      	cmp	r1, fp
90018f44:	dd20      	ble.n	90018f88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90018f46:	fa0f fe86 	sxth.w	lr, r6
90018f4a:	9902      	ldr	r1, [sp, #8]
90018f4c:	fb0b 1e0e 	mla	lr, fp, lr, r1
90018f50:	f06f 0101 	mvn.w	r1, #1
90018f54:	f81e e009 	ldrb.w	lr, [lr, r9]
90018f58:	fb01 f908 	mul.w	r9, r1, r8
90018f5c:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
90018f60:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
90018f64:	eb07 060e 	add.w	r6, r7, lr
90018f68:	f896 b002 	ldrb.w	fp, [r6, #2]
90018f6c:	7876      	ldrb	r6, [r6, #1]
90018f6e:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
90018f72:	00f6      	lsls	r6, r6, #3
90018f74:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
90018f78:	ea4b 0606 	orr.w	r6, fp, r6
90018f7c:	f817 b00e 	ldrb.w	fp, [r7, lr]
90018f80:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
90018f84:	f82a 6009 	strh.w	r6, [sl, r9]
90018f88:	9912      	ldr	r1, [sp, #72]	; 0x48
90018f8a:	4460      	add	r0, ip
90018f8c:	f108 38ff 	add.w	r8, r8, #4294967295
90018f90:	440a      	add	r2, r1
90018f92:	e757      	b.n	90018e44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90018f94:	b005      	add	sp, #20
90018f96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018f9a:	bf00      	nop
90018f9c:	fffff800 	.word	0xfffff800

90018fa0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90018fa0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018fa4:	b087      	sub	sp, #28
90018fa6:	468b      	mov	fp, r1
90018fa8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90018fac:	9815      	ldr	r0, [sp, #84]	; 0x54
90018fae:	9204      	str	r2, [sp, #16]
90018fb0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
90018fb4:	6841      	ldr	r1, [r0, #4]
90018fb6:	9205      	str	r2, [sp, #20]
90018fb8:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
90018fbc:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
90018fc0:	fb01 2404 	mla	r4, r1, r4, r2
90018fc4:	6802      	ldr	r2, [r0, #0]
90018fc6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90018fca:	f8dc 2000 	ldr.w	r2, [ip]
90018fce:	9201      	str	r2, [sp, #4]
90018fd0:	f8dc 2004 	ldr.w	r2, [ip, #4]
90018fd4:	3204      	adds	r2, #4
90018fd6:	9202      	str	r2, [sp, #8]
90018fd8:	f1bb 0f00 	cmp.w	fp, #0
90018fdc:	dc03      	bgt.n	90018fe6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
90018fde:	9a04      	ldr	r2, [sp, #16]
90018fe0:	2a00      	cmp	r2, #0
90018fe2:	f340 8138 	ble.w	90019256 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
90018fe6:	9a11      	ldr	r2, [sp, #68]	; 0x44
90018fe8:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
90018fec:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
90018ff0:	9a12      	ldr	r2, [sp, #72]	; 0x48
90018ff2:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
90018ff6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90018ffa:	2b00      	cmp	r3, #0
90018ffc:	dd0e      	ble.n	9001901c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90018ffe:	1402      	asrs	r2, r0, #16
90019000:	d405      	bmi.n	9001900e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90019002:	42ba      	cmp	r2, r7
90019004:	da03      	bge.n	9001900e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90019006:	140a      	asrs	r2, r1, #16
90019008:	d401      	bmi.n	9001900e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001900a:	42b2      	cmp	r2, r6
9001900c:	db07      	blt.n	9001901e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001900e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90019010:	3b01      	subs	r3, #1
90019012:	3402      	adds	r4, #2
90019014:	4410      	add	r0, r2
90019016:	9a14      	ldr	r2, [sp, #80]	; 0x50
90019018:	4411      	add	r1, r2
9001901a:	e7ee      	b.n	90018ffa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001901c:	d019      	beq.n	90019052 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001901e:	1e5a      	subs	r2, r3, #1
90019020:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90019022:	fb05 0502 	mla	r5, r5, r2, r0
90019026:	142d      	asrs	r5, r5, #16
90019028:	d409      	bmi.n	9001903e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001902a:	42bd      	cmp	r5, r7
9001902c:	da07      	bge.n	9001903e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001902e:	9d14      	ldr	r5, [sp, #80]	; 0x50
90019030:	fb05 1202 	mla	r2, r5, r2, r1
90019034:	1412      	asrs	r2, r2, #16
90019036:	d402      	bmi.n	9001903e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90019038:	42b2      	cmp	r2, r6
9001903a:	f2c0 80ac 	blt.w	90019196 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
9001903e:	f04f 0e00 	mov.w	lr, #0
90019042:	eb03 020e 	add.w	r2, r3, lr
90019046:	2a00      	cmp	r2, #0
90019048:	dc3e      	bgt.n	900190c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001904a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001904e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019052:	f1bb 0f00 	cmp.w	fp, #0
90019056:	f340 80fe 	ble.w	90019256 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001905a:	ee30 0a04 	vadd.f32	s0, s0, s8
9001905e:	9b10      	ldr	r3, [sp, #64]	; 0x40
90019060:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019064:	f1bb 0b01 	subs.w	fp, fp, #1
90019068:	eeb0 6a62 	vmov.f32	s12, s5
9001906c:	eec6 7a80 	vdiv.f32	s15, s13, s0
90019070:	ee31 1a05 	vadd.f32	s2, s2, s10
90019074:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019078:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001907c:	eeb0 6a43 	vmov.f32	s12, s6
90019080:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019084:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
90019088:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001908c:	ee61 7a27 	vmul.f32	s15, s2, s15
90019090:	ee77 2a62 	vsub.f32	s5, s14, s5
90019094:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019098:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001909c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900190a0:	ee12 2a90 	vmov	r2, s5
900190a4:	eef0 2a47 	vmov.f32	s5, s14
900190a8:	fb92 f3f3 	sdiv	r3, r2, r3
900190ac:	ee13 2a10 	vmov	r2, s6
900190b0:	9313      	str	r3, [sp, #76]	; 0x4c
900190b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
900190b4:	eeb0 3a67 	vmov.f32	s6, s15
900190b8:	fb92 f3f3 	sdiv	r3, r2, r3
900190bc:	9a04      	ldr	r2, [sp, #16]
900190be:	9314      	str	r3, [sp, #80]	; 0x50
900190c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
900190c2:	bf08      	it	eq
900190c4:	4613      	moveq	r3, r2
900190c6:	e787      	b.n	90018fd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
900190c8:	1406      	asrs	r6, r0, #16
900190ca:	d45d      	bmi.n	90019188 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
900190cc:	f8dc 5008 	ldr.w	r5, [ip, #8]
900190d0:	42b5      	cmp	r5, r6
900190d2:	dd59      	ble.n	90019188 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
900190d4:	140f      	asrs	r7, r1, #16
900190d6:	d457      	bmi.n	90019188 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
900190d8:	f8dc 200c 	ldr.w	r2, [ip, #12]
900190dc:	42ba      	cmp	r2, r7
900190de:	dd53      	ble.n	90019188 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
900190e0:	9a01      	ldr	r2, [sp, #4]
900190e2:	b22d      	sxth	r5, r5
900190e4:	fb07 2505 	mla	r5, r7, r5, r2
900190e8:	5daa      	ldrb	r2, [r5, r6]
900190ea:	9d02      	ldr	r5, [sp, #8]
900190ec:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
900190f0:	0e2e      	lsrs	r6, r5, #24
900190f2:	d049      	beq.n	90019188 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
900190f4:	f06f 0201 	mvn.w	r2, #1
900190f8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
900190fc:	fb02 f20e 	mul.w	r2, r2, lr
90019100:	f834 8002 	ldrh.w	r8, [r4, r2]
90019104:	9203      	str	r2, [sp, #12]
90019106:	9a05      	ldr	r2, [sp, #20]
90019108:	ea4f 2728 	mov.w	r7, r8, asr #8
9001910c:	4356      	muls	r6, r2
9001910e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90019112:	1c72      	adds	r2, r6, #1
90019114:	eb02 2226 	add.w	r2, r2, r6, asr #8
90019118:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001911c:	b2ed      	uxtb	r5, r5
9001911e:	1212      	asrs	r2, r2, #8
90019120:	fa1f f982 	uxth.w	r9, r2
90019124:	43d2      	mvns	r2, r2
90019126:	fb16 f609 	smulbb	r6, r6, r9
9001912a:	b2d2      	uxtb	r2, r2
9001912c:	fb15 f509 	smulbb	r5, r5, r9
90019130:	fb07 6702 	mla	r7, r7, r2, r6
90019134:	ea4f 06e8 	mov.w	r6, r8, asr #3
90019138:	fb1a fa09 	smulbb	sl, sl, r9
9001913c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
90019140:	b2bf      	uxth	r7, r7
90019142:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90019146:	fa5f f888 	uxtb.w	r8, r8
9001914a:	fb06 a602 	mla	r6, r6, r2, sl
9001914e:	fb08 5502 	mla	r5, r8, r2, r5
90019152:	1c7a      	adds	r2, r7, #1
90019154:	b2b6      	uxth	r6, r6
90019156:	b2ad      	uxth	r5, r5
90019158:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001915c:	9a03      	ldr	r2, [sp, #12]
9001915e:	f105 0a01 	add.w	sl, r5, #1
90019162:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
90019166:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001916a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001916e:	ea4a 0707 	orr.w	r7, sl, r7
90019172:	f106 0a01 	add.w	sl, r6, #1
90019176:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001917a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001917e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90019182:	ea47 070a 	orr.w	r7, r7, sl
90019186:	52a7      	strh	r7, [r4, r2]
90019188:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001918a:	f10e 3eff 	add.w	lr, lr, #4294967295
9001918e:	4410      	add	r0, r2
90019190:	9a14      	ldr	r2, [sp, #80]	; 0x50
90019192:	4411      	add	r1, r2
90019194:	e755      	b.n	90019042 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
90019196:	f04f 0800 	mov.w	r8, #0
9001919a:	eba3 0208 	sub.w	r2, r3, r8
9001919e:	2a00      	cmp	r2, #0
900191a0:	f77f af53 	ble.w	9001904a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
900191a4:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
900191a8:	140a      	asrs	r2, r1, #16
900191aa:	9f01      	ldr	r7, [sp, #4]
900191ac:	1405      	asrs	r5, r0, #16
900191ae:	fb06 7202 	mla	r2, r6, r2, r7
900191b2:	5d52      	ldrb	r2, [r2, r5]
900191b4:	9d02      	ldr	r5, [sp, #8]
900191b6:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
900191ba:	0e2e      	lsrs	r6, r5, #24
900191bc:	d044      	beq.n	90019248 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
900191be:	9a05      	ldr	r2, [sp, #20]
900191c0:	f3c5 2a07 	ubfx	sl, r5, #8, #8
900191c4:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
900191c8:	4356      	muls	r6, r2
900191ca:	ea4f 272e 	mov.w	r7, lr, asr #8
900191ce:	1c72      	adds	r2, r6, #1
900191d0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
900191d4:	eb02 2226 	add.w	r2, r2, r6, asr #8
900191d8:	f3c5 4607 	ubfx	r6, r5, #16, #8
900191dc:	b2ed      	uxtb	r5, r5
900191de:	1212      	asrs	r2, r2, #8
900191e0:	fa1f f982 	uxth.w	r9, r2
900191e4:	43d2      	mvns	r2, r2
900191e6:	fb16 f609 	smulbb	r6, r6, r9
900191ea:	b2d2      	uxtb	r2, r2
900191ec:	fb15 f509 	smulbb	r5, r5, r9
900191f0:	fb07 6702 	mla	r7, r7, r2, r6
900191f4:	ea4f 06ee 	mov.w	r6, lr, asr #3
900191f8:	fb1a fa09 	smulbb	sl, sl, r9
900191fc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90019200:	b2bf      	uxth	r7, r7
90019202:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90019206:	fa5f fe8e 	uxtb.w	lr, lr
9001920a:	fb06 a602 	mla	r6, r6, r2, sl
9001920e:	fb0e 5502 	mla	r5, lr, r2, r5
90019212:	1c7a      	adds	r2, r7, #1
90019214:	b2b6      	uxth	r6, r6
90019216:	b2ad      	uxth	r5, r5
90019218:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001921c:	f105 0a01 	add.w	sl, r5, #1
90019220:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
90019224:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90019228:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001922c:	ea4a 0707 	orr.w	r7, sl, r7
90019230:	f106 0a01 	add.w	sl, r6, #1
90019234:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90019238:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001923c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90019240:	ea47 070a 	orr.w	r7, r7, sl
90019244:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
90019248:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001924a:	f108 0801 	add.w	r8, r8, #1
9001924e:	4410      	add	r0, r2
90019250:	9a14      	ldr	r2, [sp, #80]	; 0x50
90019252:	4411      	add	r1, r2
90019254:	e7a1      	b.n	9001919a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
90019256:	b007      	add	sp, #28
90019258:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001925c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001925c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019260:	b085      	sub	sp, #20
90019262:	468b      	mov	fp, r1
90019264:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90019268:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001926a:	9203      	str	r2, [sp, #12]
9001926c:	6841      	ldr	r1, [r0, #4]
9001926e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
90019272:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
90019276:	fb01 2404 	mla	r4, r1, r4, r2
9001927a:	6802      	ldr	r2, [r0, #0]
9001927c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90019280:	f8de 2000 	ldr.w	r2, [lr]
90019284:	9200      	str	r2, [sp, #0]
90019286:	f8de 2004 	ldr.w	r2, [lr, #4]
9001928a:	3204      	adds	r2, #4
9001928c:	9201      	str	r2, [sp, #4]
9001928e:	f1bb 0f00 	cmp.w	fp, #0
90019292:	dc03      	bgt.n	9001929c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
90019294:	9a03      	ldr	r2, [sp, #12]
90019296:	2a00      	cmp	r2, #0
90019298:	f340 8153 	ble.w	90019542 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001929c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001929e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
900192a2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
900192a6:	9a10      	ldr	r2, [sp, #64]	; 0x40
900192a8:	f9be 600c 	ldrsh.w	r6, [lr, #12]
900192ac:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
900192b0:	2b00      	cmp	r3, #0
900192b2:	dd0e      	ble.n	900192d2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900192b4:	1408      	asrs	r0, r1, #16
900192b6:	d405      	bmi.n	900192c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
900192b8:	42b8      	cmp	r0, r7
900192ba:	da03      	bge.n	900192c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
900192bc:	1410      	asrs	r0, r2, #16
900192be:	d401      	bmi.n	900192c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
900192c0:	42b0      	cmp	r0, r6
900192c2:	db07      	blt.n	900192d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900192c4:	9811      	ldr	r0, [sp, #68]	; 0x44
900192c6:	3b01      	subs	r3, #1
900192c8:	3402      	adds	r4, #2
900192ca:	4401      	add	r1, r0
900192cc:	9812      	ldr	r0, [sp, #72]	; 0x48
900192ce:	4402      	add	r2, r0
900192d0:	e7ee      	b.n	900192b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
900192d2:	d017      	beq.n	90019304 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
900192d4:	1e58      	subs	r0, r3, #1
900192d6:	9d11      	ldr	r5, [sp, #68]	; 0x44
900192d8:	fb05 1500 	mla	r5, r5, r0, r1
900192dc:	142d      	asrs	r5, r5, #16
900192de:	d409      	bmi.n	900192f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
900192e0:	42bd      	cmp	r5, r7
900192e2:	da07      	bge.n	900192f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
900192e4:	9d12      	ldr	r5, [sp, #72]	; 0x48
900192e6:	fb05 2000 	mla	r0, r5, r0, r2
900192ea:	1400      	asrs	r0, r0, #16
900192ec:	d402      	bmi.n	900192f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
900192ee:	42b0      	cmp	r0, r6
900192f0:	f2c0 80bc 	blt.w	9001946c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
900192f4:	2600      	movs	r6, #0
900192f6:	1998      	adds	r0, r3, r6
900192f8:	2800      	cmp	r0, #0
900192fa:	dc3e      	bgt.n	9001937a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
900192fc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019300:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019304:	f1bb 0f00 	cmp.w	fp, #0
90019308:	f340 811b 	ble.w	90019542 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001930c:	ee30 0a04 	vadd.f32	s0, s0, s8
90019310:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019312:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019316:	f1bb 0b01 	subs.w	fp, fp, #1
9001931a:	eeb0 6a62 	vmov.f32	s12, s5
9001931e:	eec6 7a80 	vdiv.f32	s15, s13, s0
90019322:	ee31 1a05 	vadd.f32	s2, s2, s10
90019326:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001932a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001932e:	eeb0 6a43 	vmov.f32	s12, s6
90019332:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019336:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001933a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001933e:	ee61 7a27 	vmul.f32	s15, s2, s15
90019342:	ee77 2a62 	vsub.f32	s5, s14, s5
90019346:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001934a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001934e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019352:	ee12 2a90 	vmov	r2, s5
90019356:	eef0 2a47 	vmov.f32	s5, s14
9001935a:	fb92 f3f3 	sdiv	r3, r2, r3
9001935e:	ee13 2a10 	vmov	r2, s6
90019362:	9311      	str	r3, [sp, #68]	; 0x44
90019364:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019366:	eeb0 3a67 	vmov.f32	s6, s15
9001936a:	fb92 f3f3 	sdiv	r3, r2, r3
9001936e:	9a03      	ldr	r2, [sp, #12]
90019370:	9312      	str	r3, [sp, #72]	; 0x48
90019372:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019374:	bf08      	it	eq
90019376:	4613      	moveq	r3, r2
90019378:	e789      	b.n	9001928e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001937a:	140f      	asrs	r7, r1, #16
9001937c:	d426      	bmi.n	900193cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001937e:	f8de 5008 	ldr.w	r5, [lr, #8]
90019382:	42bd      	cmp	r5, r7
90019384:	dd22      	ble.n	900193cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
90019386:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001938a:	d41f      	bmi.n	900193cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001938c:	f8de 000c 	ldr.w	r0, [lr, #12]
90019390:	4560      	cmp	r0, ip
90019392:	dd1b      	ble.n	900193cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
90019394:	9800      	ldr	r0, [sp, #0]
90019396:	b22d      	sxth	r5, r5
90019398:	fb0c 0505 	mla	r5, ip, r5, r0
9001939c:	5de8      	ldrb	r0, [r5, r7]
9001939e:	9d01      	ldr	r5, [sp, #4]
900193a0:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
900193a4:	0e07      	lsrs	r7, r0, #24
900193a6:	2fff      	cmp	r7, #255	; 0xff
900193a8:	d116      	bne.n	900193d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
900193aa:	f06f 0501 	mvn.w	r5, #1
900193ae:	fb05 f706 	mul.w	r7, r5, r6
900193b2:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
900193b6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
900193ba:	0945      	lsrs	r5, r0, #5
900193bc:	f3c0 00c4 	ubfx	r0, r0, #3, #5
900193c0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900193c4:	ea4c 0505 	orr.w	r5, ip, r5
900193c8:	4305      	orrs	r5, r0
900193ca:	53e5      	strh	r5, [r4, r7]
900193cc:	9811      	ldr	r0, [sp, #68]	; 0x44
900193ce:	3e01      	subs	r6, #1
900193d0:	4401      	add	r1, r0
900193d2:	9812      	ldr	r0, [sp, #72]	; 0x48
900193d4:	4402      	add	r2, r0
900193d6:	e78e      	b.n	900192f6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
900193d8:	b2fd      	uxtb	r5, r7
900193da:	2f00      	cmp	r7, #0
900193dc:	d0f6      	beq.n	900193cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
900193de:	f06f 0701 	mvn.w	r7, #1
900193e2:	fa1f f985 	uxth.w	r9, r5
900193e6:	43ed      	mvns	r5, r5
900193e8:	f3c0 2a07 	ubfx	sl, r0, #8, #8
900193ec:	4377      	muls	r7, r6
900193ee:	fb1a fa09 	smulbb	sl, sl, r9
900193f2:	b2ed      	uxtb	r5, r5
900193f4:	f834 8007 	ldrh.w	r8, [r4, r7]
900193f8:	9702      	str	r7, [sp, #8]
900193fa:	f3c0 4707 	ubfx	r7, r0, #16, #8
900193fe:	ea4f 2c28 	mov.w	ip, r8, asr #8
90019402:	fb17 f709 	smulbb	r7, r7, r9
90019406:	b2c0      	uxtb	r0, r0
90019408:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001940c:	fb10 f009 	smulbb	r0, r0, r9
90019410:	fb0c 7c05 	mla	ip, ip, r5, r7
90019414:	ea4f 07e8 	mov.w	r7, r8, asr #3
90019418:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001941c:	fa1f fc8c 	uxth.w	ip, ip
90019420:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90019424:	fa5f f888 	uxtb.w	r8, r8
90019428:	fb07 a705 	mla	r7, r7, r5, sl
9001942c:	fb08 0005 	mla	r0, r8, r5, r0
90019430:	f10c 0501 	add.w	r5, ip, #1
90019434:	b2bf      	uxth	r7, r7
90019436:	b280      	uxth	r0, r0
90019438:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001943c:	f100 0a01 	add.w	sl, r0, #1
90019440:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90019444:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
90019448:	9802      	ldr	r0, [sp, #8]
9001944a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001944e:	ea4a 0c0c 	orr.w	ip, sl, ip
90019452:	f107 0a01 	add.w	sl, r7, #1
90019456:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001945a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001945e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90019462:	ea4c 0c0a 	orr.w	ip, ip, sl
90019466:	f824 c000 	strh.w	ip, [r4, r0]
9001946a:	e7af      	b.n	900193cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001946c:	f04f 0800 	mov.w	r8, #0
90019470:	eba3 0008 	sub.w	r0, r3, r8
90019474:	2800      	cmp	r0, #0
90019476:	f77f af41 	ble.w	900192fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001947a:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001947e:	1410      	asrs	r0, r2, #16
90019480:	9f00      	ldr	r7, [sp, #0]
90019482:	140d      	asrs	r5, r1, #16
90019484:	fb06 7000 	mla	r0, r6, r0, r7
90019488:	5d40      	ldrb	r0, [r0, r5]
9001948a:	9d01      	ldr	r5, [sp, #4]
9001948c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
90019490:	0e2e      	lsrs	r6, r5, #24
90019492:	2eff      	cmp	r6, #255	; 0xff
90019494:	d112      	bne.n	900194bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
90019496:	482c      	ldr	r0, [pc, #176]	; (90019548 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
90019498:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001949c:	0968      	lsrs	r0, r5, #5
9001949e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
900194a2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900194a6:	4330      	orrs	r0, r6
900194a8:	4328      	orrs	r0, r5
900194aa:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
900194ae:	9811      	ldr	r0, [sp, #68]	; 0x44
900194b0:	f108 0801 	add.w	r8, r8, #1
900194b4:	4401      	add	r1, r0
900194b6:	9812      	ldr	r0, [sp, #72]	; 0x48
900194b8:	4402      	add	r2, r0
900194ba:	e7d9      	b.n	90019470 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900194bc:	b2f0      	uxtb	r0, r6
900194be:	2e00      	cmp	r6, #0
900194c0:	d0f5      	beq.n	900194ae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
900194c2:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
900194c6:	fa1f f980 	uxth.w	r9, r0
900194ca:	f3c5 4607 	ubfx	r6, r5, #16, #8
900194ce:	43c0      	mvns	r0, r0
900194d0:	ea4f 272c 	mov.w	r7, ip, asr #8
900194d4:	f3c5 2a07 	ubfx	sl, r5, #8, #8
900194d8:	fb16 f609 	smulbb	r6, r6, r9
900194dc:	b2c0      	uxtb	r0, r0
900194de:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
900194e2:	b2ed      	uxtb	r5, r5
900194e4:	fb1a fa09 	smulbb	sl, sl, r9
900194e8:	fb07 6700 	mla	r7, r7, r0, r6
900194ec:	ea4f 06ec 	mov.w	r6, ip, asr #3
900194f0:	fb15 f509 	smulbb	r5, r5, r9
900194f4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
900194f8:	b2bf      	uxth	r7, r7
900194fa:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
900194fe:	fa5f fc8c 	uxtb.w	ip, ip
90019502:	fb06 a600 	mla	r6, r6, r0, sl
90019506:	fb0c 5500 	mla	r5, ip, r0, r5
9001950a:	1c78      	adds	r0, r7, #1
9001950c:	b2b6      	uxth	r6, r6
9001950e:	b2ad      	uxth	r5, r5
90019510:	eb00 2717 	add.w	r7, r0, r7, lsr #8
90019514:	f105 0a01 	add.w	sl, r5, #1
90019518:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001951c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90019520:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90019524:	ea4a 0707 	orr.w	r7, sl, r7
90019528:	f106 0a01 	add.w	sl, r6, #1
9001952c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90019530:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90019534:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90019538:	ea47 070a 	orr.w	r7, r7, sl
9001953c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
90019540:	e7b5      	b.n	900194ae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
90019542:	b005      	add	sp, #20
90019544:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019548:	fffff800 	.word	0xfffff800

9001954c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001954c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019550:	b087      	sub	sp, #28
90019552:	468b      	mov	fp, r1
90019554:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90019558:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001955a:	9204      	str	r2, [sp, #16]
9001955c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
90019560:	6861      	ldr	r1, [r4, #4]
90019562:	9205      	str	r2, [sp, #20]
90019564:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
90019568:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
9001956c:	fb01 2000 	mla	r0, r1, r0, r2
90019570:	6822      	ldr	r2, [r4, #0]
90019572:	eb02 0040 	add.w	r0, r2, r0, lsl #1
90019576:	f8de 2000 	ldr.w	r2, [lr]
9001957a:	9201      	str	r2, [sp, #4]
9001957c:	f8de 2004 	ldr.w	r2, [lr, #4]
90019580:	9202      	str	r2, [sp, #8]
90019582:	f1bb 0f00 	cmp.w	fp, #0
90019586:	dc03      	bgt.n	90019590 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
90019588:	9a04      	ldr	r2, [sp, #16]
9001958a:	2a00      	cmp	r2, #0
9001958c:	f340 8142 	ble.w	90019814 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
90019590:	9a11      	ldr	r2, [sp, #68]	; 0x44
90019592:	f9be 7008 	ldrsh.w	r7, [lr, #8]
90019596:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001959a:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001959c:	f9be 600c 	ldrsh.w	r6, [lr, #12]
900195a0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
900195a4:	2b00      	cmp	r3, #0
900195a6:	dd0e      	ble.n	900195c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900195a8:	140c      	asrs	r4, r1, #16
900195aa:	d405      	bmi.n	900195b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900195ac:	42bc      	cmp	r4, r7
900195ae:	da03      	bge.n	900195b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900195b0:	1414      	asrs	r4, r2, #16
900195b2:	d401      	bmi.n	900195b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900195b4:	42b4      	cmp	r4, r6
900195b6:	db07      	blt.n	900195c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900195b8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900195ba:	3b01      	subs	r3, #1
900195bc:	3002      	adds	r0, #2
900195be:	4421      	add	r1, r4
900195c0:	9c14      	ldr	r4, [sp, #80]	; 0x50
900195c2:	4422      	add	r2, r4
900195c4:	e7ee      	b.n	900195a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
900195c6:	d019      	beq.n	900195fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
900195c8:	1e5c      	subs	r4, r3, #1
900195ca:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900195cc:	fb05 1504 	mla	r5, r5, r4, r1
900195d0:	142d      	asrs	r5, r5, #16
900195d2:	d409      	bmi.n	900195e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
900195d4:	42bd      	cmp	r5, r7
900195d6:	da07      	bge.n	900195e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
900195d8:	9d14      	ldr	r5, [sp, #80]	; 0x50
900195da:	fb05 2404 	mla	r4, r5, r4, r2
900195de:	1424      	asrs	r4, r4, #16
900195e0:	d402      	bmi.n	900195e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
900195e2:	42b4      	cmp	r4, r6
900195e4:	f2c0 80b1 	blt.w	9001974a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
900195e8:	f04f 0800 	mov.w	r8, #0
900195ec:	eb03 0408 	add.w	r4, r3, r8
900195f0:	2c00      	cmp	r4, #0
900195f2:	dc3e      	bgt.n	90019672 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
900195f4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900195f8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900195fc:	f1bb 0f00 	cmp.w	fp, #0
90019600:	f340 8108 	ble.w	90019814 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
90019604:	ee30 0a04 	vadd.f32	s0, s0, s8
90019608:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001960a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001960e:	f1bb 0b01 	subs.w	fp, fp, #1
90019612:	eeb0 6a62 	vmov.f32	s12, s5
90019616:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001961a:	ee31 1a05 	vadd.f32	s2, s2, s10
9001961e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019622:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
90019626:	eeb0 6a43 	vmov.f32	s12, s6
9001962a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001962e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
90019632:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019636:	ee61 7a27 	vmul.f32	s15, s2, s15
9001963a:	ee77 2a62 	vsub.f32	s5, s14, s5
9001963e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019642:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019646:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001964a:	ee12 2a90 	vmov	r2, s5
9001964e:	eef0 2a47 	vmov.f32	s5, s14
90019652:	fb92 f3f3 	sdiv	r3, r2, r3
90019656:	ee13 2a10 	vmov	r2, s6
9001965a:	9313      	str	r3, [sp, #76]	; 0x4c
9001965c:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001965e:	eeb0 3a67 	vmov.f32	s6, s15
90019662:	fb92 f3f3 	sdiv	r3, r2, r3
90019666:	9a04      	ldr	r2, [sp, #16]
90019668:	9314      	str	r3, [sp, #80]	; 0x50
9001966a:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001966c:	bf08      	it	eq
9001966e:	4613      	moveq	r3, r2
90019670:	e787      	b.n	90019582 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
90019672:	140e      	asrs	r6, r1, #16
90019674:	d462      	bmi.n	9001973c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
90019676:	f8de 5008 	ldr.w	r5, [lr, #8]
9001967a:	42b5      	cmp	r5, r6
9001967c:	dd5e      	ble.n	9001973c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001967e:	1417      	asrs	r7, r2, #16
90019680:	d45c      	bmi.n	9001973c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
90019682:	f8de 400c 	ldr.w	r4, [lr, #12]
90019686:	42bc      	cmp	r4, r7
90019688:	dd58      	ble.n	9001973c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001968a:	b22d      	sxth	r5, r5
9001968c:	9c02      	ldr	r4, [sp, #8]
9001968e:	fb07 6505 	mla	r5, r7, r5, r6
90019692:	5d66      	ldrb	r6, [r4, r5]
90019694:	2e00      	cmp	r6, #0
90019696:	d051      	beq.n	9001973c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
90019698:	9c01      	ldr	r4, [sp, #4]
9001969a:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
9001969e:	f06f 0401 	mvn.w	r4, #1
900196a2:	fb04 f408 	mul.w	r4, r4, r8
900196a6:	ea4f 2c29 	mov.w	ip, r9, asr #8
900196aa:	5b05      	ldrh	r5, [r0, r4]
900196ac:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
900196b0:	9403      	str	r4, [sp, #12]
900196b2:	9c05      	ldr	r4, [sp, #20]
900196b4:	ea4f 0ae5 	mov.w	sl, r5, asr #3
900196b8:	4366      	muls	r6, r4
900196ba:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
900196be:	1c74      	adds	r4, r6, #1
900196c0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
900196c4:	122e      	asrs	r6, r5, #8
900196c6:	1224      	asrs	r4, r4, #8
900196c8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
900196cc:	00ed      	lsls	r5, r5, #3
900196ce:	b2a7      	uxth	r7, r4
900196d0:	43e4      	mvns	r4, r4
900196d2:	b2ed      	uxtb	r5, r5
900196d4:	b2e4      	uxtb	r4, r4
900196d6:	fb16 f604 	smulbb	r6, r6, r4
900196da:	fb15 f504 	smulbb	r5, r5, r4
900196de:	fb0c 6c07 	mla	ip, ip, r7, r6
900196e2:	ea4f 06e9 	mov.w	r6, r9, asr #3
900196e6:	fb1a fa04 	smulbb	sl, sl, r4
900196ea:	ea4f 09c9 	mov.w	r9, r9, lsl #3
900196ee:	fa1f fc8c 	uxth.w	ip, ip
900196f2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
900196f6:	fa5f f989 	uxtb.w	r9, r9
900196fa:	fb06 a607 	mla	r6, r6, r7, sl
900196fe:	f10c 0401 	add.w	r4, ip, #1
90019702:	fb09 5507 	mla	r5, r9, r7, r5
90019706:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001970a:	9c03      	ldr	r4, [sp, #12]
9001970c:	b2ad      	uxth	r5, r5
9001970e:	b2b6      	uxth	r6, r6
90019710:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90019714:	f105 0a01 	add.w	sl, r5, #1
90019718:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001971c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90019720:	ea4a 0c0c 	orr.w	ip, sl, ip
90019724:	f106 0a01 	add.w	sl, r6, #1
90019728:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001972c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90019730:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90019734:	ea4c 0c0a 	orr.w	ip, ip, sl
90019738:	f820 c004 	strh.w	ip, [r0, r4]
9001973c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001973e:	f108 38ff 	add.w	r8, r8, #4294967295
90019742:	4421      	add	r1, r4
90019744:	9c14      	ldr	r4, [sp, #80]	; 0x50
90019746:	4422      	add	r2, r4
90019748:	e750      	b.n	900195ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001974a:	f04f 0900 	mov.w	r9, #0
9001974e:	eba3 0409 	sub.w	r4, r3, r9
90019752:	2c00      	cmp	r4, #0
90019754:	f77f af4e 	ble.w	900195f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
90019758:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001975c:	140d      	asrs	r5, r1, #16
9001975e:	1414      	asrs	r4, r2, #16
90019760:	fb06 5404 	mla	r4, r6, r4, r5
90019764:	9d02      	ldr	r5, [sp, #8]
90019766:	5d2e      	ldrb	r6, [r5, r4]
90019768:	2e00      	cmp	r6, #0
9001976a:	d04c      	beq.n	90019806 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
9001976c:	9d01      	ldr	r5, [sp, #4]
9001976e:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
90019772:	9c05      	ldr	r4, [sp, #20]
90019774:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
90019778:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001977c:	4366      	muls	r6, r4
9001977e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90019782:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90019786:	1c74      	adds	r4, r6, #1
90019788:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001978c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
90019790:	122e      	asrs	r6, r5, #8
90019792:	1224      	asrs	r4, r4, #8
90019794:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
90019798:	00ed      	lsls	r5, r5, #3
9001979a:	b2a7      	uxth	r7, r4
9001979c:	43e4      	mvns	r4, r4
9001979e:	b2ed      	uxtb	r5, r5
900197a0:	b2e4      	uxtb	r4, r4
900197a2:	fb16 f604 	smulbb	r6, r6, r4
900197a6:	fb15 f504 	smulbb	r5, r5, r4
900197aa:	fb0c 6c07 	mla	ip, ip, r7, r6
900197ae:	ea4f 06e8 	mov.w	r6, r8, asr #3
900197b2:	fb1a fa04 	smulbb	sl, sl, r4
900197b6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
900197ba:	fa1f fc8c 	uxth.w	ip, ip
900197be:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
900197c2:	fa5f f888 	uxtb.w	r8, r8
900197c6:	fb06 a607 	mla	r6, r6, r7, sl
900197ca:	f10c 0401 	add.w	r4, ip, #1
900197ce:	fb08 5507 	mla	r5, r8, r7, r5
900197d2:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
900197d6:	b2ad      	uxth	r5, r5
900197d8:	b2b6      	uxth	r6, r6
900197da:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
900197de:	f105 0a01 	add.w	sl, r5, #1
900197e2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
900197e6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
900197ea:	ea4a 0c0c 	orr.w	ip, sl, ip
900197ee:	f106 0a01 	add.w	sl, r6, #1
900197f2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
900197f6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
900197fa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
900197fe:	ea4c 0c0a 	orr.w	ip, ip, sl
90019802:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
90019806:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90019808:	f109 0901 	add.w	r9, r9, #1
9001980c:	4421      	add	r1, r4
9001980e:	9c14      	ldr	r4, [sp, #80]	; 0x50
90019810:	4422      	add	r2, r4
90019812:	e79c      	b.n	9001974e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
90019814:	b007      	add	sp, #28
90019816:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001981a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001981a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001981e:	b085      	sub	sp, #20
90019820:	468b      	mov	fp, r1
90019822:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90019826:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90019828:	9203      	str	r2, [sp, #12]
9001982a:	6861      	ldr	r1, [r4, #4]
9001982c:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
90019830:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
90019834:	fb01 2000 	mla	r0, r1, r0, r2
90019838:	6822      	ldr	r2, [r4, #0]
9001983a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001983e:	f8d8 2000 	ldr.w	r2, [r8]
90019842:	9200      	str	r2, [sp, #0]
90019844:	f8d8 2004 	ldr.w	r2, [r8, #4]
90019848:	9201      	str	r2, [sp, #4]
9001984a:	f1bb 0f00 	cmp.w	fp, #0
9001984e:	dc03      	bgt.n	90019858 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90019850:	9a03      	ldr	r2, [sp, #12]
90019852:	2a00      	cmp	r2, #0
90019854:	f340 8146 	ble.w	90019ae4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
90019858:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001985a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001985e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90019862:	9a10      	ldr	r2, [sp, #64]	; 0x40
90019864:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
90019868:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001986c:	2b00      	cmp	r3, #0
9001986e:	dd0e      	ble.n	9001988e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90019870:	140c      	asrs	r4, r1, #16
90019872:	d405      	bmi.n	90019880 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90019874:	42bc      	cmp	r4, r7
90019876:	da03      	bge.n	90019880 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90019878:	1414      	asrs	r4, r2, #16
9001987a:	d401      	bmi.n	90019880 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001987c:	42b4      	cmp	r4, r6
9001987e:	db07      	blt.n	90019890 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019880:	9c11      	ldr	r4, [sp, #68]	; 0x44
90019882:	3b01      	subs	r3, #1
90019884:	3002      	adds	r0, #2
90019886:	4421      	add	r1, r4
90019888:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001988a:	4422      	add	r2, r4
9001988c:	e7ee      	b.n	9001986c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001988e:	d017      	beq.n	900198c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
90019890:	1e5c      	subs	r4, r3, #1
90019892:	9d11      	ldr	r5, [sp, #68]	; 0x44
90019894:	fb05 1504 	mla	r5, r5, r4, r1
90019898:	142d      	asrs	r5, r5, #16
9001989a:	d409      	bmi.n	900198b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001989c:	42bd      	cmp	r5, r7
9001989e:	da07      	bge.n	900198b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
900198a0:	9d12      	ldr	r5, [sp, #72]	; 0x48
900198a2:	fb05 2404 	mla	r4, r5, r4, r2
900198a6:	1424      	asrs	r4, r4, #16
900198a8:	d402      	bmi.n	900198b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
900198aa:	42b4      	cmp	r4, r6
900198ac:	f2c0 80b3 	blt.w	90019a16 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
900198b0:	2600      	movs	r6, #0
900198b2:	199c      	adds	r4, r3, r6
900198b4:	2c00      	cmp	r4, #0
900198b6:	dc3e      	bgt.n	90019936 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
900198b8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900198bc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900198c0:	f1bb 0f00 	cmp.w	fp, #0
900198c4:	f340 810e 	ble.w	90019ae4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
900198c8:	ee30 0a04 	vadd.f32	s0, s0, s8
900198cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900198ce:	ee70 0aa4 	vadd.f32	s1, s1, s9
900198d2:	f1bb 0b01 	subs.w	fp, fp, #1
900198d6:	eeb0 6a62 	vmov.f32	s12, s5
900198da:	eec6 7a80 	vdiv.f32	s15, s13, s0
900198de:	ee31 1a05 	vadd.f32	s2, s2, s10
900198e2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900198e6:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
900198ea:	eeb0 6a43 	vmov.f32	s12, s6
900198ee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900198f2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
900198f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
900198fa:	ee61 7a27 	vmul.f32	s15, s2, s15
900198fe:	ee77 2a62 	vsub.f32	s5, s14, s5
90019902:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019906:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001990a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001990e:	ee12 2a90 	vmov	r2, s5
90019912:	eef0 2a47 	vmov.f32	s5, s14
90019916:	fb92 f3f3 	sdiv	r3, r2, r3
9001991a:	ee13 2a10 	vmov	r2, s6
9001991e:	9311      	str	r3, [sp, #68]	; 0x44
90019920:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019922:	eeb0 3a67 	vmov.f32	s6, s15
90019926:	fb92 f3f3 	sdiv	r3, r2, r3
9001992a:	9a03      	ldr	r2, [sp, #12]
9001992c:	9312      	str	r3, [sp, #72]	; 0x48
9001992e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019930:	bf08      	it	eq
90019932:	4613      	moveq	r3, r2
90019934:	e789      	b.n	9001984a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90019936:	140f      	asrs	r7, r1, #16
90019938:	d418      	bmi.n	9001996c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001993a:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001993e:	42bd      	cmp	r5, r7
90019940:	dd14      	ble.n	9001996c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
90019942:	ea5f 4c22 	movs.w	ip, r2, asr #16
90019946:	d411      	bmi.n	9001996c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
90019948:	f8d8 400c 	ldr.w	r4, [r8, #12]
9001994c:	4564      	cmp	r4, ip
9001994e:	dd0d      	ble.n	9001996c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
90019950:	b22d      	sxth	r5, r5
90019952:	9c01      	ldr	r4, [sp, #4]
90019954:	fb0c 7505 	mla	r5, ip, r5, r7
90019958:	5d64      	ldrb	r4, [r4, r5]
9001995a:	2cff      	cmp	r4, #255	; 0xff
9001995c:	d10c      	bne.n	90019978 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001995e:	9c00      	ldr	r4, [sp, #0]
90019960:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
90019964:	f06f 0401 	mvn.w	r4, #1
90019968:	4374      	muls	r4, r6
9001996a:	5305      	strh	r5, [r0, r4]
9001996c:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001996e:	3e01      	subs	r6, #1
90019970:	4421      	add	r1, r4
90019972:	9c12      	ldr	r4, [sp, #72]	; 0x48
90019974:	4422      	add	r2, r4
90019976:	e79c      	b.n	900198b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90019978:	2c00      	cmp	r4, #0
9001997a:	d0f7      	beq.n	9001996c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001997c:	9f00      	ldr	r7, [sp, #0]
9001997e:	fa1f fc84 	uxth.w	ip, r4
90019982:	43e4      	mvns	r4, r4
90019984:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
90019988:	f06f 0501 	mvn.w	r5, #1
9001998c:	b2e4      	uxtb	r4, r4
9001998e:	4375      	muls	r5, r6
90019990:	ea4f 2e29 	mov.w	lr, r9, asr #8
90019994:	9502      	str	r5, [sp, #8]
90019996:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001999a:	5b45      	ldrh	r5, [r0, r5]
9001999c:	122f      	asrs	r7, r5, #8
9001999e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
900199a2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
900199a6:	00ed      	lsls	r5, r5, #3
900199a8:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
900199ac:	fb17 f704 	smulbb	r7, r7, r4
900199b0:	b2ed      	uxtb	r5, r5
900199b2:	fb1a fa04 	smulbb	sl, sl, r4
900199b6:	fb0e 7e0c 	mla	lr, lr, ip, r7
900199ba:	ea4f 07e9 	mov.w	r7, r9, asr #3
900199be:	fb15 f504 	smulbb	r5, r5, r4
900199c2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
900199c6:	fa1f fe8e 	uxth.w	lr, lr
900199ca:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
900199ce:	fa5f f989 	uxtb.w	r9, r9
900199d2:	fb07 a70c 	mla	r7, r7, ip, sl
900199d6:	f10e 0401 	add.w	r4, lr, #1
900199da:	fb09 550c 	mla	r5, r9, ip, r5
900199de:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
900199e2:	9c02      	ldr	r4, [sp, #8]
900199e4:	b2ad      	uxth	r5, r5
900199e6:	b2bf      	uxth	r7, r7
900199e8:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
900199ec:	f105 0a01 	add.w	sl, r5, #1
900199f0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
900199f4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
900199f8:	ea4a 0e0e 	orr.w	lr, sl, lr
900199fc:	f107 0a01 	add.w	sl, r7, #1
90019a00:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
90019a04:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90019a08:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90019a0c:	ea4e 0e0a 	orr.w	lr, lr, sl
90019a10:	f820 e004 	strh.w	lr, [r0, r4]
90019a14:	e7aa      	b.n	9001996c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
90019a16:	f04f 0900 	mov.w	r9, #0
90019a1a:	eba3 0409 	sub.w	r4, r3, r9
90019a1e:	2c00      	cmp	r4, #0
90019a20:	f77f af4a 	ble.w	900198b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90019a24:	1414      	asrs	r4, r2, #16
90019a26:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
90019a2a:	140d      	asrs	r5, r1, #16
90019a2c:	fb06 5504 	mla	r5, r6, r4, r5
90019a30:	9c01      	ldr	r4, [sp, #4]
90019a32:	5d64      	ldrb	r4, [r4, r5]
90019a34:	2cff      	cmp	r4, #255	; 0xff
90019a36:	d10b      	bne.n	90019a50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90019a38:	9c00      	ldr	r4, [sp, #0]
90019a3a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
90019a3e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
90019a42:	9c11      	ldr	r4, [sp, #68]	; 0x44
90019a44:	f109 0901 	add.w	r9, r9, #1
90019a48:	4421      	add	r1, r4
90019a4a:	9c12      	ldr	r4, [sp, #72]	; 0x48
90019a4c:	4422      	add	r2, r4
90019a4e:	e7e4      	b.n	90019a1a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90019a50:	2c00      	cmp	r4, #0
90019a52:	d0f6      	beq.n	90019a42 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
90019a54:	9e00      	ldr	r6, [sp, #0]
90019a56:	b2a7      	uxth	r7, r4
90019a58:	43e4      	mvns	r4, r4
90019a5a:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
90019a5e:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
90019a62:	b2e4      	uxtb	r4, r4
90019a64:	ea4f 2c2e 	mov.w	ip, lr, asr #8
90019a68:	122e      	asrs	r6, r5, #8
90019a6a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90019a6e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90019a72:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
90019a76:	00ed      	lsls	r5, r5, #3
90019a78:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
90019a7c:	fb16 f604 	smulbb	r6, r6, r4
90019a80:	b2ed      	uxtb	r5, r5
90019a82:	fb1a fa04 	smulbb	sl, sl, r4
90019a86:	fb0c 6c07 	mla	ip, ip, r7, r6
90019a8a:	ea4f 06ee 	mov.w	r6, lr, asr #3
90019a8e:	fb15 f504 	smulbb	r5, r5, r4
90019a92:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90019a96:	fa1f fc8c 	uxth.w	ip, ip
90019a9a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90019a9e:	fa5f fe8e 	uxtb.w	lr, lr
90019aa2:	fb06 a607 	mla	r6, r6, r7, sl
90019aa6:	f10c 0401 	add.w	r4, ip, #1
90019aaa:	fb0e 5507 	mla	r5, lr, r7, r5
90019aae:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
90019ab2:	b2ad      	uxth	r5, r5
90019ab4:	b2b6      	uxth	r6, r6
90019ab6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90019aba:	f105 0a01 	add.w	sl, r5, #1
90019abe:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90019ac2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90019ac6:	ea4a 0c0c 	orr.w	ip, sl, ip
90019aca:	f106 0a01 	add.w	sl, r6, #1
90019ace:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90019ad2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90019ad6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90019ada:	ea4c 0c0a 	orr.w	ip, ip, sl
90019ade:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
90019ae2:	e7ae      	b.n	90019a42 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
90019ae4:	b005      	add	sp, #20
90019ae6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019aea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019aea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019aee:	b085      	sub	sp, #20
90019af0:	9813      	ldr	r0, [sp, #76]	; 0x4c
90019af2:	9203      	str	r2, [sp, #12]
90019af4:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
90019af8:	9100      	str	r1, [sp, #0]
90019afa:	9201      	str	r2, [sp, #4]
90019afc:	6841      	ldr	r1, [r0, #4]
90019afe:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
90019b02:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
90019b06:	fb01 2404 	mla	r4, r1, r4, r2
90019b0a:	6802      	ldr	r2, [r0, #0]
90019b0c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90019b10:	f8de 2000 	ldr.w	r2, [lr]
90019b14:	9202      	str	r2, [sp, #8]
90019b16:	9a01      	ldr	r2, [sp, #4]
90019b18:	43d6      	mvns	r6, r2
90019b1a:	b2f6      	uxtb	r6, r6
90019b1c:	9a00      	ldr	r2, [sp, #0]
90019b1e:	2a00      	cmp	r2, #0
90019b20:	dc03      	bgt.n	90019b2a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
90019b22:	9a03      	ldr	r2, [sp, #12]
90019b24:	2a00      	cmp	r2, #0
90019b26:	f340 8124 	ble.w	90019d72 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
90019b2a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90019b2c:	f9be c008 	ldrsh.w	ip, [lr, #8]
90019b30:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90019b34:	9a10      	ldr	r2, [sp, #64]	; 0x40
90019b36:	f9be 700c 	ldrsh.w	r7, [lr, #12]
90019b3a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90019b3e:	2b00      	cmp	r3, #0
90019b40:	dd0e      	ble.n	90019b60 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019b42:	1408      	asrs	r0, r1, #16
90019b44:	d405      	bmi.n	90019b52 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90019b46:	4560      	cmp	r0, ip
90019b48:	da03      	bge.n	90019b52 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90019b4a:	1410      	asrs	r0, r2, #16
90019b4c:	d401      	bmi.n	90019b52 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90019b4e:	42b8      	cmp	r0, r7
90019b50:	db07      	blt.n	90019b62 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90019b52:	9811      	ldr	r0, [sp, #68]	; 0x44
90019b54:	3b01      	subs	r3, #1
90019b56:	3402      	adds	r4, #2
90019b58:	4401      	add	r1, r0
90019b5a:	9812      	ldr	r0, [sp, #72]	; 0x48
90019b5c:	4402      	add	r2, r0
90019b5e:	e7ee      	b.n	90019b3e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
90019b60:	d06e      	beq.n	90019c40 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
90019b62:	1e58      	subs	r0, r3, #1
90019b64:	9d11      	ldr	r5, [sp, #68]	; 0x44
90019b66:	fb05 1500 	mla	r5, r5, r0, r1
90019b6a:	142d      	asrs	r5, r5, #16
90019b6c:	d45c      	bmi.n	90019c28 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
90019b6e:	4565      	cmp	r5, ip
90019b70:	da5a      	bge.n	90019c28 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
90019b72:	9d12      	ldr	r5, [sp, #72]	; 0x48
90019b74:	fb05 2000 	mla	r0, r5, r0, r2
90019b78:	1400      	asrs	r0, r0, #16
90019b7a:	d455      	bmi.n	90019c28 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
90019b7c:	42b8      	cmp	r0, r7
90019b7e:	da53      	bge.n	90019c28 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
90019b80:	4699      	mov	r9, r3
90019b82:	46a2      	mov	sl, r4
90019b84:	f8bd b004 	ldrh.w	fp, [sp, #4]
90019b88:	f1b9 0f00 	cmp.w	r9, #0
90019b8c:	dd54      	ble.n	90019c38 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90019b8e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
90019b92:	140d      	asrs	r5, r1, #16
90019b94:	1410      	asrs	r0, r2, #16
90019b96:	f109 39ff 	add.w	r9, r9, #4294967295
90019b9a:	fb07 5000 	mla	r0, r7, r0, r5
90019b9e:	9d02      	ldr	r5, [sp, #8]
90019ba0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
90019ba4:	f8ba 5000 	ldrh.w	r5, [sl]
90019ba8:	ea4f 2c20 	mov.w	ip, r0, asr #8
90019bac:	122f      	asrs	r7, r5, #8
90019bae:	ea4f 08e5 	mov.w	r8, r5, asr #3
90019bb2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90019bb6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90019bba:	00ed      	lsls	r5, r5, #3
90019bbc:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
90019bc0:	fb17 f706 	smulbb	r7, r7, r6
90019bc4:	b2ed      	uxtb	r5, r5
90019bc6:	fb18 f806 	smulbb	r8, r8, r6
90019bca:	fb0c 7c0b 	mla	ip, ip, fp, r7
90019bce:	10c7      	asrs	r7, r0, #3
90019bd0:	fb15 f506 	smulbb	r5, r5, r6
90019bd4:	00c0      	lsls	r0, r0, #3
90019bd6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90019bda:	fa1f fc8c 	uxth.w	ip, ip
90019bde:	b2c0      	uxtb	r0, r0
90019be0:	fb07 870b 	mla	r7, r7, fp, r8
90019be4:	fb00 500b 	mla	r0, r0, fp, r5
90019be8:	f10c 0501 	add.w	r5, ip, #1
90019bec:	b2bf      	uxth	r7, r7
90019bee:	b280      	uxth	r0, r0
90019bf0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
90019bf4:	f107 0801 	add.w	r8, r7, #1
90019bf8:	1c45      	adds	r5, r0, #1
90019bfa:	eb08 2817 	add.w	r8, r8, r7, lsr #8
90019bfe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90019c02:	eb05 2510 	add.w	r5, r5, r0, lsr #8
90019c06:	9811      	ldr	r0, [sp, #68]	; 0x44
90019c08:	ea4f 1858 	mov.w	r8, r8, lsr #5
90019c0c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
90019c10:	4401      	add	r1, r0
90019c12:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
90019c16:	9812      	ldr	r0, [sp, #72]	; 0x48
90019c18:	ea45 0c0c 	orr.w	ip, r5, ip
90019c1c:	4402      	add	r2, r0
90019c1e:	ea4c 0c08 	orr.w	ip, ip, r8
90019c22:	f82a cb02 	strh.w	ip, [sl], #2
90019c26:	e7af      	b.n	90019b88 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90019c28:	f04f 0800 	mov.w	r8, #0
90019c2c:	f8bd a004 	ldrh.w	sl, [sp, #4]
90019c30:	eb03 0008 	add.w	r0, r3, r8
90019c34:	2800      	cmp	r0, #0
90019c36:	dc41      	bgt.n	90019cbc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
90019c38:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019c3c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019c40:	9b00      	ldr	r3, [sp, #0]
90019c42:	2b00      	cmp	r3, #0
90019c44:	f340 8095 	ble.w	90019d72 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
90019c48:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90019c4c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019c4e:	ee30 0a04 	vadd.f32	s0, s0, s8
90019c52:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019c56:	eef0 6a62 	vmov.f32	s13, s5
90019c5a:	eec7 7a00 	vdiv.f32	s15, s14, s0
90019c5e:	ee31 1a05 	vadd.f32	s2, s2, s10
90019c62:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90019c66:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
90019c6a:	eef0 6a43 	vmov.f32	s13, s6
90019c6e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90019c72:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
90019c76:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019c7a:	ee61 7a27 	vmul.f32	s15, s2, s15
90019c7e:	ee77 2a62 	vsub.f32	s5, s14, s5
90019c82:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019c86:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019c8a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019c8e:	ee12 2a90 	vmov	r2, s5
90019c92:	eef0 2a47 	vmov.f32	s5, s14
90019c96:	fb92 f3f3 	sdiv	r3, r2, r3
90019c9a:	ee13 2a10 	vmov	r2, s6
90019c9e:	9311      	str	r3, [sp, #68]	; 0x44
90019ca0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019ca2:	eeb0 3a67 	vmov.f32	s6, s15
90019ca6:	fb92 f3f3 	sdiv	r3, r2, r3
90019caa:	9312      	str	r3, [sp, #72]	; 0x48
90019cac:	9b00      	ldr	r3, [sp, #0]
90019cae:	9a03      	ldr	r2, [sp, #12]
90019cb0:	3b01      	subs	r3, #1
90019cb2:	9300      	str	r3, [sp, #0]
90019cb4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019cb6:	bf08      	it	eq
90019cb8:	4613      	moveq	r3, r2
90019cba:	e72f      	b.n	90019b1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
90019cbc:	140f      	asrs	r7, r1, #16
90019cbe:	d451      	bmi.n	90019d64 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90019cc0:	f8de 5008 	ldr.w	r5, [lr, #8]
90019cc4:	42bd      	cmp	r5, r7
90019cc6:	dd4d      	ble.n	90019d64 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90019cc8:	ea5f 4c22 	movs.w	ip, r2, asr #16
90019ccc:	d44a      	bmi.n	90019d64 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90019cce:	f8de 000c 	ldr.w	r0, [lr, #12]
90019cd2:	4560      	cmp	r0, ip
90019cd4:	dd46      	ble.n	90019d64 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90019cd6:	b22d      	sxth	r5, r5
90019cd8:	9802      	ldr	r0, [sp, #8]
90019cda:	fb0c 7505 	mla	r5, ip, r5, r7
90019cde:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
90019ce2:	f06f 0501 	mvn.w	r5, #1
90019ce6:	fb05 fb08 	mul.w	fp, r5, r8
90019cea:	ea4f 2c20 	mov.w	ip, r0, asr #8
90019cee:	f834 500b 	ldrh.w	r5, [r4, fp]
90019cf2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90019cf6:	122f      	asrs	r7, r5, #8
90019cf8:	ea4f 09e5 	mov.w	r9, r5, asr #3
90019cfc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90019d00:	00ed      	lsls	r5, r5, #3
90019d02:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
90019d06:	fb17 f706 	smulbb	r7, r7, r6
90019d0a:	b2ed      	uxtb	r5, r5
90019d0c:	fb19 f906 	smulbb	r9, r9, r6
90019d10:	fb0c 7c0a 	mla	ip, ip, sl, r7
90019d14:	10c7      	asrs	r7, r0, #3
90019d16:	fb15 f506 	smulbb	r5, r5, r6
90019d1a:	00c0      	lsls	r0, r0, #3
90019d1c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90019d20:	fa1f fc8c 	uxth.w	ip, ip
90019d24:	b2c0      	uxtb	r0, r0
90019d26:	fb07 970a 	mla	r7, r7, sl, r9
90019d2a:	fb00 500a 	mla	r0, r0, sl, r5
90019d2e:	f10c 0501 	add.w	r5, ip, #1
90019d32:	b2bf      	uxth	r7, r7
90019d34:	b280      	uxth	r0, r0
90019d36:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
90019d3a:	f107 0901 	add.w	r9, r7, #1
90019d3e:	1c45      	adds	r5, r0, #1
90019d40:	eb09 2917 	add.w	r9, r9, r7, lsr #8
90019d44:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90019d48:	eb05 2510 	add.w	r5, r5, r0, lsr #8
90019d4c:	ea4f 1959 	mov.w	r9, r9, lsr #5
90019d50:	f3c5 25c4 	ubfx	r5, r5, #11, #5
90019d54:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90019d58:	ea45 0c0c 	orr.w	ip, r5, ip
90019d5c:	ea4c 0c09 	orr.w	ip, ip, r9
90019d60:	f824 c00b 	strh.w	ip, [r4, fp]
90019d64:	9811      	ldr	r0, [sp, #68]	; 0x44
90019d66:	f108 38ff 	add.w	r8, r8, #4294967295
90019d6a:	4401      	add	r1, r0
90019d6c:	9812      	ldr	r0, [sp, #72]	; 0x48
90019d6e:	4402      	add	r2, r0
90019d70:	e75e      	b.n	90019c30 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
90019d72:	b005      	add	sp, #20
90019d74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019d78 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019d78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019d7c:	b085      	sub	sp, #20
90019d7e:	4693      	mov	fp, r2
90019d80:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90019d84:	9e13      	ldr	r6, [sp, #76]	; 0x4c
90019d86:	9d16      	ldr	r5, [sp, #88]	; 0x58
90019d88:	6870      	ldr	r0, [r6, #4]
90019d8a:	9101      	str	r1, [sp, #4]
90019d8c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
90019d90:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
90019d94:	fb00 2404 	mla	r4, r0, r4, r2
90019d98:	6832      	ldr	r2, [r6, #0]
90019d9a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90019d9e:	682a      	ldr	r2, [r5, #0]
90019da0:	9202      	str	r2, [sp, #8]
90019da2:	9a01      	ldr	r2, [sp, #4]
90019da4:	2a00      	cmp	r2, #0
90019da6:	dc03      	bgt.n	90019db0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90019da8:	f1bb 0f00 	cmp.w	fp, #0
90019dac:	f340 809a 	ble.w	90019ee4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
90019db0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90019db2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
90019db6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
90019dba:	9a10      	ldr	r2, [sp, #64]	; 0x40
90019dbc:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
90019dc0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90019dc4:	2b00      	cmp	r3, #0
90019dc6:	dd0c      	ble.n	90019de2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
90019dc8:	1406      	asrs	r6, r0, #16
90019dca:	d405      	bmi.n	90019dd8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
90019dcc:	454e      	cmp	r6, r9
90019dce:	da03      	bge.n	90019dd8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
90019dd0:	1416      	asrs	r6, r2, #16
90019dd2:	d401      	bmi.n	90019dd8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
90019dd4:	4546      	cmp	r6, r8
90019dd6:	db05      	blt.n	90019de4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90019dd8:	4470      	add	r0, lr
90019dda:	4462      	add	r2, ip
90019ddc:	3b01      	subs	r3, #1
90019dde:	3402      	adds	r4, #2
90019de0:	e7f0      	b.n	90019dc4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90019de2:	d00f      	beq.n	90019e04 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90019de4:	1e5e      	subs	r6, r3, #1
90019de6:	fb0e 0706 	mla	r7, lr, r6, r0
90019dea:	143f      	asrs	r7, r7, #16
90019dec:	d541      	bpl.n	90019e72 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
90019dee:	eb04 0643 	add.w	r6, r4, r3, lsl #1
90019df2:	4698      	mov	r8, r3
90019df4:	9603      	str	r6, [sp, #12]
90019df6:	f1b8 0f00 	cmp.w	r8, #0
90019dfa:	dc56      	bgt.n	90019eaa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
90019dfc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019e00:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019e04:	9b01      	ldr	r3, [sp, #4]
90019e06:	2b00      	cmp	r3, #0
90019e08:	dd6c      	ble.n	90019ee4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
90019e0a:	ee30 0a04 	vadd.f32	s0, s0, s8
90019e0e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019e10:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019e14:	eeb0 6a62 	vmov.f32	s12, s5
90019e18:	eec6 7a80 	vdiv.f32	s15, s13, s0
90019e1c:	ee31 1a05 	vadd.f32	s2, s2, s10
90019e20:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019e24:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
90019e28:	eeb0 6a43 	vmov.f32	s12, s6
90019e2c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019e30:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
90019e34:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019e38:	ee61 7a27 	vmul.f32	s15, s2, s15
90019e3c:	ee77 2a62 	vsub.f32	s5, s14, s5
90019e40:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019e44:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019e48:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019e4c:	ee12 2a90 	vmov	r2, s5
90019e50:	eef0 2a47 	vmov.f32	s5, s14
90019e54:	fb92 fef3 	sdiv	lr, r2, r3
90019e58:	ee13 2a10 	vmov	r2, s6
90019e5c:	eeb0 3a67 	vmov.f32	s6, s15
90019e60:	fb92 fcf3 	sdiv	ip, r2, r3
90019e64:	9b01      	ldr	r3, [sp, #4]
90019e66:	3b01      	subs	r3, #1
90019e68:	9301      	str	r3, [sp, #4]
90019e6a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019e6c:	bf08      	it	eq
90019e6e:	465b      	moveq	r3, fp
90019e70:	e797      	b.n	90019da2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
90019e72:	454f      	cmp	r7, r9
90019e74:	dabb      	bge.n	90019dee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019e76:	fb0c 2606 	mla	r6, ip, r6, r2
90019e7a:	1436      	asrs	r6, r6, #16
90019e7c:	d4b7      	bmi.n	90019dee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019e7e:	4546      	cmp	r6, r8
90019e80:	dab5      	bge.n	90019dee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019e82:	461e      	mov	r6, r3
90019e84:	46a0      	mov	r8, r4
90019e86:	2e00      	cmp	r6, #0
90019e88:	ddb8      	ble.n	90019dfc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90019e8a:	1417      	asrs	r7, r2, #16
90019e8c:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
90019e90:	ea4f 4920 	mov.w	r9, r0, asr #16
90019e94:	9902      	ldr	r1, [sp, #8]
90019e96:	4470      	add	r0, lr
90019e98:	4462      	add	r2, ip
90019e9a:	fb0a 9707 	mla	r7, sl, r7, r9
90019e9e:	3e01      	subs	r6, #1
90019ea0:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
90019ea4:	f828 7b02 	strh.w	r7, [r8], #2
90019ea8:	e7ed      	b.n	90019e86 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
90019eaa:	ea5f 4920 	movs.w	r9, r0, asr #16
90019eae:	d414      	bmi.n	90019eda <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
90019eb0:	68ae      	ldr	r6, [r5, #8]
90019eb2:	454e      	cmp	r6, r9
90019eb4:	dd11      	ble.n	90019eda <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
90019eb6:	ea5f 4a22 	movs.w	sl, r2, asr #16
90019eba:	d40e      	bmi.n	90019eda <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
90019ebc:	68ef      	ldr	r7, [r5, #12]
90019ebe:	4557      	cmp	r7, sl
90019ec0:	dd0b      	ble.n	90019eda <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
90019ec2:	b236      	sxth	r6, r6
90019ec4:	f06f 0101 	mvn.w	r1, #1
90019ec8:	9f02      	ldr	r7, [sp, #8]
90019eca:	fb0a 9606 	mla	r6, sl, r6, r9
90019ece:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
90019ed2:	fb01 f608 	mul.w	r6, r1, r8
90019ed6:	9903      	ldr	r1, [sp, #12]
90019ed8:	538f      	strh	r7, [r1, r6]
90019eda:	4470      	add	r0, lr
90019edc:	4462      	add	r2, ip
90019ede:	f108 38ff 	add.w	r8, r8, #4294967295
90019ee2:	e788      	b.n	90019df6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90019ee4:	b005      	add	sp, #20
90019ee6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019eea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019eea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019eee:	b087      	sub	sp, #28
90019ef0:	468b      	mov	fp, r1
90019ef2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90019ef6:	9815      	ldr	r0, [sp, #84]	; 0x54
90019ef8:	9203      	str	r2, [sp, #12]
90019efa:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
90019efe:	6841      	ldr	r1, [r0, #4]
90019f00:	9204      	str	r2, [sp, #16]
90019f02:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
90019f06:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
90019f0a:	fb01 2505 	mla	r5, r1, r5, r2
90019f0e:	6802      	ldr	r2, [r0, #0]
90019f10:	eb02 0545 	add.w	r5, r2, r5, lsl #1
90019f14:	f8d9 2000 	ldr.w	r2, [r9]
90019f18:	9201      	str	r2, [sp, #4]
90019f1a:	f1bb 0f00 	cmp.w	fp, #0
90019f1e:	dc03      	bgt.n	90019f28 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90019f20:	9a03      	ldr	r2, [sp, #12]
90019f22:	2a00      	cmp	r2, #0
90019f24:	f340 8158 	ble.w	9001a1d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
90019f28:	9a11      	ldr	r2, [sp, #68]	; 0x44
90019f2a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
90019f2e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
90019f32:	9a12      	ldr	r2, [sp, #72]	; 0x48
90019f34:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
90019f38:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90019f3c:	2b00      	cmp	r3, #0
90019f3e:	dd0e      	ble.n	90019f5e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90019f40:	1402      	asrs	r2, r0, #16
90019f42:	d405      	bmi.n	90019f50 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90019f44:	42ba      	cmp	r2, r7
90019f46:	da03      	bge.n	90019f50 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90019f48:	140a      	asrs	r2, r1, #16
90019f4a:	d401      	bmi.n	90019f50 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90019f4c:	42b2      	cmp	r2, r6
90019f4e:	db07      	blt.n	90019f60 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019f50:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90019f52:	3b01      	subs	r3, #1
90019f54:	3502      	adds	r5, #2
90019f56:	4410      	add	r0, r2
90019f58:	9a14      	ldr	r2, [sp, #80]	; 0x50
90019f5a:	4411      	add	r1, r2
90019f5c:	e7ee      	b.n	90019f3c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90019f5e:	d017      	beq.n	90019f90 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
90019f60:	1e5a      	subs	r2, r3, #1
90019f62:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90019f64:	fb04 0402 	mla	r4, r4, r2, r0
90019f68:	1424      	asrs	r4, r4, #16
90019f6a:	d409      	bmi.n	90019f80 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90019f6c:	42bc      	cmp	r4, r7
90019f6e:	da07      	bge.n	90019f80 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90019f70:	9c14      	ldr	r4, [sp, #80]	; 0x50
90019f72:	fb04 1202 	mla	r2, r4, r2, r1
90019f76:	1412      	asrs	r2, r2, #16
90019f78:	d402      	bmi.n	90019f80 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90019f7a:	42b2      	cmp	r2, r6
90019f7c:	f2c0 80bf 	blt.w	9001a0fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90019f80:	2700      	movs	r7, #0
90019f82:	19da      	adds	r2, r3, r7
90019f84:	2a00      	cmp	r2, #0
90019f86:	dc3e      	bgt.n	9001a006 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90019f88:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019f8c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
90019f90:	f1bb 0f00 	cmp.w	fp, #0
90019f94:	f340 8120 	ble.w	9001a1d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
90019f98:	ee30 0a04 	vadd.f32	s0, s0, s8
90019f9c:	9b10      	ldr	r3, [sp, #64]	; 0x40
90019f9e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019fa2:	f1bb 0b01 	subs.w	fp, fp, #1
90019fa6:	eeb0 6a62 	vmov.f32	s12, s5
90019faa:	eec6 7a80 	vdiv.f32	s15, s13, s0
90019fae:	ee31 1a05 	vadd.f32	s2, s2, s10
90019fb2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019fb6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
90019fba:	eeb0 6a43 	vmov.f32	s12, s6
90019fbe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019fc2:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
90019fc6:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019fca:	ee61 7a27 	vmul.f32	s15, s2, s15
90019fce:	ee77 2a62 	vsub.f32	s5, s14, s5
90019fd2:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019fd6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019fda:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019fde:	ee12 2a90 	vmov	r2, s5
90019fe2:	eef0 2a47 	vmov.f32	s5, s14
90019fe6:	fb92 f3f3 	sdiv	r3, r2, r3
90019fea:	ee13 2a10 	vmov	r2, s6
90019fee:	9313      	str	r3, [sp, #76]	; 0x4c
90019ff0:	9b10      	ldr	r3, [sp, #64]	; 0x40
90019ff2:	eeb0 3a67 	vmov.f32	s6, s15
90019ff6:	fb92 f3f3 	sdiv	r3, r2, r3
90019ffa:	9a03      	ldr	r2, [sp, #12]
90019ffc:	9314      	str	r3, [sp, #80]	; 0x50
90019ffe:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a000:	bf08      	it	eq
9001a002:	4613      	moveq	r3, r2
9001a004:	e789      	b.n	90019f1a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001a006:	1406      	asrs	r6, r0, #16
9001a008:	d42d      	bmi.n	9001a066 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001a00a:	f8d9 4008 	ldr.w	r4, [r9, #8]
9001a00e:	42b4      	cmp	r4, r6
9001a010:	dd29      	ble.n	9001a066 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001a012:	ea5f 4c21 	movs.w	ip, r1, asr #16
9001a016:	d426      	bmi.n	9001a066 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001a018:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001a01c:	4562      	cmp	r2, ip
9001a01e:	dd22      	ble.n	9001a066 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001a020:	b224      	sxth	r4, r4
9001a022:	9a01      	ldr	r2, [sp, #4]
9001a024:	fb0c 6404 	mla	r4, ip, r4, r6
9001a028:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
9001a02c:	0e22      	lsrs	r2, r4, #24
9001a02e:	d01a      	beq.n	9001a066 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001a030:	9e04      	ldr	r6, [sp, #16]
9001a032:	4372      	muls	r2, r6
9001a034:	1c56      	adds	r6, r2, #1
9001a036:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001a03a:	0a26      	lsrs	r6, r4, #8
9001a03c:	1212      	asrs	r2, r2, #8
9001a03e:	9605      	str	r6, [sp, #20]
9001a040:	2aff      	cmp	r2, #255	; 0xff
9001a042:	d116      	bne.n	9001a072 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
9001a044:	f06f 0201 	mvn.w	r2, #1
9001a048:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001a04c:	fb02 fc07 	mul.w	ip, r2, r7
9001a050:	0962      	lsrs	r2, r4, #5
9001a052:	f026 0607 	bic.w	r6, r6, #7
9001a056:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001a05a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001a05e:	4316      	orrs	r6, r2
9001a060:	4326      	orrs	r6, r4
9001a062:	f825 600c 	strh.w	r6, [r5, ip]
9001a066:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a068:	3f01      	subs	r7, #1
9001a06a:	4410      	add	r0, r2
9001a06c:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a06e:	4411      	add	r1, r2
9001a070:	e787      	b.n	90019f82 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001a072:	f06f 0601 	mvn.w	r6, #1
9001a076:	fa1f fa82 	uxth.w	sl, r2
9001a07a:	f3c4 4c07 	ubfx	ip, r4, #16, #8
9001a07e:	43d2      	mvns	r2, r2
9001a080:	437e      	muls	r6, r7
9001a082:	b2e4      	uxtb	r4, r4
9001a084:	fb1c fc0a 	smulbb	ip, ip, sl
9001a088:	b2d2      	uxtb	r2, r2
9001a08a:	f835 8006 	ldrh.w	r8, [r5, r6]
9001a08e:	fb14 f40a 	smulbb	r4, r4, sl
9001a092:	9602      	str	r6, [sp, #8]
9001a094:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001a098:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001a09c:	fb16 f60a 	smulbb	r6, r6, sl
9001a0a0:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001a0a4:	fb0e ce02 	mla	lr, lr, r2, ip
9001a0a8:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001a0ac:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001a0b0:	fa1f fe8e 	uxth.w	lr, lr
9001a0b4:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
9001a0b8:	fa5f f888 	uxtb.w	r8, r8
9001a0bc:	fb0c 6c02 	mla	ip, ip, r2, r6
9001a0c0:	fb08 4402 	mla	r4, r8, r2, r4
9001a0c4:	f10e 0201 	add.w	r2, lr, #1
9001a0c8:	fa1f fc8c 	uxth.w	ip, ip
9001a0cc:	b2a4      	uxth	r4, r4
9001a0ce:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001a0d2:	9a02      	ldr	r2, [sp, #8]
9001a0d4:	1c66      	adds	r6, r4, #1
9001a0d6:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001a0da:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001a0de:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001a0e2:	ea46 0e0e 	orr.w	lr, r6, lr
9001a0e6:	f10c 0601 	add.w	r6, ip, #1
9001a0ea:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001a0ee:	0976      	lsrs	r6, r6, #5
9001a0f0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001a0f4:	ea4e 0e06 	orr.w	lr, lr, r6
9001a0f8:	f825 e002 	strh.w	lr, [r5, r2]
9001a0fc:	e7b3      	b.n	9001a066 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001a0fe:	f04f 0800 	mov.w	r8, #0
9001a102:	eba3 0208 	sub.w	r2, r3, r8
9001a106:	2a00      	cmp	r2, #0
9001a108:	f77f af3e 	ble.w	90019f88 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001a10c:	1404      	asrs	r4, r0, #16
9001a10e:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
9001a112:	140a      	asrs	r2, r1, #16
9001a114:	fb06 4202 	mla	r2, r6, r2, r4
9001a118:	9c01      	ldr	r4, [sp, #4]
9001a11a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
9001a11e:	0e22      	lsrs	r2, r4, #24
9001a120:	d015      	beq.n	9001a14e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001a122:	9e04      	ldr	r6, [sp, #16]
9001a124:	4372      	muls	r2, r6
9001a126:	1c56      	adds	r6, r2, #1
9001a128:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001a12c:	0a26      	lsrs	r6, r4, #8
9001a12e:	1212      	asrs	r2, r2, #8
9001a130:	2aff      	cmp	r2, #255	; 0xff
9001a132:	d113      	bne.n	9001a15c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001a134:	0962      	lsrs	r2, r4, #5
9001a136:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001a13a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001a13e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001a142:	f026 0607 	bic.w	r6, r6, #7
9001a146:	4316      	orrs	r6, r2
9001a148:	4326      	orrs	r6, r4
9001a14a:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
9001a14e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a150:	f108 0801 	add.w	r8, r8, #1
9001a154:	4410      	add	r0, r2
9001a156:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a158:	4411      	add	r1, r2
9001a15a:	e7d2      	b.n	9001a102 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
9001a15c:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
9001a160:	fa1f fa82 	uxth.w	sl, r2
9001a164:	f3c4 4707 	ubfx	r7, r4, #16, #8
9001a168:	43d2      	mvns	r2, r2
9001a16a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001a16e:	fb17 f70a 	smulbb	r7, r7, sl
9001a172:	b2d2      	uxtb	r2, r2
9001a174:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001a178:	b2e4      	uxtb	r4, r4
9001a17a:	b2f6      	uxtb	r6, r6
9001a17c:	fb0c 7c02 	mla	ip, ip, r2, r7
9001a180:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001a184:	fb14 f40a 	smulbb	r4, r4, sl
9001a188:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001a18c:	fa1f fc8c 	uxth.w	ip, ip
9001a190:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001a194:	fb16 f60a 	smulbb	r6, r6, sl
9001a198:	fa5f fe8e 	uxtb.w	lr, lr
9001a19c:	fb0e 4402 	mla	r4, lr, r2, r4
9001a1a0:	fb07 6702 	mla	r7, r7, r2, r6
9001a1a4:	f10c 0201 	add.w	r2, ip, #1
9001a1a8:	b2a4      	uxth	r4, r4
9001a1aa:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001a1ae:	1c66      	adds	r6, r4, #1
9001a1b0:	b2bf      	uxth	r7, r7
9001a1b2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001a1b6:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001a1ba:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001a1be:	ea46 0c0c 	orr.w	ip, r6, ip
9001a1c2:	1c7e      	adds	r6, r7, #1
9001a1c4:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001a1c8:	0976      	lsrs	r6, r6, #5
9001a1ca:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001a1ce:	ea4c 0c06 	orr.w	ip, ip, r6
9001a1d2:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
9001a1d6:	e7ba      	b.n	9001a14e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001a1d8:	b007      	add	sp, #28
9001a1da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001a1e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a1e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a1e4:	b085      	sub	sp, #20
9001a1e6:	468b      	mov	fp, r1
9001a1e8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001a1ec:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001a1ee:	9203      	str	r2, [sp, #12]
9001a1f0:	6841      	ldr	r1, [r0, #4]
9001a1f2:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
9001a1f6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001a1fa:	fb01 2404 	mla	r4, r1, r4, r2
9001a1fe:	6802      	ldr	r2, [r0, #0]
9001a200:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a204:	f8d8 2000 	ldr.w	r2, [r8]
9001a208:	9201      	str	r2, [sp, #4]
9001a20a:	f1bb 0f00 	cmp.w	fp, #0
9001a20e:	dc03      	bgt.n	9001a218 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001a210:	9a03      	ldr	r2, [sp, #12]
9001a212:	2a00      	cmp	r2, #0
9001a214:	f340 814f 	ble.w	9001a4b6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001a218:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001a21a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001a21e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001a222:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001a224:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001a228:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001a22c:	2b00      	cmp	r3, #0
9001a22e:	dd0e      	ble.n	9001a24e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001a230:	1408      	asrs	r0, r1, #16
9001a232:	d405      	bmi.n	9001a240 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001a234:	42b8      	cmp	r0, r7
9001a236:	da03      	bge.n	9001a240 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001a238:	1410      	asrs	r0, r2, #16
9001a23a:	d401      	bmi.n	9001a240 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001a23c:	42b0      	cmp	r0, r6
9001a23e:	db07      	blt.n	9001a250 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a240:	9811      	ldr	r0, [sp, #68]	; 0x44
9001a242:	3b01      	subs	r3, #1
9001a244:	3402      	adds	r4, #2
9001a246:	4401      	add	r1, r0
9001a248:	9812      	ldr	r0, [sp, #72]	; 0x48
9001a24a:	4402      	add	r2, r0
9001a24c:	e7ee      	b.n	9001a22c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001a24e:	d017      	beq.n	9001a280 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001a250:	1e58      	subs	r0, r3, #1
9001a252:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001a254:	fb05 1500 	mla	r5, r5, r0, r1
9001a258:	142d      	asrs	r5, r5, #16
9001a25a:	d409      	bmi.n	9001a270 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001a25c:	42bd      	cmp	r5, r7
9001a25e:	da07      	bge.n	9001a270 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001a260:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001a262:	fb05 2000 	mla	r0, r5, r0, r2
9001a266:	1400      	asrs	r0, r0, #16
9001a268:	d402      	bmi.n	9001a270 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001a26a:	42b0      	cmp	r0, r6
9001a26c:	f2c0 80ba 	blt.w	9001a3e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001a270:	2600      	movs	r6, #0
9001a272:	1998      	adds	r0, r3, r6
9001a274:	2800      	cmp	r0, #0
9001a276:	dc3e      	bgt.n	9001a2f6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001a278:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a27c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a280:	f1bb 0f00 	cmp.w	fp, #0
9001a284:	f340 8117 	ble.w	9001a4b6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001a288:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a28c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001a28e:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a292:	f1bb 0b01 	subs.w	fp, fp, #1
9001a296:	eeb0 6a62 	vmov.f32	s12, s5
9001a29a:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a29e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a2a2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a2a6:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001a2aa:	eeb0 6a43 	vmov.f32	s12, s6
9001a2ae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a2b2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001a2b6:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a2ba:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a2be:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a2c2:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a2c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a2ca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a2ce:	ee12 2a90 	vmov	r2, s5
9001a2d2:	eef0 2a47 	vmov.f32	s5, s14
9001a2d6:	fb92 f3f3 	sdiv	r3, r2, r3
9001a2da:	ee13 2a10 	vmov	r2, s6
9001a2de:	9311      	str	r3, [sp, #68]	; 0x44
9001a2e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001a2e2:	eeb0 3a67 	vmov.f32	s6, s15
9001a2e6:	fb92 f3f3 	sdiv	r3, r2, r3
9001a2ea:	9a03      	ldr	r2, [sp, #12]
9001a2ec:	9312      	str	r3, [sp, #72]	; 0x48
9001a2ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001a2f0:	bf08      	it	eq
9001a2f2:	4613      	moveq	r3, r2
9001a2f4:	e789      	b.n	9001a20a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001a2f6:	140f      	asrs	r7, r1, #16
9001a2f8:	d424      	bmi.n	9001a344 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a2fa:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001a2fe:	42bd      	cmp	r5, r7
9001a300:	dd20      	ble.n	9001a344 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a302:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001a306:	d41d      	bmi.n	9001a344 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a308:	f8d8 000c 	ldr.w	r0, [r8, #12]
9001a30c:	4560      	cmp	r0, ip
9001a30e:	dd19      	ble.n	9001a344 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a310:	b22d      	sxth	r5, r5
9001a312:	9801      	ldr	r0, [sp, #4]
9001a314:	fb0c 7505 	mla	r5, ip, r5, r7
9001a318:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
9001a31c:	0e07      	lsrs	r7, r0, #24
9001a31e:	2fff      	cmp	r7, #255	; 0xff
9001a320:	d116      	bne.n	9001a350 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001a322:	f06f 0501 	mvn.w	r5, #1
9001a326:	fb05 f706 	mul.w	r7, r5, r6
9001a32a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
9001a32e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001a332:	0945      	lsrs	r5, r0, #5
9001a334:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001a338:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001a33c:	ea4c 0505 	orr.w	r5, ip, r5
9001a340:	4305      	orrs	r5, r0
9001a342:	53e5      	strh	r5, [r4, r7]
9001a344:	9811      	ldr	r0, [sp, #68]	; 0x44
9001a346:	3e01      	subs	r6, #1
9001a348:	4401      	add	r1, r0
9001a34a:	9812      	ldr	r0, [sp, #72]	; 0x48
9001a34c:	4402      	add	r2, r0
9001a34e:	e790      	b.n	9001a272 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001a350:	b2fd      	uxtb	r5, r7
9001a352:	2f00      	cmp	r7, #0
9001a354:	d0f6      	beq.n	9001a344 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a356:	f06f 0701 	mvn.w	r7, #1
9001a35a:	fa1f f985 	uxth.w	r9, r5
9001a35e:	43ed      	mvns	r5, r5
9001a360:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001a364:	4377      	muls	r7, r6
9001a366:	fb1a fa09 	smulbb	sl, sl, r9
9001a36a:	b2ed      	uxtb	r5, r5
9001a36c:	f834 e007 	ldrh.w	lr, [r4, r7]
9001a370:	9702      	str	r7, [sp, #8]
9001a372:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001a376:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001a37a:	fb17 f709 	smulbb	r7, r7, r9
9001a37e:	b2c0      	uxtb	r0, r0
9001a380:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001a384:	fb10 f009 	smulbb	r0, r0, r9
9001a388:	fb0c 7c05 	mla	ip, ip, r5, r7
9001a38c:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001a390:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001a394:	fa1f fc8c 	uxth.w	ip, ip
9001a398:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001a39c:	fa5f fe8e 	uxtb.w	lr, lr
9001a3a0:	fb07 a705 	mla	r7, r7, r5, sl
9001a3a4:	fb0e 0005 	mla	r0, lr, r5, r0
9001a3a8:	f10c 0501 	add.w	r5, ip, #1
9001a3ac:	b2bf      	uxth	r7, r7
9001a3ae:	b280      	uxth	r0, r0
9001a3b0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001a3b4:	f100 0a01 	add.w	sl, r0, #1
9001a3b8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001a3bc:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001a3c0:	9802      	ldr	r0, [sp, #8]
9001a3c2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a3c6:	ea4a 0c0c 	orr.w	ip, sl, ip
9001a3ca:	f107 0a01 	add.w	sl, r7, #1
9001a3ce:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001a3d2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a3d6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001a3da:	ea4c 0c0a 	orr.w	ip, ip, sl
9001a3de:	f824 c000 	strh.w	ip, [r4, r0]
9001a3e2:	e7af      	b.n	9001a344 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a3e4:	f04f 0e00 	mov.w	lr, #0
9001a3e8:	eba3 000e 	sub.w	r0, r3, lr
9001a3ec:	2800      	cmp	r0, #0
9001a3ee:	f77f af43 	ble.w	9001a278 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001a3f2:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001a3f6:	140d      	asrs	r5, r1, #16
9001a3f8:	1410      	asrs	r0, r2, #16
9001a3fa:	fb06 5000 	mla	r0, r6, r0, r5
9001a3fe:	9d01      	ldr	r5, [sp, #4]
9001a400:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001a404:	0e2e      	lsrs	r6, r5, #24
9001a406:	2eff      	cmp	r6, #255	; 0xff
9001a408:	d112      	bne.n	9001a430 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
9001a40a:	482c      	ldr	r0, [pc, #176]	; (9001a4bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
9001a40c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001a410:	0968      	lsrs	r0, r5, #5
9001a412:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001a416:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001a41a:	4330      	orrs	r0, r6
9001a41c:	4328      	orrs	r0, r5
9001a41e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
9001a422:	9811      	ldr	r0, [sp, #68]	; 0x44
9001a424:	f10e 0e01 	add.w	lr, lr, #1
9001a428:	4401      	add	r1, r0
9001a42a:	9812      	ldr	r0, [sp, #72]	; 0x48
9001a42c:	4402      	add	r2, r0
9001a42e:	e7db      	b.n	9001a3e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
9001a430:	b2f0      	uxtb	r0, r6
9001a432:	2e00      	cmp	r6, #0
9001a434:	d0f5      	beq.n	9001a422 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001a436:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001a43a:	fa1f f980 	uxth.w	r9, r0
9001a43e:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001a442:	43c0      	mvns	r0, r0
9001a444:	ea4f 272c 	mov.w	r7, ip, asr #8
9001a448:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001a44c:	fb16 f609 	smulbb	r6, r6, r9
9001a450:	b2c0      	uxtb	r0, r0
9001a452:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001a456:	b2ed      	uxtb	r5, r5
9001a458:	fb1a fa09 	smulbb	sl, sl, r9
9001a45c:	fb07 6700 	mla	r7, r7, r0, r6
9001a460:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001a464:	fb15 f509 	smulbb	r5, r5, r9
9001a468:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001a46c:	b2bf      	uxth	r7, r7
9001a46e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001a472:	fa5f fc8c 	uxtb.w	ip, ip
9001a476:	fb06 a600 	mla	r6, r6, r0, sl
9001a47a:	fb0c 5500 	mla	r5, ip, r0, r5
9001a47e:	1c78      	adds	r0, r7, #1
9001a480:	b2b6      	uxth	r6, r6
9001a482:	b2ad      	uxth	r5, r5
9001a484:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001a488:	f105 0a01 	add.w	sl, r5, #1
9001a48c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001a490:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001a494:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a498:	ea4a 0707 	orr.w	r7, sl, r7
9001a49c:	f106 0a01 	add.w	sl, r6, #1
9001a4a0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001a4a4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a4a8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001a4ac:	ea47 070a 	orr.w	r7, r7, sl
9001a4b0:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
9001a4b4:	e7b5      	b.n	9001a422 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001a4b6:	b005      	add	sp, #20
9001a4b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a4bc:	fffff800 	.word	0xfffff800

9001a4c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a4c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a4c4:	b087      	sub	sp, #28
9001a4c6:	468b      	mov	fp, r1
9001a4c8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001a4cc:	9815      	ldr	r0, [sp, #84]	; 0x54
9001a4ce:	9203      	str	r2, [sp, #12]
9001a4d0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001a4d4:	6841      	ldr	r1, [r0, #4]
9001a4d6:	9204      	str	r2, [sp, #16]
9001a4d8:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
9001a4dc:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001a4e0:	fb01 2404 	mla	r4, r1, r4, r2
9001a4e4:	6802      	ldr	r2, [r0, #0]
9001a4e6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a4ea:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001a4ee:	3201      	adds	r2, #1
9001a4f0:	f022 0201 	bic.w	r2, r2, #1
9001a4f4:	9200      	str	r2, [sp, #0]
9001a4f6:	f8d9 2000 	ldr.w	r2, [r9]
9001a4fa:	9201      	str	r2, [sp, #4]
9001a4fc:	f1bb 0f00 	cmp.w	fp, #0
9001a500:	dc03      	bgt.n	9001a50a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001a502:	9a03      	ldr	r2, [sp, #12]
9001a504:	2a00      	cmp	r2, #0
9001a506:	f340 816a 	ble.w	9001a7de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001a50a:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001a50c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001a510:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001a514:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001a516:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001a51a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001a51e:	2b00      	cmp	r3, #0
9001a520:	dd0e      	ble.n	9001a540 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001a522:	1402      	asrs	r2, r0, #16
9001a524:	d405      	bmi.n	9001a532 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a526:	42ba      	cmp	r2, r7
9001a528:	da03      	bge.n	9001a532 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a52a:	140a      	asrs	r2, r1, #16
9001a52c:	d401      	bmi.n	9001a532 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a52e:	42b2      	cmp	r2, r6
9001a530:	db07      	blt.n	9001a542 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9001a532:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a534:	3b01      	subs	r3, #1
9001a536:	3402      	adds	r4, #2
9001a538:	4410      	add	r0, r2
9001a53a:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a53c:	4411      	add	r1, r2
9001a53e:	e7ee      	b.n	9001a51e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001a540:	d017      	beq.n	9001a572 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001a542:	1e5a      	subs	r2, r3, #1
9001a544:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001a546:	fb05 0502 	mla	r5, r5, r2, r0
9001a54a:	142d      	asrs	r5, r5, #16
9001a54c:	d409      	bmi.n	9001a562 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001a54e:	42bd      	cmp	r5, r7
9001a550:	da07      	bge.n	9001a562 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001a552:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001a554:	fb05 1202 	mla	r2, r5, r2, r1
9001a558:	1412      	asrs	r2, r2, #16
9001a55a:	d402      	bmi.n	9001a562 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001a55c:	42b2      	cmp	r2, r6
9001a55e:	f2c0 80c8 	blt.w	9001a6f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
9001a562:	2700      	movs	r7, #0
9001a564:	19da      	adds	r2, r3, r7
9001a566:	2a00      	cmp	r2, #0
9001a568:	dc3e      	bgt.n	9001a5e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001a56a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a56e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a572:	f1bb 0f00 	cmp.w	fp, #0
9001a576:	f340 8132 	ble.w	9001a7de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001a57a:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a57e:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a580:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a584:	f1bb 0b01 	subs.w	fp, fp, #1
9001a588:	eeb0 6a62 	vmov.f32	s12, s5
9001a58c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a590:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a594:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a598:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001a59c:	eeb0 6a43 	vmov.f32	s12, s6
9001a5a0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a5a4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001a5a8:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a5ac:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a5b0:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a5b4:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a5b8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a5bc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a5c0:	ee12 2a90 	vmov	r2, s5
9001a5c4:	eef0 2a47 	vmov.f32	s5, s14
9001a5c8:	fb92 f3f3 	sdiv	r3, r2, r3
9001a5cc:	ee13 2a10 	vmov	r2, s6
9001a5d0:	9313      	str	r3, [sp, #76]	; 0x4c
9001a5d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a5d4:	eeb0 3a67 	vmov.f32	s6, s15
9001a5d8:	fb92 f3f3 	sdiv	r3, r2, r3
9001a5dc:	9a03      	ldr	r2, [sp, #12]
9001a5de:	9314      	str	r3, [sp, #80]	; 0x50
9001a5e0:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a5e2:	bf08      	it	eq
9001a5e4:	4613      	moveq	r3, r2
9001a5e6:	e789      	b.n	9001a4fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001a5e8:	1405      	asrs	r5, r0, #16
9001a5ea:	d436      	bmi.n	9001a65a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a5ec:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001a5f0:	42aa      	cmp	r2, r5
9001a5f2:	dd32      	ble.n	9001a65a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a5f4:	140e      	asrs	r6, r1, #16
9001a5f6:	d430      	bmi.n	9001a65a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a5f8:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001a5fc:	42b2      	cmp	r2, r6
9001a5fe:	dd2c      	ble.n	9001a65a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a600:	9a00      	ldr	r2, [sp, #0]
9001a602:	fb06 5502 	mla	r5, r6, r2, r5
9001a606:	9e01      	ldr	r6, [sp, #4]
9001a608:	086a      	lsrs	r2, r5, #1
9001a60a:	5cb2      	ldrb	r2, [r6, r2]
9001a60c:	07ee      	lsls	r6, r5, #31
9001a60e:	bf54      	ite	pl
9001a610:	f002 020f 	andpl.w	r2, r2, #15
9001a614:	1112      	asrmi	r2, r2, #4
9001a616:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001a61a:	b2d2      	uxtb	r2, r2
9001a61c:	b1ea      	cbz	r2, 9001a65a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a61e:	9d04      	ldr	r5, [sp, #16]
9001a620:	436a      	muls	r2, r5
9001a622:	1c55      	adds	r5, r2, #1
9001a624:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001a628:	4d6e      	ldr	r5, [pc, #440]	; (9001a7e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001a62a:	1212      	asrs	r2, r2, #8
9001a62c:	682d      	ldr	r5, [r5, #0]
9001a62e:	2aff      	cmp	r2, #255	; 0xff
9001a630:	ea4f 2615 	mov.w	r6, r5, lsr #8
9001a634:	9605      	str	r6, [sp, #20]
9001a636:	d116      	bne.n	9001a666 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
9001a638:	f06f 0201 	mvn.w	r2, #1
9001a63c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001a640:	fb02 fc07 	mul.w	ip, r2, r7
9001a644:	096a      	lsrs	r2, r5, #5
9001a646:	f026 0607 	bic.w	r6, r6, #7
9001a64a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001a64e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001a652:	4316      	orrs	r6, r2
9001a654:	432e      	orrs	r6, r5
9001a656:	f824 600c 	strh.w	r6, [r4, ip]
9001a65a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a65c:	3f01      	subs	r7, #1
9001a65e:	4410      	add	r0, r2
9001a660:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a662:	4411      	add	r1, r2
9001a664:	e77e      	b.n	9001a564 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
9001a666:	f06f 0601 	mvn.w	r6, #1
9001a66a:	fa1f fa82 	uxth.w	sl, r2
9001a66e:	f3c5 4c07 	ubfx	ip, r5, #16, #8
9001a672:	43d2      	mvns	r2, r2
9001a674:	437e      	muls	r6, r7
9001a676:	b2ed      	uxtb	r5, r5
9001a678:	fb1c fc0a 	smulbb	ip, ip, sl
9001a67c:	b2d2      	uxtb	r2, r2
9001a67e:	f834 8006 	ldrh.w	r8, [r4, r6]
9001a682:	fb15 f50a 	smulbb	r5, r5, sl
9001a686:	9602      	str	r6, [sp, #8]
9001a688:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001a68c:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001a690:	fb16 f60a 	smulbb	r6, r6, sl
9001a694:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001a698:	fb0e ce02 	mla	lr, lr, r2, ip
9001a69c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001a6a0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001a6a4:	fa1f fe8e 	uxth.w	lr, lr
9001a6a8:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
9001a6ac:	fa5f f888 	uxtb.w	r8, r8
9001a6b0:	fb0c 6c02 	mla	ip, ip, r2, r6
9001a6b4:	fb08 5502 	mla	r5, r8, r2, r5
9001a6b8:	f10e 0201 	add.w	r2, lr, #1
9001a6bc:	fa1f fc8c 	uxth.w	ip, ip
9001a6c0:	b2ad      	uxth	r5, r5
9001a6c2:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001a6c6:	9a02      	ldr	r2, [sp, #8]
9001a6c8:	1c6e      	adds	r6, r5, #1
9001a6ca:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001a6ce:	eb06 2615 	add.w	r6, r6, r5, lsr #8
9001a6d2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001a6d6:	ea46 0e0e 	orr.w	lr, r6, lr
9001a6da:	f10c 0601 	add.w	r6, ip, #1
9001a6de:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001a6e2:	0976      	lsrs	r6, r6, #5
9001a6e4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001a6e8:	ea4e 0e06 	orr.w	lr, lr, r6
9001a6ec:	f824 e002 	strh.w	lr, [r4, r2]
9001a6f0:	e7b3      	b.n	9001a65a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a6f2:	f04f 0800 	mov.w	r8, #0
9001a6f6:	eba3 0208 	sub.w	r2, r3, r8
9001a6fa:	2a00      	cmp	r2, #0
9001a6fc:	f77f af35 	ble.w	9001a56a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001a700:	1402      	asrs	r2, r0, #16
9001a702:	9e00      	ldr	r6, [sp, #0]
9001a704:	140d      	asrs	r5, r1, #16
9001a706:	fb06 2505 	mla	r5, r6, r5, r2
9001a70a:	9e01      	ldr	r6, [sp, #4]
9001a70c:	086a      	lsrs	r2, r5, #1
9001a70e:	07ed      	lsls	r5, r5, #31
9001a710:	5cb2      	ldrb	r2, [r6, r2]
9001a712:	bf54      	ite	pl
9001a714:	f002 020f 	andpl.w	r2, r2, #15
9001a718:	1112      	asrmi	r2, r2, #4
9001a71a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001a71e:	b2d2      	uxtb	r2, r2
9001a720:	b1c2      	cbz	r2, 9001a754 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a722:	9d04      	ldr	r5, [sp, #16]
9001a724:	436a      	muls	r2, r5
9001a726:	1c55      	adds	r5, r2, #1
9001a728:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001a72c:	4d2d      	ldr	r5, [pc, #180]	; (9001a7e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001a72e:	1212      	asrs	r2, r2, #8
9001a730:	682e      	ldr	r6, [r5, #0]
9001a732:	2aff      	cmp	r2, #255	; 0xff
9001a734:	ea4f 2516 	mov.w	r5, r6, lsr #8
9001a738:	d113      	bne.n	9001a762 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001a73a:	0972      	lsrs	r2, r6, #5
9001a73c:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
9001a740:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001a744:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001a748:	f025 0507 	bic.w	r5, r5, #7
9001a74c:	4315      	orrs	r5, r2
9001a74e:	4335      	orrs	r5, r6
9001a750:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
9001a754:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a756:	f108 0801 	add.w	r8, r8, #1
9001a75a:	4410      	add	r0, r2
9001a75c:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a75e:	4411      	add	r1, r2
9001a760:	e7c9      	b.n	9001a6f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001a762:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001a766:	fa1f fa82 	uxth.w	sl, r2
9001a76a:	f3c6 4707 	ubfx	r7, r6, #16, #8
9001a76e:	43d2      	mvns	r2, r2
9001a770:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001a774:	fb17 f70a 	smulbb	r7, r7, sl
9001a778:	b2d2      	uxtb	r2, r2
9001a77a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001a77e:	b2f6      	uxtb	r6, r6
9001a780:	b2ed      	uxtb	r5, r5
9001a782:	fb0c 7c02 	mla	ip, ip, r2, r7
9001a786:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001a78a:	fb16 f60a 	smulbb	r6, r6, sl
9001a78e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001a792:	fa1f fc8c 	uxth.w	ip, ip
9001a796:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001a79a:	fb15 f50a 	smulbb	r5, r5, sl
9001a79e:	fa5f fe8e 	uxtb.w	lr, lr
9001a7a2:	fb0e 6602 	mla	r6, lr, r2, r6
9001a7a6:	fb07 5702 	mla	r7, r7, r2, r5
9001a7aa:	f10c 0201 	add.w	r2, ip, #1
9001a7ae:	b2b6      	uxth	r6, r6
9001a7b0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001a7b4:	1c75      	adds	r5, r6, #1
9001a7b6:	b2bf      	uxth	r7, r7
9001a7b8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001a7bc:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001a7c0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001a7c4:	ea45 0c0c 	orr.w	ip, r5, ip
9001a7c8:	1c7d      	adds	r5, r7, #1
9001a7ca:	eb05 2517 	add.w	r5, r5, r7, lsr #8
9001a7ce:	096d      	lsrs	r5, r5, #5
9001a7d0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001a7d4:	ea4c 0c05 	orr.w	ip, ip, r5
9001a7d8:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
9001a7dc:	e7ba      	b.n	9001a754 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a7de:	b007      	add	sp, #28
9001a7e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a7e4:	240235bc 	.word	0x240235bc

9001a7e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a7e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a7ec:	b087      	sub	sp, #28
9001a7ee:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001a7f2:	f8df 8308 	ldr.w	r8, [pc, #776]	; 9001aafc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
9001a7f6:	9815      	ldr	r0, [sp, #84]	; 0x54
9001a7f8:	9101      	str	r1, [sp, #4]
9001a7fa:	9205      	str	r2, [sp, #20]
9001a7fc:	6841      	ldr	r1, [r0, #4]
9001a7fe:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
9001a802:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001a806:	fb01 2404 	mla	r4, r1, r4, r2
9001a80a:	6802      	ldr	r2, [r0, #0]
9001a80c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a810:	f8db 2008 	ldr.w	r2, [fp, #8]
9001a814:	3201      	adds	r2, #1
9001a816:	f022 0201 	bic.w	r2, r2, #1
9001a81a:	9202      	str	r2, [sp, #8]
9001a81c:	f8db 2000 	ldr.w	r2, [fp]
9001a820:	9203      	str	r2, [sp, #12]
9001a822:	9a01      	ldr	r2, [sp, #4]
9001a824:	2a00      	cmp	r2, #0
9001a826:	dc03      	bgt.n	9001a830 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001a828:	9a05      	ldr	r2, [sp, #20]
9001a82a:	2a00      	cmp	r2, #0
9001a82c:	f340 8162 	ble.w	9001aaf4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001a830:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001a832:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
9001a836:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001a83a:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001a83c:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
9001a840:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001a844:	2b00      	cmp	r3, #0
9001a846:	dd0e      	ble.n	9001a866 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001a848:	1402      	asrs	r2, r0, #16
9001a84a:	d405      	bmi.n	9001a858 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a84c:	42ba      	cmp	r2, r7
9001a84e:	da03      	bge.n	9001a858 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a850:	140a      	asrs	r2, r1, #16
9001a852:	d401      	bmi.n	9001a858 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a854:	42b2      	cmp	r2, r6
9001a856:	db07      	blt.n	9001a868 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001a858:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a85a:	3b01      	subs	r3, #1
9001a85c:	3402      	adds	r4, #2
9001a85e:	4410      	add	r0, r2
9001a860:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a862:	4411      	add	r1, r2
9001a864:	e7ee      	b.n	9001a844 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001a866:	d017      	beq.n	9001a898 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001a868:	1e5a      	subs	r2, r3, #1
9001a86a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001a86c:	fb05 0502 	mla	r5, r5, r2, r0
9001a870:	142d      	asrs	r5, r5, #16
9001a872:	d409      	bmi.n	9001a888 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001a874:	42bd      	cmp	r5, r7
9001a876:	da07      	bge.n	9001a888 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001a878:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001a87a:	fb05 1202 	mla	r2, r5, r2, r1
9001a87e:	1412      	asrs	r2, r2, #16
9001a880:	d402      	bmi.n	9001a888 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001a882:	42b2      	cmp	r2, r6
9001a884:	f2c0 80c3 	blt.w	9001aa0e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
9001a888:	2500      	movs	r5, #0
9001a88a:	195a      	adds	r2, r3, r5
9001a88c:	2a00      	cmp	r2, #0
9001a88e:	dc3f      	bgt.n	9001a910 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001a890:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a894:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a898:	9b01      	ldr	r3, [sp, #4]
9001a89a:	2b00      	cmp	r3, #0
9001a89c:	f340 812a 	ble.w	9001aaf4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001a8a0:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a8a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a8a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a8aa:	eeb0 6a62 	vmov.f32	s12, s5
9001a8ae:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a8b2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a8b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a8ba:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001a8be:	eeb0 6a43 	vmov.f32	s12, s6
9001a8c2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a8c6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001a8ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a8ce:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a8d2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a8d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a8da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a8de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a8e2:	ee12 2a90 	vmov	r2, s5
9001a8e6:	eef0 2a47 	vmov.f32	s5, s14
9001a8ea:	fb92 f3f3 	sdiv	r3, r2, r3
9001a8ee:	ee13 2a10 	vmov	r2, s6
9001a8f2:	9313      	str	r3, [sp, #76]	; 0x4c
9001a8f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a8f6:	eeb0 3a67 	vmov.f32	s6, s15
9001a8fa:	fb92 f3f3 	sdiv	r3, r2, r3
9001a8fe:	9314      	str	r3, [sp, #80]	; 0x50
9001a900:	9b01      	ldr	r3, [sp, #4]
9001a902:	9a05      	ldr	r2, [sp, #20]
9001a904:	3b01      	subs	r3, #1
9001a906:	9301      	str	r3, [sp, #4]
9001a908:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a90a:	bf08      	it	eq
9001a90c:	4613      	moveq	r3, r2
9001a90e:	e788      	b.n	9001a822 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001a910:	1406      	asrs	r6, r0, #16
9001a912:	d42c      	bmi.n	9001a96e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001a914:	f8db 2008 	ldr.w	r2, [fp, #8]
9001a918:	42b2      	cmp	r2, r6
9001a91a:	dd28      	ble.n	9001a96e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001a91c:	140f      	asrs	r7, r1, #16
9001a91e:	d426      	bmi.n	9001a96e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001a920:	f8db 200c 	ldr.w	r2, [fp, #12]
9001a924:	42ba      	cmp	r2, r7
9001a926:	dd22      	ble.n	9001a96e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001a928:	9a02      	ldr	r2, [sp, #8]
9001a92a:	fb07 6602 	mla	r6, r7, r2, r6
9001a92e:	9f03      	ldr	r7, [sp, #12]
9001a930:	0872      	lsrs	r2, r6, #1
9001a932:	07f6      	lsls	r6, r6, #31
9001a934:	5cba      	ldrb	r2, [r7, r2]
9001a936:	bf54      	ite	pl
9001a938:	f002 020f 	andpl.w	r2, r2, #15
9001a93c:	1112      	asrmi	r2, r2, #4
9001a93e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001a942:	b2d2      	uxtb	r2, r2
9001a944:	2aff      	cmp	r2, #255	; 0xff
9001a946:	d118      	bne.n	9001a97a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
9001a948:	f06f 0601 	mvn.w	r6, #1
9001a94c:	f8d8 2000 	ldr.w	r2, [r8]
9001a950:	fb06 f705 	mul.w	r7, r6, r5
9001a954:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
9001a958:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
9001a95c:	0956      	lsrs	r6, r2, #5
9001a95e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001a962:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001a966:	ea4c 0606 	orr.w	r6, ip, r6
9001a96a:	4316      	orrs	r6, r2
9001a96c:	53e6      	strh	r6, [r4, r7]
9001a96e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a970:	3d01      	subs	r5, #1
9001a972:	4410      	add	r0, r2
9001a974:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a976:	4411      	add	r1, r2
9001a978:	e787      	b.n	9001a88a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001a97a:	2a00      	cmp	r2, #0
9001a97c:	d0f7      	beq.n	9001a96e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001a97e:	f06f 0601 	mvn.w	r6, #1
9001a982:	f8d8 c000 	ldr.w	ip, [r8]
9001a986:	fa1f f982 	uxth.w	r9, r2
9001a98a:	43d2      	mvns	r2, r2
9001a98c:	436e      	muls	r6, r5
9001a98e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
9001a992:	b2d2      	uxtb	r2, r2
9001a994:	f834 e006 	ldrh.w	lr, [r4, r6]
9001a998:	fb1a fa09 	smulbb	sl, sl, r9
9001a99c:	9604      	str	r6, [sp, #16]
9001a99e:	f3cc 4607 	ubfx	r6, ip, #16, #8
9001a9a2:	ea4f 272e 	mov.w	r7, lr, asr #8
9001a9a6:	fb16 f609 	smulbb	r6, r6, r9
9001a9aa:	fa5f fc8c 	uxtb.w	ip, ip
9001a9ae:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001a9b2:	fb1c fc09 	smulbb	ip, ip, r9
9001a9b6:	fb07 6702 	mla	r7, r7, r2, r6
9001a9ba:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001a9be:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001a9c2:	b2bf      	uxth	r7, r7
9001a9c4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001a9c8:	fa5f fe8e 	uxtb.w	lr, lr
9001a9cc:	fb06 a602 	mla	r6, r6, r2, sl
9001a9d0:	fb0e cc02 	mla	ip, lr, r2, ip
9001a9d4:	1c7a      	adds	r2, r7, #1
9001a9d6:	b2b6      	uxth	r6, r6
9001a9d8:	fa1f fc8c 	uxth.w	ip, ip
9001a9dc:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001a9e0:	9a04      	ldr	r2, [sp, #16]
9001a9e2:	f10c 0a01 	add.w	sl, ip, #1
9001a9e6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001a9ea:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
9001a9ee:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a9f2:	ea4a 0707 	orr.w	r7, sl, r7
9001a9f6:	f106 0a01 	add.w	sl, r6, #1
9001a9fa:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001a9fe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001aa02:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001aa06:	ea47 070a 	orr.w	r7, r7, sl
9001aa0a:	52a7      	strh	r7, [r4, r2]
9001aa0c:	e7af      	b.n	9001a96e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001aa0e:	f04f 0e00 	mov.w	lr, #0
9001aa12:	eba3 020e 	sub.w	r2, r3, lr
9001aa16:	2a00      	cmp	r2, #0
9001aa18:	f77f af3a 	ble.w	9001a890 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001aa1c:	1402      	asrs	r2, r0, #16
9001aa1e:	9e02      	ldr	r6, [sp, #8]
9001aa20:	140d      	asrs	r5, r1, #16
9001aa22:	fb06 2505 	mla	r5, r6, r5, r2
9001aa26:	9e03      	ldr	r6, [sp, #12]
9001aa28:	086a      	lsrs	r2, r5, #1
9001aa2a:	07ed      	lsls	r5, r5, #31
9001aa2c:	5cb2      	ldrb	r2, [r6, r2]
9001aa2e:	bf54      	ite	pl
9001aa30:	f002 020f 	andpl.w	r2, r2, #15
9001aa34:	1112      	asrmi	r2, r2, #4
9001aa36:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001aa3a:	b2d2      	uxtb	r2, r2
9001aa3c:	2aff      	cmp	r2, #255	; 0xff
9001aa3e:	d115      	bne.n	9001aa6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
9001aa40:	f8d8 5000 	ldr.w	r5, [r8]
9001aa44:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
9001aa48:	ea02 2615 	and.w	r6, r2, r5, lsr #8
9001aa4c:	096a      	lsrs	r2, r5, #5
9001aa4e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001aa52:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001aa56:	4332      	orrs	r2, r6
9001aa58:	432a      	orrs	r2, r5
9001aa5a:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
9001aa5e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001aa60:	f10e 0e01 	add.w	lr, lr, #1
9001aa64:	4410      	add	r0, r2
9001aa66:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001aa68:	4411      	add	r1, r2
9001aa6a:	e7d2      	b.n	9001aa12 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001aa6c:	2a00      	cmp	r2, #0
9001aa6e:	d0f6      	beq.n	9001aa5e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001aa70:	f8d8 7000 	ldr.w	r7, [r8]
9001aa74:	fa1f f982 	uxth.w	r9, r2
9001aa78:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001aa7c:	43d2      	mvns	r2, r2
9001aa7e:	f3c7 4507 	ubfx	r5, r7, #16, #8
9001aa82:	f3c7 2a07 	ubfx	sl, r7, #8, #8
9001aa86:	ea4f 262c 	mov.w	r6, ip, asr #8
9001aa8a:	fb15 f509 	smulbb	r5, r5, r9
9001aa8e:	b2d2      	uxtb	r2, r2
9001aa90:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001aa94:	b2ff      	uxtb	r7, r7
9001aa96:	fb1a fa09 	smulbb	sl, sl, r9
9001aa9a:	fb06 5602 	mla	r6, r6, r2, r5
9001aa9e:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001aaa2:	fb17 f709 	smulbb	r7, r7, r9
9001aaa6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001aaaa:	b2b6      	uxth	r6, r6
9001aaac:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001aab0:	fa5f fc8c 	uxtb.w	ip, ip
9001aab4:	fb05 a502 	mla	r5, r5, r2, sl
9001aab8:	fb0c 7702 	mla	r7, ip, r2, r7
9001aabc:	1c72      	adds	r2, r6, #1
9001aabe:	b2ad      	uxth	r5, r5
9001aac0:	b2bf      	uxth	r7, r7
9001aac2:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9001aac6:	f107 0a01 	add.w	sl, r7, #1
9001aaca:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001aace:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001aad2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001aad6:	ea4a 0606 	orr.w	r6, sl, r6
9001aada:	f105 0a01 	add.w	sl, r5, #1
9001aade:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001aae2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001aae6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001aaea:	ea46 060a 	orr.w	r6, r6, sl
9001aaee:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
9001aaf2:	e7b4      	b.n	9001aa5e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001aaf4:	b007      	add	sp, #28
9001aaf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001aafa:	bf00      	nop
9001aafc:	240235bc 	.word	0x240235bc

9001ab00 <_ZN8touchgfx8LCD16bppD1Ev>:
9001ab00:	4770      	bx	lr

9001ab02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
9001ab02:	4770      	bx	lr

9001ab04 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
9001ab04:	4770      	bx	lr

9001ab06 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
9001ab06:	4770      	bx	lr

9001ab08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
9001ab08:	4770      	bx	lr

9001ab0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
9001ab0a:	4770      	bx	lr

9001ab0c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
9001ab0c:	4770      	bx	lr

9001ab0e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
9001ab0e:	4770      	bx	lr

9001ab10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001ab10:	4770      	bx	lr

9001ab12 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001ab12:	4770      	bx	lr

9001ab14 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001ab14:	4770      	bx	lr

9001ab16 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001ab16:	4770      	bx	lr

9001ab18 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001ab18:	4770      	bx	lr

9001ab1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001ab1a:	4770      	bx	lr

9001ab1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001ab1c:	4770      	bx	lr

9001ab1e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001ab1e:	4770      	bx	lr

9001ab20 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001ab20:	4770      	bx	lr

9001ab22 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001ab22:	4770      	bx	lr

9001ab24 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001ab24:	4770      	bx	lr

9001ab26 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
9001ab26:	4770      	bx	lr

9001ab28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001ab28:	4770      	bx	lr

9001ab2a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001ab2a:	4770      	bx	lr

9001ab2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001ab2c:	4770      	bx	lr

9001ab2e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001ab2e:	4770      	bx	lr

9001ab30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001ab30:	4770      	bx	lr

9001ab32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
9001ab32:	4770      	bx	lr

9001ab34 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
9001ab34:	4770      	bx	lr

9001ab36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
9001ab36:	4770      	bx	lr

9001ab38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001ab38:	4770      	bx	lr

9001ab3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001ab3a:	4770      	bx	lr

9001ab3c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001ab3c:	4770      	bx	lr

9001ab3e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001ab3e:	4770      	bx	lr

9001ab40 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
9001ab40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001ab44:	b088      	sub	sp, #32
9001ab46:	4606      	mov	r6, r0
9001ab48:	4688      	mov	r8, r1
9001ab4a:	4691      	mov	r9, r2
9001ab4c:	ac08      	add	r4, sp, #32
9001ab4e:	f824 3d0c 	strh.w	r3, [r4, #-12]!
9001ab52:	4620      	mov	r0, r4
9001ab54:	f7fd fc64 	bl	90018420 <_ZNK8touchgfx6Bitmap7getDataEv>
9001ab58:	6833      	ldr	r3, [r6, #0]
9001ab5a:	4605      	mov	r5, r0
9001ab5c:	4620      	mov	r0, r4
9001ab5e:	699f      	ldr	r7, [r3, #24]
9001ab60:	f7fd fb72 	bl	90018248 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001ab64:	4682      	mov	sl, r0
9001ab66:	4620      	mov	r0, r4
9001ab68:	f7fd fba2 	bl	900182b0 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001ab6c:	9500      	str	r5, [sp, #0]
9001ab6e:	464b      	mov	r3, r9
9001ab70:	4642      	mov	r2, r8
9001ab72:	4631      	mov	r1, r6
9001ab74:	e9cd a001 	strd	sl, r0, [sp, #4]
9001ab78:	a806      	add	r0, sp, #24
9001ab7a:	47b8      	blx	r7
9001ab7c:	4628      	mov	r0, r5
9001ab7e:	b008      	add	sp, #32
9001ab80:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

9001ab84 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
9001ab84:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001ab88:	2300      	movs	r3, #0
9001ab8a:	9300      	str	r3, [sp, #0]
9001ab8c:	4b3d      	ldr	r3, [pc, #244]	; (9001ac84 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
9001ab8e:	781b      	ldrb	r3, [r3, #0]
9001ab90:	2b00      	cmp	r3, #0
9001ab92:	d137      	bne.n	9001ac04 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
9001ab94:	4a3c      	ldr	r2, [pc, #240]	; (9001ac88 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001ab96:	f9b2 2000 	ldrsh.w	r2, [r2]
9001ab9a:	f8ad 2004 	strh.w	r2, [sp, #4]
9001ab9e:	2b00      	cmp	r3, #0
9001aba0:	d132      	bne.n	9001ac08 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
9001aba2:	4b3a      	ldr	r3, [pc, #232]	; (9001ac8c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001aba4:	f9b3 3000 	ldrsh.w	r3, [r3]
9001aba8:	ac02      	add	r4, sp, #8
9001abaa:	6808      	ldr	r0, [r1, #0]
9001abac:	f8ad 3006 	strh.w	r3, [sp, #6]
9001abb0:	ab02      	add	r3, sp, #8
9001abb2:	6849      	ldr	r1, [r1, #4]
9001abb4:	4d36      	ldr	r5, [pc, #216]	; (9001ac90 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
9001abb6:	c303      	stmia	r3!, {r0, r1}
9001abb8:	4669      	mov	r1, sp
9001abba:	4620      	mov	r0, r4
9001abbc:	f7fa f892 	bl	90014ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001abc0:	4668      	mov	r0, sp
9001abc2:	f7fa f84b 	bl	90014c5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001abc6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001abca:	f8bd 2000 	ldrh.w	r2, [sp]
9001abce:	462f      	mov	r7, r5
9001abd0:	6828      	ldr	r0, [r5, #0]
9001abd2:	4413      	add	r3, r2
9001abd4:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001abd8:	f8ad 3008 	strh.w	r3, [sp, #8]
9001abdc:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001abe0:	4413      	add	r3, r2
9001abe2:	f8ad 300a 	strh.w	r3, [sp, #10]
9001abe6:	6803      	ldr	r3, [r0, #0]
9001abe8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001abea:	4798      	blx	r3
9001abec:	f010 0f01 	tst.w	r0, #1
9001abf0:	d00c      	beq.n	9001ac0c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
9001abf2:	6828      	ldr	r0, [r5, #0]
9001abf4:	6803      	ldr	r3, [r0, #0]
9001abf6:	e894 0006 	ldmia.w	r4, {r1, r2}
9001abfa:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
9001abfc:	4798      	blx	r3
9001abfe:	b004      	add	sp, #16
9001ac00:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001ac04:	4a21      	ldr	r2, [pc, #132]	; (9001ac8c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001ac06:	e7c6      	b.n	9001ab96 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
9001ac08:	4b1f      	ldr	r3, [pc, #124]	; (9001ac88 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001ac0a:	e7cb      	b.n	9001aba4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
9001ac0c:	6838      	ldr	r0, [r7, #0]
9001ac0e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001ac12:	6803      	ldr	r3, [r0, #0]
9001ac14:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
9001ac18:	ea4f 0848 	mov.w	r8, r8, lsl #1
9001ac1c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001ac1e:	4798      	blx	r3
9001ac20:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
9001ac24:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001ac28:	f8bd 6004 	ldrh.w	r6, [sp, #4]
9001ac2c:	fb16 3602 	smlabb	r6, r6, r2, r3
9001ac30:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001ac34:	6838      	ldr	r0, [r7, #0]
9001ac36:	6803      	ldr	r3, [r0, #0]
9001ac38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001ac3a:	4798      	blx	r3
9001ac3c:	4a12      	ldr	r2, [pc, #72]	; (9001ac88 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001ac3e:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
9001ac42:	8813      	ldrh	r3, [r2, #0]
9001ac44:	4691      	mov	r9, r2
9001ac46:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001ac4a:	435d      	muls	r5, r3
9001ac4c:	fb03 1404 	mla	r4, r3, r4, r1
9001ac50:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001ac54:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001ac58:	6838      	ldr	r0, [r7, #0]
9001ac5a:	42ac      	cmp	r4, r5
9001ac5c:	6803      	ldr	r3, [r0, #0]
9001ac5e:	d20e      	bcs.n	9001ac7e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
9001ac60:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
9001ac64:	4632      	mov	r2, r6
9001ac66:	4643      	mov	r3, r8
9001ac68:	4621      	mov	r1, r4
9001ac6a:	47d0      	blx	sl
9001ac6c:	f8b9 3000 	ldrh.w	r3, [r9]
9001ac70:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ac74:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001ac78:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001ac7c:	e7ec      	b.n	9001ac58 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
9001ac7e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001ac80:	4798      	blx	r3
9001ac82:	e7bc      	b.n	9001abfe <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
9001ac84:	240235a4 	.word	0x240235a4
9001ac88:	240235a6 	.word	0x240235a6
9001ac8c:	240235a8 	.word	0x240235a8
9001ac90:	240235ac 	.word	0x240235ac

9001ac94 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
9001ac94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ac98:	b08b      	sub	sp, #44	; 0x2c
9001ac9a:	460f      	mov	r7, r1
9001ac9c:	4616      	mov	r6, r2
9001ac9e:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
9001aca2:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
9001aca6:	f1bb 0f00 	cmp.w	fp, #0
9001acaa:	d04a      	beq.n	9001ad42 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001acac:	6810      	ldr	r0, [r2, #0]
9001acae:	ad06      	add	r5, sp, #24
9001acb0:	6851      	ldr	r1, [r2, #4]
9001acb2:	c503      	stmia	r5!, {r0, r1}
9001acb4:	6818      	ldr	r0, [r3, #0]
9001acb6:	ad08      	add	r5, sp, #32
9001acb8:	6859      	ldr	r1, [r3, #4]
9001acba:	c503      	stmia	r5!, {r0, r1}
9001acbc:	a806      	add	r0, sp, #24
9001acbe:	f7f9 ffcd 	bl	90014c5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001acc2:	4631      	mov	r1, r6
9001acc4:	a808      	add	r0, sp, #32
9001acc6:	f7fa f80d 	bl	90014ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001acca:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001acce:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
9001acd2:	f8bd 601c 	ldrh.w	r6, [sp, #28]
9001acd6:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
9001acda:	fb16 2103 	smlabb	r1, r6, r3, r2
9001acde:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
9001ace2:	eb07 0641 	add.w	r6, r7, r1, lsl #1
9001ace6:	f8bd 1018 	ldrh.w	r1, [sp, #24]
9001acea:	4f5f      	ldr	r7, [pc, #380]	; (9001ae68 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001acec:	440a      	add	r2, r1
9001acee:	6838      	ldr	r0, [r7, #0]
9001acf0:	46b9      	mov	r9, r7
9001acf2:	f8ad 2020 	strh.w	r2, [sp, #32]
9001acf6:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001acfa:	4413      	add	r3, r2
9001acfc:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
9001ad00:	6803      	ldr	r3, [r0, #0]
9001ad02:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001ad04:	4798      	blx	r3
9001ad06:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
9001ad0a:	d11d      	bne.n	9001ad48 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
9001ad0c:	b9fc      	cbnz	r4, 9001ad4e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001ad0e:	f010 0f01 	tst.w	r0, #1
9001ad12:	d01c      	beq.n	9001ad4e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001ad14:	f8d9 0000 	ldr.w	r0, [r9]
9001ad18:	2700      	movs	r7, #0
9001ad1a:	b2ad      	uxth	r5, r5
9001ad1c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
9001ad20:	6801      	ldr	r1, [r0, #0]
9001ad22:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9001ad26:	f8cd b00c 	str.w	fp, [sp, #12]
9001ad2a:	9501      	str	r5, [sp, #4]
9001ad2c:	e9cd 4704 	strd	r4, r7, [sp, #16]
9001ad30:	f8bd 401c 	ldrh.w	r4, [sp, #28]
9001ad34:	9402      	str	r4, [sp, #8]
9001ad36:	fa1f f488 	uxth.w	r4, r8
9001ad3a:	9400      	str	r4, [sp, #0]
9001ad3c:	6c4c      	ldr	r4, [r1, #68]	; 0x44
9001ad3e:	4631      	mov	r1, r6
9001ad40:	47a0      	blx	r4
9001ad42:	b00b      	add	sp, #44	; 0x2c
9001ad44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ad48:	f010 0f04 	tst.w	r0, #4
9001ad4c:	e7e1      	b.n	9001ad12 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
9001ad4e:	f8d9 0000 	ldr.w	r0, [r9]
9001ad52:	ea4f 0748 	mov.w	r7, r8, lsl #1
9001ad56:	6803      	ldr	r3, [r0, #0]
9001ad58:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001ad5a:	4798      	blx	r3
9001ad5c:	4b43      	ldr	r3, [pc, #268]	; (9001ae6c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
9001ad5e:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
9001ad62:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
9001ad66:	881a      	ldrh	r2, [r3, #0]
9001ad68:	469a      	mov	sl, r3
9001ad6a:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
9001ad6e:	fb05 f502 	mul.w	r5, r5, r2
9001ad72:	fb02 1404 	mla	r4, r2, r4, r1
9001ad76:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001ad7a:	d059      	beq.n	9001ae30 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
9001ad7c:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
9001ad80:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001ad84:	fa1f f28b 	uxth.w	r2, fp
9001ad88:	469e      	mov	lr, r3
9001ad8a:	fa1f f989 	uxth.w	r9, r9
9001ad8e:	42ac      	cmp	r4, r5
9001ad90:	d264      	bcs.n	9001ae5c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001ad92:	eb04 0a07 	add.w	sl, r4, r7
9001ad96:	4554      	cmp	r4, sl
9001ad98:	d23d      	bcs.n	9001ae16 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
9001ad9a:	8821      	ldrh	r1, [r4, #0]
9001ad9c:	f836 3b02 	ldrh.w	r3, [r6], #2
9001ada0:	1208      	asrs	r0, r1, #8
9001ada2:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001ada6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001adaa:	ea4f 0be1 	mov.w	fp, r1, asr #3
9001adae:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001adb2:	00c9      	lsls	r1, r1, #3
9001adb4:	fb10 f009 	smulbb	r0, r0, r9
9001adb8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001adbc:	b2c9      	uxtb	r1, r1
9001adbe:	fb0c 0c02 	mla	ip, ip, r2, r0
9001adc2:	10d8      	asrs	r0, r3, #3
9001adc4:	fb1b fb09 	smulbb	fp, fp, r9
9001adc8:	00db      	lsls	r3, r3, #3
9001adca:	fa1f fc8c 	uxth.w	ip, ip
9001adce:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9001add2:	fb11 f109 	smulbb	r1, r1, r9
9001add6:	b2db      	uxtb	r3, r3
9001add8:	fb00 b002 	mla	r0, r0, r2, fp
9001addc:	f10c 0b01 	add.w	fp, ip, #1
9001ade0:	fb03 1302 	mla	r3, r3, r2, r1
9001ade4:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
9001ade8:	b29b      	uxth	r3, r3
9001adea:	b280      	uxth	r0, r0
9001adec:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
9001adf0:	f103 0c01 	add.w	ip, r3, #1
9001adf4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001adf8:	1c43      	adds	r3, r0, #1
9001adfa:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001adfe:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001ae02:	0940      	lsrs	r0, r0, #5
9001ae04:	ea4c 0c0b 	orr.w	ip, ip, fp
9001ae08:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001ae0c:	ea4c 0c00 	orr.w	ip, ip, r0
9001ae10:	f824 cb02 	strh.w	ip, [r4], #2
9001ae14:	e7bf      	b.n	9001ad96 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
9001ae16:	f8be 3000 	ldrh.w	r3, [lr]
9001ae1a:	eba3 0308 	sub.w	r3, r3, r8
9001ae1e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ae22:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001ae26:	eba3 0308 	sub.w	r3, r3, r8
9001ae2a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001ae2e:	e7ae      	b.n	9001ad8e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
9001ae30:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001ae34:	f8d9 0000 	ldr.w	r0, [r9]
9001ae38:	42ac      	cmp	r4, r5
9001ae3a:	6803      	ldr	r3, [r0, #0]
9001ae3c:	d20e      	bcs.n	9001ae5c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001ae3e:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
9001ae42:	4632      	mov	r2, r6
9001ae44:	463b      	mov	r3, r7
9001ae46:	4621      	mov	r1, r4
9001ae48:	47c0      	blx	r8
9001ae4a:	f8ba 3000 	ldrh.w	r3, [sl]
9001ae4e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ae52:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001ae56:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001ae5a:	e7eb      	b.n	9001ae34 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
9001ae5c:	4b02      	ldr	r3, [pc, #8]	; (9001ae68 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001ae5e:	6818      	ldr	r0, [r3, #0]
9001ae60:	6803      	ldr	r3, [r0, #0]
9001ae62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001ae64:	4798      	blx	r3
9001ae66:	e76c      	b.n	9001ad42 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001ae68:	240235ac 	.word	0x240235ac
9001ae6c:	240235a6 	.word	0x240235a6

9001ae70 <_ZN8touchgfx8LCD16bppD0Ev>:
9001ae70:	b510      	push	{r4, lr}
9001ae72:	4604      	mov	r4, r0
9001ae74:	2188      	movs	r1, #136	; 0x88
9001ae76:	f00b f9f4 	bl	90026262 <_ZdlPvj>
9001ae7a:	4620      	mov	r0, r4
9001ae7c:	bd10      	pop	{r4, pc}

9001ae7e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
9001ae7e:	b510      	push	{r4, lr}
9001ae80:	4604      	mov	r4, r0
9001ae82:	2104      	movs	r1, #4
9001ae84:	f00b f9ed 	bl	90026262 <_ZdlPvj>
9001ae88:	4620      	mov	r0, r4
9001ae8a:	bd10      	pop	{r4, pc}

9001ae8c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
9001ae8c:	b510      	push	{r4, lr}
9001ae8e:	4604      	mov	r4, r0
9001ae90:	2104      	movs	r1, #4
9001ae92:	f00b f9e6 	bl	90026262 <_ZdlPvj>
9001ae96:	4620      	mov	r0, r4
9001ae98:	bd10      	pop	{r4, pc}

9001ae9a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
9001ae9a:	b510      	push	{r4, lr}
9001ae9c:	4604      	mov	r4, r0
9001ae9e:	f640 0144 	movw	r1, #2116	; 0x844
9001aea2:	f00b f9de 	bl	90026262 <_ZdlPvj>
9001aea6:	4620      	mov	r0, r4
9001aea8:	bd10      	pop	{r4, pc}

9001aeaa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001aeaa:	b510      	push	{r4, lr}
9001aeac:	4604      	mov	r4, r0
9001aeae:	2104      	movs	r1, #4
9001aeb0:	f00b f9d7 	bl	90026262 <_ZdlPvj>
9001aeb4:	4620      	mov	r0, r4
9001aeb6:	bd10      	pop	{r4, pc}

9001aeb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001aeb8:	b510      	push	{r4, lr}
9001aeba:	4604      	mov	r4, r0
9001aebc:	2104      	movs	r1, #4
9001aebe:	f00b f9d0 	bl	90026262 <_ZdlPvj>
9001aec2:	4620      	mov	r0, r4
9001aec4:	bd10      	pop	{r4, pc}

9001aec6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001aec6:	b510      	push	{r4, lr}
9001aec8:	4604      	mov	r4, r0
9001aeca:	2104      	movs	r1, #4
9001aecc:	f00b f9c9 	bl	90026262 <_ZdlPvj>
9001aed0:	4620      	mov	r0, r4
9001aed2:	bd10      	pop	{r4, pc}

9001aed4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001aed4:	b510      	push	{r4, lr}
9001aed6:	4604      	mov	r4, r0
9001aed8:	2104      	movs	r1, #4
9001aeda:	f00b f9c2 	bl	90026262 <_ZdlPvj>
9001aede:	4620      	mov	r0, r4
9001aee0:	bd10      	pop	{r4, pc}

9001aee2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001aee2:	b510      	push	{r4, lr}
9001aee4:	4604      	mov	r4, r0
9001aee6:	2104      	movs	r1, #4
9001aee8:	f00b f9bb 	bl	90026262 <_ZdlPvj>
9001aeec:	4620      	mov	r0, r4
9001aeee:	bd10      	pop	{r4, pc}

9001aef0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
9001aef0:	b510      	push	{r4, lr}
9001aef2:	4604      	mov	r4, r0
9001aef4:	2104      	movs	r1, #4
9001aef6:	f00b f9b4 	bl	90026262 <_ZdlPvj>
9001aefa:	4620      	mov	r0, r4
9001aefc:	bd10      	pop	{r4, pc}

9001aefe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
9001aefe:	b510      	push	{r4, lr}
9001af00:	4604      	mov	r4, r0
9001af02:	2104      	movs	r1, #4
9001af04:	f00b f9ad 	bl	90026262 <_ZdlPvj>
9001af08:	4620      	mov	r0, r4
9001af0a:	bd10      	pop	{r4, pc}

9001af0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
9001af0c:	b510      	push	{r4, lr}
9001af0e:	4604      	mov	r4, r0
9001af10:	2104      	movs	r1, #4
9001af12:	f00b f9a6 	bl	90026262 <_ZdlPvj>
9001af16:	4620      	mov	r0, r4
9001af18:	bd10      	pop	{r4, pc}

9001af1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001af1a:	b510      	push	{r4, lr}
9001af1c:	4604      	mov	r4, r0
9001af1e:	2104      	movs	r1, #4
9001af20:	f00b f99f 	bl	90026262 <_ZdlPvj>
9001af24:	4620      	mov	r0, r4
9001af26:	bd10      	pop	{r4, pc}

9001af28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001af28:	b510      	push	{r4, lr}
9001af2a:	4604      	mov	r4, r0
9001af2c:	2104      	movs	r1, #4
9001af2e:	f00b f998 	bl	90026262 <_ZdlPvj>
9001af32:	4620      	mov	r0, r4
9001af34:	bd10      	pop	{r4, pc}

9001af36 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001af36:	b510      	push	{r4, lr}
9001af38:	4604      	mov	r4, r0
9001af3a:	2104      	movs	r1, #4
9001af3c:	f00b f991 	bl	90026262 <_ZdlPvj>
9001af40:	4620      	mov	r0, r4
9001af42:	bd10      	pop	{r4, pc}

9001af44 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001af44:	b510      	push	{r4, lr}
9001af46:	4604      	mov	r4, r0
9001af48:	2104      	movs	r1, #4
9001af4a:	f00b f98a 	bl	90026262 <_ZdlPvj>
9001af4e:	4620      	mov	r0, r4
9001af50:	bd10      	pop	{r4, pc}

9001af52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001af52:	b510      	push	{r4, lr}
9001af54:	4604      	mov	r4, r0
9001af56:	2104      	movs	r1, #4
9001af58:	f00b f983 	bl	90026262 <_ZdlPvj>
9001af5c:	4620      	mov	r0, r4
9001af5e:	bd10      	pop	{r4, pc}

9001af60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001af60:	b510      	push	{r4, lr}
9001af62:	4604      	mov	r4, r0
9001af64:	2104      	movs	r1, #4
9001af66:	f00b f97c 	bl	90026262 <_ZdlPvj>
9001af6a:	4620      	mov	r0, r4
9001af6c:	bd10      	pop	{r4, pc}

9001af6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001af6e:	b510      	push	{r4, lr}
9001af70:	4604      	mov	r4, r0
9001af72:	2104      	movs	r1, #4
9001af74:	f00b f975 	bl	90026262 <_ZdlPvj>
9001af78:	4620      	mov	r0, r4
9001af7a:	bd10      	pop	{r4, pc}

9001af7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001af7c:	b510      	push	{r4, lr}
9001af7e:	4604      	mov	r4, r0
9001af80:	2104      	movs	r1, #4
9001af82:	f00b f96e 	bl	90026262 <_ZdlPvj>
9001af86:	4620      	mov	r0, r4
9001af88:	bd10      	pop	{r4, pc}

9001af8a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001af8a:	b510      	push	{r4, lr}
9001af8c:	4604      	mov	r4, r0
9001af8e:	2104      	movs	r1, #4
9001af90:	f00b f967 	bl	90026262 <_ZdlPvj>
9001af94:	4620      	mov	r0, r4
9001af96:	bd10      	pop	{r4, pc}

9001af98 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001af98:	b510      	push	{r4, lr}
9001af9a:	4604      	mov	r4, r0
9001af9c:	2104      	movs	r1, #4
9001af9e:	f00b f960 	bl	90026262 <_ZdlPvj>
9001afa2:	4620      	mov	r0, r4
9001afa4:	bd10      	pop	{r4, pc}

9001afa6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001afa6:	b510      	push	{r4, lr}
9001afa8:	4604      	mov	r4, r0
9001afaa:	2104      	movs	r1, #4
9001afac:	f00b f959 	bl	90026262 <_ZdlPvj>
9001afb0:	4620      	mov	r0, r4
9001afb2:	bd10      	pop	{r4, pc}

9001afb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
9001afb4:	b510      	push	{r4, lr}
9001afb6:	4604      	mov	r4, r0
9001afb8:	2104      	movs	r1, #4
9001afba:	f00b f952 	bl	90026262 <_ZdlPvj>
9001afbe:	4620      	mov	r0, r4
9001afc0:	bd10      	pop	{r4, pc}

9001afc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001afc2:	b510      	push	{r4, lr}
9001afc4:	4604      	mov	r4, r0
9001afc6:	2104      	movs	r1, #4
9001afc8:	f00b f94b 	bl	90026262 <_ZdlPvj>
9001afcc:	4620      	mov	r0, r4
9001afce:	bd10      	pop	{r4, pc}

9001afd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001afd0:	b510      	push	{r4, lr}
9001afd2:	4604      	mov	r4, r0
9001afd4:	2104      	movs	r1, #4
9001afd6:	f00b f944 	bl	90026262 <_ZdlPvj>
9001afda:	4620      	mov	r0, r4
9001afdc:	bd10      	pop	{r4, pc}

9001afde <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001afde:	b510      	push	{r4, lr}
9001afe0:	4604      	mov	r4, r0
9001afe2:	2104      	movs	r1, #4
9001afe4:	f00b f93d 	bl	90026262 <_ZdlPvj>
9001afe8:	4620      	mov	r0, r4
9001afea:	bd10      	pop	{r4, pc}

9001afec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001afec:	b510      	push	{r4, lr}
9001afee:	4604      	mov	r4, r0
9001aff0:	2104      	movs	r1, #4
9001aff2:	f00b f936 	bl	90026262 <_ZdlPvj>
9001aff6:	4620      	mov	r0, r4
9001aff8:	bd10      	pop	{r4, pc}

9001affa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
9001affa:	b510      	push	{r4, lr}
9001affc:	4604      	mov	r4, r0
9001affe:	2104      	movs	r1, #4
9001b000:	f00b f92f 	bl	90026262 <_ZdlPvj>
9001b004:	4620      	mov	r0, r4
9001b006:	bd10      	pop	{r4, pc}

9001b008 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
9001b008:	b510      	push	{r4, lr}
9001b00a:	4604      	mov	r4, r0
9001b00c:	2104      	movs	r1, #4
9001b00e:	f00b f928 	bl	90026262 <_ZdlPvj>
9001b012:	4620      	mov	r0, r4
9001b014:	bd10      	pop	{r4, pc}

9001b016 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
9001b016:	b510      	push	{r4, lr}
9001b018:	4604      	mov	r4, r0
9001b01a:	2104      	movs	r1, #4
9001b01c:	f00b f921 	bl	90026262 <_ZdlPvj>
9001b020:	4620      	mov	r0, r4
9001b022:	bd10      	pop	{r4, pc}

9001b024 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
9001b024:	b510      	push	{r4, lr}
9001b026:	4604      	mov	r4, r0
9001b028:	2104      	movs	r1, #4
9001b02a:	f00b f91a 	bl	90026262 <_ZdlPvj>
9001b02e:	4620      	mov	r0, r4
9001b030:	bd10      	pop	{r4, pc}
	...

9001b034 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001b034:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b038:	b08f      	sub	sp, #60	; 0x3c
9001b03a:	461c      	mov	r4, r3
9001b03c:	9205      	str	r2, [sp, #20]
9001b03e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001b042:	9100      	str	r1, [sp, #0]
9001b044:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001b046:	9201      	str	r2, [sp, #4]
9001b048:	2a00      	cmp	r2, #0
9001b04a:	f000 8116 	beq.w	9001b27a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
9001b04e:	6820      	ldr	r0, [r4, #0]
9001b050:	aa0a      	add	r2, sp, #40	; 0x28
9001b052:	6861      	ldr	r1, [r4, #4]
9001b054:	c203      	stmia	r2!, {r0, r1}
9001b056:	6818      	ldr	r0, [r3, #0]
9001b058:	aa0c      	add	r2, sp, #48	; 0x30
9001b05a:	6859      	ldr	r1, [r3, #4]
9001b05c:	c203      	stmia	r2!, {r0, r1}
9001b05e:	a80a      	add	r0, sp, #40	; 0x28
9001b060:	f7f9 fdfc 	bl	90014c5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001b064:	4621      	mov	r1, r4
9001b066:	a80c      	add	r0, sp, #48	; 0x30
9001b068:	f7f9 fe3c 	bl	90014ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001b06c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001b070:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
9001b074:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001b078:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
9001b07c:	bfdb      	ittet	le
9001b07e:	b2b3      	uxthle	r3, r6
9001b080:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001b084:	2301      	movgt	r3, #1
9001b086:	fb92 f3f3 	sdivle	r3, r2, r3
9001b08a:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001b08e:	441d      	add	r5, r3
9001b090:	fb92 f1f3 	sdiv	r1, r2, r3
9001b094:	fa1f fc81 	uxth.w	ip, r1
9001b098:	3d01      	subs	r5, #1
9001b09a:	fb0c 2413 	mls	r4, ip, r3, r2
9001b09e:	4661      	mov	r1, ip
9001b0a0:	fb14 f406 	smulbb	r4, r4, r6
9001b0a4:	4404      	add	r4, r0
9001b0a6:	fb95 f5f3 	sdiv	r5, r5, r3
9001b0aa:	b2a4      	uxth	r4, r4
9001b0ac:	b131      	cbz	r1, 9001b0bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
9001b0ae:	9b05      	ldr	r3, [sp, #20]
9001b0b0:	9900      	ldr	r1, [sp, #0]
9001b0b2:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001b0b6:	ba1b      	rev	r3, r3
9001b0b8:	4419      	add	r1, r3
9001b0ba:	9100      	str	r1, [sp, #0]
9001b0bc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001b0c0:	b2ad      	uxth	r5, r5
9001b0c2:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
9001b0c6:	4418      	add	r0, r3
9001b0c8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001b0cc:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001b0d0:	00ad      	lsls	r5, r5, #2
9001b0d2:	441a      	add	r2, r3
9001b0d4:	4b6a      	ldr	r3, [pc, #424]	; (9001b280 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001b0d6:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
9001b0da:	6818      	ldr	r0, [r3, #0]
9001b0dc:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
9001b0e0:	6803      	ldr	r3, [r0, #0]
9001b0e2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001b0e4:	4798      	blx	r3
9001b0e6:	4967      	ldr	r1, [pc, #412]	; (9001b284 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
9001b0e8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001b0ec:	2c00      	cmp	r4, #0
9001b0ee:	880b      	ldrh	r3, [r1, #0]
9001b0f0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
9001b0f4:	bf0c      	ite	eq
9001b0f6:	46c6      	moveq	lr, r8
9001b0f8:	f04f 0e00 	movne.w	lr, #0
9001b0fc:	9109      	str	r1, [sp, #36]	; 0x24
9001b0fe:	fb03 c202 	mla	r2, r3, r2, ip
9001b102:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001b106:	4373      	muls	r3, r6
9001b108:	fa1f fe8e 	uxth.w	lr, lr
9001b10c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001b110:	9103      	str	r1, [sp, #12]
9001b112:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001b116:	9306      	str	r3, [sp, #24]
9001b118:	1d2b      	adds	r3, r5, #4
9001b11a:	9307      	str	r3, [sp, #28]
9001b11c:	9b01      	ldr	r3, [sp, #4]
9001b11e:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
9001b122:	2300      	movs	r3, #0
9001b124:	b292      	uxth	r2, r2
9001b126:	9302      	str	r3, [sp, #8]
9001b128:	9204      	str	r2, [sp, #16]
9001b12a:	9a06      	ldr	r2, [sp, #24]
9001b12c:	4282      	cmp	r2, r0
9001b12e:	f240 809f 	bls.w	9001b270 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
9001b132:	b963      	cbnz	r3, 9001b14e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001b134:	9b00      	ldr	r3, [sp, #0]
9001b136:	781a      	ldrb	r2, [r3, #0]
9001b138:	0993      	lsrs	r3, r2, #6
9001b13a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001b13e:	9202      	str	r2, [sp, #8]
9001b140:	1e5a      	subs	r2, r3, #1
9001b142:	2a02      	cmp	r2, #2
9001b144:	d815      	bhi.n	9001b172 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
9001b146:	9a00      	ldr	r2, [sp, #0]
9001b148:	b29b      	uxth	r3, r3
9001b14a:	3201      	adds	r2, #1
9001b14c:	9200      	str	r2, [sp, #0]
9001b14e:	b1b4      	cbz	r4, 9001b17e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
9001b150:	429c      	cmp	r4, r3
9001b152:	bf91      	iteee	ls
9001b154:	1b1c      	subls	r4, r3, r4
9001b156:	1ae4      	subhi	r4, r4, r3
9001b158:	4671      	movhi	r1, lr
9001b15a:	f04f 0a00 	movhi.w	sl, #0
9001b15e:	bf9b      	ittet	ls
9001b160:	fa1f fa84 	uxthls.w	sl, r4
9001b164:	2400      	movls	r4, #0
9001b166:	b2a4      	uxthhi	r4, r4
9001b168:	fa1f f188 	uxthls.w	r1, r8
9001b16c:	4653      	mov	r3, sl
9001b16e:	468e      	mov	lr, r1
9001b170:	e7db      	b.n	9001b12a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
9001b172:	9a00      	ldr	r2, [sp, #0]
9001b174:	9b00      	ldr	r3, [sp, #0]
9001b176:	3202      	adds	r2, #2
9001b178:	785b      	ldrb	r3, [r3, #1]
9001b17a:	9200      	str	r2, [sp, #0]
9001b17c:	e7e7      	b.n	9001b14e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001b17e:	2202      	movs	r2, #2
9001b180:	9907      	ldr	r1, [sp, #28]
9001b182:	4573      	cmp	r3, lr
9001b184:	4615      	mov	r5, r2
9001b186:	9a02      	ldr	r2, [sp, #8]
9001b188:	bf24      	itt	cs
9001b18a:	eba3 0a0e 	subcs.w	sl, r3, lr
9001b18e:	46f1      	movcs	r9, lr
9001b190:	fb15 1202 	smlabb	r2, r5, r2, r1
9001b194:	9905      	ldr	r1, [sp, #20]
9001b196:	bf34      	ite	cc
9001b198:	4699      	movcc	r9, r3
9001b19a:	fa1f fa8a 	uxthcs.w	sl, sl
9001b19e:	f831 c002 	ldrh.w	ip, [r1, r2]
9001b1a2:	bf38      	it	cc
9001b1a4:	ebae 0103 	subcc.w	r1, lr, r3
9001b1a8:	9a01      	ldr	r2, [sp, #4]
9001b1aa:	bf2e      	itee	cs
9001b1ac:	4621      	movcs	r1, r4
9001b1ae:	b289      	uxthcc	r1, r1
9001b1b0:	46a2      	movcc	sl, r4
9001b1b2:	2aff      	cmp	r2, #255	; 0xff
9001b1b4:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001b1b8:	d105      	bne.n	9001b1c6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
9001b1ba:	4481      	add	r9, r0
9001b1bc:	4581      	cmp	r9, r0
9001b1be:	d045      	beq.n	9001b24c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001b1c0:	f820 cb02 	strh.w	ip, [r0], #2
9001b1c4:	e7fa      	b.n	9001b1bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
9001b1c6:	ea4f 222c 	mov.w	r2, ip, asr #8
9001b1ca:	9d03      	ldr	r5, [sp, #12]
9001b1cc:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001b1d0:	4481      	add	r9, r0
9001b1d2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001b1d6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9001b1da:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001b1de:	fa5f fc8c 	uxtb.w	ip, ip
9001b1e2:	436a      	muls	r2, r5
9001b1e4:	fb0b fb05 	mul.w	fp, fp, r5
9001b1e8:	fb0c fc05 	mul.w	ip, ip, r5
9001b1ec:	9208      	str	r2, [sp, #32]
9001b1ee:	4581      	cmp	r9, r0
9001b1f0:	d02c      	beq.n	9001b24c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001b1f2:	8802      	ldrh	r2, [r0, #0]
9001b1f4:	9d04      	ldr	r5, [sp, #16]
9001b1f6:	1216      	asrs	r6, r2, #8
9001b1f8:	9f04      	ldr	r7, [sp, #16]
9001b1fa:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001b1fe:	fb16 f605 	smulbb	r6, r6, r5
9001b202:	9d08      	ldr	r5, [sp, #32]
9001b204:	442e      	add	r6, r5
9001b206:	10d5      	asrs	r5, r2, #3
9001b208:	00d2      	lsls	r2, r2, #3
9001b20a:	b2b6      	uxth	r6, r6
9001b20c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001b210:	b2d2      	uxtb	r2, r2
9001b212:	fb15 f507 	smulbb	r5, r5, r7
9001b216:	fb12 f207 	smulbb	r2, r2, r7
9001b21a:	1c77      	adds	r7, r6, #1
9001b21c:	445d      	add	r5, fp
9001b21e:	4462      	add	r2, ip
9001b220:	eb07 2616 	add.w	r6, r7, r6, lsr #8
9001b224:	b2ad      	uxth	r5, r5
9001b226:	b292      	uxth	r2, r2
9001b228:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001b22c:	1c57      	adds	r7, r2, #1
9001b22e:	eb07 2212 	add.w	r2, r7, r2, lsr #8
9001b232:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001b236:	4316      	orrs	r6, r2
9001b238:	1c6a      	adds	r2, r5, #1
9001b23a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001b23e:	096d      	lsrs	r5, r5, #5
9001b240:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001b244:	432e      	orrs	r6, r5
9001b246:	f820 6b02 	strh.w	r6, [r0], #2
9001b24a:	e7d0      	b.n	9001b1ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
9001b24c:	4573      	cmp	r3, lr
9001b24e:	d38d      	bcc.n	9001b16c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001b250:	fa1f f188 	uxth.w	r1, r8
9001b254:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
9001b258:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001b25a:	1a64      	subs	r4, r4, r1
9001b25c:	881b      	ldrh	r3, [r3, #0]
9001b25e:	b2a4      	uxth	r4, r4
9001b260:	eba3 0308 	sub.w	r3, r3, r8
9001b264:	2c00      	cmp	r4, #0
9001b266:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001b26a:	bf18      	it	ne
9001b26c:	2100      	movne	r1, #0
9001b26e:	e77d      	b.n	9001b16c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001b270:	4b03      	ldr	r3, [pc, #12]	; (9001b280 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001b272:	6818      	ldr	r0, [r3, #0]
9001b274:	6803      	ldr	r3, [r0, #0]
9001b276:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001b278:	4798      	blx	r3
9001b27a:	b00f      	add	sp, #60	; 0x3c
9001b27c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b280:	240235ac 	.word	0x240235ac
9001b284:	240235a6 	.word	0x240235a6

9001b288 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001b288:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b28c:	b09f      	sub	sp, #124	; 0x7c
9001b28e:	461d      	mov	r5, r3
9001b290:	4604      	mov	r4, r0
9001b292:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001b294:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
9001b298:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
9001b29c:	9209      	str	r2, [sp, #36]	; 0x24
9001b29e:	2a00      	cmp	r2, #0
9001b2a0:	f000 81ed 	beq.w	9001b67e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
9001b2a4:	6828      	ldr	r0, [r5, #0]
9001b2a6:	aa1a      	add	r2, sp, #104	; 0x68
9001b2a8:	6869      	ldr	r1, [r5, #4]
9001b2aa:	c203      	stmia	r2!, {r0, r1}
9001b2ac:	6818      	ldr	r0, [r3, #0]
9001b2ae:	aa1c      	add	r2, sp, #112	; 0x70
9001b2b0:	6859      	ldr	r1, [r3, #4]
9001b2b2:	c203      	stmia	r2!, {r0, r1}
9001b2b4:	a81a      	add	r0, sp, #104	; 0x68
9001b2b6:	f7f9 fcd1 	bl	90014c5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001b2ba:	4629      	mov	r1, r5
9001b2bc:	a81c      	add	r0, sp, #112	; 0x70
9001b2be:	f7f9 fd11 	bl	90014ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001b2c2:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001b2c6:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
9001b2ca:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001b2ce:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
9001b2d2:	bfdb      	ittet	le
9001b2d4:	b29a      	uxthle	r2, r3
9001b2d6:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001b2da:	2201      	movgt	r2, #1
9001b2dc:	fb91 f2f2 	sdivle	r2, r1, r2
9001b2e0:	9202      	str	r2, [sp, #8]
9001b2e2:	9802      	ldr	r0, [sp, #8]
9001b2e4:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
9001b2e8:	9902      	ldr	r1, [sp, #8]
9001b2ea:	fb92 f0f0 	sdiv	r0, r2, r0
9001b2ee:	b280      	uxth	r0, r0
9001b2f0:	4488      	add	r8, r1
9001b2f2:	9010      	str	r0, [sp, #64]	; 0x40
9001b2f4:	f108 38ff 	add.w	r8, r8, #4294967295
9001b2f8:	9802      	ldr	r0, [sp, #8]
9001b2fa:	9d10      	ldr	r5, [sp, #64]	; 0x40
9001b2fc:	fb05 2510 	mls	r5, r5, r0, r2
9001b300:	fb98 f8f1 	sdiv	r8, r8, r1
9001b304:	fb15 f503 	smulbb	r5, r5, r3
9001b308:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
9001b30c:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
9001b310:	f108 0801 	add.w	r8, r8, #1
9001b314:	440d      	add	r5, r1
9001b316:	4419      	add	r1, r3
9001b318:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
9001b31c:	fa1f f888 	uxth.w	r8, r8
9001b320:	441a      	add	r2, r3
9001b322:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
9001b326:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
9001b32a:	b2ad      	uxth	r5, r5
9001b32c:	9304      	str	r3, [sp, #16]
9001b32e:	4b94      	ldr	r3, [pc, #592]	; (9001b580 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
9001b330:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
9001b334:	6818      	ldr	r0, [r3, #0]
9001b336:	6803      	ldr	r3, [r0, #0]
9001b338:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001b33a:	4798      	blx	r3
9001b33c:	4b91      	ldr	r3, [pc, #580]	; (9001b584 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001b33e:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
9001b342:	2d00      	cmp	r5, #0
9001b344:	881a      	ldrh	r2, [r3, #0]
9001b346:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
9001b34a:	fb02 f606 	mul.w	r6, r2, r6
9001b34e:	fb02 7101 	mla	r1, r2, r1, r7
9001b352:	9318      	str	r3, [sp, #96]	; 0x60
9001b354:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001b358:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
9001b35c:	f04f 0100 	mov.w	r1, #0
9001b360:	eb00 0246 	add.w	r2, r0, r6, lsl #1
9001b364:	930f      	str	r3, [sp, #60]	; 0x3c
9001b366:	4b88      	ldr	r3, [pc, #544]	; (9001b588 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
9001b368:	920a      	str	r2, [sp, #40]	; 0x28
9001b36a:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001b36c:	eba3 0304 	sub.w	r3, r3, r4
9001b370:	910d      	str	r1, [sp, #52]	; 0x34
9001b372:	eb02 0888 	add.w	r8, r2, r8, lsl #2
9001b376:	9319      	str	r3, [sp, #100]	; 0x64
9001b378:	f108 0204 	add.w	r2, r8, #4
9001b37c:	9211      	str	r2, [sp, #68]	; 0x44
9001b37e:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001b380:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
9001b384:	9215      	str	r2, [sp, #84]	; 0x54
9001b386:	9a04      	ldr	r2, [sp, #16]
9001b388:	bf18      	it	ne
9001b38a:	2200      	movne	r2, #0
9001b38c:	b292      	uxth	r2, r2
9001b38e:	9910      	ldr	r1, [sp, #64]	; 0x40
9001b390:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001b392:	fa11 f383 	uxtah	r3, r1, r3
9001b396:	9914      	ldr	r1, [sp, #80]	; 0x50
9001b398:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001b39c:	3304      	adds	r3, #4
9001b39e:	9306      	str	r3, [sp, #24]
9001b3a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001b3a2:	4283      	cmp	r3, r0
9001b3a4:	f240 8166 	bls.w	9001b674 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
9001b3a8:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
9001b3ac:	f04f 0a01 	mov.w	sl, #1
9001b3b0:	9902      	ldr	r1, [sp, #8]
9001b3b2:	9e06      	ldr	r6, [sp, #24]
9001b3b4:	46d3      	mov	fp, sl
9001b3b6:	4657      	mov	r7, sl
9001b3b8:	7836      	ldrb	r6, [r6, #0]
9001b3ba:	fbb5 f3f3 	udiv	r3, r5, r3
9001b3be:	1acb      	subs	r3, r1, r3
9001b3c0:	9612      	str	r6, [sp, #72]	; 0x48
9001b3c2:	3601      	adds	r6, #1
9001b3c4:	b29b      	uxth	r3, r3
9001b3c6:	9605      	str	r6, [sp, #20]
9001b3c8:	9316      	str	r3, [sp, #88]	; 0x58
9001b3ca:	9b06      	ldr	r3, [sp, #24]
9001b3cc:	7859      	ldrb	r1, [r3, #1]
9001b3ce:	789b      	ldrb	r3, [r3, #2]
9001b3d0:	021b      	lsls	r3, r3, #8
9001b3d2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9001b3d6:	9906      	ldr	r1, [sp, #24]
9001b3d8:	78c9      	ldrb	r1, [r1, #3]
9001b3da:	430b      	orrs	r3, r1
9001b3dc:	9913      	ldr	r1, [sp, #76]	; 0x4c
9001b3de:	4419      	add	r1, r3
9001b3e0:	1c4e      	adds	r6, r1, #1
9001b3e2:	7849      	ldrb	r1, [r1, #1]
9001b3e4:	9603      	str	r6, [sp, #12]
9001b3e6:	0209      	lsls	r1, r1, #8
9001b3e8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001b3ea:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
9001b3ee:	5cf3      	ldrb	r3, [r6, r3]
9001b3f0:	4319      	orrs	r1, r3
9001b3f2:	b28b      	uxth	r3, r1
9001b3f4:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
9001b3f8:	930c      	str	r3, [sp, #48]	; 0x30
9001b3fa:	2300      	movs	r3, #0
9001b3fc:	9307      	str	r3, [sp, #28]
9001b3fe:	469c      	mov	ip, r3
9001b400:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9001b404:	930e      	str	r3, [sp, #56]	; 0x38
9001b406:	2d00      	cmp	r5, #0
9001b408:	d07e      	beq.n	9001b508 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
9001b40a:	42af      	cmp	r7, r5
9001b40c:	d26e      	bcs.n	9001b4ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
9001b40e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001b410:	1bed      	subs	r5, r5, r7
9001b412:	9201      	str	r2, [sp, #4]
9001b414:	4283      	cmp	r3, r0
9001b416:	b2ad      	uxth	r5, r5
9001b418:	d802      	bhi.n	9001b420 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
9001b41a:	e073      	b.n	9001b504 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
9001b41c:	2b00      	cmp	r3, #0
9001b41e:	d15f      	bne.n	9001b4e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
9001b420:	9b03      	ldr	r3, [sp, #12]
9001b422:	f1cb 0207 	rsb	r2, fp, #7
9001b426:	785b      	ldrb	r3, [r3, #1]
9001b428:	4093      	lsls	r3, r2
9001b42a:	005b      	lsls	r3, r3, #1
9001b42c:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001b430:	9b03      	ldr	r3, [sp, #12]
9001b432:	781b      	ldrb	r3, [r3, #0]
9001b434:	fa43 f30b 	asr.w	r3, r3, fp
9001b438:	b2db      	uxtb	r3, r3
9001b43a:	4313      	orrs	r3, r2
9001b43c:	f10b 0201 	add.w	r2, fp, #1
9001b440:	fa5f fb82 	uxtb.w	fp, r2
9001b444:	9a03      	ldr	r2, [sp, #12]
9001b446:	b29f      	uxth	r7, r3
9001b448:	f1bb 0f08 	cmp.w	fp, #8
9001b44c:	bf13      	iteet	ne
9001b44e:	3201      	addne	r2, #1
9001b450:	3202      	addeq	r2, #2
9001b452:	f04f 0b00 	moveq.w	fp, #0
9001b456:	9203      	strne	r2, [sp, #12]
9001b458:	bf08      	it	eq
9001b45a:	9203      	streq	r2, [sp, #12]
9001b45c:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001b45e:	42ba      	cmp	r2, r7
9001b460:	d309      	bcc.n	9001b476 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
9001b462:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
9001b466:	2301      	movs	r3, #1
9001b468:	9a05      	ldr	r2, [sp, #20]
9001b46a:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
9001b46e:	d30e      	bcc.n	9001b48e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9001b470:	469a      	mov	sl, r3
9001b472:	2600      	movs	r6, #0
9001b474:	e035      	b.n	9001b4e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
9001b476:	9b05      	ldr	r3, [sp, #20]
9001b478:	429f      	cmp	r7, r3
9001b47a:	d318      	bcc.n	9001b4ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
9001b47c:	eb04 030a 	add.w	r3, r4, sl
9001b480:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
9001b484:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
9001b488:	f10a 0301 	add.w	r3, sl, #1
9001b48c:	b29b      	uxth	r3, r3
9001b48e:	9a05      	ldr	r2, [sp, #20]
9001b490:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
9001b494:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001b498:	990c      	ldr	r1, [sp, #48]	; 0x30
9001b49a:	7116      	strb	r6, [r2, #4]
9001b49c:	f10a 0601 	add.w	r6, sl, #1
9001b4a0:	80d1      	strh	r1, [r2, #6]
9001b4a2:	7156      	strb	r6, [r2, #5]
9001b4a4:	9a05      	ldr	r2, [sp, #20]
9001b4a6:	3201      	adds	r2, #1
9001b4a8:	b292      	uxth	r2, r2
9001b4aa:	9205      	str	r2, [sp, #20]
9001b4ac:	e7e0      	b.n	9001b470 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
9001b4ae:	eb04 0387 	add.w	r3, r4, r7, lsl #2
9001b4b2:	463a      	mov	r2, r7
9001b4b4:	795b      	ldrb	r3, [r3, #5]
9001b4b6:	f603 0604 	addw	r6, r3, #2052	; 0x804
9001b4ba:	4426      	add	r6, r4
9001b4bc:	9919      	ldr	r1, [sp, #100]	; 0x64
9001b4be:	eb01 0c06 	add.w	ip, r1, r6
9001b4c2:	f1bc 0f00 	cmp.w	ip, #0
9001b4c6:	dd07      	ble.n	9001b4d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
9001b4c8:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001b4cc:	f892 c004 	ldrb.w	ip, [r2, #4]
9001b4d0:	f806 cd01 	strb.w	ip, [r6, #-1]!
9001b4d4:	88d2      	ldrh	r2, [r2, #6]
9001b4d6:	e7f1      	b.n	9001b4bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
9001b4d8:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
9001b4dc:	b29b      	uxth	r3, r3
9001b4de:	e7c3      	b.n	9001b468 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
9001b4e0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
9001b4e2:	970c      	str	r7, [sp, #48]	; 0x30
9001b4e4:	46b4      	mov	ip, r6
9001b4e6:	9a01      	ldr	r2, [sp, #4]
9001b4e8:	461f      	mov	r7, r3
9001b4ea:	e78c      	b.n	9001b406 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
9001b4ec:	1b7b      	subs	r3, r7, r5
9001b4ee:	eb0c 0605 	add.w	r6, ip, r5
9001b4f2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001b4f6:	b29b      	uxth	r3, r3
9001b4f8:	b2b6      	uxth	r6, r6
9001b4fa:	9201      	str	r2, [sp, #4]
9001b4fc:	2500      	movs	r5, #0
9001b4fe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001b500:	4282      	cmp	r2, r0
9001b502:	d88b      	bhi.n	9001b41c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
9001b504:	9a01      	ldr	r2, [sp, #4]
9001b506:	e74b      	b.n	9001b3a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
9001b508:	4297      	cmp	r7, r2
9001b50a:	d332      	bcc.n	9001b572 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
9001b50c:	1abb      	subs	r3, r7, r2
9001b50e:	9208      	str	r2, [sp, #32]
9001b510:	9501      	str	r5, [sp, #4]
9001b512:	b29b      	uxth	r3, r3
9001b514:	9909      	ldr	r1, [sp, #36]	; 0x24
9001b516:	29ff      	cmp	r1, #255	; 0xff
9001b518:	9908      	ldr	r1, [sp, #32]
9001b51a:	eb0c 0601 	add.w	r6, ip, r1
9001b51e:	d135      	bne.n	9001b58c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
9001b520:	f1a0 0e02 	sub.w	lr, r0, #2
9001b524:	b2b6      	uxth	r6, r6
9001b526:	45b4      	cmp	ip, r6
9001b528:	f040 808c 	bne.w	9001b644 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
9001b52c:	9908      	ldr	r1, [sp, #32]
9001b52e:	4297      	cmp	r7, r2
9001b530:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001b534:	d3e2      	bcc.n	9001b4fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
9001b536:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001b538:	9904      	ldr	r1, [sp, #16]
9001b53a:	8812      	ldrh	r2, [r2, #0]
9001b53c:	1a52      	subs	r2, r2, r1
9001b53e:	9916      	ldr	r1, [sp, #88]	; 0x58
9001b540:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001b544:	9a07      	ldr	r2, [sp, #28]
9001b546:	3201      	adds	r2, #1
9001b548:	428a      	cmp	r2, r1
9001b54a:	9207      	str	r2, [sp, #28]
9001b54c:	f040 8087 	bne.w	9001b65e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
9001b550:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
9001b554:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
9001b558:	9b04      	ldr	r3, [sp, #16]
9001b55a:	1bed      	subs	r5, r5, r7
9001b55c:	b2ad      	uxth	r5, r5
9001b55e:	2d00      	cmp	r5, #0
9001b560:	bf08      	it	eq
9001b562:	461a      	moveq	r2, r3
9001b564:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001b566:	bf18      	it	ne
9001b568:	2200      	movne	r2, #0
9001b56a:	3301      	adds	r3, #1
9001b56c:	b292      	uxth	r2, r2
9001b56e:	930d      	str	r3, [sp, #52]	; 0x34
9001b570:	e70d      	b.n	9001b38e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
9001b572:	1bd1      	subs	r1, r2, r7
9001b574:	9708      	str	r7, [sp, #32]
9001b576:	b28b      	uxth	r3, r1
9001b578:	9301      	str	r3, [sp, #4]
9001b57a:	462b      	mov	r3, r5
9001b57c:	e7ca      	b.n	9001b514 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
9001b57e:	bf00      	nop
9001b580:	240235ac 	.word	0x240235ac
9001b584:	240235a6 	.word	0x240235a6
9001b588:	fffff7fb 	.word	0xfffff7fb
9001b58c:	b2b6      	uxth	r6, r6
9001b58e:	900b      	str	r0, [sp, #44]	; 0x2c
9001b590:	45b4      	cmp	ip, r6
9001b592:	d0cb      	beq.n	9001b52c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
9001b594:	f10c 0101 	add.w	r1, ip, #1
9001b598:	44a4      	add	ip, r4
9001b59a:	9117      	str	r1, [sp, #92]	; 0x5c
9001b59c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
9001b5a0:	9911      	ldr	r1, [sp, #68]	; 0x44
9001b5a2:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001b5a6:	990b      	ldr	r1, [sp, #44]	; 0x2c
9001b5a8:	ea4f 2825 	mov.w	r8, r5, asr #8
9001b5ac:	f8b1 c000 	ldrh.w	ip, [r1]
9001b5b0:	990e      	ldr	r1, [sp, #56]	; 0x38
9001b5b2:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
9001b5b6:	ea4f 2e2c 	mov.w	lr, ip, asr #8
9001b5ba:	ea4f 09ec 	mov.w	r9, ip, asr #3
9001b5be:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001b5c2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001b5c6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001b5ca:	fb1e fe01 	smulbb	lr, lr, r1
9001b5ce:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001b5d0:	fa5f fc8c 	uxtb.w	ip, ip
9001b5d4:	fb08 e801 	mla	r8, r8, r1, lr
9001b5d8:	ea4f 0ee5 	mov.w	lr, r5, asr #3
9001b5dc:	990e      	ldr	r1, [sp, #56]	; 0x38
9001b5de:	00ed      	lsls	r5, r5, #3
9001b5e0:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
9001b5e4:	fa1f f888 	uxth.w	r8, r8
9001b5e8:	fb19 f901 	smulbb	r9, r9, r1
9001b5ec:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001b5ee:	b2ed      	uxtb	r5, r5
9001b5f0:	fb0e 9e01 	mla	lr, lr, r1, r9
9001b5f4:	990e      	ldr	r1, [sp, #56]	; 0x38
9001b5f6:	fb1c fc01 	smulbb	ip, ip, r1
9001b5fa:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001b5fc:	fa1f fe8e 	uxth.w	lr, lr
9001b600:	fb05 c501 	mla	r5, r5, r1, ip
9001b604:	f108 0c01 	add.w	ip, r8, #1
9001b608:	f10e 0901 	add.w	r9, lr, #1
9001b60c:	990b      	ldr	r1, [sp, #44]	; 0x2c
9001b60e:	b2ad      	uxth	r5, r5
9001b610:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
9001b614:	f105 0c01 	add.w	ip, r5, #1
9001b618:	eb09 291e 	add.w	r9, r9, lr, lsr #8
9001b61c:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
9001b620:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001b624:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001b628:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001b62c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001b630:	ea4c 0808 	orr.w	r8, ip, r8
9001b634:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
9001b638:	ea48 0809 	orr.w	r8, r8, r9
9001b63c:	f821 8b02 	strh.w	r8, [r1], #2
9001b640:	910b      	str	r1, [sp, #44]	; 0x2c
9001b642:	e7a5      	b.n	9001b590 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
9001b644:	f10c 0801 	add.w	r8, ip, #1
9001b648:	44a4      	add	ip, r4
9001b64a:	9911      	ldr	r1, [sp, #68]	; 0x44
9001b64c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
9001b650:	fa1f fc88 	uxth.w	ip, r8
9001b654:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001b658:	f82e 5f02 	strh.w	r5, [lr, #2]!
9001b65c:	e763      	b.n	9001b526 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
9001b65e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001b662:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
9001b666:	1aad      	subs	r5, r5, r2
9001b668:	b2ad      	uxth	r5, r5
9001b66a:	2d00      	cmp	r5, #0
9001b66c:	bf18      	it	ne
9001b66e:	2200      	movne	r2, #0
9001b670:	9201      	str	r2, [sp, #4]
9001b672:	e744      	b.n	9001b4fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
9001b674:	4b03      	ldr	r3, [pc, #12]	; (9001b684 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
9001b676:	6818      	ldr	r0, [r3, #0]
9001b678:	6803      	ldr	r3, [r0, #0]
9001b67a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001b67c:	4798      	blx	r3
9001b67e:	b01f      	add	sp, #124	; 0x7c
9001b680:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b684:	240235ac 	.word	0x240235ac

9001b688 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001b688:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b68c:	b08f      	sub	sp, #60	; 0x3c
9001b68e:	461c      	mov	r4, r3
9001b690:	460f      	mov	r7, r1
9001b692:	9203      	str	r2, [sp, #12]
9001b694:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001b698:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001b69a:	9202      	str	r2, [sp, #8]
9001b69c:	2a00      	cmp	r2, #0
9001b69e:	f000 8128 	beq.w	9001b8f2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
9001b6a2:	6820      	ldr	r0, [r4, #0]
9001b6a4:	aa0a      	add	r2, sp, #40	; 0x28
9001b6a6:	6861      	ldr	r1, [r4, #4]
9001b6a8:	c203      	stmia	r2!, {r0, r1}
9001b6aa:	6818      	ldr	r0, [r3, #0]
9001b6ac:	aa0c      	add	r2, sp, #48	; 0x30
9001b6ae:	6859      	ldr	r1, [r3, #4]
9001b6b0:	c203      	stmia	r2!, {r0, r1}
9001b6b2:	a80a      	add	r0, sp, #40	; 0x28
9001b6b4:	f7f9 fad2 	bl	90014c5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001b6b8:	4621      	mov	r1, r4
9001b6ba:	a80c      	add	r0, sp, #48	; 0x30
9001b6bc:	f7f9 fb12 	bl	90014ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001b6c0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001b6c4:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
9001b6c8:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001b6cc:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
9001b6d0:	bfdb      	ittet	le
9001b6d2:	b2b3      	uxthle	r3, r6
9001b6d4:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001b6d8:	2301      	movgt	r3, #1
9001b6da:	fb92 f3f3 	sdivle	r3, r2, r3
9001b6de:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001b6e2:	441d      	add	r5, r3
9001b6e4:	fb92 f1f3 	sdiv	r1, r2, r3
9001b6e8:	fa1f fc81 	uxth.w	ip, r1
9001b6ec:	3d01      	subs	r5, #1
9001b6ee:	fb0c 2413 	mls	r4, ip, r3, r2
9001b6f2:	4661      	mov	r1, ip
9001b6f4:	fb14 f406 	smulbb	r4, r4, r6
9001b6f8:	4404      	add	r4, r0
9001b6fa:	fb95 f5f3 	sdiv	r5, r5, r3
9001b6fe:	b2a4      	uxth	r4, r4
9001b700:	b121      	cbz	r1, 9001b70c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
9001b702:	9b03      	ldr	r3, [sp, #12]
9001b704:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001b708:	ba1b      	rev	r3, r3
9001b70a:	441f      	add	r7, r3
9001b70c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001b710:	b2ad      	uxth	r5, r5
9001b712:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
9001b716:	4418      	add	r0, r3
9001b718:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001b71c:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001b720:	00ad      	lsls	r5, r5, #2
9001b722:	441a      	add	r2, r3
9001b724:	4b74      	ldr	r3, [pc, #464]	; (9001b8f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001b726:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
9001b72a:	6818      	ldr	r0, [r3, #0]
9001b72c:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
9001b730:	6803      	ldr	r3, [r0, #0]
9001b732:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001b734:	4798      	blx	r3
9001b736:	4a71      	ldr	r2, [pc, #452]	; (9001b8fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
9001b738:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
9001b73c:	2c00      	cmp	r4, #0
9001b73e:	8813      	ldrh	r3, [r2, #0]
9001b740:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
9001b744:	bf0c      	ite	eq
9001b746:	46c8      	moveq	r8, r9
9001b748:	f04f 0800 	movne.w	r8, #0
9001b74c:	9209      	str	r2, [sp, #36]	; 0x24
9001b74e:	fb03 c101 	mla	r1, r3, r1, ip
9001b752:	4373      	muls	r3, r6
9001b754:	fa1f f888 	uxth.w	r8, r8
9001b758:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001b75c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001b760:	9304      	str	r3, [sp, #16]
9001b762:	1d2b      	adds	r3, r5, #4
9001b764:	9305      	str	r3, [sp, #20]
9001b766:	2300      	movs	r3, #0
9001b768:	9301      	str	r3, [sp, #4]
9001b76a:	9a04      	ldr	r2, [sp, #16]
9001b76c:	4282      	cmp	r2, r0
9001b76e:	f240 80bb 	bls.w	9001b8e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
9001b772:	b95b      	cbnz	r3, 9001b78c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
9001b774:	783a      	ldrb	r2, [r7, #0]
9001b776:	0993      	lsrs	r3, r2, #6
9001b778:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001b77c:	9201      	str	r2, [sp, #4]
9001b77e:	1e5a      	subs	r2, r3, #1
9001b780:	2a02      	cmp	r2, #2
9001b782:	bf8d      	iteet	hi
9001b784:	787b      	ldrbhi	r3, [r7, #1]
9001b786:	3701      	addls	r7, #1
9001b788:	b29b      	uxthls	r3, r3
9001b78a:	3702      	addhi	r7, #2
9001b78c:	b184      	cbz	r4, 9001b7b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
9001b78e:	429c      	cmp	r4, r3
9001b790:	bf91      	iteee	ls
9001b792:	1b1c      	subls	r4, r3, r4
9001b794:	1ae4      	subhi	r4, r4, r3
9001b796:	46c4      	movhi	ip, r8
9001b798:	f04f 0a00 	movhi.w	sl, #0
9001b79c:	bf9b      	ittet	ls
9001b79e:	fa1f fa84 	uxthls.w	sl, r4
9001b7a2:	2400      	movls	r4, #0
9001b7a4:	b2a4      	uxthhi	r4, r4
9001b7a6:	fa1f fc89 	uxthls.w	ip, r9
9001b7aa:	4653      	mov	r3, sl
9001b7ac:	46e0      	mov	r8, ip
9001b7ae:	e7dc      	b.n	9001b76a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
9001b7b0:	2204      	movs	r2, #4
9001b7b2:	9905      	ldr	r1, [sp, #20]
9001b7b4:	4543      	cmp	r3, r8
9001b7b6:	4615      	mov	r5, r2
9001b7b8:	9a01      	ldr	r2, [sp, #4]
9001b7ba:	bf24      	itt	cs
9001b7bc:	eba3 0a08 	subcs.w	sl, r3, r8
9001b7c0:	46c6      	movcs	lr, r8
9001b7c2:	fb15 1202 	smlabb	r2, r5, r2, r1
9001b7c6:	9903      	ldr	r1, [sp, #12]
9001b7c8:	bf3c      	itt	cc
9001b7ca:	eba8 0c03 	subcc.w	ip, r8, r3
9001b7ce:	469e      	movcc	lr, r3
9001b7d0:	588a      	ldr	r2, [r1, r2]
9001b7d2:	bf26      	itte	cs
9001b7d4:	fa1f fa8a 	uxthcs.w	sl, sl
9001b7d8:	46a4      	movcs	ip, r4
9001b7da:	fa1f fc8c 	uxthcc.w	ip, ip
9001b7de:	ea4f 6112 	mov.w	r1, r2, lsr #24
9001b7e2:	bf38      	it	cc
9001b7e4:	46a2      	movcc	sl, r4
9001b7e6:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
9001b7ea:	2900      	cmp	r1, #0
9001b7ec:	d066      	beq.n	9001b8bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
9001b7ee:	29ff      	cmp	r1, #255	; 0xff
9001b7f0:	ea4f 2612 	mov.w	r6, r2, lsr #8
9001b7f4:	d114      	bne.n	9001b820 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001b7f6:	9d02      	ldr	r5, [sp, #8]
9001b7f8:	2dff      	cmp	r5, #255	; 0xff
9001b7fa:	d111      	bne.n	9001b820 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001b7fc:	0951      	lsrs	r1, r2, #5
9001b7fe:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001b802:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001b806:	4486      	add	lr, r0
9001b808:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001b80c:	f026 0607 	bic.w	r6, r6, #7
9001b810:	430e      	orrs	r6, r1
9001b812:	4316      	orrs	r6, r2
9001b814:	b2b6      	uxth	r6, r6
9001b816:	4586      	cmp	lr, r0
9001b818:	d051      	beq.n	9001b8be <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001b81a:	f820 6b02 	strh.w	r6, [r0], #2
9001b81e:	e7fa      	b.n	9001b816 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
9001b820:	9d02      	ldr	r5, [sp, #8]
9001b822:	b2f6      	uxtb	r6, r6
9001b824:	4486      	add	lr, r0
9001b826:	4369      	muls	r1, r5
9001b828:	1c4d      	adds	r5, r1, #1
9001b82a:	eb05 2521 	add.w	r5, r5, r1, asr #8
9001b82e:	f3c2 4107 	ubfx	r1, r2, #16, #8
9001b832:	b2d2      	uxtb	r2, r2
9001b834:	122d      	asrs	r5, r5, #8
9001b836:	ea6f 0b05 	mvn.w	fp, r5
9001b83a:	b2ad      	uxth	r5, r5
9001b83c:	fb11 f105 	smulbb	r1, r1, r5
9001b840:	fa5f fb8b 	uxtb.w	fp, fp
9001b844:	fb16 f605 	smulbb	r6, r6, r5
9001b848:	fb12 f205 	smulbb	r2, r2, r5
9001b84c:	b289      	uxth	r1, r1
9001b84e:	b2b6      	uxth	r6, r6
9001b850:	b292      	uxth	r2, r2
9001b852:	9106      	str	r1, [sp, #24]
9001b854:	9607      	str	r6, [sp, #28]
9001b856:	9208      	str	r2, [sp, #32]
9001b858:	4586      	cmp	lr, r0
9001b85a:	d030      	beq.n	9001b8be <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001b85c:	8802      	ldrh	r2, [r0, #0]
9001b85e:	9906      	ldr	r1, [sp, #24]
9001b860:	1216      	asrs	r6, r2, #8
9001b862:	10d5      	asrs	r5, r2, #3
9001b864:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001b868:	00d2      	lsls	r2, r2, #3
9001b86a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001b86e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001b872:	b2d2      	uxtb	r2, r2
9001b874:	fb06 160b 	mla	r6, r6, fp, r1
9001b878:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001b87c:	9907      	ldr	r1, [sp, #28]
9001b87e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001b882:	b2b6      	uxth	r6, r6
9001b884:	fb05 150b 	mla	r5, r5, fp, r1
9001b888:	9908      	ldr	r1, [sp, #32]
9001b88a:	fb02 120b 	mla	r2, r2, fp, r1
9001b88e:	1c71      	adds	r1, r6, #1
9001b890:	b2ad      	uxth	r5, r5
9001b892:	b292      	uxth	r2, r2
9001b894:	eb01 2616 	add.w	r6, r1, r6, lsr #8
9001b898:	1c51      	adds	r1, r2, #1
9001b89a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001b89e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001b8a2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001b8a6:	4316      	orrs	r6, r2
9001b8a8:	1c6a      	adds	r2, r5, #1
9001b8aa:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001b8ae:	096d      	lsrs	r5, r5, #5
9001b8b0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001b8b4:	432e      	orrs	r6, r5
9001b8b6:	f820 6b02 	strh.w	r6, [r0], #2
9001b8ba:	e7cd      	b.n	9001b858 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
9001b8bc:	4470      	add	r0, lr
9001b8be:	4543      	cmp	r3, r8
9001b8c0:	f4ff af73 	bcc.w	9001b7aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001b8c4:	fa1f fc89 	uxth.w	ip, r9
9001b8c8:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
9001b8cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001b8ce:	eba4 040c 	sub.w	r4, r4, ip
9001b8d2:	881b      	ldrh	r3, [r3, #0]
9001b8d4:	b2a4      	uxth	r4, r4
9001b8d6:	eba3 0309 	sub.w	r3, r3, r9
9001b8da:	2c00      	cmp	r4, #0
9001b8dc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001b8e0:	bf18      	it	ne
9001b8e2:	f04f 0c00 	movne.w	ip, #0
9001b8e6:	e760      	b.n	9001b7aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001b8e8:	4b03      	ldr	r3, [pc, #12]	; (9001b8f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001b8ea:	6818      	ldr	r0, [r3, #0]
9001b8ec:	6803      	ldr	r3, [r0, #0]
9001b8ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001b8f0:	4798      	blx	r3
9001b8f2:	b00f      	add	sp, #60	; 0x3c
9001b8f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b8f8:	240235ac 	.word	0x240235ac
9001b8fc:	240235a6 	.word	0x240235a6

9001b900 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001b900:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b904:	b093      	sub	sp, #76	; 0x4c
9001b906:	461c      	mov	r4, r3
9001b908:	9205      	str	r2, [sp, #20]
9001b90a:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
9001b90e:	9101      	str	r1, [sp, #4]
9001b910:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001b912:	9202      	str	r2, [sp, #8]
9001b914:	2a00      	cmp	r2, #0
9001b916:	f000 812e 	beq.w	9001bb76 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
9001b91a:	6820      	ldr	r0, [r4, #0]
9001b91c:	aa0e      	add	r2, sp, #56	; 0x38
9001b91e:	6861      	ldr	r1, [r4, #4]
9001b920:	c203      	stmia	r2!, {r0, r1}
9001b922:	6818      	ldr	r0, [r3, #0]
9001b924:	aa10      	add	r2, sp, #64	; 0x40
9001b926:	6859      	ldr	r1, [r3, #4]
9001b928:	c203      	stmia	r2!, {r0, r1}
9001b92a:	a80e      	add	r0, sp, #56	; 0x38
9001b92c:	f7f9 f996 	bl	90014c5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001b930:	4621      	mov	r1, r4
9001b932:	a810      	add	r0, sp, #64	; 0x40
9001b934:	f7f9 f9d6 	bl	90014ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001b938:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
9001b93c:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
9001b940:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001b944:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
9001b948:	bfdb      	ittet	le
9001b94a:	b2b3      	uxthle	r3, r6
9001b94c:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001b950:	2301      	movgt	r3, #1
9001b952:	fb92 f3f3 	sdivle	r3, r2, r3
9001b956:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001b95a:	441d      	add	r5, r3
9001b95c:	fb92 f1f3 	sdiv	r1, r2, r3
9001b960:	fa1f fc81 	uxth.w	ip, r1
9001b964:	3d01      	subs	r5, #1
9001b966:	fb0c 2413 	mls	r4, ip, r3, r2
9001b96a:	4661      	mov	r1, ip
9001b96c:	fb14 f406 	smulbb	r4, r4, r6
9001b970:	4404      	add	r4, r0
9001b972:	fb95 f5f3 	sdiv	r5, r5, r3
9001b976:	b2a4      	uxth	r4, r4
9001b978:	b131      	cbz	r1, 9001b988 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
9001b97a:	9b05      	ldr	r3, [sp, #20]
9001b97c:	9901      	ldr	r1, [sp, #4]
9001b97e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001b982:	ba1b      	rev	r3, r3
9001b984:	4419      	add	r1, r3
9001b986:	9101      	str	r1, [sp, #4]
9001b988:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
9001b98c:	b2ad      	uxth	r5, r5
9001b98e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
9001b992:	4418      	add	r0, r3
9001b994:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
9001b998:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
9001b99c:	00ad      	lsls	r5, r5, #2
9001b99e:	441a      	add	r2, r3
9001b9a0:	4b76      	ldr	r3, [pc, #472]	; (9001bb7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001b9a2:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
9001b9a6:	6818      	ldr	r0, [r3, #0]
9001b9a8:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
9001b9ac:	6803      	ldr	r3, [r0, #0]
9001b9ae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001b9b0:	4798      	blx	r3
9001b9b2:	4973      	ldr	r1, [pc, #460]	; (9001bb80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
9001b9b4:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
9001b9b8:	2c00      	cmp	r4, #0
9001b9ba:	880b      	ldrh	r3, [r1, #0]
9001b9bc:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001b9c0:	910d      	str	r1, [sp, #52]	; 0x34
9001b9c2:	fb03 c202 	mla	r2, r3, r2, ip
9001b9c6:	bf08      	it	eq
9001b9c8:	46dc      	moveq	ip, fp
9001b9ca:	fb03 f306 	mul.w	r3, r3, r6
9001b9ce:	bf18      	it	ne
9001b9d0:	f04f 0c00 	movne.w	ip, #0
9001b9d4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001b9d8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001b9dc:	fa1f fc8c 	uxth.w	ip, ip
9001b9e0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001b9e4:	9106      	str	r1, [sp, #24]
9001b9e6:	9308      	str	r3, [sp, #32]
9001b9e8:	1d2b      	adds	r3, r5, #4
9001b9ea:	9309      	str	r3, [sp, #36]	; 0x24
9001b9ec:	9b02      	ldr	r3, [sp, #8]
9001b9ee:	43da      	mvns	r2, r3
9001b9f0:	2300      	movs	r3, #0
9001b9f2:	b2d2      	uxtb	r2, r2
9001b9f4:	9303      	str	r3, [sp, #12]
9001b9f6:	9207      	str	r2, [sp, #28]
9001b9f8:	9a08      	ldr	r2, [sp, #32]
9001b9fa:	4282      	cmp	r2, r0
9001b9fc:	f240 80b6 	bls.w	9001bb6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
9001ba00:	b963      	cbnz	r3, 9001ba1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001ba02:	9b01      	ldr	r3, [sp, #4]
9001ba04:	781a      	ldrb	r2, [r3, #0]
9001ba06:	0993      	lsrs	r3, r2, #6
9001ba08:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001ba0c:	9203      	str	r2, [sp, #12]
9001ba0e:	1e5a      	subs	r2, r3, #1
9001ba10:	2a02      	cmp	r2, #2
9001ba12:	d815      	bhi.n	9001ba40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
9001ba14:	9a01      	ldr	r2, [sp, #4]
9001ba16:	b29b      	uxth	r3, r3
9001ba18:	3201      	adds	r2, #1
9001ba1a:	9201      	str	r2, [sp, #4]
9001ba1c:	b1b4      	cbz	r4, 9001ba4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
9001ba1e:	429c      	cmp	r4, r3
9001ba20:	bf91      	iteee	ls
9001ba22:	1b1c      	subls	r4, r3, r4
9001ba24:	1ae4      	subhi	r4, r4, r3
9001ba26:	4666      	movhi	r6, ip
9001ba28:	f04f 0800 	movhi.w	r8, #0
9001ba2c:	bf9b      	ittet	ls
9001ba2e:	fa1f f884 	uxthls.w	r8, r4
9001ba32:	2400      	movls	r4, #0
9001ba34:	b2a4      	uxthhi	r4, r4
9001ba36:	fa1f f68b 	uxthls.w	r6, fp
9001ba3a:	4643      	mov	r3, r8
9001ba3c:	46b4      	mov	ip, r6
9001ba3e:	e7db      	b.n	9001b9f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
9001ba40:	9a01      	ldr	r2, [sp, #4]
9001ba42:	9b01      	ldr	r3, [sp, #4]
9001ba44:	3202      	adds	r2, #2
9001ba46:	785b      	ldrb	r3, [r3, #1]
9001ba48:	9201      	str	r2, [sp, #4]
9001ba4a:	e7e7      	b.n	9001ba1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001ba4c:	2203      	movs	r2, #3
9001ba4e:	9909      	ldr	r1, [sp, #36]	; 0x24
9001ba50:	4563      	cmp	r3, ip
9001ba52:	4615      	mov	r5, r2
9001ba54:	9a03      	ldr	r2, [sp, #12]
9001ba56:	bf2c      	ite	cs
9001ba58:	eba3 080c 	subcs.w	r8, r3, ip
9001ba5c:	ebac 0603 	subcc.w	r6, ip, r3
9001ba60:	fb15 1202 	smlabb	r2, r5, r2, r1
9001ba64:	9905      	ldr	r1, [sp, #20]
9001ba66:	bf24      	itt	cs
9001ba68:	fa1f f888 	uxthcs.w	r8, r8
9001ba6c:	46e1      	movcs	r9, ip
9001ba6e:	eb01 0502 	add.w	r5, r1, r2
9001ba72:	9902      	ldr	r1, [sp, #8]
9001ba74:	bf2f      	iteee	cs
9001ba76:	4626      	movcs	r6, r4
9001ba78:	b2b6      	uxthcc	r6, r6
9001ba7a:	4699      	movcc	r9, r3
9001ba7c:	46a0      	movcc	r8, r4
9001ba7e:	29ff      	cmp	r1, #255	; 0xff
9001ba80:	d04a      	beq.n	9001bb18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
9001ba82:	9f06      	ldr	r7, [sp, #24]
9001ba84:	46ca      	mov	sl, r9
9001ba86:	78a9      	ldrb	r1, [r5, #2]
9001ba88:	9004      	str	r0, [sp, #16]
9001ba8a:	4379      	muls	r1, r7
9001ba8c:	910a      	str	r1, [sp, #40]	; 0x28
9001ba8e:	7869      	ldrb	r1, [r5, #1]
9001ba90:	4379      	muls	r1, r7
9001ba92:	910b      	str	r1, [sp, #44]	; 0x2c
9001ba94:	9905      	ldr	r1, [sp, #20]
9001ba96:	5c8a      	ldrb	r2, [r1, r2]
9001ba98:	437a      	muls	r2, r7
9001ba9a:	920c      	str	r2, [sp, #48]	; 0x30
9001ba9c:	f1ba 0f00 	cmp.w	sl, #0
9001baa0:	d03d      	beq.n	9001bb1e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
9001baa2:	9a04      	ldr	r2, [sp, #16]
9001baa4:	f10a 3aff 	add.w	sl, sl, #4294967295
9001baa8:	9f07      	ldr	r7, [sp, #28]
9001baaa:	8812      	ldrh	r2, [r2, #0]
9001baac:	fa1f fa8a 	uxth.w	sl, sl
9001bab0:	46be      	mov	lr, r7
9001bab2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
9001bab4:	1215      	asrs	r5, r2, #8
9001bab6:	10d1      	asrs	r1, r2, #3
9001bab8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001babc:	00d2      	lsls	r2, r2, #3
9001babe:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001bac2:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001bac6:	b2d2      	uxtb	r2, r2
9001bac8:	fb05 750e 	mla	r5, r5, lr, r7
9001bacc:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001bad0:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
9001bad2:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001bad6:	b2ad      	uxth	r5, r5
9001bad8:	fb01 710e 	mla	r1, r1, lr, r7
9001badc:	9f0c      	ldr	r7, [sp, #48]	; 0x30
9001bade:	fb02 720e 	mla	r2, r2, lr, r7
9001bae2:	f105 0e01 	add.w	lr, r5, #1
9001bae6:	b289      	uxth	r1, r1
9001bae8:	b292      	uxth	r2, r2
9001baea:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001baee:	f102 0e01 	add.w	lr, r2, #1
9001baf2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9001baf6:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
9001bafa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001bafe:	4315      	orrs	r5, r2
9001bb00:	1c4a      	adds	r2, r1, #1
9001bb02:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001bb06:	9a04      	ldr	r2, [sp, #16]
9001bb08:	0949      	lsrs	r1, r1, #5
9001bb0a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001bb0e:	430d      	orrs	r5, r1
9001bb10:	f822 5b02 	strh.w	r5, [r2], #2
9001bb14:	9204      	str	r2, [sp, #16]
9001bb16:	e7c1      	b.n	9001ba9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
9001bb18:	4649      	mov	r1, r9
9001bb1a:	4686      	mov	lr, r0
9001bb1c:	b999      	cbnz	r1, 9001bb46 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
9001bb1e:	4563      	cmp	r3, ip
9001bb20:	eb00 0049 	add.w	r0, r0, r9, lsl #1
9001bb24:	d389      	bcc.n	9001ba3a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001bb26:	fa1f f68b 	uxth.w	r6, fp
9001bb2a:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
9001bb2e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001bb30:	1ba4      	subs	r4, r4, r6
9001bb32:	881b      	ldrh	r3, [r3, #0]
9001bb34:	b2a4      	uxth	r4, r4
9001bb36:	eba3 030b 	sub.w	r3, r3, fp
9001bb3a:	2c00      	cmp	r4, #0
9001bb3c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001bb40:	bf18      	it	ne
9001bb42:	2600      	movne	r6, #0
9001bb44:	e779      	b.n	9001ba3a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001bb46:	78aa      	ldrb	r2, [r5, #2]
9001bb48:	3901      	subs	r1, #1
9001bb4a:	4f0e      	ldr	r7, [pc, #56]	; (9001bb84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
9001bb4c:	b289      	uxth	r1, r1
9001bb4e:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
9001bb52:	786a      	ldrb	r2, [r5, #1]
9001bb54:	00d2      	lsls	r2, r2, #3
9001bb56:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001bb5a:	ea4a 0202 	orr.w	r2, sl, r2
9001bb5e:	f895 a000 	ldrb.w	sl, [r5]
9001bb62:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
9001bb66:	f82e 2b02 	strh.w	r2, [lr], #2
9001bb6a:	e7d7      	b.n	9001bb1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
9001bb6c:	4b03      	ldr	r3, [pc, #12]	; (9001bb7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001bb6e:	6818      	ldr	r0, [r3, #0]
9001bb70:	6803      	ldr	r3, [r0, #0]
9001bb72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001bb74:	4798      	blx	r3
9001bb76:	b013      	add	sp, #76	; 0x4c
9001bb78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001bb7c:	240235ac 	.word	0x240235ac
9001bb80:	240235a6 	.word	0x240235a6
9001bb84:	fffff800 	.word	0xfffff800

9001bb88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001bb88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bb8c:	b09d      	sub	sp, #116	; 0x74
9001bb8e:	461c      	mov	r4, r3
9001bb90:	4683      	mov	fp, r0
9001bb92:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001bb94:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
9001bb98:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
9001bb9c:	920e      	str	r2, [sp, #56]	; 0x38
9001bb9e:	2a00      	cmp	r2, #0
9001bba0:	f000 81e4 	beq.w	9001bf6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
9001bba4:	6820      	ldr	r0, [r4, #0]
9001bba6:	aa18      	add	r2, sp, #96	; 0x60
9001bba8:	6861      	ldr	r1, [r4, #4]
9001bbaa:	c203      	stmia	r2!, {r0, r1}
9001bbac:	6818      	ldr	r0, [r3, #0]
9001bbae:	aa1a      	add	r2, sp, #104	; 0x68
9001bbb0:	6859      	ldr	r1, [r3, #4]
9001bbb2:	c203      	stmia	r2!, {r0, r1}
9001bbb4:	a818      	add	r0, sp, #96	; 0x60
9001bbb6:	f7f9 f851 	bl	90014c5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001bbba:	4621      	mov	r1, r4
9001bbbc:	a81a      	add	r0, sp, #104	; 0x68
9001bbbe:	f7f9 f891 	bl	90014ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001bbc2:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
9001bbc6:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
9001bbca:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001bbce:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
9001bbd2:	bfdb      	ittet	le
9001bbd4:	b29a      	uxthle	r2, r3
9001bbd6:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001bbda:	2201      	movgt	r2, #1
9001bbdc:	fb91 f2f2 	sdivle	r2, r1, r2
9001bbe0:	9202      	str	r2, [sp, #8]
9001bbe2:	9802      	ldr	r0, [sp, #8]
9001bbe4:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
9001bbe8:	9902      	ldr	r1, [sp, #8]
9001bbea:	fb92 f0f0 	sdiv	r0, r2, r0
9001bbee:	b280      	uxth	r0, r0
9001bbf0:	440c      	add	r4, r1
9001bbf2:	900f      	str	r0, [sp, #60]	; 0x3c
9001bbf4:	3c01      	subs	r4, #1
9001bbf6:	9802      	ldr	r0, [sp, #8]
9001bbf8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
9001bbfa:	fb05 2510 	mls	r5, r5, r0, r2
9001bbfe:	fb94 f4f1 	sdiv	r4, r4, r1
9001bc02:	fb15 f503 	smulbb	r5, r5, r3
9001bc06:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
9001bc0a:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
9001bc0e:	3401      	adds	r4, #1
9001bc10:	440d      	add	r5, r1
9001bc12:	4419      	add	r1, r3
9001bc14:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
9001bc18:	b2a4      	uxth	r4, r4
9001bc1a:	441a      	add	r2, r3
9001bc1c:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001bc20:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
9001bc24:	00a4      	lsls	r4, r4, #2
9001bc26:	9306      	str	r3, [sp, #24]
9001bc28:	b2ad      	uxth	r5, r5
9001bc2a:	4bb3      	ldr	r3, [pc, #716]	; (9001bef8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
9001bc2c:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
9001bc30:	6818      	ldr	r0, [r3, #0]
9001bc32:	6803      	ldr	r3, [r0, #0]
9001bc34:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001bc36:	4798      	blx	r3
9001bc38:	4bb0      	ldr	r3, [pc, #704]	; (9001befc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
9001bc3a:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
9001bc3e:	2d00      	cmp	r5, #0
9001bc40:	881a      	ldrh	r2, [r3, #0]
9001bc42:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
9001bc46:	fb02 f606 	mul.w	r6, r2, r6
9001bc4a:	fb02 7101 	mla	r1, r2, r1, r7
9001bc4e:	9316      	str	r3, [sp, #88]	; 0x58
9001bc50:	eb00 0841 	add.w	r8, r0, r1, lsl #1
9001bc54:	4baa      	ldr	r3, [pc, #680]	; (9001bf00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
9001bc56:	bf18      	it	ne
9001bc58:	2100      	movne	r1, #0
9001bc5a:	eb08 0246 	add.w	r2, r8, r6, lsl #1
9001bc5e:	eba3 030b 	sub.w	r3, r3, fp
9001bc62:	920a      	str	r2, [sp, #40]	; 0x28
9001bc64:	f104 0204 	add.w	r2, r4, #4
9001bc68:	9317      	str	r3, [sp, #92]	; 0x5c
9001bc6a:	9213      	str	r2, [sp, #76]	; 0x4c
9001bc6c:	9a06      	ldr	r2, [sp, #24]
9001bc6e:	bf08      	it	eq
9001bc70:	4611      	moveq	r1, r2
9001bc72:	2200      	movs	r2, #0
9001bc74:	b289      	uxth	r1, r1
9001bc76:	920d      	str	r2, [sp, #52]	; 0x34
9001bc78:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001bc7a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001bc7c:	fa12 f383 	uxtah	r3, r2, r3
9001bc80:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001bc82:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001bc86:	3304      	adds	r3, #4
9001bc88:	9308      	str	r3, [sp, #32]
9001bc8a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001bc8c:	4543      	cmp	r3, r8
9001bc8e:	f240 8168 	bls.w	9001bf62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
9001bc92:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
9001bc96:	f04f 0e01 	mov.w	lr, #1
9001bc9a:	9a02      	ldr	r2, [sp, #8]
9001bc9c:	9808      	ldr	r0, [sp, #32]
9001bc9e:	fbb5 f3f3 	udiv	r3, r5, r3
9001bca2:	1ad3      	subs	r3, r2, r3
9001bca4:	7800      	ldrb	r0, [r0, #0]
9001bca6:	b29b      	uxth	r3, r3
9001bca8:	9010      	str	r0, [sp, #64]	; 0x40
9001bcaa:	3001      	adds	r0, #1
9001bcac:	9314      	str	r3, [sp, #80]	; 0x50
9001bcae:	9b08      	ldr	r3, [sp, #32]
9001bcb0:	9007      	str	r0, [sp, #28]
9001bcb2:	785a      	ldrb	r2, [r3, #1]
9001bcb4:	789b      	ldrb	r3, [r3, #2]
9001bcb6:	021b      	lsls	r3, r3, #8
9001bcb8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001bcbc:	9a08      	ldr	r2, [sp, #32]
9001bcbe:	78d2      	ldrb	r2, [r2, #3]
9001bcc0:	4313      	orrs	r3, r2
9001bcc2:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001bcc4:	441a      	add	r2, r3
9001bcc6:	1c50      	adds	r0, r2, #1
9001bcc8:	7852      	ldrb	r2, [r2, #1]
9001bcca:	9005      	str	r0, [sp, #20]
9001bccc:	0212      	lsls	r2, r2, #8
9001bcce:	9811      	ldr	r0, [sp, #68]	; 0x44
9001bcd0:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
9001bcd4:	5cc3      	ldrb	r3, [r0, r3]
9001bcd6:	431a      	orrs	r2, r3
9001bcd8:	b293      	uxth	r3, r2
9001bcda:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
9001bcde:	930b      	str	r3, [sp, #44]	; 0x2c
9001bce0:	2300      	movs	r3, #0
9001bce2:	9309      	str	r3, [sp, #36]	; 0x24
9001bce4:	2301      	movs	r3, #1
9001bce6:	9301      	str	r3, [sp, #4]
9001bce8:	9304      	str	r3, [sp, #16]
9001bcea:	2300      	movs	r3, #0
9001bcec:	9303      	str	r3, [sp, #12]
9001bcee:	2d00      	cmp	r5, #0
9001bcf0:	d07d      	beq.n	9001bdee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
9001bcf2:	45ae      	cmp	lr, r5
9001bcf4:	d26c      	bcs.n	9001bdd0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
9001bcf6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001bcf8:	eba5 050e 	sub.w	r5, r5, lr
9001bcfc:	460c      	mov	r4, r1
9001bcfe:	4543      	cmp	r3, r8
9001bd00:	b2ad      	uxth	r5, r5
9001bd02:	d802      	bhi.n	9001bd0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
9001bd04:	e071      	b.n	9001bdea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
9001bd06:	2b00      	cmp	r3, #0
9001bd08:	d15d      	bne.n	9001bdc6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
9001bd0a:	9b05      	ldr	r3, [sp, #20]
9001bd0c:	9a04      	ldr	r2, [sp, #16]
9001bd0e:	785b      	ldrb	r3, [r3, #1]
9001bd10:	f1c2 0207 	rsb	r2, r2, #7
9001bd14:	9904      	ldr	r1, [sp, #16]
9001bd16:	4093      	lsls	r3, r2
9001bd18:	005b      	lsls	r3, r3, #1
9001bd1a:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001bd1e:	9b05      	ldr	r3, [sp, #20]
9001bd20:	781b      	ldrb	r3, [r3, #0]
9001bd22:	410b      	asrs	r3, r1
9001bd24:	3101      	adds	r1, #1
9001bd26:	b2c9      	uxtb	r1, r1
9001bd28:	b2db      	uxtb	r3, r3
9001bd2a:	2908      	cmp	r1, #8
9001bd2c:	9104      	str	r1, [sp, #16]
9001bd2e:	9905      	ldr	r1, [sp, #20]
9001bd30:	ea43 0302 	orr.w	r3, r3, r2
9001bd34:	bf0c      	ite	eq
9001bd36:	3102      	addeq	r1, #2
9001bd38:	3101      	addne	r1, #1
9001bd3a:	b29a      	uxth	r2, r3
9001bd3c:	bf05      	ittet	eq
9001bd3e:	9105      	streq	r1, [sp, #20]
9001bd40:	2100      	moveq	r1, #0
9001bd42:	9105      	strne	r1, [sp, #20]
9001bd44:	9104      	streq	r1, [sp, #16]
9001bd46:	9910      	ldr	r1, [sp, #64]	; 0x40
9001bd48:	4291      	cmp	r1, r2
9001bd4a:	d30a      	bcc.n	9001bd62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
9001bd4c:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
9001bd50:	2301      	movs	r3, #1
9001bd52:	9907      	ldr	r1, [sp, #28]
9001bd54:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
9001bd58:	d30f      	bcc.n	9001bd7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001bd5a:	2100      	movs	r1, #0
9001bd5c:	9301      	str	r3, [sp, #4]
9001bd5e:	9103      	str	r1, [sp, #12]
9001bd60:	e032      	b.n	9001bdc8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
9001bd62:	9b07      	ldr	r3, [sp, #28]
9001bd64:	429a      	cmp	r2, r3
9001bd66:	d318      	bcc.n	9001bd9a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
9001bd68:	9b01      	ldr	r3, [sp, #4]
9001bd6a:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
9001bd6e:	445b      	add	r3, fp
9001bd70:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
9001bd74:	9b01      	ldr	r3, [sp, #4]
9001bd76:	3301      	adds	r3, #1
9001bd78:	b29b      	uxth	r3, r3
9001bd7a:	9907      	ldr	r1, [sp, #28]
9001bd7c:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
9001bd80:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001bd84:	7108      	strb	r0, [r1, #4]
9001bd86:	980b      	ldr	r0, [sp, #44]	; 0x2c
9001bd88:	80c8      	strh	r0, [r1, #6]
9001bd8a:	9801      	ldr	r0, [sp, #4]
9001bd8c:	3001      	adds	r0, #1
9001bd8e:	7148      	strb	r0, [r1, #5]
9001bd90:	9907      	ldr	r1, [sp, #28]
9001bd92:	3101      	adds	r1, #1
9001bd94:	b289      	uxth	r1, r1
9001bd96:	9107      	str	r1, [sp, #28]
9001bd98:	e7df      	b.n	9001bd5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
9001bd9a:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
9001bd9e:	4611      	mov	r1, r2
9001bda0:	795b      	ldrb	r3, [r3, #5]
9001bda2:	f603 0004 	addw	r0, r3, #2052	; 0x804
9001bda6:	4458      	add	r0, fp
9001bda8:	9e17      	ldr	r6, [sp, #92]	; 0x5c
9001bdaa:	4406      	add	r6, r0
9001bdac:	2e00      	cmp	r6, #0
9001bdae:	dd06      	ble.n	9001bdbe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001bdb0:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001bdb4:	790e      	ldrb	r6, [r1, #4]
9001bdb6:	f800 6d01 	strb.w	r6, [r0, #-1]!
9001bdba:	88c9      	ldrh	r1, [r1, #6]
9001bdbc:	e7f4      	b.n	9001bda8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
9001bdbe:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
9001bdc2:	b29b      	uxth	r3, r3
9001bdc4:	e7c5      	b.n	9001bd52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
9001bdc6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001bdc8:	4621      	mov	r1, r4
9001bdca:	920b      	str	r2, [sp, #44]	; 0x2c
9001bdcc:	469e      	mov	lr, r3
9001bdce:	e78e      	b.n	9001bcee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
9001bdd0:	9a03      	ldr	r2, [sp, #12]
9001bdd2:	ebae 0305 	sub.w	r3, lr, r5
9001bdd6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001bdda:	442a      	add	r2, r5
9001bddc:	b29b      	uxth	r3, r3
9001bdde:	b292      	uxth	r2, r2
9001bde0:	9203      	str	r2, [sp, #12]
9001bde2:	2500      	movs	r5, #0
9001bde4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001bde6:	4542      	cmp	r2, r8
9001bde8:	d88d      	bhi.n	9001bd06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
9001bdea:	4621      	mov	r1, r4
9001bdec:	e74d      	b.n	9001bc8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
9001bdee:	458e      	cmp	lr, r1
9001bdf0:	f04f 0900 	mov.w	r9, #0
9001bdf4:	bf2b      	itete	cs
9001bdf6:	ebae 0301 	subcs.w	r3, lr, r1
9001bdfa:	eba1 040e 	subcc.w	r4, r1, lr
9001bdfe:	462c      	movcs	r4, r5
9001be00:	462b      	movcc	r3, r5
9001be02:	bf27      	ittee	cs
9001be04:	b29b      	uxthcs	r3, r3
9001be06:	910c      	strcs	r1, [sp, #48]	; 0x30
9001be08:	b2a4      	uxthcc	r4, r4
9001be0a:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
9001be0e:	9a03      	ldr	r2, [sp, #12]
9001be10:	980c      	ldr	r0, [sp, #48]	; 0x30
9001be12:	444a      	add	r2, r9
9001be14:	4548      	cmp	r0, r9
9001be16:	b292      	uxth	r2, r2
9001be18:	d074      	beq.n	9001bf04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
9001be1a:	2004      	movs	r0, #4
9001be1c:	445a      	add	r2, fp
9001be1e:	4605      	mov	r5, r0
9001be20:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
9001be24:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001be26:	fb15 0202 	smlabb	r2, r5, r2, r0
9001be2a:	9812      	ldr	r0, [sp, #72]	; 0x48
9001be2c:	5880      	ldr	r0, [r0, r2]
9001be2e:	ea5f 6a10 	movs.w	sl, r0, lsr #24
9001be32:	d014      	beq.n	9001be5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001be34:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001be38:	ea4f 2510 	mov.w	r5, r0, lsr #8
9001be3c:	d112      	bne.n	9001be64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001be3e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001be40:	2aff      	cmp	r2, #255	; 0xff
9001be42:	d10f      	bne.n	9001be64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001be44:	0942      	lsrs	r2, r0, #5
9001be46:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
9001be4a:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001be4e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001be52:	f025 0507 	bic.w	r5, r5, #7
9001be56:	4315      	orrs	r5, r2
9001be58:	4305      	orrs	r5, r0
9001be5a:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
9001be5e:	f109 0901 	add.w	r9, r9, #1
9001be62:	e7d4      	b.n	9001be0e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
9001be64:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
9001be68:	b2ed      	uxtb	r5, r5
9001be6a:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001be6e:	ea4f 272c 	mov.w	r7, ip, asr #8
9001be72:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
9001be76:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001be7a:	f3c0 4607 	ubfx	r6, r0, #16, #8
9001be7e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001be82:	9215      	str	r2, [sp, #84]	; 0x54
9001be84:	fa5f fc8c 	uxtb.w	ip, ip
9001be88:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001be8a:	b2c0      	uxtb	r0, r0
9001be8c:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001be90:	fb02 fa0a 	mul.w	sl, r2, sl
9001be94:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
9001be98:	f10a 0201 	add.w	r2, sl, #1
9001be9c:	eb02 222a 	add.w	r2, r2, sl, asr #8
9001bea0:	1212      	asrs	r2, r2, #8
9001bea2:	fa1f fa82 	uxth.w	sl, r2
9001bea6:	43d2      	mvns	r2, r2
9001bea8:	fb16 f60a 	smulbb	r6, r6, sl
9001beac:	b2d2      	uxtb	r2, r2
9001beae:	fb10 f00a 	smulbb	r0, r0, sl
9001beb2:	fb07 6702 	mla	r7, r7, r2, r6
9001beb6:	9e15      	ldr	r6, [sp, #84]	; 0x54
9001beb8:	fb0c 0002 	mla	r0, ip, r2, r0
9001bebc:	fb15 f50a 	smulbb	r5, r5, sl
9001bec0:	b2bf      	uxth	r7, r7
9001bec2:	b280      	uxth	r0, r0
9001bec4:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001bec8:	fb06 5602 	mla	r6, r6, r2, r5
9001becc:	1c7a      	adds	r2, r7, #1
9001bece:	1c45      	adds	r5, r0, #1
9001bed0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001bed4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001bed8:	b2b6      	uxth	r6, r6
9001beda:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001bede:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001bee2:	432f      	orrs	r7, r5
9001bee4:	1c75      	adds	r5, r6, #1
9001bee6:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001beea:	096d      	lsrs	r5, r5, #5
9001beec:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001bef0:	432f      	orrs	r7, r5
9001bef2:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
9001bef6:	e7b2      	b.n	9001be5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001bef8:	240235ac 	.word	0x240235ac
9001befc:	240235a6 	.word	0x240235a6
9001bf00:	fffff7fb 	.word	0xfffff7fb
9001bf04:	9203      	str	r2, [sp, #12]
9001bf06:	458e      	cmp	lr, r1
9001bf08:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001bf0a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001bf0e:	f4ff af68 	bcc.w	9001bde2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
9001bf12:	9a16      	ldr	r2, [sp, #88]	; 0x58
9001bf14:	9906      	ldr	r1, [sp, #24]
9001bf16:	8812      	ldrh	r2, [r2, #0]
9001bf18:	1a52      	subs	r2, r2, r1
9001bf1a:	9914      	ldr	r1, [sp, #80]	; 0x50
9001bf1c:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001bf20:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001bf22:	3201      	adds	r2, #1
9001bf24:	428a      	cmp	r2, r1
9001bf26:	9209      	str	r2, [sp, #36]	; 0x24
9001bf28:	d111      	bne.n	9001bf4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
9001bf2a:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
9001bf2e:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
9001bf32:	9b06      	ldr	r3, [sp, #24]
9001bf34:	eba5 0509 	sub.w	r5, r5, r9
9001bf38:	b2ad      	uxth	r5, r5
9001bf3a:	2d00      	cmp	r5, #0
9001bf3c:	bf08      	it	eq
9001bf3e:	4619      	moveq	r1, r3
9001bf40:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001bf42:	bf18      	it	ne
9001bf44:	2100      	movne	r1, #0
9001bf46:	3301      	adds	r3, #1
9001bf48:	b289      	uxth	r1, r1
9001bf4a:	930d      	str	r3, [sp, #52]	; 0x34
9001bf4c:	e694      	b.n	9001bc78 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
9001bf4e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001bf52:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
9001bf56:	1b2d      	subs	r5, r5, r4
9001bf58:	b2ad      	uxth	r5, r5
9001bf5a:	2d00      	cmp	r5, #0
9001bf5c:	bf18      	it	ne
9001bf5e:	2400      	movne	r4, #0
9001bf60:	e740      	b.n	9001bde4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
9001bf62:	4b04      	ldr	r3, [pc, #16]	; (9001bf74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
9001bf64:	6818      	ldr	r0, [r3, #0]
9001bf66:	6803      	ldr	r3, [r0, #0]
9001bf68:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001bf6a:	4798      	blx	r3
9001bf6c:	b01d      	add	sp, #116	; 0x74
9001bf6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001bf72:	bf00      	nop
9001bf74:	240235ac 	.word	0x240235ac

9001bf78 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001bf78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bf7c:	b09f      	sub	sp, #124	; 0x7c
9001bf7e:	461d      	mov	r5, r3
9001bf80:	4604      	mov	r4, r0
9001bf82:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001bf84:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
9001bf88:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
9001bf8c:	920a      	str	r2, [sp, #40]	; 0x28
9001bf8e:	2a00      	cmp	r2, #0
9001bf90:	f000 81fe 	beq.w	9001c390 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
9001bf94:	6828      	ldr	r0, [r5, #0]
9001bf96:	aa1a      	add	r2, sp, #104	; 0x68
9001bf98:	6869      	ldr	r1, [r5, #4]
9001bf9a:	c203      	stmia	r2!, {r0, r1}
9001bf9c:	6818      	ldr	r0, [r3, #0]
9001bf9e:	aa1c      	add	r2, sp, #112	; 0x70
9001bfa0:	6859      	ldr	r1, [r3, #4]
9001bfa2:	c203      	stmia	r2!, {r0, r1}
9001bfa4:	a81a      	add	r0, sp, #104	; 0x68
9001bfa6:	f7f8 fe59 	bl	90014c5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001bfaa:	4629      	mov	r1, r5
9001bfac:	a81c      	add	r0, sp, #112	; 0x70
9001bfae:	f7f8 fe99 	bl	90014ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001bfb2:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001bfb6:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
9001bfba:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001bfbe:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
9001bfc2:	bfdb      	ittet	le
9001bfc4:	b29a      	uxthle	r2, r3
9001bfc6:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001bfca:	2201      	movgt	r2, #1
9001bfcc:	fb91 f2f2 	sdivle	r2, r1, r2
9001bfd0:	9201      	str	r2, [sp, #4]
9001bfd2:	9801      	ldr	r0, [sp, #4]
9001bfd4:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
9001bfd8:	9901      	ldr	r1, [sp, #4]
9001bfda:	fb92 f0f0 	sdiv	r0, r2, r0
9001bfde:	b280      	uxth	r0, r0
9001bfe0:	440e      	add	r6, r1
9001bfe2:	9010      	str	r0, [sp, #64]	; 0x40
9001bfe4:	3e01      	subs	r6, #1
9001bfe6:	9801      	ldr	r0, [sp, #4]
9001bfe8:	9d10      	ldr	r5, [sp, #64]	; 0x40
9001bfea:	fb05 2510 	mls	r5, r5, r0, r2
9001bfee:	fb96 f6f1 	sdiv	r6, r6, r1
9001bff2:	fb15 f503 	smulbb	r5, r5, r3
9001bff6:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
9001bffa:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
9001bffe:	3601      	adds	r6, #1
9001c000:	440d      	add	r5, r1
9001c002:	4419      	add	r1, r3
9001c004:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
9001c008:	b2b6      	uxth	r6, r6
9001c00a:	441a      	add	r2, r3
9001c00c:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
9001c010:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
9001c014:	b2ad      	uxth	r5, r5
9001c016:	9304      	str	r3, [sp, #16]
9001c018:	4b96      	ldr	r3, [pc, #600]	; (9001c274 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001c01a:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
9001c01e:	6818      	ldr	r0, [r3, #0]
9001c020:	6803      	ldr	r3, [r0, #0]
9001c022:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001c024:	4798      	blx	r3
9001c026:	4b94      	ldr	r3, [pc, #592]	; (9001c278 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
9001c028:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
9001c02c:	2d00      	cmp	r5, #0
9001c02e:	881a      	ldrh	r2, [r3, #0]
9001c030:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
9001c034:	fb02 f707 	mul.w	r7, r2, r7
9001c038:	fb02 c101 	mla	r1, r2, r1, ip
9001c03c:	9318      	str	r3, [sp, #96]	; 0x60
9001c03e:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
9001c042:	4b8e      	ldr	r3, [pc, #568]	; (9001c27c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
9001c044:	bf18      	it	ne
9001c046:	2100      	movne	r1, #0
9001c048:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
9001c04c:	eba3 0304 	sub.w	r3, r3, r4
9001c050:	920b      	str	r2, [sp, #44]	; 0x2c
9001c052:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001c054:	9319      	str	r3, [sp, #100]	; 0x64
9001c056:	eb02 0686 	add.w	r6, r2, r6, lsl #2
9001c05a:	f106 0204 	add.w	r2, r6, #4
9001c05e:	9206      	str	r2, [sp, #24]
9001c060:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001c062:	ea6f 0202 	mvn.w	r2, r2
9001c066:	b2d2      	uxtb	r2, r2
9001c068:	9215      	str	r2, [sp, #84]	; 0x54
9001c06a:	9a04      	ldr	r2, [sp, #16]
9001c06c:	bf08      	it	eq
9001c06e:	4611      	moveq	r1, r2
9001c070:	2200      	movs	r2, #0
9001c072:	b289      	uxth	r1, r1
9001c074:	920d      	str	r2, [sp, #52]	; 0x34
9001c076:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001c078:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001c07a:	fa12 f383 	uxtah	r3, r2, r3
9001c07e:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001c080:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001c084:	3304      	adds	r3, #4
9001c086:	9307      	str	r3, [sp, #28]
9001c088:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001c08a:	455b      	cmp	r3, fp
9001c08c:	f240 817b 	bls.w	9001c386 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
9001c090:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
9001c094:	f04f 0801 	mov.w	r8, #1
9001c098:	9a01      	ldr	r2, [sp, #4]
9001c09a:	9807      	ldr	r0, [sp, #28]
9001c09c:	46c4      	mov	ip, r8
9001c09e:	f8cd 8008 	str.w	r8, [sp, #8]
9001c0a2:	7800      	ldrb	r0, [r0, #0]
9001c0a4:	fbb5 f3f3 	udiv	r3, r5, r3
9001c0a8:	1ad3      	subs	r3, r2, r3
9001c0aa:	9011      	str	r0, [sp, #68]	; 0x44
9001c0ac:	3001      	adds	r0, #1
9001c0ae:	b29b      	uxth	r3, r3
9001c0b0:	9005      	str	r0, [sp, #20]
9001c0b2:	9316      	str	r3, [sp, #88]	; 0x58
9001c0b4:	9b07      	ldr	r3, [sp, #28]
9001c0b6:	785a      	ldrb	r2, [r3, #1]
9001c0b8:	789b      	ldrb	r3, [r3, #2]
9001c0ba:	021b      	lsls	r3, r3, #8
9001c0bc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001c0c0:	9a07      	ldr	r2, [sp, #28]
9001c0c2:	78d2      	ldrb	r2, [r2, #3]
9001c0c4:	4313      	orrs	r3, r2
9001c0c6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001c0c8:	441a      	add	r2, r3
9001c0ca:	1c50      	adds	r0, r2, #1
9001c0cc:	7852      	ldrb	r2, [r2, #1]
9001c0ce:	9003      	str	r0, [sp, #12]
9001c0d0:	0212      	lsls	r2, r2, #8
9001c0d2:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001c0d4:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
9001c0d8:	5cc3      	ldrb	r3, [r0, r3]
9001c0da:	431a      	orrs	r2, r3
9001c0dc:	b293      	uxth	r3, r2
9001c0de:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
9001c0e2:	930c      	str	r3, [sp, #48]	; 0x30
9001c0e4:	2300      	movs	r3, #0
9001c0e6:	9308      	str	r3, [sp, #32]
9001c0e8:	461a      	mov	r2, r3
9001c0ea:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001c0ee:	930e      	str	r3, [sp, #56]	; 0x38
9001c0f0:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9001c0f4:	930f      	str	r3, [sp, #60]	; 0x3c
9001c0f6:	2d00      	cmp	r5, #0
9001c0f8:	d07d      	beq.n	9001c1f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
9001c0fa:	45ac      	cmp	ip, r5
9001c0fc:	d26d      	bcs.n	9001c1da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
9001c0fe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001c100:	eba5 050c 	sub.w	r5, r5, ip
9001c104:	4608      	mov	r0, r1
9001c106:	455b      	cmp	r3, fp
9001c108:	b2ad      	uxth	r5, r5
9001c10a:	d802      	bhi.n	9001c112 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
9001c10c:	e071      	b.n	9001c1f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
9001c10e:	2b00      	cmp	r3, #0
9001c110:	d15d      	bne.n	9001c1ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
9001c112:	9b03      	ldr	r3, [sp, #12]
9001c114:	9a02      	ldr	r2, [sp, #8]
9001c116:	785b      	ldrb	r3, [r3, #1]
9001c118:	f1c2 0207 	rsb	r2, r2, #7
9001c11c:	9902      	ldr	r1, [sp, #8]
9001c11e:	4093      	lsls	r3, r2
9001c120:	005b      	lsls	r3, r3, #1
9001c122:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001c126:	9b03      	ldr	r3, [sp, #12]
9001c128:	781b      	ldrb	r3, [r3, #0]
9001c12a:	410b      	asrs	r3, r1
9001c12c:	3101      	adds	r1, #1
9001c12e:	b2c9      	uxtb	r1, r1
9001c130:	b2db      	uxtb	r3, r3
9001c132:	2908      	cmp	r1, #8
9001c134:	9102      	str	r1, [sp, #8]
9001c136:	9903      	ldr	r1, [sp, #12]
9001c138:	ea43 0302 	orr.w	r3, r3, r2
9001c13c:	bf0c      	ite	eq
9001c13e:	3102      	addeq	r1, #2
9001c140:	3101      	addne	r1, #1
9001c142:	b29a      	uxth	r2, r3
9001c144:	bf05      	ittet	eq
9001c146:	9103      	streq	r1, [sp, #12]
9001c148:	2100      	moveq	r1, #0
9001c14a:	9103      	strne	r1, [sp, #12]
9001c14c:	9102      	streq	r1, [sp, #8]
9001c14e:	9911      	ldr	r1, [sp, #68]	; 0x44
9001c150:	4291      	cmp	r1, r2
9001c152:	d30a      	bcc.n	9001c16a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001c154:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
9001c158:	2301      	movs	r3, #1
9001c15a:	9905      	ldr	r1, [sp, #20]
9001c15c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
9001c160:	d30f      	bcc.n	9001c182 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
9001c162:	2100      	movs	r1, #0
9001c164:	4698      	mov	r8, r3
9001c166:	9100      	str	r1, [sp, #0]
9001c168:	e032      	b.n	9001c1d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
9001c16a:	9b05      	ldr	r3, [sp, #20]
9001c16c:	429a      	cmp	r2, r3
9001c16e:	d318      	bcc.n	9001c1a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
9001c170:	eb04 0308 	add.w	r3, r4, r8
9001c174:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
9001c178:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
9001c17c:	f108 0301 	add.w	r3, r8, #1
9001c180:	b29b      	uxth	r3, r3
9001c182:	9905      	ldr	r1, [sp, #20]
9001c184:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
9001c188:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001c18c:	710e      	strb	r6, [r1, #4]
9001c18e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
9001c190:	80ce      	strh	r6, [r1, #6]
9001c192:	f108 0601 	add.w	r6, r8, #1
9001c196:	714e      	strb	r6, [r1, #5]
9001c198:	9905      	ldr	r1, [sp, #20]
9001c19a:	3101      	adds	r1, #1
9001c19c:	b289      	uxth	r1, r1
9001c19e:	9105      	str	r1, [sp, #20]
9001c1a0:	e7df      	b.n	9001c162 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
9001c1a2:	eb04 0382 	add.w	r3, r4, r2, lsl #2
9001c1a6:	4611      	mov	r1, r2
9001c1a8:	795b      	ldrb	r3, [r3, #5]
9001c1aa:	f603 0604 	addw	r6, r3, #2052	; 0x804
9001c1ae:	4426      	add	r6, r4
9001c1b0:	9f19      	ldr	r7, [sp, #100]	; 0x64
9001c1b2:	4437      	add	r7, r6
9001c1b4:	2f00      	cmp	r7, #0
9001c1b6:	dd06      	ble.n	9001c1c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
9001c1b8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001c1bc:	790f      	ldrb	r7, [r1, #4]
9001c1be:	f806 7d01 	strb.w	r7, [r6, #-1]!
9001c1c2:	88c9      	ldrh	r1, [r1, #6]
9001c1c4:	e7f4      	b.n	9001c1b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
9001c1c6:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
9001c1ca:	b29b      	uxth	r3, r3
9001c1cc:	e7c5      	b.n	9001c15a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
9001c1ce:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001c1d0:	920c      	str	r2, [sp, #48]	; 0x30
9001c1d2:	4601      	mov	r1, r0
9001c1d4:	9a00      	ldr	r2, [sp, #0]
9001c1d6:	469c      	mov	ip, r3
9001c1d8:	e78d      	b.n	9001c0f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
9001c1da:	ebac 0305 	sub.w	r3, ip, r5
9001c1de:	1957      	adds	r7, r2, r5
9001c1e0:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001c1e4:	b2ba      	uxth	r2, r7
9001c1e6:	b29b      	uxth	r3, r3
9001c1e8:	9200      	str	r2, [sp, #0]
9001c1ea:	2500      	movs	r5, #0
9001c1ec:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001c1ee:	455a      	cmp	r2, fp
9001c1f0:	d88d      	bhi.n	9001c10e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
9001c1f2:	4601      	mov	r1, r0
9001c1f4:	e748      	b.n	9001c088 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
9001c1f6:	458c      	cmp	ip, r1
9001c1f8:	bf27      	ittee	cs
9001c1fa:	ebac 0301 	subcs.w	r3, ip, r1
9001c1fe:	4628      	movcs	r0, r5
9001c200:	eba1 000c 	subcc.w	r0, r1, ip
9001c204:	462b      	movcc	r3, r5
9001c206:	9d0a      	ldr	r5, [sp, #40]	; 0x28
9001c208:	bf27      	ittee	cs
9001c20a:	b29b      	uxthcs	r3, r3
9001c20c:	9109      	strcs	r1, [sp, #36]	; 0x24
9001c20e:	b280      	uxthcc	r0, r0
9001c210:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
9001c214:	2dff      	cmp	r5, #255	; 0xff
9001c216:	9d09      	ldr	r5, [sp, #36]	; 0x24
9001c218:	eb02 0705 	add.w	r7, r2, r5
9001c21c:	b2bd      	uxth	r5, r7
9001c21e:	9500      	str	r5, [sp, #0]
9001c220:	d12e      	bne.n	9001c280 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
9001c222:	465e      	mov	r6, fp
9001c224:	9d00      	ldr	r5, [sp, #0]
9001c226:	42aa      	cmp	r2, r5
9001c228:	f040 8083 	bne.w	9001c332 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
9001c22c:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001c22e:	458c      	cmp	ip, r1
9001c230:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001c234:	d3d9      	bcc.n	9001c1ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
9001c236:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001c238:	9904      	ldr	r1, [sp, #16]
9001c23a:	8812      	ldrh	r2, [r2, #0]
9001c23c:	1a52      	subs	r2, r2, r1
9001c23e:	9916      	ldr	r1, [sp, #88]	; 0x58
9001c240:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001c244:	9a08      	ldr	r2, [sp, #32]
9001c246:	3201      	adds	r2, #1
9001c248:	428a      	cmp	r2, r1
9001c24a:	9208      	str	r2, [sp, #32]
9001c24c:	f040 8091 	bne.w	9001c372 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
9001c250:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
9001c254:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
9001c258:	9b04      	ldr	r3, [sp, #16]
9001c25a:	eba5 050c 	sub.w	r5, r5, ip
9001c25e:	b2ad      	uxth	r5, r5
9001c260:	2d00      	cmp	r5, #0
9001c262:	bf08      	it	eq
9001c264:	4619      	moveq	r1, r3
9001c266:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001c268:	bf18      	it	ne
9001c26a:	2100      	movne	r1, #0
9001c26c:	3301      	adds	r3, #1
9001c26e:	b289      	uxth	r1, r1
9001c270:	930d      	str	r3, [sp, #52]	; 0x34
9001c272:	e700      	b.n	9001c076 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
9001c274:	240235ac 	.word	0x240235ac
9001c278:	240235a6 	.word	0x240235a6
9001c27c:	fffff7fb 	.word	0xfffff7fb
9001c280:	46d9      	mov	r9, fp
9001c282:	9d00      	ldr	r5, [sp, #0]
9001c284:	42aa      	cmp	r2, r5
9001c286:	d0d1      	beq.n	9001c22c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
9001c288:	1c55      	adds	r5, r2, #1
9001c28a:	4422      	add	r2, r4
9001c28c:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
9001c290:	9a06      	ldr	r2, [sp, #24]
9001c292:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001c296:	9517      	str	r5, [sp, #92]	; 0x5c
9001c298:	4472      	add	r2, lr
9001c29a:	9212      	str	r2, [sp, #72]	; 0x48
9001c29c:	f8b9 2000 	ldrh.w	r2, [r9]
9001c2a0:	9f12      	ldr	r7, [sp, #72]	; 0x48
9001c2a2:	1216      	asrs	r6, r2, #8
9001c2a4:	f897 a002 	ldrb.w	sl, [r7, #2]
9001c2a8:	10d5      	asrs	r5, r2, #3
9001c2aa:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001c2ac:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001c2b0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001c2b4:	00d2      	lsls	r2, r2, #3
9001c2b6:	fb1a fa07 	smulbb	sl, sl, r7
9001c2ba:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001c2be:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001c2c0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001c2c4:	b2d2      	uxtb	r2, r2
9001c2c6:	fb06 a607 	mla	r6, r6, r7, sl
9001c2ca:	9f12      	ldr	r7, [sp, #72]	; 0x48
9001c2cc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001c2d0:	f897 a001 	ldrb.w	sl, [r7, #1]
9001c2d4:	b2b6      	uxth	r6, r6
9001c2d6:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001c2d8:	fb1a fa07 	smulbb	sl, sl, r7
9001c2dc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001c2de:	fb05 a507 	mla	r5, r5, r7, sl
9001c2e2:	9f06      	ldr	r7, [sp, #24]
9001c2e4:	f106 0a01 	add.w	sl, r6, #1
9001c2e8:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001c2ec:	b2ad      	uxth	r5, r5
9001c2ee:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001c2f0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001c2f4:	f105 0a01 	add.w	sl, r5, #1
9001c2f8:	fb1e fe07 	smulbb	lr, lr, r7
9001c2fc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001c2fe:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c302:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001c306:	fb02 e207 	mla	r2, r2, r7, lr
9001c30a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c30e:	b292      	uxth	r2, r2
9001c310:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001c314:	f102 0e01 	add.w	lr, r2, #1
9001c318:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
9001c31c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
9001c320:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001c324:	ea4e 0606 	orr.w	r6, lr, r6
9001c328:	ea46 060a 	orr.w	r6, r6, sl
9001c32c:	f829 6b02 	strh.w	r6, [r9], #2
9001c330:	e7a7      	b.n	9001c282 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
9001c332:	f102 0e01 	add.w	lr, r2, #1
9001c336:	4422      	add	r2, r4
9001c338:	9f06      	ldr	r7, [sp, #24]
9001c33a:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
9001c33e:	9a06      	ldr	r2, [sp, #24]
9001c340:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001c344:	eb02 0a05 	add.w	sl, r2, r5
9001c348:	4a13      	ldr	r2, [pc, #76]	; (9001c398 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
9001c34a:	f89a 9002 	ldrb.w	r9, [sl, #2]
9001c34e:	ea02 2909 	and.w	r9, r2, r9, lsl #8
9001c352:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001c356:	00d2      	lsls	r2, r2, #3
9001c358:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001c35c:	ea49 0202 	orr.w	r2, r9, r2
9001c360:	f817 9005 	ldrb.w	r9, [r7, r5]
9001c364:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9001c368:	f826 2b02 	strh.w	r2, [r6], #2
9001c36c:	fa1f f28e 	uxth.w	r2, lr
9001c370:	e758      	b.n	9001c224 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
9001c372:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001c376:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
9001c37a:	1a2d      	subs	r5, r5, r0
9001c37c:	b2ad      	uxth	r5, r5
9001c37e:	2d00      	cmp	r5, #0
9001c380:	bf18      	it	ne
9001c382:	2000      	movne	r0, #0
9001c384:	e732      	b.n	9001c1ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
9001c386:	4b05      	ldr	r3, [pc, #20]	; (9001c39c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
9001c388:	6818      	ldr	r0, [r3, #0]
9001c38a:	6803      	ldr	r3, [r0, #0]
9001c38c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001c38e:	4798      	blx	r3
9001c390:	b01f      	add	sp, #124	; 0x7c
9001c392:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c396:	bf00      	nop
9001c398:	fffff800 	.word	0xfffff800
9001c39c:	240235ac 	.word	0x240235ac

9001c3a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
9001c3a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c3a4:	b091      	sub	sp, #68	; 0x44
9001c3a6:	469b      	mov	fp, r3
9001c3a8:	4616      	mov	r6, r2
9001c3aa:	f9b3 2000 	ldrsh.w	r2, [r3]
9001c3ae:	f10d 0828 	add.w	r8, sp, #40	; 0x28
9001c3b2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001c3b6:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
9001c3ba:	4604      	mov	r4, r0
9001c3bc:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
9001c3c0:	4640      	mov	r0, r8
9001c3c2:	460d      	mov	r5, r1
9001c3c4:	4659      	mov	r1, fp
9001c3c6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
9001c3ca:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
9001c3ce:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
9001c3d2:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
9001c3d6:	f7f3 fed7 	bl	90010188 <_ZN8touchgfx4RectaNERKS0_>
9001c3da:	4631      	mov	r1, r6
9001c3dc:	4640      	mov	r0, r8
9001c3de:	f7f3 fed3 	bl	90010188 <_ZN8touchgfx4RectaNERKS0_>
9001c3e2:	4b74      	ldr	r3, [pc, #464]	; (9001c5b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
9001c3e4:	8818      	ldrh	r0, [r3, #0]
9001c3e6:	4b74      	ldr	r3, [pc, #464]	; (9001c5b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
9001c3e8:	b202      	sxth	r2, r0
9001c3ea:	8819      	ldrh	r1, [r3, #0]
9001c3ec:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
9001c3f0:	b20e      	sxth	r6, r1
9001c3f2:	2b00      	cmp	r3, #0
9001c3f4:	da07      	bge.n	9001c406 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
9001c3f6:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
9001c3fa:	4463      	add	r3, ip
9001c3fc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
9001c400:	2300      	movs	r3, #0
9001c402:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
9001c406:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
9001c40a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
9001c40e:	1ad2      	subs	r2, r2, r3
9001c410:	4594      	cmp	ip, r2
9001c412:	bfc4      	itt	gt
9001c414:	1ac2      	subgt	r2, r0, r3
9001c416:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
9001c41a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001c41e:	2a00      	cmp	r2, #0
9001c420:	da07      	bge.n	9001c432 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
9001c422:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
9001c426:	4462      	add	r2, ip
9001c428:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
9001c42c:	2200      	movs	r2, #0
9001c42e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
9001c432:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
9001c436:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
9001c43a:	eba6 060a 	sub.w	r6, r6, sl
9001c43e:	42b2      	cmp	r2, r6
9001c440:	bfc4      	itt	gt
9001c442:	eba1 020a 	subgt.w	r2, r1, sl
9001c446:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
9001c44a:	4a5c      	ldr	r2, [pc, #368]	; (9001c5bc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
9001c44c:	7812      	ldrb	r2, [r2, #0]
9001c44e:	b9a2      	cbnz	r2, 9001c47a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
9001c450:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001c454:	4286      	cmp	r6, r0
9001c456:	4640      	mov	r0, r8
9001c458:	9303      	str	r3, [sp, #12]
9001c45a:	bf14      	ite	ne
9001c45c:	2600      	movne	r6, #0
9001c45e:	2601      	moveq	r6, #1
9001c460:	f7f3 fed5 	bl	9001020e <_ZNK8touchgfx4Rect7isEmptyEv>
9001c464:	9b03      	ldr	r3, [sp, #12]
9001c466:	b160      	cbz	r0, 9001c482 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
9001c468:	2300      	movs	r3, #0
9001c46a:	8023      	strh	r3, [r4, #0]
9001c46c:	8063      	strh	r3, [r4, #2]
9001c46e:	80a3      	strh	r3, [r4, #4]
9001c470:	4620      	mov	r0, r4
9001c472:	80e3      	strh	r3, [r4, #6]
9001c474:	b011      	add	sp, #68	; 0x44
9001c476:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c47a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
9001c47e:	428e      	cmp	r6, r1
9001c480:	e7e9      	b.n	9001c456 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
9001c482:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
9001c486:	a90e      	add	r1, sp, #56	; 0x38
9001c488:	900e      	str	r0, [sp, #56]	; 0x38
9001c48a:	a80c      	add	r0, sp, #48	; 0x30
9001c48c:	9205      	str	r2, [sp, #20]
9001c48e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
9001c492:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
9001c496:	9206      	str	r2, [sp, #24]
9001c498:	f8bb 2000 	ldrh.w	r2, [fp]
9001c49c:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
9001c4a0:	1a9b      	subs	r3, r3, r2
9001c4a2:	b21b      	sxth	r3, r3
9001c4a4:	9303      	str	r3, [sp, #12]
9001c4a6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9001c4aa:	f8df b118 	ldr.w	fp, [pc, #280]	; 9001c5c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001c4ae:	ebaa 0a03 	sub.w	sl, sl, r3
9001c4b2:	fa0f f38a 	sxth.w	r3, sl
9001c4b6:	9304      	str	r3, [sp, #16]
9001c4b8:	9b03      	ldr	r3, [sp, #12]
9001c4ba:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
9001c4be:	9b04      	ldr	r3, [sp, #16]
9001c4c0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001c4c4:	9b05      	ldr	r3, [sp, #20]
9001c4c6:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
9001c4ca:	9b06      	ldr	r3, [sp, #24]
9001c4cc:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
9001c4d0:	f7f8 fc08 	bl	90014ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c4d4:	4640      	mov	r0, r8
9001c4d6:	f7f8 fbc1 	bl	90014c5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c4da:	a80e      	add	r0, sp, #56	; 0x38
9001c4dc:	f7f8 fbbe 	bl	90014c5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c4e0:	4b37      	ldr	r3, [pc, #220]	; (9001c5c0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
9001c4e2:	4628      	mov	r0, r5
9001c4e4:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
9001c4e8:	881b      	ldrh	r3, [r3, #0]
9001c4ea:	9307      	str	r3, [sp, #28]
9001c4ec:	682b      	ldr	r3, [r5, #0]
9001c4ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001c4f0:	4798      	blx	r3
9001c4f2:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
9001c4f6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
9001c4fa:	4681      	mov	r9, r0
9001c4fc:	f8db 0000 	ldr.w	r0, [fp]
9001c500:	fb1a 3305 	smlabb	r3, sl, r5, r3
9001c504:	9d1a      	ldr	r5, [sp, #104]	; 0x68
9001c506:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001c50a:	6803      	ldr	r3, [r0, #0]
9001c50c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001c50e:	4798      	blx	r3
9001c510:	4607      	mov	r7, r0
9001c512:	f8db 0000 	ldr.w	r0, [fp]
9001c516:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
9001c51a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001c51e:	6803      	ldr	r3, [r0, #0]
9001c520:	9109      	str	r1, [sp, #36]	; 0x24
9001c522:	9208      	str	r2, [sp, #32]
9001c524:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001c526:	4798      	blx	r3
9001c528:	f010 0f01 	tst.w	r0, #1
9001c52c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001c530:	d012      	beq.n	9001c558 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
9001c532:	f8db 0000 	ldr.w	r0, [fp]
9001c536:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
9001c53a:	6803      	ldr	r3, [r0, #0]
9001c53c:	9200      	str	r2, [sp, #0]
9001c53e:	6ede      	ldr	r6, [r3, #108]	; 0x6c
9001c540:	462b      	mov	r3, r5
9001c542:	e898 0006 	ldmia.w	r8, {r1, r2}
9001c546:	47b0      	blx	r6
9001c548:	9b03      	ldr	r3, [sp, #12]
9001c54a:	8023      	strh	r3, [r4, #0]
9001c54c:	9b04      	ldr	r3, [sp, #16]
9001c54e:	8063      	strh	r3, [r4, #2]
9001c550:	9b05      	ldr	r3, [sp, #20]
9001c552:	80a3      	strh	r3, [r4, #4]
9001c554:	9b06      	ldr	r3, [sp, #24]
9001c556:	e78b      	b.n	9001c470 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
9001c558:	fb09 f202 	mul.w	r2, r9, r2
9001c55c:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
9001c560:	eb02 0141 	add.w	r1, r2, r1, lsl #1
9001c564:	440f      	add	r7, r1
9001c566:	b166      	cbz	r6, 9001c582 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001c568:	9a07      	ldr	r2, [sp, #28]
9001c56a:	4592      	cmp	sl, r2
9001c56c:	d109      	bne.n	9001c582 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001c56e:	f8db 0000 	ldr.w	r0, [fp]
9001c572:	fb09 f303 	mul.w	r3, r9, r3
9001c576:	4629      	mov	r1, r5
9001c578:	6802      	ldr	r2, [r0, #0]
9001c57a:	6b56      	ldr	r6, [r2, #52]	; 0x34
9001c57c:	463a      	mov	r2, r7
9001c57e:	47b0      	blx	r6
9001c580:	e7e2      	b.n	9001c548 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001c582:	fb0a f303 	mul.w	r3, sl, r3
9001c586:	ea4f 064a 	mov.w	r6, sl, lsl #1
9001c58a:	f8df b038 	ldr.w	fp, [pc, #56]	; 9001c5c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001c58e:	eb05 0843 	add.w	r8, r5, r3, lsl #1
9001c592:	4545      	cmp	r5, r8
9001c594:	d2d8      	bcs.n	9001c548 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001c596:	f8db 0000 	ldr.w	r0, [fp]
9001c59a:	4629      	mov	r1, r5
9001c59c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9001c5a0:	4435      	add	r5, r6
9001c5a2:	6802      	ldr	r2, [r0, #0]
9001c5a4:	005b      	lsls	r3, r3, #1
9001c5a6:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
9001c5aa:	463a      	mov	r2, r7
9001c5ac:	47d0      	blx	sl
9001c5ae:	444f      	add	r7, r9
9001c5b0:	e7ef      	b.n	9001c592 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
9001c5b2:	bf00      	nop
9001c5b4:	240235a0 	.word	0x240235a0
9001c5b8:	240235a2 	.word	0x240235a2
9001c5bc:	240235a4 	.word	0x240235a4
9001c5c0:	240235a6 	.word	0x240235a6
9001c5c4:	240235ac 	.word	0x240235ac

9001c5c8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
9001c5c8:	b5f0      	push	{r4, r5, r6, r7, lr}
9001c5ca:	4606      	mov	r6, r0
9001c5cc:	b087      	sub	sp, #28
9001c5ce:	460c      	mov	r4, r1
9001c5d0:	4617      	mov	r7, r2
9001c5d2:	461d      	mov	r5, r3
9001c5d4:	b333      	cbz	r3, 9001c624 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001c5d6:	4608      	mov	r0, r1
9001c5d8:	f7f3 fe19 	bl	9001020e <_ZNK8touchgfx4Rect7isEmptyEv>
9001c5dc:	bb10      	cbnz	r0, 9001c624 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001c5de:	6820      	ldr	r0, [r4, #0]
9001c5e0:	ab04      	add	r3, sp, #16
9001c5e2:	6861      	ldr	r1, [r4, #4]
9001c5e4:	4c1b      	ldr	r4, [pc, #108]	; (9001c654 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
9001c5e6:	c303      	stmia	r3!, {r0, r1}
9001c5e8:	a804      	add	r0, sp, #16
9001c5ea:	f7f8 fb37 	bl	90014c5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c5ee:	6820      	ldr	r0, [r4, #0]
9001c5f0:	6803      	ldr	r3, [r0, #0]
9001c5f2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001c5f4:	4798      	blx	r3
9001c5f6:	2dff      	cmp	r5, #255	; 0xff
9001c5f8:	d016      	beq.n	9001c628 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
9001c5fa:	f010 0f08 	tst.w	r0, #8
9001c5fe:	6820      	ldr	r0, [r4, #0]
9001c600:	d015      	beq.n	9001c62e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
9001c602:	2400      	movs	r4, #0
9001c604:	6801      	ldr	r1, [r0, #0]
9001c606:	f8bd 3012 	ldrh.w	r3, [sp, #18]
9001c60a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001c60e:	e9cd 5402 	strd	r5, r4, [sp, #8]
9001c612:	f8bd 4016 	ldrh.w	r4, [sp, #22]
9001c616:	9401      	str	r4, [sp, #4]
9001c618:	f8bd 4014 	ldrh.w	r4, [sp, #20]
9001c61c:	9400      	str	r4, [sp, #0]
9001c61e:	6e0c      	ldr	r4, [r1, #96]	; 0x60
9001c620:	4639      	mov	r1, r7
9001c622:	47a0      	blx	r4
9001c624:	b007      	add	sp, #28
9001c626:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001c628:	f010 0f02 	tst.w	r0, #2
9001c62c:	e7e7      	b.n	9001c5fe <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
9001c62e:	6803      	ldr	r3, [r0, #0]
9001c630:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001c632:	4798      	blx	r3
9001c634:	4b08      	ldr	r3, [pc, #32]	; (9001c658 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
9001c636:	4601      	mov	r1, r0
9001c638:	4630      	mov	r0, r6
9001c63a:	881a      	ldrh	r2, [r3, #0]
9001c63c:	6833      	ldr	r3, [r6, #0]
9001c63e:	e9cd 7500 	strd	r7, r5, [sp]
9001c642:	6a5d      	ldr	r5, [r3, #36]	; 0x24
9001c644:	ab04      	add	r3, sp, #16
9001c646:	47a8      	blx	r5
9001c648:	6820      	ldr	r0, [r4, #0]
9001c64a:	6803      	ldr	r3, [r0, #0]
9001c64c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001c64e:	4798      	blx	r3
9001c650:	e7e8      	b.n	9001c624 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001c652:	bf00      	nop
9001c654:	240235ac 	.word	0x240235ac
9001c658:	240235a6 	.word	0x240235a6

9001c65c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
9001c65c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001c660:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
9001c664:	4688      	mov	r8, r1
9001c666:	4614      	mov	r4, r2
9001c668:	461d      	mov	r5, r3
9001c66a:	9e08      	ldr	r6, [sp, #32]
9001c66c:	2f00      	cmp	r7, #0
9001c66e:	f000 80ab 	beq.w	9001c7c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001c672:	4618      	mov	r0, r3
9001c674:	f7f3 fdcb 	bl	9001020e <_ZNK8touchgfx4Rect7isEmptyEv>
9001c678:	2800      	cmp	r0, #0
9001c67a:	f040 80a5 	bne.w	9001c7c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001c67e:	f9b5 1000 	ldrsh.w	r1, [r5]
9001c682:	2fff      	cmp	r7, #255	; 0xff
9001c684:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
9001c688:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
9001c68c:	fb04 1303 	mla	r3, r4, r3, r1
9001c690:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
9001c694:	eba4 0200 	sub.w	r2, r4, r0
9001c698:	eb08 0143 	add.w	r1, r8, r3, lsl #1
9001c69c:	fb04 f505 	mul.w	r5, r4, r5
9001c6a0:	ea4f 2816 	mov.w	r8, r6, lsr #8
9001c6a4:	eb01 0545 	add.w	r5, r1, r5, lsl #1
9001c6a8:	d04a      	beq.n	9001c740 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
9001c6aa:	b2bc      	uxth	r4, r7
9001c6ac:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
9001c6b0:	f3c6 4e07 	ubfx	lr, r6, #16, #8
9001c6b4:	fa5f f788 	uxtb.w	r7, r8
9001c6b8:	b2f3      	uxtb	r3, r6
9001c6ba:	0040      	lsls	r0, r0, #1
9001c6bc:	fb0e fe04 	mul.w	lr, lr, r4
9001c6c0:	4367      	muls	r7, r4
9001c6c2:	ea4f 0842 	mov.w	r8, r2, lsl #1
9001c6c6:	4363      	muls	r3, r4
9001c6c8:	fa1f fc8c 	uxth.w	ip, ip
9001c6cc:	42a9      	cmp	r1, r5
9001c6ce:	d27b      	bcs.n	9001c7c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001c6d0:	eb01 0900 	add.w	r9, r1, r0
9001c6d4:	4549      	cmp	r1, r9
9001c6d6:	d231      	bcs.n	9001c73c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
9001c6d8:	880a      	ldrh	r2, [r1, #0]
9001c6da:	1214      	asrs	r4, r2, #8
9001c6dc:	10d6      	asrs	r6, r2, #3
9001c6de:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
9001c6e2:	00d2      	lsls	r2, r2, #3
9001c6e4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001c6e8:	b2d2      	uxtb	r2, r2
9001c6ea:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001c6ee:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001c6f2:	fb14 f40c 	smulbb	r4, r4, ip
9001c6f6:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001c6fa:	fb12 f20c 	smulbb	r2, r2, ip
9001c6fe:	fb16 f60c 	smulbb	r6, r6, ip
9001c702:	4474      	add	r4, lr
9001c704:	441a      	add	r2, r3
9001c706:	b2a4      	uxth	r4, r4
9001c708:	443e      	add	r6, r7
9001c70a:	b292      	uxth	r2, r2
9001c70c:	f104 0a01 	add.w	sl, r4, #1
9001c710:	b2b6      	uxth	r6, r6
9001c712:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9001c716:	f102 0a01 	add.w	sl, r2, #1
9001c71a:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
9001c71e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
9001c722:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001c726:	4322      	orrs	r2, r4
9001c728:	1c74      	adds	r4, r6, #1
9001c72a:	eb04 2616 	add.w	r6, r4, r6, lsr #8
9001c72e:	0976      	lsrs	r6, r6, #5
9001c730:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001c734:	4332      	orrs	r2, r6
9001c736:	f821 2b02 	strh.w	r2, [r1], #2
9001c73a:	e7cb      	b.n	9001c6d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
9001c73c:	4441      	add	r1, r8
9001c73e:	e7c5      	b.n	9001c6cc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
9001c740:	0973      	lsrs	r3, r6, #5
9001c742:	4f22      	ldr	r7, [pc, #136]	; (9001c7cc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
9001c744:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001c748:	ea08 0707 	and.w	r7, r8, r7
9001c74c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001c750:	433b      	orrs	r3, r7
9001c752:	07e7      	lsls	r7, r4, #31
9001c754:	ea43 0306 	orr.w	r3, r3, r6
9001c758:	b29b      	uxth	r3, r3
9001c75a:	d50b      	bpl.n	9001c774 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
9001c75c:	0040      	lsls	r0, r0, #1
9001c75e:	0052      	lsls	r2, r2, #1
9001c760:	42a9      	cmp	r1, r5
9001c762:	d231      	bcs.n	9001c7c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001c764:	180c      	adds	r4, r1, r0
9001c766:	42a1      	cmp	r1, r4
9001c768:	d202      	bcs.n	9001c770 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
9001c76a:	f821 3b02 	strh.w	r3, [r1], #2
9001c76e:	e7fa      	b.n	9001c766 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
9001c770:	4411      	add	r1, r2
9001c772:	e7f5      	b.n	9001c760 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
9001c774:	078e      	lsls	r6, r1, #30
9001c776:	d008      	beq.n	9001c78a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
9001c778:	0066      	lsls	r6, r4, #1
9001c77a:	460a      	mov	r2, r1
9001c77c:	42aa      	cmp	r2, r5
9001c77e:	d202      	bcs.n	9001c786 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
9001c780:	8013      	strh	r3, [r2, #0]
9001c782:	4432      	add	r2, r6
9001c784:	e7fa      	b.n	9001c77c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
9001c786:	3102      	adds	r1, #2
9001c788:	3801      	subs	r0, #1
9001c78a:	07c2      	lsls	r2, r0, #31
9001c78c:	d50b      	bpl.n	9001c7a6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
9001c78e:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
9001c792:	0066      	lsls	r6, r4, #1
9001c794:	3a01      	subs	r2, #1
9001c796:	eb01 0242 	add.w	r2, r1, r2, lsl #1
9001c79a:	42aa      	cmp	r2, r5
9001c79c:	d202      	bcs.n	9001c7a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
9001c79e:	8013      	strh	r3, [r2, #0]
9001c7a0:	4432      	add	r2, r6
9001c7a2:	e7fa      	b.n	9001c79a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
9001c7a4:	3801      	subs	r0, #1
9001c7a6:	b178      	cbz	r0, 9001c7c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001c7a8:	1040      	asrs	r0, r0, #1
9001c7aa:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
9001c7ae:	0080      	lsls	r0, r0, #2
9001c7b0:	0064      	lsls	r4, r4, #1
9001c7b2:	42a9      	cmp	r1, r5
9001c7b4:	d208      	bcs.n	9001c7c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001c7b6:	180e      	adds	r6, r1, r0
9001c7b8:	460a      	mov	r2, r1
9001c7ba:	42b2      	cmp	r2, r6
9001c7bc:	d202      	bcs.n	9001c7c4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
9001c7be:	f842 3b04 	str.w	r3, [r2], #4
9001c7c2:	e7fa      	b.n	9001c7ba <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
9001c7c4:	4421      	add	r1, r4
9001c7c6:	e7f4      	b.n	9001c7b2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
9001c7c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001c7cc:	00fff800 	.word	0x00fff800

9001c7d0 <_ZN8touchgfx8LCD16bppC1Ev>:
9001c7d0:	2200      	movs	r2, #0
9001c7d2:	4912      	ldr	r1, [pc, #72]	; (9001c81c <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
9001c7d4:	e9c0 2201 	strd	r2, r2, [r0, #4]
9001c7d8:	6001      	str	r1, [r0, #0]
9001c7da:	e9c0 2203 	strd	r2, r2, [r0, #12]
9001c7de:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001c7e2:	e9c0 2207 	strd	r2, r2, [r0, #28]
9001c7e6:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
9001c7ea:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
9001c7ee:	e9c0 220d 	strd	r2, r2, [r0, #52]	; 0x34
9001c7f2:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
9001c7f6:	e9c0 2211 	strd	r2, r2, [r0, #68]	; 0x44
9001c7fa:	e9c0 2213 	strd	r2, r2, [r0, #76]	; 0x4c
9001c7fe:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
9001c802:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
9001c806:	e9c0 2219 	strd	r2, r2, [r0, #100]	; 0x64
9001c80a:	e9c0 221b 	strd	r2, r2, [r0, #108]	; 0x6c
9001c80e:	e9c0 221d 	strd	r2, r2, [r0, #116]	; 0x74
9001c812:	e9c0 221f 	strd	r2, r2, [r0, #124]	; 0x7c
9001c816:	f8c0 2084 	str.w	r2, [r0, #132]	; 0x84
9001c81a:	4770      	bx	lr
9001c81c:	9002abf0 	.word	0x9002abf0

9001c820 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
9001c820:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c824:	b08d      	sub	sp, #52	; 0x34
9001c826:	460d      	mov	r5, r1
9001c828:	4604      	mov	r4, r0
9001c82a:	4699      	mov	r9, r3
9001c82c:	6808      	ldr	r0, [r1, #0]
9001c82e:	ab08      	add	r3, sp, #32
9001c830:	6849      	ldr	r1, [r1, #4]
9001c832:	c303      	stmia	r3!, {r0, r1}
9001c834:	6810      	ldr	r0, [r2, #0]
9001c836:	ab0a      	add	r3, sp, #40	; 0x28
9001c838:	6851      	ldr	r1, [r2, #4]
9001c83a:	c303      	stmia	r3!, {r0, r1}
9001c83c:	a808      	add	r0, sp, #32
9001c83e:	f7f8 fa0d 	bl	90014c5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c842:	4629      	mov	r1, r5
9001c844:	a80a      	add	r0, sp, #40	; 0x28
9001c846:	4d67      	ldr	r5, [pc, #412]	; (9001c9e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001c848:	f7f8 fa4c 	bl	90014ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c84c:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
9001c850:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
9001c854:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
9001c858:	6828      	ldr	r0, [r5, #0]
9001c85a:	fb11 2103 	smlabb	r1, r1, r3, r2
9001c85e:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
9001c862:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
9001c866:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001c86a:	f8bd 1020 	ldrh.w	r1, [sp, #32]
9001c86e:	440a      	add	r2, r1
9001c870:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
9001c874:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
9001c878:	4413      	add	r3, r2
9001c87a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
9001c87e:	6803      	ldr	r3, [r0, #0]
9001c880:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001c882:	4798      	blx	r3
9001c884:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001c888:	d119      	bne.n	9001c8be <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
9001c88a:	f010 0f20 	tst.w	r0, #32
9001c88e:	6828      	ldr	r0, [r5, #0]
9001c890:	d018      	beq.n	9001c8c4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
9001c892:	2500      	movs	r5, #0
9001c894:	6801      	ldr	r1, [r0, #0]
9001c896:	b2b6      	uxth	r6, r6
9001c898:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001c89c:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
9001c8a0:	9601      	str	r6, [sp, #4]
9001c8a2:	e9cd 9503 	strd	r9, r5, [sp, #12]
9001c8a6:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
9001c8aa:	9502      	str	r5, [sp, #8]
9001c8ac:	fa1f f588 	uxth.w	r5, r8
9001c8b0:	9500      	str	r5, [sp, #0]
9001c8b2:	6d0d      	ldr	r5, [r1, #80]	; 0x50
9001c8b4:	4621      	mov	r1, r4
9001c8b6:	47a8      	blx	r5
9001c8b8:	b00d      	add	sp, #52	; 0x34
9001c8ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c8be:	f010 0f40 	tst.w	r0, #64	; 0x40
9001c8c2:	e7e4      	b.n	9001c88e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
9001c8c4:	6803      	ldr	r3, [r0, #0]
9001c8c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001c8c8:	4798      	blx	r3
9001c8ca:	4947      	ldr	r1, [pc, #284]	; (9001c9e8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
9001c8cc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001c8d0:	880b      	ldrh	r3, [r1, #0]
9001c8d2:	468a      	mov	sl, r1
9001c8d4:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
9001c8d8:	fb03 5202 	mla	r2, r3, r2, r5
9001c8dc:	4373      	muls	r3, r6
9001c8de:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001c8e2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001c8e6:	9307      	str	r3, [sp, #28]
9001c8e8:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001c8ec:	9306      	str	r3, [sp, #24]
9001c8ee:	9b07      	ldr	r3, [sp, #28]
9001c8f0:	4298      	cmp	r0, r3
9001c8f2:	d270      	bcs.n	9001c9d6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
9001c8f4:	9b06      	ldr	r3, [sp, #24]
9001c8f6:	4621      	mov	r1, r4
9001c8f8:	eb00 0b03 	add.w	fp, r0, r3
9001c8fc:	4558      	cmp	r0, fp
9001c8fe:	d25d      	bcs.n	9001c9bc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
9001c900:	f851 4b04 	ldr.w	r4, [r1], #4
9001c904:	0e23      	lsrs	r3, r4, #24
9001c906:	d014      	beq.n	9001c932 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001c908:	2bff      	cmp	r3, #255	; 0xff
9001c90a:	ea4f 2c14 	mov.w	ip, r4, lsr #8
9001c90e:	d112      	bne.n	9001c936 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001c910:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001c914:	d10f      	bne.n	9001c936 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001c916:	0963      	lsrs	r3, r4, #5
9001c918:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
9001c91c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001c920:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001c924:	f02c 0c07 	bic.w	ip, ip, #7
9001c928:	ea43 0c0c 	orr.w	ip, r3, ip
9001c92c:	ea4c 0404 	orr.w	r4, ip, r4
9001c930:	8004      	strh	r4, [r0, #0]
9001c932:	3002      	adds	r0, #2
9001c934:	e7e2      	b.n	9001c8fc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
9001c936:	fb09 f303 	mul.w	r3, r9, r3
9001c93a:	8807      	ldrh	r7, [r0, #0]
9001c93c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
9001c940:	fa5f fc8c 	uxtb.w	ip, ip
9001c944:	1c5a      	adds	r2, r3, #1
9001c946:	123e      	asrs	r6, r7, #8
9001c948:	10fd      	asrs	r5, r7, #3
9001c94a:	eb02 2223 	add.w	r2, r2, r3, asr #8
9001c94e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001c952:	00ff      	lsls	r7, r7, #3
9001c954:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001c958:	1212      	asrs	r2, r2, #8
9001c95a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001c95e:	b293      	uxth	r3, r2
9001c960:	43d2      	mvns	r2, r2
9001c962:	b2ff      	uxtb	r7, r7
9001c964:	fb1e fe03 	smulbb	lr, lr, r3
9001c968:	b2d2      	uxtb	r2, r2
9001c96a:	fb1c fc03 	smulbb	ip, ip, r3
9001c96e:	b2e4      	uxtb	r4, r4
9001c970:	fb06 e602 	mla	r6, r6, r2, lr
9001c974:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001c978:	fb14 f403 	smulbb	r4, r4, r3
9001c97c:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001c980:	b2b6      	uxth	r6, r6
9001c982:	fb05 c502 	mla	r5, r5, r2, ip
9001c986:	fb07 4702 	mla	r7, r7, r2, r4
9001c98a:	f106 0e01 	add.w	lr, r6, #1
9001c98e:	b2ad      	uxth	r5, r5
9001c990:	b2bf      	uxth	r7, r7
9001c992:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
9001c996:	f105 0c01 	add.w	ip, r5, #1
9001c99a:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
9001c99e:	1c7e      	adds	r6, r7, #1
9001c9a0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001c9a4:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001c9a8:	096d      	lsrs	r5, r5, #5
9001c9aa:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001c9ae:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001c9b2:	ea46 060e 	orr.w	r6, r6, lr
9001c9b6:	432e      	orrs	r6, r5
9001c9b8:	8006      	strh	r6, [r0, #0]
9001c9ba:	e7ba      	b.n	9001c932 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001c9bc:	f8ba 3000 	ldrh.w	r3, [sl]
9001c9c0:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
9001c9c4:	eba3 0308 	sub.w	r3, r3, r8
9001c9c8:	eba4 0408 	sub.w	r4, r4, r8
9001c9cc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001c9d0:	eb01 0484 	add.w	r4, r1, r4, lsl #2
9001c9d4:	e78b      	b.n	9001c8ee <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
9001c9d6:	4b03      	ldr	r3, [pc, #12]	; (9001c9e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001c9d8:	6818      	ldr	r0, [r3, #0]
9001c9da:	6803      	ldr	r3, [r0, #0]
9001c9dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001c9de:	4798      	blx	r3
9001c9e0:	e76a      	b.n	9001c8b8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
9001c9e2:	bf00      	nop
9001c9e4:	240235ac 	.word	0x240235ac
9001c9e8:	240235a6 	.word	0x240235a6

9001c9ec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
9001c9ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001c9f0:	b085      	sub	sp, #20
9001c9f2:	6810      	ldr	r0, [r2, #0]
9001c9f4:	460c      	mov	r4, r1
9001c9f6:	6851      	ldr	r1, [r2, #4]
9001c9f8:	466d      	mov	r5, sp
9001c9fa:	4616      	mov	r6, r2
9001c9fc:	c503      	stmia	r5!, {r0, r1}
9001c9fe:	6818      	ldr	r0, [r3, #0]
9001ca00:	6859      	ldr	r1, [r3, #4]
9001ca02:	c503      	stmia	r5!, {r0, r1}
9001ca04:	4668      	mov	r0, sp
9001ca06:	4d2e      	ldr	r5, [pc, #184]	; (9001cac0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
9001ca08:	f7f8 f928 	bl	90014c5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ca0c:	4631      	mov	r1, r6
9001ca0e:	a802      	add	r0, sp, #8
9001ca10:	4e2c      	ldr	r6, [pc, #176]	; (9001cac4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
9001ca12:	f7f8 f967 	bl	90014ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ca16:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
9001ca1a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
9001ca1e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001ca22:	6828      	ldr	r0, [r5, #0]
9001ca24:	fb11 2103 	smlabb	r1, r1, r3, r2
9001ca28:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001ca2c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
9001ca30:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001ca34:	f8bd 1000 	ldrh.w	r1, [sp]
9001ca38:	440a      	add	r2, r1
9001ca3a:	f8ad 2008 	strh.w	r2, [sp, #8]
9001ca3e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001ca42:	4413      	add	r3, r2
9001ca44:	f8ad 300a 	strh.w	r3, [sp, #10]
9001ca48:	6803      	ldr	r3, [r0, #0]
9001ca4a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001ca4c:	4798      	blx	r3
9001ca4e:	8833      	ldrh	r3, [r6, #0]
9001ca50:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
9001ca54:	ea4f 0c47 	mov.w	ip, r7, lsl #1
9001ca58:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001ca5c:	f8df e068 	ldr.w	lr, [pc, #104]	; 9001cac8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
9001ca60:	fb03 1202 	mla	r2, r3, r2, r1
9001ca64:	fb08 f303 	mul.w	r3, r8, r3
9001ca68:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001ca6c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001ca70:	4298      	cmp	r0, r3
9001ca72:	d21d      	bcs.n	9001cab0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
9001ca74:	eb00 080c 	add.w	r8, r0, ip
9001ca78:	4540      	cmp	r0, r8
9001ca7a:	d20f      	bcs.n	9001ca9c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
9001ca7c:	f854 1b04 	ldr.w	r1, [r4], #4
9001ca80:	ea4f 1951 	mov.w	r9, r1, lsr #5
9001ca84:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
9001ca88:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9001ca8c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001ca90:	ea42 0209 	orr.w	r2, r2, r9
9001ca94:	430a      	orrs	r2, r1
9001ca96:	f820 2b02 	strh.w	r2, [r0], #2
9001ca9a:	e7ed      	b.n	9001ca78 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
9001ca9c:	8832      	ldrh	r2, [r6, #0]
9001ca9e:	1bd2      	subs	r2, r2, r7
9001caa0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001caa4:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
9001caa8:	1bd2      	subs	r2, r2, r7
9001caaa:	eb04 0482 	add.w	r4, r4, r2, lsl #2
9001caae:	e7df      	b.n	9001ca70 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
9001cab0:	6828      	ldr	r0, [r5, #0]
9001cab2:	6803      	ldr	r3, [r0, #0]
9001cab4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001cab6:	4798      	blx	r3
9001cab8:	b005      	add	sp, #20
9001caba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001cabe:	bf00      	nop
9001cac0:	240235ac 	.word	0x240235ac
9001cac4:	240235a6 	.word	0x240235a6
9001cac8:	fffff800 	.word	0xfffff800

9001cacc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
9001cacc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001cad0:	b08e      	sub	sp, #56	; 0x38
9001cad2:	460e      	mov	r6, r1
9001cad4:	4604      	mov	r4, r0
9001cad6:	461d      	mov	r5, r3
9001cad8:	6808      	ldr	r0, [r1, #0]
9001cada:	ab0a      	add	r3, sp, #40	; 0x28
9001cadc:	6849      	ldr	r1, [r1, #4]
9001cade:	f8df 81d4 	ldr.w	r8, [pc, #468]	; 9001ccb4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
9001cae2:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 9001ccb8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
9001cae6:	c303      	stmia	r3!, {r0, r1}
9001cae8:	6810      	ldr	r0, [r2, #0]
9001caea:	ab0c      	add	r3, sp, #48	; 0x30
9001caec:	6851      	ldr	r1, [r2, #4]
9001caee:	c303      	stmia	r3!, {r0, r1}
9001caf0:	a80a      	add	r0, sp, #40	; 0x28
9001caf2:	f7f8 f8b3 	bl	90014c5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001caf6:	4631      	mov	r1, r6
9001caf8:	a80c      	add	r0, sp, #48	; 0x30
9001cafa:	f7f8 f8f3 	bl	90014ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001cafe:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
9001cb02:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
9001cb06:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
9001cb0a:	f8d8 0000 	ldr.w	r0, [r8]
9001cb0e:	fb11 2103 	smlabb	r1, r1, r3, r2
9001cb12:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
9001cb16:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001cb1a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9001cb1e:	440c      	add	r4, r1
9001cb20:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
9001cb24:	440a      	add	r2, r1
9001cb26:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
9001cb2a:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
9001cb2e:	4413      	add	r3, r2
9001cb30:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001cb34:	6803      	ldr	r3, [r0, #0]
9001cb36:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001cb38:	4798      	blx	r3
9001cb3a:	2dff      	cmp	r5, #255	; 0xff
9001cb3c:	d124      	bne.n	9001cb88 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
9001cb3e:	f010 0f01 	tst.w	r0, #1
9001cb42:	f8d8 0000 	ldr.w	r0, [r8]
9001cb46:	d022      	beq.n	9001cb8e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
9001cb48:	2100      	movs	r1, #0
9001cb4a:	f04f 0e01 	mov.w	lr, #1
9001cb4e:	f8d0 c000 	ldr.w	ip, [r0]
9001cb52:	b2b6      	uxth	r6, r6
9001cb54:	f8cd e018 	str.w	lr, [sp, #24]
9001cb58:	b2bf      	uxth	r7, r7
9001cb5a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
9001cb5e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
9001cb62:	e9cd 1107 	strd	r1, r1, [sp, #28]
9001cb66:	f8b9 e000 	ldrh.w	lr, [r9]
9001cb6a:	9503      	str	r5, [sp, #12]
9001cb6c:	9601      	str	r6, [sp, #4]
9001cb6e:	9700      	str	r7, [sp, #0]
9001cb70:	e9cd 1e04 	strd	r1, lr, [sp, #16]
9001cb74:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
9001cb78:	9102      	str	r1, [sp, #8]
9001cb7a:	4621      	mov	r1, r4
9001cb7c:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
9001cb80:	47a8      	blx	r5
9001cb82:	b00e      	add	sp, #56	; 0x38
9001cb84:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001cb88:	f010 0f04 	tst.w	r0, #4
9001cb8c:	e7d9      	b.n	9001cb42 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
9001cb8e:	6803      	ldr	r3, [r0, #0]
9001cb90:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001cb92:	4798      	blx	r3
9001cb94:	f8b9 3000 	ldrh.w	r3, [r9]
9001cb98:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001cb9c:	ea4f 0e47 	mov.w	lr, r7, lsl #1
9001cba0:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
9001cba4:	435e      	muls	r6, r3
9001cba6:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
9001cbaa:	2dff      	cmp	r5, #255	; 0xff
9001cbac:	fb03 1202 	mla	r2, r3, r2, r1
9001cbb0:	ebac 0c07 	sub.w	ip, ip, r7
9001cbb4:	eba3 0707 	sub.w	r7, r3, r7
9001cbb8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001cbbc:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
9001cbc0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001cbc4:	ea4f 0747 	mov.w	r7, r7, lsl #1
9001cbc8:	d049      	beq.n	9001cc5e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
9001cbca:	43eb      	mvns	r3, r5
9001cbcc:	fa1f f985 	uxth.w	r9, r5
9001cbd0:	b2db      	uxtb	r3, r3
9001cbd2:	42b0      	cmp	r0, r6
9001cbd4:	d266      	bcs.n	9001cca4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001cbd6:	eb00 0a0e 	add.w	sl, r0, lr
9001cbda:	4550      	cmp	r0, sl
9001cbdc:	4621      	mov	r1, r4
9001cbde:	f104 0403 	add.w	r4, r4, #3
9001cbe2:	d25b      	bcs.n	9001cc9c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
9001cbe4:	8802      	ldrh	r2, [r0, #0]
9001cbe6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001cbea:	ea4f 2822 	mov.w	r8, r2, asr #8
9001cbee:	fb11 f109 	smulbb	r1, r1, r9
9001cbf2:	10d5      	asrs	r5, r2, #3
9001cbf4:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
9001cbf8:	00d2      	lsls	r2, r2, #3
9001cbfa:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001cbfe:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
9001cc02:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001cc06:	fb08 1803 	mla	r8, r8, r3, r1
9001cc0a:	f814 1c02 	ldrb.w	r1, [r4, #-2]
9001cc0e:	b2d2      	uxtb	r2, r2
9001cc10:	fb11 f109 	smulbb	r1, r1, r9
9001cc14:	fa1f f888 	uxth.w	r8, r8
9001cc18:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001cc1c:	fb05 1503 	mla	r5, r5, r3, r1
9001cc20:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001cc24:	fb11 f109 	smulbb	r1, r1, r9
9001cc28:	b2ad      	uxth	r5, r5
9001cc2a:	fb02 1203 	mla	r2, r2, r3, r1
9001cc2e:	f108 0101 	add.w	r1, r8, #1
9001cc32:	b292      	uxth	r2, r2
9001cc34:	eb01 2818 	add.w	r8, r1, r8, lsr #8
9001cc38:	1c51      	adds	r1, r2, #1
9001cc3a:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
9001cc3e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001cc42:	1c69      	adds	r1, r5, #1
9001cc44:	eb01 2515 	add.w	r5, r1, r5, lsr #8
9001cc48:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001cc4c:	096d      	lsrs	r5, r5, #5
9001cc4e:	ea42 0208 	orr.w	r2, r2, r8
9001cc52:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001cc56:	432a      	orrs	r2, r5
9001cc58:	f820 2b02 	strh.w	r2, [r0], #2
9001cc5c:	e7bd      	b.n	9001cbda <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
9001cc5e:	4a14      	ldr	r2, [pc, #80]	; (9001ccb0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
9001cc60:	42b0      	cmp	r0, r6
9001cc62:	d21f      	bcs.n	9001cca4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001cc64:	eb00 050e 	add.w	r5, r0, lr
9001cc68:	42a8      	cmp	r0, r5
9001cc6a:	4621      	mov	r1, r4
9001cc6c:	f104 0403 	add.w	r4, r4, #3
9001cc70:	d210      	bcs.n	9001cc94 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
9001cc72:	f814 3c02 	ldrb.w	r3, [r4, #-2]
9001cc76:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001cc7a:	00db      	lsls	r3, r3, #3
9001cc7c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
9001cc80:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001cc84:	430b      	orrs	r3, r1
9001cc86:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001cc8a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
9001cc8e:	f820 3b02 	strh.w	r3, [r0], #2
9001cc92:	e7e9      	b.n	9001cc68 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
9001cc94:	4438      	add	r0, r7
9001cc96:	eb01 040c 	add.w	r4, r1, ip
9001cc9a:	e7e1      	b.n	9001cc60 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
9001cc9c:	4438      	add	r0, r7
9001cc9e:	eb01 040c 	add.w	r4, r1, ip
9001cca2:	e796      	b.n	9001cbd2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
9001cca4:	4b03      	ldr	r3, [pc, #12]	; (9001ccb4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
9001cca6:	6818      	ldr	r0, [r3, #0]
9001cca8:	6803      	ldr	r3, [r0, #0]
9001ccaa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001ccac:	4798      	blx	r3
9001ccae:	e768      	b.n	9001cb82 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
9001ccb0:	fffff800 	.word	0xfffff800
9001ccb4:	240235ac 	.word	0x240235ac
9001ccb8:	240235a6 	.word	0x240235a6

9001ccbc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
9001ccbc:	b4f0      	push	{r4, r5, r6, r7}
9001ccbe:	4616      	mov	r6, r2
9001ccc0:	461c      	mov	r4, r3
9001ccc2:	460d      	mov	r5, r1
9001ccc4:	9a04      	ldr	r2, [sp, #16]
9001ccc6:	2e01      	cmp	r6, #1
9001ccc8:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001cccc:	f89d 7018 	ldrb.w	r7, [sp, #24]
9001ccd0:	d012      	beq.n	9001ccf8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
9001ccd2:	d303      	bcc.n	9001ccdc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
9001ccd4:	2e02      	cmp	r6, #2
9001ccd6:	d00a      	beq.n	9001ccee <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
9001ccd8:	bcf0      	pop	{r4, r5, r6, r7}
9001ccda:	4770      	bx	lr
9001ccdc:	6805      	ldr	r5, [r0, #0]
9001ccde:	e9cd 3704 	strd	r3, r7, [sp, #16]
9001cce2:	68ed      	ldr	r5, [r5, #12]
9001cce4:	4613      	mov	r3, r2
9001cce6:	4622      	mov	r2, r4
9001cce8:	46ac      	mov	ip, r5
9001ccea:	bcf0      	pop	{r4, r5, r6, r7}
9001ccec:	4760      	bx	ip
9001ccee:	4621      	mov	r1, r4
9001ccf0:	4628      	mov	r0, r5
9001ccf2:	bcf0      	pop	{r4, r5, r6, r7}
9001ccf4:	f7ff bd94 	b.w	9001c820 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001ccf8:	4621      	mov	r1, r4
9001ccfa:	4628      	mov	r0, r5
9001ccfc:	bcf0      	pop	{r4, r5, r6, r7}
9001ccfe:	f7ff bee5 	b.w	9001cacc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

9001cd04 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
9001cd04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cd08:	b093      	sub	sp, #76	; 0x4c
9001cd0a:	4681      	mov	r9, r0
9001cd0c:	4688      	mov	r8, r1
9001cd0e:	6810      	ldr	r0, [r2, #0]
9001cd10:	6851      	ldr	r1, [r2, #4]
9001cd12:	ac0e      	add	r4, sp, #56	; 0x38
9001cd14:	4616      	mov	r6, r2
9001cd16:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
9001cd1a:	4f6b      	ldr	r7, [pc, #428]	; (9001cec8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
9001cd1c:	c403      	stmia	r4!, {r0, r1}
9001cd1e:	6818      	ldr	r0, [r3, #0]
9001cd20:	ac10      	add	r4, sp, #64	; 0x40
9001cd22:	6859      	ldr	r1, [r3, #4]
9001cd24:	c403      	stmia	r4!, {r0, r1}
9001cd26:	a80e      	add	r0, sp, #56	; 0x38
9001cd28:	f7f7 ff98 	bl	90014c5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001cd2c:	4631      	mov	r1, r6
9001cd2e:	a810      	add	r0, sp, #64	; 0x40
9001cd30:	4e66      	ldr	r6, [pc, #408]	; (9001cecc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001cd32:	f7f7 ffd7 	bl	90014ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001cd36:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
9001cd3a:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
9001cd3e:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
9001cd42:	6830      	ldr	r0, [r6, #0]
9001cd44:	fb11 2103 	smlabb	r1, r1, r3, r2
9001cd48:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
9001cd4c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
9001cd50:	4489      	add	r9, r1
9001cd52:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
9001cd56:	440a      	add	r2, r1
9001cd58:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
9001cd5c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
9001cd60:	4413      	add	r3, r2
9001cd62:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
9001cd66:	6803      	ldr	r3, [r0, #0]
9001cd68:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001cd6a:	4798      	blx	r3
9001cd6c:	f010 0f80 	tst.w	r0, #128	; 0x80
9001cd70:	6830      	ldr	r0, [r6, #0]
9001cd72:	d01d      	beq.n	9001cdb0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
9001cd74:	2200      	movs	r2, #0
9001cd76:	6801      	ldr	r1, [r0, #0]
9001cd78:	b2a4      	uxth	r4, r4
9001cd7a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
9001cd7e:	b2ad      	uxth	r5, r5
9001cd80:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001cd84:	220b      	movs	r2, #11
9001cd86:	9207      	str	r2, [sp, #28]
9001cd88:	883a      	ldrh	r2, [r7, #0]
9001cd8a:	9502      	str	r5, [sp, #8]
9001cd8c:	9206      	str	r2, [sp, #24]
9001cd8e:	2201      	movs	r2, #1
9001cd90:	9401      	str	r4, [sp, #4]
9001cd92:	e9cd a204 	strd	sl, r2, [sp, #16]
9001cd96:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
9001cd9a:	9203      	str	r2, [sp, #12]
9001cd9c:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
9001cda0:	9200      	str	r2, [sp, #0]
9001cda2:	4642      	mov	r2, r8
9001cda4:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
9001cda6:	4649      	mov	r1, r9
9001cda8:	47a0      	blx	r4
9001cdaa:	b013      	add	sp, #76	; 0x4c
9001cdac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001cdb0:	6803      	ldr	r3, [r0, #0]
9001cdb2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001cdb4:	4798      	blx	r3
9001cdb6:	883b      	ldrh	r3, [r7, #0]
9001cdb8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001cdbc:	f04f 0e04 	mov.w	lr, #4
9001cdc0:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
9001cdc4:	435d      	muls	r5, r3
9001cdc6:	fb03 1202 	mla	r2, r3, r2, r1
9001cdca:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001cdce:	eb00 0245 	add.w	r2, r0, r5, lsl #1
9001cdd2:	920c      	str	r2, [sp, #48]	; 0x30
9001cdd4:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
9001cdd8:	1b12      	subs	r2, r2, r4
9001cdda:	920d      	str	r2, [sp, #52]	; 0x34
9001cddc:	0062      	lsls	r2, r4, #1
9001cdde:	1b1c      	subs	r4, r3, r4
9001cde0:	920a      	str	r2, [sp, #40]	; 0x28
9001cde2:	0063      	lsls	r3, r4, #1
9001cde4:	930b      	str	r3, [sp, #44]	; 0x2c
9001cde6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001cde8:	4298      	cmp	r0, r3
9001cdea:	d266      	bcs.n	9001ceba <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
9001cdec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001cdee:	eb00 0b03 	add.w	fp, r0, r3
9001cdf2:	4558      	cmp	r0, fp
9001cdf4:	d25c      	bcs.n	9001ceb0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
9001cdf6:	f819 3b01 	ldrb.w	r3, [r9], #1
9001cdfa:	fb1e e303 	smlabb	r3, lr, r3, lr
9001cdfe:	f858 2003 	ldr.w	r2, [r8, r3]
9001ce02:	0e11      	lsrs	r1, r2, #24
9001ce04:	d012      	beq.n	9001ce2c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001ce06:	29ff      	cmp	r1, #255	; 0xff
9001ce08:	ea4f 2712 	mov.w	r7, r2, lsr #8
9001ce0c:	d110      	bne.n	9001ce30 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001ce0e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001ce12:	d10d      	bne.n	9001ce30 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001ce14:	0953      	lsrs	r3, r2, #5
9001ce16:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
9001ce1a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001ce1e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001ce22:	f027 0707 	bic.w	r7, r7, #7
9001ce26:	431f      	orrs	r7, r3
9001ce28:	433a      	orrs	r2, r7
9001ce2a:	8002      	strh	r2, [r0, #0]
9001ce2c:	3002      	adds	r0, #2
9001ce2e:	e7e0      	b.n	9001cdf2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
9001ce30:	fb0a f101 	mul.w	r1, sl, r1
9001ce34:	8806      	ldrh	r6, [r0, #0]
9001ce36:	f3c2 4c07 	ubfx	ip, r2, #16, #8
9001ce3a:	b2d2      	uxtb	r2, r2
9001ce3c:	1c4b      	adds	r3, r1, #1
9001ce3e:	1235      	asrs	r5, r6, #8
9001ce40:	10f4      	asrs	r4, r6, #3
9001ce42:	eb03 2321 	add.w	r3, r3, r1, asr #8
9001ce46:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001ce4a:	00f6      	lsls	r6, r6, #3
9001ce4c:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
9001ce50:	121b      	asrs	r3, r3, #8
9001ce52:	b2f6      	uxtb	r6, r6
9001ce54:	b299      	uxth	r1, r3
9001ce56:	43db      	mvns	r3, r3
9001ce58:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001ce5c:	fb1c fc01 	smulbb	ip, ip, r1
9001ce60:	b2db      	uxtb	r3, r3
9001ce62:	fb12 f201 	smulbb	r2, r2, r1
9001ce66:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001ce6a:	fb05 c503 	mla	r5, r5, r3, ip
9001ce6e:	b2ff      	uxtb	r7, r7
9001ce70:	fb06 2203 	mla	r2, r6, r3, r2
9001ce74:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
9001ce78:	fb17 f701 	smulbb	r7, r7, r1
9001ce7c:	b2ad      	uxth	r5, r5
9001ce7e:	b292      	uxth	r2, r2
9001ce80:	fb04 7403 	mla	r4, r4, r3, r7
9001ce84:	f105 0c01 	add.w	ip, r5, #1
9001ce88:	1c57      	adds	r7, r2, #1
9001ce8a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001ce8e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9001ce92:	b2a4      	uxth	r4, r4
9001ce94:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9001ce98:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001ce9c:	433d      	orrs	r5, r7
9001ce9e:	1c67      	adds	r7, r4, #1
9001cea0:	eb07 2414 	add.w	r4, r7, r4, lsr #8
9001cea4:	0964      	lsrs	r4, r4, #5
9001cea6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9001ceaa:	4325      	orrs	r5, r4
9001ceac:	8005      	strh	r5, [r0, #0]
9001ceae:	e7bd      	b.n	9001ce2c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001ceb0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001ceb2:	4418      	add	r0, r3
9001ceb4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001ceb6:	4499      	add	r9, r3
9001ceb8:	e795      	b.n	9001cde6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
9001ceba:	4b04      	ldr	r3, [pc, #16]	; (9001cecc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001cebc:	6818      	ldr	r0, [r3, #0]
9001cebe:	6803      	ldr	r3, [r0, #0]
9001cec0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001cec2:	4798      	blx	r3
9001cec4:	e771      	b.n	9001cdaa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
9001cec6:	bf00      	nop
9001cec8:	240235a6 	.word	0x240235a6
9001cecc:	240235ac 	.word	0x240235ac

9001ced0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
9001ced0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ced4:	b087      	sub	sp, #28
9001ced6:	4680      	mov	r8, r0
9001ced8:	460d      	mov	r5, r1
9001ceda:	4614      	mov	r4, r2
9001cedc:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
9001cee0:	2e00      	cmp	r6, #0
9001cee2:	f000 80b9 	beq.w	9001d058 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
9001cee6:	6810      	ldr	r0, [r2, #0]
9001cee8:	af02      	add	r7, sp, #8
9001ceea:	6851      	ldr	r1, [r2, #4]
9001ceec:	c703      	stmia	r7!, {r0, r1}
9001ceee:	6818      	ldr	r0, [r3, #0]
9001cef0:	af04      	add	r7, sp, #16
9001cef2:	6859      	ldr	r1, [r3, #4]
9001cef4:	c703      	stmia	r7!, {r0, r1}
9001cef6:	a802      	add	r0, sp, #8
9001cef8:	f7f7 feb0 	bl	90014c5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001cefc:	4621      	mov	r1, r4
9001cefe:	a804      	add	r0, sp, #16
9001cf00:	f7f7 fef0 	bl	90014ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001cf04:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001cf08:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001cf0c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
9001cf10:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
9001cf14:	fb14 2103 	smlabb	r1, r4, r3, r2
9001cf18:	eb08 0401 	add.w	r4, r8, r1
9001cf1c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001cf20:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9001cf24:	440a      	add	r2, r1
9001cf26:	ea4f 0a48 	mov.w	sl, r8, lsl #1
9001cf2a:	f8ad 2010 	strh.w	r2, [sp, #16]
9001cf2e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001cf32:	4413      	add	r3, r2
9001cf34:	f8ad 3012 	strh.w	r3, [sp, #18]
9001cf38:	4b49      	ldr	r3, [pc, #292]	; (9001d060 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9001cf3a:	6818      	ldr	r0, [r3, #0]
9001cf3c:	6803      	ldr	r3, [r0, #0]
9001cf3e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001cf40:	4798      	blx	r3
9001cf42:	4b48      	ldr	r3, [pc, #288]	; (9001d064 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
9001cf44:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
9001cf48:	2eff      	cmp	r6, #255	; 0xff
9001cf4a:	881a      	ldrh	r2, [r3, #0]
9001cf4c:	f9bd c010 	ldrsh.w	ip, [sp, #16]
9001cf50:	fb02 c101 	mla	r1, r2, r1, ip
9001cf54:	fb02 f207 	mul.w	r2, r2, r7
9001cf58:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001cf5c:	f105 0104 	add.w	r1, r5, #4
9001cf60:	461d      	mov	r5, r3
9001cf62:	d05a      	beq.n	9001d01a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
9001cf64:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
9001cf68:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001cf6c:	b2b6      	uxth	r6, r6
9001cf6e:	9301      	str	r3, [sp, #4]
9001cf70:	fa1f fe8e 	uxth.w	lr, lr
9001cf74:	4282      	cmp	r2, r0
9001cf76:	d96a      	bls.n	9001d04e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9001cf78:	eb00 0b0a 	add.w	fp, r0, sl
9001cf7c:	4583      	cmp	fp, r0
9001cf7e:	d940      	bls.n	9001d002 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
9001cf80:	8805      	ldrh	r5, [r0, #0]
9001cf82:	f814 3b01 	ldrb.w	r3, [r4], #1
9001cf86:	122f      	asrs	r7, r5, #8
9001cf88:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9001cf8c:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001cf90:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001cf94:	00ed      	lsls	r5, r5, #3
9001cf96:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001cf9a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001cf9e:	fb17 f70e 	smulbb	r7, r7, lr
9001cfa2:	b2ed      	uxtb	r5, r5
9001cfa4:	fb19 f90e 	smulbb	r9, r9, lr
9001cfa8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001cfac:	fb15 f50e 	smulbb	r5, r5, lr
9001cfb0:	fb0c 7c06 	mla	ip, ip, r6, r7
9001cfb4:	10df      	asrs	r7, r3, #3
9001cfb6:	00db      	lsls	r3, r3, #3
9001cfb8:	fa1f fc8c 	uxth.w	ip, ip
9001cfbc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001cfc0:	b2db      	uxtb	r3, r3
9001cfc2:	fb07 9706 	mla	r7, r7, r6, r9
9001cfc6:	f10c 0901 	add.w	r9, ip, #1
9001cfca:	fb03 5306 	mla	r3, r3, r6, r5
9001cfce:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
9001cfd2:	b29b      	uxth	r3, r3
9001cfd4:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
9001cfd8:	b2bf      	uxth	r7, r7
9001cfda:	f103 0c01 	add.w	ip, r3, #1
9001cfde:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001cfe2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001cfe6:	ea4c 0c09 	orr.w	ip, ip, r9
9001cfea:	f107 0901 	add.w	r9, r7, #1
9001cfee:	eb09 2717 	add.w	r7, r9, r7, lsr #8
9001cff2:	097f      	lsrs	r7, r7, #5
9001cff4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9001cff8:	ea4c 0c07 	orr.w	ip, ip, r7
9001cffc:	f820 cb02 	strh.w	ip, [r0], #2
9001d000:	e7bc      	b.n	9001cf7c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
9001d002:	9b01      	ldr	r3, [sp, #4]
9001d004:	881b      	ldrh	r3, [r3, #0]
9001d006:	eba3 0308 	sub.w	r3, r3, r8
9001d00a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d00e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001d012:	eba3 0308 	sub.w	r3, r3, r8
9001d016:	441c      	add	r4, r3
9001d018:	e7ac      	b.n	9001cf74 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
9001d01a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001d01e:	4282      	cmp	r2, r0
9001d020:	d915      	bls.n	9001d04e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9001d022:	eb00 060a 	add.w	r6, r0, sl
9001d026:	4286      	cmp	r6, r0
9001d028:	d906      	bls.n	9001d038 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
9001d02a:	f814 3b01 	ldrb.w	r3, [r4], #1
9001d02e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9001d032:	f820 3b02 	strh.w	r3, [r0], #2
9001d036:	e7f6      	b.n	9001d026 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
9001d038:	882b      	ldrh	r3, [r5, #0]
9001d03a:	eba3 0308 	sub.w	r3, r3, r8
9001d03e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d042:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001d046:	eba3 0308 	sub.w	r3, r3, r8
9001d04a:	441c      	add	r4, r3
9001d04c:	e7e7      	b.n	9001d01e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
9001d04e:	4b04      	ldr	r3, [pc, #16]	; (9001d060 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9001d050:	6818      	ldr	r0, [r3, #0]
9001d052:	6803      	ldr	r3, [r0, #0]
9001d054:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001d056:	4798      	blx	r3
9001d058:	b007      	add	sp, #28
9001d05a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d05e:	bf00      	nop
9001d060:	240235ac 	.word	0x240235ac
9001d064:	240235a6 	.word	0x240235a6

9001d068 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
9001d068:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d06c:	b091      	sub	sp, #68	; 0x44
9001d06e:	4680      	mov	r8, r0
9001d070:	460f      	mov	r7, r1
9001d072:	4614      	mov	r4, r2
9001d074:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
9001d078:	2d00      	cmp	r5, #0
9001d07a:	d051      	beq.n	9001d120 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
9001d07c:	6810      	ldr	r0, [r2, #0]
9001d07e:	ae0c      	add	r6, sp, #48	; 0x30
9001d080:	6851      	ldr	r1, [r2, #4]
9001d082:	f8df 9200 	ldr.w	r9, [pc, #512]	; 9001d284 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
9001d086:	c603      	stmia	r6!, {r0, r1}
9001d088:	6818      	ldr	r0, [r3, #0]
9001d08a:	ae0e      	add	r6, sp, #56	; 0x38
9001d08c:	6859      	ldr	r1, [r3, #4]
9001d08e:	c603      	stmia	r6!, {r0, r1}
9001d090:	a80c      	add	r0, sp, #48	; 0x30
9001d092:	f7f7 fde3 	bl	90014c5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d096:	4621      	mov	r1, r4
9001d098:	a80e      	add	r0, sp, #56	; 0x38
9001d09a:	f7f7 fe23 	bl	90014ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d09e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
9001d0a2:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
9001d0a6:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
9001d0aa:	f8d9 0000 	ldr.w	r0, [r9]
9001d0ae:	fb11 2103 	smlabb	r1, r1, r3, r2
9001d0b2:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
9001d0b6:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
9001d0ba:	eb08 0401 	add.w	r4, r8, r1
9001d0be:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
9001d0c2:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 9001d288 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
9001d0c6:	440a      	add	r2, r1
9001d0c8:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
9001d0cc:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
9001d0d0:	4413      	add	r3, r2
9001d0d2:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
9001d0d6:	6803      	ldr	r3, [r0, #0]
9001d0d8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001d0da:	4798      	blx	r3
9001d0dc:	f010 0f80 	tst.w	r0, #128	; 0x80
9001d0e0:	f8d9 0000 	ldr.w	r0, [r9]
9001d0e4:	d01f      	beq.n	9001d126 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
9001d0e6:	2200      	movs	r2, #0
9001d0e8:	6801      	ldr	r1, [r0, #0]
9001d0ea:	b2b6      	uxth	r6, r6
9001d0ec:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
9001d0f0:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001d0f4:	220b      	movs	r2, #11
9001d0f6:	9207      	str	r2, [sp, #28]
9001d0f8:	f8b8 2000 	ldrh.w	r2, [r8]
9001d0fc:	9601      	str	r6, [sp, #4]
9001d0fe:	9206      	str	r2, [sp, #24]
9001d100:	2201      	movs	r2, #1
9001d102:	e9cd 5204 	strd	r5, r2, [sp, #16]
9001d106:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
9001d10a:	9203      	str	r2, [sp, #12]
9001d10c:	fa1f f28a 	uxth.w	r2, sl
9001d110:	9202      	str	r2, [sp, #8]
9001d112:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
9001d116:	9200      	str	r2, [sp, #0]
9001d118:	463a      	mov	r2, r7
9001d11a:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
9001d11c:	4621      	mov	r1, r4
9001d11e:	47a8      	blx	r5
9001d120:	b011      	add	sp, #68	; 0x44
9001d122:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d126:	6803      	ldr	r3, [r0, #0]
9001d128:	ea4f 0946 	mov.w	r9, r6, lsl #1
9001d12c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001d12e:	4798      	blx	r3
9001d130:	f8b8 2000 	ldrh.w	r2, [r8]
9001d134:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
9001d138:	2dff      	cmp	r5, #255	; 0xff
9001d13a:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
9001d13e:	fb0a fa02 	mul.w	sl, sl, r2
9001d142:	fb02 1303 	mla	r3, r2, r3, r1
9001d146:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d14a:	d062      	beq.n	9001d212 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
9001d14c:	ea6f 0c05 	mvn.w	ip, r5
9001d150:	eb00 034a 	add.w	r3, r0, sl, lsl #1
9001d154:	b2ad      	uxth	r5, r5
9001d156:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
9001d15a:	fa5f fc8c 	uxtb.w	ip, ip
9001d15e:	930a      	str	r3, [sp, #40]	; 0x28
9001d160:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001d162:	4298      	cmp	r0, r3
9001d164:	f080 8085 	bcs.w	9001d272 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9001d168:	eb00 0b09 	add.w	fp, r0, r9
9001d16c:	4558      	cmp	r0, fp
9001d16e:	d246      	bcs.n	9001d1fe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
9001d170:	f814 eb01 	ldrb.w	lr, [r4], #1
9001d174:	2303      	movs	r3, #3
9001d176:	2204      	movs	r2, #4
9001d178:	fb13 2e0e 	smlabb	lr, r3, lr, r2
9001d17c:	8803      	ldrh	r3, [r0, #0]
9001d17e:	eb07 0a0e 	add.w	sl, r7, lr
9001d182:	1219      	asrs	r1, r3, #8
9001d184:	10da      	asrs	r2, r3, #3
9001d186:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001d18a:	f89a 8002 	ldrb.w	r8, [sl, #2]
9001d18e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9001d192:	00db      	lsls	r3, r3, #3
9001d194:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9001d198:	fb18 f805 	smulbb	r8, r8, r5
9001d19c:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
9001d1a0:	fb1e fe05 	smulbb	lr, lr, r5
9001d1a4:	b2db      	uxtb	r3, r3
9001d1a6:	fb01 810c 	mla	r1, r1, ip, r8
9001d1aa:	f89a 8001 	ldrb.w	r8, [sl, #1]
9001d1ae:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
9001d1b2:	fb18 f805 	smulbb	r8, r8, r5
9001d1b6:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
9001d1ba:	b289      	uxth	r1, r1
9001d1bc:	fb02 820c 	mla	r2, r2, ip, r8
9001d1c0:	fb03 e30c 	mla	r3, r3, ip, lr
9001d1c4:	f101 0801 	add.w	r8, r1, #1
9001d1c8:	b292      	uxth	r2, r2
9001d1ca:	b29b      	uxth	r3, r3
9001d1cc:	eb08 2111 	add.w	r1, r8, r1, lsr #8
9001d1d0:	f102 0801 	add.w	r8, r2, #1
9001d1d4:	f103 0e01 	add.w	lr, r3, #1
9001d1d8:	eb08 2812 	add.w	r8, r8, r2, lsr #8
9001d1dc:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
9001d1e0:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
9001d1e4:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001d1e8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001d1ec:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9001d1f0:	ea4e 0101 	orr.w	r1, lr, r1
9001d1f4:	ea41 0108 	orr.w	r1, r1, r8
9001d1f8:	f820 1b02 	strh.w	r1, [r0], #2
9001d1fc:	e7b6      	b.n	9001d16c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
9001d1fe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001d200:	881b      	ldrh	r3, [r3, #0]
9001d202:	1b9b      	subs	r3, r3, r6
9001d204:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d208:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9001d20c:	1b9b      	subs	r3, r3, r6
9001d20e:	441c      	add	r4, r3
9001d210:	e7a6      	b.n	9001d160 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
9001d212:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
9001d216:	2203      	movs	r2, #3
9001d218:	2504      	movs	r5, #4
9001d21a:	4919      	ldr	r1, [pc, #100]	; (9001d280 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
9001d21c:	4550      	cmp	r0, sl
9001d21e:	d228      	bcs.n	9001d272 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9001d220:	eb00 0c09 	add.w	ip, r0, r9
9001d224:	4560      	cmp	r0, ip
9001d226:	4623      	mov	r3, r4
9001d228:	d219      	bcs.n	9001d25e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
9001d22a:	f893 e000 	ldrb.w	lr, [r3]
9001d22e:	3401      	adds	r4, #1
9001d230:	fb12 5e0e 	smlabb	lr, r2, lr, r5
9001d234:	eb07 0b0e 	add.w	fp, r7, lr
9001d238:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001d23c:	f89b 3002 	ldrb.w	r3, [fp, #2]
9001d240:	f89b b001 	ldrb.w	fp, [fp, #1]
9001d244:	ea01 2303 	and.w	r3, r1, r3, lsl #8
9001d248:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
9001d24c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9001d250:	ea43 030b 	orr.w	r3, r3, fp
9001d254:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
9001d258:	f820 3b02 	strh.w	r3, [r0], #2
9001d25c:	e7e2      	b.n	9001d224 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
9001d25e:	f8b8 3000 	ldrh.w	r3, [r8]
9001d262:	1b9b      	subs	r3, r3, r6
9001d264:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d268:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9001d26c:	1b9b      	subs	r3, r3, r6
9001d26e:	441c      	add	r4, r3
9001d270:	e7d4      	b.n	9001d21c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
9001d272:	4b04      	ldr	r3, [pc, #16]	; (9001d284 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
9001d274:	6818      	ldr	r0, [r3, #0]
9001d276:	6803      	ldr	r3, [r0, #0]
9001d278:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001d27a:	4798      	blx	r3
9001d27c:	e750      	b.n	9001d120 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
9001d27e:	bf00      	nop
9001d280:	fffff800 	.word	0xfffff800
9001d284:	240235ac 	.word	0x240235ac
9001d288:	240235a6 	.word	0x240235a6

9001d28c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
9001d28c:	b4f0      	push	{r4, r5, r6, r7}
9001d28e:	460c      	mov	r4, r1
9001d290:	4611      	mov	r1, r2
9001d292:	f89d 5014 	ldrb.w	r5, [sp, #20]
9001d296:	461a      	mov	r2, r3
9001d298:	780f      	ldrb	r7, [r1, #0]
9001d29a:	9b04      	ldr	r3, [sp, #16]
9001d29c:	2f01      	cmp	r7, #1
9001d29e:	784e      	ldrb	r6, [r1, #1]
9001d2a0:	d038      	beq.n	9001d314 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
9001d2a2:	d31f      	bcc.n	9001d2e4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
9001d2a4:	2f02      	cmp	r7, #2
9001d2a6:	d14d      	bne.n	9001d344 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001d2a8:	2e03      	cmp	r6, #3
9001d2aa:	d84b      	bhi.n	9001d344 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001d2ac:	e8df f006 	tbb	[pc, r6]
9001d2b0:	17140702 	.word	0x17140702
9001d2b4:	9504      	str	r5, [sp, #16]
9001d2b6:	4620      	mov	r0, r4
9001d2b8:	bcf0      	pop	{r4, r5, r6, r7}
9001d2ba:	f7ff be09 	b.w	9001ced0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
9001d2be:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
9001d2c0:	2800      	cmp	r0, #0
9001d2c2:	d03f      	beq.n	9001d344 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001d2c4:	6806      	ldr	r6, [r0, #0]
9001d2c6:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001d2ca:	68b5      	ldr	r5, [r6, #8]
9001d2cc:	4613      	mov	r3, r2
9001d2ce:	46ac      	mov	ip, r5
9001d2d0:	460a      	mov	r2, r1
9001d2d2:	4621      	mov	r1, r4
9001d2d4:	bcf0      	pop	{r4, r5, r6, r7}
9001d2d6:	4760      	bx	ip
9001d2d8:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
9001d2dc:	e7f0      	b.n	9001d2c0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
9001d2de:	f8d0 0084 	ldr.w	r0, [r0, #132]	; 0x84
9001d2e2:	e7ed      	b.n	9001d2c0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
9001d2e4:	2e03      	cmp	r6, #3
9001d2e6:	d82d      	bhi.n	9001d344 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001d2e8:	e8df f006 	tbb	[pc, r6]
9001d2ec:	110e0702 	.word	0x110e0702
9001d2f0:	9504      	str	r5, [sp, #16]
9001d2f2:	4620      	mov	r0, r4
9001d2f4:	bcf0      	pop	{r4, r5, r6, r7}
9001d2f6:	f7ff bd05 	b.w	9001cd04 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
9001d2fa:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
9001d2fc:	b310      	cbz	r0, 9001d344 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001d2fe:	6806      	ldr	r6, [r0, #0]
9001d300:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001d304:	68f5      	ldr	r5, [r6, #12]
9001d306:	e7e1      	b.n	9001d2cc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
9001d308:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
9001d30c:	e7f6      	b.n	9001d2fc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
9001d30e:	f8d0 0084 	ldr.w	r0, [r0, #132]	; 0x84
9001d312:	e7f3      	b.n	9001d2fc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
9001d314:	2e03      	cmp	r6, #3
9001d316:	d815      	bhi.n	9001d344 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001d318:	e8df f006 	tbb	[pc, r6]
9001d31c:	110e0702 	.word	0x110e0702
9001d320:	9504      	str	r5, [sp, #16]
9001d322:	4620      	mov	r0, r4
9001d324:	bcf0      	pop	{r4, r5, r6, r7}
9001d326:	f7ff be9f 	b.w	9001d068 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
9001d32a:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
9001d32c:	b150      	cbz	r0, 9001d344 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001d32e:	6806      	ldr	r6, [r0, #0]
9001d330:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001d334:	6935      	ldr	r5, [r6, #16]
9001d336:	e7c9      	b.n	9001d2cc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
9001d338:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
9001d33c:	e7f6      	b.n	9001d32c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
9001d33e:	f8d0 0084 	ldr.w	r0, [r0, #132]	; 0x84
9001d342:	e7f3      	b.n	9001d32c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
9001d344:	bcf0      	pop	{r4, r5, r6, r7}
9001d346:	4770      	bx	lr

9001d348 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
9001d348:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d34c:	b087      	sub	sp, #28
9001d34e:	4604      	mov	r4, r0
9001d350:	460e      	mov	r6, r1
9001d352:	6810      	ldr	r0, [r2, #0]
9001d354:	6851      	ldr	r1, [r2, #4]
9001d356:	ad02      	add	r5, sp, #8
9001d358:	4617      	mov	r7, r2
9001d35a:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
9001d35e:	f8df 9230 	ldr.w	r9, [pc, #560]	; 9001d590 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
9001d362:	c503      	stmia	r5!, {r0, r1}
9001d364:	6818      	ldr	r0, [r3, #0]
9001d366:	ad04      	add	r5, sp, #16
9001d368:	6859      	ldr	r1, [r3, #4]
9001d36a:	c503      	stmia	r5!, {r0, r1}
9001d36c:	a802      	add	r0, sp, #8
9001d36e:	f7f7 fc75 	bl	90014c5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d372:	4639      	mov	r1, r7
9001d374:	a804      	add	r0, sp, #16
9001d376:	f7f7 fcb5 	bl	90014ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d37a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001d37e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001d382:	f8bd 100c 	ldrh.w	r1, [sp, #12]
9001d386:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9001d38a:	fb11 2103 	smlabb	r1, r1, r3, r2
9001d38e:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
9001d392:	eb04 0441 	add.w	r4, r4, r1, lsl #1
9001d396:	440e      	add	r6, r1
9001d398:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001d39c:	440a      	add	r2, r1
9001d39e:	f8ad 2010 	strh.w	r2, [sp, #16]
9001d3a2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001d3a6:	4413      	add	r3, r2
9001d3a8:	f8ad 3012 	strh.w	r3, [sp, #18]
9001d3ac:	4b77      	ldr	r3, [pc, #476]	; (9001d58c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9001d3ae:	6818      	ldr	r0, [r3, #0]
9001d3b0:	6803      	ldr	r3, [r0, #0]
9001d3b2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001d3b4:	4798      	blx	r3
9001d3b6:	f8b9 b000 	ldrh.w	fp, [r9]
9001d3ba:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001d3be:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001d3c2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001d3c6:	fb05 f50b 	mul.w	r5, r5, fp
9001d3ca:	fb0b 2303 	mla	r3, fp, r3, r2
9001d3ce:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d3d2:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001d3d6:	9300      	str	r3, [sp, #0]
9001d3d8:	d069      	beq.n	9001d4ae <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
9001d3da:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
9001d3de:	4558      	cmp	r0, fp
9001d3e0:	f080 80cc 	bcs.w	9001d57c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9001d3e4:	9b00      	ldr	r3, [sp, #0]
9001d3e6:	4631      	mov	r1, r6
9001d3e8:	18c3      	adds	r3, r0, r3
9001d3ea:	9301      	str	r3, [sp, #4]
9001d3ec:	9b01      	ldr	r3, [sp, #4]
9001d3ee:	4298      	cmp	r0, r3
9001d3f0:	d24f      	bcs.n	9001d492 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
9001d3f2:	f811 2b01 	ldrb.w	r2, [r1], #1
9001d3f6:	2a00      	cmp	r2, #0
9001d3f8:	d048      	beq.n	9001d48c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
9001d3fa:	fb0a f202 	mul.w	r2, sl, r2
9001d3fe:	1c53      	adds	r3, r2, #1
9001d400:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9001d404:	121b      	asrs	r3, r3, #8
9001d406:	d041      	beq.n	9001d48c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
9001d408:	8802      	ldrh	r2, [r0, #0]
9001d40a:	b29e      	uxth	r6, r3
9001d40c:	f8b4 c000 	ldrh.w	ip, [r4]
9001d410:	43db      	mvns	r3, r3
9001d412:	1215      	asrs	r5, r2, #8
9001d414:	b2db      	uxtb	r3, r3
9001d416:	ea4f 272c 	mov.w	r7, ip, asr #8
9001d41a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001d41e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9001d422:	fb15 f503 	smulbb	r5, r5, r3
9001d426:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001d42a:	00d2      	lsls	r2, r2, #3
9001d42c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
9001d430:	fb07 5706 	mla	r7, r7, r6, r5
9001d434:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001d438:	b2d2      	uxtb	r2, r2
9001d43a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001d43e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001d442:	fb1e fe03 	smulbb	lr, lr, r3
9001d446:	b2bf      	uxth	r7, r7
9001d448:	fb12 f203 	smulbb	r2, r2, r3
9001d44c:	fa5f fc8c 	uxtb.w	ip, ip
9001d450:	fb05 e506 	mla	r5, r5, r6, lr
9001d454:	f107 0e01 	add.w	lr, r7, #1
9001d458:	fb0c 2c06 	mla	ip, ip, r6, r2
9001d45c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
9001d460:	fa1f fc8c 	uxth.w	ip, ip
9001d464:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
9001d468:	b2ad      	uxth	r5, r5
9001d46a:	f10c 0701 	add.w	r7, ip, #1
9001d46e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9001d472:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001d476:	ea47 070e 	orr.w	r7, r7, lr
9001d47a:	f105 0e01 	add.w	lr, r5, #1
9001d47e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001d482:	096d      	lsrs	r5, r5, #5
9001d484:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001d488:	432f      	orrs	r7, r5
9001d48a:	8007      	strh	r7, [r0, #0]
9001d48c:	3002      	adds	r0, #2
9001d48e:	3402      	adds	r4, #2
9001d490:	e7ac      	b.n	9001d3ec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
9001d492:	f8b9 3000 	ldrh.w	r3, [r9]
9001d496:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
9001d49a:	eba3 0308 	sub.w	r3, r3, r8
9001d49e:	eba6 0608 	sub.w	r6, r6, r8
9001d4a2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d4a6:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9001d4aa:	440e      	add	r6, r1
9001d4ac:	e797      	b.n	9001d3de <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
9001d4ae:	eb00 0545 	add.w	r5, r0, r5, lsl #1
9001d4b2:	42a8      	cmp	r0, r5
9001d4b4:	d262      	bcs.n	9001d57c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9001d4b6:	9b00      	ldr	r3, [sp, #0]
9001d4b8:	4631      	mov	r1, r6
9001d4ba:	eb00 0b03 	add.w	fp, r0, r3
9001d4be:	4558      	cmp	r0, fp
9001d4c0:	d24e      	bcs.n	9001d560 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
9001d4c2:	f811 3b01 	ldrb.w	r3, [r1], #1
9001d4c6:	b12b      	cbz	r3, 9001d4d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
9001d4c8:	2bff      	cmp	r3, #255	; 0xff
9001d4ca:	f8b4 e000 	ldrh.w	lr, [r4]
9001d4ce:	d104      	bne.n	9001d4da <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
9001d4d0:	f8a0 e000 	strh.w	lr, [r0]
9001d4d4:	3002      	adds	r0, #2
9001d4d6:	3402      	adds	r4, #2
9001d4d8:	e7f1      	b.n	9001d4be <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
9001d4da:	8802      	ldrh	r2, [r0, #0]
9001d4dc:	b29f      	uxth	r7, r3
9001d4de:	43db      	mvns	r3, r3
9001d4e0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001d4e4:	1216      	asrs	r6, r2, #8
9001d4e6:	b2db      	uxtb	r3, r3
9001d4e8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001d4ec:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001d4f0:	ea4f 0ae2 	mov.w	sl, r2, asr #3
9001d4f4:	00d2      	lsls	r2, r2, #3
9001d4f6:	fb16 f603 	smulbb	r6, r6, r3
9001d4fa:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001d4fe:	b2d2      	uxtb	r2, r2
9001d500:	fb0c 6c07 	mla	ip, ip, r7, r6
9001d504:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001d508:	fb1a fa03 	smulbb	sl, sl, r3
9001d50c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001d510:	fa1f fc8c 	uxth.w	ip, ip
9001d514:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001d518:	fb12 f303 	smulbb	r3, r2, r3
9001d51c:	fa5f fe8e 	uxtb.w	lr, lr
9001d520:	fb06 a607 	mla	r6, r6, r7, sl
9001d524:	f10c 0201 	add.w	r2, ip, #1
9001d528:	fb0e 3307 	mla	r3, lr, r7, r3
9001d52c:	b2b6      	uxth	r6, r6
9001d52e:	b29b      	uxth	r3, r3
9001d530:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001d534:	f106 0a01 	add.w	sl, r6, #1
9001d538:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
9001d53c:	f103 0c01 	add.w	ip, r3, #1
9001d540:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001d544:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001d548:	0976      	lsrs	r6, r6, #5
9001d54a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001d54e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001d552:	ea4c 0c02 	orr.w	ip, ip, r2
9001d556:	ea4c 0c06 	orr.w	ip, ip, r6
9001d55a:	f8a0 c000 	strh.w	ip, [r0]
9001d55e:	e7b9      	b.n	9001d4d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
9001d560:	f8b9 3000 	ldrh.w	r3, [r9]
9001d564:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
9001d568:	eba3 0308 	sub.w	r3, r3, r8
9001d56c:	eba6 0608 	sub.w	r6, r6, r8
9001d570:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d574:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9001d578:	440e      	add	r6, r1
9001d57a:	e79a      	b.n	9001d4b2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
9001d57c:	4b03      	ldr	r3, [pc, #12]	; (9001d58c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9001d57e:	6818      	ldr	r0, [r3, #0]
9001d580:	6803      	ldr	r3, [r0, #0]
9001d582:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001d584:	4798      	blx	r3
9001d586:	b007      	add	sp, #28
9001d588:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d58c:	240235ac 	.word	0x240235ac
9001d590:	240235a6 	.word	0x240235a6

9001d594 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
9001d594:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d598:	b089      	sub	sp, #36	; 0x24
9001d59a:	4682      	mov	sl, r0
9001d59c:	460f      	mov	r7, r1
9001d59e:	4691      	mov	r9, r2
9001d5a0:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
9001d5a4:	4698      	mov	r8, r3
9001d5a6:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001d5a8:	2e00      	cmp	r6, #0
9001d5aa:	d03d      	beq.n	9001d628 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d5ac:	4608      	mov	r0, r1
9001d5ae:	f7fa fe4b 	bl	90018248 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001d5b2:	4605      	mov	r5, r0
9001d5b4:	4638      	mov	r0, r7
9001d5b6:	f7fa fe7b 	bl	900182b0 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001d5ba:	f8ad 000e 	strh.w	r0, [sp, #14]
9001d5be:	4638      	mov	r0, r7
9001d5c0:	f8ad 9008 	strh.w	r9, [sp, #8]
9001d5c4:	f8ad 500c 	strh.w	r5, [sp, #12]
9001d5c8:	f8ad 800a 	strh.w	r8, [sp, #10]
9001d5cc:	f7fa ff28 	bl	90018420 <_ZNK8touchgfx6Bitmap7getDataEv>
9001d5d0:	4605      	mov	r5, r0
9001d5d2:	4638      	mov	r0, r7
9001d5d4:	f7fa ff54 	bl	90018480 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
9001d5d8:	4681      	mov	r9, r0
9001d5da:	4638      	mov	r0, r7
9001d5dc:	f7fa ffa4 	bl	90018528 <_ZNK8touchgfx6Bitmap9getFormatEv>
9001d5e0:	280b      	cmp	r0, #11
9001d5e2:	d821      	bhi.n	9001d628 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d5e4:	e8df f000 	tbb	[pc, r0]
9001d5e8:	2006aebe 	.word	0x2006aebe
9001d5ec:	20202020 	.word	0x20202020
9001d5f0:	b5202020 	.word	0xb5202020
9001d5f4:	4bb0      	ldr	r3, [pc, #704]	; (9001d8b8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
9001d5f6:	6818      	ldr	r0, [r3, #0]
9001d5f8:	6803      	ldr	r3, [r0, #0]
9001d5fa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001d5fc:	4798      	blx	r3
9001d5fe:	2eff      	cmp	r6, #255	; 0xff
9001d600:	d101      	bne.n	9001d606 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
9001d602:	0683      	lsls	r3, r0, #26
9001d604:	d506      	bpl.n	9001d614 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
9001d606:	4633      	mov	r3, r6
9001d608:	4622      	mov	r2, r4
9001d60a:	a902      	add	r1, sp, #8
9001d60c:	4628      	mov	r0, r5
9001d60e:	f7ff f907 	bl	9001c820 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001d612:	e009      	b.n	9001d628 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d614:	4638      	mov	r0, r7
9001d616:	f7fa fecb 	bl	900183b0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001d61a:	b940      	cbnz	r0, 9001d62e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
9001d61c:	4623      	mov	r3, r4
9001d61e:	aa02      	add	r2, sp, #8
9001d620:	4629      	mov	r1, r5
9001d622:	4650      	mov	r0, sl
9001d624:	f7ff f9e2 	bl	9001c9ec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9001d628:	b009      	add	sp, #36	; 0x24
9001d62a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d62e:	f10d 0818 	add.w	r8, sp, #24
9001d632:	4639      	mov	r1, r7
9001d634:	af04      	add	r7, sp, #16
9001d636:	4640      	mov	r0, r8
9001d638:	f7fa fe6e 	bl	90018318 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001d63c:	e898 0003 	ldmia.w	r8, {r0, r1}
9001d640:	e887 0003 	stmia.w	r7, {r0, r1}
9001d644:	4638      	mov	r0, r7
9001d646:	4621      	mov	r1, r4
9001d648:	f7f2 fd9e 	bl	90010188 <_ZN8touchgfx4RectaNERKS0_>
9001d64c:	4638      	mov	r0, r7
9001d64e:	f7f2 fdde 	bl	9001020e <_ZNK8touchgfx4Rect7isEmptyEv>
9001d652:	2800      	cmp	r0, #0
9001d654:	d1d7      	bne.n	9001d606 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
9001d656:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001d65a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001d65e:	4293      	cmp	r3, r2
9001d660:	dd12      	ble.n	9001d688 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
9001d662:	1a9b      	subs	r3, r3, r2
9001d664:	f9b4 0000 	ldrsh.w	r0, [r4]
9001d668:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001d66c:	f8ad 0018 	strh.w	r0, [sp, #24]
9001d670:	4628      	mov	r0, r5
9001d672:	f8ad 201a 	strh.w	r2, [sp, #26]
9001d676:	4642      	mov	r2, r8
9001d678:	f8ad 101c 	strh.w	r1, [sp, #28]
9001d67c:	a902      	add	r1, sp, #8
9001d67e:	f8ad 301e 	strh.w	r3, [sp, #30]
9001d682:	4633      	mov	r3, r6
9001d684:	f7ff f8cc 	bl	9001c820 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001d688:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9001d68c:	f9b4 2000 	ldrsh.w	r2, [r4]
9001d690:	4293      	cmp	r3, r2
9001d692:	dd12      	ble.n	9001d6ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
9001d694:	1a9b      	subs	r3, r3, r2
9001d696:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9001d69a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9001d69e:	f8ad 2018 	strh.w	r2, [sp, #24]
9001d6a2:	4642      	mov	r2, r8
9001d6a4:	f8ad 001a 	strh.w	r0, [sp, #26]
9001d6a8:	4628      	mov	r0, r5
9001d6aa:	f8ad 301c 	strh.w	r3, [sp, #28]
9001d6ae:	23ff      	movs	r3, #255	; 0xff
9001d6b0:	f8ad 101e 	strh.w	r1, [sp, #30]
9001d6b4:	a902      	add	r1, sp, #8
9001d6b6:	f7ff f8b3 	bl	9001c820 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001d6ba:	463b      	mov	r3, r7
9001d6bc:	aa02      	add	r2, sp, #8
9001d6be:	4629      	mov	r1, r5
9001d6c0:	4650      	mov	r0, sl
9001d6c2:	f7ff f993 	bl	9001c9ec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9001d6c6:	88a2      	ldrh	r2, [r4, #4]
9001d6c8:	8823      	ldrh	r3, [r4, #0]
9001d6ca:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9001d6ce:	4413      	add	r3, r2
9001d6d0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001d6d4:	440a      	add	r2, r1
9001d6d6:	b29b      	uxth	r3, r3
9001d6d8:	b292      	uxth	r2, r2
9001d6da:	b218      	sxth	r0, r3
9001d6dc:	b211      	sxth	r1, r2
9001d6de:	4288      	cmp	r0, r1
9001d6e0:	dd12      	ble.n	9001d708 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
9001d6e2:	1a9b      	subs	r3, r3, r2
9001d6e4:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
9001d6e8:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
9001d6ec:	4642      	mov	r2, r8
9001d6ee:	f8ad 1018 	strh.w	r1, [sp, #24]
9001d6f2:	a902      	add	r1, sp, #8
9001d6f4:	f8ad 301c 	strh.w	r3, [sp, #28]
9001d6f8:	23ff      	movs	r3, #255	; 0xff
9001d6fa:	f8ad 001e 	strh.w	r0, [sp, #30]
9001d6fe:	4628      	mov	r0, r5
9001d700:	f8ad 601a 	strh.w	r6, [sp, #26]
9001d704:	f7ff f88c 	bl	9001c820 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001d708:	88e2      	ldrh	r2, [r4, #6]
9001d70a:	8863      	ldrh	r3, [r4, #2]
9001d70c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
9001d710:	4413      	add	r3, r2
9001d712:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9001d716:	440a      	add	r2, r1
9001d718:	b29b      	uxth	r3, r3
9001d71a:	b292      	uxth	r2, r2
9001d71c:	b218      	sxth	r0, r3
9001d71e:	b211      	sxth	r1, r2
9001d720:	4288      	cmp	r0, r1
9001d722:	dd81      	ble.n	9001d628 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d724:	1a9b      	subs	r3, r3, r2
9001d726:	f9b4 6000 	ldrsh.w	r6, [r4]
9001d72a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001d72e:	4642      	mov	r2, r8
9001d730:	f8ad 301e 	strh.w	r3, [sp, #30]
9001d734:	23ff      	movs	r3, #255	; 0xff
9001d736:	f8ad 6018 	strh.w	r6, [sp, #24]
9001d73a:	f8ad 101a 	strh.w	r1, [sp, #26]
9001d73e:	f8ad 001c 	strh.w	r0, [sp, #28]
9001d742:	e762      	b.n	9001d60a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
9001d744:	4633      	mov	r3, r6
9001d746:	4622      	mov	r2, r4
9001d748:	a902      	add	r1, sp, #8
9001d74a:	4628      	mov	r0, r5
9001d74c:	f7ff f9be 	bl	9001cacc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
9001d750:	e76a      	b.n	9001d628 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d752:	e9cd 4600 	strd	r4, r6, [sp]
9001d756:	ab02      	add	r3, sp, #8
9001d758:	464a      	mov	r2, r9
9001d75a:	4629      	mov	r1, r5
9001d75c:	4650      	mov	r0, sl
9001d75e:	f7ff fd95 	bl	9001d28c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
9001d762:	e761      	b.n	9001d628 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d764:	4638      	mov	r0, r7
9001d766:	f7fa fe23 	bl	900183b0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001d76a:	b950      	cbnz	r0, 9001d782 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
9001d76c:	f8da 3000 	ldr.w	r3, [sl]
9001d770:	aa02      	add	r2, sp, #8
9001d772:	4629      	mov	r1, r5
9001d774:	e9cd 6000 	strd	r6, r0, [sp]
9001d778:	4650      	mov	r0, sl
9001d77a:	68de      	ldr	r6, [r3, #12]
9001d77c:	4623      	mov	r3, r4
9001d77e:	47b0      	blx	r6
9001d780:	e752      	b.n	9001d628 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d782:	f10d 0818 	add.w	r8, sp, #24
9001d786:	4639      	mov	r1, r7
9001d788:	af04      	add	r7, sp, #16
9001d78a:	4640      	mov	r0, r8
9001d78c:	f7fa fdc4 	bl	90018318 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001d790:	e898 0003 	ldmia.w	r8, {r0, r1}
9001d794:	e887 0003 	stmia.w	r7, {r0, r1}
9001d798:	4638      	mov	r0, r7
9001d79a:	4621      	mov	r1, r4
9001d79c:	f7f2 fcf4 	bl	90010188 <_ZN8touchgfx4RectaNERKS0_>
9001d7a0:	4638      	mov	r0, r7
9001d7a2:	f7f2 fd34 	bl	9001020e <_ZNK8touchgfx4Rect7isEmptyEv>
9001d7a6:	b138      	cbz	r0, 9001d7b8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
9001d7a8:	4623      	mov	r3, r4
9001d7aa:	9600      	str	r6, [sp, #0]
9001d7ac:	aa02      	add	r2, sp, #8
9001d7ae:	4649      	mov	r1, r9
9001d7b0:	4628      	mov	r0, r5
9001d7b2:	f7ff fdc9 	bl	9001d348 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001d7b6:	e737      	b.n	9001d628 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d7b8:	f8da 3000 	ldr.w	r3, [sl]
9001d7bc:	aa02      	add	r2, sp, #8
9001d7be:	4629      	mov	r1, r5
9001d7c0:	e9cd 6000 	strd	r6, r0, [sp]
9001d7c4:	4650      	mov	r0, sl
9001d7c6:	f8d3 b00c 	ldr.w	fp, [r3, #12]
9001d7ca:	463b      	mov	r3, r7
9001d7cc:	47d8      	blx	fp
9001d7ce:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001d7d2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001d7d6:	4293      	cmp	r3, r2
9001d7d8:	dd13      	ble.n	9001d802 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
9001d7da:	f9b4 0000 	ldrsh.w	r0, [r4]
9001d7de:	1a9b      	subs	r3, r3, r2
9001d7e0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001d7e4:	f8ad 0018 	strh.w	r0, [sp, #24]
9001d7e8:	4628      	mov	r0, r5
9001d7ea:	f8ad 201a 	strh.w	r2, [sp, #26]
9001d7ee:	aa02      	add	r2, sp, #8
9001d7f0:	f8ad 101c 	strh.w	r1, [sp, #28]
9001d7f4:	4649      	mov	r1, r9
9001d7f6:	f8ad 301e 	strh.w	r3, [sp, #30]
9001d7fa:	4643      	mov	r3, r8
9001d7fc:	9600      	str	r6, [sp, #0]
9001d7fe:	f7ff fda3 	bl	9001d348 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001d802:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9001d806:	f9b4 2000 	ldrsh.w	r2, [r4]
9001d80a:	4293      	cmp	r3, r2
9001d80c:	dd13      	ble.n	9001d836 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
9001d80e:	1a9b      	subs	r3, r3, r2
9001d810:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9001d814:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9001d818:	f8ad 2018 	strh.w	r2, [sp, #24]
9001d81c:	aa02      	add	r2, sp, #8
9001d81e:	f8ad 001a 	strh.w	r0, [sp, #26]
9001d822:	4628      	mov	r0, r5
9001d824:	f8ad 301c 	strh.w	r3, [sp, #28]
9001d828:	4643      	mov	r3, r8
9001d82a:	f8ad 101e 	strh.w	r1, [sp, #30]
9001d82e:	4649      	mov	r1, r9
9001d830:	9600      	str	r6, [sp, #0]
9001d832:	f7ff fd89 	bl	9001d348 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001d836:	88a2      	ldrh	r2, [r4, #4]
9001d838:	8823      	ldrh	r3, [r4, #0]
9001d83a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9001d83e:	4413      	add	r3, r2
9001d840:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001d844:	440a      	add	r2, r1
9001d846:	b29b      	uxth	r3, r3
9001d848:	b292      	uxth	r2, r2
9001d84a:	b218      	sxth	r0, r3
9001d84c:	b211      	sxth	r1, r2
9001d84e:	4288      	cmp	r0, r1
9001d850:	dd13      	ble.n	9001d87a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
9001d852:	1a9b      	subs	r3, r3, r2
9001d854:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
9001d858:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
9001d85c:	aa02      	add	r2, sp, #8
9001d85e:	f8ad 1018 	strh.w	r1, [sp, #24]
9001d862:	4649      	mov	r1, r9
9001d864:	f8ad 301c 	strh.w	r3, [sp, #28]
9001d868:	4643      	mov	r3, r8
9001d86a:	f8ad 001e 	strh.w	r0, [sp, #30]
9001d86e:	4628      	mov	r0, r5
9001d870:	9600      	str	r6, [sp, #0]
9001d872:	f8ad 701a 	strh.w	r7, [sp, #26]
9001d876:	f7ff fd67 	bl	9001d348 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001d87a:	88e2      	ldrh	r2, [r4, #6]
9001d87c:	8863      	ldrh	r3, [r4, #2]
9001d87e:	f8bd 1016 	ldrh.w	r1, [sp, #22]
9001d882:	4413      	add	r3, r2
9001d884:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9001d888:	440a      	add	r2, r1
9001d88a:	b29b      	uxth	r3, r3
9001d88c:	b292      	uxth	r2, r2
9001d88e:	b218      	sxth	r0, r3
9001d890:	b211      	sxth	r1, r2
9001d892:	4288      	cmp	r0, r1
9001d894:	f77f aec8 	ble.w	9001d628 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d898:	f9b4 7000 	ldrsh.w	r7, [r4]
9001d89c:	1a9b      	subs	r3, r3, r2
9001d89e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001d8a2:	f8ad 301e 	strh.w	r3, [sp, #30]
9001d8a6:	4643      	mov	r3, r8
9001d8a8:	f8ad 7018 	strh.w	r7, [sp, #24]
9001d8ac:	f8ad 101a 	strh.w	r1, [sp, #26]
9001d8b0:	f8ad 001c 	strh.w	r0, [sp, #28]
9001d8b4:	9600      	str	r6, [sp, #0]
9001d8b6:	e779      	b.n	9001d7ac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
9001d8b8:	240235ac 	.word	0x240235ac

9001d8bc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
9001d8bc:	b180      	cbz	r0, 9001d8e0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
9001d8be:	2903      	cmp	r1, #3
9001d8c0:	d81c      	bhi.n	9001d8fc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
9001d8c2:	e8df f001 	tbb	[pc, r1]
9001d8c6:	1d02      	.short	0x1d02
9001d8c8:	1f08      	.short	0x1f08
9001d8ca:	4b10      	ldr	r3, [pc, #64]	; (9001d90c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
9001d8cc:	8818      	ldrh	r0, [r3, #0]
9001d8ce:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001d8d2:	4240      	negs	r0, r0
9001d8d4:	4770      	bx	lr
9001d8d6:	4b0d      	ldr	r3, [pc, #52]	; (9001d90c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
9001d8d8:	8818      	ldrh	r0, [r3, #0]
9001d8da:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001d8de:	4770      	bx	lr
9001d8e0:	2903      	cmp	r1, #3
9001d8e2:	d80b      	bhi.n	9001d8fc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
9001d8e4:	a301      	add	r3, pc, #4	; (adr r3, 9001d8ec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
9001d8e6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
9001d8ea:	bf00      	nop
9001d8ec:	9001d901 	.word	0x9001d901
9001d8f0:	9001d8d7 	.word	0x9001d8d7
9001d8f4:	9001d905 	.word	0x9001d905
9001d8f8:	9001d8cb 	.word	0x9001d8cb
9001d8fc:	2000      	movs	r0, #0
9001d8fe:	4770      	bx	lr
9001d900:	2001      	movs	r0, #1
9001d902:	4770      	bx	lr
9001d904:	f04f 30ff 	mov.w	r0, #4294967295
9001d908:	4770      	bx	lr
9001d90a:	bf00      	nop
9001d90c:	240235a6 	.word	0x240235a6

9001d910 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
9001d910:	b180      	cbz	r0, 9001d934 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
9001d912:	2903      	cmp	r1, #3
9001d914:	d81c      	bhi.n	9001d950 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
9001d916:	e8df f001 	tbb	[pc, r1]
9001d91a:	021d      	.short	0x021d
9001d91c:	071f      	.short	0x071f
9001d91e:	4b10      	ldr	r3, [pc, #64]	; (9001d960 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
9001d920:	8818      	ldrh	r0, [r3, #0]
9001d922:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001d926:	4770      	bx	lr
9001d928:	4b0d      	ldr	r3, [pc, #52]	; (9001d960 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
9001d92a:	8818      	ldrh	r0, [r3, #0]
9001d92c:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001d930:	4240      	negs	r0, r0
9001d932:	4770      	bx	lr
9001d934:	2903      	cmp	r1, #3
9001d936:	d80b      	bhi.n	9001d950 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
9001d938:	a301      	add	r3, pc, #4	; (adr r3, 9001d940 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
9001d93a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
9001d93e:	bf00      	nop
9001d940:	9001d91f 	.word	0x9001d91f
9001d944:	9001d959 	.word	0x9001d959
9001d948:	9001d929 	.word	0x9001d929
9001d94c:	9001d955 	.word	0x9001d955
9001d950:	2000      	movs	r0, #0
9001d952:	4770      	bx	lr
9001d954:	2001      	movs	r0, #1
9001d956:	4770      	bx	lr
9001d958:	f04f 30ff 	mov.w	r0, #4294967295
9001d95c:	4770      	bx	lr
9001d95e:	bf00      	nop
9001d960:	240235a6 	.word	0x240235a6

9001d964 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
9001d964:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d968:	b099      	sub	sp, #100	; 0x64
9001d96a:	910b      	str	r1, [sp, #44]	; 0x2c
9001d96c:	a914      	add	r1, sp, #80	; 0x50
9001d96e:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
9001d972:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
9001d976:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
9001d97a:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
9001d97e:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
9001d982:	e881 000c 	stmia.w	r1, {r2, r3}
9001d986:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
9001d98a:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
9001d98e:	9309      	str	r3, [sp, #36]	; 0x24
9001d990:	f891 900d 	ldrb.w	r9, [r1, #13]
9001d994:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
9001d998:	ea4f 1749 	mov.w	r7, r9, lsl #5
9001d99c:	9310      	str	r3, [sp, #64]	; 0x40
9001d99e:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
9001d9a2:	930c      	str	r3, [sp, #48]	; 0x30
9001d9a4:	f407 7380 	and.w	r3, r7, #256	; 0x100
9001d9a8:	798f      	ldrb	r7, [r1, #6]
9001d9aa:	431f      	orrs	r7, r3
9001d9ac:	f000 8195 	beq.w	9001dcda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001d9b0:	ea4f 1909 	mov.w	r9, r9, lsl #4
9001d9b4:	f409 7380 	and.w	r3, r9, #256	; 0x100
9001d9b8:	f891 9007 	ldrb.w	r9, [r1, #7]
9001d9bc:	ea59 0903 	orrs.w	r9, r9, r3
9001d9c0:	f000 818b 	beq.w	9001dcda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001d9c4:	f991 3009 	ldrsb.w	r3, [r1, #9]
9001d9c8:	b29b      	uxth	r3, r3
9001d9ca:	2d00      	cmp	r5, #0
9001d9cc:	f000 812e 	beq.w	9001dc2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
9001d9d0:	1aed      	subs	r5, r5, r3
9001d9d2:	b2ad      	uxth	r5, r5
9001d9d4:	042b      	lsls	r3, r5, #16
9001d9d6:	d502      	bpl.n	9001d9de <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
9001d9d8:	1b64      	subs	r4, r4, r5
9001d9da:	2500      	movs	r5, #0
9001d9dc:	b224      	sxth	r4, r4
9001d9de:	f9b2 1000 	ldrsh.w	r1, [r2]
9001d9e2:	a814      	add	r0, sp, #80	; 0x50
9001d9e4:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
9001d9e8:	428c      	cmp	r4, r1
9001d9ea:	b28b      	uxth	r3, r1
9001d9ec:	bfbf      	itttt	lt
9001d9ee:	18ed      	addlt	r5, r5, r3
9001d9f0:	1b2c      	sublt	r4, r5, r4
9001d9f2:	b2a5      	uxthlt	r5, r4
9001d9f4:	460c      	movlt	r4, r1
9001d9f6:	8891      	ldrh	r1, [r2, #4]
9001d9f8:	440b      	add	r3, r1
9001d9fa:	4621      	mov	r1, r4
9001d9fc:	b21b      	sxth	r3, r3
9001d9fe:	930f      	str	r3, [sp, #60]	; 0x3c
9001da00:	88d3      	ldrh	r3, [r2, #6]
9001da02:	8852      	ldrh	r2, [r2, #2]
9001da04:	4413      	add	r3, r2
9001da06:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001da08:	b21b      	sxth	r3, r3
9001da0a:	930d      	str	r3, [sp, #52]	; 0x34
9001da0c:	4bbd      	ldr	r3, [pc, #756]	; (9001dd04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
9001da0e:	f893 b000 	ldrb.w	fp, [r3]
9001da12:	f10b 3cff 	add.w	ip, fp, #4294967295
9001da16:	f1dc 0300 	rsbs	r3, ip, #0
9001da1a:	eb43 030c 	adc.w	r3, r3, ip
9001da1e:	930e      	str	r3, [sp, #56]	; 0x38
9001da20:	4653      	mov	r3, sl
9001da22:	f7f6 ff90 	bl	90014946 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
9001da26:	4621      	mov	r1, r4
9001da28:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
9001da2c:	4653      	mov	r3, sl
9001da2e:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001da30:	a814      	add	r0, sp, #80	; 0x50
9001da32:	f7f6 ffa5 	bl	90014980 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
9001da36:	a918      	add	r1, sp, #96	; 0x60
9001da38:	f821 0d02 	strh.w	r0, [r1, #-2]!
9001da3c:	a817      	add	r0, sp, #92	; 0x5c
9001da3e:	f7f7 f8cb 	bl	90014bd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
9001da42:	f1ba 0f00 	cmp.w	sl, #0
9001da46:	f040 80f4 	bne.w	9001dc32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
9001da4a:	f1bb 0f01 	cmp.w	fp, #1
9001da4e:	f040 80f8 	bne.w	9001dc42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
9001da52:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001da54:	2b00      	cmp	r3, #0
9001da56:	f040 8145 	bne.w	9001dce4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
9001da5a:	b2ba      	uxth	r2, r7
9001da5c:	b905      	cbnz	r5, 9001da60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
9001da5e:	b16e      	cbz	r6, 9001da7c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
9001da60:	fb06 5302 	mla	r3, r6, r2, r5
9001da64:	9828      	ldr	r0, [sp, #160]	; 0xa0
9001da66:	4631      	mov	r1, r6
9001da68:	fb08 f303 	mul.w	r3, r8, r3
9001da6c:	f003 0607 	and.w	r6, r3, #7
9001da70:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
9001da74:	9328      	str	r3, [sp, #160]	; 0xa0
9001da76:	eba9 0301 	sub.w	r3, r9, r1
9001da7a:	930a      	str	r3, [sp, #40]	; 0x28
9001da7c:	4651      	mov	r1, sl
9001da7e:	980e      	ldr	r0, [sp, #56]	; 0x38
9001da80:	f7ff ff1c 	bl	9001d8bc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
9001da84:	4681      	mov	r9, r0
9001da86:	980e      	ldr	r0, [sp, #56]	; 0x38
9001da88:	f7ff ff42 	bl	9001d910 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
9001da8c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001da8e:	9909      	ldr	r1, [sp, #36]	; 0x24
9001da90:	4683      	mov	fp, r0
9001da92:	eba3 0a01 	sub.w	sl, r3, r1
9001da96:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001da98:	459a      	cmp	sl, r3
9001da9a:	bfa8      	it	ge
9001da9c:	469a      	movge	sl, r3
9001da9e:	f1ba 0f00 	cmp.w	sl, #0
9001daa2:	f340 811a 	ble.w	9001dcda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001daa6:	1b64      	subs	r4, r4, r5
9001daa8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001daaa:	1b1c      	subs	r4, r3, r4
9001daac:	42bc      	cmp	r4, r7
9001daae:	bfd4      	ite	le
9001dab0:	ebc5 0504 	rsble	r5, r5, r4
9001dab4:	ebc5 0507 	rsbgt	r5, r5, r7
9001dab8:	2d00      	cmp	r5, #0
9001daba:	f340 810e 	ble.w	9001dcda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001dabe:	1b52      	subs	r2, r2, r5
9001dac0:	fb08 f302 	mul.w	r3, r8, r2
9001dac4:	930f      	str	r3, [sp, #60]	; 0x3c
9001dac6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001dac8:	2b00      	cmp	r3, #0
9001daca:	f040 8116 	bne.w	9001dcfa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
9001dace:	4b8e      	ldr	r3, [pc, #568]	; (9001dd08 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
9001dad0:	6818      	ldr	r0, [r3, #0]
9001dad2:	6803      	ldr	r3, [r0, #0]
9001dad4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001dad6:	4798      	blx	r3
9001dad8:	2301      	movs	r3, #1
9001dada:	4a8c      	ldr	r2, [pc, #560]	; (9001dd0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
9001dadc:	fa03 f308 	lsl.w	r3, r3, r8
9001dae0:	8811      	ldrh	r1, [r2, #0]
9001dae2:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
9001dae6:	3b01      	subs	r3, #1
9001dae8:	b2db      	uxtb	r3, r3
9001daea:	930e      	str	r3, [sp, #56]	; 0x38
9001daec:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
9001daf0:	fb01 2303 	mla	r3, r1, r3, r2
9001daf4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001daf8:	930a      	str	r3, [sp, #40]	; 0x28
9001dafa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001dafc:	f3c3 4307 	ubfx	r3, r3, #16, #8
9001db00:	9313      	str	r3, [sp, #76]	; 0x4c
9001db02:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001db04:	0a19      	lsrs	r1, r3, #8
9001db06:	b2cb      	uxtb	r3, r1
9001db08:	9312      	str	r3, [sp, #72]	; 0x48
9001db0a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001db0c:	b2db      	uxtb	r3, r3
9001db0e:	9311      	str	r3, [sp, #68]	; 0x44
9001db10:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001db12:	095a      	lsrs	r2, r3, #5
9001db14:	4b7e      	ldr	r3, [pc, #504]	; (9001dd10 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
9001db16:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001db1a:	400b      	ands	r3, r1
9001db1c:	4313      	orrs	r3, r2
9001db1e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
9001db20:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001db24:	4313      	orrs	r3, r2
9001db26:	b29b      	uxth	r3, r3
9001db28:	9310      	str	r3, [sp, #64]	; 0x40
9001db2a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001db2c:	781a      	ldrb	r2, [r3, #0]
9001db2e:	ea4f 0349 	mov.w	r3, r9, lsl #1
9001db32:	fb05 b919 	mls	r9, r5, r9, fp
9001db36:	4132      	asrs	r2, r6
9001db38:	fb03 fb05 	mul.w	fp, r3, r5
9001db3c:	930d      	str	r3, [sp, #52]	; 0x34
9001db3e:	b2d2      	uxtb	r2, r2
9001db40:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
9001db44:	f11a 3aff 	adds.w	sl, sl, #4294967295
9001db48:	f0c0 80f5 	bcc.w	9001dd36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
9001db4c:	46ae      	mov	lr, r5
9001db4e:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
9001db52:	f11e 3eff 	adds.w	lr, lr, #4294967295
9001db56:	f0c0 80dd 	bcc.w	9001dd14 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
9001db5a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001db5c:	4013      	ands	r3, r2
9001db5e:	d055      	beq.n	9001dc0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
9001db60:	20ff      	movs	r0, #255	; 0xff
9001db62:	990e      	ldr	r1, [sp, #56]	; 0x38
9001db64:	fb90 f1f1 	sdiv	r1, r0, r1
9001db68:	434b      	muls	r3, r1
9001db6a:	2bfe      	cmp	r3, #254	; 0xfe
9001db6c:	dd03      	ble.n	9001db76 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
9001db6e:	990c      	ldr	r1, [sp, #48]	; 0x30
9001db70:	4281      	cmp	r1, r0
9001db72:	f000 80c4 	beq.w	9001dcfe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
9001db76:	990c      	ldr	r1, [sp, #48]	; 0x30
9001db78:	f8bc 4000 	ldrh.w	r4, [ip]
9001db7c:	fb11 f303 	smulbb	r3, r1, r3
9001db80:	1220      	asrs	r0, r4, #8
9001db82:	b29b      	uxth	r3, r3
9001db84:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001db88:	1c59      	adds	r1, r3, #1
9001db8a:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
9001db8e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
9001db92:	10e1      	asrs	r1, r4, #3
9001db94:	f3c3 2307 	ubfx	r3, r3, #8, #8
9001db98:	00e4      	lsls	r4, r4, #3
9001db9a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001db9e:	b29f      	uxth	r7, r3
9001dba0:	43db      	mvns	r3, r3
9001dba2:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001dba6:	b2db      	uxtb	r3, r3
9001dba8:	b2e4      	uxtb	r4, r4
9001dbaa:	9309      	str	r3, [sp, #36]	; 0x24
9001dbac:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9001dbae:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001dbb2:	fb13 f907 	smulbb	r9, r3, r7
9001dbb6:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001dbb8:	fb00 9003 	mla	r0, r0, r3, r9
9001dbbc:	9b12      	ldr	r3, [sp, #72]	; 0x48
9001dbbe:	fb13 f907 	smulbb	r9, r3, r7
9001dbc2:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001dbc4:	b280      	uxth	r0, r0
9001dbc6:	fb01 9103 	mla	r1, r1, r3, r9
9001dbca:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001dbcc:	fb13 f707 	smulbb	r7, r3, r7
9001dbd0:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001dbd2:	b289      	uxth	r1, r1
9001dbd4:	fb04 7403 	mla	r4, r4, r3, r7
9001dbd8:	1c43      	adds	r3, r0, #1
9001dbda:	b2a4      	uxth	r4, r4
9001dbdc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001dbe0:	f104 0901 	add.w	r9, r4, #1
9001dbe4:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
9001dbe8:	eb09 2914 	add.w	r9, r9, r4, lsr #8
9001dbec:	f3c9 29c4 	ubfx	r9, r9, #11, #5
9001dbf0:	ea49 0000 	orr.w	r0, r9, r0
9001dbf4:	f101 0901 	add.w	r9, r1, #1
9001dbf8:	eb09 2911 	add.w	r9, r9, r1, lsr #8
9001dbfc:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001dc00:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001dc04:	ea40 0009 	orr.w	r0, r0, r9
9001dc08:	f8ac 0000 	strh.w	r0, [ip]
9001dc0c:	4446      	add	r6, r8
9001dc0e:	b2b6      	uxth	r6, r6
9001dc10:	2e07      	cmp	r6, #7
9001dc12:	bf89      	itett	hi
9001dc14:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
9001dc16:	fa42 f208 	asrls.w	r2, r2, r8
9001dc1a:	2600      	movhi	r6, #0
9001dc1c:	785a      	ldrbhi	r2, [r3, #1]
9001dc1e:	bf8a      	itet	hi
9001dc20:	3301      	addhi	r3, #1
9001dc22:	b2d2      	uxtbls	r2, r2
9001dc24:	9328      	strhi	r3, [sp, #160]	; 0xa0
9001dc26:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001dc28:	449c      	add	ip, r3
9001dc2a:	e792      	b.n	9001db52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
9001dc2c:	441c      	add	r4, r3
9001dc2e:	b224      	sxth	r4, r4
9001dc30:	e6d5      	b.n	9001d9de <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
9001dc32:	f1ba 0f01 	cmp.w	sl, #1
9001dc36:	f47f af0c 	bne.w	9001da52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001dc3a:	f1bb 0f01 	cmp.w	fp, #1
9001dc3e:	f47f af08 	bne.w	9001da52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001dc42:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 9001dd08 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
9001dc46:	f8db 0000 	ldr.w	r0, [fp]
9001dc4a:	6803      	ldr	r3, [r0, #0]
9001dc4c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001dc4e:	4798      	blx	r3
9001dc50:	f410 7380 	ands.w	r3, r0, #256	; 0x100
9001dc54:	465a      	mov	r2, fp
9001dc56:	d006      	beq.n	9001dc66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
9001dc58:	f1b8 0f04 	cmp.w	r8, #4
9001dc5c:	d140      	bne.n	9001dce0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
9001dc5e:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001dc60:	3300      	adds	r3, #0
9001dc62:	bf18      	it	ne
9001dc64:	2301      	movne	r3, #1
9001dc66:	0580      	lsls	r0, r0, #22
9001dc68:	d56e      	bpl.n	9001dd48 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
9001dc6a:	f1b8 0f08 	cmp.w	r8, #8
9001dc6e:	d16b      	bne.n	9001dd48 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
9001dc70:	2b00      	cmp	r3, #0
9001dc72:	bf0c      	ite	eq
9001dc74:	f44f 7100 	moveq.w	r1, #512	; 0x200
9001dc78:	f44f 7180 	movne.w	r1, #256	; 0x100
9001dc7c:	2d00      	cmp	r5, #0
9001dc7e:	f47f aee8 	bne.w	9001da52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001dc82:	2e00      	cmp	r6, #0
9001dc84:	f47f aee5 	bne.w	9001da52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001dc88:	19e3      	adds	r3, r4, r7
9001dc8a:	980f      	ldr	r0, [sp, #60]	; 0x3c
9001dc8c:	4283      	cmp	r3, r0
9001dc8e:	f73f aee0 	bgt.w	9001da52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001dc92:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001dc94:	980d      	ldr	r0, [sp, #52]	; 0x34
9001dc96:	444b      	add	r3, r9
9001dc98:	4283      	cmp	r3, r0
9001dc9a:	f73f aeda 	bgt.w	9001da52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001dc9e:	b2bf      	uxth	r7, r7
9001dca0:	f1b8 0f08 	cmp.w	r8, #8
9001dca4:	6810      	ldr	r0, [r2, #0]
9001dca6:	f04f 0500 	mov.w	r5, #0
9001dcaa:	bf18      	it	ne
9001dcac:	3701      	addne	r7, #1
9001dcae:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
9001dcb2:	6804      	ldr	r4, [r0, #0]
9001dcb4:	bf18      	it	ne
9001dcb6:	f027 0701 	bicne.w	r7, r7, #1
9001dcba:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
9001dcbe:	e9cd 1505 	strd	r1, r5, [sp, #20]
9001dcc2:	990c      	ldr	r1, [sp, #48]	; 0x30
9001dcc4:	bf18      	it	ne
9001dcc6:	b2bf      	uxthne	r7, r7
9001dcc8:	9104      	str	r1, [sp, #16]
9001dcca:	992a      	ldr	r1, [sp, #168]	; 0xa8
9001dccc:	e9cd 7900 	strd	r7, r9, [sp]
9001dcd0:	e9cd 7102 	strd	r7, r1, [sp, #8]
9001dcd4:	9928      	ldr	r1, [sp, #160]	; 0xa0
9001dcd6:	6d64      	ldr	r4, [r4, #84]	; 0x54
9001dcd8:	47a0      	blx	r4
9001dcda:	b019      	add	sp, #100	; 0x64
9001dcdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001dce0:	2300      	movs	r3, #0
9001dce2:	e7c0      	b.n	9001dc66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
9001dce4:	2208      	movs	r2, #8
9001dce6:	fb92 f3f8 	sdiv	r3, r2, r8
9001dcea:	1e5a      	subs	r2, r3, #1
9001dcec:	443a      	add	r2, r7
9001dcee:	fb92 f2f3 	sdiv	r2, r2, r3
9001dcf2:	fb12 f203 	smulbb	r2, r2, r3
9001dcf6:	b292      	uxth	r2, r2
9001dcf8:	e6b0      	b.n	9001da5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
9001dcfa:	980b      	ldr	r0, [sp, #44]	; 0x2c
9001dcfc:	e6ec      	b.n	9001dad8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
9001dcfe:	9810      	ldr	r0, [sp, #64]	; 0x40
9001dd00:	e782      	b.n	9001dc08 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
9001dd02:	bf00      	nop
9001dd04:	240235a4 	.word	0x240235a4
9001dd08:	240235ac 	.word	0x240235ac
9001dd0c:	240235a6 	.word	0x240235a6
9001dd10:	00fff800 	.word	0x00fff800
9001dd14:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001dd16:	b153      	cbz	r3, 9001dd2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
9001dd18:	441e      	add	r6, r3
9001dd1a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001dd1c:	b2b6      	uxth	r6, r6
9001dd1e:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
9001dd22:	f006 0607 	and.w	r6, r6, #7
9001dd26:	781a      	ldrb	r2, [r3, #0]
9001dd28:	9328      	str	r3, [sp, #160]	; 0xa0
9001dd2a:	4132      	asrs	r2, r6
9001dd2c:	b2d2      	uxtb	r2, r2
9001dd2e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001dd30:	445b      	add	r3, fp
9001dd32:	930a      	str	r3, [sp, #40]	; 0x28
9001dd34:	e706      	b.n	9001db44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
9001dd36:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001dd38:	2b00      	cmp	r3, #0
9001dd3a:	d1ce      	bne.n	9001dcda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001dd3c:	4b05      	ldr	r3, [pc, #20]	; (9001dd54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
9001dd3e:	6818      	ldr	r0, [r3, #0]
9001dd40:	6803      	ldr	r3, [r0, #0]
9001dd42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001dd44:	4798      	blx	r3
9001dd46:	e7c8      	b.n	9001dcda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001dd48:	2b00      	cmp	r3, #0
9001dd4a:	f43f ae82 	beq.w	9001da52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001dd4e:	f44f 7180 	mov.w	r1, #256	; 0x100
9001dd52:	e793      	b.n	9001dc7c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
9001dd54:	240235ac 	.word	0x240235ac

9001dd58 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
9001dd58:	b538      	push	{r3, r4, r5, lr}
9001dd5a:	4c15      	ldr	r4, [pc, #84]	; (9001ddb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
9001dd5c:	4605      	mov	r5, r0
9001dd5e:	7823      	ldrb	r3, [r4, #0]
9001dd60:	f3bf 8f5b 	dmb	ish
9001dd64:	07da      	lsls	r2, r3, #31
9001dd66:	d40b      	bmi.n	9001dd80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
9001dd68:	4620      	mov	r0, r4
9001dd6a:	f008 fa7c 	bl	90026266 <__cxa_guard_acquire>
9001dd6e:	b138      	cbz	r0, 9001dd80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
9001dd70:	4620      	mov	r0, r4
9001dd72:	f008 fa84 	bl	9002627e <__cxa_guard_release>
9001dd76:	4a0f      	ldr	r2, [pc, #60]	; (9001ddb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
9001dd78:	490f      	ldr	r1, [pc, #60]	; (9001ddb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
9001dd7a:	4810      	ldr	r0, [pc, #64]	; (9001ddbc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
9001dd7c:	f008 fa6c 	bl	90026258 <__aeabi_atexit>
9001dd80:	4c0f      	ldr	r4, [pc, #60]	; (9001ddc0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
9001dd82:	7823      	ldrb	r3, [r4, #0]
9001dd84:	f3bf 8f5b 	dmb	ish
9001dd88:	07db      	lsls	r3, r3, #31
9001dd8a:	d40b      	bmi.n	9001dda4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
9001dd8c:	4620      	mov	r0, r4
9001dd8e:	f008 fa6a 	bl	90026266 <__cxa_guard_acquire>
9001dd92:	b138      	cbz	r0, 9001dda4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
9001dd94:	4620      	mov	r0, r4
9001dd96:	f008 fa72 	bl	9002627e <__cxa_guard_release>
9001dd9a:	4a06      	ldr	r2, [pc, #24]	; (9001ddb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
9001dd9c:	4909      	ldr	r1, [pc, #36]	; (9001ddc4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
9001dd9e:	480a      	ldr	r0, [pc, #40]	; (9001ddc8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
9001dda0:	f008 fa5a 	bl	90026258 <__aeabi_atexit>
9001dda4:	4b05      	ldr	r3, [pc, #20]	; (9001ddbc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
9001dda6:	616b      	str	r3, [r5, #20]
9001dda8:	4b07      	ldr	r3, [pc, #28]	; (9001ddc8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
9001ddaa:	61ab      	str	r3, [r5, #24]
9001ddac:	bd38      	pop	{r3, r4, r5, pc}
9001ddae:	bf00      	nop
9001ddb0:	2402368c 	.word	0x2402368c
9001ddb4:	24000000 	.word	0x24000000
9001ddb8:	9001ab3b 	.word	0x9001ab3b
9001ddbc:	240000c0 	.word	0x240000c0
9001ddc0:	24023690 	.word	0x24023690
9001ddc4:	9001ab39 	.word	0x9001ab39
9001ddc8:	240000c4 	.word	0x240000c4

9001ddcc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
9001ddcc:	b538      	push	{r3, r4, r5, lr}
9001ddce:	4c15      	ldr	r4, [pc, #84]	; (9001de24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
9001ddd0:	4605      	mov	r5, r0
9001ddd2:	7823      	ldrb	r3, [r4, #0]
9001ddd4:	f3bf 8f5b 	dmb	ish
9001ddd8:	07da      	lsls	r2, r3, #31
9001ddda:	d40b      	bmi.n	9001ddf4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
9001dddc:	4620      	mov	r0, r4
9001ddde:	f008 fa42 	bl	90026266 <__cxa_guard_acquire>
9001dde2:	b138      	cbz	r0, 9001ddf4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
9001dde4:	4620      	mov	r0, r4
9001dde6:	f008 fa4a 	bl	9002627e <__cxa_guard_release>
9001ddea:	4a0f      	ldr	r2, [pc, #60]	; (9001de28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
9001ddec:	490f      	ldr	r1, [pc, #60]	; (9001de2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
9001ddee:	4810      	ldr	r0, [pc, #64]	; (9001de30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9001ddf0:	f008 fa32 	bl	90026258 <__aeabi_atexit>
9001ddf4:	4c0f      	ldr	r4, [pc, #60]	; (9001de34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
9001ddf6:	7823      	ldrb	r3, [r4, #0]
9001ddf8:	f3bf 8f5b 	dmb	ish
9001ddfc:	07db      	lsls	r3, r3, #31
9001ddfe:	d40b      	bmi.n	9001de18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
9001de00:	4620      	mov	r0, r4
9001de02:	f008 fa30 	bl	90026266 <__cxa_guard_acquire>
9001de06:	b138      	cbz	r0, 9001de18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
9001de08:	4620      	mov	r0, r4
9001de0a:	f008 fa38 	bl	9002627e <__cxa_guard_release>
9001de0e:	4a06      	ldr	r2, [pc, #24]	; (9001de28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
9001de10:	4909      	ldr	r1, [pc, #36]	; (9001de38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
9001de12:	480a      	ldr	r0, [pc, #40]	; (9001de3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9001de14:	f008 fa20 	bl	90026258 <__aeabi_atexit>
9001de18:	4b05      	ldr	r3, [pc, #20]	; (9001de30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9001de1a:	60eb      	str	r3, [r5, #12]
9001de1c:	4b07      	ldr	r3, [pc, #28]	; (9001de3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9001de1e:	612b      	str	r3, [r5, #16]
9001de20:	bd38      	pop	{r3, r4, r5, pc}
9001de22:	bf00      	nop
9001de24:	24023664 	.word	0x24023664
9001de28:	24000000 	.word	0x24000000
9001de2c:	9001ab3f 	.word	0x9001ab3f
9001de30:	24000098 	.word	0x24000098
9001de34:	24023668 	.word	0x24023668
9001de38:	9001ab3d 	.word	0x9001ab3d
9001de3c:	2400009c 	.word	0x2400009c

9001de40 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
9001de40:	b510      	push	{r4, lr}
9001de42:	4604      	mov	r4, r0
9001de44:	f7ff ff88 	bl	9001dd58 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
9001de48:	4620      	mov	r0, r4
9001de4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001de4e:	f7ff bfbd 	b.w	9001ddcc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

9001de54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
9001de54:	b538      	push	{r3, r4, r5, lr}
9001de56:	4c15      	ldr	r4, [pc, #84]	; (9001deac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
9001de58:	4605      	mov	r5, r0
9001de5a:	7823      	ldrb	r3, [r4, #0]
9001de5c:	f3bf 8f5b 	dmb	ish
9001de60:	07da      	lsls	r2, r3, #31
9001de62:	d40b      	bmi.n	9001de7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
9001de64:	4620      	mov	r0, r4
9001de66:	f008 f9fe 	bl	90026266 <__cxa_guard_acquire>
9001de6a:	b138      	cbz	r0, 9001de7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
9001de6c:	4620      	mov	r0, r4
9001de6e:	f008 fa06 	bl	9002627e <__cxa_guard_release>
9001de72:	4a0f      	ldr	r2, [pc, #60]	; (9001deb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
9001de74:	490f      	ldr	r1, [pc, #60]	; (9001deb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
9001de76:	4810      	ldr	r0, [pc, #64]	; (9001deb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
9001de78:	f008 f9ee 	bl	90026258 <__aeabi_atexit>
9001de7c:	4c0f      	ldr	r4, [pc, #60]	; (9001debc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
9001de7e:	7823      	ldrb	r3, [r4, #0]
9001de80:	f3bf 8f5b 	dmb	ish
9001de84:	07db      	lsls	r3, r3, #31
9001de86:	d40b      	bmi.n	9001dea0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
9001de88:	4620      	mov	r0, r4
9001de8a:	f008 f9ec 	bl	90026266 <__cxa_guard_acquire>
9001de8e:	b138      	cbz	r0, 9001dea0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
9001de90:	4620      	mov	r0, r4
9001de92:	f008 f9f4 	bl	9002627e <__cxa_guard_release>
9001de96:	4a06      	ldr	r2, [pc, #24]	; (9001deb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
9001de98:	4909      	ldr	r1, [pc, #36]	; (9001dec0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
9001de9a:	480a      	ldr	r0, [pc, #40]	; (9001dec4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
9001de9c:	f008 f9dc 	bl	90026258 <__aeabi_atexit>
9001dea0:	4b05      	ldr	r3, [pc, #20]	; (9001deb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
9001dea2:	626b      	str	r3, [r5, #36]	; 0x24
9001dea4:	4b07      	ldr	r3, [pc, #28]	; (9001dec4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
9001dea6:	62ab      	str	r3, [r5, #40]	; 0x28
9001dea8:	bd38      	pop	{r3, r4, r5, pc}
9001deaa:	bf00      	nop
9001deac:	24023694 	.word	0x24023694
9001deb0:	24000000 	.word	0x24000000
9001deb4:	9001ab33 	.word	0x9001ab33
9001deb8:	240000c8 	.word	0x240000c8
9001debc:	24023698 	.word	0x24023698
9001dec0:	9001ab31 	.word	0x9001ab31
9001dec4:	240000cc 	.word	0x240000cc

9001dec8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
9001dec8:	b538      	push	{r3, r4, r5, lr}
9001deca:	4c15      	ldr	r4, [pc, #84]	; (9001df20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
9001decc:	4605      	mov	r5, r0
9001dece:	7823      	ldrb	r3, [r4, #0]
9001ded0:	f3bf 8f5b 	dmb	ish
9001ded4:	07da      	lsls	r2, r3, #31
9001ded6:	d40b      	bmi.n	9001def0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
9001ded8:	4620      	mov	r0, r4
9001deda:	f008 f9c4 	bl	90026266 <__cxa_guard_acquire>
9001dede:	b138      	cbz	r0, 9001def0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
9001dee0:	4620      	mov	r0, r4
9001dee2:	f008 f9cc 	bl	9002627e <__cxa_guard_release>
9001dee6:	4a0f      	ldr	r2, [pc, #60]	; (9001df24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
9001dee8:	490f      	ldr	r1, [pc, #60]	; (9001df28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
9001deea:	4810      	ldr	r0, [pc, #64]	; (9001df2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
9001deec:	f008 f9b4 	bl	90026258 <__aeabi_atexit>
9001def0:	4c0f      	ldr	r4, [pc, #60]	; (9001df30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
9001def2:	7823      	ldrb	r3, [r4, #0]
9001def4:	f3bf 8f5b 	dmb	ish
9001def8:	07db      	lsls	r3, r3, #31
9001defa:	d40b      	bmi.n	9001df14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
9001defc:	4620      	mov	r0, r4
9001defe:	f008 f9b2 	bl	90026266 <__cxa_guard_acquire>
9001df02:	b138      	cbz	r0, 9001df14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
9001df04:	4620      	mov	r0, r4
9001df06:	f008 f9ba 	bl	9002627e <__cxa_guard_release>
9001df0a:	4a06      	ldr	r2, [pc, #24]	; (9001df24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
9001df0c:	4909      	ldr	r1, [pc, #36]	; (9001df34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
9001df0e:	480a      	ldr	r0, [pc, #40]	; (9001df38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9001df10:	f008 f9a2 	bl	90026258 <__aeabi_atexit>
9001df14:	4b05      	ldr	r3, [pc, #20]	; (9001df2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
9001df16:	61eb      	str	r3, [r5, #28]
9001df18:	4b07      	ldr	r3, [pc, #28]	; (9001df38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9001df1a:	622b      	str	r3, [r5, #32]
9001df1c:	bd38      	pop	{r3, r4, r5, pc}
9001df1e:	bf00      	nop
9001df20:	2402366c 	.word	0x2402366c
9001df24:	24000000 	.word	0x24000000
9001df28:	9001ab37 	.word	0x9001ab37
9001df2c:	240000a0 	.word	0x240000a0
9001df30:	24023670 	.word	0x24023670
9001df34:	9001ab35 	.word	0x9001ab35
9001df38:	240000a4 	.word	0x240000a4

9001df3c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
9001df3c:	b510      	push	{r4, lr}
9001df3e:	4604      	mov	r4, r0
9001df40:	f7ff ff88 	bl	9001de54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
9001df44:	4620      	mov	r0, r4
9001df46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001df4a:	f7ff bfbd 	b.w	9001dec8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

9001df50 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
9001df50:	b538      	push	{r3, r4, r5, lr}
9001df52:	4c15      	ldr	r4, [pc, #84]	; (9001dfa8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
9001df54:	4605      	mov	r5, r0
9001df56:	7823      	ldrb	r3, [r4, #0]
9001df58:	f3bf 8f5b 	dmb	ish
9001df5c:	07da      	lsls	r2, r3, #31
9001df5e:	d40b      	bmi.n	9001df78 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
9001df60:	4620      	mov	r0, r4
9001df62:	f008 f980 	bl	90026266 <__cxa_guard_acquire>
9001df66:	b138      	cbz	r0, 9001df78 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
9001df68:	4620      	mov	r0, r4
9001df6a:	f008 f988 	bl	9002627e <__cxa_guard_release>
9001df6e:	4a0f      	ldr	r2, [pc, #60]	; (9001dfac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
9001df70:	490f      	ldr	r1, [pc, #60]	; (9001dfb0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
9001df72:	4810      	ldr	r0, [pc, #64]	; (9001dfb4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9001df74:	f008 f970 	bl	90026258 <__aeabi_atexit>
9001df78:	4c0f      	ldr	r4, [pc, #60]	; (9001dfb8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
9001df7a:	7823      	ldrb	r3, [r4, #0]
9001df7c:	f3bf 8f5b 	dmb	ish
9001df80:	07db      	lsls	r3, r3, #31
9001df82:	d40b      	bmi.n	9001df9c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
9001df84:	4620      	mov	r0, r4
9001df86:	f008 f96e 	bl	90026266 <__cxa_guard_acquire>
9001df8a:	b138      	cbz	r0, 9001df9c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
9001df8c:	4620      	mov	r0, r4
9001df8e:	f008 f976 	bl	9002627e <__cxa_guard_release>
9001df92:	4a06      	ldr	r2, [pc, #24]	; (9001dfac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
9001df94:	4909      	ldr	r1, [pc, #36]	; (9001dfbc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
9001df96:	480a      	ldr	r0, [pc, #40]	; (9001dfc0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
9001df98:	f008 f95e 	bl	90026258 <__aeabi_atexit>
9001df9c:	4b05      	ldr	r3, [pc, #20]	; (9001dfb4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9001df9e:	636b      	str	r3, [r5, #52]	; 0x34
9001dfa0:	4b07      	ldr	r3, [pc, #28]	; (9001dfc0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
9001dfa2:	63ab      	str	r3, [r5, #56]	; 0x38
9001dfa4:	bd38      	pop	{r3, r4, r5, pc}
9001dfa6:	bf00      	nop
9001dfa8:	240236a4 	.word	0x240236a4
9001dfac:	24000000 	.word	0x24000000
9001dfb0:	9001ab2b 	.word	0x9001ab2b
9001dfb4:	240000d8 	.word	0x240000d8
9001dfb8:	240236a8 	.word	0x240236a8
9001dfbc:	9001ab29 	.word	0x9001ab29
9001dfc0:	240000dc 	.word	0x240000dc

9001dfc4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
9001dfc4:	b538      	push	{r3, r4, r5, lr}
9001dfc6:	4c15      	ldr	r4, [pc, #84]	; (9001e01c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
9001dfc8:	4605      	mov	r5, r0
9001dfca:	7823      	ldrb	r3, [r4, #0]
9001dfcc:	f3bf 8f5b 	dmb	ish
9001dfd0:	07da      	lsls	r2, r3, #31
9001dfd2:	d40b      	bmi.n	9001dfec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
9001dfd4:	4620      	mov	r0, r4
9001dfd6:	f008 f946 	bl	90026266 <__cxa_guard_acquire>
9001dfda:	b138      	cbz	r0, 9001dfec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
9001dfdc:	4620      	mov	r0, r4
9001dfde:	f008 f94e 	bl	9002627e <__cxa_guard_release>
9001dfe2:	4a0f      	ldr	r2, [pc, #60]	; (9001e020 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
9001dfe4:	490f      	ldr	r1, [pc, #60]	; (9001e024 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
9001dfe6:	4810      	ldr	r0, [pc, #64]	; (9001e028 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
9001dfe8:	f008 f936 	bl	90026258 <__aeabi_atexit>
9001dfec:	4c0f      	ldr	r4, [pc, #60]	; (9001e02c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
9001dfee:	7823      	ldrb	r3, [r4, #0]
9001dff0:	f3bf 8f5b 	dmb	ish
9001dff4:	07db      	lsls	r3, r3, #31
9001dff6:	d40b      	bmi.n	9001e010 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
9001dff8:	4620      	mov	r0, r4
9001dffa:	f008 f934 	bl	90026266 <__cxa_guard_acquire>
9001dffe:	b138      	cbz	r0, 9001e010 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
9001e000:	4620      	mov	r0, r4
9001e002:	f008 f93c 	bl	9002627e <__cxa_guard_release>
9001e006:	4a06      	ldr	r2, [pc, #24]	; (9001e020 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
9001e008:	4909      	ldr	r1, [pc, #36]	; (9001e030 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
9001e00a:	480a      	ldr	r0, [pc, #40]	; (9001e034 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
9001e00c:	f008 f924 	bl	90026258 <__aeabi_atexit>
9001e010:	4b05      	ldr	r3, [pc, #20]	; (9001e028 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
9001e012:	62eb      	str	r3, [r5, #44]	; 0x2c
9001e014:	4b07      	ldr	r3, [pc, #28]	; (9001e034 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
9001e016:	632b      	str	r3, [r5, #48]	; 0x30
9001e018:	bd38      	pop	{r3, r4, r5, pc}
9001e01a:	bf00      	nop
9001e01c:	24023674 	.word	0x24023674
9001e020:	24000000 	.word	0x24000000
9001e024:	9001ab2f 	.word	0x9001ab2f
9001e028:	240000a8 	.word	0x240000a8
9001e02c:	24023678 	.word	0x24023678
9001e030:	9001ab2d 	.word	0x9001ab2d
9001e034:	240000ac 	.word	0x240000ac

9001e038 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
9001e038:	b510      	push	{r4, lr}
9001e03a:	4604      	mov	r4, r0
9001e03c:	f7ff ff88 	bl	9001df50 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
9001e040:	4620      	mov	r0, r4
9001e042:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001e046:	f7ff bfbd 	b.w	9001dfc4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

9001e04c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
9001e04c:	b538      	push	{r3, r4, r5, lr}
9001e04e:	4c15      	ldr	r4, [pc, #84]	; (9001e0a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
9001e050:	4605      	mov	r5, r0
9001e052:	7823      	ldrb	r3, [r4, #0]
9001e054:	f3bf 8f5b 	dmb	ish
9001e058:	07da      	lsls	r2, r3, #31
9001e05a:	d40b      	bmi.n	9001e074 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
9001e05c:	4620      	mov	r0, r4
9001e05e:	f008 f902 	bl	90026266 <__cxa_guard_acquire>
9001e062:	b138      	cbz	r0, 9001e074 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
9001e064:	4620      	mov	r0, r4
9001e066:	f008 f90a 	bl	9002627e <__cxa_guard_release>
9001e06a:	4a0f      	ldr	r2, [pc, #60]	; (9001e0a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
9001e06c:	490f      	ldr	r1, [pc, #60]	; (9001e0ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
9001e06e:	4810      	ldr	r0, [pc, #64]	; (9001e0b0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9001e070:	f008 f8f2 	bl	90026258 <__aeabi_atexit>
9001e074:	4c0f      	ldr	r4, [pc, #60]	; (9001e0b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
9001e076:	7823      	ldrb	r3, [r4, #0]
9001e078:	f3bf 8f5b 	dmb	ish
9001e07c:	07db      	lsls	r3, r3, #31
9001e07e:	d40b      	bmi.n	9001e098 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
9001e080:	4620      	mov	r0, r4
9001e082:	f008 f8f0 	bl	90026266 <__cxa_guard_acquire>
9001e086:	b138      	cbz	r0, 9001e098 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
9001e088:	4620      	mov	r0, r4
9001e08a:	f008 f8f8 	bl	9002627e <__cxa_guard_release>
9001e08e:	4a06      	ldr	r2, [pc, #24]	; (9001e0a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
9001e090:	4909      	ldr	r1, [pc, #36]	; (9001e0b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
9001e092:	480a      	ldr	r0, [pc, #40]	; (9001e0bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9001e094:	f008 f8e0 	bl	90026258 <__aeabi_atexit>
9001e098:	4b05      	ldr	r3, [pc, #20]	; (9001e0b0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9001e09a:	656b      	str	r3, [r5, #84]	; 0x54
9001e09c:	4b07      	ldr	r3, [pc, #28]	; (9001e0bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9001e09e:	65ab      	str	r3, [r5, #88]	; 0x58
9001e0a0:	bd38      	pop	{r3, r4, r5, pc}
9001e0a2:	bf00      	nop
9001e0a4:	240236ac 	.word	0x240236ac
9001e0a8:	24000000 	.word	0x24000000
9001e0ac:	9001ab1b 	.word	0x9001ab1b
9001e0b0:	240000e0 	.word	0x240000e0
9001e0b4:	240236b0 	.word	0x240236b0
9001e0b8:	9001ab19 	.word	0x9001ab19
9001e0bc:	240000e4 	.word	0x240000e4

9001e0c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
9001e0c0:	b538      	push	{r3, r4, r5, lr}
9001e0c2:	4c15      	ldr	r4, [pc, #84]	; (9001e118 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
9001e0c4:	4605      	mov	r5, r0
9001e0c6:	7823      	ldrb	r3, [r4, #0]
9001e0c8:	f3bf 8f5b 	dmb	ish
9001e0cc:	07da      	lsls	r2, r3, #31
9001e0ce:	d40b      	bmi.n	9001e0e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
9001e0d0:	4620      	mov	r0, r4
9001e0d2:	f008 f8c8 	bl	90026266 <__cxa_guard_acquire>
9001e0d6:	b138      	cbz	r0, 9001e0e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
9001e0d8:	4620      	mov	r0, r4
9001e0da:	f008 f8d0 	bl	9002627e <__cxa_guard_release>
9001e0de:	4a0f      	ldr	r2, [pc, #60]	; (9001e11c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
9001e0e0:	490f      	ldr	r1, [pc, #60]	; (9001e120 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
9001e0e2:	4810      	ldr	r0, [pc, #64]	; (9001e124 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
9001e0e4:	f008 f8b8 	bl	90026258 <__aeabi_atexit>
9001e0e8:	4c0f      	ldr	r4, [pc, #60]	; (9001e128 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
9001e0ea:	7823      	ldrb	r3, [r4, #0]
9001e0ec:	f3bf 8f5b 	dmb	ish
9001e0f0:	07db      	lsls	r3, r3, #31
9001e0f2:	d40b      	bmi.n	9001e10c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
9001e0f4:	4620      	mov	r0, r4
9001e0f6:	f008 f8b6 	bl	90026266 <__cxa_guard_acquire>
9001e0fa:	b138      	cbz	r0, 9001e10c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
9001e0fc:	4620      	mov	r0, r4
9001e0fe:	f008 f8be 	bl	9002627e <__cxa_guard_release>
9001e102:	4a06      	ldr	r2, [pc, #24]	; (9001e11c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
9001e104:	4909      	ldr	r1, [pc, #36]	; (9001e12c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
9001e106:	480a      	ldr	r0, [pc, #40]	; (9001e130 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
9001e108:	f008 f8a6 	bl	90026258 <__aeabi_atexit>
9001e10c:	4b05      	ldr	r3, [pc, #20]	; (9001e124 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
9001e10e:	64eb      	str	r3, [r5, #76]	; 0x4c
9001e110:	4b07      	ldr	r3, [pc, #28]	; (9001e130 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
9001e112:	652b      	str	r3, [r5, #80]	; 0x50
9001e114:	bd38      	pop	{r3, r4, r5, pc}
9001e116:	bf00      	nop
9001e118:	240236b4 	.word	0x240236b4
9001e11c:	24000000 	.word	0x24000000
9001e120:	9001ab1f 	.word	0x9001ab1f
9001e124:	240000e8 	.word	0x240000e8
9001e128:	240236b8 	.word	0x240236b8
9001e12c:	9001ab1d 	.word	0x9001ab1d
9001e130:	240000ec 	.word	0x240000ec

9001e134 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
9001e134:	b538      	push	{r3, r4, r5, lr}
9001e136:	4c15      	ldr	r4, [pc, #84]	; (9001e18c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
9001e138:	4605      	mov	r5, r0
9001e13a:	7823      	ldrb	r3, [r4, #0]
9001e13c:	f3bf 8f5b 	dmb	ish
9001e140:	07da      	lsls	r2, r3, #31
9001e142:	d40b      	bmi.n	9001e15c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
9001e144:	4620      	mov	r0, r4
9001e146:	f008 f88e 	bl	90026266 <__cxa_guard_acquire>
9001e14a:	b138      	cbz	r0, 9001e15c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
9001e14c:	4620      	mov	r0, r4
9001e14e:	f008 f896 	bl	9002627e <__cxa_guard_release>
9001e152:	4a0f      	ldr	r2, [pc, #60]	; (9001e190 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
9001e154:	490f      	ldr	r1, [pc, #60]	; (9001e194 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
9001e156:	4810      	ldr	r0, [pc, #64]	; (9001e198 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
9001e158:	f008 f87e 	bl	90026258 <__aeabi_atexit>
9001e15c:	4c0f      	ldr	r4, [pc, #60]	; (9001e19c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
9001e15e:	7823      	ldrb	r3, [r4, #0]
9001e160:	f3bf 8f5b 	dmb	ish
9001e164:	07db      	lsls	r3, r3, #31
9001e166:	d40b      	bmi.n	9001e180 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
9001e168:	4620      	mov	r0, r4
9001e16a:	f008 f87c 	bl	90026266 <__cxa_guard_acquire>
9001e16e:	b138      	cbz	r0, 9001e180 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
9001e170:	4620      	mov	r0, r4
9001e172:	f008 f884 	bl	9002627e <__cxa_guard_release>
9001e176:	4a06      	ldr	r2, [pc, #24]	; (9001e190 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
9001e178:	4909      	ldr	r1, [pc, #36]	; (9001e1a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
9001e17a:	480a      	ldr	r0, [pc, #40]	; (9001e1a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
9001e17c:	f008 f86c 	bl	90026258 <__aeabi_atexit>
9001e180:	4b05      	ldr	r3, [pc, #20]	; (9001e198 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
9001e182:	646b      	str	r3, [r5, #68]	; 0x44
9001e184:	4b07      	ldr	r3, [pc, #28]	; (9001e1a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
9001e186:	64ab      	str	r3, [r5, #72]	; 0x48
9001e188:	bd38      	pop	{r3, r4, r5, pc}
9001e18a:	bf00      	nop
9001e18c:	2402367c 	.word	0x2402367c
9001e190:	24000000 	.word	0x24000000
9001e194:	9001ab23 	.word	0x9001ab23
9001e198:	240000b0 	.word	0x240000b0
9001e19c:	24023680 	.word	0x24023680
9001e1a0:	9001ab21 	.word	0x9001ab21
9001e1a4:	240000b4 	.word	0x240000b4

9001e1a8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
9001e1a8:	b538      	push	{r3, r4, r5, lr}
9001e1aa:	4c15      	ldr	r4, [pc, #84]	; (9001e200 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
9001e1ac:	4605      	mov	r5, r0
9001e1ae:	7823      	ldrb	r3, [r4, #0]
9001e1b0:	f3bf 8f5b 	dmb	ish
9001e1b4:	07da      	lsls	r2, r3, #31
9001e1b6:	d40b      	bmi.n	9001e1d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
9001e1b8:	4620      	mov	r0, r4
9001e1ba:	f008 f854 	bl	90026266 <__cxa_guard_acquire>
9001e1be:	b138      	cbz	r0, 9001e1d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
9001e1c0:	4620      	mov	r0, r4
9001e1c2:	f008 f85c 	bl	9002627e <__cxa_guard_release>
9001e1c6:	4a0f      	ldr	r2, [pc, #60]	; (9001e204 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
9001e1c8:	490f      	ldr	r1, [pc, #60]	; (9001e208 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
9001e1ca:	4810      	ldr	r0, [pc, #64]	; (9001e20c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
9001e1cc:	f008 f844 	bl	90026258 <__aeabi_atexit>
9001e1d0:	4c0f      	ldr	r4, [pc, #60]	; (9001e210 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
9001e1d2:	7823      	ldrb	r3, [r4, #0]
9001e1d4:	f3bf 8f5b 	dmb	ish
9001e1d8:	07db      	lsls	r3, r3, #31
9001e1da:	d40b      	bmi.n	9001e1f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
9001e1dc:	4620      	mov	r0, r4
9001e1de:	f008 f842 	bl	90026266 <__cxa_guard_acquire>
9001e1e2:	b138      	cbz	r0, 9001e1f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
9001e1e4:	4620      	mov	r0, r4
9001e1e6:	f008 f84a 	bl	9002627e <__cxa_guard_release>
9001e1ea:	4a06      	ldr	r2, [pc, #24]	; (9001e204 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
9001e1ec:	4909      	ldr	r1, [pc, #36]	; (9001e214 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
9001e1ee:	480a      	ldr	r0, [pc, #40]	; (9001e218 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
9001e1f0:	f008 f832 	bl	90026258 <__aeabi_atexit>
9001e1f4:	4b05      	ldr	r3, [pc, #20]	; (9001e20c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
9001e1f6:	63eb      	str	r3, [r5, #60]	; 0x3c
9001e1f8:	4b07      	ldr	r3, [pc, #28]	; (9001e218 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
9001e1fa:	642b      	str	r3, [r5, #64]	; 0x40
9001e1fc:	bd38      	pop	{r3, r4, r5, pc}
9001e1fe:	bf00      	nop
9001e200:	2402369c 	.word	0x2402369c
9001e204:	24000000 	.word	0x24000000
9001e208:	9001ab27 	.word	0x9001ab27
9001e20c:	240000d0 	.word	0x240000d0
9001e210:	240236a0 	.word	0x240236a0
9001e214:	9001ab25 	.word	0x9001ab25
9001e218:	240000d4 	.word	0x240000d4

9001e21c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
9001e21c:	b510      	push	{r4, lr}
9001e21e:	4604      	mov	r4, r0
9001e220:	f7ff ff14 	bl	9001e04c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
9001e224:	4620      	mov	r0, r4
9001e226:	f7ff ff85 	bl	9001e134 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
9001e22a:	4620      	mov	r0, r4
9001e22c:	f7ff ff48 	bl	9001e0c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
9001e230:	4620      	mov	r0, r4
9001e232:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001e236:	f7ff bfb7 	b.w	9001e1a8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

9001e23c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
9001e23c:	b538      	push	{r3, r4, r5, lr}
9001e23e:	4c15      	ldr	r4, [pc, #84]	; (9001e294 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
9001e240:	4605      	mov	r5, r0
9001e242:	7823      	ldrb	r3, [r4, #0]
9001e244:	f3bf 8f5b 	dmb	ish
9001e248:	07da      	lsls	r2, r3, #31
9001e24a:	d40b      	bmi.n	9001e264 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
9001e24c:	4620      	mov	r0, r4
9001e24e:	f008 f80a 	bl	90026266 <__cxa_guard_acquire>
9001e252:	b138      	cbz	r0, 9001e264 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
9001e254:	4620      	mov	r0, r4
9001e256:	f008 f812 	bl	9002627e <__cxa_guard_release>
9001e25a:	4a0f      	ldr	r2, [pc, #60]	; (9001e298 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
9001e25c:	490f      	ldr	r1, [pc, #60]	; (9001e29c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
9001e25e:	4810      	ldr	r0, [pc, #64]	; (9001e2a0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
9001e260:	f007 fffa 	bl	90026258 <__aeabi_atexit>
9001e264:	4c0f      	ldr	r4, [pc, #60]	; (9001e2a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
9001e266:	7823      	ldrb	r3, [r4, #0]
9001e268:	f3bf 8f5b 	dmb	ish
9001e26c:	07db      	lsls	r3, r3, #31
9001e26e:	d40b      	bmi.n	9001e288 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
9001e270:	4620      	mov	r0, r4
9001e272:	f007 fff8 	bl	90026266 <__cxa_guard_acquire>
9001e276:	b138      	cbz	r0, 9001e288 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
9001e278:	4620      	mov	r0, r4
9001e27a:	f008 f800 	bl	9002627e <__cxa_guard_release>
9001e27e:	4a06      	ldr	r2, [pc, #24]	; (9001e298 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
9001e280:	4909      	ldr	r1, [pc, #36]	; (9001e2a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
9001e282:	480a      	ldr	r0, [pc, #40]	; (9001e2ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
9001e284:	f007 ffe8 	bl	90026258 <__aeabi_atexit>
9001e288:	4b05      	ldr	r3, [pc, #20]	; (9001e2a0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
9001e28a:	666b      	str	r3, [r5, #100]	; 0x64
9001e28c:	4b07      	ldr	r3, [pc, #28]	; (9001e2ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
9001e28e:	66ab      	str	r3, [r5, #104]	; 0x68
9001e290:	bd38      	pop	{r3, r4, r5, pc}
9001e292:	bf00      	nop
9001e294:	24023684 	.word	0x24023684
9001e298:	24000000 	.word	0x24000000
9001e29c:	9001ab13 	.word	0x9001ab13
9001e2a0:	240000b8 	.word	0x240000b8
9001e2a4:	24023688 	.word	0x24023688
9001e2a8:	9001ab11 	.word	0x9001ab11
9001e2ac:	240000bc 	.word	0x240000bc

9001e2b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
9001e2b0:	b538      	push	{r3, r4, r5, lr}
9001e2b2:	4c15      	ldr	r4, [pc, #84]	; (9001e308 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
9001e2b4:	4605      	mov	r5, r0
9001e2b6:	7823      	ldrb	r3, [r4, #0]
9001e2b8:	f3bf 8f5b 	dmb	ish
9001e2bc:	07da      	lsls	r2, r3, #31
9001e2be:	d40b      	bmi.n	9001e2d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
9001e2c0:	4620      	mov	r0, r4
9001e2c2:	f007 ffd0 	bl	90026266 <__cxa_guard_acquire>
9001e2c6:	b138      	cbz	r0, 9001e2d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
9001e2c8:	4620      	mov	r0, r4
9001e2ca:	f007 ffd8 	bl	9002627e <__cxa_guard_release>
9001e2ce:	4a0f      	ldr	r2, [pc, #60]	; (9001e30c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
9001e2d0:	490f      	ldr	r1, [pc, #60]	; (9001e310 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
9001e2d2:	4810      	ldr	r0, [pc, #64]	; (9001e314 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
9001e2d4:	f007 ffc0 	bl	90026258 <__aeabi_atexit>
9001e2d8:	4c0f      	ldr	r4, [pc, #60]	; (9001e318 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
9001e2da:	7823      	ldrb	r3, [r4, #0]
9001e2dc:	f3bf 8f5b 	dmb	ish
9001e2e0:	07db      	lsls	r3, r3, #31
9001e2e2:	d40b      	bmi.n	9001e2fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
9001e2e4:	4620      	mov	r0, r4
9001e2e6:	f007 ffbe 	bl	90026266 <__cxa_guard_acquire>
9001e2ea:	b138      	cbz	r0, 9001e2fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
9001e2ec:	4620      	mov	r0, r4
9001e2ee:	f007 ffc6 	bl	9002627e <__cxa_guard_release>
9001e2f2:	4a06      	ldr	r2, [pc, #24]	; (9001e30c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
9001e2f4:	4909      	ldr	r1, [pc, #36]	; (9001e31c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
9001e2f6:	480a      	ldr	r0, [pc, #40]	; (9001e320 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
9001e2f8:	f007 ffae 	bl	90026258 <__aeabi_atexit>
9001e2fc:	4b05      	ldr	r3, [pc, #20]	; (9001e314 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
9001e2fe:	65eb      	str	r3, [r5, #92]	; 0x5c
9001e300:	4b07      	ldr	r3, [pc, #28]	; (9001e320 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
9001e302:	662b      	str	r3, [r5, #96]	; 0x60
9001e304:	bd38      	pop	{r3, r4, r5, pc}
9001e306:	bf00      	nop
9001e308:	2402365c 	.word	0x2402365c
9001e30c:	24000000 	.word	0x24000000
9001e310:	9001ab17 	.word	0x9001ab17
9001e314:	24000090 	.word	0x24000090
9001e318:	24023660 	.word	0x24023660
9001e31c:	9001ab15 	.word	0x9001ab15
9001e320:	24000094 	.word	0x24000094

9001e324 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
9001e324:	b510      	push	{r4, lr}
9001e326:	4604      	mov	r4, r0
9001e328:	f7ff ff88 	bl	9001e23c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
9001e32c:	4620      	mov	r0, r4
9001e32e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001e332:	f7ff bfbd 	b.w	9001e2b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

9001e338 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
9001e338:	b538      	push	{r3, r4, r5, lr}
9001e33a:	4c15      	ldr	r4, [pc, #84]	; (9001e390 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
9001e33c:	4605      	mov	r5, r0
9001e33e:	7823      	ldrb	r3, [r4, #0]
9001e340:	f3bf 8f5b 	dmb	ish
9001e344:	07da      	lsls	r2, r3, #31
9001e346:	d40b      	bmi.n	9001e360 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
9001e348:	4620      	mov	r0, r4
9001e34a:	f007 ff8c 	bl	90026266 <__cxa_guard_acquire>
9001e34e:	b138      	cbz	r0, 9001e360 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
9001e350:	4620      	mov	r0, r4
9001e352:	f007 ff94 	bl	9002627e <__cxa_guard_release>
9001e356:	4a0f      	ldr	r2, [pc, #60]	; (9001e394 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
9001e358:	490f      	ldr	r1, [pc, #60]	; (9001e398 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
9001e35a:	4810      	ldr	r0, [pc, #64]	; (9001e39c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
9001e35c:	f007 ff7c 	bl	90026258 <__aeabi_atexit>
9001e360:	4c0f      	ldr	r4, [pc, #60]	; (9001e3a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
9001e362:	7823      	ldrb	r3, [r4, #0]
9001e364:	f3bf 8f5b 	dmb	ish
9001e368:	07db      	lsls	r3, r3, #31
9001e36a:	d40b      	bmi.n	9001e384 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
9001e36c:	4620      	mov	r0, r4
9001e36e:	f007 ff7a 	bl	90026266 <__cxa_guard_acquire>
9001e372:	b138      	cbz	r0, 9001e384 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
9001e374:	4620      	mov	r0, r4
9001e376:	f007 ff82 	bl	9002627e <__cxa_guard_release>
9001e37a:	4a06      	ldr	r2, [pc, #24]	; (9001e394 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
9001e37c:	4909      	ldr	r1, [pc, #36]	; (9001e3a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
9001e37e:	480a      	ldr	r0, [pc, #40]	; (9001e3a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
9001e380:	f007 ff6a 	bl	90026258 <__aeabi_atexit>
9001e384:	4b05      	ldr	r3, [pc, #20]	; (9001e39c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
9001e386:	676b      	str	r3, [r5, #116]	; 0x74
9001e388:	4b07      	ldr	r3, [pc, #28]	; (9001e3a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
9001e38a:	67ab      	str	r3, [r5, #120]	; 0x78
9001e38c:	bd38      	pop	{r3, r4, r5, pc}
9001e38e:	bf00      	nop
9001e390:	24023654 	.word	0x24023654
9001e394:	24000000 	.word	0x24000000
9001e398:	9001ab0b 	.word	0x9001ab0b
9001e39c:	24000088 	.word	0x24000088
9001e3a0:	24023658 	.word	0x24023658
9001e3a4:	9001ab09 	.word	0x9001ab09
9001e3a8:	2400008c 	.word	0x2400008c

9001e3ac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
9001e3ac:	b538      	push	{r3, r4, r5, lr}
9001e3ae:	4c15      	ldr	r4, [pc, #84]	; (9001e404 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
9001e3b0:	4605      	mov	r5, r0
9001e3b2:	7823      	ldrb	r3, [r4, #0]
9001e3b4:	f3bf 8f5b 	dmb	ish
9001e3b8:	07da      	lsls	r2, r3, #31
9001e3ba:	d40b      	bmi.n	9001e3d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
9001e3bc:	4620      	mov	r0, r4
9001e3be:	f007 ff52 	bl	90026266 <__cxa_guard_acquire>
9001e3c2:	b138      	cbz	r0, 9001e3d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
9001e3c4:	4620      	mov	r0, r4
9001e3c6:	f007 ff5a 	bl	9002627e <__cxa_guard_release>
9001e3ca:	4a0f      	ldr	r2, [pc, #60]	; (9001e408 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
9001e3cc:	490f      	ldr	r1, [pc, #60]	; (9001e40c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
9001e3ce:	4810      	ldr	r0, [pc, #64]	; (9001e410 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
9001e3d0:	f007 ff42 	bl	90026258 <__aeabi_atexit>
9001e3d4:	4c0f      	ldr	r4, [pc, #60]	; (9001e414 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
9001e3d6:	7823      	ldrb	r3, [r4, #0]
9001e3d8:	f3bf 8f5b 	dmb	ish
9001e3dc:	07db      	lsls	r3, r3, #31
9001e3de:	d40b      	bmi.n	9001e3f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
9001e3e0:	4620      	mov	r0, r4
9001e3e2:	f007 ff40 	bl	90026266 <__cxa_guard_acquire>
9001e3e6:	b138      	cbz	r0, 9001e3f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
9001e3e8:	4620      	mov	r0, r4
9001e3ea:	f007 ff48 	bl	9002627e <__cxa_guard_release>
9001e3ee:	4a06      	ldr	r2, [pc, #24]	; (9001e408 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
9001e3f0:	4909      	ldr	r1, [pc, #36]	; (9001e418 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
9001e3f2:	480a      	ldr	r0, [pc, #40]	; (9001e41c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
9001e3f4:	f007 ff30 	bl	90026258 <__aeabi_atexit>
9001e3f8:	4b05      	ldr	r3, [pc, #20]	; (9001e410 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
9001e3fa:	66eb      	str	r3, [r5, #108]	; 0x6c
9001e3fc:	4b07      	ldr	r3, [pc, #28]	; (9001e41c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
9001e3fe:	672b      	str	r3, [r5, #112]	; 0x70
9001e400:	bd38      	pop	{r3, r4, r5, pc}
9001e402:	bf00      	nop
9001e404:	2402364c 	.word	0x2402364c
9001e408:	24000000 	.word	0x24000000
9001e40c:	9001ab0f 	.word	0x9001ab0f
9001e410:	24000080 	.word	0x24000080
9001e414:	24023650 	.word	0x24023650
9001e418:	9001ab0d 	.word	0x9001ab0d
9001e41c:	24000084 	.word	0x24000084

9001e420 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
9001e420:	b510      	push	{r4, lr}
9001e422:	4604      	mov	r4, r0
9001e424:	f7ff ff88 	bl	9001e338 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
9001e428:	4620      	mov	r0, r4
9001e42a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001e42e:	f7ff bfbd 	b.w	9001e3ac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

9001e432 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
9001e432:	b510      	push	{r4, lr}
9001e434:	4604      	mov	r4, r0
9001e436:	f7ff fff3 	bl	9001e420 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
9001e43a:	4620      	mov	r0, r4
9001e43c:	f7ff ff72 	bl	9001e324 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
9001e440:	4620      	mov	r0, r4
9001e442:	f7ff fdf9 	bl	9001e038 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
9001e446:	4620      	mov	r0, r4
9001e448:	f7ff fcfa 	bl	9001de40 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
9001e44c:	4620      	mov	r0, r4
9001e44e:	f7ff fd75 	bl	9001df3c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
9001e452:	4620      	mov	r0, r4
9001e454:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001e458:	f7ff bee0 	b.w	9001e21c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

9001e45c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
9001e45c:	b538      	push	{r3, r4, r5, lr}
9001e45e:	4c0b      	ldr	r4, [pc, #44]	; (9001e48c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
9001e460:	4605      	mov	r5, r0
9001e462:	7823      	ldrb	r3, [r4, #0]
9001e464:	f3bf 8f5b 	dmb	ish
9001e468:	07db      	lsls	r3, r3, #31
9001e46a:	d40b      	bmi.n	9001e484 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
9001e46c:	4620      	mov	r0, r4
9001e46e:	f007 fefa 	bl	90026266 <__cxa_guard_acquire>
9001e472:	b138      	cbz	r0, 9001e484 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
9001e474:	4620      	mov	r0, r4
9001e476:	f007 ff02 	bl	9002627e <__cxa_guard_release>
9001e47a:	4a05      	ldr	r2, [pc, #20]	; (9001e490 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
9001e47c:	4905      	ldr	r1, [pc, #20]	; (9001e494 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
9001e47e:	4806      	ldr	r0, [pc, #24]	; (9001e498 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
9001e480:	f007 feea 	bl	90026258 <__aeabi_atexit>
9001e484:	4b04      	ldr	r3, [pc, #16]	; (9001e498 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
9001e486:	67eb      	str	r3, [r5, #124]	; 0x7c
9001e488:	bd38      	pop	{r3, r4, r5, pc}
9001e48a:	bf00      	nop
9001e48c:	24023640 	.word	0x24023640
9001e490:	24000000 	.word	0x24000000
9001e494:	9001ab07 	.word	0x9001ab07
9001e498:	24000078 	.word	0x24000078

9001e49c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
9001e49c:	b538      	push	{r3, r4, r5, lr}
9001e49e:	4c0b      	ldr	r4, [pc, #44]	; (9001e4cc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
9001e4a0:	4605      	mov	r5, r0
9001e4a2:	7823      	ldrb	r3, [r4, #0]
9001e4a4:	f3bf 8f5b 	dmb	ish
9001e4a8:	07db      	lsls	r3, r3, #31
9001e4aa:	d40b      	bmi.n	9001e4c4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
9001e4ac:	4620      	mov	r0, r4
9001e4ae:	f007 feda 	bl	90026266 <__cxa_guard_acquire>
9001e4b2:	b138      	cbz	r0, 9001e4c4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
9001e4b4:	4620      	mov	r0, r4
9001e4b6:	f007 fee2 	bl	9002627e <__cxa_guard_release>
9001e4ba:	4a05      	ldr	r2, [pc, #20]	; (9001e4d0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
9001e4bc:	4905      	ldr	r1, [pc, #20]	; (9001e4d4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
9001e4be:	4806      	ldr	r0, [pc, #24]	; (9001e4d8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
9001e4c0:	f007 feca 	bl	90026258 <__aeabi_atexit>
9001e4c4:	4b04      	ldr	r3, [pc, #16]	; (9001e4d8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
9001e4c6:	f8c5 3080 	str.w	r3, [r5, #128]	; 0x80
9001e4ca:	bd38      	pop	{r3, r4, r5, pc}
9001e4cc:	24023644 	.word	0x24023644
9001e4d0:	24000000 	.word	0x24000000
9001e4d4:	9001ab05 	.word	0x9001ab05
9001e4d8:	2400007c 	.word	0x2400007c

9001e4dc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
9001e4dc:	b570      	push	{r4, r5, r6, lr}
9001e4de:	4d0d      	ldr	r5, [pc, #52]	; (9001e514 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
9001e4e0:	4606      	mov	r6, r0
9001e4e2:	4c0d      	ldr	r4, [pc, #52]	; (9001e518 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
9001e4e4:	782b      	ldrb	r3, [r5, #0]
9001e4e6:	f3bf 8f5b 	dmb	ish
9001e4ea:	f013 0f01 	tst.w	r3, #1
9001e4ee:	d10d      	bne.n	9001e50c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
9001e4f0:	4628      	mov	r0, r5
9001e4f2:	f007 feb8 	bl	90026266 <__cxa_guard_acquire>
9001e4f6:	b148      	cbz	r0, 9001e50c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
9001e4f8:	4b08      	ldr	r3, [pc, #32]	; (9001e51c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
9001e4fa:	4628      	mov	r0, r5
9001e4fc:	6023      	str	r3, [r4, #0]
9001e4fe:	f007 febe 	bl	9002627e <__cxa_guard_release>
9001e502:	4a07      	ldr	r2, [pc, #28]	; (9001e520 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
9001e504:	4620      	mov	r0, r4
9001e506:	4907      	ldr	r1, [pc, #28]	; (9001e524 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
9001e508:	f007 fea6 	bl	90026258 <__aeabi_atexit>
9001e50c:	f8c6 4084 	str.w	r4, [r6, #132]	; 0x84
9001e510:	bd70      	pop	{r4, r5, r6, pc}
9001e512:	bf00      	nop
9001e514:	24023648 	.word	0x24023648
9001e518:	240236bc 	.word	0x240236bc
9001e51c:	9002a9a4 	.word	0x9002a9a4
9001e520:	24000000 	.word	0x24000000
9001e524:	9001ab03 	.word	0x9001ab03

9001e528 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
9001e528:	b510      	push	{r4, lr}
9001e52a:	4604      	mov	r4, r0
9001e52c:	f7ff ff96 	bl	9001e45c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
9001e530:	4620      	mov	r0, r4
9001e532:	f7ff ffb3 	bl	9001e49c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
9001e536:	4620      	mov	r0, r4
9001e538:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001e53c:	f7ff bfce 	b.w	9001e4dc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

9001e540 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
9001e540:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e544:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
9001e548:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
9001e54c:	2d00      	cmp	r5, #0
9001e54e:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
9001e552:	fb05 4c0e 	mla	ip, r5, lr, r4
9001e556:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
9001e55a:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
9001e55e:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
9001e562:	eb02 0a0c 	add.w	sl, r2, ip
9001e566:	8808      	ldrh	r0, [r1, #0]
9001e568:	f2c0 80b0 	blt.w	9001e6cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
9001e56c:	45ab      	cmp	fp, r5
9001e56e:	f340 80ad 	ble.w	9001e6cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
9001e572:	2c00      	cmp	r4, #0
9001e574:	f2c0 80a8 	blt.w	9001e6c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
9001e578:	45a6      	cmp	lr, r4
9001e57a:	f340 80a5 	ble.w	9001e6c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
9001e57e:	f812 200c 	ldrb.w	r2, [r2, ip]
9001e582:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
9001e586:	1c62      	adds	r2, r4, #1
9001e588:	f100 80a3 	bmi.w	9001e6d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001e58c:	4596      	cmp	lr, r2
9001e58e:	f340 80a0 	ble.w	9001e6d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001e592:	f1b9 0f00 	cmp.w	r9, #0
9001e596:	f000 809c 	beq.w	9001e6d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001e59a:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001e59e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
9001e5a2:	3501      	adds	r5, #1
9001e5a4:	f100 8099 	bmi.w	9001e6da <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001e5a8:	45ab      	cmp	fp, r5
9001e5aa:	f340 8096 	ble.w	9001e6da <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001e5ae:	2f00      	cmp	r7, #0
9001e5b0:	f000 8093 	beq.w	9001e6da <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001e5b4:	2c00      	cmp	r4, #0
9001e5b6:	f2c0 808e 	blt.w	9001e6d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
9001e5ba:	45a6      	cmp	lr, r4
9001e5bc:	f340 808b 	ble.w	9001e6d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
9001e5c0:	f81a 200e 	ldrb.w	r2, [sl, lr]
9001e5c4:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
9001e5c8:	3401      	adds	r4, #1
9001e5ca:	f100 8089 	bmi.w	9001e6e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9001e5ce:	45a6      	cmp	lr, r4
9001e5d0:	f340 8086 	ble.w	9001e6e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9001e5d4:	f1b9 0f00 	cmp.w	r9, #0
9001e5d8:	f000 8082 	beq.w	9001e6e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9001e5dc:	44d6      	add	lr, sl
9001e5de:	f89e 2001 	ldrb.w	r2, [lr, #1]
9001e5e2:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
9001e5e6:	ea4f 4408 	mov.w	r4, r8, lsl #16
9001e5ea:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
9001e5ee:	fb19 fe07 	smulbb	lr, r9, r7
9001e5f2:	f1c7 0210 	rsb	r2, r7, #16
9001e5f6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
9001e5fa:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
9001e5fe:	eba2 0209 	sub.w	r2, r2, r9
9001e602:	ea44 0808 	orr.w	r8, r4, r8
9001e606:	ea4f 440c 	mov.w	r4, ip, lsl #16
9001e60a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9001e60e:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
9001e612:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
9001e616:	ebce 0747 	rsb	r7, lr, r7, lsl #1
9001e61a:	ea44 0c0c 	orr.w	ip, r4, ip
9001e61e:	ebce 0449 	rsb	r4, lr, r9, lsl #1
9001e622:	fb04 f40c 	mul.w	r4, r4, ip
9001e626:	fb02 4808 	mla	r8, r2, r8, r4
9001e62a:	041a      	lsls	r2, r3, #16
9001e62c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001e630:	b2b4      	uxth	r4, r6
9001e632:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
9001e636:	43f6      	mvns	r6, r6
9001e638:	4313      	orrs	r3, r2
9001e63a:	042a      	lsls	r2, r5, #16
9001e63c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
9001e640:	b2f6      	uxtb	r6, r6
9001e642:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
9001e646:	fb0e 8303 	mla	r3, lr, r3, r8
9001e64a:	432a      	orrs	r2, r5
9001e64c:	fb07 3202 	mla	r2, r7, r2, r3
9001e650:	10c7      	asrs	r7, r0, #3
9001e652:	0d53      	lsrs	r3, r2, #21
9001e654:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001e658:	0952      	lsrs	r2, r2, #5
9001e65a:	fb17 f706 	smulbb	r7, r7, r6
9001e65e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001e662:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001e666:	431a      	orrs	r2, r3
9001e668:	b293      	uxth	r3, r2
9001e66a:	1202      	asrs	r2, r0, #8
9001e66c:	121d      	asrs	r5, r3, #8
9001e66e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9001e672:	00c0      	lsls	r0, r0, #3
9001e674:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001e678:	fb12 f206 	smulbb	r2, r2, r6
9001e67c:	b2c0      	uxtb	r0, r0
9001e67e:	fb05 2504 	mla	r5, r5, r4, r2
9001e682:	10da      	asrs	r2, r3, #3
9001e684:	fb10 f006 	smulbb	r0, r0, r6
9001e688:	00db      	lsls	r3, r3, #3
9001e68a:	b2ad      	uxth	r5, r5
9001e68c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9001e690:	b2db      	uxtb	r3, r3
9001e692:	fb02 7204 	mla	r2, r2, r4, r7
9001e696:	fb03 0004 	mla	r0, r3, r4, r0
9001e69a:	1c6b      	adds	r3, r5, #1
9001e69c:	b292      	uxth	r2, r2
9001e69e:	b280      	uxth	r0, r0
9001e6a0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9001e6a4:	1c43      	adds	r3, r0, #1
9001e6a6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9001e6aa:	eb03 2310 	add.w	r3, r3, r0, lsr #8
9001e6ae:	1c50      	adds	r0, r2, #1
9001e6b0:	eb00 2212 	add.w	r2, r0, r2, lsr #8
9001e6b4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9001e6b8:	0952      	lsrs	r2, r2, #5
9001e6ba:	432b      	orrs	r3, r5
9001e6bc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001e6c0:	4313      	orrs	r3, r2
9001e6c2:	800b      	strh	r3, [r1, #0]
9001e6c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e6c8:	4680      	mov	r8, r0
9001e6ca:	e75c      	b.n	9001e586 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
9001e6cc:	4684      	mov	ip, r0
9001e6ce:	4680      	mov	r8, r0
9001e6d0:	e767      	b.n	9001e5a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
9001e6d2:	4684      	mov	ip, r0
9001e6d4:	e765      	b.n	9001e5a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
9001e6d6:	4605      	mov	r5, r0
9001e6d8:	e776      	b.n	9001e5c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
9001e6da:	4603      	mov	r3, r0
9001e6dc:	4605      	mov	r5, r0
9001e6de:	e782      	b.n	9001e5e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
9001e6e0:	4603      	mov	r3, r0
9001e6e2:	e780      	b.n	9001e5e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

9001e6e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001e6e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e6e8:	b099      	sub	sp, #100	; 0x64
9001e6ea:	9215      	str	r2, [sp, #84]	; 0x54
9001e6ec:	9309      	str	r3, [sp, #36]	; 0x24
9001e6ee:	9a27      	ldr	r2, [sp, #156]	; 0x9c
9001e6f0:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
9001e6f4:	9016      	str	r0, [sp, #88]	; 0x58
9001e6f6:	930d      	str	r3, [sp, #52]	; 0x34
9001e6f8:	6850      	ldr	r0, [r2, #4]
9001e6fa:	910c      	str	r1, [sp, #48]	; 0x30
9001e6fc:	6812      	ldr	r2, [r2, #0]
9001e6fe:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
9001e702:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
9001e706:	fb00 1303 	mla	r3, r0, r3, r1
9001e70a:	eb02 0843 	add.w	r8, r2, r3, lsl #1
9001e70e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001e710:	681b      	ldr	r3, [r3, #0]
9001e712:	930b      	str	r3, [sp, #44]	; 0x2c
9001e714:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001e716:	685e      	ldr	r6, [r3, #4]
9001e718:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001e71a:	3604      	adds	r6, #4
9001e71c:	43db      	mvns	r3, r3
9001e71e:	b2db      	uxtb	r3, r3
9001e720:	930a      	str	r3, [sp, #40]	; 0x28
9001e722:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001e724:	2b00      	cmp	r3, #0
9001e726:	dc03      	bgt.n	9001e730 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001e728:	9b15      	ldr	r3, [sp, #84]	; 0x54
9001e72a:	2b00      	cmp	r3, #0
9001e72c:	f340 8225 	ble.w	9001eb7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
9001e730:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001e732:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001e736:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001e73a:	1e48      	subs	r0, r1, #1
9001e73c:	1e57      	subs	r7, r2, #1
9001e73e:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001e740:	2b00      	cmp	r3, #0
9001e742:	f340 80e3 	ble.w	9001e90c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001e746:	ea5f 4c2a 	movs.w	ip, sl, asr #16
9001e74a:	ea4f 4325 	mov.w	r3, r5, asr #16
9001e74e:	d406      	bmi.n	9001e75e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001e750:	4584      	cmp	ip, r0
9001e752:	da04      	bge.n	9001e75e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001e754:	2b00      	cmp	r3, #0
9001e756:	db02      	blt.n	9001e75e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001e758:	42bb      	cmp	r3, r7
9001e75a:	f2c0 80d8 	blt.w	9001e90e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001e75e:	f11c 0c01 	adds.w	ip, ip, #1
9001e762:	f100 80c9 	bmi.w	9001e8f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001e766:	4561      	cmp	r1, ip
9001e768:	f2c0 80c6 	blt.w	9001e8f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001e76c:	3301      	adds	r3, #1
9001e76e:	f100 80c3 	bmi.w	9001e8f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001e772:	429a      	cmp	r2, r3
9001e774:	f2c0 80c0 	blt.w	9001e8f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001e778:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
9001e77c:	4647      	mov	r7, r8
9001e77e:	f1bb 0f00 	cmp.w	fp, #0
9001e782:	f340 80e3 	ble.w	9001e94c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
9001e786:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
9001e788:	ea4f 4c25 	mov.w	ip, r5, asr #16
9001e78c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001e78e:	f3ca 3003 	ubfx	r0, sl, #12, #4
9001e792:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9001e796:	ea5f 422a 	movs.w	r2, sl, asr #16
9001e79a:	f3c5 3103 	ubfx	r1, r5, #12, #4
9001e79e:	689b      	ldr	r3, [r3, #8]
9001e7a0:	f100 8121 	bmi.w	9001e9e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001e7a4:	f103 39ff 	add.w	r9, r3, #4294967295
9001e7a8:	454a      	cmp	r2, r9
9001e7aa:	f280 811c 	bge.w	9001e9e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001e7ae:	f1bc 0f00 	cmp.w	ip, #0
9001e7b2:	f2c0 8118 	blt.w	9001e9e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001e7b6:	f10e 39ff 	add.w	r9, lr, #4294967295
9001e7ba:	45cc      	cmp	ip, r9
9001e7bc:	f280 8113 	bge.w	9001e9e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001e7c0:	b21b      	sxth	r3, r3
9001e7c2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9001e7c4:	fb0c 2203 	mla	r2, ip, r3, r2
9001e7c8:	eb04 0902 	add.w	r9, r4, r2
9001e7cc:	5ca2      	ldrb	r2, [r4, r2]
9001e7ce:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
9001e7d2:	2800      	cmp	r0, #0
9001e7d4:	f000 80fe 	beq.w	9001e9d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
9001e7d8:	f899 2001 	ldrb.w	r2, [r9, #1]
9001e7dc:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
9001e7e0:	9211      	str	r2, [sp, #68]	; 0x44
9001e7e2:	b151      	cbz	r1, 9001e7fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001e7e4:	eb09 0203 	add.w	r2, r9, r3
9001e7e8:	f819 3003 	ldrb.w	r3, [r9, r3]
9001e7ec:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001e7f0:	930f      	str	r3, [sp, #60]	; 0x3c
9001e7f2:	7853      	ldrb	r3, [r2, #1]
9001e7f4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001e7f8:	9312      	str	r3, [sp, #72]	; 0x48
9001e7fa:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001e7fc:	fb10 f201 	smulbb	r2, r0, r1
9001e800:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001e802:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9001e806:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001e80a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
9001e80e:	10d2      	asrs	r2, r2, #3
9001e810:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001e814:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
9001e818:	ea4c 0c03 	orr.w	ip, ip, r3
9001e81c:	9b12      	ldr	r3, [sp, #72]	; 0x48
9001e81e:	041b      	lsls	r3, r3, #16
9001e820:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001e824:	4323      	orrs	r3, r4
9001e826:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9001e828:	4353      	muls	r3, r2
9001e82a:	fb09 330c 	mla	r3, r9, ip, r3
9001e82e:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
9001e832:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
9001e836:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001e83a:	ea4c 0e0e 	orr.w	lr, ip, lr
9001e83e:	f1c1 0c10 	rsb	ip, r1, #16
9001e842:	ebac 0c00 	sub.w	ip, ip, r0
9001e846:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9001e84a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
9001e84e:	fb0c 3c0e 	mla	ip, ip, lr, r3
9001e852:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001e854:	0418      	lsls	r0, r3, #16
9001e856:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001e85a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
9001e85e:	4318      	orrs	r0, r3
9001e860:	fb02 c200 	mla	r2, r2, r0, ip
9001e864:	8838      	ldrh	r0, [r7, #0]
9001e866:	0d53      	lsrs	r3, r2, #21
9001e868:	0952      	lsrs	r2, r2, #5
9001e86a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001e86e:	1201      	asrs	r1, r0, #8
9001e870:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001e874:	ea4f 0ee0 	mov.w	lr, r0, asr #3
9001e878:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9001e87c:	00c0      	lsls	r0, r0, #3
9001e87e:	431a      	orrs	r2, r3
9001e880:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
9001e884:	fb11 f104 	smulbb	r1, r1, r4
9001e888:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
9001e88c:	b292      	uxth	r2, r2
9001e88e:	fb1e fe04 	smulbb	lr, lr, r4
9001e892:	b2c0      	uxtb	r0, r0
9001e894:	ea4f 2c22 	mov.w	ip, r2, asr #8
9001e898:	fb10 f004 	smulbb	r0, r0, r4
9001e89c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001e8a0:	fb0c 1c03 	mla	ip, ip, r3, r1
9001e8a4:	10d1      	asrs	r1, r2, #3
9001e8a6:	00d2      	lsls	r2, r2, #3
9001e8a8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001e8ac:	fa1f fc8c 	uxth.w	ip, ip
9001e8b0:	b2d2      	uxtb	r2, r2
9001e8b2:	fb01 e103 	mla	r1, r1, r3, lr
9001e8b6:	fb02 0303 	mla	r3, r2, r3, r0
9001e8ba:	b289      	uxth	r1, r1
9001e8bc:	b29a      	uxth	r2, r3
9001e8be:	f10c 0301 	add.w	r3, ip, #1
9001e8c2:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
9001e8c6:	1c53      	adds	r3, r2, #1
9001e8c8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9001e8cc:	1c4a      	adds	r2, r1, #1
9001e8ce:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001e8d2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001e8d6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9001e8da:	0949      	lsrs	r1, r1, #5
9001e8dc:	ea43 030c 	orr.w	r3, r3, ip
9001e8e0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001e8e4:	430b      	orrs	r3, r1
9001e8e6:	803b      	strh	r3, [r7, #0]
9001e8e8:	9b25      	ldr	r3, [sp, #148]	; 0x94
9001e8ea:	3702      	adds	r7, #2
9001e8ec:	f10b 3bff 	add.w	fp, fp, #4294967295
9001e8f0:	449a      	add	sl, r3
9001e8f2:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001e8f4:	441d      	add	r5, r3
9001e8f6:	e742      	b.n	9001e77e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001e8f8:	9b25      	ldr	r3, [sp, #148]	; 0x94
9001e8fa:	f108 0802 	add.w	r8, r8, #2
9001e8fe:	449a      	add	sl, r3
9001e900:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001e902:	441d      	add	r5, r3
9001e904:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001e906:	3b01      	subs	r3, #1
9001e908:	9309      	str	r3, [sp, #36]	; 0x24
9001e90a:	e718      	b.n	9001e73e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001e90c:	d023      	beq.n	9001e956 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001e90e:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001e910:	9825      	ldr	r0, [sp, #148]	; 0x94
9001e912:	3b01      	subs	r3, #1
9001e914:	fb00 a003 	mla	r0, r0, r3, sl
9001e918:	1400      	asrs	r0, r0, #16
9001e91a:	f53f af2d 	bmi.w	9001e778 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001e91e:	3901      	subs	r1, #1
9001e920:	4288      	cmp	r0, r1
9001e922:	f6bf af29 	bge.w	9001e778 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001e926:	9926      	ldr	r1, [sp, #152]	; 0x98
9001e928:	fb01 5303 	mla	r3, r1, r3, r5
9001e92c:	141b      	asrs	r3, r3, #16
9001e92e:	f53f af23 	bmi.w	9001e778 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001e932:	3a01      	subs	r2, #1
9001e934:	4293      	cmp	r3, r2
9001e936:	f6bf af1f 	bge.w	9001e778 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001e93a:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
9001e93e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
9001e942:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
9001e946:	f1be 0f00 	cmp.w	lr, #0
9001e94a:	dc6c      	bgt.n	9001ea26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9001e94c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001e94e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9001e952:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001e956:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001e958:	2b00      	cmp	r3, #0
9001e95a:	f340 810e 	ble.w	9001eb7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
9001e95e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001e962:	9b22      	ldr	r3, [sp, #136]	; 0x88
9001e964:	ee30 0a04 	vadd.f32	s0, s0, s8
9001e968:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001e96c:	eef0 6a62 	vmov.f32	s13, s5
9001e970:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001e974:	ee31 1a05 	vadd.f32	s2, s2, s10
9001e978:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001e97c:	ee16 aa90 	vmov	sl, s13
9001e980:	eef0 6a43 	vmov.f32	s13, s6
9001e984:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001e988:	ee16 5a90 	vmov	r5, s13
9001e98c:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001e990:	ee61 7a27 	vmul.f32	s15, s2, s15
9001e994:	ee77 2a62 	vsub.f32	s5, s14, s5
9001e998:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001e99c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001e9a0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001e9a4:	ee12 2a90 	vmov	r2, s5
9001e9a8:	eef0 2a47 	vmov.f32	s5, s14
9001e9ac:	fb92 f3f3 	sdiv	r3, r2, r3
9001e9b0:	ee13 2a10 	vmov	r2, s6
9001e9b4:	9325      	str	r3, [sp, #148]	; 0x94
9001e9b6:	9b22      	ldr	r3, [sp, #136]	; 0x88
9001e9b8:	eeb0 3a67 	vmov.f32	s6, s15
9001e9bc:	fb92 f3f3 	sdiv	r3, r2, r3
9001e9c0:	9326      	str	r3, [sp, #152]	; 0x98
9001e9c2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001e9c4:	9a15      	ldr	r2, [sp, #84]	; 0x54
9001e9c6:	3b01      	subs	r3, #1
9001e9c8:	930c      	str	r3, [sp, #48]	; 0x30
9001e9ca:	9b22      	ldr	r3, [sp, #136]	; 0x88
9001e9cc:	bf08      	it	eq
9001e9ce:	4613      	moveq	r3, r2
9001e9d0:	9309      	str	r3, [sp, #36]	; 0x24
9001e9d2:	e6a6      	b.n	9001e722 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001e9d4:	2900      	cmp	r1, #0
9001e9d6:	f43f af10 	beq.w	9001e7fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001e9da:	f819 3003 	ldrb.w	r3, [r9, r3]
9001e9de:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001e9e2:	930f      	str	r3, [sp, #60]	; 0x3c
9001e9e4:	e709      	b.n	9001e7fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001e9e6:	f112 0901 	adds.w	r9, r2, #1
9001e9ea:	f53f af7d 	bmi.w	9001e8e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001e9ee:	454b      	cmp	r3, r9
9001e9f0:	f6ff af7a 	blt.w	9001e8e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001e9f4:	f11c 0901 	adds.w	r9, ip, #1
9001e9f8:	f53f af76 	bmi.w	9001e8e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001e9fc:	45ce      	cmp	lr, r9
9001e9fe:	f6ff af73 	blt.w	9001e8e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001ea02:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9001ea04:	b21b      	sxth	r3, r3
9001ea06:	9202      	str	r2, [sp, #8]
9001ea08:	fa0f f28e 	sxth.w	r2, lr
9001ea0c:	9300      	str	r3, [sp, #0]
9001ea0e:	4633      	mov	r3, r6
9001ea10:	9201      	str	r2, [sp, #4]
9001ea12:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001ea14:	e9cd 1405 	strd	r1, r4, [sp, #20]
9001ea18:	e9cd c003 	strd	ip, r0, [sp, #12]
9001ea1c:	4639      	mov	r1, r7
9001ea1e:	9816      	ldr	r0, [sp, #88]	; 0x58
9001ea20:	f7ff fd8e 	bl	9001e540 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
9001ea24:	e760      	b.n	9001e8e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001ea26:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001ea28:	ea4f 422a 	mov.w	r2, sl, asr #16
9001ea2c:	1429      	asrs	r1, r5, #16
9001ea2e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9001ea30:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9001ea34:	f3ca 3c03 	ubfx	ip, sl, #12, #4
9001ea38:	f3c5 3003 	ubfx	r0, r5, #12, #4
9001ea3c:	fb03 2101 	mla	r1, r3, r1, r2
9001ea40:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001ea42:	440a      	add	r2, r1
9001ea44:	5c61      	ldrb	r1, [r4, r1]
9001ea46:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
9001ea4a:	f1bc 0f00 	cmp.w	ip, #0
9001ea4e:	f000 808c 	beq.w	9001eb6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
9001ea52:	7857      	ldrb	r7, [r2, #1]
9001ea54:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
9001ea58:	9413      	str	r4, [sp, #76]	; 0x4c
9001ea5a:	b140      	cbz	r0, 9001ea6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9001ea5c:	18d7      	adds	r7, r2, r3
9001ea5e:	5cd3      	ldrb	r3, [r2, r3]
9001ea60:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001ea64:	9310      	str	r3, [sp, #64]	; 0x40
9001ea66:	787b      	ldrb	r3, [r7, #1]
9001ea68:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001ea6c:	9314      	str	r3, [sp, #80]	; 0x50
9001ea6e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9001ea70:	fb1c f200 	smulbb	r2, ip, r0
9001ea74:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001ea76:	f10e 3eff 	add.w	lr, lr, #4294967295
9001ea7a:	041f      	lsls	r7, r3, #16
9001ea7c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001ea80:	10d2      	asrs	r2, r2, #3
9001ea82:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
9001ea86:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
9001ea8a:	431f      	orrs	r7, r3
9001ea8c:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
9001ea90:	9317      	str	r3, [sp, #92]	; 0x5c
9001ea92:	9b14      	ldr	r3, [sp, #80]	; 0x50
9001ea94:	9c17      	ldr	r4, [sp, #92]	; 0x5c
9001ea96:	041b      	lsls	r3, r3, #16
9001ea98:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001ea9c:	ea43 030b 	orr.w	r3, r3, fp
9001eaa0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9001eaa4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
9001eaa8:	4353      	muls	r3, r2
9001eaaa:	fb04 3707 	mla	r7, r4, r7, r3
9001eaae:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
9001eab2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9001eab4:	ea43 0b01 	orr.w	fp, r3, r1
9001eab8:	f1c0 0110 	rsb	r1, r0, #16
9001eabc:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001eabe:	eba1 0c0c 	sub.w	ip, r1, ip
9001eac2:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9001eac6:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
9001eaca:	fb0c 770b 	mla	r7, ip, fp, r7
9001eace:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9001ead2:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
9001ead6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001eada:	ea4c 0c0b 	orr.w	ip, ip, fp
9001eade:	fb02 770c 	mla	r7, r2, ip, r7
9001eae2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001eae4:	0d79      	lsrs	r1, r7, #21
9001eae6:	8812      	ldrh	r2, [r2, #0]
9001eae8:	097f      	lsrs	r7, r7, #5
9001eaea:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001eaee:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
9001eaf2:	430f      	orrs	r7, r1
9001eaf4:	1211      	asrs	r1, r2, #8
9001eaf6:	b2bb      	uxth	r3, r7
9001eaf8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9001eafc:	10d7      	asrs	r7, r2, #3
9001eafe:	fb11 f104 	smulbb	r1, r1, r4
9001eb02:	1218      	asrs	r0, r3, #8
9001eb04:	00d2      	lsls	r2, r2, #3
9001eb06:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001eb0a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001eb0e:	fb17 f704 	smulbb	r7, r7, r4
9001eb12:	b2d2      	uxtb	r2, r2
9001eb14:	fb00 1009 	mla	r0, r0, r9, r1
9001eb18:	10d9      	asrs	r1, r3, #3
9001eb1a:	fb12 f204 	smulbb	r2, r2, r4
9001eb1e:	00db      	lsls	r3, r3, #3
9001eb20:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001eb24:	b280      	uxth	r0, r0
9001eb26:	b2db      	uxtb	r3, r3
9001eb28:	fb01 7109 	mla	r1, r1, r9, r7
9001eb2c:	fb03 2309 	mla	r3, r3, r9, r2
9001eb30:	1c42      	adds	r2, r0, #1
9001eb32:	b289      	uxth	r1, r1
9001eb34:	b29b      	uxth	r3, r3
9001eb36:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9001eb3a:	1c4f      	adds	r7, r1, #1
9001eb3c:	1c5a      	adds	r2, r3, #1
9001eb3e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
9001eb42:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
9001eb46:	eb02 2213 	add.w	r2, r2, r3, lsr #8
9001eb4a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001eb4c:	0949      	lsrs	r1, r1, #5
9001eb4e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001eb52:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001eb56:	4310      	orrs	r0, r2
9001eb58:	4308      	orrs	r0, r1
9001eb5a:	f823 0b02 	strh.w	r0, [r3], #2
9001eb5e:	930e      	str	r3, [sp, #56]	; 0x38
9001eb60:	9b25      	ldr	r3, [sp, #148]	; 0x94
9001eb62:	449a      	add	sl, r3
9001eb64:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001eb66:	441d      	add	r5, r3
9001eb68:	e6ed      	b.n	9001e946 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
9001eb6a:	2800      	cmp	r0, #0
9001eb6c:	f43f af7f 	beq.w	9001ea6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9001eb70:	5cd3      	ldrb	r3, [r2, r3]
9001eb72:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001eb76:	9310      	str	r3, [sp, #64]	; 0x40
9001eb78:	e779      	b.n	9001ea6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9001eb7a:	b019      	add	sp, #100	; 0x64
9001eb7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001eb80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
9001eb80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001eb84:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
9001eb88:	f9bd e020 	ldrsh.w	lr, [sp, #32]
9001eb8c:	f1b8 0f00 	cmp.w	r8, #0
9001eb90:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
9001eb94:	fb08 470e 	mla	r7, r8, lr, r4
9001eb98:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
9001eb9c:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
9001eba0:	eb02 0907 	add.w	r9, r2, r7
9001eba4:	8808      	ldrh	r0, [r1, #0]
9001eba6:	db67      	blt.n	9001ec78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
9001eba8:	45c2      	cmp	sl, r8
9001ebaa:	dd65      	ble.n	9001ec78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
9001ebac:	2c00      	cmp	r4, #0
9001ebae:	db61      	blt.n	9001ec74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
9001ebb0:	45a6      	cmp	lr, r4
9001ebb2:	dd5f      	ble.n	9001ec74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
9001ebb4:	5dd2      	ldrb	r2, [r2, r7]
9001ebb6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
9001ebba:	1c62      	adds	r2, r4, #1
9001ebbc:	d45f      	bmi.n	9001ec7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9001ebbe:	4596      	cmp	lr, r2
9001ebc0:	dd5d      	ble.n	9001ec7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9001ebc2:	2d00      	cmp	r5, #0
9001ebc4:	d05b      	beq.n	9001ec7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9001ebc6:	f899 2001 	ldrb.w	r2, [r9, #1]
9001ebca:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
9001ebce:	f118 0801 	adds.w	r8, r8, #1
9001ebd2:	d458      	bmi.n	9001ec86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
9001ebd4:	45c2      	cmp	sl, r8
9001ebd6:	dd56      	ble.n	9001ec86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
9001ebd8:	2e00      	cmp	r6, #0
9001ebda:	d054      	beq.n	9001ec86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
9001ebdc:	2c00      	cmp	r4, #0
9001ebde:	db50      	blt.n	9001ec82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
9001ebe0:	45a6      	cmp	lr, r4
9001ebe2:	dd4e      	ble.n	9001ec82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
9001ebe4:	f819 200e 	ldrb.w	r2, [r9, lr]
9001ebe8:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
9001ebec:	3401      	adds	r4, #1
9001ebee:	d407      	bmi.n	9001ec00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9001ebf0:	45a6      	cmp	lr, r4
9001ebf2:	dd05      	ble.n	9001ec00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9001ebf4:	b125      	cbz	r5, 9001ec00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9001ebf6:	44ce      	add	lr, r9
9001ebf8:	f89e 0001 	ldrb.w	r0, [lr, #1]
9001ebfc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
9001ec00:	fb15 f406 	smulbb	r4, r5, r6
9001ec04:	ea4f 430c 	mov.w	r3, ip, lsl #16
9001ec08:	ea4f 4e07 	mov.w	lr, r7, lsl #16
9001ec0c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9001ec10:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001ec14:	f3c4 04c7 	ubfx	r4, r4, #3, #8
9001ec18:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
9001ec1c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
9001ec20:	ea43 0c0c 	orr.w	ip, r3, ip
9001ec24:	f1c6 0310 	rsb	r3, r6, #16
9001ec28:	ea4e 0707 	orr.w	r7, lr, r7
9001ec2c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
9001ec30:	1b5b      	subs	r3, r3, r5
9001ec32:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
9001ec36:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001ec3a:	437d      	muls	r5, r7
9001ec3c:	fb03 5c0c 	mla	ip, r3, ip, r5
9001ec40:	0403      	lsls	r3, r0, #16
9001ec42:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9001ec46:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001ec4a:	4318      	orrs	r0, r3
9001ec4c:	0413      	lsls	r3, r2, #16
9001ec4e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001ec52:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001ec56:	fb04 c000 	mla	r0, r4, r0, ip
9001ec5a:	4313      	orrs	r3, r2
9001ec5c:	fb06 0003 	mla	r0, r6, r3, r0
9001ec60:	0d43      	lsrs	r3, r0, #21
9001ec62:	0940      	lsrs	r0, r0, #5
9001ec64:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001ec68:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9001ec6c:	4318      	orrs	r0, r3
9001ec6e:	8008      	strh	r0, [r1, #0]
9001ec70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001ec74:	4684      	mov	ip, r0
9001ec76:	e7a0      	b.n	9001ebba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
9001ec78:	4607      	mov	r7, r0
9001ec7a:	4684      	mov	ip, r0
9001ec7c:	e7a7      	b.n	9001ebce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
9001ec7e:	4607      	mov	r7, r0
9001ec80:	e7a5      	b.n	9001ebce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
9001ec82:	4602      	mov	r2, r0
9001ec84:	e7b2      	b.n	9001ebec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
9001ec86:	4602      	mov	r2, r0
9001ec88:	e7ba      	b.n	9001ec00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

9001ec8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001ec8a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ec8e:	b093      	sub	sp, #76	; 0x4c
9001ec90:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001ec94:	920f      	str	r2, [sp, #60]	; 0x3c
9001ec96:	9a21      	ldr	r2, [sp, #132]	; 0x84
9001ec98:	9010      	str	r0, [sp, #64]	; 0x40
9001ec9a:	9108      	str	r1, [sp, #32]
9001ec9c:	6850      	ldr	r0, [r2, #4]
9001ec9e:	9306      	str	r3, [sp, #24]
9001eca0:	6812      	ldr	r2, [r2, #0]
9001eca2:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
9001eca6:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
9001ecaa:	fb00 1303 	mla	r3, r0, r3, r1
9001ecae:	eb02 0943 	add.w	r9, r2, r3, lsl #1
9001ecb2:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001ecb4:	681b      	ldr	r3, [r3, #0]
9001ecb6:	9307      	str	r3, [sp, #28]
9001ecb8:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001ecba:	685f      	ldr	r7, [r3, #4]
9001ecbc:	3704      	adds	r7, #4
9001ecbe:	9b08      	ldr	r3, [sp, #32]
9001ecc0:	2b00      	cmp	r3, #0
9001ecc2:	dc03      	bgt.n	9001eccc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
9001ecc4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001ecc6:	2b00      	cmp	r3, #0
9001ecc8:	f340 81b2 	ble.w	9001f030 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
9001eccc:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001ecce:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001ecd2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001ecd6:	1e48      	subs	r0, r1, #1
9001ecd8:	f102 3cff 	add.w	ip, r2, #4294967295
9001ecdc:	9b06      	ldr	r3, [sp, #24]
9001ecde:	2b00      	cmp	r3, #0
9001ece0:	f340 80a9 	ble.w	9001ee36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9001ece4:	ea5f 4e24 	movs.w	lr, r4, asr #16
9001ece8:	ea4f 4326 	mov.w	r3, r6, asr #16
9001ecec:	d406      	bmi.n	9001ecfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001ecee:	4586      	cmp	lr, r0
9001ecf0:	da04      	bge.n	9001ecfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001ecf2:	2b00      	cmp	r3, #0
9001ecf4:	db02      	blt.n	9001ecfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001ecf6:	4563      	cmp	r3, ip
9001ecf8:	f2c0 809e 	blt.w	9001ee38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
9001ecfc:	f11e 0e01 	adds.w	lr, lr, #1
9001ed00:	f100 808f 	bmi.w	9001ee22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9001ed04:	4571      	cmp	r1, lr
9001ed06:	f2c0 808c 	blt.w	9001ee22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9001ed0a:	3301      	adds	r3, #1
9001ed0c:	f100 8089 	bmi.w	9001ee22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9001ed10:	429a      	cmp	r2, r3
9001ed12:	f2c0 8086 	blt.w	9001ee22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9001ed16:	f8dd b018 	ldr.w	fp, [sp, #24]
9001ed1a:	46c8      	mov	r8, r9
9001ed1c:	f1bb 0f00 	cmp.w	fp, #0
9001ed20:	f340 80a6 	ble.w	9001ee70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9001ed24:	9a24      	ldr	r2, [sp, #144]	; 0x90
9001ed26:	ea4f 4c26 	mov.w	ip, r6, asr #16
9001ed2a:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001ed2c:	f3c4 3003 	ubfx	r0, r4, #12, #4
9001ed30:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9001ed34:	1422      	asrs	r2, r4, #16
9001ed36:	f3c6 3103 	ubfx	r1, r6, #12, #4
9001ed3a:	689b      	ldr	r3, [r3, #8]
9001ed3c:	f100 80e3 	bmi.w	9001ef06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9001ed40:	f103 3aff 	add.w	sl, r3, #4294967295
9001ed44:	4552      	cmp	r2, sl
9001ed46:	f280 80de 	bge.w	9001ef06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9001ed4a:	f1bc 0f00 	cmp.w	ip, #0
9001ed4e:	f2c0 80da 	blt.w	9001ef06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9001ed52:	f10e 3aff 	add.w	sl, lr, #4294967295
9001ed56:	45d4      	cmp	ip, sl
9001ed58:	f280 80d5 	bge.w	9001ef06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9001ed5c:	b21b      	sxth	r3, r3
9001ed5e:	9d07      	ldr	r5, [sp, #28]
9001ed60:	fb0c 2203 	mla	r2, ip, r3, r2
9001ed64:	eb05 0a02 	add.w	sl, r5, r2
9001ed68:	5caa      	ldrb	r2, [r5, r2]
9001ed6a:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
9001ed6e:	2800      	cmp	r0, #0
9001ed70:	f000 80c0 	beq.w	9001eef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
9001ed74:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001ed78:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
9001ed7c:	920b      	str	r2, [sp, #44]	; 0x2c
9001ed7e:	b151      	cbz	r1, 9001ed96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9001ed80:	eb0a 0203 	add.w	r2, sl, r3
9001ed84:	f81a 3003 	ldrb.w	r3, [sl, r3]
9001ed88:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001ed8c:	9309      	str	r3, [sp, #36]	; 0x24
9001ed8e:	7853      	ldrb	r3, [r2, #1]
9001ed90:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001ed94:	930c      	str	r3, [sp, #48]	; 0x30
9001ed96:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001ed98:	fb10 f201 	smulbb	r2, r0, r1
9001ed9c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
9001ed9e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9001eda2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001eda6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
9001edaa:	10d2      	asrs	r2, r2, #3
9001edac:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001edb0:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
9001edb4:	ea4c 0c03 	orr.w	ip, ip, r3
9001edb8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001edba:	041b      	lsls	r3, r3, #16
9001edbc:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001edc0:	432b      	orrs	r3, r5
9001edc2:	4353      	muls	r3, r2
9001edc4:	fb0a 330c 	mla	r3, sl, ip, r3
9001edc8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
9001edcc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
9001edd0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001edd4:	ea4c 0e0e 	orr.w	lr, ip, lr
9001edd8:	f1c1 0c10 	rsb	ip, r1, #16
9001eddc:	ebac 0c00 	sub.w	ip, ip, r0
9001ede0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9001ede4:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
9001ede8:	fb0c 3c0e 	mla	ip, ip, lr, r3
9001edec:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001edee:	0418      	lsls	r0, r3, #16
9001edf0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001edf4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
9001edf8:	4318      	orrs	r0, r3
9001edfa:	fb02 c200 	mla	r2, r2, r0, ip
9001edfe:	0d53      	lsrs	r3, r2, #21
9001ee00:	0952      	lsrs	r2, r2, #5
9001ee02:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001ee06:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001ee0a:	431a      	orrs	r2, r3
9001ee0c:	f8a8 2000 	strh.w	r2, [r8]
9001ee10:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001ee12:	f108 0802 	add.w	r8, r8, #2
9001ee16:	f10b 3bff 	add.w	fp, fp, #4294967295
9001ee1a:	441c      	add	r4, r3
9001ee1c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001ee1e:	441e      	add	r6, r3
9001ee20:	e77c      	b.n	9001ed1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001ee22:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001ee24:	f109 0902 	add.w	r9, r9, #2
9001ee28:	441c      	add	r4, r3
9001ee2a:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001ee2c:	441e      	add	r6, r3
9001ee2e:	9b06      	ldr	r3, [sp, #24]
9001ee30:	3b01      	subs	r3, #1
9001ee32:	9306      	str	r3, [sp, #24]
9001ee34:	e752      	b.n	9001ecdc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001ee36:	d020      	beq.n	9001ee7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001ee38:	9b06      	ldr	r3, [sp, #24]
9001ee3a:	981f      	ldr	r0, [sp, #124]	; 0x7c
9001ee3c:	3b01      	subs	r3, #1
9001ee3e:	fb00 4003 	mla	r0, r0, r3, r4
9001ee42:	1400      	asrs	r0, r0, #16
9001ee44:	f53f af67 	bmi.w	9001ed16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001ee48:	3901      	subs	r1, #1
9001ee4a:	4288      	cmp	r0, r1
9001ee4c:	f6bf af63 	bge.w	9001ed16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001ee50:	9920      	ldr	r1, [sp, #128]	; 0x80
9001ee52:	fb01 6303 	mla	r3, r1, r3, r6
9001ee56:	141b      	asrs	r3, r3, #16
9001ee58:	f53f af5d 	bmi.w	9001ed16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001ee5c:	3a01      	subs	r2, #1
9001ee5e:	4293      	cmp	r3, r2
9001ee60:	f6bf af59 	bge.w	9001ed16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001ee64:	f8dd 8018 	ldr.w	r8, [sp, #24]
9001ee68:	46ca      	mov	sl, r9
9001ee6a:	f1b8 0f00 	cmp.w	r8, #0
9001ee6e:	dc67      	bgt.n	9001ef40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001ee70:	9b06      	ldr	r3, [sp, #24]
9001ee72:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
9001ee76:	eb09 0945 	add.w	r9, r9, r5, lsl #1
9001ee7a:	9b08      	ldr	r3, [sp, #32]
9001ee7c:	2b00      	cmp	r3, #0
9001ee7e:	f340 80d7 	ble.w	9001f030 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
9001ee82:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ee86:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001ee88:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ee8c:	eeb0 6a62 	vmov.f32	s12, s5
9001ee90:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001ee94:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ee98:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ee9c:	ee16 4a10 	vmov	r4, s12
9001eea0:	eeb0 6a43 	vmov.f32	s12, s6
9001eea4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001eea8:	ee16 6a10 	vmov	r6, s12
9001eeac:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001eeb0:	ee61 7a27 	vmul.f32	s15, s2, s15
9001eeb4:	ee77 2a62 	vsub.f32	s5, s14, s5
9001eeb8:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001eebc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001eec0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001eec4:	ee12 2a90 	vmov	r2, s5
9001eec8:	eef0 2a47 	vmov.f32	s5, s14
9001eecc:	fb92 f3f3 	sdiv	r3, r2, r3
9001eed0:	ee13 2a10 	vmov	r2, s6
9001eed4:	931f      	str	r3, [sp, #124]	; 0x7c
9001eed6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001eed8:	eeb0 3a67 	vmov.f32	s6, s15
9001eedc:	fb92 f3f3 	sdiv	r3, r2, r3
9001eee0:	9320      	str	r3, [sp, #128]	; 0x80
9001eee2:	9b08      	ldr	r3, [sp, #32]
9001eee4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001eee6:	3b01      	subs	r3, #1
9001eee8:	9308      	str	r3, [sp, #32]
9001eeea:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001eeec:	bf08      	it	eq
9001eeee:	4613      	moveq	r3, r2
9001eef0:	9306      	str	r3, [sp, #24]
9001eef2:	e6e4      	b.n	9001ecbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
9001eef4:	2900      	cmp	r1, #0
9001eef6:	f43f af4e 	beq.w	9001ed96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9001eefa:	f81a 3003 	ldrb.w	r3, [sl, r3]
9001eefe:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001ef02:	9309      	str	r3, [sp, #36]	; 0x24
9001ef04:	e747      	b.n	9001ed96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9001ef06:	f112 0a01 	adds.w	sl, r2, #1
9001ef0a:	d481      	bmi.n	9001ee10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ef0c:	4553      	cmp	r3, sl
9001ef0e:	f6ff af7f 	blt.w	9001ee10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ef12:	f11c 0a01 	adds.w	sl, ip, #1
9001ef16:	f53f af7b 	bmi.w	9001ee10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ef1a:	45d6      	cmp	lr, sl
9001ef1c:	f6ff af78 	blt.w	9001ee10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ef20:	b21b      	sxth	r3, r3
9001ef22:	e9cd 2c02 	strd	r2, ip, [sp, #8]
9001ef26:	fa0f f28e 	sxth.w	r2, lr
9001ef2a:	9300      	str	r3, [sp, #0]
9001ef2c:	463b      	mov	r3, r7
9001ef2e:	9201      	str	r2, [sp, #4]
9001ef30:	9a07      	ldr	r2, [sp, #28]
9001ef32:	e9cd 0104 	strd	r0, r1, [sp, #16]
9001ef36:	4641      	mov	r1, r8
9001ef38:	9810      	ldr	r0, [sp, #64]	; 0x40
9001ef3a:	f7ff fe21 	bl	9001eb80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
9001ef3e:	e767      	b.n	9001ee10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ef40:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001ef42:	1422      	asrs	r2, r4, #16
9001ef44:	1431      	asrs	r1, r6, #16
9001ef46:	9d07      	ldr	r5, [sp, #28]
9001ef48:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9001ef4c:	f3c4 3e03 	ubfx	lr, r4, #12, #4
9001ef50:	f3c6 3003 	ubfx	r0, r6, #12, #4
9001ef54:	fb03 2101 	mla	r1, r3, r1, r2
9001ef58:	9a07      	ldr	r2, [sp, #28]
9001ef5a:	440a      	add	r2, r1
9001ef5c:	5c69      	ldrb	r1, [r5, r1]
9001ef5e:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
9001ef62:	f1be 0f00 	cmp.w	lr, #0
9001ef66:	d05c      	beq.n	9001f022 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
9001ef68:	f892 c001 	ldrb.w	ip, [r2, #1]
9001ef6c:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
9001ef70:	950d      	str	r5, [sp, #52]	; 0x34
9001ef72:	b150      	cbz	r0, 9001ef8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
9001ef74:	eb02 0c03 	add.w	ip, r2, r3
9001ef78:	5cd3      	ldrb	r3, [r2, r3]
9001ef7a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001ef7e:	930a      	str	r3, [sp, #40]	; 0x28
9001ef80:	f89c 3001 	ldrb.w	r3, [ip, #1]
9001ef84:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001ef88:	930e      	str	r3, [sp, #56]	; 0x38
9001ef8a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001ef8c:	fb1e f200 	smulbb	r2, lr, r0
9001ef90:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9001ef92:	f108 38ff 	add.w	r8, r8, #4294967295
9001ef96:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9001ef9a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001ef9e:	10d2      	asrs	r2, r2, #3
9001efa0:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
9001efa4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001efa8:	ea4c 0c03 	orr.w	ip, ip, r3
9001efac:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
9001efb0:	9311      	str	r3, [sp, #68]	; 0x44
9001efb2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001efb4:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001efb6:	041b      	lsls	r3, r3, #16
9001efb8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001efbc:	ea43 030b 	orr.w	r3, r3, fp
9001efc0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9001efc4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
9001efc8:	4353      	muls	r3, r2
9001efca:	fb05 3c0c 	mla	ip, r5, ip, r3
9001efce:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
9001efd2:	ea43 0b01 	orr.w	fp, r3, r1
9001efd6:	f1c0 0110 	rsb	r1, r0, #16
9001efda:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001efdc:	eba1 0e0e 	sub.w	lr, r1, lr
9001efe0:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
9001efe4:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
9001efe8:	fb0e cc0b 	mla	ip, lr, fp, ip
9001efec:	ea4f 4b03 	mov.w	fp, r3, lsl #16
9001eff0:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
9001eff4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
9001eff8:	ea4b 0e0e 	orr.w	lr, fp, lr
9001effc:	fb02 cc0e 	mla	ip, r2, lr, ip
9001f000:	ea4f 535c 	mov.w	r3, ip, lsr #21
9001f004:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
9001f008:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001f00c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9001f010:	ea43 0c0c 	orr.w	ip, r3, ip
9001f014:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001f016:	441c      	add	r4, r3
9001f018:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001f01a:	f82a cb02 	strh.w	ip, [sl], #2
9001f01e:	441e      	add	r6, r3
9001f020:	e723      	b.n	9001ee6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9001f022:	2800      	cmp	r0, #0
9001f024:	d0b1      	beq.n	9001ef8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
9001f026:	5cd3      	ldrb	r3, [r2, r3]
9001f028:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001f02c:	930a      	str	r3, [sp, #40]	; 0x28
9001f02e:	e7ac      	b.n	9001ef8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
9001f030:	b013      	add	sp, #76	; 0x4c
9001f032:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001f036 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
9001f036:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f03a:	880d      	ldrh	r5, [r1, #0]
9001f03c:	b087      	sub	sp, #28
9001f03e:	10ef      	asrs	r7, r5, #3
9001f040:	9103      	str	r1, [sp, #12]
9001f042:	ea4f 2a25 	mov.w	sl, r5, asr #8
9001f046:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
9001f04a:	00ed      	lsls	r5, r5, #3
9001f04c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001f050:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
9001f054:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
9001f058:	b2ed      	uxtb	r5, r5
9001f05a:	9701      	str	r7, [sp, #4]
9001f05c:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
9001f060:	9502      	str	r5, [sp, #8]
9001f062:	9d01      	ldr	r5, [sp, #4]
9001f064:	9902      	ldr	r1, [sp, #8]
9001f066:	022d      	lsls	r5, r5, #8
9001f068:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
9001f06c:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
9001f070:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
9001f074:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
9001f078:	430d      	orrs	r5, r1
9001f07a:	fb06 0709 	mla	r7, r6, r9, r0
9001f07e:	2e00      	cmp	r6, #0
9001f080:	9505      	str	r5, [sp, #20]
9001f082:	eb02 0c07 	add.w	ip, r2, r7
9001f086:	f2c0 80b6 	blt.w	9001f1f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
9001f08a:	45b3      	cmp	fp, r6
9001f08c:	f340 80b3 	ble.w	9001f1f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
9001f090:	2800      	cmp	r0, #0
9001f092:	f2c0 80ae 	blt.w	9001f1f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
9001f096:	4581      	cmp	r9, r0
9001f098:	f340 80ab 	ble.w	9001f1f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
9001f09c:	5dd7      	ldrb	r7, [r2, r7]
9001f09e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
9001f0a2:	441f      	add	r7, r3
9001f0a4:	1c42      	adds	r2, r0, #1
9001f0a6:	f100 80a9 	bmi.w	9001f1fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9001f0aa:	4591      	cmp	r9, r2
9001f0ac:	f340 80a6 	ble.w	9001f1fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9001f0b0:	2c00      	cmp	r4, #0
9001f0b2:	f000 80a3 	beq.w	9001f1fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9001f0b6:	f89c 5001 	ldrb.w	r5, [ip, #1]
9001f0ba:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001f0be:	441d      	add	r5, r3
9001f0c0:	3601      	adds	r6, #1
9001f0c2:	f100 809f 	bmi.w	9001f204 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
9001f0c6:	45b3      	cmp	fp, r6
9001f0c8:	f340 809c 	ble.w	9001f204 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
9001f0cc:	f1be 0f00 	cmp.w	lr, #0
9001f0d0:	f000 8098 	beq.w	9001f204 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
9001f0d4:	2800      	cmp	r0, #0
9001f0d6:	f2c0 8093 	blt.w	9001f200 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
9001f0da:	4581      	cmp	r9, r0
9001f0dc:	f340 8090 	ble.w	9001f200 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
9001f0e0:	f81c 6009 	ldrb.w	r6, [ip, r9]
9001f0e4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
9001f0e8:	441e      	add	r6, r3
9001f0ea:	3001      	adds	r0, #1
9001f0ec:	f100 808d 	bmi.w	9001f20a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
9001f0f0:	4581      	cmp	r9, r0
9001f0f2:	f340 808a 	ble.w	9001f20a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
9001f0f6:	2c00      	cmp	r4, #0
9001f0f8:	f000 8087 	beq.w	9001f20a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
9001f0fc:	44e1      	add	r9, ip
9001f0fe:	f899 2001 	ldrb.w	r2, [r9, #1]
9001f102:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f106:	4413      	add	r3, r2
9001f108:	b2a4      	uxth	r4, r4
9001f10a:	f897 c002 	ldrb.w	ip, [r7, #2]
9001f10e:	fa1f fe8e 	uxth.w	lr, lr
9001f112:	9901      	ldr	r1, [sp, #4]
9001f114:	fb04 fb0e 	mul.w	fp, r4, lr
9001f118:	0124      	lsls	r4, r4, #4
9001f11a:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
9001f11e:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
9001f122:	eba4 040b 	sub.w	r4, r4, fp
9001f126:	fa1f f08e 	uxth.w	r0, lr
9001f12a:	b2a2      	uxth	r2, r4
9001f12c:	78ac      	ldrb	r4, [r5, #2]
9001f12e:	eba9 0900 	sub.w	r9, r9, r0
9001f132:	fa1f fe88 	uxth.w	lr, r8
9001f136:	4354      	muls	r4, r2
9001f138:	ea6f 0808 	mvn.w	r8, r8
9001f13c:	fa1f f989 	uxth.w	r9, r9
9001f140:	fa5f f888 	uxtb.w	r8, r8
9001f144:	fb09 440c 	mla	r4, r9, ip, r4
9001f148:	f896 c002 	ldrb.w	ip, [r6, #2]
9001f14c:	fb1a fa08 	smulbb	sl, sl, r8
9001f150:	fb00 440c 	mla	r4, r0, ip, r4
9001f154:	f893 c002 	ldrb.w	ip, [r3, #2]
9001f158:	fb0b 4c0c 	mla	ip, fp, ip, r4
9001f15c:	787c      	ldrb	r4, [r7, #1]
9001f15e:	783f      	ldrb	r7, [r7, #0]
9001f160:	f3cc 2c07 	ubfx	ip, ip, #8, #8
9001f164:	fb0c ac0e 	mla	ip, ip, lr, sl
9001f168:	f895 a001 	ldrb.w	sl, [r5, #1]
9001f16c:	782d      	ldrb	r5, [r5, #0]
9001f16e:	fb02 fa0a 	mul.w	sl, r2, sl
9001f172:	fa1f fc8c 	uxth.w	ip, ip
9001f176:	436a      	muls	r2, r5
9001f178:	7835      	ldrb	r5, [r6, #0]
9001f17a:	fb09 aa04 	mla	sl, r9, r4, sl
9001f17e:	7874      	ldrb	r4, [r6, #1]
9001f180:	fb09 2207 	mla	r2, r9, r7, r2
9001f184:	fb00 aa04 	mla	sl, r0, r4, sl
9001f188:	785c      	ldrb	r4, [r3, #1]
9001f18a:	fb00 2005 	mla	r0, r0, r5, r2
9001f18e:	781b      	ldrb	r3, [r3, #0]
9001f190:	fb0b a404 	mla	r4, fp, r4, sl
9001f194:	fb11 fa08 	smulbb	sl, r1, r8
9001f198:	fb0b 0b03 	mla	fp, fp, r3, r0
9001f19c:	9b02      	ldr	r3, [sp, #8]
9001f19e:	f3c4 2407 	ubfx	r4, r4, #8, #8
9001f1a2:	fb13 f808 	smulbb	r8, r3, r8
9001f1a6:	f3cb 2b07 	ubfx	fp, fp, #8, #8
9001f1aa:	fb04 a40e 	mla	r4, r4, lr, sl
9001f1ae:	f10c 0301 	add.w	r3, ip, #1
9001f1b2:	fb0b 8e0e 	mla	lr, fp, lr, r8
9001f1b6:	b2a4      	uxth	r4, r4
9001f1b8:	fa1f fe8e 	uxth.w	lr, lr
9001f1bc:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
9001f1c0:	f104 0a01 	add.w	sl, r4, #1
9001f1c4:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
9001f1c8:	f10e 0c01 	add.w	ip, lr, #1
9001f1cc:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9001f1d0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9001f1d4:	0964      	lsrs	r4, r4, #5
9001f1d6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001f1da:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9001f1de:	ea4c 0c03 	orr.w	ip, ip, r3
9001f1e2:	9b03      	ldr	r3, [sp, #12]
9001f1e4:	ea4c 0c04 	orr.w	ip, ip, r4
9001f1e8:	f8a3 c000 	strh.w	ip, [r3]
9001f1ec:	b007      	add	sp, #28
9001f1ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f1f2:	af05      	add	r7, sp, #20
9001f1f4:	e756      	b.n	9001f0a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
9001f1f6:	ad05      	add	r5, sp, #20
9001f1f8:	462f      	mov	r7, r5
9001f1fa:	e761      	b.n	9001f0c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
9001f1fc:	ad05      	add	r5, sp, #20
9001f1fe:	e75f      	b.n	9001f0c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
9001f200:	ae05      	add	r6, sp, #20
9001f202:	e772      	b.n	9001f0ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
9001f204:	ab05      	add	r3, sp, #20
9001f206:	461e      	mov	r6, r3
9001f208:	e77e      	b.n	9001f108 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
9001f20a:	ab05      	add	r3, sp, #20
9001f20c:	e77c      	b.n	9001f108 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

9001f20e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001f20e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f212:	b095      	sub	sp, #84	; 0x54
9001f214:	9212      	str	r2, [sp, #72]	; 0x48
9001f216:	9309      	str	r3, [sp, #36]	; 0x24
9001f218:	9a23      	ldr	r2, [sp, #140]	; 0x8c
9001f21a:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
9001f21e:	9013      	str	r0, [sp, #76]	; 0x4c
9001f220:	930f      	str	r3, [sp, #60]	; 0x3c
9001f222:	6850      	ldr	r0, [r2, #4]
9001f224:	910e      	str	r1, [sp, #56]	; 0x38
9001f226:	6812      	ldr	r2, [r2, #0]
9001f228:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
9001f22c:	fb00 1303 	mla	r3, r0, r3, r1
9001f230:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001f234:	930a      	str	r3, [sp, #40]	; 0x28
9001f236:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001f238:	681b      	ldr	r3, [r3, #0]
9001f23a:	930d      	str	r3, [sp, #52]	; 0x34
9001f23c:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001f23e:	685c      	ldr	r4, [r3, #4]
9001f240:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001f242:	3404      	adds	r4, #4
9001f244:	43db      	mvns	r3, r3
9001f246:	b2db      	uxtb	r3, r3
9001f248:	930b      	str	r3, [sp, #44]	; 0x2c
9001f24a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001f24c:	2b00      	cmp	r3, #0
9001f24e:	dc03      	bgt.n	9001f258 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001f250:	9b12      	ldr	r3, [sp, #72]	; 0x48
9001f252:	2b00      	cmp	r3, #0
9001f254:	f340 8255 	ble.w	9001f702 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
9001f258:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001f25a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001f25e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001f262:	1e48      	subs	r0, r1, #1
9001f264:	1e55      	subs	r5, r2, #1
9001f266:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f268:	2b00      	cmp	r3, #0
9001f26a:	f340 80f9 	ble.w	9001f460 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001f26e:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
9001f270:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001f272:	1436      	asrs	r6, r6, #16
9001f274:	ea4f 4323 	mov.w	r3, r3, asr #16
9001f278:	d406      	bmi.n	9001f288 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001f27a:	4286      	cmp	r6, r0
9001f27c:	da04      	bge.n	9001f288 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001f27e:	2b00      	cmp	r3, #0
9001f280:	db02      	blt.n	9001f288 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001f282:	42ab      	cmp	r3, r5
9001f284:	f2c0 80ed 	blt.w	9001f462 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
9001f288:	3601      	adds	r6, #1
9001f28a:	f100 80da 	bmi.w	9001f442 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9001f28e:	42b1      	cmp	r1, r6
9001f290:	f2c0 80d7 	blt.w	9001f442 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9001f294:	3301      	adds	r3, #1
9001f296:	f100 80d4 	bmi.w	9001f442 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9001f29a:	429a      	cmp	r2, r3
9001f29c:	f2c0 80d1 	blt.w	9001f442 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9001f2a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f2a2:	9311      	str	r3, [sp, #68]	; 0x44
9001f2a4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001f2a6:	930c      	str	r3, [sp, #48]	; 0x30
9001f2a8:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001f2aa:	2b00      	cmp	r3, #0
9001f2ac:	f340 80fa 	ble.w	9001f4a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
9001f2b0:	9826      	ldr	r0, [sp, #152]	; 0x98
9001f2b2:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001f2b4:	9a20      	ldr	r2, [sp, #128]	; 0x80
9001f2b6:	68c6      	ldr	r6, [r0, #12]
9001f2b8:	141d      	asrs	r5, r3, #16
9001f2ba:	981f      	ldr	r0, [sp, #124]	; 0x7c
9001f2bc:	f3c2 3103 	ubfx	r1, r2, #12, #4
9001f2c0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001f2c2:	9a26      	ldr	r2, [sp, #152]	; 0x98
9001f2c4:	1400      	asrs	r0, r0, #16
9001f2c6:	f3c3 3303 	ubfx	r3, r3, #12, #4
9001f2ca:	6892      	ldr	r2, [r2, #8]
9001f2cc:	f100 813e 	bmi.w	9001f54c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9001f2d0:	1e57      	subs	r7, r2, #1
9001f2d2:	42b8      	cmp	r0, r7
9001f2d4:	f280 813a 	bge.w	9001f54c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9001f2d8:	2d00      	cmp	r5, #0
9001f2da:	f2c0 8137 	blt.w	9001f54c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9001f2de:	1e77      	subs	r7, r6, #1
9001f2e0:	42bd      	cmp	r5, r7
9001f2e2:	f280 8133 	bge.w	9001f54c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9001f2e6:	b212      	sxth	r2, r2
9001f2e8:	fb05 0002 	mla	r0, r5, r2, r0
9001f2ec:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9001f2ee:	f815 a000 	ldrb.w	sl, [r5, r0]
9001f2f2:	182e      	adds	r6, r5, r0
9001f2f4:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
9001f2f8:	eb04 050a 	add.w	r5, r4, sl
9001f2fc:	2b00      	cmp	r3, #0
9001f2fe:	f000 8117 	beq.w	9001f530 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
9001f302:	f896 c001 	ldrb.w	ip, [r6, #1]
9001f306:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
9001f30a:	44a4      	add	ip, r4
9001f30c:	2900      	cmp	r1, #0
9001f30e:	f000 8117 	beq.w	9001f540 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
9001f312:	18b0      	adds	r0, r6, r2
9001f314:	5cb2      	ldrb	r2, [r6, r2]
9001f316:	7840      	ldrb	r0, [r0, #1]
9001f318:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f31c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9001f320:	4422      	add	r2, r4
9001f322:	4420      	add	r0, r4
9001f324:	b29b      	uxth	r3, r3
9001f326:	f89c 7002 	ldrb.w	r7, [ip, #2]
9001f32a:	b289      	uxth	r1, r1
9001f32c:	f895 b002 	ldrb.w	fp, [r5, #2]
9001f330:	9e0c      	ldr	r6, [sp, #48]	; 0x30
9001f332:	fb03 f901 	mul.w	r9, r3, r1
9001f336:	011b      	lsls	r3, r3, #4
9001f338:	f8b6 e000 	ldrh.w	lr, [r6]
9001f33c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9001f340:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
9001f344:	eba3 0309 	sub.w	r3, r3, r9
9001f348:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
9001f34c:	b289      	uxth	r1, r1
9001f34e:	f814 a00a 	ldrb.w	sl, [r4, sl]
9001f352:	b29b      	uxth	r3, r3
9001f354:	eba8 0801 	sub.w	r8, r8, r1
9001f358:	435f      	muls	r7, r3
9001f35a:	fa1f f888 	uxth.w	r8, r8
9001f35e:	9310      	str	r3, [sp, #64]	; 0x40
9001f360:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f362:	fb08 770b 	mla	r7, r8, fp, r7
9001f366:	f892 b002 	ldrb.w	fp, [r2, #2]
9001f36a:	fb01 770b 	mla	r7, r1, fp, r7
9001f36e:	f890 b002 	ldrb.w	fp, [r0, #2]
9001f372:	fb09 770b 	mla	r7, r9, fp, r7
9001f376:	ea4f 2b2e 	mov.w	fp, lr, asr #8
9001f37a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
9001f37e:	f3c7 2707 	ubfx	r7, r7, #8, #8
9001f382:	fb1b fb03 	smulbb	fp, fp, r3
9001f386:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001f388:	fb07 b706 	mla	r7, r7, r6, fp
9001f38c:	f895 b001 	ldrb.w	fp, [r5, #1]
9001f390:	f89c 5001 	ldrb.w	r5, [ip, #1]
9001f394:	f89c c000 	ldrb.w	ip, [ip]
9001f398:	b2bf      	uxth	r7, r7
9001f39a:	435d      	muls	r5, r3
9001f39c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f39e:	fb08 550b 	mla	r5, r8, fp, r5
9001f3a2:	f892 b001 	ldrb.w	fp, [r2, #1]
9001f3a6:	fb01 550b 	mla	r5, r1, fp, r5
9001f3aa:	f890 b001 	ldrb.w	fp, [r0, #1]
9001f3ae:	fb09 550b 	mla	r5, r9, fp, r5
9001f3b2:	ea4f 0bee 	mov.w	fp, lr, asr #3
9001f3b6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001f3ba:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001f3be:	f3c5 2507 	ubfx	r5, r5, #8, #8
9001f3c2:	fa5f fe8e 	uxtb.w	lr, lr
9001f3c6:	fb1b fb03 	smulbb	fp, fp, r3
9001f3ca:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001f3cc:	fb03 f30c 	mul.w	r3, r3, ip
9001f3d0:	f892 c000 	ldrb.w	ip, [r2]
9001f3d4:	fb05 b506 	mla	r5, r5, r6, fp
9001f3d8:	fb08 330a 	mla	r3, r8, sl, r3
9001f3dc:	b2ad      	uxth	r5, r5
9001f3de:	fb01 330c 	mla	r3, r1, ip, r3
9001f3e2:	f890 c000 	ldrb.w	ip, [r0]
9001f3e6:	f105 0b01 	add.w	fp, r5, #1
9001f3ea:	fb09 3c0c 	mla	ip, r9, ip, r3
9001f3ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f3f0:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
9001f3f4:	fb1e fe03 	smulbb	lr, lr, r3
9001f3f8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
9001f3fc:	1c7b      	adds	r3, r7, #1
9001f3fe:	096d      	lsrs	r5, r5, #5
9001f400:	fb0c e606 	mla	r6, ip, r6, lr
9001f404:	eb03 2717 	add.w	r7, r3, r7, lsr #8
9001f408:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001f40c:	b2b6      	uxth	r6, r6
9001f40e:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
9001f412:	1c77      	adds	r7, r6, #1
9001f414:	eb07 2716 	add.w	r7, r7, r6, lsr #8
9001f418:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001f41c:	431f      	orrs	r7, r3
9001f41e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001f420:	433d      	orrs	r5, r7
9001f422:	801d      	strh	r5, [r3, #0]
9001f424:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001f426:	9a21      	ldr	r2, [sp, #132]	; 0x84
9001f428:	3302      	adds	r3, #2
9001f42a:	930c      	str	r3, [sp, #48]	; 0x30
9001f42c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001f42e:	4413      	add	r3, r2
9001f430:	9a22      	ldr	r2, [sp, #136]	; 0x88
9001f432:	931f      	str	r3, [sp, #124]	; 0x7c
9001f434:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001f436:	4413      	add	r3, r2
9001f438:	9320      	str	r3, [sp, #128]	; 0x80
9001f43a:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001f43c:	3b01      	subs	r3, #1
9001f43e:	9311      	str	r3, [sp, #68]	; 0x44
9001f440:	e732      	b.n	9001f2a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001f442:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001f444:	9e21      	ldr	r6, [sp, #132]	; 0x84
9001f446:	4433      	add	r3, r6
9001f448:	9e22      	ldr	r6, [sp, #136]	; 0x88
9001f44a:	931f      	str	r3, [sp, #124]	; 0x7c
9001f44c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001f44e:	4433      	add	r3, r6
9001f450:	9320      	str	r3, [sp, #128]	; 0x80
9001f452:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f454:	3b01      	subs	r3, #1
9001f456:	9309      	str	r3, [sp, #36]	; 0x24
9001f458:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001f45a:	3302      	adds	r3, #2
9001f45c:	930a      	str	r3, [sp, #40]	; 0x28
9001f45e:	e702      	b.n	9001f266 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9001f460:	d027      	beq.n	9001f4b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
9001f462:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f464:	9821      	ldr	r0, [sp, #132]	; 0x84
9001f466:	3b01      	subs	r3, #1
9001f468:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
9001f46a:	fb00 5003 	mla	r0, r0, r3, r5
9001f46e:	1400      	asrs	r0, r0, #16
9001f470:	f53f af16 	bmi.w	9001f2a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001f474:	3901      	subs	r1, #1
9001f476:	4288      	cmp	r0, r1
9001f478:	f6bf af12 	bge.w	9001f2a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001f47c:	9922      	ldr	r1, [sp, #136]	; 0x88
9001f47e:	9820      	ldr	r0, [sp, #128]	; 0x80
9001f480:	fb01 0303 	mla	r3, r1, r3, r0
9001f484:	141b      	asrs	r3, r3, #16
9001f486:	f53f af0b 	bmi.w	9001f2a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001f48a:	3a01      	subs	r2, #1
9001f48c:	4293      	cmp	r3, r2
9001f48e:	f6bf af07 	bge.w	9001f2a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001f492:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f494:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
9001f498:	9311      	str	r3, [sp, #68]	; 0x44
9001f49a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001f49c:	930c      	str	r3, [sp, #48]	; 0x30
9001f49e:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001f4a0:	2b00      	cmp	r3, #0
9001f4a2:	dc70      	bgt.n	9001f586 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
9001f4a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f4a6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001f4a8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001f4ac:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001f4b0:	930a      	str	r3, [sp, #40]	; 0x28
9001f4b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001f4b4:	2b00      	cmp	r3, #0
9001f4b6:	f340 8124 	ble.w	9001f702 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
9001f4ba:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001f4be:	9b1e      	ldr	r3, [sp, #120]	; 0x78
9001f4c0:	ee30 0a04 	vadd.f32	s0, s0, s8
9001f4c4:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001f4c8:	eef0 6a62 	vmov.f32	s13, s5
9001f4cc:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001f4d0:	ee31 1a05 	vadd.f32	s2, s2, s10
9001f4d4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001f4d8:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
9001f4dc:	eef0 6a43 	vmov.f32	s13, s6
9001f4e0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001f4e4:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
9001f4e8:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001f4ec:	ee61 7a27 	vmul.f32	s15, s2, s15
9001f4f0:	ee77 2a62 	vsub.f32	s5, s14, s5
9001f4f4:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001f4f8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001f4fc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001f500:	ee12 2a90 	vmov	r2, s5
9001f504:	eef0 2a47 	vmov.f32	s5, s14
9001f508:	fb92 f3f3 	sdiv	r3, r2, r3
9001f50c:	ee13 2a10 	vmov	r2, s6
9001f510:	9321      	str	r3, [sp, #132]	; 0x84
9001f512:	9b1e      	ldr	r3, [sp, #120]	; 0x78
9001f514:	eeb0 3a67 	vmov.f32	s6, s15
9001f518:	fb92 f3f3 	sdiv	r3, r2, r3
9001f51c:	9322      	str	r3, [sp, #136]	; 0x88
9001f51e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001f520:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001f522:	3b01      	subs	r3, #1
9001f524:	930e      	str	r3, [sp, #56]	; 0x38
9001f526:	9b1e      	ldr	r3, [sp, #120]	; 0x78
9001f528:	bf08      	it	eq
9001f52a:	4613      	moveq	r3, r2
9001f52c:	9309      	str	r3, [sp, #36]	; 0x24
9001f52e:	e68c      	b.n	9001f24a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001f530:	b149      	cbz	r1, 9001f546 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
9001f532:	5cb2      	ldrb	r2, [r6, r2]
9001f534:	4628      	mov	r0, r5
9001f536:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f53a:	4422      	add	r2, r4
9001f53c:	46ac      	mov	ip, r5
9001f53e:	e6f1      	b.n	9001f324 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001f540:	4628      	mov	r0, r5
9001f542:	462a      	mov	r2, r5
9001f544:	e6ee      	b.n	9001f324 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001f546:	4628      	mov	r0, r5
9001f548:	462a      	mov	r2, r5
9001f54a:	e7f7      	b.n	9001f53c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
9001f54c:	1c47      	adds	r7, r0, #1
9001f54e:	f53f af69 	bmi.w	9001f424 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9001f552:	42ba      	cmp	r2, r7
9001f554:	f6ff af66 	blt.w	9001f424 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9001f558:	1c6f      	adds	r7, r5, #1
9001f55a:	f53f af63 	bmi.w	9001f424 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9001f55e:	42be      	cmp	r6, r7
9001f560:	f6ff af60 	blt.w	9001f424 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9001f564:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001f566:	b236      	sxth	r6, r6
9001f568:	b212      	sxth	r2, r2
9001f56a:	9002      	str	r0, [sp, #8]
9001f56c:	9601      	str	r6, [sp, #4]
9001f56e:	9200      	str	r2, [sp, #0]
9001f570:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001f572:	e9cd 1705 	strd	r1, r7, [sp, #20]
9001f576:	e9cd 5303 	strd	r5, r3, [sp, #12]
9001f57a:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
9001f57e:	4623      	mov	r3, r4
9001f580:	f7ff fd59 	bl	9001f036 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
9001f584:	e74e      	b.n	9001f424 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9001f586:	9a20      	ldr	r2, [sp, #128]	; 0x80
9001f588:	9820      	ldr	r0, [sp, #128]	; 0x80
9001f58a:	f3c2 3103 	ubfx	r1, r2, #12, #4
9001f58e:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
9001f590:	9a26      	ldr	r2, [sp, #152]	; 0x98
9001f592:	1400      	asrs	r0, r0, #16
9001f594:	142d      	asrs	r5, r5, #16
9001f596:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001f598:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
9001f59c:	f3c3 3303 	ubfx	r3, r3, #12, #4
9001f5a0:	fb02 5000 	mla	r0, r2, r0, r5
9001f5a4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9001f5a6:	f815 9000 	ldrb.w	r9, [r5, r0]
9001f5aa:	182e      	adds	r6, r5, r0
9001f5ac:	eb09 0949 	add.w	r9, r9, r9, lsl #1
9001f5b0:	eb04 0509 	add.w	r5, r4, r9
9001f5b4:	2b00      	cmp	r3, #0
9001f5b6:	f000 8096 	beq.w	9001f6e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
9001f5ba:	7877      	ldrb	r7, [r6, #1]
9001f5bc:	eb07 0747 	add.w	r7, r7, r7, lsl #1
9001f5c0:	4427      	add	r7, r4
9001f5c2:	2900      	cmp	r1, #0
9001f5c4:	f000 8097 	beq.w	9001f6f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
9001f5c8:	18b0      	adds	r0, r6, r2
9001f5ca:	5cb2      	ldrb	r2, [r6, r2]
9001f5cc:	7840      	ldrb	r0, [r0, #1]
9001f5ce:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f5d2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9001f5d6:	4422      	add	r2, r4
9001f5d8:	4420      	add	r0, r4
9001f5da:	b29b      	uxth	r3, r3
9001f5dc:	9e0c      	ldr	r6, [sp, #48]	; 0x30
9001f5de:	b289      	uxth	r1, r1
9001f5e0:	f895 b002 	ldrb.w	fp, [r5, #2]
9001f5e4:	f8b6 c000 	ldrh.w	ip, [r6]
9001f5e8:	fb03 f801 	mul.w	r8, r3, r1
9001f5ec:	011b      	lsls	r3, r3, #4
9001f5ee:	78be      	ldrb	r6, [r7, #2]
9001f5f0:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
9001f5f4:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
9001f5f8:	eba3 0308 	sub.w	r3, r3, r8
9001f5fc:	f814 9009 	ldrb.w	r9, [r4, r9]
9001f600:	b289      	uxth	r1, r1
9001f602:	b29b      	uxth	r3, r3
9001f604:	ebae 0e01 	sub.w	lr, lr, r1
9001f608:	435e      	muls	r6, r3
9001f60a:	fa1f fe8e 	uxth.w	lr, lr
9001f60e:	9310      	str	r3, [sp, #64]	; 0x40
9001f610:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f612:	fb0e 660b 	mla	r6, lr, fp, r6
9001f616:	f892 b002 	ldrb.w	fp, [r2, #2]
9001f61a:	fb01 660b 	mla	r6, r1, fp, r6
9001f61e:	f890 b002 	ldrb.w	fp, [r0, #2]
9001f622:	fb08 660b 	mla	r6, r8, fp, r6
9001f626:	ea4f 2b2c 	mov.w	fp, ip, asr #8
9001f62a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
9001f62e:	f3c6 2607 	ubfx	r6, r6, #8, #8
9001f632:	fb1b fb03 	smulbb	fp, fp, r3
9001f636:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001f638:	fb06 b60a 	mla	r6, r6, sl, fp
9001f63c:	f895 b001 	ldrb.w	fp, [r5, #1]
9001f640:	787d      	ldrb	r5, [r7, #1]
9001f642:	783f      	ldrb	r7, [r7, #0]
9001f644:	b2b6      	uxth	r6, r6
9001f646:	435d      	muls	r5, r3
9001f648:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f64a:	fb0e 550b 	mla	r5, lr, fp, r5
9001f64e:	f892 b001 	ldrb.w	fp, [r2, #1]
9001f652:	fb01 550b 	mla	r5, r1, fp, r5
9001f656:	f890 b001 	ldrb.w	fp, [r0, #1]
9001f65a:	fb08 550b 	mla	r5, r8, fp, r5
9001f65e:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001f662:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001f666:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001f66a:	f3c5 2507 	ubfx	r5, r5, #8, #8
9001f66e:	fa5f fc8c 	uxtb.w	ip, ip
9001f672:	fb1b fb03 	smulbb	fp, fp, r3
9001f676:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001f678:	437b      	muls	r3, r7
9001f67a:	7817      	ldrb	r7, [r2, #0]
9001f67c:	fb05 b50a 	mla	r5, r5, sl, fp
9001f680:	fb0e 3309 	mla	r3, lr, r9, r3
9001f684:	b2ad      	uxth	r5, r5
9001f686:	fb01 3307 	mla	r3, r1, r7, r3
9001f68a:	7807      	ldrb	r7, [r0, #0]
9001f68c:	f105 0b01 	add.w	fp, r5, #1
9001f690:	fb08 3707 	mla	r7, r8, r7, r3
9001f694:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f696:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
9001f69a:	fb1c fc03 	smulbb	ip, ip, r3
9001f69e:	f3c7 2707 	ubfx	r7, r7, #8, #8
9001f6a2:	1c73      	adds	r3, r6, #1
9001f6a4:	096d      	lsrs	r5, r5, #5
9001f6a6:	fb07 c70a 	mla	r7, r7, sl, ip
9001f6aa:	eb03 2616 	add.w	r6, r3, r6, lsr #8
9001f6ae:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001f6b2:	b2bf      	uxth	r7, r7
9001f6b4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001f6b6:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001f6ba:	1c7a      	adds	r2, r7, #1
9001f6bc:	eb02 2217 	add.w	r2, r2, r7, lsr #8
9001f6c0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001f6c4:	4316      	orrs	r6, r2
9001f6c6:	9a21      	ldr	r2, [sp, #132]	; 0x84
9001f6c8:	432e      	orrs	r6, r5
9001f6ca:	f823 6b02 	strh.w	r6, [r3], #2
9001f6ce:	930c      	str	r3, [sp, #48]	; 0x30
9001f6d0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001f6d2:	4413      	add	r3, r2
9001f6d4:	9a22      	ldr	r2, [sp, #136]	; 0x88
9001f6d6:	931f      	str	r3, [sp, #124]	; 0x7c
9001f6d8:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001f6da:	4413      	add	r3, r2
9001f6dc:	9320      	str	r3, [sp, #128]	; 0x80
9001f6de:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001f6e0:	3b01      	subs	r3, #1
9001f6e2:	9311      	str	r3, [sp, #68]	; 0x44
9001f6e4:	e6db      	b.n	9001f49e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
9001f6e6:	b149      	cbz	r1, 9001f6fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
9001f6e8:	5cb2      	ldrb	r2, [r6, r2]
9001f6ea:	4628      	mov	r0, r5
9001f6ec:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f6f0:	4422      	add	r2, r4
9001f6f2:	462f      	mov	r7, r5
9001f6f4:	e771      	b.n	9001f5da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
9001f6f6:	4628      	mov	r0, r5
9001f6f8:	462a      	mov	r2, r5
9001f6fa:	e76e      	b.n	9001f5da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
9001f6fc:	4628      	mov	r0, r5
9001f6fe:	462a      	mov	r2, r5
9001f700:	e7f7      	b.n	9001f6f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
9001f702:	b015      	add	sp, #84	; 0x54
9001f704:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001f708 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
9001f708:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f70c:	880f      	ldrh	r7, [r1, #0]
9001f70e:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
9001f712:	023c      	lsls	r4, r7, #8
9001f714:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
9001f718:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
9001f71c:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
9001f720:	017c      	lsls	r4, r7, #5
9001f722:	00ff      	lsls	r7, r7, #3
9001f724:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
9001f728:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
9001f72c:	b2ff      	uxtb	r7, r7
9001f72e:	ea4b 0404 	orr.w	r4, fp, r4
9001f732:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
9001f736:	4327      	orrs	r7, r4
9001f738:	fb05 ca0e 	mla	sl, r5, lr, ip
9001f73c:	2d00      	cmp	r5, #0
9001f73e:	9701      	str	r7, [sp, #4]
9001f740:	eb02 080a 	add.w	r8, r2, sl
9001f744:	db7e      	blt.n	9001f844 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
9001f746:	45a9      	cmp	r9, r5
9001f748:	dd7c      	ble.n	9001f844 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
9001f74a:	f1bc 0f00 	cmp.w	ip, #0
9001f74e:	db77      	blt.n	9001f840 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
9001f750:	45e6      	cmp	lr, ip
9001f752:	dd75      	ble.n	9001f840 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
9001f754:	f812 700a 	ldrb.w	r7, [r2, sl]
9001f758:	eb07 0747 	add.w	r7, r7, r7, lsl #1
9001f75c:	441f      	add	r7, r3
9001f75e:	f11c 0201 	adds.w	r2, ip, #1
9001f762:	d472      	bmi.n	9001f84a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
9001f764:	4596      	cmp	lr, r2
9001f766:	dd70      	ble.n	9001f84a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
9001f768:	2800      	cmp	r0, #0
9001f76a:	d06e      	beq.n	9001f84a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
9001f76c:	f898 4001 	ldrb.w	r4, [r8, #1]
9001f770:	eb04 0444 	add.w	r4, r4, r4, lsl #1
9001f774:	441c      	add	r4, r3
9001f776:	3501      	adds	r5, #1
9001f778:	d46b      	bmi.n	9001f852 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
9001f77a:	45a9      	cmp	r9, r5
9001f77c:	dd69      	ble.n	9001f852 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
9001f77e:	2e00      	cmp	r6, #0
9001f780:	d067      	beq.n	9001f852 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
9001f782:	f1bc 0f00 	cmp.w	ip, #0
9001f786:	db62      	blt.n	9001f84e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
9001f788:	45e6      	cmp	lr, ip
9001f78a:	dd60      	ble.n	9001f84e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
9001f78c:	f818 500e 	ldrb.w	r5, [r8, lr]
9001f790:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001f794:	441d      	add	r5, r3
9001f796:	f11c 0201 	adds.w	r2, ip, #1
9001f79a:	d45d      	bmi.n	9001f858 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
9001f79c:	4596      	cmp	lr, r2
9001f79e:	dd5b      	ble.n	9001f858 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
9001f7a0:	2800      	cmp	r0, #0
9001f7a2:	d059      	beq.n	9001f858 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
9001f7a4:	44c6      	add	lr, r8
9001f7a6:	f89e 2001 	ldrb.w	r2, [lr, #1]
9001f7aa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f7ae:	4413      	add	r3, r2
9001f7b0:	b280      	uxth	r0, r0
9001f7b2:	f897 e002 	ldrb.w	lr, [r7, #2]
9001f7b6:	b2b2      	uxth	r2, r6
9001f7b8:	f897 9000 	ldrb.w	r9, [r7]
9001f7bc:	787f      	ldrb	r7, [r7, #1]
9001f7be:	fb00 f602 	mul.w	r6, r0, r2
9001f7c2:	0100      	lsls	r0, r0, #4
9001f7c4:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
9001f7c8:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
9001f7cc:	1b80      	subs	r0, r0, r6
9001f7ce:	fa1f fc82 	uxth.w	ip, r2
9001f7d2:	b282      	uxth	r2, r0
9001f7d4:	78a0      	ldrb	r0, [r4, #2]
9001f7d6:	eba8 080c 	sub.w	r8, r8, ip
9001f7da:	4350      	muls	r0, r2
9001f7dc:	fa1f f888 	uxth.w	r8, r8
9001f7e0:	fb08 0e0e 	mla	lr, r8, lr, r0
9001f7e4:	78a8      	ldrb	r0, [r5, #2]
9001f7e6:	fb0c e000 	mla	r0, ip, r0, lr
9001f7ea:	f893 e002 	ldrb.w	lr, [r3, #2]
9001f7ee:	fb06 0e0e 	mla	lr, r6, lr, r0
9001f7f2:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
9001f7f6:	f894 e000 	ldrb.w	lr, [r4]
9001f7fa:	fb02 fe0e 	mul.w	lr, r2, lr
9001f7fe:	fb08 e909 	mla	r9, r8, r9, lr
9001f802:	f895 e000 	ldrb.w	lr, [r5]
9001f806:	fb0c 990e 	mla	r9, ip, lr, r9
9001f80a:	f893 e000 	ldrb.w	lr, [r3]
9001f80e:	785b      	ldrb	r3, [r3, #1]
9001f810:	fb06 9e0e 	mla	lr, r6, lr, r9
9001f814:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001f818:	ea4e 0e00 	orr.w	lr, lr, r0
9001f81c:	7860      	ldrb	r0, [r4, #1]
9001f81e:	4350      	muls	r0, r2
9001f820:	786a      	ldrb	r2, [r5, #1]
9001f822:	fb08 0007 	mla	r0, r8, r7, r0
9001f826:	fb0c 0202 	mla	r2, ip, r2, r0
9001f82a:	fb06 2303 	mla	r3, r6, r3, r2
9001f82e:	095b      	lsrs	r3, r3, #5
9001f830:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001f834:	ea4e 0303 	orr.w	r3, lr, r3
9001f838:	800b      	strh	r3, [r1, #0]
9001f83a:	b003      	add	sp, #12
9001f83c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f840:	af01      	add	r7, sp, #4
9001f842:	e78c      	b.n	9001f75e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
9001f844:	ac01      	add	r4, sp, #4
9001f846:	4627      	mov	r7, r4
9001f848:	e795      	b.n	9001f776 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
9001f84a:	ac01      	add	r4, sp, #4
9001f84c:	e793      	b.n	9001f776 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
9001f84e:	ad01      	add	r5, sp, #4
9001f850:	e7a1      	b.n	9001f796 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
9001f852:	ab01      	add	r3, sp, #4
9001f854:	461d      	mov	r5, r3
9001f856:	e7ab      	b.n	9001f7b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
9001f858:	ab01      	add	r3, sp, #4
9001f85a:	e7a9      	b.n	9001f7b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

9001f85c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001f85c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f860:	b08f      	sub	sp, #60	; 0x3c
9001f862:	920c      	str	r2, [sp, #48]	; 0x30
9001f864:	9a1d      	ldr	r2, [sp, #116]	; 0x74
9001f866:	900d      	str	r0, [sp, #52]	; 0x34
9001f868:	910a      	str	r1, [sp, #40]	; 0x28
9001f86a:	6850      	ldr	r0, [r2, #4]
9001f86c:	9306      	str	r3, [sp, #24]
9001f86e:	6812      	ldr	r2, [r2, #0]
9001f870:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
9001f874:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
9001f878:	fb00 1303 	mla	r3, r0, r3, r1
9001f87c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001f880:	9307      	str	r3, [sp, #28]
9001f882:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001f884:	681b      	ldr	r3, [r3, #0]
9001f886:	9308      	str	r3, [sp, #32]
9001f888:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001f88a:	685c      	ldr	r4, [r3, #4]
9001f88c:	3404      	adds	r4, #4
9001f88e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001f890:	2b00      	cmp	r3, #0
9001f892:	dc03      	bgt.n	9001f89c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001f894:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001f896:	2b00      	cmp	r3, #0
9001f898:	f340 81d5 	ble.w	9001fc46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
9001f89c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001f89e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001f8a2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001f8a6:	1e48      	subs	r0, r1, #1
9001f8a8:	1e56      	subs	r6, r2, #1
9001f8aa:	9b06      	ldr	r3, [sp, #24]
9001f8ac:	2b00      	cmp	r3, #0
9001f8ae:	f340 80b6 	ble.w	9001fa1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9001f8b2:	ea5f 472b 	movs.w	r7, fp, asr #16
9001f8b6:	ea4f 4325 	mov.w	r3, r5, asr #16
9001f8ba:	d406      	bmi.n	9001f8ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001f8bc:	4287      	cmp	r7, r0
9001f8be:	da04      	bge.n	9001f8ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001f8c0:	2b00      	cmp	r3, #0
9001f8c2:	db02      	blt.n	9001f8ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001f8c4:	42b3      	cmp	r3, r6
9001f8c6:	f2c0 80ab 	blt.w	9001fa20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
9001f8ca:	3701      	adds	r7, #1
9001f8cc:	f100 809c 	bmi.w	9001fa08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9001f8d0:	42b9      	cmp	r1, r7
9001f8d2:	f2c0 8099 	blt.w	9001fa08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9001f8d6:	3301      	adds	r3, #1
9001f8d8:	f100 8096 	bmi.w	9001fa08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9001f8dc:	429a      	cmp	r2, r3
9001f8de:	f2c0 8093 	blt.w	9001fa08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9001f8e2:	9b06      	ldr	r3, [sp, #24]
9001f8e4:	930b      	str	r3, [sp, #44]	; 0x2c
9001f8e6:	9b07      	ldr	r3, [sp, #28]
9001f8e8:	9309      	str	r3, [sp, #36]	; 0x24
9001f8ea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f8ec:	2b00      	cmp	r3, #0
9001f8ee:	f340 80b4 	ble.w	9001fa5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9001f8f2:	9820      	ldr	r0, [sp, #128]	; 0x80
9001f8f4:	142e      	asrs	r6, r5, #16
9001f8f6:	9a20      	ldr	r2, [sp, #128]	; 0x80
9001f8f8:	f3cb 3303 	ubfx	r3, fp, #12, #4
9001f8fc:	68c7      	ldr	r7, [r0, #12]
9001f8fe:	ea5f 402b 	movs.w	r0, fp, asr #16
9001f902:	f3c5 3103 	ubfx	r1, r5, #12, #4
9001f906:	6892      	ldr	r2, [r2, #8]
9001f908:	f100 80fb 	bmi.w	9001fb02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9001f90c:	f102 3cff 	add.w	ip, r2, #4294967295
9001f910:	4560      	cmp	r0, ip
9001f912:	f280 80f6 	bge.w	9001fb02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9001f916:	2e00      	cmp	r6, #0
9001f918:	f2c0 80f3 	blt.w	9001fb02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9001f91c:	f107 3cff 	add.w	ip, r7, #4294967295
9001f920:	4566      	cmp	r6, ip
9001f922:	f280 80ee 	bge.w	9001fb02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9001f926:	b212      	sxth	r2, r2
9001f928:	fb06 0002 	mla	r0, r6, r2, r0
9001f92c:	9e08      	ldr	r6, [sp, #32]
9001f92e:	1837      	adds	r7, r6, r0
9001f930:	5c30      	ldrb	r0, [r6, r0]
9001f932:	eb00 0840 	add.w	r8, r0, r0, lsl #1
9001f936:	eb04 0c08 	add.w	ip, r4, r8
9001f93a:	2b00      	cmp	r3, #0
9001f93c:	f000 80d3 	beq.w	9001fae6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
9001f940:	787e      	ldrb	r6, [r7, #1]
9001f942:	eb06 0646 	add.w	r6, r6, r6, lsl #1
9001f946:	4426      	add	r6, r4
9001f948:	2900      	cmp	r1, #0
9001f94a:	f000 80d4 	beq.w	9001faf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001f94e:	18b8      	adds	r0, r7, r2
9001f950:	5cba      	ldrb	r2, [r7, r2]
9001f952:	7840      	ldrb	r0, [r0, #1]
9001f954:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f958:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9001f95c:	4422      	add	r2, r4
9001f95e:	4420      	add	r0, r4
9001f960:	b29b      	uxth	r3, r3
9001f962:	78b7      	ldrb	r7, [r6, #2]
9001f964:	b289      	uxth	r1, r1
9001f966:	f89c a002 	ldrb.w	sl, [ip, #2]
9001f96a:	f89c c001 	ldrb.w	ip, [ip, #1]
9001f96e:	fb03 f901 	mul.w	r9, r3, r1
9001f972:	011b      	lsls	r3, r3, #4
9001f974:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9001f978:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
9001f97c:	eba3 0309 	sub.w	r3, r3, r9
9001f980:	b289      	uxth	r1, r1
9001f982:	b29b      	uxth	r3, r3
9001f984:	ebae 0e01 	sub.w	lr, lr, r1
9001f988:	435f      	muls	r7, r3
9001f98a:	fa1f fe8e 	uxth.w	lr, lr
9001f98e:	fb0e 770a 	mla	r7, lr, sl, r7
9001f992:	f892 a002 	ldrb.w	sl, [r2, #2]
9001f996:	fb01 770a 	mla	r7, r1, sl, r7
9001f99a:	f890 a002 	ldrb.w	sl, [r0, #2]
9001f99e:	fb09 7a0a 	mla	sl, r9, sl, r7
9001f9a2:	f814 7008 	ldrb.w	r7, [r4, r8]
9001f9a6:	f896 8000 	ldrb.w	r8, [r6]
9001f9aa:	7876      	ldrb	r6, [r6, #1]
9001f9ac:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
9001f9b0:	fb03 f808 	mul.w	r8, r3, r8
9001f9b4:	4373      	muls	r3, r6
9001f9b6:	fb0e 8807 	mla	r8, lr, r7, r8
9001f9ba:	7817      	ldrb	r7, [r2, #0]
9001f9bc:	fb0e 330c 	mla	r3, lr, ip, r3
9001f9c0:	fb01 8807 	mla	r8, r1, r7, r8
9001f9c4:	7807      	ldrb	r7, [r0, #0]
9001f9c6:	fb09 8707 	mla	r7, r9, r7, r8
9001f9ca:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001f9ce:	ea47 070a 	orr.w	r7, r7, sl
9001f9d2:	f892 a001 	ldrb.w	sl, [r2, #1]
9001f9d6:	fb01 310a 	mla	r1, r1, sl, r3
9001f9da:	f890 a001 	ldrb.w	sl, [r0, #1]
9001f9de:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f9e0:	fb09 1a0a 	mla	sl, r9, sl, r1
9001f9e4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001f9e8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001f9ec:	ea47 070a 	orr.w	r7, r7, sl
9001f9f0:	801f      	strh	r7, [r3, #0]
9001f9f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f9f4:	3302      	adds	r3, #2
9001f9f6:	9309      	str	r3, [sp, #36]	; 0x24
9001f9f8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9001f9fa:	449b      	add	fp, r3
9001f9fc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001f9fe:	441d      	add	r5, r3
9001fa00:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001fa02:	3b01      	subs	r3, #1
9001fa04:	930b      	str	r3, [sp, #44]	; 0x2c
9001fa06:	e770      	b.n	9001f8ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
9001fa08:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9001fa0a:	449b      	add	fp, r3
9001fa0c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001fa0e:	441d      	add	r5, r3
9001fa10:	9b06      	ldr	r3, [sp, #24]
9001fa12:	3b01      	subs	r3, #1
9001fa14:	9306      	str	r3, [sp, #24]
9001fa16:	9b07      	ldr	r3, [sp, #28]
9001fa18:	3302      	adds	r3, #2
9001fa1a:	9307      	str	r3, [sp, #28]
9001fa1c:	e745      	b.n	9001f8aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
9001fa1e:	d023      	beq.n	9001fa68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
9001fa20:	9b06      	ldr	r3, [sp, #24]
9001fa22:	981b      	ldr	r0, [sp, #108]	; 0x6c
9001fa24:	3b01      	subs	r3, #1
9001fa26:	fb00 b003 	mla	r0, r0, r3, fp
9001fa2a:	1400      	asrs	r0, r0, #16
9001fa2c:	f53f af59 	bmi.w	9001f8e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001fa30:	3901      	subs	r1, #1
9001fa32:	4288      	cmp	r0, r1
9001fa34:	f6bf af55 	bge.w	9001f8e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001fa38:	991c      	ldr	r1, [sp, #112]	; 0x70
9001fa3a:	fb01 5303 	mla	r3, r1, r3, r5
9001fa3e:	141b      	asrs	r3, r3, #16
9001fa40:	f53f af4f 	bmi.w	9001f8e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001fa44:	3a01      	subs	r2, #1
9001fa46:	4293      	cmp	r3, r2
9001fa48:	f6bf af4b 	bge.w	9001f8e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001fa4c:	9b06      	ldr	r3, [sp, #24]
9001fa4e:	9309      	str	r3, [sp, #36]	; 0x24
9001fa50:	9b07      	ldr	r3, [sp, #28]
9001fa52:	930b      	str	r3, [sp, #44]	; 0x2c
9001fa54:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001fa56:	2b00      	cmp	r3, #0
9001fa58:	dc70      	bgt.n	9001fb3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
9001fa5a:	9b06      	ldr	r3, [sp, #24]
9001fa5c:	9a07      	ldr	r2, [sp, #28]
9001fa5e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001fa62:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001fa66:	9307      	str	r3, [sp, #28]
9001fa68:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001fa6a:	2b00      	cmp	r3, #0
9001fa6c:	f340 80eb 	ble.w	9001fc46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
9001fa70:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001fa74:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001fa76:	ee30 0a04 	vadd.f32	s0, s0, s8
9001fa7a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001fa7e:	eef0 6a62 	vmov.f32	s13, s5
9001fa82:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001fa86:	ee31 1a05 	vadd.f32	s2, s2, s10
9001fa8a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001fa8e:	ee16 ba90 	vmov	fp, s13
9001fa92:	eef0 6a43 	vmov.f32	s13, s6
9001fa96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001fa9a:	ee16 5a90 	vmov	r5, s13
9001fa9e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001faa2:	ee61 7a27 	vmul.f32	s15, s2, s15
9001faa6:	ee77 2a62 	vsub.f32	s5, s14, s5
9001faaa:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001faae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001fab2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001fab6:	ee12 2a90 	vmov	r2, s5
9001faba:	eef0 2a47 	vmov.f32	s5, s14
9001fabe:	fb92 f3f3 	sdiv	r3, r2, r3
9001fac2:	ee13 2a10 	vmov	r2, s6
9001fac6:	931b      	str	r3, [sp, #108]	; 0x6c
9001fac8:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001faca:	eeb0 3a67 	vmov.f32	s6, s15
9001face:	fb92 f3f3 	sdiv	r3, r2, r3
9001fad2:	931c      	str	r3, [sp, #112]	; 0x70
9001fad4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001fad6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001fad8:	3b01      	subs	r3, #1
9001fada:	930a      	str	r3, [sp, #40]	; 0x28
9001fadc:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001fade:	bf08      	it	eq
9001fae0:	4613      	moveq	r3, r2
9001fae2:	9306      	str	r3, [sp, #24]
9001fae4:	e6d3      	b.n	9001f88e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001fae6:	b149      	cbz	r1, 9001fafc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
9001fae8:	5cba      	ldrb	r2, [r7, r2]
9001faea:	4660      	mov	r0, ip
9001faec:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001faf0:	4422      	add	r2, r4
9001faf2:	4666      	mov	r6, ip
9001faf4:	e734      	b.n	9001f960 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
9001faf6:	4660      	mov	r0, ip
9001faf8:	4662      	mov	r2, ip
9001fafa:	e731      	b.n	9001f960 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
9001fafc:	4660      	mov	r0, ip
9001fafe:	4662      	mov	r2, ip
9001fb00:	e7f7      	b.n	9001faf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
9001fb02:	f110 0c01 	adds.w	ip, r0, #1
9001fb06:	f53f af74 	bmi.w	9001f9f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9001fb0a:	4562      	cmp	r2, ip
9001fb0c:	f6ff af71 	blt.w	9001f9f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9001fb10:	f116 0c01 	adds.w	ip, r6, #1
9001fb14:	f53f af6d 	bmi.w	9001f9f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9001fb18:	4567      	cmp	r7, ip
9001fb1a:	f6ff af6a 	blt.w	9001f9f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9001fb1e:	b23f      	sxth	r7, r7
9001fb20:	b212      	sxth	r2, r2
9001fb22:	9701      	str	r7, [sp, #4]
9001fb24:	9200      	str	r2, [sp, #0]
9001fb26:	e9cd 3104 	strd	r3, r1, [sp, #16]
9001fb2a:	e9cd 0602 	strd	r0, r6, [sp, #8]
9001fb2e:	4623      	mov	r3, r4
9001fb30:	980d      	ldr	r0, [sp, #52]	; 0x34
9001fb32:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001fb36:	f7ff fde7 	bl	9001f708 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
9001fb3a:	e75a      	b.n	9001f9f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9001fb3c:	9a20      	ldr	r2, [sp, #128]	; 0x80
9001fb3e:	ea4f 462b 	mov.w	r6, fp, asr #16
9001fb42:	1428      	asrs	r0, r5, #16
9001fb44:	f3cb 3303 	ubfx	r3, fp, #12, #4
9001fb48:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
9001fb4c:	f3c5 3103 	ubfx	r1, r5, #12, #4
9001fb50:	fb02 6000 	mla	r0, r2, r0, r6
9001fb54:	9e08      	ldr	r6, [sp, #32]
9001fb56:	f816 8000 	ldrb.w	r8, [r6, r0]
9001fb5a:	1837      	adds	r7, r6, r0
9001fb5c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9001fb60:	eb04 0c08 	add.w	ip, r4, r8
9001fb64:	2b00      	cmp	r3, #0
9001fb66:	d060      	beq.n	9001fc2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
9001fb68:	787e      	ldrb	r6, [r7, #1]
9001fb6a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
9001fb6e:	4426      	add	r6, r4
9001fb70:	2900      	cmp	r1, #0
9001fb72:	d062      	beq.n	9001fc3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
9001fb74:	18b8      	adds	r0, r7, r2
9001fb76:	5cba      	ldrb	r2, [r7, r2]
9001fb78:	7840      	ldrb	r0, [r0, #1]
9001fb7a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001fb7e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9001fb82:	4422      	add	r2, r4
9001fb84:	4420      	add	r0, r4
9001fb86:	b29b      	uxth	r3, r3
9001fb88:	78b7      	ldrb	r7, [r6, #2]
9001fb8a:	b289      	uxth	r1, r1
9001fb8c:	f89c a002 	ldrb.w	sl, [ip, #2]
9001fb90:	f89c c001 	ldrb.w	ip, [ip, #1]
9001fb94:	fb03 f901 	mul.w	r9, r3, r1
9001fb98:	011b      	lsls	r3, r3, #4
9001fb9a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9001fb9e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
9001fba2:	eba3 0309 	sub.w	r3, r3, r9
9001fba6:	b289      	uxth	r1, r1
9001fba8:	b29b      	uxth	r3, r3
9001fbaa:	ebae 0e01 	sub.w	lr, lr, r1
9001fbae:	435f      	muls	r7, r3
9001fbb0:	fa1f fe8e 	uxth.w	lr, lr
9001fbb4:	fb0e 770a 	mla	r7, lr, sl, r7
9001fbb8:	f892 a002 	ldrb.w	sl, [r2, #2]
9001fbbc:	fb01 770a 	mla	r7, r1, sl, r7
9001fbc0:	f890 a002 	ldrb.w	sl, [r0, #2]
9001fbc4:	fb09 7a0a 	mla	sl, r9, sl, r7
9001fbc8:	f814 7008 	ldrb.w	r7, [r4, r8]
9001fbcc:	f896 8000 	ldrb.w	r8, [r6]
9001fbd0:	7876      	ldrb	r6, [r6, #1]
9001fbd2:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
9001fbd6:	fb03 f808 	mul.w	r8, r3, r8
9001fbda:	4373      	muls	r3, r6
9001fbdc:	7856      	ldrb	r6, [r2, #1]
9001fbde:	fb0e 8807 	mla	r8, lr, r7, r8
9001fbe2:	7817      	ldrb	r7, [r2, #0]
9001fbe4:	fb0e 330c 	mla	r3, lr, ip, r3
9001fbe8:	fb01 8807 	mla	r8, r1, r7, r8
9001fbec:	7807      	ldrb	r7, [r0, #0]
9001fbee:	fb01 3306 	mla	r3, r1, r6, r3
9001fbf2:	fb09 8707 	mla	r7, r9, r7, r8
9001fbf6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001fbfa:	ea47 070a 	orr.w	r7, r7, sl
9001fbfe:	f890 a001 	ldrb.w	sl, [r0, #1]
9001fc02:	fb09 3a0a 	mla	sl, r9, sl, r3
9001fc06:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001fc08:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001fc0c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001fc10:	ea47 070a 	orr.w	r7, r7, sl
9001fc14:	f823 7b02 	strh.w	r7, [r3], #2
9001fc18:	930b      	str	r3, [sp, #44]	; 0x2c
9001fc1a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9001fc1c:	449b      	add	fp, r3
9001fc1e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001fc20:	441d      	add	r5, r3
9001fc22:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001fc24:	3b01      	subs	r3, #1
9001fc26:	9309      	str	r3, [sp, #36]	; 0x24
9001fc28:	e714      	b.n	9001fa54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
9001fc2a:	b149      	cbz	r1, 9001fc40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
9001fc2c:	5cba      	ldrb	r2, [r7, r2]
9001fc2e:	4660      	mov	r0, ip
9001fc30:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001fc34:	4422      	add	r2, r4
9001fc36:	4666      	mov	r6, ip
9001fc38:	e7a5      	b.n	9001fb86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
9001fc3a:	4660      	mov	r0, ip
9001fc3c:	4662      	mov	r2, ip
9001fc3e:	e7a2      	b.n	9001fb86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
9001fc40:	4660      	mov	r0, ip
9001fc42:	4662      	mov	r2, ip
9001fc44:	e7f7      	b.n	9001fc36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
9001fc46:	b00f      	add	sp, #60	; 0x3c
9001fc48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001fc4c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
9001fc4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fc50:	b085      	sub	sp, #20
9001fc52:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
9001fc56:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
9001fc5a:	9102      	str	r1, [sp, #8]
9001fc5c:	2c00      	cmp	r4, #0
9001fc5e:	fb04 710c 	mla	r1, r4, ip, r7
9001fc62:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
9001fc66:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
9001fc6a:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
9001fc6e:	eb02 0e01 	add.w	lr, r2, r1
9001fc72:	f2c0 8122 	blt.w	9001feba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
9001fc76:	45a0      	cmp	r8, r4
9001fc78:	f340 811f 	ble.w	9001feba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
9001fc7c:	2f00      	cmp	r7, #0
9001fc7e:	f2c0 811a 	blt.w	9001feb6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
9001fc82:	45bc      	cmp	ip, r7
9001fc84:	f340 8117 	ble.w	9001feb6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
9001fc88:	5c52      	ldrb	r2, [r2, r1]
9001fc8a:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
9001fc8e:	1c7a      	adds	r2, r7, #1
9001fc90:	f100 8116 	bmi.w	9001fec0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
9001fc94:	4594      	cmp	ip, r2
9001fc96:	f340 8113 	ble.w	9001fec0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
9001fc9a:	2e00      	cmp	r6, #0
9001fc9c:	f000 8112 	beq.w	9001fec4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
9001fca0:	f89e 2001 	ldrb.w	r2, [lr, #1]
9001fca4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
9001fca8:	3401      	adds	r4, #1
9001fcaa:	f100 810f 	bmi.w	9001fecc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
9001fcae:	45a0      	cmp	r8, r4
9001fcb0:	f340 810c 	ble.w	9001fecc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
9001fcb4:	2800      	cmp	r0, #0
9001fcb6:	f000 810c 	beq.w	9001fed2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
9001fcba:	2f00      	cmp	r7, #0
9001fcbc:	f2c0 8104 	blt.w	9001fec8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
9001fcc0:	45bc      	cmp	ip, r7
9001fcc2:	f340 8101 	ble.w	9001fec8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
9001fcc6:	f81e 200c 	ldrb.w	r2, [lr, ip]
9001fcca:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
9001fcce:	3701      	adds	r7, #1
9001fcd0:	f100 8102 	bmi.w	9001fed8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
9001fcd4:	45bc      	cmp	ip, r7
9001fcd6:	f340 80ff 	ble.w	9001fed8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
9001fcda:	2e00      	cmp	r6, #0
9001fcdc:	f000 80fe 	beq.w	9001fedc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
9001fce0:	44f4      	add	ip, lr
9001fce2:	f89c 2001 	ldrb.w	r2, [ip, #1]
9001fce6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
9001fcea:	b2b6      	uxth	r6, r6
9001fcec:	b280      	uxth	r0, r0
9001fcee:	ea4f 6a11 	mov.w	sl, r1, lsr #24
9001fcf2:	fb00 fe06 	mul.w	lr, r0, r6
9001fcf6:	0136      	lsls	r6, r6, #4
9001fcf8:	ea4f 6b15 	mov.w	fp, r5, lsr #24
9001fcfc:	ebce 1000 	rsb	r0, lr, r0, lsl #4
9001fd00:	eba6 070e 	sub.w	r7, r6, lr
9001fd04:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
9001fd08:	ea4f 6914 	mov.w	r9, r4, lsr #24
9001fd0c:	b280      	uxth	r0, r0
9001fd0e:	b2bf      	uxth	r7, r7
9001fd10:	1a1b      	subs	r3, r3, r0
9001fd12:	ea4f 6812 	mov.w	r8, r2, lsr #24
9001fd16:	fb0a f607 	mul.w	r6, sl, r7
9001fd1a:	b29b      	uxth	r3, r3
9001fd1c:	fb0b 6603 	mla	r6, fp, r3, r6
9001fd20:	fb00 6609 	mla	r6, r0, r9, r6
9001fd24:	fb0e 6608 	mla	r6, lr, r8, r6
9001fd28:	f3c6 2607 	ubfx	r6, r6, #8, #8
9001fd2c:	9600      	str	r6, [sp, #0]
9001fd2e:	2e00      	cmp	r6, #0
9001fd30:	f000 80be 	beq.w	9001feb0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
9001fd34:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
9001fd38:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
9001fd3c:	9e02      	ldr	r6, [sp, #8]
9001fd3e:	fb0b fc0c 	mul.w	ip, fp, ip
9001fd42:	fb0b f505 	mul.w	r5, fp, r5
9001fd46:	8836      	ldrh	r6, [r6, #0]
9001fd48:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
9001fd4c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9001fd50:	9501      	str	r5, [sp, #4]
9001fd52:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
9001fd56:	44dc      	add	ip, fp
9001fd58:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001fd5c:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
9001fd60:	9503      	str	r5, [sp, #12]
9001fd62:	9d01      	ldr	r5, [sp, #4]
9001fd64:	f505 7c80 	add.w	ip, r5, #256	; 0x100
9001fd68:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001fd6c:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
9001fd70:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
9001fd74:	fb0a fc0c 	mul.w	ip, sl, ip
9001fd78:	ea4f 2b15 	mov.w	fp, r5, lsr #8
9001fd7c:	fb0a fa01 	mul.w	sl, sl, r1
9001fd80:	ea4f 251c 	mov.w	r5, ip, lsr #8
9001fd84:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9001fd88:	f50a 7180 	add.w	r1, sl, #256	; 0x100
9001fd8c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
9001fd90:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
9001fd94:	4465      	add	r5, ip
9001fd96:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9001fd9a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
9001fd9e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001fda2:	fb09 fc0c 	mul.w	ip, r9, ip
9001fda6:	0a2d      	lsrs	r5, r5, #8
9001fda8:	fb09 f904 	mul.w	r9, r9, r4
9001fdac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9001fdb0:	ea4f 211c 	mov.w	r1, ip, lsr #8
9001fdb4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
9001fdb8:	f509 7480 	add.w	r4, r9, #256	; 0x100
9001fdbc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9001fdc0:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
9001fdc4:	437d      	muls	r5, r7
9001fdc6:	eb04 2919 	add.w	r9, r4, r9, lsr #8
9001fdca:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
9001fdce:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
9001fdd2:	4461      	add	r1, ip
9001fdd4:	fb08 f404 	mul.w	r4, r8, r4
9001fdd8:	ea4f 2919 	mov.w	r9, r9, lsr #8
9001fddc:	fb08 f802 	mul.w	r8, r8, r2
9001fde0:	0a09      	lsrs	r1, r1, #8
9001fde2:	0a22      	lsrs	r2, r4, #8
9001fde4:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
9001fde8:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
9001fdec:	fb07 f70a 	mul.w	r7, r7, sl
9001fdf0:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
9001fdf4:	4414      	add	r4, r2
9001fdf6:	f508 7280 	add.w	r2, r8, #256	; 0x100
9001fdfa:	0a24      	lsrs	r4, r4, #8
9001fdfc:	eb02 2818 	add.w	r8, r2, r8, lsr #8
9001fe00:	9a03      	ldr	r2, [sp, #12]
9001fe02:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
9001fe06:	fb02 5503 	mla	r5, r2, r3, r5
9001fe0a:	ea4f 2818 	mov.w	r8, r8, lsr #8
9001fe0e:	9a00      	ldr	r2, [sp, #0]
9001fe10:	fb04 540e 	mla	r4, r4, lr, r5
9001fe14:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
9001fe18:	1235      	asrs	r5, r6, #8
9001fe1a:	fb01 4100 	mla	r1, r1, r0, r4
9001fe1e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001fe22:	0a09      	lsrs	r1, r1, #8
9001fe24:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
9001fe28:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
9001fe2c:	fb03 7101 	mla	r1, r3, r1, r7
9001fe30:	fb0e 1e08 	mla	lr, lr, r8, r1
9001fe34:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
9001fe38:	fb00 e101 	mla	r1, r0, r1, lr
9001fe3c:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
9001fe40:	b287      	uxth	r7, r0
9001fe42:	0a09      	lsrs	r1, r1, #8
9001fe44:	437a      	muls	r2, r7
9001fe46:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
9001fe4a:	1c53      	adds	r3, r2, #1
9001fe4c:	4321      	orrs	r1, r4
9001fe4e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9001fe52:	0c0a      	lsrs	r2, r1, #16
9001fe54:	f3c1 2407 	ubfx	r4, r1, #8, #8
9001fe58:	ea6f 2313 	mvn.w	r3, r3, lsr #8
9001fe5c:	b2c8      	uxtb	r0, r1
9001fe5e:	fb12 f207 	smulbb	r2, r2, r7
9001fe62:	fb14 f407 	smulbb	r4, r4, r7
9001fe66:	b2db      	uxtb	r3, r3
9001fe68:	fb10 f007 	smulbb	r0, r0, r7
9001fe6c:	fb05 2503 	mla	r5, r5, r3, r2
9001fe70:	10f2      	asrs	r2, r6, #3
9001fe72:	00f6      	lsls	r6, r6, #3
9001fe74:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9001fe78:	b2ad      	uxth	r5, r5
9001fe7a:	b2f6      	uxtb	r6, r6
9001fe7c:	fb02 4203 	mla	r2, r2, r3, r4
9001fe80:	fb06 0303 	mla	r3, r6, r3, r0
9001fe84:	b294      	uxth	r4, r2
9001fe86:	b299      	uxth	r1, r3
9001fe88:	1c6b      	adds	r3, r5, #1
9001fe8a:	1c62      	adds	r2, r4, #1
9001fe8c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9001fe90:	1c4b      	adds	r3, r1, #1
9001fe92:	eb02 2214 	add.w	r2, r2, r4, lsr #8
9001fe96:	eb03 2311 	add.w	r3, r3, r1, lsr #8
9001fe9a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9001fe9e:	0952      	lsrs	r2, r2, #5
9001fea0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9001fea4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001fea8:	432b      	orrs	r3, r5
9001feaa:	4313      	orrs	r3, r2
9001feac:	9a02      	ldr	r2, [sp, #8]
9001feae:	8013      	strh	r3, [r2, #0]
9001feb0:	b005      	add	sp, #20
9001feb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001feb6:	2500      	movs	r5, #0
9001feb8:	e6e9      	b.n	9001fc8e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
9001feba:	2100      	movs	r1, #0
9001febc:	460d      	mov	r5, r1
9001febe:	e6f3      	b.n	9001fca8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
9001fec0:	2100      	movs	r1, #0
9001fec2:	e6f1      	b.n	9001fca8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
9001fec4:	4631      	mov	r1, r6
9001fec6:	e6ef      	b.n	9001fca8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
9001fec8:	2400      	movs	r4, #0
9001feca:	e700      	b.n	9001fcce <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
9001fecc:	2200      	movs	r2, #0
9001fece:	4614      	mov	r4, r2
9001fed0:	e70b      	b.n	9001fcea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
9001fed2:	4602      	mov	r2, r0
9001fed4:	4604      	mov	r4, r0
9001fed6:	e708      	b.n	9001fcea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
9001fed8:	2200      	movs	r2, #0
9001feda:	e706      	b.n	9001fcea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
9001fedc:	4632      	mov	r2, r6
9001fede:	e704      	b.n	9001fcea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

9001fee0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001fee0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fee4:	b09f      	sub	sp, #124	; 0x7c
9001fee6:	921b      	str	r2, [sp, #108]	; 0x6c
9001fee8:	9309      	str	r3, [sp, #36]	; 0x24
9001feea:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
9001feec:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
9001fef0:	901d      	str	r0, [sp, #116]	; 0x74
9001fef2:	931c      	str	r3, [sp, #112]	; 0x70
9001fef4:	6850      	ldr	r0, [r2, #4]
9001fef6:	9119      	str	r1, [sp, #100]	; 0x64
9001fef8:	6812      	ldr	r2, [r2, #0]
9001fefa:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
9001fefc:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
9001ff00:	fb00 1303 	mla	r3, r0, r3, r1
9001ff04:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001ff08:	930c      	str	r3, [sp, #48]	; 0x30
9001ff0a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001ff0c:	681b      	ldr	r3, [r3, #0]
9001ff0e:	9312      	str	r3, [sp, #72]	; 0x48
9001ff10:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001ff12:	685e      	ldr	r6, [r3, #4]
9001ff14:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
9001ff18:	3604      	adds	r6, #4
9001ff1a:	930d      	str	r3, [sp, #52]	; 0x34
9001ff1c:	9b19      	ldr	r3, [sp, #100]	; 0x64
9001ff1e:	2b00      	cmp	r3, #0
9001ff20:	dc03      	bgt.n	9001ff2a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001ff22:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9001ff24:	2b00      	cmp	r3, #0
9001ff26:	f340 8387 	ble.w	90020638 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
9001ff2a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001ff2c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001ff30:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001ff34:	1e48      	subs	r0, r1, #1
9001ff36:	1e57      	subs	r7, r2, #1
9001ff38:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001ff3a:	2b00      	cmp	r3, #0
9001ff3c:	f340 8194 	ble.w	90020268 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
9001ff40:	9c29      	ldr	r4, [sp, #164]	; 0xa4
9001ff42:	142b      	asrs	r3, r5, #16
9001ff44:	ea5f 4c24 	movs.w	ip, r4, asr #16
9001ff48:	d406      	bmi.n	9001ff58 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001ff4a:	4584      	cmp	ip, r0
9001ff4c:	da04      	bge.n	9001ff58 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001ff4e:	2b00      	cmp	r3, #0
9001ff50:	db02      	blt.n	9001ff58 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001ff52:	42bb      	cmp	r3, r7
9001ff54:	f2c0 8189 	blt.w	9002026a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9001ff58:	f11c 0c01 	adds.w	ip, ip, #1
9001ff5c:	f100 8177 	bmi.w	9002024e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9001ff60:	4561      	cmp	r1, ip
9001ff62:	f2c0 8174 	blt.w	9002024e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9001ff66:	3301      	adds	r3, #1
9001ff68:	f100 8171 	bmi.w	9002024e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9001ff6c:	429a      	cmp	r2, r3
9001ff6e:	f2c0 816e 	blt.w	9002024e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9001ff72:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001ff74:	9f0c      	ldr	r7, [sp, #48]	; 0x30
9001ff76:	931a      	str	r3, [sp, #104]	; 0x68
9001ff78:	9b1a      	ldr	r3, [sp, #104]	; 0x68
9001ff7a:	2b00      	cmp	r3, #0
9001ff7c:	f340 8193 	ble.w	900202a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
9001ff80:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9001ff82:	ea4f 4c25 	mov.w	ip, r5, asr #16
9001ff86:	f3c5 3103 	ubfx	r1, r5, #12, #4
9001ff8a:	f3c3 3203 	ubfx	r2, r3, #12, #4
9001ff8e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001ff90:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
9001ff94:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9001ff96:	141b      	asrs	r3, r3, #16
9001ff98:	f100 81d6 	bmi.w	90020348 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9001ff9c:	f100 38ff 	add.w	r8, r0, #4294967295
9001ffa0:	4543      	cmp	r3, r8
9001ffa2:	f280 81d1 	bge.w	90020348 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9001ffa6:	f1bc 0f00 	cmp.w	ip, #0
9001ffaa:	f2c0 81cd 	blt.w	90020348 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9001ffae:	f10e 38ff 	add.w	r8, lr, #4294967295
9001ffb2:	45c4      	cmp	ip, r8
9001ffb4:	f280 81c8 	bge.w	90020348 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9001ffb8:	b200      	sxth	r0, r0
9001ffba:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001ffbc:	fb0c 3300 	mla	r3, ip, r0, r3
9001ffc0:	eb04 0803 	add.w	r8, r4, r3
9001ffc4:	5ce3      	ldrb	r3, [r4, r3]
9001ffc6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
9001ffca:	ea4f 6e13 	mov.w	lr, r3, lsr #24
9001ffce:	2a00      	cmp	r2, #0
9001ffd0:	f000 81af 	beq.w	90020332 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9001ffd4:	f898 c001 	ldrb.w	ip, [r8, #1]
9001ffd8:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
9001ffdc:	940e      	str	r4, [sp, #56]	; 0x38
9001ffde:	0e24      	lsrs	r4, r4, #24
9001ffe0:	9415      	str	r4, [sp, #84]	; 0x54
9001ffe2:	b179      	cbz	r1, 90020004 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
9001ffe4:	eb08 0c00 	add.w	ip, r8, r0
9001ffe8:	f818 0000 	ldrb.w	r0, [r8, r0]
9001ffec:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
9001fff0:	900a      	str	r0, [sp, #40]	; 0x28
9001fff2:	0e00      	lsrs	r0, r0, #24
9001fff4:	9013      	str	r0, [sp, #76]	; 0x4c
9001fff6:	f89c 0001 	ldrb.w	r0, [ip, #1]
9001fffa:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
9001fffe:	900f      	str	r0, [sp, #60]	; 0x3c
90020000:	0e00      	lsrs	r0, r0, #24
90020002:	9016      	str	r0, [sp, #88]	; 0x58
90020004:	b292      	uxth	r2, r2
90020006:	9815      	ldr	r0, [sp, #84]	; 0x54
90020008:	b289      	uxth	r1, r1
9002000a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9002000c:	fb02 f901 	mul.w	r9, r2, r1
90020010:	0112      	lsls	r2, r2, #4
90020012:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90020016:	eba2 0809 	sub.w	r8, r2, r9
9002001a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
9002001e:	b289      	uxth	r1, r1
90020020:	fa1f f888 	uxth.w	r8, r8
90020024:	1a52      	subs	r2, r2, r1
90020026:	fb08 f000 	mul.w	r0, r8, r0
9002002a:	b292      	uxth	r2, r2
9002002c:	fb02 000e 	mla	r0, r2, lr, r0
90020030:	fb01 0004 	mla	r0, r1, r4, r0
90020034:	9c16      	ldr	r4, [sp, #88]	; 0x58
90020036:	fb09 0004 	mla	r0, r9, r4, r0
9002003a:	f3c0 2007 	ubfx	r0, r0, #8, #8
9002003e:	2800      	cmp	r0, #0
90020040:	f000 80fa 	beq.w	90020238 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90020044:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90020048:	d01b      	beq.n	90020082 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002004a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
9002004e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90020052:	fb0e fa0a 	mul.w	sl, lr, sl
90020056:	fb0e fe03 	mul.w	lr, lr, r3
9002005a:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002005e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90020062:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90020066:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002006a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9002006e:	4453      	add	r3, sl
90020070:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020074:	0a1b      	lsrs	r3, r3, #8
90020076:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
9002007a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002007e:	ea43 030c 	orr.w	r3, r3, ip
90020082:	9c15      	ldr	r4, [sp, #84]	; 0x54
90020084:	2cff      	cmp	r4, #255	; 0xff
90020086:	d021      	beq.n	900200cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90020088:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9002008a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
9002008e:	9c15      	ldr	r4, [sp, #84]	; 0x54
90020090:	fb04 fb0b 	mul.w	fp, r4, fp
90020094:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90020096:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9002009a:	9c15      	ldr	r4, [sp, #84]	; 0x54
9002009c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900200a0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900200a4:	fb04 fa0a 	mul.w	sl, r4, sl
900200a8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900200ac:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900200b0:	44de      	add	lr, fp
900200b2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900200b6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900200ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900200be:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900200c2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900200c6:	ea4e 040a 	orr.w	r4, lr, sl
900200ca:	940e      	str	r4, [sp, #56]	; 0x38
900200cc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900200ce:	2cff      	cmp	r4, #255	; 0xff
900200d0:	d021      	beq.n	90020116 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
900200d2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900200d4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
900200d8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900200da:	fb04 fb0b 	mul.w	fp, r4, fp
900200de:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900200e0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900200e4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900200e6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900200ea:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900200ee:	fb04 fa0a 	mul.w	sl, r4, sl
900200f2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900200f6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900200fa:	44de      	add	lr, fp
900200fc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90020100:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90020104:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020108:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002010c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90020110:	ea4e 040a 	orr.w	r4, lr, sl
90020114:	940a      	str	r4, [sp, #40]	; 0x28
90020116:	9c16      	ldr	r4, [sp, #88]	; 0x58
90020118:	2cff      	cmp	r4, #255	; 0xff
9002011a:	d021      	beq.n	90020160 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
9002011c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9002011e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90020122:	9c16      	ldr	r4, [sp, #88]	; 0x58
90020124:	fb04 fb0b 	mul.w	fp, r4, fp
90020128:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9002012a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9002012e:	9c16      	ldr	r4, [sp, #88]	; 0x58
90020130:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90020134:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90020138:	fb04 fa0a 	mul.w	sl, r4, sl
9002013c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90020140:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90020144:	44de      	add	lr, fp
90020146:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002014a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002014e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020152:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90020156:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002015a:	ea4e 040a 	orr.w	r4, lr, sl
9002015e:	940f      	str	r4, [sp, #60]	; 0x3c
90020160:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90020162:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
90020166:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9002016a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9002016e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90020170:	fb08 fc0c 	mul.w	ip, r8, ip
90020174:	fb02 cc0e 	mla	ip, r2, lr, ip
90020178:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
9002017c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9002017e:	fb01 cc0e 	mla	ip, r1, lr, ip
90020182:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90020186:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90020188:	fb09 cc0e 	mla	ip, r9, lr, ip
9002018c:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
90020190:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90020192:	fb08 f80e 	mul.w	r8, r8, lr
90020196:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002019a:	fb02 8303 	mla	r3, r2, r3, r8
9002019e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
900201a0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900201a4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
900201a8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900201aa:	fb01 330a 	mla	r3, r1, sl, r3
900201ae:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
900201b2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
900201b4:	fb09 3901 	mla	r9, r9, r1, r3
900201b8:	883b      	ldrh	r3, [r7, #0]
900201ba:	4342      	muls	r2, r0
900201bc:	ea4f 2919 	mov.w	r9, r9, lsr #8
900201c0:	1c50      	adds	r0, r2, #1
900201c2:	1219      	asrs	r1, r3, #8
900201c4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
900201c8:	eb00 2012 	add.w	r0, r0, r2, lsr #8
900201cc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
900201d0:	ea4c 0c09 	orr.w	ip, ip, r9
900201d4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
900201d8:	ea4f 421c 	mov.w	r2, ip, lsr #16
900201dc:	f3cc 2e07 	ubfx	lr, ip, #8, #8
900201e0:	b2c0      	uxtb	r0, r0
900201e2:	fb12 f204 	smulbb	r2, r2, r4
900201e6:	fa5f fc8c 	uxtb.w	ip, ip
900201ea:	fb1e fe04 	smulbb	lr, lr, r4
900201ee:	fb01 2100 	mla	r1, r1, r0, r2
900201f2:	10da      	asrs	r2, r3, #3
900201f4:	fb1c fc04 	smulbb	ip, ip, r4
900201f8:	00db      	lsls	r3, r3, #3
900201fa:	b289      	uxth	r1, r1
900201fc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90020200:	b2db      	uxtb	r3, r3
90020202:	fb02 e200 	mla	r2, r2, r0, lr
90020206:	fb03 c300 	mla	r3, r3, r0, ip
9002020a:	b292      	uxth	r2, r2
9002020c:	fa1f fc83 	uxth.w	ip, r3
90020210:	1c4b      	adds	r3, r1, #1
90020212:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90020216:	f10c 0301 	add.w	r3, ip, #1
9002021a:	eb03 231c 	add.w	r3, r3, ip, lsr #8
9002021e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90020222:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90020226:	430b      	orrs	r3, r1
90020228:	1c51      	adds	r1, r2, #1
9002022a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9002022e:	0952      	lsrs	r2, r2, #5
90020230:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90020234:	4313      	orrs	r3, r2
90020236:	803b      	strh	r3, [r7, #0]
90020238:	9b2b      	ldr	r3, [sp, #172]	; 0xac
9002023a:	3702      	adds	r7, #2
9002023c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
9002023e:	441a      	add	r2, r3
90020240:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90020242:	441d      	add	r5, r3
90020244:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90020246:	9229      	str	r2, [sp, #164]	; 0xa4
90020248:	3b01      	subs	r3, #1
9002024a:	931a      	str	r3, [sp, #104]	; 0x68
9002024c:	e694      	b.n	9001ff78 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9002024e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
90020250:	9c29      	ldr	r4, [sp, #164]	; 0xa4
90020252:	441c      	add	r4, r3
90020254:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90020256:	441d      	add	r5, r3
90020258:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002025a:	9429      	str	r4, [sp, #164]	; 0xa4
9002025c:	3b01      	subs	r3, #1
9002025e:	9309      	str	r3, [sp, #36]	; 0x24
90020260:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90020262:	3302      	adds	r3, #2
90020264:	930c      	str	r3, [sp, #48]	; 0x30
90020266:	e667      	b.n	9001ff38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90020268:	d024      	beq.n	900202b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
9002026a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002026c:	982b      	ldr	r0, [sp, #172]	; 0xac
9002026e:	3b01      	subs	r3, #1
90020270:	9c29      	ldr	r4, [sp, #164]	; 0xa4
90020272:	fb00 4003 	mla	r0, r0, r3, r4
90020276:	1400      	asrs	r0, r0, #16
90020278:	f53f ae7b 	bmi.w	9001ff72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002027c:	3901      	subs	r1, #1
9002027e:	4288      	cmp	r0, r1
90020280:	f6bf ae77 	bge.w	9001ff72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90020284:	992c      	ldr	r1, [sp, #176]	; 0xb0
90020286:	fb01 5303 	mla	r3, r1, r3, r5
9002028a:	141b      	asrs	r3, r3, #16
9002028c:	f53f ae71 	bmi.w	9001ff72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90020290:	3a01      	subs	r2, #1
90020292:	4293      	cmp	r3, r2
90020294:	f6bf ae6d 	bge.w	9001ff72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90020298:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
9002029c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
900202a0:	f1bb 0f00 	cmp.w	fp, #0
900202a4:	dc70      	bgt.n	90020388 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
900202a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
900202a8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900202ac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900202ae:	eb03 0344 	add.w	r3, r3, r4, lsl #1
900202b2:	930c      	str	r3, [sp, #48]	; 0x30
900202b4:	9b19      	ldr	r3, [sp, #100]	; 0x64
900202b6:	2b00      	cmp	r3, #0
900202b8:	f340 81be 	ble.w	90020638 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
900202bc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900202c0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900202c2:	ee30 0a04 	vadd.f32	s0, s0, s8
900202c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
900202ca:	eef0 6a62 	vmov.f32	s13, s5
900202ce:	eec7 7a00 	vdiv.f32	s15, s14, s0
900202d2:	ee31 1a05 	vadd.f32	s2, s2, s10
900202d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900202da:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
900202de:	eef0 6a43 	vmov.f32	s13, s6
900202e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900202e6:	ee16 5a90 	vmov	r5, s13
900202ea:	ee20 7aa7 	vmul.f32	s14, s1, s15
900202ee:	ee61 7a27 	vmul.f32	s15, s2, s15
900202f2:	ee77 2a62 	vsub.f32	s5, s14, s5
900202f6:	ee37 3ac3 	vsub.f32	s6, s15, s6
900202fa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900202fe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90020302:	ee12 2a90 	vmov	r2, s5
90020306:	eef0 2a47 	vmov.f32	s5, s14
9002030a:	fb92 f3f3 	sdiv	r3, r2, r3
9002030e:	ee13 2a10 	vmov	r2, s6
90020312:	932b      	str	r3, [sp, #172]	; 0xac
90020314:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90020316:	eeb0 3a67 	vmov.f32	s6, s15
9002031a:	fb92 f3f3 	sdiv	r3, r2, r3
9002031e:	932c      	str	r3, [sp, #176]	; 0xb0
90020320:	9b19      	ldr	r3, [sp, #100]	; 0x64
90020322:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
90020324:	3b01      	subs	r3, #1
90020326:	9319      	str	r3, [sp, #100]	; 0x64
90020328:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002032a:	bf08      	it	eq
9002032c:	4613      	moveq	r3, r2
9002032e:	9309      	str	r3, [sp, #36]	; 0x24
90020330:	e5f4      	b.n	9001ff1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90020332:	2900      	cmp	r1, #0
90020334:	f43f ae66 	beq.w	90020004 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90020338:	f818 0000 	ldrb.w	r0, [r8, r0]
9002033c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90020340:	900a      	str	r0, [sp, #40]	; 0x28
90020342:	0e00      	lsrs	r0, r0, #24
90020344:	9013      	str	r0, [sp, #76]	; 0x4c
90020346:	e65d      	b.n	90020004 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90020348:	f113 0801 	adds.w	r8, r3, #1
9002034c:	f53f af74 	bmi.w	90020238 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90020350:	4540      	cmp	r0, r8
90020352:	f6ff af71 	blt.w	90020238 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90020356:	f11c 0801 	adds.w	r8, ip, #1
9002035a:	f53f af6d 	bmi.w	90020238 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002035e:	45c6      	cmp	lr, r8
90020360:	f6ff af6a 	blt.w	90020238 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90020364:	9c1c      	ldr	r4, [sp, #112]	; 0x70
90020366:	b200      	sxth	r0, r0
90020368:	9302      	str	r3, [sp, #8]
9002036a:	fa0f f38e 	sxth.w	r3, lr
9002036e:	9000      	str	r0, [sp, #0]
90020370:	9301      	str	r3, [sp, #4]
90020372:	4633      	mov	r3, r6
90020374:	981d      	ldr	r0, [sp, #116]	; 0x74
90020376:	e9cd 1405 	strd	r1, r4, [sp, #20]
9002037a:	e9cd c203 	strd	ip, r2, [sp, #12]
9002037e:	4639      	mov	r1, r7
90020380:	9a12      	ldr	r2, [sp, #72]	; 0x48
90020382:	f7ff fc63 	bl	9001fc4c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
90020386:	e757      	b.n	90020238 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90020388:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9002038a:	f3c5 3003 	ubfx	r0, r5, #12, #4
9002038e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
90020390:	f3c3 3203 	ubfx	r2, r3, #12, #4
90020394:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90020396:	1427      	asrs	r7, r4, #16
90020398:	9c12      	ldr	r4, [sp, #72]	; 0x48
9002039a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002039e:	142b      	asrs	r3, r5, #16
900203a0:	fb01 7303 	mla	r3, r1, r3, r7
900203a4:	18e7      	adds	r7, r4, r3
900203a6:	5ce3      	ldrb	r3, [r4, r3]
900203a8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
900203ac:	ea4f 6c13 	mov.w	ip, r3, lsr #24
900203b0:	2a00      	cmp	r2, #0
900203b2:	f000 8137 	beq.w	90020624 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
900203b6:	f897 e001 	ldrb.w	lr, [r7, #1]
900203ba:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
900203be:	9410      	str	r4, [sp, #64]	; 0x40
900203c0:	0e24      	lsrs	r4, r4, #24
900203c2:	9417      	str	r4, [sp, #92]	; 0x5c
900203c4:	b170      	cbz	r0, 900203e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
900203c6:	eb07 0e01 	add.w	lr, r7, r1
900203ca:	5c79      	ldrb	r1, [r7, r1]
900203cc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900203d0:	910b      	str	r1, [sp, #44]	; 0x2c
900203d2:	0e09      	lsrs	r1, r1, #24
900203d4:	9114      	str	r1, [sp, #80]	; 0x50
900203d6:	f89e 1001 	ldrb.w	r1, [lr, #1]
900203da:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900203de:	9111      	str	r1, [sp, #68]	; 0x44
900203e0:	0e09      	lsrs	r1, r1, #24
900203e2:	9118      	str	r1, [sp, #96]	; 0x60
900203e4:	b292      	uxth	r2, r2
900203e6:	9917      	ldr	r1, [sp, #92]	; 0x5c
900203e8:	b280      	uxth	r0, r0
900203ea:	9c14      	ldr	r4, [sp, #80]	; 0x50
900203ec:	fb02 f800 	mul.w	r8, r2, r0
900203f0:	0112      	lsls	r2, r2, #4
900203f2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
900203f6:	eba2 0e08 	sub.w	lr, r2, r8
900203fa:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
900203fe:	b280      	uxth	r0, r0
90020400:	fa1f fe8e 	uxth.w	lr, lr
90020404:	1a12      	subs	r2, r2, r0
90020406:	fb0e f101 	mul.w	r1, lr, r1
9002040a:	b292      	uxth	r2, r2
9002040c:	fb02 110c 	mla	r1, r2, ip, r1
90020410:	fb00 1104 	mla	r1, r0, r4, r1
90020414:	9c18      	ldr	r4, [sp, #96]	; 0x60
90020416:	fb08 1104 	mla	r1, r8, r4, r1
9002041a:	f3c1 2107 	ubfx	r1, r1, #8, #8
9002041e:	2900      	cmp	r1, #0
90020420:	f000 80f5 	beq.w	9002060e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
90020424:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90020428:	d019      	beq.n	9002045e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
9002042a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
9002042e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90020432:	fb0c fa0a 	mul.w	sl, ip, sl
90020436:	fb0c fc03 	mul.w	ip, ip, r3
9002043a:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002043e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90020442:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90020446:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002044a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9002044e:	4453      	add	r3, sl
90020450:	0a3f      	lsrs	r7, r7, #8
90020452:	0a1b      	lsrs	r3, r3, #8
90020454:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90020458:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002045c:	433b      	orrs	r3, r7
9002045e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
90020460:	2cff      	cmp	r4, #255	; 0xff
90020462:	d020      	beq.n	900204a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
90020464:	9c10      	ldr	r4, [sp, #64]	; 0x40
90020466:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
9002046a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
9002046c:	4367      	muls	r7, r4
9002046e:	9c10      	ldr	r4, [sp, #64]	; 0x40
90020470:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90020474:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90020478:	9c17      	ldr	r4, [sp, #92]	; 0x5c
9002047a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002047e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020482:	fb04 fa0a 	mul.w	sl, r4, sl
90020486:	44bc      	add	ip, r7
90020488:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9002048c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020490:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90020494:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020498:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002049c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900204a0:	ea4c 040a 	orr.w	r4, ip, sl
900204a4:	9410      	str	r4, [sp, #64]	; 0x40
900204a6:	9c14      	ldr	r4, [sp, #80]	; 0x50
900204a8:	2cff      	cmp	r4, #255	; 0xff
900204aa:	d020      	beq.n	900204ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
900204ac:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900204ae:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900204b2:	9c14      	ldr	r4, [sp, #80]	; 0x50
900204b4:	4367      	muls	r7, r4
900204b6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900204b8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900204bc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900204c0:	9c14      	ldr	r4, [sp, #80]	; 0x50
900204c2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900204c6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900204ca:	fb04 fa0a 	mul.w	sl, r4, sl
900204ce:	44bc      	add	ip, r7
900204d0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900204d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900204d8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900204dc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900204e0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900204e4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900204e8:	ea4c 040a 	orr.w	r4, ip, sl
900204ec:	940b      	str	r4, [sp, #44]	; 0x2c
900204ee:	9c18      	ldr	r4, [sp, #96]	; 0x60
900204f0:	2cff      	cmp	r4, #255	; 0xff
900204f2:	d020      	beq.n	90020536 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
900204f4:	9c11      	ldr	r4, [sp, #68]	; 0x44
900204f6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900204fa:	9c18      	ldr	r4, [sp, #96]	; 0x60
900204fc:	4367      	muls	r7, r4
900204fe:	9c11      	ldr	r4, [sp, #68]	; 0x44
90020500:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90020504:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90020508:	9c18      	ldr	r4, [sp, #96]	; 0x60
9002050a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002050e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020512:	fb04 fa0a 	mul.w	sl, r4, sl
90020516:	44bc      	add	ip, r7
90020518:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9002051c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020520:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90020524:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020528:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002052c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90020530:	ea4c 040a 	orr.w	r4, ip, sl
90020534:	9411      	str	r4, [sp, #68]	; 0x44
90020536:	9c10      	ldr	r4, [sp, #64]	; 0x40
90020538:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
9002053c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90020540:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90020544:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90020546:	fb0e f707 	mul.w	r7, lr, r7
9002054a:	fb02 770c 	mla	r7, r2, ip, r7
9002054e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90020552:	9c11      	ldr	r4, [sp, #68]	; 0x44
90020554:	fb00 770c 	mla	r7, r0, ip, r7
90020558:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9002055c:	9c10      	ldr	r4, [sp, #64]	; 0x40
9002055e:	fb08 770c 	mla	r7, r8, ip, r7
90020562:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
90020566:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90020568:	fb0e fe0c 	mul.w	lr, lr, ip
9002056c:	0a3f      	lsrs	r7, r7, #8
9002056e:	fb02 e303 	mla	r3, r2, r3, lr
90020572:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90020574:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90020578:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
9002057c:	9a11      	ldr	r2, [sp, #68]	; 0x44
9002057e:	fb00 330a 	mla	r3, r0, sl, r3
90020582:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
90020586:	f8b9 0000 	ldrh.w	r0, [r9]
9002058a:	fb08 3c0c 	mla	ip, r8, ip, r3
9002058e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90020590:	1202      	asrs	r2, r0, #8
90020592:	434b      	muls	r3, r1
90020594:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020598:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9002059c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
900205a0:	1c59      	adds	r1, r3, #1
900205a2:	ea47 070c 	orr.w	r7, r7, ip
900205a6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
900205aa:	0c3b      	lsrs	r3, r7, #16
900205ac:	ea6f 2111 	mvn.w	r1, r1, lsr #8
900205b0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
900205b4:	b2ff      	uxtb	r7, r7
900205b6:	fb13 f304 	smulbb	r3, r3, r4
900205ba:	b2c9      	uxtb	r1, r1
900205bc:	fb1c fc04 	smulbb	ip, ip, r4
900205c0:	fb02 3201 	mla	r2, r2, r1, r3
900205c4:	10c3      	asrs	r3, r0, #3
900205c6:	fb17 f704 	smulbb	r7, r7, r4
900205ca:	00c0      	lsls	r0, r0, #3
900205cc:	b292      	uxth	r2, r2
900205ce:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
900205d2:	b2c0      	uxtb	r0, r0
900205d4:	fb03 c301 	mla	r3, r3, r1, ip
900205d8:	f102 0c01 	add.w	ip, r2, #1
900205dc:	fb00 7001 	mla	r0, r0, r1, r7
900205e0:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
900205e4:	b280      	uxth	r0, r0
900205e6:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
900205ea:	b29b      	uxth	r3, r3
900205ec:	1c42      	adds	r2, r0, #1
900205ee:	eb02 2210 	add.w	r2, r2, r0, lsr #8
900205f2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900205f6:	ea42 020c 	orr.w	r2, r2, ip
900205fa:	f103 0c01 	add.w	ip, r3, #1
900205fe:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90020602:	095b      	lsrs	r3, r3, #5
90020604:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90020608:	431a      	orrs	r2, r3
9002060a:	f8a9 2000 	strh.w	r2, [r9]
9002060e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
90020610:	f109 0902 	add.w	r9, r9, #2
90020614:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90020616:	f10b 3bff 	add.w	fp, fp, #4294967295
9002061a:	441a      	add	r2, r3
9002061c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9002061e:	9229      	str	r2, [sp, #164]	; 0xa4
90020620:	441d      	add	r5, r3
90020622:	e63d      	b.n	900202a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
90020624:	2800      	cmp	r0, #0
90020626:	f43f aedd 	beq.w	900203e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
9002062a:	5c79      	ldrb	r1, [r7, r1]
9002062c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90020630:	910b      	str	r1, [sp, #44]	; 0x2c
90020632:	0e09      	lsrs	r1, r1, #24
90020634:	9114      	str	r1, [sp, #80]	; 0x50
90020636:	e6d5      	b.n	900203e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90020638:	b01f      	add	sp, #124	; 0x7c
9002063a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002063e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
9002063e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020642:	b089      	sub	sp, #36	; 0x24
90020644:	9101      	str	r1, [sp, #4]
90020646:	9801      	ldr	r0, [sp, #4]
90020648:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
9002064c:	8800      	ldrh	r0, [r0, #0]
9002064e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
90020652:	1206      	asrs	r6, r0, #8
90020654:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
90020658:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
9002065c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
90020660:	9602      	str	r6, [sp, #8]
90020662:	10c6      	asrs	r6, r0, #3
90020664:	00c0      	lsls	r0, r0, #3
90020666:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9002066a:	b2c0      	uxtb	r0, r0
9002066c:	9603      	str	r6, [sp, #12]
9002066e:	9004      	str	r0, [sp, #16]
90020670:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
90020674:	fb07 100c 	mla	r0, r7, ip, r1
90020678:	2f00      	cmp	r7, #0
9002067a:	eb02 0e00 	add.w	lr, r2, r0
9002067e:	f2c0 810a 	blt.w	90020896 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90020682:	45b8      	cmp	r8, r7
90020684:	f340 8107 	ble.w	90020896 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90020688:	2900      	cmp	r1, #0
9002068a:	f2c0 8102 	blt.w	90020892 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
9002068e:	458c      	cmp	ip, r1
90020690:	f340 80ff 	ble.w	90020892 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90020694:	5c12      	ldrb	r2, [r2, r0]
90020696:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
9002069a:	1c4a      	adds	r2, r1, #1
9002069c:	f100 80fe 	bmi.w	9002089c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
900206a0:	4594      	cmp	ip, r2
900206a2:	f340 80fb 	ble.w	9002089c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
900206a6:	2d00      	cmp	r5, #0
900206a8:	f000 80fa 	beq.w	900208a0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
900206ac:	f89e 2001 	ldrb.w	r2, [lr, #1]
900206b0:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
900206b4:	3701      	adds	r7, #1
900206b6:	f100 80f7 	bmi.w	900208a8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
900206ba:	45b8      	cmp	r8, r7
900206bc:	f340 80f4 	ble.w	900208a8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
900206c0:	2c00      	cmp	r4, #0
900206c2:	f000 80f4 	beq.w	900208ae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
900206c6:	2900      	cmp	r1, #0
900206c8:	eb0e 020c 	add.w	r2, lr, ip
900206cc:	f2c0 80ea 	blt.w	900208a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
900206d0:	458c      	cmp	ip, r1
900206d2:	f340 80e7 	ble.w	900208a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
900206d6:	f81e 700c 	ldrb.w	r7, [lr, ip]
900206da:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
900206de:	3101      	adds	r1, #1
900206e0:	f100 80e8 	bmi.w	900208b4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
900206e4:	458c      	cmp	ip, r1
900206e6:	f340 80e5 	ble.w	900208b4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
900206ea:	2d00      	cmp	r5, #0
900206ec:	f000 80e4 	beq.w	900208b8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
900206f0:	7852      	ldrb	r2, [r2, #1]
900206f2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
900206f6:	0e0b      	lsrs	r3, r1, #24
900206f8:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
900206fc:	ea4f 6a10 	mov.w	sl, r0, lsr #24
90020700:	9300      	str	r3, [sp, #0]
90020702:	b2a4      	uxth	r4, r4
90020704:	b2ab      	uxth	r3, r5
90020706:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
9002070a:	ea4f 6b16 	mov.w	fp, r6, lsr #24
9002070e:	fb03 f904 	mul.w	r9, r3, r4
90020712:	011b      	lsls	r3, r3, #4
90020714:	fb0a f505 	mul.w	r5, sl, r5
90020718:	ea4f 6817 	mov.w	r8, r7, lsr #24
9002071c:	eba3 0e09 	sub.w	lr, r3, r9
90020720:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
90020724:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
90020728:	0a28      	lsrs	r0, r5, #8
9002072a:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
9002072e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90020732:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90020736:	fb0a f303 	mul.w	r3, sl, r3
9002073a:	fb08 f707 	mul.w	r7, r8, r7
9002073e:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
90020742:	4405      	add	r5, r0
90020744:	fb08 fc0c 	mul.w	ip, r8, ip
90020748:	b2a4      	uxth	r4, r4
9002074a:	0a2d      	lsrs	r5, r5, #8
9002074c:	fa1f fe8e 	uxth.w	lr, lr
90020750:	1b12      	subs	r2, r2, r4
90020752:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
90020756:	b292      	uxth	r2, r2
90020758:	9005      	str	r0, [sp, #20]
9002075a:	f503 7080 	add.w	r0, r3, #256	; 0x100
9002075e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90020762:	ea4f 201c 	mov.w	r0, ip, lsr #8
90020766:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9002076a:	0a1b      	lsrs	r3, r3, #8
9002076c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90020770:	9306      	str	r3, [sp, #24]
90020772:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
90020776:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
9002077a:	4460      	add	r0, ip
9002077c:	fb0b f303 	mul.w	r3, fp, r3
90020780:	fb0b f606 	mul.w	r6, fp, r6
90020784:	0a00      	lsrs	r0, r0, #8
90020786:	0a1d      	lsrs	r5, r3, #8
90020788:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
9002078c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90020790:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90020794:	441d      	add	r5, r3
90020796:	f506 7380 	add.w	r3, r6, #256	; 0x100
9002079a:	eb03 2616 	add.w	r6, r3, r6, lsr #8
9002079e:	f507 7380 	add.w	r3, r7, #256	; 0x100
900207a2:	0a2d      	lsrs	r5, r5, #8
900207a4:	eb03 2317 	add.w	r3, r3, r7, lsr #8
900207a8:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
900207ac:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
900207b0:	0a36      	lsrs	r6, r6, #8
900207b2:	0a1b      	lsrs	r3, r3, #8
900207b4:	fb05 f50e 	mul.w	r5, r5, lr
900207b8:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
900207bc:	9307      	str	r3, [sp, #28]
900207be:	0e0b      	lsrs	r3, r1, #24
900207c0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
900207c4:	fb0e f606 	mul.w	r6, lr, r6
900207c8:	435f      	muls	r7, r3
900207ca:	4359      	muls	r1, r3
900207cc:	9b05      	ldr	r3, [sp, #20]
900207ce:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900207d2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900207d6:	fb03 5502 	mla	r5, r3, r2, r5
900207da:	9b06      	ldr	r3, [sp, #24]
900207dc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900207e0:	fb0e fe0b 	mul.w	lr, lr, fp
900207e4:	44bc      	add	ip, r7
900207e6:	f501 7780 	add.w	r7, r1, #256	; 0x100
900207ea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900207ee:	eb07 2111 	add.w	r1, r7, r1, lsr #8
900207f2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900207f6:	0a09      	lsrs	r1, r1, #8
900207f8:	fb0c 5509 	mla	r5, ip, r9, r5
900207fc:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90020800:	fb00 5504 	mla	r5, r0, r4, r5
90020804:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
90020808:	9b07      	ldr	r3, [sp, #28]
9002080a:	fb02 6000 	mla	r0, r2, r0, r6
9002080e:	0a2d      	lsrs	r5, r5, #8
90020810:	fb02 e20a 	mla	r2, r2, sl, lr
90020814:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90020818:	fb09 0001 	mla	r0, r9, r1, r0
9002081c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90020820:	fb04 0003 	mla	r0, r4, r3, r0
90020824:	9b00      	ldr	r3, [sp, #0]
90020826:	fb04 2408 	mla	r4, r4, r8, r2
9002082a:	9a04      	ldr	r2, [sp, #16]
9002082c:	0a00      	lsrs	r0, r0, #8
9002082e:	fb09 4903 	mla	r9, r9, r3, r4
90020832:	9b02      	ldr	r3, [sp, #8]
90020834:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
90020838:	ea6f 2929 	mvn.w	r9, r9, asr #8
9002083c:	4305      	orrs	r5, r0
9002083e:	fa5f f989 	uxtb.w	r9, r9
90020842:	fb03 f109 	mul.w	r1, r3, r9
90020846:	9b03      	ldr	r3, [sp, #12]
90020848:	fb03 f309 	mul.w	r3, r3, r9
9002084c:	fb02 f909 	mul.w	r9, r2, r9
90020850:	1c4a      	adds	r2, r1, #1
90020852:	1c58      	adds	r0, r3, #1
90020854:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90020858:	eb00 2013 	add.w	r0, r0, r3, lsr #8
9002085c:	0c2a      	lsrs	r2, r5, #16
9002085e:	0a2b      	lsrs	r3, r5, #8
90020860:	eb02 2211 	add.w	r2, r2, r1, lsr #8
90020864:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90020868:	0212      	lsls	r2, r2, #8
9002086a:	00db      	lsls	r3, r3, #3
9002086c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90020870:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90020874:	4313      	orrs	r3, r2
90020876:	f109 0201 	add.w	r2, r9, #1
9002087a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
9002087e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
90020882:	f3c5 05c4 	ubfx	r5, r5, #3, #5
90020886:	431d      	orrs	r5, r3
90020888:	9b01      	ldr	r3, [sp, #4]
9002088a:	801d      	strh	r5, [r3, #0]
9002088c:	b009      	add	sp, #36	; 0x24
9002088e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020892:	2000      	movs	r0, #0
90020894:	e701      	b.n	9002069a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
90020896:	2600      	movs	r6, #0
90020898:	4630      	mov	r0, r6
9002089a:	e70b      	b.n	900206b4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
9002089c:	2600      	movs	r6, #0
9002089e:	e709      	b.n	900206b4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
900208a0:	462e      	mov	r6, r5
900208a2:	e707      	b.n	900206b4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
900208a4:	2700      	movs	r7, #0
900208a6:	e71a      	b.n	900206de <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
900208a8:	2100      	movs	r1, #0
900208aa:	460f      	mov	r7, r1
900208ac:	e723      	b.n	900206f6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
900208ae:	4621      	mov	r1, r4
900208b0:	4627      	mov	r7, r4
900208b2:	e720      	b.n	900206f6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
900208b4:	2100      	movs	r1, #0
900208b6:	e71e      	b.n	900206f6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
900208b8:	4629      	mov	r1, r5
900208ba:	e71c      	b.n	900206f6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

900208bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900208bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900208c0:	b09b      	sub	sp, #108	; 0x6c
900208c2:	9218      	str	r2, [sp, #96]	; 0x60
900208c4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
900208c6:	9019      	str	r0, [sp, #100]	; 0x64
900208c8:	9116      	str	r1, [sp, #88]	; 0x58
900208ca:	6850      	ldr	r0, [r2, #4]
900208cc:	9307      	str	r3, [sp, #28]
900208ce:	6812      	ldr	r2, [r2, #0]
900208d0:	9d26      	ldr	r5, [sp, #152]	; 0x98
900208d2:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
900208d6:	fb00 1303 	mla	r3, r0, r3, r1
900208da:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900208de:	930a      	str	r3, [sp, #40]	; 0x28
900208e0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900208e2:	681b      	ldr	r3, [r3, #0]
900208e4:	930f      	str	r3, [sp, #60]	; 0x3c
900208e6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900208e8:	685e      	ldr	r6, [r3, #4]
900208ea:	3604      	adds	r6, #4
900208ec:	9b16      	ldr	r3, [sp, #88]	; 0x58
900208ee:	2b00      	cmp	r3, #0
900208f0:	dc03      	bgt.n	900208fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
900208f2:	9b18      	ldr	r3, [sp, #96]	; 0x60
900208f4:	2b00      	cmp	r3, #0
900208f6:	f340 8373 	ble.w	90020fe0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
900208fa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900208fc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90020900:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90020904:	1e48      	subs	r0, r1, #1
90020906:	1e57      	subs	r7, r2, #1
90020908:	9b07      	ldr	r3, [sp, #28]
9002090a:	2b00      	cmp	r3, #0
9002090c:	f340 818f 	ble.w	90020c2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
90020910:	9c25      	ldr	r4, [sp, #148]	; 0x94
90020912:	142b      	asrs	r3, r5, #16
90020914:	ea5f 4c24 	movs.w	ip, r4, asr #16
90020918:	d406      	bmi.n	90020928 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002091a:	4584      	cmp	ip, r0
9002091c:	da04      	bge.n	90020928 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002091e:	2b00      	cmp	r3, #0
90020920:	db02      	blt.n	90020928 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90020922:	42bb      	cmp	r3, r7
90020924:	f2c0 8184 	blt.w	90020c30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
90020928:	f11c 0c01 	adds.w	ip, ip, #1
9002092c:	f100 8172 	bmi.w	90020c14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90020930:	4561      	cmp	r1, ip
90020932:	f2c0 816f 	blt.w	90020c14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90020936:	3301      	adds	r3, #1
90020938:	f100 816c 	bmi.w	90020c14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002093c:	429a      	cmp	r2, r3
9002093e:	f2c0 8169 	blt.w	90020c14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90020942:	9b07      	ldr	r3, [sp, #28]
90020944:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90020946:	9317      	str	r3, [sp, #92]	; 0x5c
90020948:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9002094a:	2b00      	cmp	r3, #0
9002094c:	f340 818e 	ble.w	90020c6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
90020950:	9b25      	ldr	r3, [sp, #148]	; 0x94
90020952:	ea4f 4c25 	mov.w	ip, r5, asr #16
90020956:	f3c5 3003 	ubfx	r0, r5, #12, #4
9002095a:	f3c3 3203 	ubfx	r2, r3, #12, #4
9002095e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90020960:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
90020964:	9b25      	ldr	r3, [sp, #148]	; 0x94
90020966:	141b      	asrs	r3, r3, #16
90020968:	f100 81d1 	bmi.w	90020d0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002096c:	f101 38ff 	add.w	r8, r1, #4294967295
90020970:	4543      	cmp	r3, r8
90020972:	f280 81cc 	bge.w	90020d0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90020976:	f1bc 0f00 	cmp.w	ip, #0
9002097a:	f2c0 81c8 	blt.w	90020d0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002097e:	f10e 38ff 	add.w	r8, lr, #4294967295
90020982:	45c4      	cmp	ip, r8
90020984:	f280 81c3 	bge.w	90020d0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90020988:	b209      	sxth	r1, r1
9002098a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9002098c:	fb0c 3301 	mla	r3, ip, r1, r3
90020990:	eb04 0803 	add.w	r8, r4, r3
90020994:	5ce3      	ldrb	r3, [r4, r3]
90020996:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
9002099a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
9002099e:	2a00      	cmp	r2, #0
900209a0:	f000 81aa 	beq.w	90020cf8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
900209a4:	f898 c001 	ldrb.w	ip, [r8, #1]
900209a8:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
900209ac:	940b      	str	r4, [sp, #44]	; 0x2c
900209ae:	0e24      	lsrs	r4, r4, #24
900209b0:	9412      	str	r4, [sp, #72]	; 0x48
900209b2:	b178      	cbz	r0, 900209d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
900209b4:	eb08 0c01 	add.w	ip, r8, r1
900209b8:	f818 1001 	ldrb.w	r1, [r8, r1]
900209bc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900209c0:	9108      	str	r1, [sp, #32]
900209c2:	0e09      	lsrs	r1, r1, #24
900209c4:	9110      	str	r1, [sp, #64]	; 0x40
900209c6:	f89c 1001 	ldrb.w	r1, [ip, #1]
900209ca:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900209ce:	910c      	str	r1, [sp, #48]	; 0x30
900209d0:	0e09      	lsrs	r1, r1, #24
900209d2:	9113      	str	r1, [sp, #76]	; 0x4c
900209d4:	b292      	uxth	r2, r2
900209d6:	9912      	ldr	r1, [sp, #72]	; 0x48
900209d8:	b280      	uxth	r0, r0
900209da:	9c10      	ldr	r4, [sp, #64]	; 0x40
900209dc:	fb02 f900 	mul.w	r9, r2, r0
900209e0:	0112      	lsls	r2, r2, #4
900209e2:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
900209e6:	eba2 0809 	sub.w	r8, r2, r9
900209ea:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
900209ee:	b280      	uxth	r0, r0
900209f0:	fa1f f888 	uxth.w	r8, r8
900209f4:	1a12      	subs	r2, r2, r0
900209f6:	fb08 f101 	mul.w	r1, r8, r1
900209fa:	b292      	uxth	r2, r2
900209fc:	fb02 110e 	mla	r1, r2, lr, r1
90020a00:	fb00 1104 	mla	r1, r0, r4, r1
90020a04:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90020a06:	fb09 1104 	mla	r1, r9, r4, r1
90020a0a:	f3c1 2107 	ubfx	r1, r1, #8, #8
90020a0e:	2900      	cmp	r1, #0
90020a10:	f000 80f5 	beq.w	90020bfe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90020a14:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90020a18:	d01b      	beq.n	90020a52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90020a1a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90020a1e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90020a22:	fb0e fa0a 	mul.w	sl, lr, sl
90020a26:	fb0e fe03 	mul.w	lr, lr, r3
90020a2a:	ea4f 231a 	mov.w	r3, sl, lsr #8
90020a2e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90020a32:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90020a36:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90020a3a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90020a3e:	4453      	add	r3, sl
90020a40:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020a44:	0a1b      	lsrs	r3, r3, #8
90020a46:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90020a4a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90020a4e:	ea43 030c 	orr.w	r3, r3, ip
90020a52:	9c12      	ldr	r4, [sp, #72]	; 0x48
90020a54:	2cff      	cmp	r4, #255	; 0xff
90020a56:	d021      	beq.n	90020a9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90020a58:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90020a5a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90020a5e:	9c12      	ldr	r4, [sp, #72]	; 0x48
90020a60:	fb04 fb0b 	mul.w	fp, r4, fp
90020a64:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90020a66:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90020a6a:	9c12      	ldr	r4, [sp, #72]	; 0x48
90020a6c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90020a70:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90020a74:	fb04 fa0a 	mul.w	sl, r4, sl
90020a78:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90020a7c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90020a80:	44de      	add	lr, fp
90020a82:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90020a86:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90020a8a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020a8e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90020a92:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90020a96:	ea4e 040a 	orr.w	r4, lr, sl
90020a9a:	940b      	str	r4, [sp, #44]	; 0x2c
90020a9c:	9c10      	ldr	r4, [sp, #64]	; 0x40
90020a9e:	2cff      	cmp	r4, #255	; 0xff
90020aa0:	d021      	beq.n	90020ae6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
90020aa2:	9c08      	ldr	r4, [sp, #32]
90020aa4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90020aa8:	9c10      	ldr	r4, [sp, #64]	; 0x40
90020aaa:	fb04 fb0b 	mul.w	fp, r4, fp
90020aae:	9c08      	ldr	r4, [sp, #32]
90020ab0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90020ab4:	9c10      	ldr	r4, [sp, #64]	; 0x40
90020ab6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90020aba:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90020abe:	fb04 fa0a 	mul.w	sl, r4, sl
90020ac2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90020ac6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90020aca:	44de      	add	lr, fp
90020acc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90020ad0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90020ad4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020ad8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90020adc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90020ae0:	ea4e 040a 	orr.w	r4, lr, sl
90020ae4:	9408      	str	r4, [sp, #32]
90020ae6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90020ae8:	2cff      	cmp	r4, #255	; 0xff
90020aea:	d021      	beq.n	90020b30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
90020aec:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90020aee:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90020af2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90020af4:	fb04 fb0b 	mul.w	fp, r4, fp
90020af8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90020afa:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90020afe:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90020b00:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90020b04:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90020b08:	fb04 fa0a 	mul.w	sl, r4, sl
90020b0c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90020b10:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90020b14:	44de      	add	lr, fp
90020b16:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90020b1a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90020b1e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020b22:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90020b26:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90020b2a:	ea4e 040a 	orr.w	r4, lr, sl
90020b2e:	940c      	str	r4, [sp, #48]	; 0x30
90020b30:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90020b32:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
90020b36:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90020b3a:	43c9      	mvns	r1, r1
90020b3c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90020b40:	9c08      	ldr	r4, [sp, #32]
90020b42:	fb08 fc0c 	mul.w	ip, r8, ip
90020b46:	fb02 cc0e 	mla	ip, r2, lr, ip
90020b4a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90020b4e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90020b50:	fb00 cc0e 	mla	ip, r0, lr, ip
90020b54:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90020b58:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90020b5a:	fb09 cc0e 	mla	ip, r9, lr, ip
90020b5e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
90020b62:	fb08 f80e 	mul.w	r8, r8, lr
90020b66:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020b6a:	fa5f fe81 	uxtb.w	lr, r1
90020b6e:	fb02 8303 	mla	r3, r2, r3, r8
90020b72:	9a08      	ldr	r2, [sp, #32]
90020b74:	f8b7 8000 	ldrh.w	r8, [r7]
90020b78:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020b7c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
90020b80:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90020b82:	ea4f 01c8 	mov.w	r1, r8, lsl #3
90020b86:	fb00 330a 	mla	r3, r0, sl, r3
90020b8a:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
90020b8e:	ea4f 2228 	mov.w	r2, r8, asr #8
90020b92:	fb09 3900 	mla	r9, r9, r0, r3
90020b96:	ea4f 00e8 	mov.w	r0, r8, asr #3
90020b9a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90020b9e:	b2c9      	uxtb	r1, r1
90020ba0:	ea4f 2919 	mov.w	r9, r9, lsr #8
90020ba4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90020ba8:	fb02 f20e 	mul.w	r2, r2, lr
90020bac:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
90020bb0:	fb00 f00e 	mul.w	r0, r0, lr
90020bb4:	1c53      	adds	r3, r2, #1
90020bb6:	fb01 f10e 	mul.w	r1, r1, lr
90020bba:	ea4c 0c09 	orr.w	ip, ip, r9
90020bbe:	eb03 2212 	add.w	r2, r3, r2, lsr #8
90020bc2:	ea4f 431c 	mov.w	r3, ip, lsr #16
90020bc6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90020bca:	4a60      	ldr	r2, [pc, #384]	; (90020d4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
90020bcc:	b2db      	uxtb	r3, r3
90020bce:	ea02 2203 	and.w	r2, r2, r3, lsl #8
90020bd2:	1c43      	adds	r3, r0, #1
90020bd4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90020bd8:	ea4f 231c 	mov.w	r3, ip, lsr #8
90020bdc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90020be0:	00db      	lsls	r3, r3, #3
90020be2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90020be6:	4313      	orrs	r3, r2
90020be8:	1c4a      	adds	r2, r1, #1
90020bea:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90020bee:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90020bf2:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90020bf6:	ea4c 0c03 	orr.w	ip, ip, r3
90020bfa:	f8a7 c000 	strh.w	ip, [r7]
90020bfe:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90020c00:	3702      	adds	r7, #2
90020c02:	9a25      	ldr	r2, [sp, #148]	; 0x94
90020c04:	441a      	add	r2, r3
90020c06:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90020c08:	441d      	add	r5, r3
90020c0a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90020c0c:	9225      	str	r2, [sp, #148]	; 0x94
90020c0e:	3b01      	subs	r3, #1
90020c10:	9317      	str	r3, [sp, #92]	; 0x5c
90020c12:	e699      	b.n	90020948 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90020c14:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90020c16:	9c25      	ldr	r4, [sp, #148]	; 0x94
90020c18:	441c      	add	r4, r3
90020c1a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90020c1c:	441d      	add	r5, r3
90020c1e:	9b07      	ldr	r3, [sp, #28]
90020c20:	9425      	str	r4, [sp, #148]	; 0x94
90020c22:	3b01      	subs	r3, #1
90020c24:	9307      	str	r3, [sp, #28]
90020c26:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90020c28:	3302      	adds	r3, #2
90020c2a:	930a      	str	r3, [sp, #40]	; 0x28
90020c2c:	e66c      	b.n	90020908 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90020c2e:	d024      	beq.n	90020c7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
90020c30:	9b07      	ldr	r3, [sp, #28]
90020c32:	9827      	ldr	r0, [sp, #156]	; 0x9c
90020c34:	3b01      	subs	r3, #1
90020c36:	9c25      	ldr	r4, [sp, #148]	; 0x94
90020c38:	fb00 4003 	mla	r0, r0, r3, r4
90020c3c:	1400      	asrs	r0, r0, #16
90020c3e:	f53f ae80 	bmi.w	90020942 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90020c42:	3901      	subs	r1, #1
90020c44:	4288      	cmp	r0, r1
90020c46:	f6bf ae7c 	bge.w	90020942 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90020c4a:	9928      	ldr	r1, [sp, #160]	; 0xa0
90020c4c:	fb01 5303 	mla	r3, r1, r3, r5
90020c50:	141b      	asrs	r3, r3, #16
90020c52:	f53f ae76 	bmi.w	90020942 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90020c56:	3a01      	subs	r2, #1
90020c58:	4293      	cmp	r3, r2
90020c5a:	f6bf ae72 	bge.w	90020942 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90020c5e:	f8dd b01c 	ldr.w	fp, [sp, #28]
90020c62:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
90020c66:	f1bb 0f00 	cmp.w	fp, #0
90020c6a:	dc71      	bgt.n	90020d50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90020c6c:	9b07      	ldr	r3, [sp, #28]
90020c6e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90020c72:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90020c74:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90020c78:	930a      	str	r3, [sp, #40]	; 0x28
90020c7a:	9b16      	ldr	r3, [sp, #88]	; 0x58
90020c7c:	2b00      	cmp	r3, #0
90020c7e:	f340 81af 	ble.w	90020fe0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90020c82:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90020c86:	9b24      	ldr	r3, [sp, #144]	; 0x90
90020c88:	ee30 0a04 	vadd.f32	s0, s0, s8
90020c8c:	ee70 0aa4 	vadd.f32	s1, s1, s9
90020c90:	eef0 6a62 	vmov.f32	s13, s5
90020c94:	eec7 7a00 	vdiv.f32	s15, s14, s0
90020c98:	ee31 1a05 	vadd.f32	s2, s2, s10
90020c9c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90020ca0:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
90020ca4:	eef0 6a43 	vmov.f32	s13, s6
90020ca8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90020cac:	ee16 5a90 	vmov	r5, s13
90020cb0:	ee20 7aa7 	vmul.f32	s14, s1, s15
90020cb4:	ee61 7a27 	vmul.f32	s15, s2, s15
90020cb8:	ee77 2a62 	vsub.f32	s5, s14, s5
90020cbc:	ee37 3ac3 	vsub.f32	s6, s15, s6
90020cc0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90020cc4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90020cc8:	ee12 2a90 	vmov	r2, s5
90020ccc:	eef0 2a47 	vmov.f32	s5, s14
90020cd0:	fb92 f3f3 	sdiv	r3, r2, r3
90020cd4:	ee13 2a10 	vmov	r2, s6
90020cd8:	9327      	str	r3, [sp, #156]	; 0x9c
90020cda:	9b24      	ldr	r3, [sp, #144]	; 0x90
90020cdc:	eeb0 3a67 	vmov.f32	s6, s15
90020ce0:	fb92 f3f3 	sdiv	r3, r2, r3
90020ce4:	9328      	str	r3, [sp, #160]	; 0xa0
90020ce6:	9b16      	ldr	r3, [sp, #88]	; 0x58
90020ce8:	9a18      	ldr	r2, [sp, #96]	; 0x60
90020cea:	3b01      	subs	r3, #1
90020cec:	9316      	str	r3, [sp, #88]	; 0x58
90020cee:	9b24      	ldr	r3, [sp, #144]	; 0x90
90020cf0:	bf08      	it	eq
90020cf2:	4613      	moveq	r3, r2
90020cf4:	9307      	str	r3, [sp, #28]
90020cf6:	e5f9      	b.n	900208ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90020cf8:	2800      	cmp	r0, #0
90020cfa:	f43f ae6b 	beq.w	900209d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90020cfe:	f818 1001 	ldrb.w	r1, [r8, r1]
90020d02:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90020d06:	9108      	str	r1, [sp, #32]
90020d08:	0e09      	lsrs	r1, r1, #24
90020d0a:	9110      	str	r1, [sp, #64]	; 0x40
90020d0c:	e662      	b.n	900209d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90020d0e:	f113 0801 	adds.w	r8, r3, #1
90020d12:	f53f af74 	bmi.w	90020bfe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90020d16:	4541      	cmp	r1, r8
90020d18:	f6ff af71 	blt.w	90020bfe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90020d1c:	f11c 0801 	adds.w	r8, ip, #1
90020d20:	f53f af6d 	bmi.w	90020bfe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90020d24:	45c6      	cmp	lr, r8
90020d26:	f6ff af6a 	blt.w	90020bfe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90020d2a:	b209      	sxth	r1, r1
90020d2c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
90020d30:	fa0f f38e 	sxth.w	r3, lr
90020d34:	9100      	str	r1, [sp, #0]
90020d36:	4639      	mov	r1, r7
90020d38:	9301      	str	r3, [sp, #4]
90020d3a:	4633      	mov	r3, r6
90020d3c:	e9cd 2004 	strd	r2, r0, [sp, #16]
90020d40:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90020d42:	9819      	ldr	r0, [sp, #100]	; 0x64
90020d44:	f7ff fc7b 	bl	9002063e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
90020d48:	e759      	b.n	90020bfe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90020d4a:	bf00      	nop
90020d4c:	fffff800 	.word	0xfffff800
90020d50:	9b25      	ldr	r3, [sp, #148]	; 0x94
90020d52:	f3c5 3003 	ubfx	r0, r5, #12, #4
90020d56:	9c25      	ldr	r4, [sp, #148]	; 0x94
90020d58:	f3c3 3203 	ubfx	r2, r3, #12, #4
90020d5c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90020d5e:	1427      	asrs	r7, r4, #16
90020d60:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90020d62:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90020d66:	142b      	asrs	r3, r5, #16
90020d68:	fb01 7303 	mla	r3, r1, r3, r7
90020d6c:	18e7      	adds	r7, r4, r3
90020d6e:	5ce3      	ldrb	r3, [r4, r3]
90020d70:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90020d74:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90020d78:	2a00      	cmp	r2, #0
90020d7a:	f000 8127 	beq.w	90020fcc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
90020d7e:	f897 e001 	ldrb.w	lr, [r7, #1]
90020d82:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90020d86:	940d      	str	r4, [sp, #52]	; 0x34
90020d88:	0e24      	lsrs	r4, r4, #24
90020d8a:	9414      	str	r4, [sp, #80]	; 0x50
90020d8c:	b170      	cbz	r0, 90020dac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90020d8e:	eb07 0e01 	add.w	lr, r7, r1
90020d92:	5c79      	ldrb	r1, [r7, r1]
90020d94:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90020d98:	9109      	str	r1, [sp, #36]	; 0x24
90020d9a:	0e09      	lsrs	r1, r1, #24
90020d9c:	9111      	str	r1, [sp, #68]	; 0x44
90020d9e:	f89e 1001 	ldrb.w	r1, [lr, #1]
90020da2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90020da6:	910e      	str	r1, [sp, #56]	; 0x38
90020da8:	0e09      	lsrs	r1, r1, #24
90020daa:	9115      	str	r1, [sp, #84]	; 0x54
90020dac:	b292      	uxth	r2, r2
90020dae:	9c11      	ldr	r4, [sp, #68]	; 0x44
90020db0:	b280      	uxth	r0, r0
90020db2:	fb02 f800 	mul.w	r8, r2, r0
90020db6:	0112      	lsls	r2, r2, #4
90020db8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90020dbc:	eba2 0e08 	sub.w	lr, r2, r8
90020dc0:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
90020dc4:	9a14      	ldr	r2, [sp, #80]	; 0x50
90020dc6:	b280      	uxth	r0, r0
90020dc8:	fa1f fe8e 	uxth.w	lr, lr
90020dcc:	1a09      	subs	r1, r1, r0
90020dce:	fb0e f202 	mul.w	r2, lr, r2
90020dd2:	b289      	uxth	r1, r1
90020dd4:	fb01 220c 	mla	r2, r1, ip, r2
90020dd8:	fb00 2204 	mla	r2, r0, r4, r2
90020ddc:	9c15      	ldr	r4, [sp, #84]	; 0x54
90020dde:	fb08 2204 	mla	r2, r8, r4, r2
90020de2:	f3c2 2207 	ubfx	r2, r2, #8, #8
90020de6:	2a00      	cmp	r2, #0
90020de8:	f000 80e5 	beq.w	90020fb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
90020dec:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90020df0:	d019      	beq.n	90020e26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
90020df2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90020df6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90020dfa:	fb0c fa0a 	mul.w	sl, ip, sl
90020dfe:	fb0c fc03 	mul.w	ip, ip, r3
90020e02:	ea4f 231a 	mov.w	r3, sl, lsr #8
90020e06:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90020e0a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90020e0e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90020e12:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90020e16:	4453      	add	r3, sl
90020e18:	0a3f      	lsrs	r7, r7, #8
90020e1a:	0a1b      	lsrs	r3, r3, #8
90020e1c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90020e20:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90020e24:	433b      	orrs	r3, r7
90020e26:	9c14      	ldr	r4, [sp, #80]	; 0x50
90020e28:	2cff      	cmp	r4, #255	; 0xff
90020e2a:	d020      	beq.n	90020e6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
90020e2c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90020e2e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90020e32:	9c14      	ldr	r4, [sp, #80]	; 0x50
90020e34:	4367      	muls	r7, r4
90020e36:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90020e38:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90020e3c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90020e40:	9c14      	ldr	r4, [sp, #80]	; 0x50
90020e42:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90020e46:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020e4a:	fb04 fa0a 	mul.w	sl, r4, sl
90020e4e:	44bc      	add	ip, r7
90020e50:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90020e54:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020e58:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90020e5c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020e60:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020e64:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90020e68:	ea4c 040a 	orr.w	r4, ip, sl
90020e6c:	940d      	str	r4, [sp, #52]	; 0x34
90020e6e:	9c11      	ldr	r4, [sp, #68]	; 0x44
90020e70:	2cff      	cmp	r4, #255	; 0xff
90020e72:	d020      	beq.n	90020eb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
90020e74:	9c09      	ldr	r4, [sp, #36]	; 0x24
90020e76:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90020e7a:	9c11      	ldr	r4, [sp, #68]	; 0x44
90020e7c:	4367      	muls	r7, r4
90020e7e:	9c09      	ldr	r4, [sp, #36]	; 0x24
90020e80:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90020e84:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90020e88:	9c11      	ldr	r4, [sp, #68]	; 0x44
90020e8a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90020e8e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020e92:	fb04 fa0a 	mul.w	sl, r4, sl
90020e96:	44bc      	add	ip, r7
90020e98:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90020e9c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020ea0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90020ea4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020ea8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020eac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90020eb0:	ea4c 040a 	orr.w	r4, ip, sl
90020eb4:	9409      	str	r4, [sp, #36]	; 0x24
90020eb6:	9c15      	ldr	r4, [sp, #84]	; 0x54
90020eb8:	2cff      	cmp	r4, #255	; 0xff
90020eba:	d020      	beq.n	90020efe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
90020ebc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90020ebe:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90020ec2:	9c15      	ldr	r4, [sp, #84]	; 0x54
90020ec4:	4367      	muls	r7, r4
90020ec6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90020ec8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90020ecc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90020ed0:	9c15      	ldr	r4, [sp, #84]	; 0x54
90020ed2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90020ed6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020eda:	fb04 fa0a 	mul.w	sl, r4, sl
90020ede:	44bc      	add	ip, r7
90020ee0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90020ee4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020ee8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90020eec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020ef0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020ef4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90020ef8:	ea4c 040a 	orr.w	r4, ip, sl
90020efc:	940e      	str	r4, [sp, #56]	; 0x38
90020efe:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90020f00:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
90020f04:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90020f08:	43d2      	mvns	r2, r2
90020f0a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90020f0e:	9c09      	ldr	r4, [sp, #36]	; 0x24
90020f10:	b2d2      	uxtb	r2, r2
90020f12:	fb0e f707 	mul.w	r7, lr, r7
90020f16:	fb01 770c 	mla	r7, r1, ip, r7
90020f1a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90020f1e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90020f20:	fb00 770c 	mla	r7, r0, ip, r7
90020f24:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90020f28:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90020f2a:	fb08 770c 	mla	r7, r8, ip, r7
90020f2e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
90020f32:	fb0e fe0c 	mul.w	lr, lr, ip
90020f36:	0a3f      	lsrs	r7, r7, #8
90020f38:	fb01 e303 	mla	r3, r1, r3, lr
90020f3c:	9909      	ldr	r1, [sp, #36]	; 0x24
90020f3e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90020f42:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
90020f46:	990e      	ldr	r1, [sp, #56]	; 0x38
90020f48:	fb00 330a 	mla	r3, r0, sl, r3
90020f4c:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
90020f50:	fb08 3c0c 	mla	ip, r8, ip, r3
90020f54:	f8b9 3000 	ldrh.w	r3, [r9]
90020f58:	1218      	asrs	r0, r3, #8
90020f5a:	10d9      	asrs	r1, r3, #3
90020f5c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020f60:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90020f64:	00db      	lsls	r3, r3, #3
90020f66:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90020f6a:	4350      	muls	r0, r2
90020f6c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90020f70:	b2db      	uxtb	r3, r3
90020f72:	4351      	muls	r1, r2
90020f74:	ea47 070c 	orr.w	r7, r7, ip
90020f78:	4353      	muls	r3, r2
90020f7a:	1c42      	adds	r2, r0, #1
90020f7c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90020f80:	0c3a      	lsrs	r2, r7, #16
90020f82:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90020f86:	4a18      	ldr	r2, [pc, #96]	; (90020fe8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
90020f88:	b2c0      	uxtb	r0, r0
90020f8a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
90020f8e:	1c4a      	adds	r2, r1, #1
90020f90:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90020f94:	0a3a      	lsrs	r2, r7, #8
90020f96:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90020f9a:	00c9      	lsls	r1, r1, #3
90020f9c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90020fa0:	4301      	orrs	r1, r0
90020fa2:	1c58      	adds	r0, r3, #1
90020fa4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90020fa8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90020fac:	f3c7 00c4 	ubfx	r0, r7, #3, #5
90020fb0:	4308      	orrs	r0, r1
90020fb2:	f8a9 0000 	strh.w	r0, [r9]
90020fb6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90020fb8:	f109 0902 	add.w	r9, r9, #2
90020fbc:	9a25      	ldr	r2, [sp, #148]	; 0x94
90020fbe:	f10b 3bff 	add.w	fp, fp, #4294967295
90020fc2:	441a      	add	r2, r3
90020fc4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90020fc6:	9225      	str	r2, [sp, #148]	; 0x94
90020fc8:	441d      	add	r5, r3
90020fca:	e64c      	b.n	90020c66 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90020fcc:	2800      	cmp	r0, #0
90020fce:	f43f aeed 	beq.w	90020dac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90020fd2:	5c79      	ldrb	r1, [r7, r1]
90020fd4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90020fd8:	9109      	str	r1, [sp, #36]	; 0x24
90020fda:	0e09      	lsrs	r1, r1, #24
90020fdc:	9111      	str	r1, [sp, #68]	; 0x44
90020fde:	e6e5      	b.n	90020dac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90020fe0:	b01b      	add	sp, #108	; 0x6c
90020fe2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020fe6:	bf00      	nop
90020fe8:	fffff800 	.word	0xfffff800

90020fec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
90020fec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020ff0:	b085      	sub	sp, #20
90020ff2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
90020ff6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
90020ffa:	2800      	cmp	r0, #0
90020ffc:	9103      	str	r1, [sp, #12]
90020ffe:	fb00 7406 	mla	r4, r0, r6, r7
90021002:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
90021006:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
9002100a:	eb02 0544 	add.w	r5, r2, r4, lsl #1
9002100e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
90021012:	eb03 0904 	add.w	r9, r3, r4
90021016:	9501      	str	r5, [sp, #4]
90021018:	f2c0 8150 	blt.w	900212bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
9002101c:	4583      	cmp	fp, r0
9002101e:	f340 814d 	ble.w	900212bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90021022:	2f00      	cmp	r7, #0
90021024:	f2c0 8146 	blt.w	900212b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90021028:	42be      	cmp	r6, r7
9002102a:	f340 8143 	ble.w	900212b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
9002102e:	f813 c004 	ldrb.w	ip, [r3, r4]
90021032:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
90021036:	f64f 041f 	movw	r4, #63519	; 0xf81f
9002103a:	ea4f 02ec 	mov.w	r2, ip, asr #3
9002103e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
90021042:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90021046:	4355      	muls	r5, r2
90021048:	fb0c f203 	mul.w	r2, ip, r3
9002104c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90021050:	f605 0501 	addw	r5, r5, #2049	; 0x801
90021054:	441d      	add	r5, r3
90021056:	f102 0320 	add.w	r3, r2, #32
9002105a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002105e:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90021062:	0a1b      	lsrs	r3, r3, #8
90021064:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90021068:	431c      	orrs	r4, r3
9002106a:	1c7b      	adds	r3, r7, #1
9002106c:	f100 812b 	bmi.w	900212c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90021070:	429e      	cmp	r6, r3
90021072:	f340 8128 	ble.w	900212c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90021076:	2900      	cmp	r1, #0
90021078:	f000 8128 	beq.w	900212cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
9002107c:	9a01      	ldr	r2, [sp, #4]
9002107e:	f899 3001 	ldrb.w	r3, [r9, #1]
90021082:	8855      	ldrh	r5, [r2, #2]
90021084:	ea4f 08e3 	mov.w	r8, r3, asr #3
90021088:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
9002108c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90021090:	fb08 f802 	mul.w	r8, r8, r2
90021094:	f64f 021f 	movw	r2, #63519	; 0xf81f
90021098:	435d      	muls	r5, r3
9002109a:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
9002109e:	f608 0801 	addw	r8, r8, #2049	; 0x801
900210a2:	44d0      	add	r8, sl
900210a4:	f105 0a20 	add.w	sl, r5, #32
900210a8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
900210ac:	ea02 1258 	and.w	r2, r2, r8, lsr #5
900210b0:	0a2d      	lsrs	r5, r5, #8
900210b2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900210b6:	432a      	orrs	r2, r5
900210b8:	3001      	adds	r0, #1
900210ba:	f100 810d 	bmi.w	900212d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
900210be:	4583      	cmp	fp, r0
900210c0:	f340 810a 	ble.w	900212d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
900210c4:	f1be 0f00 	cmp.w	lr, #0
900210c8:	f000 810b 	beq.w	900212e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
900210cc:	2f00      	cmp	r7, #0
900210ce:	f2c0 8100 	blt.w	900212d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
900210d2:	42be      	cmp	r6, r7
900210d4:	f340 80fd 	ble.w	900212d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
900210d8:	9801      	ldr	r0, [sp, #4]
900210da:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
900210de:	f819 5006 	ldrb.w	r5, [r9, r6]
900210e2:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
900210e6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
900210ea:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
900210ee:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
900210f2:	fb0a fa00 	mul.w	sl, sl, r0
900210f6:	fb05 f808 	mul.w	r8, r5, r8
900210fa:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
900210fe:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
90021102:	4482      	add	sl, r0
90021104:	f108 0020 	add.w	r0, r8, #32
90021108:	eb00 2018 	add.w	r0, r0, r8, lsr #8
9002110c:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90021110:	0a00      	lsrs	r0, r0, #8
90021112:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021116:	ea4b 0b00 	orr.w	fp, fp, r0
9002111a:	3701      	adds	r7, #1
9002111c:	f100 80e6 	bmi.w	900212ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90021120:	42be      	cmp	r6, r7
90021122:	f340 80e3 	ble.w	900212ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90021126:	2900      	cmp	r1, #0
90021128:	f000 80e3 	beq.w	900212f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
9002112c:	3601      	adds	r6, #1
9002112e:	9801      	ldr	r0, [sp, #4]
90021130:	f819 7006 	ldrb.w	r7, [r9, r6]
90021134:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90021138:	ea4f 09e7 	mov.w	r9, r7, asr #3
9002113c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
90021140:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021144:	fb09 f906 	mul.w	r9, r9, r6
90021148:	fb07 f800 	mul.w	r8, r7, r0
9002114c:	f64f 001f 	movw	r0, #63519	; 0xf81f
90021150:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90021154:	f609 0901 	addw	r9, r9, #2049	; 0x801
90021158:	44d1      	add	r9, sl
9002115a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
9002115e:	f108 0020 	add.w	r0, r8, #32
90021162:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90021166:	0a00      	lsrs	r0, r0, #8
90021168:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002116c:	4330      	orrs	r0, r6
9002116e:	b28e      	uxth	r6, r1
90021170:	fa1f f98e 	uxth.w	r9, lr
90021174:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90021178:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
9002117c:	fb06 f809 	mul.w	r8, r6, r9
90021180:	0136      	lsls	r6, r6, #4
90021182:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90021186:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
9002118a:	9601      	str	r6, [sp, #4]
9002118c:	ea4a 0404 	orr.w	r4, sl, r4
90021190:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90021194:	fa1f f689 	uxth.w	r6, r9
90021198:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002119c:	fb11 f90e 	smulbb	r9, r1, lr
900211a0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900211a4:	9602      	str	r6, [sp, #8]
900211a6:	4626      	mov	r6, r4
900211a8:	f3c9 09c7 	ubfx	r9, r9, #3, #8
900211ac:	f1ce 0410 	rsb	r4, lr, #16
900211b0:	ea4a 0202 	orr.w	r2, sl, r2
900211b4:	ea4f 4a00 	mov.w	sl, r0, lsl #16
900211b8:	1a64      	subs	r4, r4, r1
900211ba:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
900211be:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900211c2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
900211c6:	434a      	muls	r2, r1
900211c8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
900211cc:	ea4a 0000 	orr.w	r0, sl, r0
900211d0:	9903      	ldr	r1, [sp, #12]
900211d2:	fb04 2406 	mla	r4, r4, r6, r2
900211d6:	9e02      	ldr	r6, [sp, #8]
900211d8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
900211dc:	fb09 4200 	mla	r2, r9, r0, r4
900211e0:	ea4f 440b 	mov.w	r4, fp, lsl #16
900211e4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
900211e8:	8808      	ldrh	r0, [r1, #0]
900211ea:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
900211ee:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
900211f2:	ea44 0b0b 	orr.w	fp, r4, fp
900211f6:	9c01      	ldr	r4, [sp, #4]
900211f8:	b289      	uxth	r1, r1
900211fa:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
900211fe:	fb0e 2e0b 	mla	lr, lr, fp, r2
90021202:	1ba4      	subs	r4, r4, r6
90021204:	9e01      	ldr	r6, [sp, #4]
90021206:	ea4f 525e 	mov.w	r2, lr, lsr #21
9002120a:	eba6 0608 	sub.w	r6, r6, r8
9002120e:	b2a4      	uxth	r4, r4
90021210:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90021214:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90021218:	b2b6      	uxth	r6, r6
9002121a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
9002121e:	4373      	muls	r3, r6
90021220:	ea42 0e0e 	orr.w	lr, r2, lr
90021224:	fb0c 3304 	mla	r3, ip, r4, r3
90021228:	9c02      	ldr	r4, [sp, #8]
9002122a:	fa1f f28e 	uxth.w	r2, lr
9002122e:	fb04 3505 	mla	r5, r4, r5, r3
90021232:	10d4      	asrs	r4, r2, #3
90021234:	fb08 5707 	mla	r7, r8, r7, r5
90021238:	1215      	asrs	r5, r2, #8
9002123a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
9002123e:	00d2      	lsls	r2, r2, #3
90021240:	f3c7 2707 	ubfx	r7, r7, #8, #8
90021244:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90021248:	b2d2      	uxtb	r2, r2
9002124a:	434f      	muls	r7, r1
9002124c:	1c7b      	adds	r3, r7, #1
9002124e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90021252:	1203      	asrs	r3, r0, #8
90021254:	ea6f 2717 	mvn.w	r7, r7, lsr #8
90021258:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
9002125c:	b2ff      	uxtb	r7, r7
9002125e:	fb13 f307 	smulbb	r3, r3, r7
90021262:	fb05 3501 	mla	r5, r5, r1, r3
90021266:	10c3      	asrs	r3, r0, #3
90021268:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
9002126c:	b2ad      	uxth	r5, r5
9002126e:	fb13 f307 	smulbb	r3, r3, r7
90021272:	fb04 3401 	mla	r4, r4, r1, r3
90021276:	00c3      	lsls	r3, r0, #3
90021278:	b2db      	uxtb	r3, r3
9002127a:	b2a4      	uxth	r4, r4
9002127c:	fb13 f307 	smulbb	r3, r3, r7
90021280:	fb02 3101 	mla	r1, r2, r1, r3
90021284:	1c6b      	adds	r3, r5, #1
90021286:	1c62      	adds	r2, r4, #1
90021288:	b289      	uxth	r1, r1
9002128a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002128e:	1c4b      	adds	r3, r1, #1
90021290:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90021294:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90021298:	9a03      	ldr	r2, [sp, #12]
9002129a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
9002129e:	0964      	lsrs	r4, r4, #5
900212a0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900212a4:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
900212a8:	432b      	orrs	r3, r5
900212aa:	4323      	orrs	r3, r4
900212ac:	8013      	strh	r3, [r2, #0]
900212ae:	b005      	add	sp, #20
900212b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900212b4:	f04f 0c00 	mov.w	ip, #0
900212b8:	4664      	mov	r4, ip
900212ba:	e6d6      	b.n	9002106a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
900212bc:	2300      	movs	r3, #0
900212be:	469c      	mov	ip, r3
900212c0:	461a      	mov	r2, r3
900212c2:	461c      	mov	r4, r3
900212c4:	e6f8      	b.n	900210b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
900212c6:	2300      	movs	r3, #0
900212c8:	461a      	mov	r2, r3
900212ca:	e6f5      	b.n	900210b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
900212cc:	460b      	mov	r3, r1
900212ce:	460a      	mov	r2, r1
900212d0:	e6f2      	b.n	900210b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
900212d2:	2500      	movs	r5, #0
900212d4:	46ab      	mov	fp, r5
900212d6:	e720      	b.n	9002111a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
900212d8:	2700      	movs	r7, #0
900212da:	463d      	mov	r5, r7
900212dc:	4638      	mov	r0, r7
900212de:	46bb      	mov	fp, r7
900212e0:	e745      	b.n	9002116e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
900212e2:	4677      	mov	r7, lr
900212e4:	4675      	mov	r5, lr
900212e6:	4670      	mov	r0, lr
900212e8:	46f3      	mov	fp, lr
900212ea:	e740      	b.n	9002116e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
900212ec:	2700      	movs	r7, #0
900212ee:	4638      	mov	r0, r7
900212f0:	e73d      	b.n	9002116e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
900212f2:	460f      	mov	r7, r1
900212f4:	4608      	mov	r0, r1
900212f6:	e73a      	b.n	9002116e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

900212f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900212f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900212fc:	b097      	sub	sp, #92	; 0x5c
900212fe:	9214      	str	r2, [sp, #80]	; 0x50
90021300:	9308      	str	r3, [sp, #32]
90021302:	9a25      	ldr	r2, [sp, #148]	; 0x94
90021304:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
90021308:	9015      	str	r0, [sp, #84]	; 0x54
9002130a:	9312      	str	r3, [sp, #72]	; 0x48
9002130c:	6850      	ldr	r0, [r2, #4]
9002130e:	9111      	str	r1, [sp, #68]	; 0x44
90021310:	6812      	ldr	r2, [r2, #0]
90021312:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
90021316:	fb00 1303 	mla	r3, r0, r3, r1
9002131a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002131e:	9309      	str	r3, [sp, #36]	; 0x24
90021320:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90021322:	681b      	ldr	r3, [r3, #0]
90021324:	930b      	str	r3, [sp, #44]	; 0x2c
90021326:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90021328:	685b      	ldr	r3, [r3, #4]
9002132a:	930c      	str	r3, [sp, #48]	; 0x30
9002132c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90021330:	930a      	str	r3, [sp, #40]	; 0x28
90021332:	9b11      	ldr	r3, [sp, #68]	; 0x44
90021334:	2b00      	cmp	r3, #0
90021336:	dc03      	bgt.n	90021340 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90021338:	9b14      	ldr	r3, [sp, #80]	; 0x50
9002133a:	2b00      	cmp	r3, #0
9002133c:	f340 83cd 	ble.w	90021ada <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90021340:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90021342:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021346:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002134a:	1e48      	subs	r0, r1, #1
9002134c:	1e55      	subs	r5, r2, #1
9002134e:	9b08      	ldr	r3, [sp, #32]
90021350:	2b00      	cmp	r3, #0
90021352:	f340 81a5 	ble.w	900216a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
90021356:	9e21      	ldr	r6, [sp, #132]	; 0x84
90021358:	9b22      	ldr	r3, [sp, #136]	; 0x88
9002135a:	1436      	asrs	r6, r6, #16
9002135c:	ea4f 4323 	mov.w	r3, r3, asr #16
90021360:	d406      	bmi.n	90021370 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90021362:	4286      	cmp	r6, r0
90021364:	da04      	bge.n	90021370 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90021366:	2b00      	cmp	r3, #0
90021368:	db02      	blt.n	90021370 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002136a:	42ab      	cmp	r3, r5
9002136c:	f2c0 8199 	blt.w	900216a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90021370:	3601      	adds	r6, #1
90021372:	f100 8186 	bmi.w	90021682 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90021376:	42b1      	cmp	r1, r6
90021378:	f2c0 8183 	blt.w	90021682 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9002137c:	3301      	adds	r3, #1
9002137e:	f100 8180 	bmi.w	90021682 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90021382:	429a      	cmp	r2, r3
90021384:	f2c0 817d 	blt.w	90021682 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90021388:	9b08      	ldr	r3, [sp, #32]
9002138a:	f64f 061f 	movw	r6, #63519	; 0xf81f
9002138e:	9f09      	ldr	r7, [sp, #36]	; 0x24
90021390:	9313      	str	r3, [sp, #76]	; 0x4c
90021392:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90021394:	2b00      	cmp	r3, #0
90021396:	f340 81a6 	ble.w	900216e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
9002139a:	9b22      	ldr	r3, [sp, #136]	; 0x88
9002139c:	9d21      	ldr	r5, [sp, #132]	; 0x84
9002139e:	1418      	asrs	r0, r3, #16
900213a0:	9b21      	ldr	r3, [sp, #132]	; 0x84
900213a2:	142d      	asrs	r5, r5, #16
900213a4:	f3c3 3103 	ubfx	r1, r3, #12, #4
900213a8:	9b22      	ldr	r3, [sp, #136]	; 0x88
900213aa:	f3c3 3c03 	ubfx	ip, r3, #12, #4
900213ae:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900213b0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
900213b4:	f100 81fa 	bmi.w	900217ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900213b8:	f102 3eff 	add.w	lr, r2, #4294967295
900213bc:	4575      	cmp	r5, lr
900213be:	f280 81f5 	bge.w	900217ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900213c2:	2800      	cmp	r0, #0
900213c4:	f2c0 81f2 	blt.w	900217ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900213c8:	f103 3eff 	add.w	lr, r3, #4294967295
900213cc:	4570      	cmp	r0, lr
900213ce:	f280 81ed 	bge.w	900217ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900213d2:	b212      	sxth	r2, r2
900213d4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900213d6:	fa1f fe81 	uxth.w	lr, r1
900213da:	fb00 5002 	mla	r0, r0, r2, r5
900213de:	ea4f 150e 	mov.w	r5, lr, lsl #4
900213e2:	eb03 0a00 	add.w	sl, r3, r0
900213e6:	f813 9000 	ldrb.w	r9, [r3, r0]
900213ea:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
900213ee:	f89a 8001 	ldrb.w	r8, [sl, #1]
900213f2:	b29b      	uxth	r3, r3
900213f4:	f1bc 0f00 	cmp.w	ip, #0
900213f8:	f000 81bb 	beq.w	90021772 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
900213fc:	f81a 4002 	ldrb.w	r4, [sl, r2]
90021400:	eb0a 0b02 	add.w	fp, sl, r2
90021404:	fa1f fa8c 	uxth.w	sl, ip
90021408:	940d      	str	r4, [sp, #52]	; 0x34
9002140a:	fb0a fe0e 	mul.w	lr, sl, lr
9002140e:	f89b 4001 	ldrb.w	r4, [fp, #1]
90021412:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90021416:	eba5 050e 	sub.w	r5, r5, lr
9002141a:	940e      	str	r4, [sp, #56]	; 0x38
9002141c:	fa1f fa8a 	uxth.w	sl, sl
90021420:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90021422:	b2ad      	uxth	r5, r5
90021424:	eba3 030a 	sub.w	r3, r3, sl
90021428:	fb08 f505 	mul.w	r5, r8, r5
9002142c:	b29b      	uxth	r3, r3
9002142e:	fb09 5303 	mla	r3, r9, r3, r5
90021432:	fb0a 3304 	mla	r3, sl, r4, r3
90021436:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90021438:	fb0e 3304 	mla	r3, lr, r4, r3
9002143c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90021440:	2b00      	cmp	r3, #0
90021442:	f000 8111 	beq.w	90021668 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90021446:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90021448:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9002144c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90021450:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90021454:	f000 8192 	beq.w	9002177c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
90021458:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
9002145c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90021460:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021464:	fb0a fe0e 	mul.w	lr, sl, lr
90021468:	fb09 f000 	mul.w	r0, r9, r0
9002146c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90021470:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
90021474:	f100 0b20 	add.w	fp, r0, #32
90021478:	44ce      	add	lr, r9
9002147a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
9002147e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90021482:	ea4f 2919 	mov.w	r9, r9, lsr #8
90021486:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9002148a:	ea4e 0909 	orr.w	r9, lr, r9
9002148e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90021492:	8868      	ldrh	r0, [r5, #2]
90021494:	d019      	beq.n	900214ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
90021496:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
9002149a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
9002149e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900214a2:	fb0a fe0e 	mul.w	lr, sl, lr
900214a6:	fb08 f800 	mul.w	r8, r8, r0
900214aa:	ea06 105e 	and.w	r0, r6, lr, lsr #5
900214ae:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
900214b2:	f108 0b20 	add.w	fp, r8, #32
900214b6:	4486      	add	lr, r0
900214b8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
900214bc:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900214c0:	0a00      	lsrs	r0, r0, #8
900214c2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900214c6:	ea4e 0000 	orr.w	r0, lr, r0
900214ca:	ea4f 4e09 	mov.w	lr, r9, lsl #16
900214ce:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
900214d2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
900214d6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
900214da:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
900214de:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900214e2:	ea4e 0909 	orr.w	r9, lr, r9
900214e6:	ea4a 0000 	orr.w	r0, sl, r0
900214ea:	f1bc 0f00 	cmp.w	ip, #0
900214ee:	f000 8147 	beq.w	90021780 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
900214f2:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
900214f6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900214f8:	3a01      	subs	r2, #1
900214fa:	2cff      	cmp	r4, #255	; 0xff
900214fc:	ea4f 0242 	mov.w	r2, r2, lsl #1
90021500:	f102 0202 	add.w	r2, r2, #2
90021504:	eb05 0e02 	add.w	lr, r5, r2
90021508:	5aaa      	ldrh	r2, [r5, r2]
9002150a:	d018      	beq.n	9002153e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
9002150c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
90021510:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90021514:	ea4f 08e4 	mov.w	r8, r4, asr #3
90021518:	fb04 fa02 	mul.w	sl, r4, r2
9002151c:	fb08 f805 	mul.w	r8, r8, r5
90021520:	f10a 0520 	add.w	r5, sl, #32
90021524:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90021528:	f608 0801 	addw	r8, r8, #2049	; 0x801
9002152c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90021530:	4442      	add	r2, r8
90021532:	0a2d      	lsrs	r5, r5, #8
90021534:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90021538:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9002153c:	432a      	orrs	r2, r5
9002153e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90021540:	f8be 5002 	ldrh.w	r5, [lr, #2]
90021544:	2cff      	cmp	r4, #255	; 0xff
90021546:	d01a      	beq.n	9002157e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
90021548:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
9002154c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90021550:	ea4f 08e4 	mov.w	r8, r4, asr #3
90021554:	fb04 fa05 	mul.w	sl, r4, r5
90021558:	fb08 f80e 	mul.w	r8, r8, lr
9002155c:	f10a 0e20 	add.w	lr, sl, #32
90021560:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90021564:	f608 0801 	addw	r8, r8, #2049	; 0x801
90021568:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
9002156c:	4445      	add	r5, r8
9002156e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90021572:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90021576:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
9002157a:	ea45 050e 	orr.w	r5, r5, lr
9002157e:	fb1c fe01 	smulbb	lr, ip, r1
90021582:	f1cc 0810 	rsb	r8, ip, #16
90021586:	ea4f 4a02 	mov.w	sl, r2, lsl #16
9002158a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002158e:	ea4f 0eee 	mov.w	lr, lr, asr #3
90021592:	eba8 0801 	sub.w	r8, r8, r1
90021596:	ea4f 4b05 	mov.w	fp, r5, lsl #16
9002159a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9002159e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
900215a2:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
900215a6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
900215aa:	ea4a 0202 	orr.w	r2, sl, r2
900215ae:	4341      	muls	r1, r0
900215b0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
900215b4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
900215b8:	fb09 1108 	mla	r1, r9, r8, r1
900215bc:	ea4b 0505 	orr.w	r5, fp, r5
900215c0:	fb0c 1102 	mla	r1, ip, r2, r1
900215c4:	fb0e 1e05 	mla	lr, lr, r5, r1
900215c8:	ea4f 525e 	mov.w	r2, lr, lsr #21
900215cc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
900215d0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900215d4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
900215d8:	ea42 0e0e 	orr.w	lr, r2, lr
900215dc:	fa1f f28e 	uxth.w	r2, lr
900215e0:	2bff      	cmp	r3, #255	; 0xff
900215e2:	d103      	bne.n	900215ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900215e4:	9912      	ldr	r1, [sp, #72]	; 0x48
900215e6:	29ff      	cmp	r1, #255	; 0xff
900215e8:	f000 80de 	beq.w	900217a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
900215ec:	990a      	ldr	r1, [sp, #40]	; 0x28
900215ee:	1215      	asrs	r5, r2, #8
900215f0:	8838      	ldrh	r0, [r7, #0]
900215f2:	434b      	muls	r3, r1
900215f4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
900215f8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900215fa:	f103 0c01 	add.w	ip, r3, #1
900215fe:	eb0c 2323 	add.w	r3, ip, r3, asr #8
90021602:	ea6f 2323 	mvn.w	r3, r3, asr #8
90021606:	fa5f fc83 	uxtb.w	ip, r3
9002160a:	1203      	asrs	r3, r0, #8
9002160c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90021610:	fb13 f30c 	smulbb	r3, r3, ip
90021614:	fb05 3501 	mla	r5, r5, r1, r3
90021618:	10c3      	asrs	r3, r0, #3
9002161a:	10d1      	asrs	r1, r2, #3
9002161c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90021620:	00d2      	lsls	r2, r2, #3
90021622:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90021626:	b2ad      	uxth	r5, r5
90021628:	fb13 f30c 	smulbb	r3, r3, ip
9002162c:	b2d2      	uxtb	r2, r2
9002162e:	fb01 3104 	mla	r1, r1, r4, r3
90021632:	00c3      	lsls	r3, r0, #3
90021634:	b2db      	uxtb	r3, r3
90021636:	b289      	uxth	r1, r1
90021638:	fb13 f30c 	smulbb	r3, r3, ip
9002163c:	fb02 3304 	mla	r3, r2, r4, r3
90021640:	b29a      	uxth	r2, r3
90021642:	1c6b      	adds	r3, r5, #1
90021644:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90021648:	1c53      	adds	r3, r2, #1
9002164a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002164e:	1c4a      	adds	r2, r1, #1
90021650:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90021654:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90021658:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002165c:	0949      	lsrs	r1, r1, #5
9002165e:	432b      	orrs	r3, r5
90021660:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90021664:	430b      	orrs	r3, r1
90021666:	803b      	strh	r3, [r7, #0]
90021668:	9b21      	ldr	r3, [sp, #132]	; 0x84
9002166a:	3702      	adds	r7, #2
9002166c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
9002166e:	4413      	add	r3, r2
90021670:	9a22      	ldr	r2, [sp, #136]	; 0x88
90021672:	9321      	str	r3, [sp, #132]	; 0x84
90021674:	9b24      	ldr	r3, [sp, #144]	; 0x90
90021676:	441a      	add	r2, r3
90021678:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9002167a:	3b01      	subs	r3, #1
9002167c:	9222      	str	r2, [sp, #136]	; 0x88
9002167e:	9313      	str	r3, [sp, #76]	; 0x4c
90021680:	e687      	b.n	90021392 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90021682:	9b21      	ldr	r3, [sp, #132]	; 0x84
90021684:	9e23      	ldr	r6, [sp, #140]	; 0x8c
90021686:	9c22      	ldr	r4, [sp, #136]	; 0x88
90021688:	4433      	add	r3, r6
9002168a:	9321      	str	r3, [sp, #132]	; 0x84
9002168c:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002168e:	441c      	add	r4, r3
90021690:	9b08      	ldr	r3, [sp, #32]
90021692:	3b01      	subs	r3, #1
90021694:	9422      	str	r4, [sp, #136]	; 0x88
90021696:	9308      	str	r3, [sp, #32]
90021698:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002169a:	3302      	adds	r3, #2
9002169c:	9309      	str	r3, [sp, #36]	; 0x24
9002169e:	e656      	b.n	9002134e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
900216a0:	d028      	beq.n	900216f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
900216a2:	9b08      	ldr	r3, [sp, #32]
900216a4:	9823      	ldr	r0, [sp, #140]	; 0x8c
900216a6:	3b01      	subs	r3, #1
900216a8:	9d21      	ldr	r5, [sp, #132]	; 0x84
900216aa:	fb00 5003 	mla	r0, r0, r3, r5
900216ae:	1400      	asrs	r0, r0, #16
900216b0:	f53f ae6a 	bmi.w	90021388 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900216b4:	3901      	subs	r1, #1
900216b6:	4288      	cmp	r0, r1
900216b8:	f6bf ae66 	bge.w	90021388 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900216bc:	9924      	ldr	r1, [sp, #144]	; 0x90
900216be:	9822      	ldr	r0, [sp, #136]	; 0x88
900216c0:	fb01 0303 	mla	r3, r1, r3, r0
900216c4:	141b      	asrs	r3, r3, #16
900216c6:	f53f ae5f 	bmi.w	90021388 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900216ca:	3a01      	subs	r2, #1
900216cc:	4293      	cmp	r3, r2
900216ce:	f6bf ae5b 	bge.w	90021388 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900216d2:	9b08      	ldr	r3, [sp, #32]
900216d4:	f64f 061f 	movw	r6, #63519	; 0xf81f
900216d8:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
900216dc:	9313      	str	r3, [sp, #76]	; 0x4c
900216de:	9b13      	ldr	r3, [sp, #76]	; 0x4c
900216e0:	2b00      	cmp	r3, #0
900216e2:	f300 8082 	bgt.w	900217ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
900216e6:	9b08      	ldr	r3, [sp, #32]
900216e8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900216ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
900216ee:	eb03 0344 	add.w	r3, r3, r4, lsl #1
900216f2:	9309      	str	r3, [sp, #36]	; 0x24
900216f4:	9b11      	ldr	r3, [sp, #68]	; 0x44
900216f6:	2b00      	cmp	r3, #0
900216f8:	f340 81ef 	ble.w	90021ada <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
900216fc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90021700:	9b20      	ldr	r3, [sp, #128]	; 0x80
90021702:	ee30 0a04 	vadd.f32	s0, s0, s8
90021706:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002170a:	eef0 6a62 	vmov.f32	s13, s5
9002170e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90021712:	ee31 1a05 	vadd.f32	s2, s2, s10
90021716:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002171a:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
9002171e:	eef0 6a43 	vmov.f32	s13, s6
90021722:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021726:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
9002172a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002172e:	ee61 7a27 	vmul.f32	s15, s2, s15
90021732:	ee77 2a62 	vsub.f32	s5, s14, s5
90021736:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002173a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002173e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90021742:	ee12 2a90 	vmov	r2, s5
90021746:	eef0 2a47 	vmov.f32	s5, s14
9002174a:	fb92 f3f3 	sdiv	r3, r2, r3
9002174e:	ee13 2a10 	vmov	r2, s6
90021752:	9323      	str	r3, [sp, #140]	; 0x8c
90021754:	9b20      	ldr	r3, [sp, #128]	; 0x80
90021756:	eeb0 3a67 	vmov.f32	s6, s15
9002175a:	fb92 f3f3 	sdiv	r3, r2, r3
9002175e:	9324      	str	r3, [sp, #144]	; 0x90
90021760:	9b11      	ldr	r3, [sp, #68]	; 0x44
90021762:	9a14      	ldr	r2, [sp, #80]	; 0x50
90021764:	3b01      	subs	r3, #1
90021766:	9311      	str	r3, [sp, #68]	; 0x44
90021768:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002176a:	bf08      	it	eq
9002176c:	4613      	moveq	r3, r2
9002176e:	9308      	str	r3, [sp, #32]
90021770:	e5df      	b.n	90021332 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90021772:	fb08 f505 	mul.w	r5, r8, r5
90021776:	fb09 5303 	mla	r3, r9, r3, r5
9002177a:	e65f      	b.n	9002143c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
9002177c:	4681      	mov	r9, r0
9002177e:	e686      	b.n	9002148e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90021780:	f1c1 0210 	rsb	r2, r1, #16
90021784:	4341      	muls	r1, r0
90021786:	fb09 1902 	mla	r9, r9, r2, r1
9002178a:	ea4f 0949 	mov.w	r9, r9, lsl #1
9002178e:	ea4f 5259 	mov.w	r2, r9, lsr #21
90021792:	ea4f 1959 	mov.w	r9, r9, lsr #5
90021796:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002179a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
9002179e:	ea42 0909 	orr.w	r9, r2, r9
900217a2:	fa1f f289 	uxth.w	r2, r9
900217a6:	e71b      	b.n	900215e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
900217a8:	803a      	strh	r2, [r7, #0]
900217aa:	e75d      	b.n	90021668 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900217ac:	f115 0e01 	adds.w	lr, r5, #1
900217b0:	f53f af5a 	bmi.w	90021668 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900217b4:	4572      	cmp	r2, lr
900217b6:	f6ff af57 	blt.w	90021668 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900217ba:	f110 0e01 	adds.w	lr, r0, #1
900217be:	f53f af53 	bmi.w	90021668 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900217c2:	4573      	cmp	r3, lr
900217c4:	f6ff af50 	blt.w	90021668 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900217c8:	9c12      	ldr	r4, [sp, #72]	; 0x48
900217ca:	b21b      	sxth	r3, r3
900217cc:	b212      	sxth	r2, r2
900217ce:	9502      	str	r5, [sp, #8]
900217d0:	9301      	str	r3, [sp, #4]
900217d2:	9200      	str	r2, [sp, #0]
900217d4:	e9cd 0103 	strd	r0, r1, [sp, #12]
900217d8:	e9cd c405 	strd	ip, r4, [sp, #20]
900217dc:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
900217e0:	4639      	mov	r1, r7
900217e2:	9815      	ldr	r0, [sp, #84]	; 0x54
900217e4:	f7ff fc02 	bl	90020fec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
900217e8:	e73e      	b.n	90021668 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900217ea:	9b21      	ldr	r3, [sp, #132]	; 0x84
900217ec:	f3c3 3203 	ubfx	r2, r3, #12, #4
900217f0:	9b22      	ldr	r3, [sp, #136]	; 0x88
900217f2:	f3c3 3503 	ubfx	r5, r3, #12, #4
900217f6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900217f8:	fa1f fc82 	uxth.w	ip, r2
900217fc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021800:	9b22      	ldr	r3, [sp, #136]	; 0x88
90021802:	ea4f 100c 	mov.w	r0, ip, lsl #4
90021806:	141f      	asrs	r7, r3, #16
90021808:	9b21      	ldr	r3, [sp, #132]	; 0x84
9002180a:	141b      	asrs	r3, r3, #16
9002180c:	fb01 3707 	mla	r7, r1, r7, r3
90021810:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90021812:	eb03 0a07 	add.w	sl, r3, r7
90021816:	f813 9007 	ldrb.w	r9, [r3, r7]
9002181a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
9002181e:	f89a 8001 	ldrb.w	r8, [sl, #1]
90021822:	b29b      	uxth	r3, r3
90021824:	2d00      	cmp	r5, #0
90021826:	f000 813d 	beq.w	90021aa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
9002182a:	f81a 4001 	ldrb.w	r4, [sl, r1]
9002182e:	eb0a 0b01 	add.w	fp, sl, r1
90021832:	fa1f fa85 	uxth.w	sl, r5
90021836:	940f      	str	r4, [sp, #60]	; 0x3c
90021838:	fb0a fc0c 	mul.w	ip, sl, ip
9002183c:	f89b 4001 	ldrb.w	r4, [fp, #1]
90021840:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90021844:	eba0 000c 	sub.w	r0, r0, ip
90021848:	9410      	str	r4, [sp, #64]	; 0x40
9002184a:	fa1f fa8a 	uxth.w	sl, sl
9002184e:	b280      	uxth	r0, r0
90021850:	eba3 030a 	sub.w	r3, r3, sl
90021854:	fb08 f000 	mul.w	r0, r8, r0
90021858:	b29b      	uxth	r3, r3
9002185a:	fb09 0303 	mla	r3, r9, r3, r0
9002185e:	980f      	ldr	r0, [sp, #60]	; 0x3c
90021860:	fb0a 3300 	mla	r3, sl, r0, r3
90021864:	fb0c 3304 	mla	r3, ip, r4, r3
90021868:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002186c:	2b00      	cmp	r3, #0
9002186e:	f000 810b 	beq.w	90021a88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90021872:	980b      	ldr	r0, [sp, #44]	; 0x2c
90021874:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90021878:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9002187a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
9002187e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90021882:	f000 8114 	beq.w	90021aae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
90021886:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
9002188a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
9002188e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90021892:	fb0a fc0c 	mul.w	ip, sl, ip
90021896:	fb09 f707 	mul.w	r7, r9, r7
9002189a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
9002189e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
900218a2:	f107 0b20 	add.w	fp, r7, #32
900218a6:	44cc      	add	ip, r9
900218a8:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
900218ac:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
900218b0:	ea4f 2919 	mov.w	r9, r9, lsr #8
900218b4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
900218b8:	ea4c 0909 	orr.w	r9, ip, r9
900218bc:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
900218c0:	8847      	ldrh	r7, [r0, #2]
900218c2:	d019      	beq.n	900218f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
900218c4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
900218c8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
900218cc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900218d0:	fb0a fc0c 	mul.w	ip, sl, ip
900218d4:	fb08 f807 	mul.w	r8, r8, r7
900218d8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
900218dc:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
900218e0:	f108 0b20 	add.w	fp, r8, #32
900218e4:	44bc      	add	ip, r7
900218e6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
900218ea:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
900218ee:	0a3f      	lsrs	r7, r7, #8
900218f0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900218f4:	ea4c 0707 	orr.w	r7, ip, r7
900218f8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
900218fc:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90021900:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90021904:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90021908:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9002190c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90021910:	ea4c 0909 	orr.w	r9, ip, r9
90021914:	ea4a 0707 	orr.w	r7, sl, r7
90021918:	2d00      	cmp	r5, #0
9002191a:	f000 80ca 	beq.w	90021ab2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
9002191e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
90021922:	3901      	subs	r1, #1
90021924:	0049      	lsls	r1, r1, #1
90021926:	3102      	adds	r1, #2
90021928:	eb00 0c01 	add.w	ip, r0, r1
9002192c:	5a41      	ldrh	r1, [r0, r1]
9002192e:	980f      	ldr	r0, [sp, #60]	; 0x3c
90021930:	28ff      	cmp	r0, #255	; 0xff
90021932:	d019      	beq.n	90021968 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
90021934:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
90021938:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9002193a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9002193e:	ea4f 08e4 	mov.w	r8, r4, asr #3
90021942:	fb04 fa01 	mul.w	sl, r4, r1
90021946:	fb08 f800 	mul.w	r8, r8, r0
9002194a:	f10a 0020 	add.w	r0, sl, #32
9002194e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90021952:	f608 0801 	addw	r8, r8, #2049	; 0x801
90021956:	eb00 201a 	add.w	r0, r0, sl, lsr #8
9002195a:	4441      	add	r1, r8
9002195c:	0a00      	lsrs	r0, r0, #8
9002195e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90021962:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021966:	4301      	orrs	r1, r0
90021968:	9c10      	ldr	r4, [sp, #64]	; 0x40
9002196a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
9002196e:	2cff      	cmp	r4, #255	; 0xff
90021970:	d01a      	beq.n	900219a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
90021972:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
90021976:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002197a:	ea4f 08e4 	mov.w	r8, r4, asr #3
9002197e:	fb04 fa00 	mul.w	sl, r4, r0
90021982:	fb08 f80c 	mul.w	r8, r8, ip
90021986:	f10a 0c20 	add.w	ip, sl, #32
9002198a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
9002198e:	f608 0801 	addw	r8, r8, #2049	; 0x801
90021992:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90021996:	4440      	add	r0, r8
90021998:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002199c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
900219a0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
900219a4:	ea40 000c 	orr.w	r0, r0, ip
900219a8:	fb15 fc02 	smulbb	ip, r5, r2
900219ac:	f1c5 0810 	rsb	r8, r5, #16
900219b0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
900219b4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
900219b8:	ea4f 0cec 	mov.w	ip, ip, asr #3
900219bc:	eba8 0802 	sub.w	r8, r8, r2
900219c0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
900219c4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900219c8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
900219cc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
900219d0:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
900219d4:	ea4a 0101 	orr.w	r1, sl, r1
900219d8:	437a      	muls	r2, r7
900219da:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
900219de:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
900219e2:	fb09 2208 	mla	r2, r9, r8, r2
900219e6:	ea4b 0000 	orr.w	r0, fp, r0
900219ea:	fb05 2201 	mla	r2, r5, r1, r2
900219ee:	fb0c 2200 	mla	r2, ip, r0, r2
900219f2:	0d57      	lsrs	r7, r2, #21
900219f4:	0952      	lsrs	r2, r2, #5
900219f6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900219fa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900219fe:	433a      	orrs	r2, r7
90021a00:	2bff      	cmp	r3, #255	; 0xff
90021a02:	b292      	uxth	r2, r2
90021a04:	d102      	bne.n	90021a0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90021a06:	9912      	ldr	r1, [sp, #72]	; 0x48
90021a08:	29ff      	cmp	r1, #255	; 0xff
90021a0a:	d063      	beq.n	90021ad4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
90021a0c:	980a      	ldr	r0, [sp, #40]	; 0x28
90021a0e:	1215      	asrs	r5, r2, #8
90021a10:	f8be 1000 	ldrh.w	r1, [lr]
90021a14:	4343      	muls	r3, r0
90021a16:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90021a18:	10cf      	asrs	r7, r1, #3
90021a1a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90021a1e:	1c58      	adds	r0, r3, #1
90021a20:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90021a24:	eb00 2323 	add.w	r3, r0, r3, asr #8
90021a28:	1208      	asrs	r0, r1, #8
90021a2a:	ea6f 2323 	mvn.w	r3, r3, asr #8
90021a2e:	00c9      	lsls	r1, r1, #3
90021a30:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90021a34:	b2db      	uxtb	r3, r3
90021a36:	b2c9      	uxtb	r1, r1
90021a38:	fb10 f003 	smulbb	r0, r0, r3
90021a3c:	fb11 f103 	smulbb	r1, r1, r3
90021a40:	fb05 0504 	mla	r5, r5, r4, r0
90021a44:	10d0      	asrs	r0, r2, #3
90021a46:	fb17 f703 	smulbb	r7, r7, r3
90021a4a:	00d2      	lsls	r2, r2, #3
90021a4c:	b2ad      	uxth	r5, r5
90021a4e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90021a52:	b2d2      	uxtb	r2, r2
90021a54:	fb00 7004 	mla	r0, r0, r4, r7
90021a58:	1c6b      	adds	r3, r5, #1
90021a5a:	fb02 1204 	mla	r2, r2, r4, r1
90021a5e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90021a62:	b292      	uxth	r2, r2
90021a64:	b280      	uxth	r0, r0
90021a66:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90021a6a:	1c57      	adds	r7, r2, #1
90021a6c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90021a70:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90021a74:	433d      	orrs	r5, r7
90021a76:	1c47      	adds	r7, r0, #1
90021a78:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90021a7c:	097f      	lsrs	r7, r7, #5
90021a7e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90021a82:	433d      	orrs	r5, r7
90021a84:	f8ae 5000 	strh.w	r5, [lr]
90021a88:	9b21      	ldr	r3, [sp, #132]	; 0x84
90021a8a:	f10e 0e02 	add.w	lr, lr, #2
90021a8e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
90021a90:	4413      	add	r3, r2
90021a92:	9a22      	ldr	r2, [sp, #136]	; 0x88
90021a94:	9321      	str	r3, [sp, #132]	; 0x84
90021a96:	9b24      	ldr	r3, [sp, #144]	; 0x90
90021a98:	441a      	add	r2, r3
90021a9a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90021a9c:	3b01      	subs	r3, #1
90021a9e:	9222      	str	r2, [sp, #136]	; 0x88
90021aa0:	9313      	str	r3, [sp, #76]	; 0x4c
90021aa2:	e61c      	b.n	900216de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90021aa4:	fb08 f000 	mul.w	r0, r8, r0
90021aa8:	fb09 0303 	mla	r3, r9, r3, r0
90021aac:	e6dc      	b.n	90021868 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
90021aae:	46b9      	mov	r9, r7
90021ab0:	e704      	b.n	900218bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
90021ab2:	f1c2 0110 	rsb	r1, r2, #16
90021ab6:	437a      	muls	r2, r7
90021ab8:	fb09 2901 	mla	r9, r9, r1, r2
90021abc:	ea4f 0949 	mov.w	r9, r9, lsl #1
90021ac0:	ea4f 5059 	mov.w	r0, r9, lsr #21
90021ac4:	ea4f 1259 	mov.w	r2, r9, lsr #5
90021ac8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021acc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90021ad0:	4302      	orrs	r2, r0
90021ad2:	e795      	b.n	90021a00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
90021ad4:	f8ae 2000 	strh.w	r2, [lr]
90021ad8:	e7d6      	b.n	90021a88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90021ada:	b017      	add	sp, #92	; 0x5c
90021adc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90021ae0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90021ae0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021ae4:	b085      	sub	sp, #20
90021ae6:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
90021aea:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
90021aee:	2800      	cmp	r0, #0
90021af0:	9103      	str	r1, [sp, #12]
90021af2:	fb00 7406 	mla	r4, r0, r6, r7
90021af6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
90021afa:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
90021afe:	eb03 0544 	add.w	r5, r3, r4, lsl #1
90021b02:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
90021b06:	eb02 0904 	add.w	r9, r2, r4
90021b0a:	9501      	str	r5, [sp, #4]
90021b0c:	f2c0 8141 	blt.w	90021d92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90021b10:	4583      	cmp	fp, r0
90021b12:	f340 813e 	ble.w	90021d92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90021b16:	2f00      	cmp	r7, #0
90021b18:	f2c0 8137 	blt.w	90021d8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90021b1c:	42be      	cmp	r6, r7
90021b1e:	f340 8134 	ble.w	90021d8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90021b22:	f812 c004 	ldrb.w	ip, [r2, r4]
90021b26:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
90021b2a:	f64f 041f 	movw	r4, #63519	; 0xf81f
90021b2e:	ea4f 02ec 	mov.w	r2, ip, asr #3
90021b32:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
90021b36:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90021b3a:	4355      	muls	r5, r2
90021b3c:	fb0c f203 	mul.w	r2, ip, r3
90021b40:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90021b44:	f605 0501 	addw	r5, r5, #2049	; 0x801
90021b48:	441d      	add	r5, r3
90021b4a:	f102 0320 	add.w	r3, r2, #32
90021b4e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90021b52:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90021b56:	0a1b      	lsrs	r3, r3, #8
90021b58:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90021b5c:	431c      	orrs	r4, r3
90021b5e:	1c7b      	adds	r3, r7, #1
90021b60:	f100 811c 	bmi.w	90021d9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90021b64:	429e      	cmp	r6, r3
90021b66:	f340 8119 	ble.w	90021d9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90021b6a:	2900      	cmp	r1, #0
90021b6c:	f000 8119 	beq.w	90021da2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
90021b70:	9a01      	ldr	r2, [sp, #4]
90021b72:	f899 3001 	ldrb.w	r3, [r9, #1]
90021b76:	8855      	ldrh	r5, [r2, #2]
90021b78:	ea4f 08e3 	mov.w	r8, r3, asr #3
90021b7c:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
90021b80:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90021b84:	fb08 f802 	mul.w	r8, r8, r2
90021b88:	f64f 021f 	movw	r2, #63519	; 0xf81f
90021b8c:	435d      	muls	r5, r3
90021b8e:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90021b92:	f608 0801 	addw	r8, r8, #2049	; 0x801
90021b96:	44d0      	add	r8, sl
90021b98:	f105 0a20 	add.w	sl, r5, #32
90021b9c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90021ba0:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90021ba4:	0a2d      	lsrs	r5, r5, #8
90021ba6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90021baa:	432a      	orrs	r2, r5
90021bac:	3001      	adds	r0, #1
90021bae:	f100 80fe 	bmi.w	90021dae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90021bb2:	4583      	cmp	fp, r0
90021bb4:	f340 80fb 	ble.w	90021dae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90021bb8:	f1be 0f00 	cmp.w	lr, #0
90021bbc:	f000 80fc 	beq.w	90021db8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
90021bc0:	2f00      	cmp	r7, #0
90021bc2:	f2c0 80f1 	blt.w	90021da8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90021bc6:	42be      	cmp	r6, r7
90021bc8:	f340 80ee 	ble.w	90021da8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90021bcc:	9801      	ldr	r0, [sp, #4]
90021bce:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
90021bd2:	f819 5006 	ldrb.w	r5, [r9, r6]
90021bd6:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90021bda:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90021bde:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
90021be2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
90021be6:	fb0a fa00 	mul.w	sl, sl, r0
90021bea:	fb05 f808 	mul.w	r8, r5, r8
90021bee:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90021bf2:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
90021bf6:	4482      	add	sl, r0
90021bf8:	f108 0020 	add.w	r0, r8, #32
90021bfc:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90021c00:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90021c04:	0a00      	lsrs	r0, r0, #8
90021c06:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021c0a:	ea4b 0b00 	orr.w	fp, fp, r0
90021c0e:	3701      	adds	r7, #1
90021c10:	f100 80d7 	bmi.w	90021dc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90021c14:	42be      	cmp	r6, r7
90021c16:	f340 80d4 	ble.w	90021dc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90021c1a:	2900      	cmp	r1, #0
90021c1c:	f000 80d4 	beq.w	90021dc8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
90021c20:	3601      	adds	r6, #1
90021c22:	9801      	ldr	r0, [sp, #4]
90021c24:	f819 7006 	ldrb.w	r7, [r9, r6]
90021c28:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90021c2c:	ea4f 09e7 	mov.w	r9, r7, asr #3
90021c30:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
90021c34:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021c38:	fb09 f906 	mul.w	r9, r9, r6
90021c3c:	fb07 f800 	mul.w	r8, r7, r0
90021c40:	f64f 001f 	movw	r0, #63519	; 0xf81f
90021c44:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90021c48:	f609 0901 	addw	r9, r9, #2049	; 0x801
90021c4c:	44d1      	add	r9, sl
90021c4e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
90021c52:	f108 0020 	add.w	r0, r8, #32
90021c56:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90021c5a:	0a00      	lsrs	r0, r0, #8
90021c5c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021c60:	4330      	orrs	r0, r6
90021c62:	b28e      	uxth	r6, r1
90021c64:	fa1f f98e 	uxth.w	r9, lr
90021c68:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90021c6c:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
90021c70:	fb06 f809 	mul.w	r8, r6, r9
90021c74:	0136      	lsls	r6, r6, #4
90021c76:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90021c7a:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90021c7e:	9601      	str	r6, [sp, #4]
90021c80:	ea4a 0404 	orr.w	r4, sl, r4
90021c84:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90021c88:	fa1f f689 	uxth.w	r6, r9
90021c8c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90021c90:	fb11 f90e 	smulbb	r9, r1, lr
90021c94:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90021c98:	9602      	str	r6, [sp, #8]
90021c9a:	4626      	mov	r6, r4
90021c9c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90021ca0:	f1ce 0410 	rsb	r4, lr, #16
90021ca4:	ea4a 0202 	orr.w	r2, sl, r2
90021ca8:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90021cac:	1a64      	subs	r4, r4, r1
90021cae:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90021cb2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90021cb6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90021cba:	434a      	muls	r2, r1
90021cbc:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90021cc0:	ea4a 0000 	orr.w	r0, sl, r0
90021cc4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90021cc8:	fb04 2406 	mla	r4, r4, r6, r2
90021ccc:	9903      	ldr	r1, [sp, #12]
90021cce:	fb09 4200 	mla	r2, r9, r0, r4
90021cd2:	ea4f 440b 	mov.w	r4, fp, lsl #16
90021cd6:	9801      	ldr	r0, [sp, #4]
90021cd8:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
90021cdc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90021ce0:	8809      	ldrh	r1, [r1, #0]
90021ce2:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
90021ce6:	ea44 0b0b 	orr.w	fp, r4, fp
90021cea:	9c02      	ldr	r4, [sp, #8]
90021cec:	1b00      	subs	r0, r0, r4
90021cee:	9c01      	ldr	r4, [sp, #4]
90021cf0:	fb0e 2e0b 	mla	lr, lr, fp, r2
90021cf4:	eba4 0608 	sub.w	r6, r4, r8
90021cf8:	b280      	uxth	r0, r0
90021cfa:	ea4f 525e 	mov.w	r2, lr, lsr #21
90021cfe:	b2b6      	uxth	r6, r6
90021d00:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90021d04:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90021d08:	4373      	muls	r3, r6
90021d0a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90021d0e:	fb0c 3300 	mla	r3, ip, r0, r3
90021d12:	9802      	ldr	r0, [sp, #8]
90021d14:	ea42 0e0e 	orr.w	lr, r2, lr
90021d18:	fb00 3505 	mla	r5, r0, r5, r3
90021d1c:	120b      	asrs	r3, r1, #8
90021d1e:	10c8      	asrs	r0, r1, #3
90021d20:	fb08 5707 	mla	r7, r8, r7, r5
90021d24:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90021d28:	00c9      	lsls	r1, r1, #3
90021d2a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90021d2e:	ea6f 2727 	mvn.w	r7, r7, asr #8
90021d32:	fa1f f28e 	uxth.w	r2, lr
90021d36:	b2c9      	uxtb	r1, r1
90021d38:	b2ff      	uxtb	r7, r7
90021d3a:	437b      	muls	r3, r7
90021d3c:	4378      	muls	r0, r7
90021d3e:	434f      	muls	r7, r1
90021d40:	1c59      	adds	r1, r3, #1
90021d42:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90021d46:	1213      	asrs	r3, r2, #8
90021d48:	f023 0307 	bic.w	r3, r3, #7
90021d4c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90021d50:	1c41      	adds	r1, r0, #1
90021d52:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90021d56:	10d1      	asrs	r1, r2, #3
90021d58:	021b      	lsls	r3, r3, #8
90021d5a:	f021 0103 	bic.w	r1, r1, #3
90021d5e:	00d2      	lsls	r2, r2, #3
90021d60:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
90021d64:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90021d68:	00c9      	lsls	r1, r1, #3
90021d6a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90021d6e:	430b      	orrs	r3, r1
90021d70:	1c79      	adds	r1, r7, #1
90021d72:	eb01 2717 	add.w	r7, r1, r7, lsr #8
90021d76:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90021d7a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90021d7e:	431a      	orrs	r2, r3
90021d80:	9b03      	ldr	r3, [sp, #12]
90021d82:	801a      	strh	r2, [r3, #0]
90021d84:	b005      	add	sp, #20
90021d86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021d8a:	f04f 0c00 	mov.w	ip, #0
90021d8e:	4664      	mov	r4, ip
90021d90:	e6e5      	b.n	90021b5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
90021d92:	2300      	movs	r3, #0
90021d94:	469c      	mov	ip, r3
90021d96:	461a      	mov	r2, r3
90021d98:	461c      	mov	r4, r3
90021d9a:	e707      	b.n	90021bac <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90021d9c:	2300      	movs	r3, #0
90021d9e:	461a      	mov	r2, r3
90021da0:	e704      	b.n	90021bac <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90021da2:	460b      	mov	r3, r1
90021da4:	460a      	mov	r2, r1
90021da6:	e701      	b.n	90021bac <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90021da8:	2500      	movs	r5, #0
90021daa:	46ab      	mov	fp, r5
90021dac:	e72f      	b.n	90021c0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
90021dae:	2700      	movs	r7, #0
90021db0:	463d      	mov	r5, r7
90021db2:	4638      	mov	r0, r7
90021db4:	46bb      	mov	fp, r7
90021db6:	e754      	b.n	90021c62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90021db8:	4677      	mov	r7, lr
90021dba:	4675      	mov	r5, lr
90021dbc:	4670      	mov	r0, lr
90021dbe:	46f3      	mov	fp, lr
90021dc0:	e74f      	b.n	90021c62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90021dc2:	2700      	movs	r7, #0
90021dc4:	4638      	mov	r0, r7
90021dc6:	e74c      	b.n	90021c62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90021dc8:	460f      	mov	r7, r1
90021dca:	4608      	mov	r0, r1
90021dcc:	e749      	b.n	90021c62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

90021dd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90021dd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021dd4:	b093      	sub	sp, #76	; 0x4c
90021dd6:	9210      	str	r2, [sp, #64]	; 0x40
90021dd8:	9a21      	ldr	r2, [sp, #132]	; 0x84
90021dda:	9011      	str	r0, [sp, #68]	; 0x44
90021ddc:	910e      	str	r1, [sp, #56]	; 0x38
90021dde:	6850      	ldr	r0, [r2, #4]
90021de0:	9306      	str	r3, [sp, #24]
90021de2:	6812      	ldr	r2, [r2, #0]
90021de4:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
90021de8:	fb00 1303 	mla	r3, r0, r3, r1
90021dec:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90021df0:	9307      	str	r3, [sp, #28]
90021df2:	9b24      	ldr	r3, [sp, #144]	; 0x90
90021df4:	681b      	ldr	r3, [r3, #0]
90021df6:	9308      	str	r3, [sp, #32]
90021df8:	9b24      	ldr	r3, [sp, #144]	; 0x90
90021dfa:	685b      	ldr	r3, [r3, #4]
90021dfc:	9309      	str	r3, [sp, #36]	; 0x24
90021dfe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90021e00:	2b00      	cmp	r3, #0
90021e02:	dc03      	bgt.n	90021e0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90021e04:	9b10      	ldr	r3, [sp, #64]	; 0x40
90021e06:	2b00      	cmp	r3, #0
90021e08:	f340 83b6 	ble.w	90022578 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90021e0c:	9b24      	ldr	r3, [sp, #144]	; 0x90
90021e0e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021e12:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90021e16:	1e48      	subs	r0, r1, #1
90021e18:	1e55      	subs	r5, r2, #1
90021e1a:	9b06      	ldr	r3, [sp, #24]
90021e1c:	2b00      	cmp	r3, #0
90021e1e:	f340 8165 	ble.w	900220ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90021e22:	9e1d      	ldr	r6, [sp, #116]	; 0x74
90021e24:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90021e26:	1436      	asrs	r6, r6, #16
90021e28:	ea4f 4323 	mov.w	r3, r3, asr #16
90021e2c:	d406      	bmi.n	90021e3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90021e2e:	4286      	cmp	r6, r0
90021e30:	da04      	bge.n	90021e3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90021e32:	2b00      	cmp	r3, #0
90021e34:	db02      	blt.n	90021e3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90021e36:	42ab      	cmp	r3, r5
90021e38:	f2c0 8159 	blt.w	900220ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90021e3c:	3601      	adds	r6, #1
90021e3e:	f100 8146 	bmi.w	900220ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90021e42:	42b1      	cmp	r1, r6
90021e44:	f2c0 8143 	blt.w	900220ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90021e48:	3301      	adds	r3, #1
90021e4a:	f100 8140 	bmi.w	900220ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90021e4e:	429a      	cmp	r2, r3
90021e50:	f2c0 813d 	blt.w	900220ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90021e54:	9b06      	ldr	r3, [sp, #24]
90021e56:	f64f 061f 	movw	r6, #63519	; 0xf81f
90021e5a:	9f07      	ldr	r7, [sp, #28]
90021e5c:	930f      	str	r3, [sp, #60]	; 0x3c
90021e5e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90021e60:	2b00      	cmp	r3, #0
90021e62:	f340 8166 	ble.w	90022132 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90021e66:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90021e68:	9d1d      	ldr	r5, [sp, #116]	; 0x74
90021e6a:	1418      	asrs	r0, r3, #16
90021e6c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90021e6e:	142d      	asrs	r5, r5, #16
90021e70:	f3c3 3103 	ubfx	r1, r3, #12, #4
90021e74:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90021e76:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90021e7a:	9b24      	ldr	r3, [sp, #144]	; 0x90
90021e7c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90021e80:	f100 81f0 	bmi.w	90022264 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90021e84:	f102 3eff 	add.w	lr, r2, #4294967295
90021e88:	4575      	cmp	r5, lr
90021e8a:	f280 81eb 	bge.w	90022264 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90021e8e:	2800      	cmp	r0, #0
90021e90:	f2c0 81e8 	blt.w	90022264 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90021e94:	f103 3eff 	add.w	lr, r3, #4294967295
90021e98:	4570      	cmp	r0, lr
90021e9a:	f280 81e3 	bge.w	90022264 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90021e9e:	b212      	sxth	r2, r2
90021ea0:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021ea2:	fa1f fe81 	uxth.w	lr, r1
90021ea6:	fb00 5002 	mla	r0, r0, r2, r5
90021eaa:	ea4f 150e 	mov.w	r5, lr, lsl #4
90021eae:	eb03 0a00 	add.w	sl, r3, r0
90021eb2:	f813 9000 	ldrb.w	r9, [r3, r0]
90021eb6:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
90021eba:	f89a 8001 	ldrb.w	r8, [sl, #1]
90021ebe:	b29b      	uxth	r3, r3
90021ec0:	f1bc 0f00 	cmp.w	ip, #0
90021ec4:	f000 817b 	beq.w	900221be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90021ec8:	f81a 4002 	ldrb.w	r4, [sl, r2]
90021ecc:	eb0a 0b02 	add.w	fp, sl, r2
90021ed0:	fa1f fa8c 	uxth.w	sl, ip
90021ed4:	940a      	str	r4, [sp, #40]	; 0x28
90021ed6:	fb0a fe0e 	mul.w	lr, sl, lr
90021eda:	f89b 4001 	ldrb.w	r4, [fp, #1]
90021ede:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90021ee2:	eba5 050e 	sub.w	r5, r5, lr
90021ee6:	940b      	str	r4, [sp, #44]	; 0x2c
90021ee8:	fa1f fa8a 	uxth.w	sl, sl
90021eec:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90021eee:	b2ad      	uxth	r5, r5
90021ef0:	eba3 030a 	sub.w	r3, r3, sl
90021ef4:	fb08 f505 	mul.w	r5, r8, r5
90021ef8:	b29b      	uxth	r3, r3
90021efa:	fb09 5303 	mla	r3, r9, r3, r5
90021efe:	fb0a 3304 	mla	r3, sl, r4, r3
90021f02:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90021f04:	fb0e 3304 	mla	r3, lr, r4, r3
90021f08:	f3c3 2307 	ubfx	r3, r3, #8, #8
90021f0c:	2b00      	cmp	r3, #0
90021f0e:	f000 80d1 	beq.w	900220b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90021f12:	9c08      	ldr	r4, [sp, #32]
90021f14:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90021f18:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90021f1c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90021f20:	f000 8152 	beq.w	900221c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90021f24:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
90021f28:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90021f2c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021f30:	fb0a fe0e 	mul.w	lr, sl, lr
90021f34:	fb09 f000 	mul.w	r0, r9, r0
90021f38:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90021f3c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
90021f40:	f100 0b20 	add.w	fp, r0, #32
90021f44:	44ce      	add	lr, r9
90021f46:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
90021f4a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90021f4e:	ea4f 2919 	mov.w	r9, r9, lsr #8
90021f52:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90021f56:	ea4e 0909 	orr.w	r9, lr, r9
90021f5a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90021f5e:	8868      	ldrh	r0, [r5, #2]
90021f60:	d019      	beq.n	90021f96 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90021f62:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
90021f66:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90021f6a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021f6e:	fb0a fe0e 	mul.w	lr, sl, lr
90021f72:	fb08 f800 	mul.w	r8, r8, r0
90021f76:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90021f7a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
90021f7e:	f108 0b20 	add.w	fp, r8, #32
90021f82:	4486      	add	lr, r0
90021f84:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90021f88:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90021f8c:	0a00      	lsrs	r0, r0, #8
90021f8e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021f92:	ea4e 0000 	orr.w	r0, lr, r0
90021f96:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90021f9a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90021f9e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90021fa2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90021fa6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
90021faa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90021fae:	ea4e 0909 	orr.w	r9, lr, r9
90021fb2:	ea4a 0000 	orr.w	r0, sl, r0
90021fb6:	f1bc 0f00 	cmp.w	ip, #0
90021fba:	f000 8107 	beq.w	900221cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90021fbe:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
90021fc2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90021fc4:	3a01      	subs	r2, #1
90021fc6:	2cff      	cmp	r4, #255	; 0xff
90021fc8:	ea4f 0242 	mov.w	r2, r2, lsl #1
90021fcc:	f102 0202 	add.w	r2, r2, #2
90021fd0:	eb05 0e02 	add.w	lr, r5, r2
90021fd4:	5aaa      	ldrh	r2, [r5, r2]
90021fd6:	d018      	beq.n	9002200a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
90021fd8:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
90021fdc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90021fe0:	ea4f 08e4 	mov.w	r8, r4, asr #3
90021fe4:	fb04 fa02 	mul.w	sl, r4, r2
90021fe8:	fb08 f805 	mul.w	r8, r8, r5
90021fec:	f10a 0520 	add.w	r5, sl, #32
90021ff0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90021ff4:	f608 0801 	addw	r8, r8, #2049	; 0x801
90021ff8:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90021ffc:	4442      	add	r2, r8
90021ffe:	0a2d      	lsrs	r5, r5, #8
90022000:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90022004:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90022008:	432a      	orrs	r2, r5
9002200a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9002200c:	f8be 5002 	ldrh.w	r5, [lr, #2]
90022010:	2cff      	cmp	r4, #255	; 0xff
90022012:	d01a      	beq.n	9002204a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90022014:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
90022018:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9002201c:	ea4f 08e4 	mov.w	r8, r4, asr #3
90022020:	fb04 fa05 	mul.w	sl, r4, r5
90022024:	fb08 f80e 	mul.w	r8, r8, lr
90022028:	f10a 0e20 	add.w	lr, sl, #32
9002202c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90022030:	f608 0801 	addw	r8, r8, #2049	; 0x801
90022034:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90022038:	4445      	add	r5, r8
9002203a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002203e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90022042:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
90022046:	ea45 050e 	orr.w	r5, r5, lr
9002204a:	fb1c fe01 	smulbb	lr, ip, r1
9002204e:	f1cc 0810 	rsb	r8, ip, #16
90022052:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90022056:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002205a:	ea4f 0eee 	mov.w	lr, lr, asr #3
9002205e:	eba8 0801 	sub.w	r8, r8, r1
90022062:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90022066:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9002206a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
9002206e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90022072:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90022076:	ea4a 0202 	orr.w	r2, sl, r2
9002207a:	4341      	muls	r1, r0
9002207c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90022080:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90022084:	fb09 1108 	mla	r1, r9, r8, r1
90022088:	ea4b 0505 	orr.w	r5, fp, r5
9002208c:	fb0c 1102 	mla	r1, ip, r2, r1
90022090:	fb0e 1e05 	mla	lr, lr, r5, r1
90022094:	ea4f 525e 	mov.w	r2, lr, lsr #21
90022098:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9002209c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900220a0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
900220a4:	ea42 0e0e 	orr.w	lr, r2, lr
900220a8:	fa1f f28e 	uxth.w	r2, lr
900220ac:	2bff      	cmp	r3, #255	; 0xff
900220ae:	f040 80a1 	bne.w	900221f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
900220b2:	803a      	strh	r2, [r7, #0]
900220b4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
900220b6:	3702      	adds	r7, #2
900220b8:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
900220ba:	4413      	add	r3, r2
900220bc:	9a1e      	ldr	r2, [sp, #120]	; 0x78
900220be:	931d      	str	r3, [sp, #116]	; 0x74
900220c0:	9b20      	ldr	r3, [sp, #128]	; 0x80
900220c2:	441a      	add	r2, r3
900220c4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900220c6:	3b01      	subs	r3, #1
900220c8:	921e      	str	r2, [sp, #120]	; 0x78
900220ca:	930f      	str	r3, [sp, #60]	; 0x3c
900220cc:	e6c7      	b.n	90021e5e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
900220ce:	9b1d      	ldr	r3, [sp, #116]	; 0x74
900220d0:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
900220d2:	9c1e      	ldr	r4, [sp, #120]	; 0x78
900220d4:	4433      	add	r3, r6
900220d6:	931d      	str	r3, [sp, #116]	; 0x74
900220d8:	9b20      	ldr	r3, [sp, #128]	; 0x80
900220da:	441c      	add	r4, r3
900220dc:	9b06      	ldr	r3, [sp, #24]
900220de:	3b01      	subs	r3, #1
900220e0:	941e      	str	r4, [sp, #120]	; 0x78
900220e2:	9306      	str	r3, [sp, #24]
900220e4:	9b07      	ldr	r3, [sp, #28]
900220e6:	3302      	adds	r3, #2
900220e8:	9307      	str	r3, [sp, #28]
900220ea:	e696      	b.n	90021e1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
900220ec:	d028      	beq.n	90022140 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900220ee:	9b06      	ldr	r3, [sp, #24]
900220f0:	981f      	ldr	r0, [sp, #124]	; 0x7c
900220f2:	3b01      	subs	r3, #1
900220f4:	9d1d      	ldr	r5, [sp, #116]	; 0x74
900220f6:	fb00 5003 	mla	r0, r0, r3, r5
900220fa:	1400      	asrs	r0, r0, #16
900220fc:	f53f aeaa 	bmi.w	90021e54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90022100:	3901      	subs	r1, #1
90022102:	4288      	cmp	r0, r1
90022104:	f6bf aea6 	bge.w	90021e54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90022108:	9920      	ldr	r1, [sp, #128]	; 0x80
9002210a:	981e      	ldr	r0, [sp, #120]	; 0x78
9002210c:	fb01 0303 	mla	r3, r1, r3, r0
90022110:	141b      	asrs	r3, r3, #16
90022112:	f53f ae9f 	bmi.w	90021e54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90022116:	3a01      	subs	r2, #1
90022118:	4293      	cmp	r3, r2
9002211a:	f6bf ae9b 	bge.w	90021e54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9002211e:	9b06      	ldr	r3, [sp, #24]
90022120:	f64f 061f 	movw	r6, #63519	; 0xf81f
90022124:	f8dd e01c 	ldr.w	lr, [sp, #28]
90022128:	930f      	str	r3, [sp, #60]	; 0x3c
9002212a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9002212c:	2b00      	cmp	r3, #0
9002212e:	f300 80b6 	bgt.w	9002229e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
90022132:	9b06      	ldr	r3, [sp, #24]
90022134:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90022138:	9b07      	ldr	r3, [sp, #28]
9002213a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
9002213e:	9307      	str	r3, [sp, #28]
90022140:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90022142:	2b00      	cmp	r3, #0
90022144:	f340 8218 	ble.w	90022578 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90022148:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9002214c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002214e:	ee30 0a04 	vadd.f32	s0, s0, s8
90022152:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022156:	eef0 6a62 	vmov.f32	s13, s5
9002215a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002215e:	ee31 1a05 	vadd.f32	s2, s2, s10
90022162:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022166:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
9002216a:	eef0 6a43 	vmov.f32	s13, s6
9002216e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022172:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
90022176:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002217a:	ee61 7a27 	vmul.f32	s15, s2, s15
9002217e:	ee77 2a62 	vsub.f32	s5, s14, s5
90022182:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022186:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002218a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002218e:	ee12 2a90 	vmov	r2, s5
90022192:	eef0 2a47 	vmov.f32	s5, s14
90022196:	fb92 f3f3 	sdiv	r3, r2, r3
9002219a:	ee13 2a10 	vmov	r2, s6
9002219e:	931f      	str	r3, [sp, #124]	; 0x7c
900221a0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900221a2:	eeb0 3a67 	vmov.f32	s6, s15
900221a6:	fb92 f3f3 	sdiv	r3, r2, r3
900221aa:	9320      	str	r3, [sp, #128]	; 0x80
900221ac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900221ae:	9a10      	ldr	r2, [sp, #64]	; 0x40
900221b0:	3b01      	subs	r3, #1
900221b2:	930e      	str	r3, [sp, #56]	; 0x38
900221b4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900221b6:	bf08      	it	eq
900221b8:	4613      	moveq	r3, r2
900221ba:	9306      	str	r3, [sp, #24]
900221bc:	e61f      	b.n	90021dfe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
900221be:	fb08 f505 	mul.w	r5, r8, r5
900221c2:	fb09 5303 	mla	r3, r9, r3, r5
900221c6:	e69f      	b.n	90021f08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
900221c8:	4681      	mov	r9, r0
900221ca:	e6c6      	b.n	90021f5a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
900221cc:	f1c1 0210 	rsb	r2, r1, #16
900221d0:	4341      	muls	r1, r0
900221d2:	fb09 1902 	mla	r9, r9, r2, r1
900221d6:	ea4f 0949 	mov.w	r9, r9, lsl #1
900221da:	ea4f 5259 	mov.w	r2, r9, lsr #21
900221de:	ea4f 1959 	mov.w	r9, r9, lsr #5
900221e2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900221e6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
900221ea:	ea42 0909 	orr.w	r9, r2, r9
900221ee:	fa1f f289 	uxth.w	r2, r9
900221f2:	e75b      	b.n	900220ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
900221f4:	f8b7 c000 	ldrh.w	ip, [r7]
900221f8:	43db      	mvns	r3, r3
900221fa:	ea4f 202c 	mov.w	r0, ip, asr #8
900221fe:	fa5f fe83 	uxtb.w	lr, r3
90022202:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90022206:	ea4f 05ec 	mov.w	r5, ip, asr #3
9002220a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
9002220e:	fb00 f00e 	mul.w	r0, r0, lr
90022212:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
90022216:	b2db      	uxtb	r3, r3
90022218:	1c41      	adds	r1, r0, #1
9002221a:	fb05 f50e 	mul.w	r5, r5, lr
9002221e:	fb03 f30e 	mul.w	r3, r3, lr
90022222:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90022226:	1211      	asrs	r1, r2, #8
90022228:	f021 0107 	bic.w	r1, r1, #7
9002222c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90022230:	48d3      	ldr	r0, [pc, #844]	; (90022580 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90022232:	b2c9      	uxtb	r1, r1
90022234:	ea00 2001 	and.w	r0, r0, r1, lsl #8
90022238:	1c69      	adds	r1, r5, #1
9002223a:	eb01 2515 	add.w	r5, r1, r5, lsr #8
9002223e:	10d1      	asrs	r1, r2, #3
90022240:	00d2      	lsls	r2, r2, #3
90022242:	f021 0103 	bic.w	r1, r1, #3
90022246:	eb01 2115 	add.w	r1, r1, r5, lsr #8
9002224a:	00c9      	lsls	r1, r1, #3
9002224c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90022250:	4301      	orrs	r1, r0
90022252:	1c58      	adds	r0, r3, #1
90022254:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90022258:	eb02 2213 	add.w	r2, r2, r3, lsr #8
9002225c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90022260:	430a      	orrs	r2, r1
90022262:	e726      	b.n	900220b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
90022264:	f115 0e01 	adds.w	lr, r5, #1
90022268:	f53f af24 	bmi.w	900220b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
9002226c:	4572      	cmp	r2, lr
9002226e:	f6ff af21 	blt.w	900220b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90022272:	f110 0e01 	adds.w	lr, r0, #1
90022276:	f53f af1d 	bmi.w	900220b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
9002227a:	4573      	cmp	r3, lr
9002227c:	f6ff af1a 	blt.w	900220b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90022280:	b21b      	sxth	r3, r3
90022282:	b212      	sxth	r2, r2
90022284:	9301      	str	r3, [sp, #4]
90022286:	9200      	str	r2, [sp, #0]
90022288:	e9cd 1c04 	strd	r1, ip, [sp, #16]
9002228c:	e9cd 5002 	strd	r5, r0, [sp, #8]
90022290:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
90022294:	4639      	mov	r1, r7
90022296:	9811      	ldr	r0, [sp, #68]	; 0x44
90022298:	f7ff fc22 	bl	90021ae0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
9002229c:	e70a      	b.n	900220b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
9002229e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
900222a0:	f3c3 3203 	ubfx	r2, r3, #12, #4
900222a4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
900222a6:	f3c3 3503 	ubfx	r5, r3, #12, #4
900222aa:	9b24      	ldr	r3, [sp, #144]	; 0x90
900222ac:	fa1f fc82 	uxth.w	ip, r2
900222b0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900222b4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
900222b6:	ea4f 100c 	mov.w	r0, ip, lsl #4
900222ba:	141f      	asrs	r7, r3, #16
900222bc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
900222be:	141b      	asrs	r3, r3, #16
900222c0:	fb01 3707 	mla	r7, r1, r7, r3
900222c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
900222c6:	eb03 0a07 	add.w	sl, r3, r7
900222ca:	f813 9007 	ldrb.w	r9, [r3, r7]
900222ce:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
900222d2:	f89a 8001 	ldrb.w	r8, [sl, #1]
900222d6:	b29b      	uxth	r3, r3
900222d8:	2d00      	cmp	r5, #0
900222da:	f000 80fe 	beq.w	900224da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
900222de:	f81a 4001 	ldrb.w	r4, [sl, r1]
900222e2:	eb0a 0b01 	add.w	fp, sl, r1
900222e6:	fa1f fa85 	uxth.w	sl, r5
900222ea:	940c      	str	r4, [sp, #48]	; 0x30
900222ec:	fb0a fc0c 	mul.w	ip, sl, ip
900222f0:	f89b 4001 	ldrb.w	r4, [fp, #1]
900222f4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
900222f8:	eba0 000c 	sub.w	r0, r0, ip
900222fc:	940d      	str	r4, [sp, #52]	; 0x34
900222fe:	fa1f fa8a 	uxth.w	sl, sl
90022302:	b280      	uxth	r0, r0
90022304:	eba3 030a 	sub.w	r3, r3, sl
90022308:	fb08 f000 	mul.w	r0, r8, r0
9002230c:	b29b      	uxth	r3, r3
9002230e:	fb09 0303 	mla	r3, r9, r3, r0
90022312:	980c      	ldr	r0, [sp, #48]	; 0x30
90022314:	fb0a 3300 	mla	r3, sl, r0, r3
90022318:	fb0c 3304 	mla	r3, ip, r4, r3
9002231c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90022320:	2b00      	cmp	r3, #0
90022322:	f000 80cc 	beq.w	900224be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90022326:	9808      	ldr	r0, [sp, #32]
90022328:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9002232c:	9c08      	ldr	r4, [sp, #32]
9002232e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
90022332:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90022336:	f000 80d5 	beq.w	900224e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
9002233a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
9002233e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90022342:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90022346:	fb0a fc0c 	mul.w	ip, sl, ip
9002234a:	fb09 f707 	mul.w	r7, r9, r7
9002234e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
90022352:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90022356:	f107 0b20 	add.w	fp, r7, #32
9002235a:	44cc      	add	ip, r9
9002235c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90022360:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90022364:	ea4f 2919 	mov.w	r9, r9, lsr #8
90022368:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9002236c:	ea4c 0909 	orr.w	r9, ip, r9
90022370:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90022374:	8847      	ldrh	r7, [r0, #2]
90022376:	d019      	beq.n	900223ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
90022378:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
9002237c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90022380:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90022384:	fb0a fc0c 	mul.w	ip, sl, ip
90022388:	fb08 f807 	mul.w	r8, r8, r7
9002238c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90022390:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90022394:	f108 0b20 	add.w	fp, r8, #32
90022398:	44bc      	add	ip, r7
9002239a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
9002239e:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
900223a2:	0a3f      	lsrs	r7, r7, #8
900223a4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900223a8:	ea4c 0707 	orr.w	r7, ip, r7
900223ac:	ea4f 4c09 	mov.w	ip, r9, lsl #16
900223b0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
900223b4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
900223b8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
900223bc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
900223c0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900223c4:	ea4c 0909 	orr.w	r9, ip, r9
900223c8:	ea4a 0707 	orr.w	r7, sl, r7
900223cc:	2d00      	cmp	r5, #0
900223ce:	f000 808b 	beq.w	900224e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
900223d2:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
900223d6:	3901      	subs	r1, #1
900223d8:	0049      	lsls	r1, r1, #1
900223da:	3102      	adds	r1, #2
900223dc:	eb00 0c01 	add.w	ip, r0, r1
900223e0:	5a41      	ldrh	r1, [r0, r1]
900223e2:	980c      	ldr	r0, [sp, #48]	; 0x30
900223e4:	28ff      	cmp	r0, #255	; 0xff
900223e6:	d019      	beq.n	9002241c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
900223e8:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
900223ec:	9c0c      	ldr	r4, [sp, #48]	; 0x30
900223ee:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900223f2:	ea4f 08e4 	mov.w	r8, r4, asr #3
900223f6:	fb04 fa01 	mul.w	sl, r4, r1
900223fa:	fb08 f800 	mul.w	r8, r8, r0
900223fe:	f10a 0020 	add.w	r0, sl, #32
90022402:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90022406:	f608 0801 	addw	r8, r8, #2049	; 0x801
9002240a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
9002240e:	4441      	add	r1, r8
90022410:	0a00      	lsrs	r0, r0, #8
90022412:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90022416:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002241a:	4301      	orrs	r1, r0
9002241c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9002241e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90022422:	2cff      	cmp	r4, #255	; 0xff
90022424:	d01a      	beq.n	9002245c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
90022426:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
9002242a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002242e:	ea4f 08e4 	mov.w	r8, r4, asr #3
90022432:	fb04 fa00 	mul.w	sl, r4, r0
90022436:	fb08 f80c 	mul.w	r8, r8, ip
9002243a:	f10a 0c20 	add.w	ip, sl, #32
9002243e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90022442:	f608 0801 	addw	r8, r8, #2049	; 0x801
90022446:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
9002244a:	4440      	add	r0, r8
9002244c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022450:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90022454:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90022458:	ea40 000c 	orr.w	r0, r0, ip
9002245c:	fb15 fc02 	smulbb	ip, r5, r2
90022460:	f1c5 0810 	rsb	r8, r5, #16
90022464:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90022468:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
9002246c:	ea4f 0cec 	mov.w	ip, ip, asr #3
90022470:	eba8 0802 	sub.w	r8, r8, r2
90022474:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90022478:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9002247c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90022480:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90022484:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90022488:	ea4a 0101 	orr.w	r1, sl, r1
9002248c:	437a      	muls	r2, r7
9002248e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90022492:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90022496:	fb09 2208 	mla	r2, r9, r8, r2
9002249a:	ea4b 0000 	orr.w	r0, fp, r0
9002249e:	fb05 2201 	mla	r2, r5, r1, r2
900224a2:	fb0c 2200 	mla	r2, ip, r0, r2
900224a6:	0d57      	lsrs	r7, r2, #21
900224a8:	0952      	lsrs	r2, r2, #5
900224aa:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900224ae:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900224b2:	433a      	orrs	r2, r7
900224b4:	2bff      	cmp	r3, #255	; 0xff
900224b6:	b292      	uxth	r2, r2
900224b8:	d127      	bne.n	9002250a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
900224ba:	f8ae 2000 	strh.w	r2, [lr]
900224be:	9b1d      	ldr	r3, [sp, #116]	; 0x74
900224c0:	f10e 0e02 	add.w	lr, lr, #2
900224c4:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
900224c6:	4413      	add	r3, r2
900224c8:	9a1e      	ldr	r2, [sp, #120]	; 0x78
900224ca:	931d      	str	r3, [sp, #116]	; 0x74
900224cc:	9b20      	ldr	r3, [sp, #128]	; 0x80
900224ce:	441a      	add	r2, r3
900224d0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900224d2:	3b01      	subs	r3, #1
900224d4:	921e      	str	r2, [sp, #120]	; 0x78
900224d6:	930f      	str	r3, [sp, #60]	; 0x3c
900224d8:	e627      	b.n	9002212a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
900224da:	fb08 f000 	mul.w	r0, r8, r0
900224de:	fb09 0303 	mla	r3, r9, r3, r0
900224e2:	e71b      	b.n	9002231c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
900224e4:	46b9      	mov	r9, r7
900224e6:	e743      	b.n	90022370 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
900224e8:	f1c2 0110 	rsb	r1, r2, #16
900224ec:	437a      	muls	r2, r7
900224ee:	fb09 2901 	mla	r9, r9, r1, r2
900224f2:	ea4f 0949 	mov.w	r9, r9, lsl #1
900224f6:	ea4f 5059 	mov.w	r0, r9, lsr #21
900224fa:	ea4f 1259 	mov.w	r2, r9, lsr #5
900224fe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90022502:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90022506:	4302      	orrs	r2, r0
90022508:	e7d4      	b.n	900224b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
9002250a:	f8be 7000 	ldrh.w	r7, [lr]
9002250e:	43db      	mvns	r3, r3
90022510:	4c1b      	ldr	r4, [pc, #108]	; (90022580 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90022512:	1238      	asrs	r0, r7, #8
90022514:	fa5f fc83 	uxtb.w	ip, r3
90022518:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9002251c:	10fd      	asrs	r5, r7, #3
9002251e:	00fb      	lsls	r3, r7, #3
90022520:	fb00 f00c 	mul.w	r0, r0, ip
90022524:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
90022528:	b2db      	uxtb	r3, r3
9002252a:	fb05 f10c 	mul.w	r1, r5, ip
9002252e:	1c45      	adds	r5, r0, #1
90022530:	fb03 f30c 	mul.w	r3, r3, ip
90022534:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90022538:	1215      	asrs	r5, r2, #8
9002253a:	f025 0507 	bic.w	r5, r5, #7
9002253e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90022542:	1c4d      	adds	r5, r1, #1
90022544:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90022548:	10d1      	asrs	r1, r2, #3
9002254a:	b2c0      	uxtb	r0, r0
9002254c:	f021 0103 	bic.w	r1, r1, #3
90022550:	00d2      	lsls	r2, r2, #3
90022552:	ea04 2000 	and.w	r0, r4, r0, lsl #8
90022556:	eb01 2115 	add.w	r1, r1, r5, lsr #8
9002255a:	00c9      	lsls	r1, r1, #3
9002255c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90022560:	4308      	orrs	r0, r1
90022562:	1c59      	adds	r1, r3, #1
90022564:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90022568:	eb02 2313 	add.w	r3, r2, r3, lsr #8
9002256c:	f3c3 03c4 	ubfx	r3, r3, #3, #5
90022570:	4318      	orrs	r0, r3
90022572:	f8ae 0000 	strh.w	r0, [lr]
90022576:	e7a2      	b.n	900224be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90022578:	b013      	add	sp, #76	; 0x4c
9002257a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002257e:	bf00      	nop
90022580:	fffff800 	.word	0xfffff800

90022584 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
90022584:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90022588:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
9002258c:	f9bd a020 	ldrsh.w	sl, [sp, #32]
90022590:	fb05 4c03 	mla	ip, r5, r3, r4
90022594:	2d00      	cmp	r5, #0
90022596:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
9002259a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
9002259e:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
900225a2:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
900225a6:	8808      	ldrh	r0, [r1, #0]
900225a8:	f2c0 80a7 	blt.w	900226fa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
900225ac:	45aa      	cmp	sl, r5
900225ae:	f340 80a4 	ble.w	900226fa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
900225b2:	2c00      	cmp	r4, #0
900225b4:	f2c0 809f 	blt.w	900226f6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
900225b8:	42a3      	cmp	r3, r4
900225ba:	f340 809c 	ble.w	900226f6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
900225be:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
900225c2:	1c62      	adds	r2, r4, #1
900225c4:	f100 809c 	bmi.w	90022700 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
900225c8:	4293      	cmp	r3, r2
900225ca:	f340 8099 	ble.w	90022700 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
900225ce:	f1b9 0f00 	cmp.w	r9, #0
900225d2:	f000 8095 	beq.w	90022700 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
900225d6:	f8be c002 	ldrh.w	ip, [lr, #2]
900225da:	3501      	adds	r5, #1
900225dc:	f100 8094 	bmi.w	90022708 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
900225e0:	45aa      	cmp	sl, r5
900225e2:	f340 8091 	ble.w	90022708 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
900225e6:	2f00      	cmp	r7, #0
900225e8:	f000 808e 	beq.w	90022708 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
900225ec:	2c00      	cmp	r4, #0
900225ee:	f2c0 8089 	blt.w	90022704 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
900225f2:	42a3      	cmp	r3, r4
900225f4:	f340 8086 	ble.w	90022704 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
900225f8:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
900225fc:	3401      	adds	r4, #1
900225fe:	f100 8086 	bmi.w	9002270e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90022602:	42a3      	cmp	r3, r4
90022604:	f340 8083 	ble.w	9002270e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90022608:	f1b9 0f00 	cmp.w	r9, #0
9002260c:	d07f      	beq.n	9002270e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
9002260e:	3301      	adds	r3, #1
90022610:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
90022614:	ea4f 4408 	mov.w	r4, r8, lsl #16
90022618:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
9002261c:	fb19 fe07 	smulbb	lr, r9, r7
90022620:	f1c7 0210 	rsb	r2, r7, #16
90022624:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90022628:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
9002262c:	eba2 0209 	sub.w	r2, r2, r9
90022630:	ea44 0808 	orr.w	r8, r4, r8
90022634:	ea4f 440c 	mov.w	r4, ip, lsl #16
90022638:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9002263c:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90022640:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90022644:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90022648:	ea44 0c0c 	orr.w	ip, r4, ip
9002264c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
90022650:	fb04 f40c 	mul.w	r4, r4, ip
90022654:	fb02 4808 	mla	r8, r2, r8, r4
90022658:	041a      	lsls	r2, r3, #16
9002265a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9002265e:	b2b4      	uxth	r4, r6
90022660:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90022664:	43f6      	mvns	r6, r6
90022666:	4313      	orrs	r3, r2
90022668:	042a      	lsls	r2, r5, #16
9002266a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
9002266e:	b2f6      	uxtb	r6, r6
90022670:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90022674:	fb0e 8303 	mla	r3, lr, r3, r8
90022678:	432a      	orrs	r2, r5
9002267a:	fb07 3202 	mla	r2, r7, r2, r3
9002267e:	10c7      	asrs	r7, r0, #3
90022680:	0d53      	lsrs	r3, r2, #21
90022682:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90022686:	0952      	lsrs	r2, r2, #5
90022688:	fb17 f706 	smulbb	r7, r7, r6
9002268c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90022690:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90022694:	431a      	orrs	r2, r3
90022696:	b293      	uxth	r3, r2
90022698:	1202      	asrs	r2, r0, #8
9002269a:	121d      	asrs	r5, r3, #8
9002269c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
900226a0:	00c0      	lsls	r0, r0, #3
900226a2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
900226a6:	fb12 f206 	smulbb	r2, r2, r6
900226aa:	b2c0      	uxtb	r0, r0
900226ac:	fb05 2504 	mla	r5, r5, r4, r2
900226b0:	10da      	asrs	r2, r3, #3
900226b2:	fb10 f006 	smulbb	r0, r0, r6
900226b6:	00db      	lsls	r3, r3, #3
900226b8:	b2ad      	uxth	r5, r5
900226ba:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
900226be:	b2db      	uxtb	r3, r3
900226c0:	fb02 7204 	mla	r2, r2, r4, r7
900226c4:	fb03 0004 	mla	r0, r3, r4, r0
900226c8:	1c6b      	adds	r3, r5, #1
900226ca:	b292      	uxth	r2, r2
900226cc:	b280      	uxth	r0, r0
900226ce:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900226d2:	1c43      	adds	r3, r0, #1
900226d4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
900226d8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
900226dc:	1c50      	adds	r0, r2, #1
900226de:	eb00 2212 	add.w	r2, r0, r2, lsr #8
900226e2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900226e6:	0952      	lsrs	r2, r2, #5
900226e8:	432b      	orrs	r3, r5
900226ea:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900226ee:	4313      	orrs	r3, r2
900226f0:	800b      	strh	r3, [r1, #0]
900226f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900226f6:	4680      	mov	r8, r0
900226f8:	e763      	b.n	900225c2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
900226fa:	4684      	mov	ip, r0
900226fc:	4680      	mov	r8, r0
900226fe:	e76c      	b.n	900225da <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90022700:	4684      	mov	ip, r0
90022702:	e76a      	b.n	900225da <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90022704:	4605      	mov	r5, r0
90022706:	e779      	b.n	900225fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
90022708:	4603      	mov	r3, r0
9002270a:	4605      	mov	r5, r0
9002270c:	e782      	b.n	90022614 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
9002270e:	4603      	mov	r3, r0
90022710:	e780      	b.n	90022614 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

90022712 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022712:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022716:	b093      	sub	sp, #76	; 0x4c
90022718:	461d      	mov	r5, r3
9002271a:	9210      	str	r2, [sp, #64]	; 0x40
9002271c:	9b21      	ldr	r3, [sp, #132]	; 0x84
9002271e:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
90022722:	910a      	str	r1, [sp, #40]	; 0x28
90022724:	920b      	str	r2, [sp, #44]	; 0x2c
90022726:	6859      	ldr	r1, [r3, #4]
90022728:	681b      	ldr	r3, [r3, #0]
9002272a:	9011      	str	r0, [sp, #68]	; 0x44
9002272c:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
90022730:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
90022734:	fb01 2707 	mla	r7, r1, r7, r2
90022738:	eb03 0347 	add.w	r3, r3, r7, lsl #1
9002273c:	9307      	str	r3, [sp, #28]
9002273e:	9b24      	ldr	r3, [sp, #144]	; 0x90
90022740:	681b      	ldr	r3, [r3, #0]
90022742:	9309      	str	r3, [sp, #36]	; 0x24
90022744:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90022746:	43db      	mvns	r3, r3
90022748:	b2db      	uxtb	r3, r3
9002274a:	9308      	str	r3, [sp, #32]
9002274c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9002274e:	2b00      	cmp	r3, #0
90022750:	dc03      	bgt.n	9002275a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90022752:	9b10      	ldr	r3, [sp, #64]	; 0x40
90022754:	2b00      	cmp	r3, #0
90022756:	f340 8205 	ble.w	90022b64 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002275a:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002275c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022760:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90022764:	1e48      	subs	r0, r1, #1
90022766:	f102 3cff 	add.w	ip, r2, #4294967295
9002276a:	2d00      	cmp	r5, #0
9002276c:	f340 80da 	ble.w	90022924 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
90022770:	ea5f 4e24 	movs.w	lr, r4, asr #16
90022774:	ea4f 4326 	mov.w	r3, r6, asr #16
90022778:	d406      	bmi.n	90022788 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9002277a:	4586      	cmp	lr, r0
9002277c:	da04      	bge.n	90022788 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9002277e:	2b00      	cmp	r3, #0
90022780:	db02      	blt.n	90022788 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90022782:	4563      	cmp	r3, ip
90022784:	f2c0 80cf 	blt.w	90022926 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90022788:	f11e 0e01 	adds.w	lr, lr, #1
9002278c:	f100 80c1 	bmi.w	90022912 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90022790:	4571      	cmp	r1, lr
90022792:	f2c0 80be 	blt.w	90022912 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90022796:	3301      	adds	r3, #1
90022798:	f100 80bb 	bmi.w	90022912 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9002279c:	429a      	cmp	r2, r3
9002279e:	f2c0 80b8 	blt.w	90022912 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900227a2:	46a9      	mov	r9, r5
900227a4:	f8dd 801c 	ldr.w	r8, [sp, #28]
900227a8:	f1b9 0f00 	cmp.w	r9, #0
900227ac:	f340 80d8 	ble.w	90022960 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
900227b0:	9b24      	ldr	r3, [sp, #144]	; 0x90
900227b2:	1421      	asrs	r1, r4, #16
900227b4:	ea4f 4026 	mov.w	r0, r6, asr #16
900227b8:	f3c4 3203 	ubfx	r2, r4, #12, #4
900227bc:	f3c6 3c03 	ubfx	ip, r6, #12, #4
900227c0:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
900227c4:	f100 8112 	bmi.w	900229ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
900227c8:	f10e 3aff 	add.w	sl, lr, #4294967295
900227cc:	4551      	cmp	r1, sl
900227ce:	f280 810d 	bge.w	900229ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
900227d2:	2800      	cmp	r0, #0
900227d4:	f2c0 810a 	blt.w	900229ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
900227d8:	f103 3aff 	add.w	sl, r3, #4294967295
900227dc:	4550      	cmp	r0, sl
900227de:	f280 8105 	bge.w	900229ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
900227e2:	fa0f f38e 	sxth.w	r3, lr
900227e6:	fb00 1103 	mla	r1, r0, r3, r1
900227ea:	9809      	ldr	r0, [sp, #36]	; 0x24
900227ec:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
900227f0:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
900227f4:	f8ba 1002 	ldrh.w	r1, [sl, #2]
900227f8:	f1bc 0f00 	cmp.w	ip, #0
900227fc:	d007      	beq.n	9002280e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
900227fe:	005b      	lsls	r3, r3, #1
90022800:	eb0a 0003 	add.w	r0, sl, r3
90022804:	f83a 3003 	ldrh.w	r3, [sl, r3]
90022808:	930c      	str	r3, [sp, #48]	; 0x30
9002280a:	8843      	ldrh	r3, [r0, #2]
9002280c:	930d      	str	r3, [sp, #52]	; 0x34
9002280e:	ea4f 400e 	mov.w	r0, lr, lsl #16
90022812:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90022816:	fb12 f30c 	smulbb	r3, r2, ip
9002281a:	ea4f 4a01 	mov.w	sl, r1, lsl #16
9002281e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90022822:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90022826:	10db      	asrs	r3, r3, #3
90022828:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9002282c:	ea40 000e 	orr.w	r0, r0, lr
90022830:	f1cc 0e10 	rsb	lr, ip, #16
90022834:	ea4a 0101 	orr.w	r1, sl, r1
90022838:	9f08      	ldr	r7, [sp, #32]
9002283a:	ebae 0e02 	sub.w	lr, lr, r2
9002283e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90022842:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90022846:	4351      	muls	r1, r2
90022848:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9002284a:	fb0e 1e00 	mla	lr, lr, r0, r1
9002284e:	990c      	ldr	r1, [sp, #48]	; 0x30
90022850:	0410      	lsls	r0, r2, #16
90022852:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90022856:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
9002285a:	4310      	orrs	r0, r2
9002285c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9002285e:	0412      	lsls	r2, r2, #16
90022860:	fb03 e000 	mla	r0, r3, r0, lr
90022864:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
90022868:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
9002286c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90022870:	ea42 020e 	orr.w	r2, r2, lr
90022874:	fb03 0302 	mla	r3, r3, r2, r0
90022878:	f8b8 0000 	ldrh.w	r0, [r8]
9002287c:	0d5a      	lsrs	r2, r3, #21
9002287e:	095b      	lsrs	r3, r3, #5
90022880:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90022884:	1201      	asrs	r1, r0, #8
90022886:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9002288a:	ea4f 0ee0 	mov.w	lr, r0, asr #3
9002288e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90022892:	00c0      	lsls	r0, r0, #3
90022894:	4313      	orrs	r3, r2
90022896:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
9002289a:	fb11 f107 	smulbb	r1, r1, r7
9002289e:	b2c0      	uxtb	r0, r0
900228a0:	b29b      	uxth	r3, r3
900228a2:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
900228a6:	fb10 f007 	smulbb	r0, r0, r7
900228aa:	fb1e fe07 	smulbb	lr, lr, r7
900228ae:	ea4f 2c23 	mov.w	ip, r3, asr #8
900228b2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
900228b6:	fb0c 1c02 	mla	ip, ip, r2, r1
900228ba:	10d9      	asrs	r1, r3, #3
900228bc:	00db      	lsls	r3, r3, #3
900228be:	fa1f fc8c 	uxth.w	ip, ip
900228c2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
900228c6:	b2db      	uxtb	r3, r3
900228c8:	fb01 e102 	mla	r1, r1, r2, lr
900228cc:	fb03 0302 	mla	r3, r3, r2, r0
900228d0:	b289      	uxth	r1, r1
900228d2:	b29a      	uxth	r2, r3
900228d4:	f10c 0301 	add.w	r3, ip, #1
900228d8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
900228dc:	1c53      	adds	r3, r2, #1
900228de:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900228e2:	1c4a      	adds	r2, r1, #1
900228e4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
900228e8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900228ec:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900228f0:	0949      	lsrs	r1, r1, #5
900228f2:	ea43 030c 	orr.w	r3, r3, ip
900228f6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900228fa:	430b      	orrs	r3, r1
900228fc:	f8a8 3000 	strh.w	r3, [r8]
90022900:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90022902:	f108 0802 	add.w	r8, r8, #2
90022906:	f109 39ff 	add.w	r9, r9, #4294967295
9002290a:	441c      	add	r4, r3
9002290c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002290e:	441e      	add	r6, r3
90022910:	e74a      	b.n	900227a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90022912:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90022914:	3d01      	subs	r5, #1
90022916:	441c      	add	r4, r3
90022918:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002291a:	441e      	add	r6, r3
9002291c:	9b07      	ldr	r3, [sp, #28]
9002291e:	3302      	adds	r3, #2
90022920:	9307      	str	r3, [sp, #28]
90022922:	e722      	b.n	9002276a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90022924:	d022      	beq.n	9002296c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
90022926:	1e6b      	subs	r3, r5, #1
90022928:	981f      	ldr	r0, [sp, #124]	; 0x7c
9002292a:	fb00 4003 	mla	r0, r0, r3, r4
9002292e:	1400      	asrs	r0, r0, #16
90022930:	f53f af37 	bmi.w	900227a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90022934:	3901      	subs	r1, #1
90022936:	4288      	cmp	r0, r1
90022938:	f6bf af33 	bge.w	900227a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002293c:	9920      	ldr	r1, [sp, #128]	; 0x80
9002293e:	fb01 6303 	mla	r3, r1, r3, r6
90022942:	141b      	asrs	r3, r3, #16
90022944:	f53f af2d 	bmi.w	900227a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90022948:	3a01      	subs	r2, #1
9002294a:	4293      	cmp	r3, r2
9002294c:	f6bf af29 	bge.w	900227a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90022950:	46a8      	mov	r8, r5
90022952:	f8dd 901c 	ldr.w	r9, [sp, #28]
90022956:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
9002295a:	f1b8 0f00 	cmp.w	r8, #0
9002295e:	dc60      	bgt.n	90022a22 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
90022960:	9b07      	ldr	r3, [sp, #28]
90022962:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90022966:	eb03 0345 	add.w	r3, r3, r5, lsl #1
9002296a:	9307      	str	r3, [sp, #28]
9002296c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9002296e:	2b00      	cmp	r3, #0
90022970:	f340 80f8 	ble.w	90022b64 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90022974:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90022978:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002297a:	ee30 0a04 	vadd.f32	s0, s0, s8
9002297e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022982:	eef0 6a62 	vmov.f32	s13, s5
90022986:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002298a:	ee31 1a05 	vadd.f32	s2, s2, s10
9002298e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022992:	ee16 4a90 	vmov	r4, s13
90022996:	eef0 6a43 	vmov.f32	s13, s6
9002299a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002299e:	ee16 6a90 	vmov	r6, s13
900229a2:	ee20 7aa7 	vmul.f32	s14, s1, s15
900229a6:	ee61 7a27 	vmul.f32	s15, s2, s15
900229aa:	ee77 2a62 	vsub.f32	s5, s14, s5
900229ae:	ee37 3ac3 	vsub.f32	s6, s15, s6
900229b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900229b6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900229ba:	ee12 2a90 	vmov	r2, s5
900229be:	eef0 2a47 	vmov.f32	s5, s14
900229c2:	fb92 f3f3 	sdiv	r3, r2, r3
900229c6:	ee13 2a10 	vmov	r2, s6
900229ca:	931f      	str	r3, [sp, #124]	; 0x7c
900229cc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900229ce:	eeb0 3a67 	vmov.f32	s6, s15
900229d2:	fb92 f3f3 	sdiv	r3, r2, r3
900229d6:	9320      	str	r3, [sp, #128]	; 0x80
900229d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900229da:	9a10      	ldr	r2, [sp, #64]	; 0x40
900229dc:	3b01      	subs	r3, #1
900229de:	930a      	str	r3, [sp, #40]	; 0x28
900229e0:	bf08      	it	eq
900229e2:	4615      	moveq	r5, r2
900229e4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900229e6:	bf18      	it	ne
900229e8:	461d      	movne	r5, r3
900229ea:	e6af      	b.n	9002274c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
900229ec:	f111 0a01 	adds.w	sl, r1, #1
900229f0:	d486      	bmi.n	90022900 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
900229f2:	45d6      	cmp	lr, sl
900229f4:	db84      	blt.n	90022900 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
900229f6:	f110 0a01 	adds.w	sl, r0, #1
900229fa:	d481      	bmi.n	90022900 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
900229fc:	4553      	cmp	r3, sl
900229fe:	f6ff af7f 	blt.w	90022900 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90022a02:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
90022a04:	b21b      	sxth	r3, r3
90022a06:	9101      	str	r1, [sp, #4]
90022a08:	4641      	mov	r1, r8
90022a0a:	9300      	str	r3, [sp, #0]
90022a0c:	fa0f f38e 	sxth.w	r3, lr
90022a10:	e9cd 0202 	strd	r0, r2, [sp, #8]
90022a14:	e9cd c704 	strd	ip, r7, [sp, #16]
90022a18:	9a09      	ldr	r2, [sp, #36]	; 0x24
90022a1a:	9811      	ldr	r0, [sp, #68]	; 0x44
90022a1c:	f7ff fdb2 	bl	90022584 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
90022a20:	e76e      	b.n	90022900 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90022a22:	9b24      	ldr	r3, [sp, #144]	; 0x90
90022a24:	1430      	asrs	r0, r6, #16
90022a26:	9f09      	ldr	r7, [sp, #36]	; 0x24
90022a28:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90022a2c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022a30:	1423      	asrs	r3, r4, #16
90022a32:	f3c4 3203 	ubfx	r2, r4, #12, #4
90022a36:	fb01 3000 	mla	r0, r1, r0, r3
90022a3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022a3c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
90022a40:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
90022a44:	8858      	ldrh	r0, [r3, #2]
90022a46:	f1be 0f00 	cmp.w	lr, #0
90022a4a:	d00b      	beq.n	90022a64 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90022a4c:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
90022a50:	3901      	subs	r1, #1
90022a52:	0049      	lsls	r1, r1, #1
90022a54:	3102      	adds	r1, #2
90022a56:	eb03 0b01 	add.w	fp, r3, r1
90022a5a:	5a5b      	ldrh	r3, [r3, r1]
90022a5c:	930e      	str	r3, [sp, #56]	; 0x38
90022a5e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90022a62:	930f      	str	r3, [sp, #60]	; 0x3c
90022a64:	ea4f 410c 	mov.w	r1, ip, lsl #16
90022a68:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90022a6c:	fb12 f30e 	smulbb	r3, r2, lr
90022a70:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90022a74:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
90022a78:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90022a7c:	10db      	asrs	r3, r3, #3
90022a7e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90022a82:	ea41 010c 	orr.w	r1, r1, ip
90022a86:	f1ce 0c10 	rsb	ip, lr, #16
90022a8a:	ea4b 0000 	orr.w	r0, fp, r0
90022a8e:	9f08      	ldr	r7, [sp, #32]
90022a90:	ebac 0c02 	sub.w	ip, ip, r2
90022a94:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90022a98:	f108 38ff 	add.w	r8, r8, #4294967295
90022a9c:	4350      	muls	r0, r2
90022a9e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90022aa2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90022aa4:	fb0c 0c01 	mla	ip, ip, r1, r0
90022aa8:	980e      	ldr	r0, [sp, #56]	; 0x38
90022aaa:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90022aae:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
90022ab2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90022ab4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90022ab8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90022abc:	0412      	lsls	r2, r2, #16
90022abe:	ea4b 0101 	orr.w	r1, fp, r1
90022ac2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90022ac6:	fb03 c101 	mla	r1, r3, r1, ip
90022aca:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90022ace:	4302      	orrs	r2, r0
90022ad0:	fb03 1202 	mla	r2, r3, r2, r1
90022ad4:	ea4f 5b52 	mov.w	fp, r2, lsr #21
90022ad8:	0952      	lsrs	r2, r2, #5
90022ada:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
90022ade:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
90022ae2:	f8b9 2000 	ldrh.w	r2, [r9]
90022ae6:	ea4b 0303 	orr.w	r3, fp, r3
90022aea:	1211      	asrs	r1, r2, #8
90022aec:	ea4f 0ce2 	mov.w	ip, r2, asr #3
90022af0:	b29b      	uxth	r3, r3
90022af2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90022af6:	00d2      	lsls	r2, r2, #3
90022af8:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
90022afc:	fb11 f107 	smulbb	r1, r1, r7
90022b00:	1218      	asrs	r0, r3, #8
90022b02:	fb1c fc07 	smulbb	ip, ip, r7
90022b06:	b2d2      	uxtb	r2, r2
90022b08:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90022b0c:	fb12 f207 	smulbb	r2, r2, r7
90022b10:	fb00 100a 	mla	r0, r0, sl, r1
90022b14:	10d9      	asrs	r1, r3, #3
90022b16:	00db      	lsls	r3, r3, #3
90022b18:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90022b1c:	b280      	uxth	r0, r0
90022b1e:	b2db      	uxtb	r3, r3
90022b20:	fb01 c10a 	mla	r1, r1, sl, ip
90022b24:	fb03 230a 	mla	r3, r3, sl, r2
90022b28:	1c42      	adds	r2, r0, #1
90022b2a:	b289      	uxth	r1, r1
90022b2c:	b29b      	uxth	r3, r3
90022b2e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90022b32:	f101 0c01 	add.w	ip, r1, #1
90022b36:	1c5a      	adds	r2, r3, #1
90022b38:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90022b3c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
90022b40:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90022b44:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90022b46:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90022b4a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90022b4e:	441c      	add	r4, r3
90022b50:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90022b54:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022b56:	4310      	orrs	r0, r2
90022b58:	441e      	add	r6, r3
90022b5a:	ea40 000c 	orr.w	r0, r0, ip
90022b5e:	f829 0b02 	strh.w	r0, [r9], #2
90022b62:	e6fa      	b.n	9002295a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
90022b64:	b013      	add	sp, #76	; 0x4c
90022b66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90022b6a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
90022b6a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90022b6e:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
90022b72:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
90022b76:	fb0e 4703 	mla	r7, lr, r3, r4
90022b7a:	f1be 0f00 	cmp.w	lr, #0
90022b7e:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
90022b82:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
90022b86:	eb02 0847 	add.w	r8, r2, r7, lsl #1
90022b8a:	8808      	ldrh	r0, [r1, #0]
90022b8c:	db60      	blt.n	90022c50 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90022b8e:	45f1      	cmp	r9, lr
90022b90:	dd5e      	ble.n	90022c50 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90022b92:	2c00      	cmp	r4, #0
90022b94:	db5a      	blt.n	90022c4c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90022b96:	42a3      	cmp	r3, r4
90022b98:	dd58      	ble.n	90022c4c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90022b9a:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
90022b9e:	1c62      	adds	r2, r4, #1
90022ba0:	d459      	bmi.n	90022c56 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90022ba2:	4293      	cmp	r3, r2
90022ba4:	dd57      	ble.n	90022c56 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90022ba6:	2d00      	cmp	r5, #0
90022ba8:	d055      	beq.n	90022c56 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90022baa:	f8b8 7002 	ldrh.w	r7, [r8, #2]
90022bae:	f11e 0e01 	adds.w	lr, lr, #1
90022bb2:	d454      	bmi.n	90022c5e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90022bb4:	45f1      	cmp	r9, lr
90022bb6:	dd52      	ble.n	90022c5e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90022bb8:	2e00      	cmp	r6, #0
90022bba:	d050      	beq.n	90022c5e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90022bbc:	2c00      	cmp	r4, #0
90022bbe:	db4c      	blt.n	90022c5a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90022bc0:	42a3      	cmp	r3, r4
90022bc2:	dd4a      	ble.n	90022c5a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90022bc4:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
90022bc8:	3401      	adds	r4, #1
90022bca:	d405      	bmi.n	90022bd8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90022bcc:	42a3      	cmp	r3, r4
90022bce:	dd03      	ble.n	90022bd8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90022bd0:	b115      	cbz	r5, 90022bd8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90022bd2:	3301      	adds	r3, #1
90022bd4:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
90022bd8:	fb15 f406 	smulbb	r4, r5, r6
90022bdc:	ea4f 430c 	mov.w	r3, ip, lsl #16
90022be0:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90022be4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90022be8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90022bec:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90022bf0:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
90022bf4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90022bf8:	ea43 0c0c 	orr.w	ip, r3, ip
90022bfc:	f1c6 0310 	rsb	r3, r6, #16
90022c00:	ea4e 0707 	orr.w	r7, lr, r7
90022c04:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90022c08:	1b5b      	subs	r3, r3, r5
90022c0a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
90022c0e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90022c12:	437d      	muls	r5, r7
90022c14:	fb03 5c0c 	mla	ip, r3, ip, r5
90022c18:	0403      	lsls	r3, r0, #16
90022c1a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90022c1e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90022c22:	4318      	orrs	r0, r3
90022c24:	0413      	lsls	r3, r2, #16
90022c26:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90022c2a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90022c2e:	fb04 c000 	mla	r0, r4, r0, ip
90022c32:	4313      	orrs	r3, r2
90022c34:	fb06 0003 	mla	r0, r6, r3, r0
90022c38:	0d43      	lsrs	r3, r0, #21
90022c3a:	0940      	lsrs	r0, r0, #5
90022c3c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90022c40:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90022c44:	4318      	orrs	r0, r3
90022c46:	8008      	strh	r0, [r1, #0]
90022c48:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90022c4c:	4684      	mov	ip, r0
90022c4e:	e7a6      	b.n	90022b9e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
90022c50:	4607      	mov	r7, r0
90022c52:	4684      	mov	ip, r0
90022c54:	e7ab      	b.n	90022bae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90022c56:	4607      	mov	r7, r0
90022c58:	e7a9      	b.n	90022bae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90022c5a:	4602      	mov	r2, r0
90022c5c:	e7b4      	b.n	90022bc8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
90022c5e:	4602      	mov	r2, r0
90022c60:	e7ba      	b.n	90022bd8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

90022c62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022c62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022c66:	b08f      	sub	sp, #60	; 0x3c
90022c68:	461d      	mov	r5, r3
90022c6a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90022c6c:	9107      	str	r1, [sp, #28]
90022c6e:	920c      	str	r2, [sp, #48]	; 0x30
90022c70:	6859      	ldr	r1, [r3, #4]
90022c72:	681b      	ldr	r3, [r3, #0]
90022c74:	900d      	str	r0, [sp, #52]	; 0x34
90022c76:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
90022c7a:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
90022c7e:	fb01 2707 	mla	r7, r1, r7, r2
90022c82:	eb03 0747 	add.w	r7, r3, r7, lsl #1
90022c86:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022c88:	f8d3 8000 	ldr.w	r8, [r3]
90022c8c:	9b07      	ldr	r3, [sp, #28]
90022c8e:	2b00      	cmp	r3, #0
90022c90:	dc03      	bgt.n	90022c9a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90022c92:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90022c94:	2b00      	cmp	r3, #0
90022c96:	f340 8182 	ble.w	90022f9e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90022c9a:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022c9c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022ca0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90022ca4:	1e48      	subs	r0, r1, #1
90022ca6:	f102 3cff 	add.w	ip, r2, #4294967295
90022caa:	2d00      	cmp	r5, #0
90022cac:	f340 809b 	ble.w	90022de6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
90022cb0:	ea5f 4e24 	movs.w	lr, r4, asr #16
90022cb4:	ea4f 4326 	mov.w	r3, r6, asr #16
90022cb8:	d406      	bmi.n	90022cc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90022cba:	4586      	cmp	lr, r0
90022cbc:	da04      	bge.n	90022cc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90022cbe:	2b00      	cmp	r3, #0
90022cc0:	db02      	blt.n	90022cc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90022cc2:	4563      	cmp	r3, ip
90022cc4:	f2c0 8090 	blt.w	90022de8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90022cc8:	f11e 0e01 	adds.w	lr, lr, #1
90022ccc:	f100 8084 	bmi.w	90022dd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90022cd0:	4571      	cmp	r1, lr
90022cd2:	f2c0 8081 	blt.w	90022dd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90022cd6:	3301      	adds	r3, #1
90022cd8:	d47e      	bmi.n	90022dd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90022cda:	429a      	cmp	r2, r3
90022cdc:	db7c      	blt.n	90022dd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90022cde:	46aa      	mov	sl, r5
90022ce0:	46b9      	mov	r9, r7
90022ce2:	f1ba 0f00 	cmp.w	sl, #0
90022ce6:	f340 8099 	ble.w	90022e1c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
90022cea:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022cec:	1421      	asrs	r1, r4, #16
90022cee:	ea4f 4026 	mov.w	r0, r6, asr #16
90022cf2:	f3c4 3203 	ubfx	r2, r4, #12, #4
90022cf6:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90022cfa:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90022cfe:	f100 80d1 	bmi.w	90022ea4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90022d02:	f10e 3bff 	add.w	fp, lr, #4294967295
90022d06:	4559      	cmp	r1, fp
90022d08:	f280 80cc 	bge.w	90022ea4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90022d0c:	2800      	cmp	r0, #0
90022d0e:	f2c0 80c9 	blt.w	90022ea4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90022d12:	f103 3bff 	add.w	fp, r3, #4294967295
90022d16:	4558      	cmp	r0, fp
90022d18:	f280 80c4 	bge.w	90022ea4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90022d1c:	fa0f fe8e 	sxth.w	lr, lr
90022d20:	fb00 110e 	mla	r1, r0, lr, r1
90022d24:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90022d28:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
90022d2c:	8841      	ldrh	r1, [r0, #2]
90022d2e:	f1bc 0f00 	cmp.w	ip, #0
90022d32:	d00b      	beq.n	90022d4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
90022d34:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
90022d38:	3b01      	subs	r3, #1
90022d3a:	005b      	lsls	r3, r3, #1
90022d3c:	3302      	adds	r3, #2
90022d3e:	eb00 0e03 	add.w	lr, r0, r3
90022d42:	5ac3      	ldrh	r3, [r0, r3]
90022d44:	9308      	str	r3, [sp, #32]
90022d46:	f8be 3002 	ldrh.w	r3, [lr, #2]
90022d4a:	9309      	str	r3, [sp, #36]	; 0x24
90022d4c:	ea4f 400b 	mov.w	r0, fp, lsl #16
90022d50:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
90022d54:	fb12 f30c 	smulbb	r3, r2, ip
90022d58:	f1cc 0e10 	rsb	lr, ip, #16
90022d5c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90022d60:	10db      	asrs	r3, r3, #3
90022d62:	ebae 0e02 	sub.w	lr, lr, r2
90022d66:	ea40 000b 	orr.w	r0, r0, fp
90022d6a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90022d6e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90022d72:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90022d76:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90022d7a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90022d7e:	ea4b 0101 	orr.w	r1, fp, r1
90022d82:	4351      	muls	r1, r2
90022d84:	9a09      	ldr	r2, [sp, #36]	; 0x24
90022d86:	fb0e 1e00 	mla	lr, lr, r0, r1
90022d8a:	0410      	lsls	r0, r2, #16
90022d8c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90022d90:	9908      	ldr	r1, [sp, #32]
90022d92:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90022d96:	4310      	orrs	r0, r2
90022d98:	9a08      	ldr	r2, [sp, #32]
90022d9a:	0412      	lsls	r2, r2, #16
90022d9c:	fb03 e000 	mla	r0, r3, r0, lr
90022da0:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
90022da4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90022da8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90022dac:	ea42 020e 	orr.w	r2, r2, lr
90022db0:	fb03 0302 	mla	r3, r3, r2, r0
90022db4:	0d5a      	lsrs	r2, r3, #21
90022db6:	095b      	lsrs	r3, r3, #5
90022db8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90022dbc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90022dc0:	4313      	orrs	r3, r2
90022dc2:	f8a9 3000 	strh.w	r3, [r9]
90022dc6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90022dc8:	f109 0902 	add.w	r9, r9, #2
90022dcc:	f10a 3aff 	add.w	sl, sl, #4294967295
90022dd0:	441c      	add	r4, r3
90022dd2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90022dd4:	441e      	add	r6, r3
90022dd6:	e784      	b.n	90022ce2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
90022dd8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90022dda:	3d01      	subs	r5, #1
90022ddc:	3702      	adds	r7, #2
90022dde:	441c      	add	r4, r3
90022de0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90022de2:	441e      	add	r6, r3
90022de4:	e761      	b.n	90022caa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90022de6:	d01d      	beq.n	90022e24 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90022de8:	1e6b      	subs	r3, r5, #1
90022dea:	981b      	ldr	r0, [sp, #108]	; 0x6c
90022dec:	fb00 4003 	mla	r0, r0, r3, r4
90022df0:	1400      	asrs	r0, r0, #16
90022df2:	f53f af74 	bmi.w	90022cde <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90022df6:	3901      	subs	r1, #1
90022df8:	4288      	cmp	r0, r1
90022dfa:	f6bf af70 	bge.w	90022cde <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90022dfe:	991c      	ldr	r1, [sp, #112]	; 0x70
90022e00:	fb01 6303 	mla	r3, r1, r3, r6
90022e04:	141b      	asrs	r3, r3, #16
90022e06:	f53f af6a 	bmi.w	90022cde <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90022e0a:	3a01      	subs	r2, #1
90022e0c:	4293      	cmp	r3, r2
90022e0e:	f6bf af66 	bge.w	90022cde <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90022e12:	46a9      	mov	r9, r5
90022e14:	46ba      	mov	sl, r7
90022e16:	f1b9 0f00 	cmp.w	r9, #0
90022e1a:	dc5b      	bgt.n	90022ed4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90022e1c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90022e20:	eb07 0745 	add.w	r7, r7, r5, lsl #1
90022e24:	9b07      	ldr	r3, [sp, #28]
90022e26:	2b00      	cmp	r3, #0
90022e28:	f340 80b9 	ble.w	90022f9e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90022e2c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90022e30:	9b18      	ldr	r3, [sp, #96]	; 0x60
90022e32:	ee30 0a04 	vadd.f32	s0, s0, s8
90022e36:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022e3a:	eef0 6a62 	vmov.f32	s13, s5
90022e3e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90022e42:	ee31 1a05 	vadd.f32	s2, s2, s10
90022e46:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022e4a:	ee16 4a90 	vmov	r4, s13
90022e4e:	eef0 6a43 	vmov.f32	s13, s6
90022e52:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022e56:	ee16 6a90 	vmov	r6, s13
90022e5a:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022e5e:	ee61 7a27 	vmul.f32	s15, s2, s15
90022e62:	ee77 2a62 	vsub.f32	s5, s14, s5
90022e66:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022e6a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022e6e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022e72:	ee12 2a90 	vmov	r2, s5
90022e76:	eef0 2a47 	vmov.f32	s5, s14
90022e7a:	fb92 f3f3 	sdiv	r3, r2, r3
90022e7e:	ee13 2a10 	vmov	r2, s6
90022e82:	931b      	str	r3, [sp, #108]	; 0x6c
90022e84:	9b18      	ldr	r3, [sp, #96]	; 0x60
90022e86:	eeb0 3a67 	vmov.f32	s6, s15
90022e8a:	fb92 f3f3 	sdiv	r3, r2, r3
90022e8e:	931c      	str	r3, [sp, #112]	; 0x70
90022e90:	9b07      	ldr	r3, [sp, #28]
90022e92:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90022e94:	3b01      	subs	r3, #1
90022e96:	9307      	str	r3, [sp, #28]
90022e98:	bf08      	it	eq
90022e9a:	4615      	moveq	r5, r2
90022e9c:	9b18      	ldr	r3, [sp, #96]	; 0x60
90022e9e:	bf18      	it	ne
90022ea0:	461d      	movne	r5, r3
90022ea2:	e6f3      	b.n	90022c8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
90022ea4:	f111 0b01 	adds.w	fp, r1, #1
90022ea8:	d48d      	bmi.n	90022dc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90022eaa:	45de      	cmp	lr, fp
90022eac:	db8b      	blt.n	90022dc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90022eae:	f110 0b01 	adds.w	fp, r0, #1
90022eb2:	d488      	bmi.n	90022dc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90022eb4:	455b      	cmp	r3, fp
90022eb6:	db86      	blt.n	90022dc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90022eb8:	b21b      	sxth	r3, r3
90022eba:	e9cd 1001 	strd	r1, r0, [sp, #4]
90022ebe:	e9cd 2c03 	strd	r2, ip, [sp, #12]
90022ec2:	9300      	str	r3, [sp, #0]
90022ec4:	4642      	mov	r2, r8
90022ec6:	fa0f f38e 	sxth.w	r3, lr
90022eca:	4649      	mov	r1, r9
90022ecc:	980d      	ldr	r0, [sp, #52]	; 0x34
90022ece:	f7ff fe4c 	bl	90022b6a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
90022ed2:	e778      	b.n	90022dc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90022ed4:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022ed6:	1420      	asrs	r0, r4, #16
90022ed8:	1431      	asrs	r1, r6, #16
90022eda:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90022ede:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90022ee2:	f3c4 3203 	ubfx	r2, r4, #12, #4
90022ee6:	fb03 0101 	mla	r1, r3, r1, r0
90022eea:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90022eee:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
90022ef2:	8841      	ldrh	r1, [r0, #2]
90022ef4:	f1be 0f00 	cmp.w	lr, #0
90022ef8:	d00b      	beq.n	90022f12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
90022efa:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
90022efe:	3b01      	subs	r3, #1
90022f00:	005b      	lsls	r3, r3, #1
90022f02:	3302      	adds	r3, #2
90022f04:	eb00 0b03 	add.w	fp, r0, r3
90022f08:	5ac3      	ldrh	r3, [r0, r3]
90022f0a:	930a      	str	r3, [sp, #40]	; 0x28
90022f0c:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90022f10:	930b      	str	r3, [sp, #44]	; 0x2c
90022f12:	ea4f 400c 	mov.w	r0, ip, lsl #16
90022f16:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90022f1a:	fb12 f30e 	smulbb	r3, r2, lr
90022f1e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90022f22:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90022f26:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90022f2a:	10db      	asrs	r3, r3, #3
90022f2c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90022f30:	ea40 000c 	orr.w	r0, r0, ip
90022f34:	f1ce 0c10 	rsb	ip, lr, #16
90022f38:	ea4b 0101 	orr.w	r1, fp, r1
90022f3c:	f109 39ff 	add.w	r9, r9, #4294967295
90022f40:	ebac 0c02 	sub.w	ip, ip, r2
90022f44:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90022f48:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90022f4c:	4351      	muls	r1, r2
90022f4e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90022f50:	fb0c 1c00 	mla	ip, ip, r0, r1
90022f54:	990a      	ldr	r1, [sp, #40]	; 0x28
90022f56:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90022f5a:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
90022f5e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90022f60:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90022f64:	0412      	lsls	r2, r2, #16
90022f66:	ea4b 0000 	orr.w	r0, fp, r0
90022f6a:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
90022f6e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90022f72:	fb03 c000 	mla	r0, r3, r0, ip
90022f76:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90022f7a:	ea42 0b0b 	orr.w	fp, r2, fp
90022f7e:	fb03 000b 	mla	r0, r3, fp, r0
90022f82:	0d43      	lsrs	r3, r0, #21
90022f84:	0940      	lsrs	r0, r0, #5
90022f86:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90022f8a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90022f8e:	4318      	orrs	r0, r3
90022f90:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90022f92:	441c      	add	r4, r3
90022f94:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90022f96:	f82a 0b02 	strh.w	r0, [sl], #2
90022f9a:	441e      	add	r6, r3
90022f9c:	e73b      	b.n	90022e16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
90022f9e:	b00f      	add	sp, #60	; 0x3c
90022fa0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90022fa4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
90022fa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022fa8:	b085      	sub	sp, #20
90022faa:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
90022fae:	9102      	str	r1, [sp, #8]
90022fb0:	2c00      	cmp	r4, #0
90022fb2:	fb04 7103 	mla	r1, r4, r3, r7
90022fb6:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
90022fba:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
90022fbe:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
90022fc2:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
90022fc6:	f2c0 811b 	blt.w	90023200 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90022fca:	45a6      	cmp	lr, r4
90022fcc:	f340 8118 	ble.w	90023200 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90022fd0:	2f00      	cmp	r7, #0
90022fd2:	f2c0 8113 	blt.w	900231fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90022fd6:	42bb      	cmp	r3, r7
90022fd8:	f340 8110 	ble.w	900231fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90022fdc:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90022fe0:	1c7a      	adds	r2, r7, #1
90022fe2:	f100 8110 	bmi.w	90023206 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90022fe6:	4293      	cmp	r3, r2
90022fe8:	f340 810d 	ble.w	90023206 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90022fec:	2e00      	cmp	r6, #0
90022fee:	f000 810c 	beq.w	9002320a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
90022ff2:	f8dc 1004 	ldr.w	r1, [ip, #4]
90022ff6:	3401      	adds	r4, #1
90022ff8:	f100 810b 	bmi.w	90023212 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90022ffc:	45a6      	cmp	lr, r4
90022ffe:	f340 8108 	ble.w	90023212 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90023002:	2800      	cmp	r0, #0
90023004:	f000 8108 	beq.w	90023218 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
90023008:	2f00      	cmp	r7, #0
9002300a:	f2c0 8100 	blt.w	9002320e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
9002300e:	42bb      	cmp	r3, r7
90023010:	f340 80fd 	ble.w	9002320e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90023014:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90023018:	3701      	adds	r7, #1
9002301a:	f100 8100 	bmi.w	9002321e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
9002301e:	42bb      	cmp	r3, r7
90023020:	f340 80fd 	ble.w	9002321e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90023024:	2e00      	cmp	r6, #0
90023026:	f000 80fc 	beq.w	90023222 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
9002302a:	3301      	adds	r3, #1
9002302c:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
90023030:	b2b6      	uxth	r6, r6
90023032:	b280      	uxth	r0, r0
90023034:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90023038:	fb00 fe06 	mul.w	lr, r0, r6
9002303c:	0136      	lsls	r6, r6, #4
9002303e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90023042:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90023046:	eba6 070e 	sub.w	r7, r6, lr
9002304a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
9002304e:	ea4f 6914 	mov.w	r9, r4, lsr #24
90023052:	b280      	uxth	r0, r0
90023054:	b2bf      	uxth	r7, r7
90023056:	1a1b      	subs	r3, r3, r0
90023058:	ea4f 6812 	mov.w	r8, r2, lsr #24
9002305c:	fb0a f607 	mul.w	r6, sl, r7
90023060:	b29b      	uxth	r3, r3
90023062:	fb0b 6603 	mla	r6, fp, r3, r6
90023066:	fb00 6609 	mla	r6, r0, r9, r6
9002306a:	fb0e 6608 	mla	r6, lr, r8, r6
9002306e:	f3c6 2607 	ubfx	r6, r6, #8, #8
90023072:	9600      	str	r6, [sp, #0]
90023074:	2e00      	cmp	r6, #0
90023076:	f000 80be 	beq.w	900231f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
9002307a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
9002307e:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
90023082:	9e02      	ldr	r6, [sp, #8]
90023084:	fb0b fc0c 	mul.w	ip, fp, ip
90023088:	fb0b f505 	mul.w	r5, fp, r5
9002308c:	8836      	ldrh	r6, [r6, #0]
9002308e:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90023092:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90023096:	9501      	str	r5, [sp, #4]
90023098:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
9002309c:	44dc      	add	ip, fp
9002309e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900230a2:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
900230a6:	9503      	str	r5, [sp, #12]
900230a8:	9d01      	ldr	r5, [sp, #4]
900230aa:	f505 7c80 	add.w	ip, r5, #256	; 0x100
900230ae:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900230b2:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
900230b6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
900230ba:	fb0a fc0c 	mul.w	ip, sl, ip
900230be:	ea4f 2b15 	mov.w	fp, r5, lsr #8
900230c2:	fb0a fa01 	mul.w	sl, sl, r1
900230c6:	ea4f 251c 	mov.w	r5, ip, lsr #8
900230ca:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
900230ce:	f50a 7180 	add.w	r1, sl, #256	; 0x100
900230d2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
900230d6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
900230da:	4465      	add	r5, ip
900230dc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
900230e0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
900230e4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900230e8:	fb09 fc0c 	mul.w	ip, r9, ip
900230ec:	0a2d      	lsrs	r5, r5, #8
900230ee:	fb09 f904 	mul.w	r9, r9, r4
900230f2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900230f6:	ea4f 211c 	mov.w	r1, ip, lsr #8
900230fa:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
900230fe:	f509 7480 	add.w	r4, r9, #256	; 0x100
90023102:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90023106:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
9002310a:	437d      	muls	r5, r7
9002310c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90023110:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
90023114:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90023118:	4461      	add	r1, ip
9002311a:	fb08 f404 	mul.w	r4, r8, r4
9002311e:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023122:	fb08 f802 	mul.w	r8, r8, r2
90023126:	0a09      	lsrs	r1, r1, #8
90023128:	0a22      	lsrs	r2, r4, #8
9002312a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
9002312e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90023132:	fb07 f70a 	mul.w	r7, r7, sl
90023136:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
9002313a:	4414      	add	r4, r2
9002313c:	f508 7280 	add.w	r2, r8, #256	; 0x100
90023140:	0a24      	lsrs	r4, r4, #8
90023142:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90023146:	9a03      	ldr	r2, [sp, #12]
90023148:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
9002314c:	fb02 5503 	mla	r5, r2, r3, r5
90023150:	ea4f 2818 	mov.w	r8, r8, lsr #8
90023154:	9a00      	ldr	r2, [sp, #0]
90023156:	fb04 540e 	mla	r4, r4, lr, r5
9002315a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
9002315e:	1235      	asrs	r5, r6, #8
90023160:	fb01 4100 	mla	r1, r1, r0, r4
90023164:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90023168:	0a09      	lsrs	r1, r1, #8
9002316a:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
9002316e:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
90023172:	fb03 7101 	mla	r1, r3, r1, r7
90023176:	fb0e 1e08 	mla	lr, lr, r8, r1
9002317a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
9002317e:	fb00 e101 	mla	r1, r0, r1, lr
90023182:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
90023186:	b287      	uxth	r7, r0
90023188:	0a09      	lsrs	r1, r1, #8
9002318a:	437a      	muls	r2, r7
9002318c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90023190:	1c53      	adds	r3, r2, #1
90023192:	4321      	orrs	r1, r4
90023194:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90023198:	0c0a      	lsrs	r2, r1, #16
9002319a:	f3c1 2407 	ubfx	r4, r1, #8, #8
9002319e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
900231a2:	b2c8      	uxtb	r0, r1
900231a4:	fb12 f207 	smulbb	r2, r2, r7
900231a8:	fb14 f407 	smulbb	r4, r4, r7
900231ac:	b2db      	uxtb	r3, r3
900231ae:	fb10 f007 	smulbb	r0, r0, r7
900231b2:	fb05 2503 	mla	r5, r5, r3, r2
900231b6:	10f2      	asrs	r2, r6, #3
900231b8:	00f6      	lsls	r6, r6, #3
900231ba:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
900231be:	b2ad      	uxth	r5, r5
900231c0:	b2f6      	uxtb	r6, r6
900231c2:	fb02 4203 	mla	r2, r2, r3, r4
900231c6:	fb06 0303 	mla	r3, r6, r3, r0
900231ca:	b294      	uxth	r4, r2
900231cc:	b299      	uxth	r1, r3
900231ce:	1c6b      	adds	r3, r5, #1
900231d0:	1c62      	adds	r2, r4, #1
900231d2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900231d6:	1c4b      	adds	r3, r1, #1
900231d8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
900231dc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
900231e0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
900231e4:	0952      	lsrs	r2, r2, #5
900231e6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900231ea:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900231ee:	432b      	orrs	r3, r5
900231f0:	4313      	orrs	r3, r2
900231f2:	9a02      	ldr	r2, [sp, #8]
900231f4:	8013      	strh	r3, [r2, #0]
900231f6:	b005      	add	sp, #20
900231f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900231fc:	2500      	movs	r5, #0
900231fe:	e6ef      	b.n	90022fe0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
90023200:	2100      	movs	r1, #0
90023202:	460d      	mov	r5, r1
90023204:	e6f7      	b.n	90022ff6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90023206:	2100      	movs	r1, #0
90023208:	e6f5      	b.n	90022ff6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
9002320a:	4631      	mov	r1, r6
9002320c:	e6f3      	b.n	90022ff6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
9002320e:	2400      	movs	r4, #0
90023210:	e702      	b.n	90023018 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
90023212:	2200      	movs	r2, #0
90023214:	4614      	mov	r4, r2
90023216:	e70b      	b.n	90023030 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90023218:	4602      	mov	r2, r0
9002321a:	4604      	mov	r4, r0
9002321c:	e708      	b.n	90023030 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
9002321e:	2200      	movs	r2, #0
90023220:	e706      	b.n	90023030 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90023222:	4632      	mov	r2, r6
90023224:	e704      	b.n	90023030 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

90023226 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023226:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002322a:	b09d      	sub	sp, #116	; 0x74
9002322c:	9219      	str	r2, [sp, #100]	; 0x64
9002322e:	9307      	str	r3, [sp, #28]
90023230:	9a2b      	ldr	r2, [sp, #172]	; 0xac
90023232:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
90023236:	901b      	str	r0, [sp, #108]	; 0x6c
90023238:	931a      	str	r3, [sp, #104]	; 0x68
9002323a:	6850      	ldr	r0, [r2, #4]
9002323c:	9117      	str	r1, [sp, #92]	; 0x5c
9002323e:	6812      	ldr	r2, [r2, #0]
90023240:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
90023244:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
90023248:	fb00 1303 	mla	r3, r0, r3, r1
9002324c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023250:	930a      	str	r3, [sp, #40]	; 0x28
90023252:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90023254:	681b      	ldr	r3, [r3, #0]
90023256:	9310      	str	r3, [sp, #64]	; 0x40
90023258:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
9002325c:	930b      	str	r3, [sp, #44]	; 0x2c
9002325e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90023260:	2b00      	cmp	r3, #0
90023262:	dc03      	bgt.n	9002326c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
90023264:	9b19      	ldr	r3, [sp, #100]	; 0x64
90023266:	2b00      	cmp	r3, #0
90023268:	f340 8375 	ble.w	90023956 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
9002326c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
9002326e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023272:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023276:	1e48      	subs	r0, r1, #1
90023278:	1e57      	subs	r7, r2, #1
9002327a:	9b07      	ldr	r3, [sp, #28]
9002327c:	2b00      	cmp	r3, #0
9002327e:	f340 818e 	ble.w	9002359e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90023282:	ea5f 4c24 	movs.w	ip, r4, asr #16
90023286:	ea4f 4326 	mov.w	r3, r6, asr #16
9002328a:	d406      	bmi.n	9002329a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9002328c:	4584      	cmp	ip, r0
9002328e:	da04      	bge.n	9002329a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90023290:	2b00      	cmp	r3, #0
90023292:	db02      	blt.n	9002329a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90023294:	42bb      	cmp	r3, r7
90023296:	f2c0 8183 	blt.w	900235a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
9002329a:	f11c 0c01 	adds.w	ip, ip, #1
9002329e:	f100 8173 	bmi.w	90023588 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900232a2:	4561      	cmp	r1, ip
900232a4:	f2c0 8170 	blt.w	90023588 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900232a8:	3301      	adds	r3, #1
900232aa:	f100 816d 	bmi.w	90023588 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900232ae:	429a      	cmp	r2, r3
900232b0:	f2c0 816a 	blt.w	90023588 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900232b4:	9b07      	ldr	r3, [sp, #28]
900232b6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
900232b8:	9318      	str	r3, [sp, #96]	; 0x60
900232ba:	9b18      	ldr	r3, [sp, #96]	; 0x60
900232bc:	2b00      	cmp	r3, #0
900232be:	f340 818c 	ble.w	900235da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
900232c2:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
900232c4:	ea4f 4c26 	mov.w	ip, r6, asr #16
900232c8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
900232ca:	f3c4 3003 	ubfx	r0, r4, #12, #4
900232ce:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900232d2:	1422      	asrs	r2, r4, #16
900232d4:	f3c6 3103 	ubfx	r1, r6, #12, #4
900232d8:	689b      	ldr	r3, [r3, #8]
900232da:	f100 81cd 	bmi.w	90023678 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900232de:	f103 38ff 	add.w	r8, r3, #4294967295
900232e2:	4542      	cmp	r2, r8
900232e4:	f280 81c8 	bge.w	90023678 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900232e8:	f1bc 0f00 	cmp.w	ip, #0
900232ec:	f2c0 81c4 	blt.w	90023678 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900232f0:	f10e 38ff 	add.w	r8, lr, #4294967295
900232f4:	45c4      	cmp	ip, r8
900232f6:	f280 81bf 	bge.w	90023678 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900232fa:	b21b      	sxth	r3, r3
900232fc:	9d10      	ldr	r5, [sp, #64]	; 0x40
900232fe:	fb0c 2203 	mla	r2, ip, r3, r2
90023302:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90023306:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
9002330a:	ea4f 6e12 	mov.w	lr, r2, lsr #24
9002330e:	2800      	cmp	r0, #0
90023310:	f000 81a9 	beq.w	90023666 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
90023314:	f8d8 5004 	ldr.w	r5, [r8, #4]
90023318:	950c      	str	r5, [sp, #48]	; 0x30
9002331a:	0e2d      	lsrs	r5, r5, #24
9002331c:	9513      	str	r5, [sp, #76]	; 0x4c
9002331e:	b181      	cbz	r1, 90023342 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90023320:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
90023324:	3b01      	subs	r3, #1
90023326:	009b      	lsls	r3, r3, #2
90023328:	3304      	adds	r3, #4
9002332a:	eb08 0c03 	add.w	ip, r8, r3
9002332e:	f858 3003 	ldr.w	r3, [r8, r3]
90023332:	9308      	str	r3, [sp, #32]
90023334:	0e1b      	lsrs	r3, r3, #24
90023336:	9311      	str	r3, [sp, #68]	; 0x44
90023338:	f8dc 3004 	ldr.w	r3, [ip, #4]
9002333c:	930d      	str	r3, [sp, #52]	; 0x34
9002333e:	0e1b      	lsrs	r3, r3, #24
90023340:	9314      	str	r3, [sp, #80]	; 0x50
90023342:	b280      	uxth	r0, r0
90023344:	9d11      	ldr	r5, [sp, #68]	; 0x44
90023346:	b289      	uxth	r1, r1
90023348:	fb00 f901 	mul.w	r9, r0, r1
9002334c:	0100      	lsls	r0, r0, #4
9002334e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90023352:	eba0 0809 	sub.w	r8, r0, r9
90023356:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
9002335a:	9813      	ldr	r0, [sp, #76]	; 0x4c
9002335c:	b289      	uxth	r1, r1
9002335e:	fa1f f888 	uxth.w	r8, r8
90023362:	1a5b      	subs	r3, r3, r1
90023364:	fb08 f000 	mul.w	r0, r8, r0
90023368:	b29b      	uxth	r3, r3
9002336a:	fb03 000e 	mla	r0, r3, lr, r0
9002336e:	fb01 0005 	mla	r0, r1, r5, r0
90023372:	9d14      	ldr	r5, [sp, #80]	; 0x50
90023374:	fb09 0005 	mla	r0, r9, r5, r0
90023378:	f3c0 2007 	ubfx	r0, r0, #8, #8
9002337c:	2800      	cmp	r0, #0
9002337e:	f000 80fa 	beq.w	90023576 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90023382:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90023386:	d01b      	beq.n	900233c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
90023388:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
9002338c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90023390:	fb0e fa0a 	mul.w	sl, lr, sl
90023394:	fb0e fe02 	mul.w	lr, lr, r2
90023398:	ea4f 221a 	mov.w	r2, sl, lsr #8
9002339c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
900233a0:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
900233a4:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900233a8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900233ac:	4452      	add	r2, sl
900233ae:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900233b2:	0a12      	lsrs	r2, r2, #8
900233b4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
900233b8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900233bc:	ea42 020c 	orr.w	r2, r2, ip
900233c0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900233c2:	2dff      	cmp	r5, #255	; 0xff
900233c4:	d021      	beq.n	9002340a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
900233c6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
900233c8:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
900233cc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900233ce:	fb05 fb0b 	mul.w	fp, r5, fp
900233d2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
900233d4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900233d8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900233da:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900233de:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900233e2:	fb05 fa0a 	mul.w	sl, r5, sl
900233e6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900233ea:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900233ee:	44de      	add	lr, fp
900233f0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900233f4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900233f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900233fc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023400:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023404:	ea4e 050a 	orr.w	r5, lr, sl
90023408:	950c      	str	r5, [sp, #48]	; 0x30
9002340a:	9d11      	ldr	r5, [sp, #68]	; 0x44
9002340c:	2dff      	cmp	r5, #255	; 0xff
9002340e:	d021      	beq.n	90023454 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
90023410:	9d08      	ldr	r5, [sp, #32]
90023412:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90023416:	9d11      	ldr	r5, [sp, #68]	; 0x44
90023418:	fb05 fb0b 	mul.w	fp, r5, fp
9002341c:	9d08      	ldr	r5, [sp, #32]
9002341e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90023422:	9d11      	ldr	r5, [sp, #68]	; 0x44
90023424:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023428:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9002342c:	fb05 fa0a 	mul.w	sl, r5, sl
90023430:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023434:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023438:	44de      	add	lr, fp
9002343a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002343e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023442:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023446:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002344a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002344e:	ea4e 050a 	orr.w	r5, lr, sl
90023452:	9508      	str	r5, [sp, #32]
90023454:	9d14      	ldr	r5, [sp, #80]	; 0x50
90023456:	2dff      	cmp	r5, #255	; 0xff
90023458:	d021      	beq.n	9002349e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
9002345a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9002345c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90023460:	9d14      	ldr	r5, [sp, #80]	; 0x50
90023462:	fb05 fb0b 	mul.w	fp, r5, fp
90023466:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90023468:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
9002346c:	9d14      	ldr	r5, [sp, #80]	; 0x50
9002346e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023472:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023476:	fb05 fa0a 	mul.w	sl, r5, sl
9002347a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002347e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023482:	44de      	add	lr, fp
90023484:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023488:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002348c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023490:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023494:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023498:	ea4e 050a 	orr.w	r5, lr, sl
9002349c:	950d      	str	r5, [sp, #52]	; 0x34
9002349e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
900234a0:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
900234a4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
900234a8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
900234ac:	9d08      	ldr	r5, [sp, #32]
900234ae:	fb08 fc0c 	mul.w	ip, r8, ip
900234b2:	fb03 cc0e 	mla	ip, r3, lr, ip
900234b6:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
900234ba:	9d0d      	ldr	r5, [sp, #52]	; 0x34
900234bc:	fb01 cc0e 	mla	ip, r1, lr, ip
900234c0:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
900234c4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
900234c6:	fb09 cc0e 	mla	ip, r9, lr, ip
900234ca:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
900234ce:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
900234d0:	fb08 f80e 	mul.w	r8, r8, lr
900234d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900234d8:	fb03 8202 	mla	r2, r3, r2, r8
900234dc:	9b08      	ldr	r3, [sp, #32]
900234de:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900234e2:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
900234e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900234e8:	fb01 220a 	mla	r2, r1, sl, r2
900234ec:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
900234f0:	883b      	ldrh	r3, [r7, #0]
900234f2:	fb09 2901 	mla	r9, r9, r1, r2
900234f6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
900234f8:	1219      	asrs	r1, r3, #8
900234fa:	4342      	muls	r2, r0
900234fc:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023500:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90023504:	1c50      	adds	r0, r2, #1
90023506:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
9002350a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9002350e:	ea4c 0c09 	orr.w	ip, ip, r9
90023512:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90023516:	ea4f 421c 	mov.w	r2, ip, lsr #16
9002351a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
9002351e:	fa5f fc8c 	uxtb.w	ip, ip
90023522:	fb12 f205 	smulbb	r2, r2, r5
90023526:	b2c0      	uxtb	r0, r0
90023528:	fb1c fc05 	smulbb	ip, ip, r5
9002352c:	fb01 2100 	mla	r1, r1, r0, r2
90023530:	10da      	asrs	r2, r3, #3
90023532:	fb1e fe05 	smulbb	lr, lr, r5
90023536:	00db      	lsls	r3, r3, #3
90023538:	b289      	uxth	r1, r1
9002353a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9002353e:	b2db      	uxtb	r3, r3
90023540:	fb02 e200 	mla	r2, r2, r0, lr
90023544:	fb03 c300 	mla	r3, r3, r0, ip
90023548:	b292      	uxth	r2, r2
9002354a:	fa1f fc83 	uxth.w	ip, r3
9002354e:	1c4b      	adds	r3, r1, #1
90023550:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90023554:	f10c 0301 	add.w	r3, ip, #1
90023558:	eb03 231c 	add.w	r3, r3, ip, lsr #8
9002355c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90023560:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023564:	430b      	orrs	r3, r1
90023566:	1c51      	adds	r1, r2, #1
90023568:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9002356c:	0952      	lsrs	r2, r2, #5
9002356e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90023572:	4313      	orrs	r3, r2
90023574:	803b      	strh	r3, [r7, #0]
90023576:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90023578:	3702      	adds	r7, #2
9002357a:	441c      	add	r4, r3
9002357c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9002357e:	441e      	add	r6, r3
90023580:	9b18      	ldr	r3, [sp, #96]	; 0x60
90023582:	3b01      	subs	r3, #1
90023584:	9318      	str	r3, [sp, #96]	; 0x60
90023586:	e698      	b.n	900232ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90023588:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9002358a:	441c      	add	r4, r3
9002358c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9002358e:	441e      	add	r6, r3
90023590:	9b07      	ldr	r3, [sp, #28]
90023592:	3b01      	subs	r3, #1
90023594:	9307      	str	r3, [sp, #28]
90023596:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90023598:	3302      	adds	r3, #2
9002359a:	930a      	str	r3, [sp, #40]	; 0x28
9002359c:	e66d      	b.n	9002327a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9002359e:	d023      	beq.n	900235e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
900235a0:	9b07      	ldr	r3, [sp, #28]
900235a2:	9829      	ldr	r0, [sp, #164]	; 0xa4
900235a4:	3b01      	subs	r3, #1
900235a6:	fb00 4003 	mla	r0, r0, r3, r4
900235aa:	1400      	asrs	r0, r0, #16
900235ac:	f53f ae82 	bmi.w	900232b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
900235b0:	3901      	subs	r1, #1
900235b2:	4288      	cmp	r0, r1
900235b4:	f6bf ae7e 	bge.w	900232b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
900235b8:	992a      	ldr	r1, [sp, #168]	; 0xa8
900235ba:	fb01 6303 	mla	r3, r1, r3, r6
900235be:	141b      	asrs	r3, r3, #16
900235c0:	f53f ae78 	bmi.w	900232b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
900235c4:	3a01      	subs	r2, #1
900235c6:	4293      	cmp	r3, r2
900235c8:	f6bf ae74 	bge.w	900232b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
900235cc:	f8dd b01c 	ldr.w	fp, [sp, #28]
900235d0:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
900235d4:	f1bb 0f00 	cmp.w	fp, #0
900235d8:	dc6c      	bgt.n	900236b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
900235da:	9b07      	ldr	r3, [sp, #28]
900235dc:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900235e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900235e2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
900235e6:	930a      	str	r3, [sp, #40]	; 0x28
900235e8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
900235ea:	2b00      	cmp	r3, #0
900235ec:	f340 81b3 	ble.w	90023956 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
900235f0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900235f4:	9b26      	ldr	r3, [sp, #152]	; 0x98
900235f6:	ee30 0a04 	vadd.f32	s0, s0, s8
900235fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
900235fe:	eef0 6a62 	vmov.f32	s13, s5
90023602:	eec7 7a00 	vdiv.f32	s15, s14, s0
90023606:	ee31 1a05 	vadd.f32	s2, s2, s10
9002360a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002360e:	ee16 4a90 	vmov	r4, s13
90023612:	eef0 6a43 	vmov.f32	s13, s6
90023616:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002361a:	ee16 6a90 	vmov	r6, s13
9002361e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90023622:	ee61 7a27 	vmul.f32	s15, s2, s15
90023626:	ee77 2a62 	vsub.f32	s5, s14, s5
9002362a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002362e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023632:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023636:	ee12 2a90 	vmov	r2, s5
9002363a:	eef0 2a47 	vmov.f32	s5, s14
9002363e:	fb92 f3f3 	sdiv	r3, r2, r3
90023642:	ee13 2a10 	vmov	r2, s6
90023646:	9329      	str	r3, [sp, #164]	; 0xa4
90023648:	9b26      	ldr	r3, [sp, #152]	; 0x98
9002364a:	eeb0 3a67 	vmov.f32	s6, s15
9002364e:	fb92 f3f3 	sdiv	r3, r2, r3
90023652:	932a      	str	r3, [sp, #168]	; 0xa8
90023654:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90023656:	9a19      	ldr	r2, [sp, #100]	; 0x64
90023658:	3b01      	subs	r3, #1
9002365a:	9317      	str	r3, [sp, #92]	; 0x5c
9002365c:	9b26      	ldr	r3, [sp, #152]	; 0x98
9002365e:	bf08      	it	eq
90023660:	4613      	moveq	r3, r2
90023662:	9307      	str	r3, [sp, #28]
90023664:	e5fb      	b.n	9002325e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90023666:	2900      	cmp	r1, #0
90023668:	f43f ae6b 	beq.w	90023342 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9002366c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90023670:	9308      	str	r3, [sp, #32]
90023672:	0e1b      	lsrs	r3, r3, #24
90023674:	9311      	str	r3, [sp, #68]	; 0x44
90023676:	e664      	b.n	90023342 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90023678:	f112 0801 	adds.w	r8, r2, #1
9002367c:	f53f af7b 	bmi.w	90023576 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90023680:	4543      	cmp	r3, r8
90023682:	f6ff af78 	blt.w	90023576 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90023686:	f11c 0801 	adds.w	r8, ip, #1
9002368a:	f53f af74 	bmi.w	90023576 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
9002368e:	45c6      	cmp	lr, r8
90023690:	f6ff af71 	blt.w	90023576 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90023694:	9d1a      	ldr	r5, [sp, #104]	; 0x68
90023696:	b21b      	sxth	r3, r3
90023698:	9201      	str	r2, [sp, #4]
9002369a:	fa0f f28e 	sxth.w	r2, lr
9002369e:	e9cd 1504 	strd	r1, r5, [sp, #16]
900236a2:	e9cd c002 	strd	ip, r0, [sp, #8]
900236a6:	9200      	str	r2, [sp, #0]
900236a8:	4639      	mov	r1, r7
900236aa:	9a10      	ldr	r2, [sp, #64]	; 0x40
900236ac:	981b      	ldr	r0, [sp, #108]	; 0x6c
900236ae:	f7ff fc79 	bl	90022fa4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
900236b2:	e760      	b.n	90023576 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900236b4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
900236b6:	1427      	asrs	r7, r4, #16
900236b8:	9d10      	ldr	r5, [sp, #64]	; 0x40
900236ba:	f3c4 3203 	ubfx	r2, r4, #12, #4
900236be:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900236c2:	1433      	asrs	r3, r6, #16
900236c4:	f3c6 3003 	ubfx	r0, r6, #12, #4
900236c8:	fb01 7303 	mla	r3, r1, r3, r7
900236cc:	eb05 0783 	add.w	r7, r5, r3, lsl #2
900236d0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
900236d4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
900236d8:	2a00      	cmp	r2, #0
900236da:	f000 8133 	beq.w	90023944 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
900236de:	687d      	ldr	r5, [r7, #4]
900236e0:	950e      	str	r5, [sp, #56]	; 0x38
900236e2:	0e2d      	lsrs	r5, r5, #24
900236e4:	9515      	str	r5, [sp, #84]	; 0x54
900236e6:	b178      	cbz	r0, 90023708 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
900236e8:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
900236ec:	3901      	subs	r1, #1
900236ee:	0089      	lsls	r1, r1, #2
900236f0:	3104      	adds	r1, #4
900236f2:	eb07 0e01 	add.w	lr, r7, r1
900236f6:	5879      	ldr	r1, [r7, r1]
900236f8:	9109      	str	r1, [sp, #36]	; 0x24
900236fa:	0e09      	lsrs	r1, r1, #24
900236fc:	9112      	str	r1, [sp, #72]	; 0x48
900236fe:	f8de 1004 	ldr.w	r1, [lr, #4]
90023702:	910f      	str	r1, [sp, #60]	; 0x3c
90023704:	0e09      	lsrs	r1, r1, #24
90023706:	9116      	str	r1, [sp, #88]	; 0x58
90023708:	b292      	uxth	r2, r2
9002370a:	9915      	ldr	r1, [sp, #84]	; 0x54
9002370c:	b280      	uxth	r0, r0
9002370e:	9d12      	ldr	r5, [sp, #72]	; 0x48
90023710:	fb02 f800 	mul.w	r8, r2, r0
90023714:	0112      	lsls	r2, r2, #4
90023716:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
9002371a:	eba2 0e08 	sub.w	lr, r2, r8
9002371e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
90023722:	b280      	uxth	r0, r0
90023724:	fa1f fe8e 	uxth.w	lr, lr
90023728:	1a12      	subs	r2, r2, r0
9002372a:	fb0e f101 	mul.w	r1, lr, r1
9002372e:	b292      	uxth	r2, r2
90023730:	fb02 110c 	mla	r1, r2, ip, r1
90023734:	fb00 1105 	mla	r1, r0, r5, r1
90023738:	9d16      	ldr	r5, [sp, #88]	; 0x58
9002373a:	fb08 1105 	mla	r1, r8, r5, r1
9002373e:	f3c1 2107 	ubfx	r1, r1, #8, #8
90023742:	2900      	cmp	r1, #0
90023744:	f000 80f5 	beq.w	90023932 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
90023748:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
9002374c:	d019      	beq.n	90023782 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
9002374e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90023752:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90023756:	fb0c fa0a 	mul.w	sl, ip, sl
9002375a:	fb0c fc03 	mul.w	ip, ip, r3
9002375e:	ea4f 231a 	mov.w	r3, sl, lsr #8
90023762:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90023766:	f50c 7780 	add.w	r7, ip, #256	; 0x100
9002376a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002376e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90023772:	4453      	add	r3, sl
90023774:	0a3f      	lsrs	r7, r7, #8
90023776:	0a1b      	lsrs	r3, r3, #8
90023778:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
9002377c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90023780:	433b      	orrs	r3, r7
90023782:	9d15      	ldr	r5, [sp, #84]	; 0x54
90023784:	2dff      	cmp	r5, #255	; 0xff
90023786:	d020      	beq.n	900237ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
90023788:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9002378a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
9002378e:	9d15      	ldr	r5, [sp, #84]	; 0x54
90023790:	436f      	muls	r7, r5
90023792:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90023794:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023798:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
9002379c:	9d15      	ldr	r5, [sp, #84]	; 0x54
9002379e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900237a2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900237a6:	fb05 fa0a 	mul.w	sl, r5, sl
900237aa:	44bc      	add	ip, r7
900237ac:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900237b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900237b4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900237b8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900237bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900237c0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900237c4:	ea4c 050a 	orr.w	r5, ip, sl
900237c8:	950e      	str	r5, [sp, #56]	; 0x38
900237ca:	9d12      	ldr	r5, [sp, #72]	; 0x48
900237cc:	2dff      	cmp	r5, #255	; 0xff
900237ce:	d020      	beq.n	90023812 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
900237d0:	9d09      	ldr	r5, [sp, #36]	; 0x24
900237d2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
900237d6:	9d12      	ldr	r5, [sp, #72]	; 0x48
900237d8:	436f      	muls	r7, r5
900237da:	9d09      	ldr	r5, [sp, #36]	; 0x24
900237dc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900237e0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900237e4:	9d12      	ldr	r5, [sp, #72]	; 0x48
900237e6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900237ea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900237ee:	fb05 fa0a 	mul.w	sl, r5, sl
900237f2:	44bc      	add	ip, r7
900237f4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900237f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900237fc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023800:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023804:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023808:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002380c:	ea4c 050a 	orr.w	r5, ip, sl
90023810:	9509      	str	r5, [sp, #36]	; 0x24
90023812:	9d16      	ldr	r5, [sp, #88]	; 0x58
90023814:	2dff      	cmp	r5, #255	; 0xff
90023816:	d020      	beq.n	9002385a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
90023818:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
9002381a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
9002381e:	9d16      	ldr	r5, [sp, #88]	; 0x58
90023820:	436f      	muls	r7, r5
90023822:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90023824:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023828:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
9002382c:	9d16      	ldr	r5, [sp, #88]	; 0x58
9002382e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90023832:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023836:	fb05 fa0a 	mul.w	sl, r5, sl
9002383a:	44bc      	add	ip, r7
9002383c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90023840:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023844:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023848:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002384c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023850:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023854:	ea4c 050a 	orr.w	r5, ip, sl
90023858:	950f      	str	r5, [sp, #60]	; 0x3c
9002385a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9002385c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
90023860:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90023864:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90023868:	9d09      	ldr	r5, [sp, #36]	; 0x24
9002386a:	fb0e f707 	mul.w	r7, lr, r7
9002386e:	fb02 770c 	mla	r7, r2, ip, r7
90023872:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90023876:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90023878:	fb00 770c 	mla	r7, r0, ip, r7
9002387c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90023880:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90023882:	fb08 770c 	mla	r7, r8, ip, r7
90023886:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
9002388a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
9002388c:	fb0e fe0c 	mul.w	lr, lr, ip
90023890:	0a3f      	lsrs	r7, r7, #8
90023892:	fb02 e303 	mla	r3, r2, r3, lr
90023896:	9a09      	ldr	r2, [sp, #36]	; 0x24
90023898:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
9002389c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
900238a0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900238a2:	fb00 330a 	mla	r3, r0, sl, r3
900238a6:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
900238aa:	f8b9 0000 	ldrh.w	r0, [r9]
900238ae:	fb08 3c0c 	mla	ip, r8, ip, r3
900238b2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900238b4:	1202      	asrs	r2, r0, #8
900238b6:	4359      	muls	r1, r3
900238b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900238bc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
900238c0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
900238c4:	1c4b      	adds	r3, r1, #1
900238c6:	ea47 070c 	orr.w	r7, r7, ip
900238ca:	eb03 2111 	add.w	r1, r3, r1, lsr #8
900238ce:	0c3b      	lsrs	r3, r7, #16
900238d0:	ea6f 2111 	mvn.w	r1, r1, lsr #8
900238d4:	f3c7 2c07 	ubfx	ip, r7, #8, #8
900238d8:	b2ff      	uxtb	r7, r7
900238da:	fb13 f305 	smulbb	r3, r3, r5
900238de:	b2c9      	uxtb	r1, r1
900238e0:	fb17 f705 	smulbb	r7, r7, r5
900238e4:	fb02 3201 	mla	r2, r2, r1, r3
900238e8:	10c3      	asrs	r3, r0, #3
900238ea:	fb1c fc05 	smulbb	ip, ip, r5
900238ee:	00c0      	lsls	r0, r0, #3
900238f0:	b292      	uxth	r2, r2
900238f2:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
900238f6:	b2c0      	uxtb	r0, r0
900238f8:	fb03 c301 	mla	r3, r3, r1, ip
900238fc:	fb00 7001 	mla	r0, r0, r1, r7
90023900:	1c51      	adds	r1, r2, #1
90023902:	b29b      	uxth	r3, r3
90023904:	b280      	uxth	r0, r0
90023906:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9002390a:	f100 0c01 	add.w	ip, r0, #1
9002390e:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90023912:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
90023916:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9002391a:	ea4c 0202 	orr.w	r2, ip, r2
9002391e:	f103 0c01 	add.w	ip, r3, #1
90023922:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90023926:	095b      	lsrs	r3, r3, #5
90023928:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9002392c:	431a      	orrs	r2, r3
9002392e:	f8a9 2000 	strh.w	r2, [r9]
90023932:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90023934:	f109 0902 	add.w	r9, r9, #2
90023938:	f10b 3bff 	add.w	fp, fp, #4294967295
9002393c:	441c      	add	r4, r3
9002393e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90023940:	441e      	add	r6, r3
90023942:	e647      	b.n	900235d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
90023944:	2800      	cmp	r0, #0
90023946:	f43f aedf 	beq.w	90023708 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
9002394a:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
9002394e:	9109      	str	r1, [sp, #36]	; 0x24
90023950:	0e09      	lsrs	r1, r1, #24
90023952:	9112      	str	r1, [sp, #72]	; 0x48
90023954:	e6d8      	b.n	90023708 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90023956:	b01d      	add	sp, #116	; 0x74
90023958:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002395c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
9002395c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023960:	b085      	sub	sp, #20
90023962:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
90023966:	9102      	str	r1, [sp, #8]
90023968:	2c00      	cmp	r4, #0
9002396a:	fb04 7103 	mla	r1, r4, r3, r7
9002396e:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
90023972:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
90023976:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
9002397a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
9002397e:	f2c0 810c 	blt.w	90023b9a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90023982:	45a6      	cmp	lr, r4
90023984:	f340 8109 	ble.w	90023b9a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90023988:	2f00      	cmp	r7, #0
9002398a:	f2c0 8104 	blt.w	90023b96 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
9002398e:	42bb      	cmp	r3, r7
90023990:	f340 8101 	ble.w	90023b96 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90023994:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90023998:	1c7a      	adds	r2, r7, #1
9002399a:	f100 8101 	bmi.w	90023ba0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
9002399e:	4293      	cmp	r3, r2
900239a0:	f340 80fe 	ble.w	90023ba0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
900239a4:	2e00      	cmp	r6, #0
900239a6:	f000 80fd 	beq.w	90023ba4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
900239aa:	f8dc 1004 	ldr.w	r1, [ip, #4]
900239ae:	3401      	adds	r4, #1
900239b0:	f100 80fc 	bmi.w	90023bac <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
900239b4:	45a6      	cmp	lr, r4
900239b6:	f340 80f9 	ble.w	90023bac <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
900239ba:	2800      	cmp	r0, #0
900239bc:	f000 80f9 	beq.w	90023bb2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
900239c0:	2f00      	cmp	r7, #0
900239c2:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
900239c6:	f2c0 80ef 	blt.w	90023ba8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
900239ca:	42bb      	cmp	r3, r7
900239cc:	f340 80ec 	ble.w	90023ba8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
900239d0:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
900239d4:	3701      	adds	r7, #1
900239d6:	f100 80ef 	bmi.w	90023bb8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
900239da:	42bb      	cmp	r3, r7
900239dc:	f340 80ec 	ble.w	90023bb8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
900239e0:	2e00      	cmp	r6, #0
900239e2:	f000 80eb 	beq.w	90023bbc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
900239e6:	6852      	ldr	r2, [r2, #4]
900239e8:	b2b6      	uxth	r6, r6
900239ea:	b280      	uxth	r0, r0
900239ec:	ea4f 6a11 	mov.w	sl, r1, lsr #24
900239f0:	fb00 fe06 	mul.w	lr, r0, r6
900239f4:	0136      	lsls	r6, r6, #4
900239f6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
900239fa:	ebce 1000 	rsb	r0, lr, r0, lsl #4
900239fe:	eba6 070e 	sub.w	r7, r6, lr
90023a02:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
90023a06:	ea4f 6914 	mov.w	r9, r4, lsr #24
90023a0a:	b280      	uxth	r0, r0
90023a0c:	b2bf      	uxth	r7, r7
90023a0e:	1a1b      	subs	r3, r3, r0
90023a10:	ea4f 6812 	mov.w	r8, r2, lsr #24
90023a14:	fb07 f60a 	mul.w	r6, r7, sl
90023a18:	b29b      	uxth	r3, r3
90023a1a:	fb0b 6603 	mla	r6, fp, r3, r6
90023a1e:	fb00 6609 	mla	r6, r0, r9, r6
90023a22:	fb0e 6608 	mla	r6, lr, r8, r6
90023a26:	f3c6 2607 	ubfx	r6, r6, #8, #8
90023a2a:	9600      	str	r6, [sp, #0]
90023a2c:	2e00      	cmp	r6, #0
90023a2e:	f000 80af 	beq.w	90023b90 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
90023a32:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90023a36:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
90023a3a:	9e02      	ldr	r6, [sp, #8]
90023a3c:	fb0b fc0c 	mul.w	ip, fp, ip
90023a40:	fb0b f505 	mul.w	r5, fp, r5
90023a44:	8836      	ldrh	r6, [r6, #0]
90023a46:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90023a4a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90023a4e:	9501      	str	r5, [sp, #4]
90023a50:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90023a54:	44dc      	add	ip, fp
90023a56:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023a5a:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
90023a5e:	9503      	str	r5, [sp, #12]
90023a60:	9d01      	ldr	r5, [sp, #4]
90023a62:	f505 7c80 	add.w	ip, r5, #256	; 0x100
90023a66:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90023a6a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
90023a6e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90023a72:	fb0a fc0c 	mul.w	ip, sl, ip
90023a76:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90023a7a:	fb0a fa01 	mul.w	sl, sl, r1
90023a7e:	ea4f 251c 	mov.w	r5, ip, lsr #8
90023a82:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90023a86:	f50a 7180 	add.w	r1, sl, #256	; 0x100
90023a8a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90023a8e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90023a92:	4465      	add	r5, ip
90023a94:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90023a98:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
90023a9c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023aa0:	fb09 fc0c 	mul.w	ip, r9, ip
90023aa4:	0a2d      	lsrs	r5, r5, #8
90023aa6:	fb09 f904 	mul.w	r9, r9, r4
90023aaa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023aae:	ea4f 211c 	mov.w	r1, ip, lsr #8
90023ab2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90023ab6:	f509 7480 	add.w	r4, r9, #256	; 0x100
90023aba:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90023abe:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90023ac2:	437d      	muls	r5, r7
90023ac4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90023ac8:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
90023acc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90023ad0:	4461      	add	r1, ip
90023ad2:	fb08 f404 	mul.w	r4, r8, r4
90023ad6:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023ada:	fb08 f802 	mul.w	r8, r8, r2
90023ade:	0a09      	lsrs	r1, r1, #8
90023ae0:	0a22      	lsrs	r2, r4, #8
90023ae2:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
90023ae6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90023aea:	fb07 f70a 	mul.w	r7, r7, sl
90023aee:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90023af2:	4414      	add	r4, r2
90023af4:	f508 7280 	add.w	r2, r8, #256	; 0x100
90023af8:	0a24      	lsrs	r4, r4, #8
90023afa:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90023afe:	9a03      	ldr	r2, [sp, #12]
90023b00:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
90023b04:	fb02 5503 	mla	r5, r2, r3, r5
90023b08:	ea4f 2818 	mov.w	r8, r8, lsr #8
90023b0c:	fb04 540e 	mla	r4, r4, lr, r5
90023b10:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
90023b14:	fb01 4100 	mla	r1, r1, r0, r4
90023b18:	0a09      	lsrs	r1, r1, #8
90023b1a:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
90023b1e:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
90023b22:	fb03 7101 	mla	r1, r3, r1, r7
90023b26:	9b00      	ldr	r3, [sp, #0]
90023b28:	fb0e 1e08 	mla	lr, lr, r8, r1
90023b2c:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
90023b30:	43da      	mvns	r2, r3
90023b32:	1233      	asrs	r3, r6, #8
90023b34:	fb00 e101 	mla	r1, r0, r1, lr
90023b38:	10f0      	asrs	r0, r6, #3
90023b3a:	b2d2      	uxtb	r2, r2
90023b3c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90023b40:	0a09      	lsrs	r1, r1, #8
90023b42:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90023b46:	00f6      	lsls	r6, r6, #3
90023b48:	4353      	muls	r3, r2
90023b4a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90023b4e:	4350      	muls	r0, r2
90023b50:	b2f6      	uxtb	r6, r6
90023b52:	4321      	orrs	r1, r4
90023b54:	4356      	muls	r6, r2
90023b56:	1c5a      	adds	r2, r3, #1
90023b58:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90023b5c:	0c0b      	lsrs	r3, r1, #16
90023b5e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90023b62:	1c42      	adds	r2, r0, #1
90023b64:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90023b68:	0a0a      	lsrs	r2, r1, #8
90023b6a:	021b      	lsls	r3, r3, #8
90023b6c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90023b70:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
90023b74:	00d2      	lsls	r2, r2, #3
90023b76:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90023b7a:	4313      	orrs	r3, r2
90023b7c:	1c72      	adds	r2, r6, #1
90023b7e:	eb02 2616 	add.w	r6, r2, r6, lsr #8
90023b82:	eb01 2116 	add.w	r1, r1, r6, lsr #8
90023b86:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90023b8a:	4319      	orrs	r1, r3
90023b8c:	9b02      	ldr	r3, [sp, #8]
90023b8e:	8019      	strh	r1, [r3, #0]
90023b90:	b005      	add	sp, #20
90023b92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023b96:	2500      	movs	r5, #0
90023b98:	e6fe      	b.n	90023998 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
90023b9a:	2100      	movs	r1, #0
90023b9c:	460d      	mov	r5, r1
90023b9e:	e706      	b.n	900239ae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90023ba0:	2100      	movs	r1, #0
90023ba2:	e704      	b.n	900239ae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90023ba4:	4631      	mov	r1, r6
90023ba6:	e702      	b.n	900239ae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90023ba8:	2400      	movs	r4, #0
90023baa:	e713      	b.n	900239d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
90023bac:	2200      	movs	r2, #0
90023bae:	4614      	mov	r4, r2
90023bb0:	e71a      	b.n	900239e8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90023bb2:	4602      	mov	r2, r0
90023bb4:	4604      	mov	r4, r0
90023bb6:	e717      	b.n	900239e8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90023bb8:	2200      	movs	r2, #0
90023bba:	e715      	b.n	900239e8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90023bbc:	4632      	mov	r2, r6
90023bbe:	e713      	b.n	900239e8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

90023bc0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023bc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023bc4:	b09b      	sub	sp, #108	; 0x6c
90023bc6:	9218      	str	r2, [sp, #96]	; 0x60
90023bc8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90023bca:	9019      	str	r0, [sp, #100]	; 0x64
90023bcc:	9116      	str	r1, [sp, #88]	; 0x58
90023bce:	6850      	ldr	r0, [r2, #4]
90023bd0:	9307      	str	r3, [sp, #28]
90023bd2:	6812      	ldr	r2, [r2, #0]
90023bd4:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
90023bd8:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
90023bdc:	fb00 1303 	mla	r3, r0, r3, r1
90023be0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023be4:	930a      	str	r3, [sp, #40]	; 0x28
90023be6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023be8:	681b      	ldr	r3, [r3, #0]
90023bea:	930f      	str	r3, [sp, #60]	; 0x3c
90023bec:	9b16      	ldr	r3, [sp, #88]	; 0x58
90023bee:	2b00      	cmp	r3, #0
90023bf0:	dc03      	bgt.n	90023bfa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90023bf2:	9b18      	ldr	r3, [sp, #96]	; 0x60
90023bf4:	2b00      	cmp	r3, #0
90023bf6:	f340 8387 	ble.w	90024308 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90023bfa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023bfc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023c00:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023c04:	1e48      	subs	r0, r1, #1
90023c06:	1e57      	subs	r7, r2, #1
90023c08:	9b07      	ldr	r3, [sp, #28]
90023c0a:	2b00      	cmp	r3, #0
90023c0c:	f340 8166 	ble.w	90023edc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90023c10:	ea5f 4c24 	movs.w	ip, r4, asr #16
90023c14:	ea4f 4326 	mov.w	r3, r6, asr #16
90023c18:	d406      	bmi.n	90023c28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90023c1a:	4584      	cmp	ip, r0
90023c1c:	da04      	bge.n	90023c28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90023c1e:	2b00      	cmp	r3, #0
90023c20:	db02      	blt.n	90023c28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90023c22:	42bb      	cmp	r3, r7
90023c24:	f2c0 815b 	blt.w	90023ede <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90023c28:	f11c 0c01 	adds.w	ip, ip, #1
90023c2c:	f100 814b 	bmi.w	90023ec6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90023c30:	4561      	cmp	r1, ip
90023c32:	f2c0 8148 	blt.w	90023ec6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90023c36:	3301      	adds	r3, #1
90023c38:	f100 8145 	bmi.w	90023ec6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90023c3c:	429a      	cmp	r2, r3
90023c3e:	f2c0 8142 	blt.w	90023ec6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90023c42:	9b07      	ldr	r3, [sp, #28]
90023c44:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90023c46:	9317      	str	r3, [sp, #92]	; 0x5c
90023c48:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90023c4a:	2b00      	cmp	r3, #0
90023c4c:	f340 8165 	ble.w	90023f1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90023c50:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
90023c52:	ea4f 4c26 	mov.w	ip, r6, asr #16
90023c56:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023c58:	f3c4 3103 	ubfx	r1, r4, #12, #4
90023c5c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90023c60:	1422      	asrs	r2, r4, #16
90023c62:	f3c6 3003 	ubfx	r0, r6, #12, #4
90023c66:	689b      	ldr	r3, [r3, #8]
90023c68:	f100 81d5 	bmi.w	90024016 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90023c6c:	f103 38ff 	add.w	r8, r3, #4294967295
90023c70:	4542      	cmp	r2, r8
90023c72:	f280 81d0 	bge.w	90024016 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90023c76:	f1bc 0f00 	cmp.w	ip, #0
90023c7a:	f2c0 81cc 	blt.w	90024016 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90023c7e:	f10e 38ff 	add.w	r8, lr, #4294967295
90023c82:	45c4      	cmp	ip, r8
90023c84:	f280 81c7 	bge.w	90024016 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90023c88:	b21b      	sxth	r3, r3
90023c8a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90023c8c:	fb0c 2203 	mla	r2, ip, r3, r2
90023c90:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90023c94:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90023c98:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90023c9c:	2900      	cmp	r1, #0
90023c9e:	f000 8182 	beq.w	90023fa6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90023ca2:	f8d8 5004 	ldr.w	r5, [r8, #4]
90023ca6:	950b      	str	r5, [sp, #44]	; 0x2c
90023ca8:	0e2d      	lsrs	r5, r5, #24
90023caa:	9512      	str	r5, [sp, #72]	; 0x48
90023cac:	b180      	cbz	r0, 90023cd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90023cae:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
90023cb2:	3b01      	subs	r3, #1
90023cb4:	009b      	lsls	r3, r3, #2
90023cb6:	3304      	adds	r3, #4
90023cb8:	eb08 0c03 	add.w	ip, r8, r3
90023cbc:	f858 3003 	ldr.w	r3, [r8, r3]
90023cc0:	9308      	str	r3, [sp, #32]
90023cc2:	0e1b      	lsrs	r3, r3, #24
90023cc4:	9310      	str	r3, [sp, #64]	; 0x40
90023cc6:	f8dc 3004 	ldr.w	r3, [ip, #4]
90023cca:	930c      	str	r3, [sp, #48]	; 0x30
90023ccc:	0e1b      	lsrs	r3, r3, #24
90023cce:	9313      	str	r3, [sp, #76]	; 0x4c
90023cd0:	b289      	uxth	r1, r1
90023cd2:	9b12      	ldr	r3, [sp, #72]	; 0x48
90023cd4:	b280      	uxth	r0, r0
90023cd6:	9d10      	ldr	r5, [sp, #64]	; 0x40
90023cd8:	fb01 f900 	mul.w	r9, r1, r0
90023cdc:	0109      	lsls	r1, r1, #4
90023cde:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90023ce2:	eba1 0809 	sub.w	r8, r1, r9
90023ce6:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
90023cea:	b280      	uxth	r0, r0
90023cec:	fa1f f888 	uxth.w	r8, r8
90023cf0:	1a09      	subs	r1, r1, r0
90023cf2:	fb08 f303 	mul.w	r3, r8, r3
90023cf6:	b289      	uxth	r1, r1
90023cf8:	fb01 330e 	mla	r3, r1, lr, r3
90023cfc:	fb00 3305 	mla	r3, r0, r5, r3
90023d00:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90023d02:	fb09 3305 	mla	r3, r9, r5, r3
90023d06:	f3c3 2307 	ubfx	r3, r3, #8, #8
90023d0a:	2b00      	cmp	r3, #0
90023d0c:	f000 80d2 	beq.w	90023eb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90023d10:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90023d14:	d01b      	beq.n	90023d4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
90023d16:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
90023d1a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90023d1e:	fb0e fa0a 	mul.w	sl, lr, sl
90023d22:	fb0e fe02 	mul.w	lr, lr, r2
90023d26:	ea4f 221a 	mov.w	r2, sl, lsr #8
90023d2a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90023d2e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90023d32:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90023d36:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90023d3a:	4452      	add	r2, sl
90023d3c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023d40:	0a12      	lsrs	r2, r2, #8
90023d42:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90023d46:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90023d4a:	ea42 020c 	orr.w	r2, r2, ip
90023d4e:	9d12      	ldr	r5, [sp, #72]	; 0x48
90023d50:	2dff      	cmp	r5, #255	; 0xff
90023d52:	d021      	beq.n	90023d98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
90023d54:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90023d56:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90023d5a:	9d12      	ldr	r5, [sp, #72]	; 0x48
90023d5c:	fb05 fb0b 	mul.w	fp, r5, fp
90023d60:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90023d62:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90023d66:	9d12      	ldr	r5, [sp, #72]	; 0x48
90023d68:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023d6c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023d70:	fb05 fa0a 	mul.w	sl, r5, sl
90023d74:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023d78:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023d7c:	44de      	add	lr, fp
90023d7e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023d82:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023d86:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023d8a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023d8e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023d92:	ea4e 050a 	orr.w	r5, lr, sl
90023d96:	950b      	str	r5, [sp, #44]	; 0x2c
90023d98:	9d10      	ldr	r5, [sp, #64]	; 0x40
90023d9a:	2dff      	cmp	r5, #255	; 0xff
90023d9c:	d021      	beq.n	90023de2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
90023d9e:	9d08      	ldr	r5, [sp, #32]
90023da0:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90023da4:	9d10      	ldr	r5, [sp, #64]	; 0x40
90023da6:	fb05 fb0b 	mul.w	fp, r5, fp
90023daa:	9d08      	ldr	r5, [sp, #32]
90023dac:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
90023db0:	9d10      	ldr	r5, [sp, #64]	; 0x40
90023db2:	fb05 fa0e 	mul.w	sl, r5, lr
90023db6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023dba:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023dbe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023dc2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023dc6:	44de      	add	lr, fp
90023dc8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023dcc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023dd0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023dd4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023dd8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023ddc:	ea4e 050a 	orr.w	r5, lr, sl
90023de0:	9508      	str	r5, [sp, #32]
90023de2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90023de4:	2dff      	cmp	r5, #255	; 0xff
90023de6:	d021      	beq.n	90023e2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
90023de8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90023dea:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90023dee:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90023df0:	fb05 fb0b 	mul.w	fp, r5, fp
90023df4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90023df6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90023dfa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90023dfc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023e00:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023e04:	fb05 fa0a 	mul.w	sl, r5, sl
90023e08:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023e0c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023e10:	44de      	add	lr, fp
90023e12:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023e16:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023e1a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023e1e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023e22:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023e26:	ea4e 050a 	orr.w	r5, lr, sl
90023e2a:	950c      	str	r5, [sp, #48]	; 0x30
90023e2c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90023e2e:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
90023e32:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90023e36:	2bff      	cmp	r3, #255	; 0xff
90023e38:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90023e3c:	9d08      	ldr	r5, [sp, #32]
90023e3e:	fb08 fc0c 	mul.w	ip, r8, ip
90023e42:	fb01 cc0e 	mla	ip, r1, lr, ip
90023e46:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
90023e4a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90023e4c:	fb00 cc0e 	mla	ip, r0, lr, ip
90023e50:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
90023e54:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90023e56:	fb09 cc0e 	mla	ip, r9, lr, ip
90023e5a:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
90023e5e:	fb08 f80e 	mul.w	r8, r8, lr
90023e62:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023e66:	fb01 8202 	mla	r2, r1, r2, r8
90023e6a:	9908      	ldr	r1, [sp, #32]
90023e6c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023e70:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
90023e74:	990c      	ldr	r1, [sp, #48]	; 0x30
90023e76:	fb00 220a 	mla	r2, r0, sl, r2
90023e7a:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
90023e7e:	fb09 2900 	mla	r9, r9, r0, r2
90023e82:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023e86:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
90023e8a:	ea4c 0c09 	orr.w	ip, ip, r9
90023e8e:	ea4f 221c 	mov.w	r2, ip, lsr #8
90023e92:	f040 8091 	bne.w	90023fb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90023e96:	ea4f 135c 	mov.w	r3, ip, lsr #5
90023e9a:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
90023e9e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90023ea2:	f022 0207 	bic.w	r2, r2, #7
90023ea6:	431a      	orrs	r2, r3
90023ea8:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90023eac:	ea4c 0c02 	orr.w	ip, ip, r2
90023eb0:	f8a7 c000 	strh.w	ip, [r7]
90023eb4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90023eb6:	3702      	adds	r7, #2
90023eb8:	441c      	add	r4, r3
90023eba:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90023ebc:	441e      	add	r6, r3
90023ebe:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90023ec0:	3b01      	subs	r3, #1
90023ec2:	9317      	str	r3, [sp, #92]	; 0x5c
90023ec4:	e6c0      	b.n	90023c48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
90023ec6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90023ec8:	441c      	add	r4, r3
90023eca:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90023ecc:	441e      	add	r6, r3
90023ece:	9b07      	ldr	r3, [sp, #28]
90023ed0:	3b01      	subs	r3, #1
90023ed2:	9307      	str	r3, [sp, #28]
90023ed4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90023ed6:	3302      	adds	r3, #2
90023ed8:	930a      	str	r3, [sp, #40]	; 0x28
90023eda:	e695      	b.n	90023c08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90023edc:	d024      	beq.n	90023f28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
90023ede:	9b07      	ldr	r3, [sp, #28]
90023ee0:	9827      	ldr	r0, [sp, #156]	; 0x9c
90023ee2:	3b01      	subs	r3, #1
90023ee4:	fb00 4003 	mla	r0, r0, r3, r4
90023ee8:	1400      	asrs	r0, r0, #16
90023eea:	f53f aeaa 	bmi.w	90023c42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90023eee:	3901      	subs	r1, #1
90023ef0:	4288      	cmp	r0, r1
90023ef2:	f6bf aea6 	bge.w	90023c42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90023ef6:	9928      	ldr	r1, [sp, #160]	; 0xa0
90023ef8:	fb01 6303 	mla	r3, r1, r3, r6
90023efc:	141b      	asrs	r3, r3, #16
90023efe:	f53f aea0 	bmi.w	90023c42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90023f02:	3a01      	subs	r2, #1
90023f04:	4293      	cmp	r3, r2
90023f06:	f6bf ae9c 	bge.w	90023c42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90023f0a:	f8dd b01c 	ldr.w	fp, [sp, #28]
90023f0e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
90023f12:	f1bb 0f00 	cmp.w	fp, #0
90023f16:	f300 809a 	bgt.w	9002404e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90023f1a:	9b07      	ldr	r3, [sp, #28]
90023f1c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90023f20:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90023f22:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90023f26:	930a      	str	r3, [sp, #40]	; 0x28
90023f28:	9b16      	ldr	r3, [sp, #88]	; 0x58
90023f2a:	2b00      	cmp	r3, #0
90023f2c:	f340 81ec 	ble.w	90024308 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90023f30:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90023f34:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023f36:	ee30 0a04 	vadd.f32	s0, s0, s8
90023f3a:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023f3e:	eef0 6a62 	vmov.f32	s13, s5
90023f42:	eec7 7a00 	vdiv.f32	s15, s14, s0
90023f46:	ee31 1a05 	vadd.f32	s2, s2, s10
90023f4a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023f4e:	ee16 4a90 	vmov	r4, s13
90023f52:	eef0 6a43 	vmov.f32	s13, s6
90023f56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023f5a:	ee16 6a90 	vmov	r6, s13
90023f5e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90023f62:	ee61 7a27 	vmul.f32	s15, s2, s15
90023f66:	ee77 2a62 	vsub.f32	s5, s14, s5
90023f6a:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023f6e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023f72:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023f76:	ee12 2a90 	vmov	r2, s5
90023f7a:	eef0 2a47 	vmov.f32	s5, s14
90023f7e:	fb92 f3f3 	sdiv	r3, r2, r3
90023f82:	ee13 2a10 	vmov	r2, s6
90023f86:	9327      	str	r3, [sp, #156]	; 0x9c
90023f88:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023f8a:	eeb0 3a67 	vmov.f32	s6, s15
90023f8e:	fb92 f3f3 	sdiv	r3, r2, r3
90023f92:	9328      	str	r3, [sp, #160]	; 0xa0
90023f94:	9b16      	ldr	r3, [sp, #88]	; 0x58
90023f96:	9a18      	ldr	r2, [sp, #96]	; 0x60
90023f98:	3b01      	subs	r3, #1
90023f9a:	9316      	str	r3, [sp, #88]	; 0x58
90023f9c:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023f9e:	bf08      	it	eq
90023fa0:	4613      	moveq	r3, r2
90023fa2:	9307      	str	r3, [sp, #28]
90023fa4:	e622      	b.n	90023bec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
90023fa6:	2800      	cmp	r0, #0
90023fa8:	f43f ae92 	beq.w	90023cd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90023fac:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90023fb0:	9308      	str	r3, [sp, #32]
90023fb2:	0e1b      	lsrs	r3, r3, #24
90023fb4:	9310      	str	r3, [sp, #64]	; 0x40
90023fb6:	e68b      	b.n	90023cd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90023fb8:	8839      	ldrh	r1, [r7, #0]
90023fba:	43db      	mvns	r3, r3
90023fbc:	4dd4      	ldr	r5, [pc, #848]	; (90024310 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90023fbe:	ea4f 2e21 	mov.w	lr, r1, asr #8
90023fc2:	fa5f f883 	uxtb.w	r8, r3
90023fc6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
90023fca:	10c8      	asrs	r0, r1, #3
90023fcc:	00cb      	lsls	r3, r1, #3
90023fce:	fb0e fe08 	mul.w	lr, lr, r8
90023fd2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90023fd6:	b2db      	uxtb	r3, r3
90023fd8:	f10e 0101 	add.w	r1, lr, #1
90023fdc:	fb00 f008 	mul.w	r0, r0, r8
90023fe0:	fb03 f308 	mul.w	r3, r3, r8
90023fe4:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
90023fe8:	ea4f 411c 	mov.w	r1, ip, lsr #16
90023fec:	eb01 211e 	add.w	r1, r1, lr, lsr #8
90023ff0:	f100 0e01 	add.w	lr, r0, #1
90023ff4:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
90023ff8:	b2c9      	uxtb	r1, r1
90023ffa:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90023ffe:	ea05 2101 	and.w	r1, r5, r1, lsl #8
90024002:	00d2      	lsls	r2, r2, #3
90024004:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90024008:	430a      	orrs	r2, r1
9002400a:	1c59      	adds	r1, r3, #1
9002400c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90024010:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90024014:	e748      	b.n	90023ea8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90024016:	f112 0801 	adds.w	r8, r2, #1
9002401a:	f53f af4b 	bmi.w	90023eb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
9002401e:	4543      	cmp	r3, r8
90024020:	f6ff af48 	blt.w	90023eb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90024024:	f11c 0801 	adds.w	r8, ip, #1
90024028:	f53f af44 	bmi.w	90023eb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
9002402c:	45c6      	cmp	lr, r8
9002402e:	f6ff af41 	blt.w	90023eb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90024032:	b21b      	sxth	r3, r3
90024034:	e9cd 2c01 	strd	r2, ip, [sp, #4]
90024038:	fa0f f28e 	sxth.w	r2, lr
9002403c:	e9cd 1003 	strd	r1, r0, [sp, #12]
90024040:	9200      	str	r2, [sp, #0]
90024042:	4639      	mov	r1, r7
90024044:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90024046:	9819      	ldr	r0, [sp, #100]	; 0x64
90024048:	f7ff fc88 	bl	9002395c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
9002404c:	e732      	b.n	90023eb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
9002404e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90024050:	1421      	asrs	r1, r4, #16
90024052:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90024054:	f3c4 3203 	ubfx	r2, r4, #12, #4
90024058:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
9002405c:	1433      	asrs	r3, r6, #16
9002405e:	f3c6 3003 	ubfx	r0, r6, #12, #4
90024062:	fb07 1303 	mla	r3, r7, r3, r1
90024066:	990f      	ldr	r1, [sp, #60]	; 0x3c
90024068:	eb01 0183 	add.w	r1, r1, r3, lsl #2
9002406c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90024070:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90024074:	2a00      	cmp	r2, #0
90024076:	f000 8108 	beq.w	9002428a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
9002407a:	684d      	ldr	r5, [r1, #4]
9002407c:	950d      	str	r5, [sp, #52]	; 0x34
9002407e:	0e2d      	lsrs	r5, r5, #24
90024080:	9514      	str	r5, [sp, #80]	; 0x50
90024082:	b178      	cbz	r0, 900240a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90024084:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
90024088:	3f01      	subs	r7, #1
9002408a:	00bf      	lsls	r7, r7, #2
9002408c:	3704      	adds	r7, #4
9002408e:	eb01 0e07 	add.w	lr, r1, r7
90024092:	59c9      	ldr	r1, [r1, r7]
90024094:	9109      	str	r1, [sp, #36]	; 0x24
90024096:	0e09      	lsrs	r1, r1, #24
90024098:	9111      	str	r1, [sp, #68]	; 0x44
9002409a:	f8de 1004 	ldr.w	r1, [lr, #4]
9002409e:	910e      	str	r1, [sp, #56]	; 0x38
900240a0:	0e09      	lsrs	r1, r1, #24
900240a2:	9115      	str	r1, [sp, #84]	; 0x54
900240a4:	b292      	uxth	r2, r2
900240a6:	9d11      	ldr	r5, [sp, #68]	; 0x44
900240a8:	b280      	uxth	r0, r0
900240aa:	fb02 f900 	mul.w	r9, r2, r0
900240ae:	0112      	lsls	r2, r2, #4
900240b0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
900240b4:	eba2 0e09 	sub.w	lr, r2, r9
900240b8:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
900240bc:	9a14      	ldr	r2, [sp, #80]	; 0x50
900240be:	b280      	uxth	r0, r0
900240c0:	fa1f fe8e 	uxth.w	lr, lr
900240c4:	1a09      	subs	r1, r1, r0
900240c6:	fb0e f202 	mul.w	r2, lr, r2
900240ca:	b289      	uxth	r1, r1
900240cc:	fb01 220c 	mla	r2, r1, ip, r2
900240d0:	fb00 2205 	mla	r2, r0, r5, r2
900240d4:	9d15      	ldr	r5, [sp, #84]	; 0x54
900240d6:	fb09 2205 	mla	r2, r9, r5, r2
900240da:	f3c2 2207 	ubfx	r2, r2, #8, #8
900240de:	2a00      	cmp	r2, #0
900240e0:	f000 80ca 	beq.w	90024278 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
900240e4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
900240e8:	d019      	beq.n	9002411e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
900240ea:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
900240ee:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900240f2:	fb0c fa0a 	mul.w	sl, ip, sl
900240f6:	fb0c fc03 	mul.w	ip, ip, r3
900240fa:	ea4f 231a 	mov.w	r3, sl, lsr #8
900240fe:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90024102:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90024106:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002410a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9002410e:	4453      	add	r3, sl
90024110:	0a3f      	lsrs	r7, r7, #8
90024112:	0a1b      	lsrs	r3, r3, #8
90024114:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90024118:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002411c:	433b      	orrs	r3, r7
9002411e:	9d14      	ldr	r5, [sp, #80]	; 0x50
90024120:	2dff      	cmp	r5, #255	; 0xff
90024122:	d020      	beq.n	90024166 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
90024124:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90024126:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
9002412a:	9d14      	ldr	r5, [sp, #80]	; 0x50
9002412c:	436f      	muls	r7, r5
9002412e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90024130:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024134:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90024138:	9d14      	ldr	r5, [sp, #80]	; 0x50
9002413a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002413e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024142:	fb05 fa0a 	mul.w	sl, r5, sl
90024146:	44bc      	add	ip, r7
90024148:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9002414c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024150:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90024154:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024158:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002415c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90024160:	ea4c 050a 	orr.w	r5, ip, sl
90024164:	950d      	str	r5, [sp, #52]	; 0x34
90024166:	9d11      	ldr	r5, [sp, #68]	; 0x44
90024168:	2dff      	cmp	r5, #255	; 0xff
9002416a:	d020      	beq.n	900241ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
9002416c:	9d09      	ldr	r5, [sp, #36]	; 0x24
9002416e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90024172:	9d11      	ldr	r5, [sp, #68]	; 0x44
90024174:	436f      	muls	r7, r5
90024176:	9d09      	ldr	r5, [sp, #36]	; 0x24
90024178:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
9002417c:	9d11      	ldr	r5, [sp, #68]	; 0x44
9002417e:	fb05 fa0c 	mul.w	sl, r5, ip
90024182:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024186:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002418a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002418e:	44bc      	add	ip, r7
90024190:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90024194:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90024198:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002419c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900241a0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900241a4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900241a8:	ea4c 050a 	orr.w	r5, ip, sl
900241ac:	9509      	str	r5, [sp, #36]	; 0x24
900241ae:	9d15      	ldr	r5, [sp, #84]	; 0x54
900241b0:	2dff      	cmp	r5, #255	; 0xff
900241b2:	d020      	beq.n	900241f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
900241b4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
900241b6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
900241ba:	9d15      	ldr	r5, [sp, #84]	; 0x54
900241bc:	436f      	muls	r7, r5
900241be:	9d0e      	ldr	r5, [sp, #56]	; 0x38
900241c0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900241c4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900241c8:	9d15      	ldr	r5, [sp, #84]	; 0x54
900241ca:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900241ce:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900241d2:	fb05 fa0a 	mul.w	sl, r5, sl
900241d6:	44bc      	add	ip, r7
900241d8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900241dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900241e0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900241e4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900241e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900241ec:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900241f0:	ea4c 050a 	orr.w	r5, ip, sl
900241f4:	950e      	str	r5, [sp, #56]	; 0x38
900241f6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
900241f8:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
900241fc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90024200:	2aff      	cmp	r2, #255	; 0xff
90024202:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90024206:	9d09      	ldr	r5, [sp, #36]	; 0x24
90024208:	fb0e f707 	mul.w	r7, lr, r7
9002420c:	fb01 770c 	mla	r7, r1, ip, r7
90024210:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90024214:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90024216:	fb00 770c 	mla	r7, r0, ip, r7
9002421a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
9002421e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90024220:	fb09 770c 	mla	r7, r9, ip, r7
90024224:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
90024228:	fb0e fe0c 	mul.w	lr, lr, ip
9002422c:	ea4f 2717 	mov.w	r7, r7, lsr #8
90024230:	fb01 e303 	mla	r3, r1, r3, lr
90024234:	9909      	ldr	r1, [sp, #36]	; 0x24
90024236:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
9002423a:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
9002423e:	990e      	ldr	r1, [sp, #56]	; 0x38
90024240:	fb00 330a 	mla	r3, r0, sl, r3
90024244:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
90024248:	fb09 3c0c 	mla	ip, r9, ip, r3
9002424c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024250:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90024254:	ea47 070c 	orr.w	r7, r7, ip
90024258:	ea4f 2317 	mov.w	r3, r7, lsr #8
9002425c:	d11e      	bne.n	9002429c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
9002425e:	097a      	lsrs	r2, r7, #5
90024260:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
90024264:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90024268:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002426c:	f023 0307 	bic.w	r3, r3, #7
90024270:	4313      	orrs	r3, r2
90024272:	431f      	orrs	r7, r3
90024274:	f8a8 7000 	strh.w	r7, [r8]
90024278:	9b27      	ldr	r3, [sp, #156]	; 0x9c
9002427a:	f108 0802 	add.w	r8, r8, #2
9002427e:	f10b 3bff 	add.w	fp, fp, #4294967295
90024282:	441c      	add	r4, r3
90024284:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90024286:	441e      	add	r6, r3
90024288:	e643      	b.n	90023f12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
9002428a:	2800      	cmp	r0, #0
9002428c:	f43f af0a 	beq.w	900240a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90024290:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
90024294:	9109      	str	r1, [sp, #36]	; 0x24
90024296:	0e09      	lsrs	r1, r1, #24
90024298:	9111      	str	r1, [sp, #68]	; 0x44
9002429a:	e703      	b.n	900240a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
9002429c:	f8b8 1000 	ldrh.w	r1, [r8]
900242a0:	43d2      	mvns	r2, r2
900242a2:	ea4f 2c21 	mov.w	ip, r1, asr #8
900242a6:	fa5f fe82 	uxtb.w	lr, r2
900242aa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
900242ae:	10c8      	asrs	r0, r1, #3
900242b0:	00ca      	lsls	r2, r1, #3
900242b2:	fb0c fc0e 	mul.w	ip, ip, lr
900242b6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
900242ba:	b2d2      	uxtb	r2, r2
900242bc:	f10c 0101 	add.w	r1, ip, #1
900242c0:	fb00 f00e 	mul.w	r0, r0, lr
900242c4:	fb02 f20e 	mul.w	r2, r2, lr
900242c8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
900242cc:	0c39      	lsrs	r1, r7, #16
900242ce:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
900242d2:	490f      	ldr	r1, [pc, #60]	; (90024310 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
900242d4:	fa5f fc8c 	uxtb.w	ip, ip
900242d8:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
900242dc:	1c41      	adds	r1, r0, #1
900242de:	eb01 2010 	add.w	r0, r1, r0, lsr #8
900242e2:	1c51      	adds	r1, r2, #1
900242e4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
900242e8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
900242ec:	00c0      	lsls	r0, r0, #3
900242ee:	eb07 2712 	add.w	r7, r7, r2, lsr #8
900242f2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900242f6:	f3c7 07c4 	ubfx	r7, r7, #3, #5
900242fa:	ea4c 0c00 	orr.w	ip, ip, r0
900242fe:	ea47 0c0c 	orr.w	ip, r7, ip
90024302:	f8a8 c000 	strh.w	ip, [r8]
90024306:	e7b7      	b.n	90024278 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90024308:	b01b      	add	sp, #108	; 0x6c
9002430a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002430e:	bf00      	nop
90024310:	fffff800 	.word	0xfffff800

90024314 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
90024314:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90024318:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
9002431c:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90024320:	2d00      	cmp	r5, #0
90024322:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
90024326:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
9002432a:	fb05 0e03 	mla	lr, r5, r3, r0
9002432e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
90024332:	f2c0 808c 	blt.w	9002444e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90024336:	45a9      	cmp	r9, r5
90024338:	f340 8089 	ble.w	9002444e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
9002433c:	2800      	cmp	r0, #0
9002433e:	f2c0 8084 	blt.w	9002444a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90024342:	4580      	cmp	r8, r0
90024344:	f340 8081 	ble.w	9002444a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90024348:	ea4f 045e 	mov.w	r4, lr, lsr #1
9002434c:	f01e 0f01 	tst.w	lr, #1
90024350:	5d16      	ldrb	r6, [r2, r4]
90024352:	bf0c      	ite	eq
90024354:	f006 060f 	andeq.w	r6, r6, #15
90024358:	1136      	asrne	r6, r6, #4
9002435a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
9002435e:	b2f6      	uxtb	r6, r6
90024360:	1c44      	adds	r4, r0, #1
90024362:	d477      	bmi.n	90024454 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90024364:	45a0      	cmp	r8, r4
90024366:	dd75      	ble.n	90024454 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90024368:	2f00      	cmp	r7, #0
9002436a:	d075      	beq.n	90024458 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
9002436c:	f10e 0a01 	add.w	sl, lr, #1
90024370:	ea4f 045a 	mov.w	r4, sl, lsr #1
90024374:	f01a 0f01 	tst.w	sl, #1
90024378:	5d14      	ldrb	r4, [r2, r4]
9002437a:	bf0c      	ite	eq
9002437c:	f004 040f 	andeq.w	r4, r4, #15
90024380:	1124      	asrne	r4, r4, #4
90024382:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90024386:	b2e4      	uxtb	r4, r4
90024388:	3501      	adds	r5, #1
9002438a:	d469      	bmi.n	90024460 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
9002438c:	45a9      	cmp	r9, r5
9002438e:	dd67      	ble.n	90024460 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90024390:	f1bc 0f00 	cmp.w	ip, #0
90024394:	d067      	beq.n	90024466 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
90024396:	2800      	cmp	r0, #0
90024398:	db60      	blt.n	9002445c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
9002439a:	4580      	cmp	r8, r0
9002439c:	dd5e      	ble.n	9002445c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
9002439e:	eb03 090e 	add.w	r9, r3, lr
900243a2:	ea4f 0559 	mov.w	r5, r9, lsr #1
900243a6:	f019 0f01 	tst.w	r9, #1
900243aa:	5d55      	ldrb	r5, [r2, r5]
900243ac:	bf0c      	ite	eq
900243ae:	f005 050f 	andeq.w	r5, r5, #15
900243b2:	112d      	asrne	r5, r5, #4
900243b4:	eb05 1505 	add.w	r5, r5, r5, lsl #4
900243b8:	b2ed      	uxtb	r5, r5
900243ba:	3001      	adds	r0, #1
900243bc:	d456      	bmi.n	9002446c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
900243be:	4580      	cmp	r8, r0
900243c0:	dd54      	ble.n	9002446c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
900243c2:	2f00      	cmp	r7, #0
900243c4:	d054      	beq.n	90024470 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
900243c6:	3301      	adds	r3, #1
900243c8:	449e      	add	lr, r3
900243ca:	ea4f 035e 	mov.w	r3, lr, lsr #1
900243ce:	f01e 0f01 	tst.w	lr, #1
900243d2:	5cd0      	ldrb	r0, [r2, r3]
900243d4:	bf0c      	ite	eq
900243d6:	f000 000f 	andeq.w	r0, r0, #15
900243da:	1100      	asrne	r0, r0, #4
900243dc:	eb00 1000 	add.w	r0, r0, r0, lsl #4
900243e0:	b2c3      	uxtb	r3, r0
900243e2:	b2ba      	uxth	r2, r7
900243e4:	fa1f fc8c 	uxth.w	ip, ip
900243e8:	fb02 f00c 	mul.w	r0, r2, ip
900243ec:	0112      	lsls	r2, r2, #4
900243ee:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
900243f2:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
900243f6:	1a12      	subs	r2, r2, r0
900243f8:	fa1f fc8c 	uxth.w	ip, ip
900243fc:	b292      	uxth	r2, r2
900243fe:	eba7 070c 	sub.w	r7, r7, ip
90024402:	4362      	muls	r2, r4
90024404:	b2bf      	uxth	r7, r7
90024406:	fb06 2207 	mla	r2, r6, r7, r2
9002440a:	fb0c 2505 	mla	r5, ip, r5, r2
9002440e:	fb00 5303 	mla	r3, r0, r3, r5
90024412:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024416:	b1b3      	cbz	r3, 90024446 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90024418:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
9002441c:	435a      	muls	r2, r3
9002441e:	1c53      	adds	r3, r2, #1
90024420:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024424:	4a2d      	ldr	r2, [pc, #180]	; (900244dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
90024426:	121b      	asrs	r3, r3, #8
90024428:	6812      	ldr	r2, [r2, #0]
9002442a:	2bff      	cmp	r3, #255	; 0xff
9002442c:	ea4f 2612 	mov.w	r6, r2, lsr #8
90024430:	d120      	bne.n	90024474 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
90024432:	0950      	lsrs	r0, r2, #5
90024434:	4b2a      	ldr	r3, [pc, #168]	; (900244e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
90024436:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002443a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002443e:	4033      	ands	r3, r6
90024440:	4318      	orrs	r0, r3
90024442:	4302      	orrs	r2, r0
90024444:	800a      	strh	r2, [r1, #0]
90024446:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002444a:	2600      	movs	r6, #0
9002444c:	e788      	b.n	90024360 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
9002444e:	2400      	movs	r4, #0
90024450:	4626      	mov	r6, r4
90024452:	e799      	b.n	90024388 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90024454:	2400      	movs	r4, #0
90024456:	e797      	b.n	90024388 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90024458:	463c      	mov	r4, r7
9002445a:	e795      	b.n	90024388 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
9002445c:	2500      	movs	r5, #0
9002445e:	e7ac      	b.n	900243ba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
90024460:	2300      	movs	r3, #0
90024462:	461d      	mov	r5, r3
90024464:	e7bd      	b.n	900243e2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90024466:	4663      	mov	r3, ip
90024468:	4665      	mov	r5, ip
9002446a:	e7ba      	b.n	900243e2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
9002446c:	2300      	movs	r3, #0
9002446e:	e7b8      	b.n	900243e2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90024470:	463b      	mov	r3, r7
90024472:	e7b6      	b.n	900243e2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90024474:	880d      	ldrh	r5, [r1, #0]
90024476:	b29f      	uxth	r7, r3
90024478:	f3c2 4007 	ubfx	r0, r2, #16, #8
9002447c:	43db      	mvns	r3, r3
9002447e:	122c      	asrs	r4, r5, #8
90024480:	fb10 f007 	smulbb	r0, r0, r7
90024484:	b2db      	uxtb	r3, r3
90024486:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
9002448a:	b2f6      	uxtb	r6, r6
9002448c:	b2d2      	uxtb	r2, r2
9002448e:	fb04 0403 	mla	r4, r4, r3, r0
90024492:	10e8      	asrs	r0, r5, #3
90024494:	fb12 f207 	smulbb	r2, r2, r7
90024498:	00ed      	lsls	r5, r5, #3
9002449a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9002449e:	b2a4      	uxth	r4, r4
900244a0:	fb16 f607 	smulbb	r6, r6, r7
900244a4:	b2ed      	uxtb	r5, r5
900244a6:	fb00 6603 	mla	r6, r0, r3, r6
900244aa:	fb05 2303 	mla	r3, r5, r3, r2
900244ae:	b2b0      	uxth	r0, r6
900244b0:	b29a      	uxth	r2, r3
900244b2:	1c63      	adds	r3, r4, #1
900244b4:	eb03 2414 	add.w	r4, r3, r4, lsr #8
900244b8:	1c53      	adds	r3, r2, #1
900244ba:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900244be:	1c42      	adds	r2, r0, #1
900244c0:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
900244c4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900244c8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900244cc:	0940      	lsrs	r0, r0, #5
900244ce:	4323      	orrs	r3, r4
900244d0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900244d4:	4303      	orrs	r3, r0
900244d6:	800b      	strh	r3, [r1, #0]
900244d8:	e7b5      	b.n	90024446 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
900244da:	bf00      	nop
900244dc:	240235bc 	.word	0x240235bc
900244e0:	00fff800 	.word	0x00fff800

900244e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900244e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900244e8:	b097      	sub	sp, #92	; 0x5c
900244ea:	9214      	str	r2, [sp, #80]	; 0x50
900244ec:	9309      	str	r3, [sp, #36]	; 0x24
900244ee:	9a25      	ldr	r2, [sp, #148]	; 0x94
900244f0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
900244f4:	9015      	str	r0, [sp, #84]	; 0x54
900244f6:	910d      	str	r1, [sp, #52]	; 0x34
900244f8:	6850      	ldr	r0, [r2, #4]
900244fa:	930f      	str	r3, [sp, #60]	; 0x3c
900244fc:	6812      	ldr	r2, [r2, #0]
900244fe:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
90024502:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
90024506:	fb00 1303 	mla	r3, r0, r3, r1
9002450a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
9002450e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90024510:	689b      	ldr	r3, [r3, #8]
90024512:	3301      	adds	r3, #1
90024514:	f023 0301 	bic.w	r3, r3, #1
90024518:	930a      	str	r3, [sp, #40]	; 0x28
9002451a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002451c:	681f      	ldr	r7, [r3, #0]
9002451e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90024520:	2b00      	cmp	r3, #0
90024522:	dc03      	bgt.n	9002452c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90024524:	9b14      	ldr	r3, [sp, #80]	; 0x50
90024526:	2b00      	cmp	r3, #0
90024528:	f340 8289 	ble.w	90024a3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
9002452c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002452e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024532:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024536:	1e48      	subs	r0, r1, #1
90024538:	f102 3cff 	add.w	ip, r2, #4294967295
9002453c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002453e:	2b00      	cmp	r3, #0
90024540:	f340 80c5 	ble.w	900246ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
90024544:	ea5f 4e24 	movs.w	lr, r4, asr #16
90024548:	ea4f 4326 	mov.w	r3, r6, asr #16
9002454c:	d406      	bmi.n	9002455c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002454e:	4586      	cmp	lr, r0
90024550:	da04      	bge.n	9002455c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90024552:	2b00      	cmp	r3, #0
90024554:	db02      	blt.n	9002455c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90024556:	4563      	cmp	r3, ip
90024558:	f2c0 80ba 	blt.w	900246d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
9002455c:	f11e 0e01 	adds.w	lr, lr, #1
90024560:	f100 80ab 	bmi.w	900246ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90024564:	4571      	cmp	r1, lr
90024566:	f2c0 80a8 	blt.w	900246ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
9002456a:	3301      	adds	r3, #1
9002456c:	f100 80a5 	bmi.w	900246ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90024570:	429a      	cmp	r2, r3
90024572:	f2c0 80a2 	blt.w	900246ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90024576:	9b09      	ldr	r3, [sp, #36]	; 0x24
90024578:	46c8      	mov	r8, r9
9002457a:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
9002457e:	930e      	str	r3, [sp, #56]	; 0x38
90024580:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90024582:	2b00      	cmp	r3, #0
90024584:	f340 80c4 	ble.w	90024710 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
90024588:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002458a:	1430      	asrs	r0, r6, #16
9002458c:	f3c4 3203 	ubfx	r2, r4, #12, #4
90024590:	f3c6 3103 	ubfx	r1, r6, #12, #4
90024594:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90024598:	1423      	asrs	r3, r4, #16
9002459a:	f100 814f 	bmi.w	9002483c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002459e:	f10c 3bff 	add.w	fp, ip, #4294967295
900245a2:	455b      	cmp	r3, fp
900245a4:	f280 814a 	bge.w	9002483c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900245a8:	2800      	cmp	r0, #0
900245aa:	f2c0 8147 	blt.w	9002483c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900245ae:	f10e 3bff 	add.w	fp, lr, #4294967295
900245b2:	4558      	cmp	r0, fp
900245b4:	f280 8142 	bge.w	9002483c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900245b8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
900245ba:	fb00 3305 	mla	r3, r0, r5, r3
900245be:	0858      	lsrs	r0, r3, #1
900245c0:	07dd      	lsls	r5, r3, #31
900245c2:	f817 c000 	ldrb.w	ip, [r7, r0]
900245c6:	bf54      	ite	pl
900245c8:	f00c 0c0f 	andpl.w	ip, ip, #15
900245cc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
900245d0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
900245d4:	fa5f fc8c 	uxtb.w	ip, ip
900245d8:	2a00      	cmp	r2, #0
900245da:	f000 80dd 	beq.w	90024798 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
900245de:	1c58      	adds	r0, r3, #1
900245e0:	ea4f 0e50 	mov.w	lr, r0, lsr #1
900245e4:	07c0      	lsls	r0, r0, #31
900245e6:	f817 e00e 	ldrb.w	lr, [r7, lr]
900245ea:	bf54      	ite	pl
900245ec:	f00e 0e0f 	andpl.w	lr, lr, #15
900245f0:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
900245f4:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
900245f8:	fa5f f08e 	uxtb.w	r0, lr
900245fc:	9010      	str	r0, [sp, #64]	; 0x40
900245fe:	b1d9      	cbz	r1, 90024638 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90024600:	4453      	add	r3, sl
90024602:	0858      	lsrs	r0, r3, #1
90024604:	07dd      	lsls	r5, r3, #31
90024606:	f103 0301 	add.w	r3, r3, #1
9002460a:	5c38      	ldrb	r0, [r7, r0]
9002460c:	bf54      	ite	pl
9002460e:	f000 000f 	andpl.w	r0, r0, #15
90024612:	1100      	asrmi	r0, r0, #4
90024614:	07dd      	lsls	r5, r3, #31
90024616:	eb00 1000 	add.w	r0, r0, r0, lsl #4
9002461a:	b2c0      	uxtb	r0, r0
9002461c:	900b      	str	r0, [sp, #44]	; 0x2c
9002461e:	ea4f 0053 	mov.w	r0, r3, lsr #1
90024622:	f817 e000 	ldrb.w	lr, [r7, r0]
90024626:	bf54      	ite	pl
90024628:	f00e 030f 	andpl.w	r3, lr, #15
9002462c:	ea4f 132e 	movmi.w	r3, lr, asr #4
90024630:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90024634:	b2db      	uxtb	r3, r3
90024636:	9311      	str	r3, [sp, #68]	; 0x44
90024638:	b292      	uxth	r2, r2
9002463a:	9d10      	ldr	r5, [sp, #64]	; 0x40
9002463c:	b289      	uxth	r1, r1
9002463e:	fb02 f301 	mul.w	r3, r2, r1
90024642:	0112      	lsls	r2, r2, #4
90024644:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90024648:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
9002464c:	1ad2      	subs	r2, r2, r3
9002464e:	b289      	uxth	r1, r1
90024650:	b292      	uxth	r2, r2
90024652:	1a40      	subs	r0, r0, r1
90024654:	436a      	muls	r2, r5
90024656:	b280      	uxth	r0, r0
90024658:	fb0c 2c00 	mla	ip, ip, r0, r2
9002465c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9002465e:	fb01 c102 	mla	r1, r1, r2, ip
90024662:	9a11      	ldr	r2, [sp, #68]	; 0x44
90024664:	fb03 1302 	mla	r3, r3, r2, r1
90024668:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002466c:	b1db      	cbz	r3, 900246a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002466e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90024670:	4353      	muls	r3, r2
90024672:	1c5a      	adds	r2, r3, #1
90024674:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90024678:	4ac6      	ldr	r2, [pc, #792]	; (90024994 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
9002467a:	121b      	asrs	r3, r3, #8
9002467c:	6812      	ldr	r2, [r2, #0]
9002467e:	2bff      	cmp	r3, #255	; 0xff
90024680:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90024684:	f040 8099 	bne.w	900247ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
90024688:	0953      	lsrs	r3, r2, #5
9002468a:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
9002468e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90024692:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90024696:	f02c 0c07 	bic.w	ip, ip, #7
9002469a:	ea43 0c0c 	orr.w	ip, r3, ip
9002469e:	ea4c 0202 	orr.w	r2, ip, r2
900246a2:	f8a8 2000 	strh.w	r2, [r8]
900246a6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
900246a8:	f108 0802 	add.w	r8, r8, #2
900246ac:	441c      	add	r4, r3
900246ae:	9b24      	ldr	r3, [sp, #144]	; 0x90
900246b0:	441e      	add	r6, r3
900246b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900246b4:	3b01      	subs	r3, #1
900246b6:	930e      	str	r3, [sp, #56]	; 0x38
900246b8:	e762      	b.n	90024580 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
900246ba:	9b23      	ldr	r3, [sp, #140]	; 0x8c
900246bc:	f109 0902 	add.w	r9, r9, #2
900246c0:	441c      	add	r4, r3
900246c2:	9b24      	ldr	r3, [sp, #144]	; 0x90
900246c4:	441e      	add	r6, r3
900246c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
900246c8:	3b01      	subs	r3, #1
900246ca:	9309      	str	r3, [sp, #36]	; 0x24
900246cc:	e736      	b.n	9002453c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
900246ce:	d024      	beq.n	9002471a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
900246d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
900246d2:	9823      	ldr	r0, [sp, #140]	; 0x8c
900246d4:	3b01      	subs	r3, #1
900246d6:	fb00 4003 	mla	r0, r0, r3, r4
900246da:	1400      	asrs	r0, r0, #16
900246dc:	f53f af4b 	bmi.w	90024576 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900246e0:	3901      	subs	r1, #1
900246e2:	4288      	cmp	r0, r1
900246e4:	f6bf af47 	bge.w	90024576 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900246e8:	9924      	ldr	r1, [sp, #144]	; 0x90
900246ea:	fb01 6303 	mla	r3, r1, r3, r6
900246ee:	141b      	asrs	r3, r3, #16
900246f0:	f53f af41 	bmi.w	90024576 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900246f4:	3a01      	subs	r2, #1
900246f6:	4293      	cmp	r3, r2
900246f8:	f6bf af3d 	bge.w	90024576 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900246fc:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
90024700:	46c8      	mov	r8, r9
90024702:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
90024706:	930e      	str	r3, [sp, #56]	; 0x38
90024708:	f1bb 0f00 	cmp.w	fp, #0
9002470c:	f300 80b7 	bgt.w	9002487e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
90024710:	9b09      	ldr	r3, [sp, #36]	; 0x24
90024712:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90024716:	eb09 0945 	add.w	r9, r9, r5, lsl #1
9002471a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9002471c:	2b00      	cmp	r3, #0
9002471e:	f340 818e 	ble.w	90024a3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90024722:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90024726:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024728:	ee30 0a04 	vadd.f32	s0, s0, s8
9002472c:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024730:	eef0 6a62 	vmov.f32	s13, s5
90024734:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024738:	ee31 1a05 	vadd.f32	s2, s2, s10
9002473c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024740:	ee16 4a90 	vmov	r4, s13
90024744:	eef0 6a43 	vmov.f32	s13, s6
90024748:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002474c:	ee16 6a90 	vmov	r6, s13
90024750:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024754:	ee61 7a27 	vmul.f32	s15, s2, s15
90024758:	ee77 2a62 	vsub.f32	s5, s14, s5
9002475c:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024760:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024764:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024768:	ee12 2a90 	vmov	r2, s5
9002476c:	eef0 2a47 	vmov.f32	s5, s14
90024770:	fb92 f3f3 	sdiv	r3, r2, r3
90024774:	ee13 2a10 	vmov	r2, s6
90024778:	9323      	str	r3, [sp, #140]	; 0x8c
9002477a:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002477c:	eeb0 3a67 	vmov.f32	s6, s15
90024780:	fb92 f3f3 	sdiv	r3, r2, r3
90024784:	9324      	str	r3, [sp, #144]	; 0x90
90024786:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90024788:	9a14      	ldr	r2, [sp, #80]	; 0x50
9002478a:	3b01      	subs	r3, #1
9002478c:	930d      	str	r3, [sp, #52]	; 0x34
9002478e:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024790:	bf08      	it	eq
90024792:	4613      	moveq	r3, r2
90024794:	9309      	str	r3, [sp, #36]	; 0x24
90024796:	e6c2      	b.n	9002451e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90024798:	2900      	cmp	r1, #0
9002479a:	f43f af4d 	beq.w	90024638 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9002479e:	eb0a 0003 	add.w	r0, sl, r3
900247a2:	0843      	lsrs	r3, r0, #1
900247a4:	07c0      	lsls	r0, r0, #31
900247a6:	5cfb      	ldrb	r3, [r7, r3]
900247a8:	bf54      	ite	pl
900247aa:	f003 030f 	andpl.w	r3, r3, #15
900247ae:	111b      	asrmi	r3, r3, #4
900247b0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
900247b4:	b2db      	uxtb	r3, r3
900247b6:	930b      	str	r3, [sp, #44]	; 0x2c
900247b8:	e73e      	b.n	90024638 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
900247ba:	f8b8 e000 	ldrh.w	lr, [r8]
900247be:	fa1f fb83 	uxth.w	fp, r3
900247c2:	f3c2 4107 	ubfx	r1, r2, #16, #8
900247c6:	43db      	mvns	r3, r3
900247c8:	ea4f 202e 	mov.w	r0, lr, asr #8
900247cc:	fb11 f10b 	smulbb	r1, r1, fp
900247d0:	b2db      	uxtb	r3, r3
900247d2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
900247d6:	fa5f fc8c 	uxtb.w	ip, ip
900247da:	b2d2      	uxtb	r2, r2
900247dc:	fb00 1003 	mla	r0, r0, r3, r1
900247e0:	ea4f 01ee 	mov.w	r1, lr, asr #3
900247e4:	fb1c fc0b 	smulbb	ip, ip, fp
900247e8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
900247ec:	b280      	uxth	r0, r0
900247ee:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
900247f2:	fb12 fb0b 	smulbb	fp, r2, fp
900247f6:	fa5f fe8e 	uxtb.w	lr, lr
900247fa:	fb01 cc03 	mla	ip, r1, r3, ip
900247fe:	fb0e bb03 	mla	fp, lr, r3, fp
90024802:	1c43      	adds	r3, r0, #1
90024804:	fa1f fc8c 	uxth.w	ip, ip
90024808:	fa1f fb8b 	uxth.w	fp, fp
9002480c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90024810:	f10c 0101 	add.w	r1, ip, #1
90024814:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
90024818:	f10b 0001 	add.w	r0, fp, #1
9002481c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90024820:	eb00 201b 	add.w	r0, r0, fp, lsr #8
90024824:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90024828:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002482c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90024830:	4318      	orrs	r0, r3
90024832:	ea40 000c 	orr.w	r0, r0, ip
90024836:	f8a8 0000 	strh.w	r0, [r8]
9002483a:	e734      	b.n	900246a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002483c:	f113 0b01 	adds.w	fp, r3, #1
90024840:	f53f af31 	bmi.w	900246a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90024844:	45dc      	cmp	ip, fp
90024846:	f6ff af2e 	blt.w	900246a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002484a:	f110 0b01 	adds.w	fp, r0, #1
9002484e:	f53f af2a 	bmi.w	900246a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90024852:	45de      	cmp	lr, fp
90024854:	f6ff af27 	blt.w	900246a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90024858:	9302      	str	r3, [sp, #8]
9002485a:	fa0f f38e 	sxth.w	r3, lr
9002485e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90024860:	9301      	str	r3, [sp, #4]
90024862:	fa0f f38c 	sxth.w	r3, ip
90024866:	e9cd 0203 	strd	r0, r2, [sp, #12]
9002486a:	e9cd 1505 	strd	r1, r5, [sp, #20]
9002486e:	9300      	str	r3, [sp, #0]
90024870:	463a      	mov	r2, r7
90024872:	4653      	mov	r3, sl
90024874:	4641      	mov	r1, r8
90024876:	9815      	ldr	r0, [sp, #84]	; 0x54
90024878:	f7ff fd4c 	bl	90024314 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
9002487c:	e713      	b.n	900246a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002487e:	1422      	asrs	r2, r4, #16
90024880:	9d0a      	ldr	r5, [sp, #40]	; 0x28
90024882:	1433      	asrs	r3, r6, #16
90024884:	f3c4 3103 	ubfx	r1, r4, #12, #4
90024888:	f3c6 3003 	ubfx	r0, r6, #12, #4
9002488c:	fb05 2303 	mla	r3, r5, r3, r2
90024890:	085a      	lsrs	r2, r3, #1
90024892:	07dd      	lsls	r5, r3, #31
90024894:	5cba      	ldrb	r2, [r7, r2]
90024896:	bf54      	ite	pl
90024898:	f002 020f 	andpl.w	r2, r2, #15
9002489c:	1112      	asrmi	r2, r2, #4
9002489e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
900248a2:	b2d2      	uxtb	r2, r2
900248a4:	2900      	cmp	r1, #0
900248a6:	d077      	beq.n	90024998 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900248a8:	f103 0e01 	add.w	lr, r3, #1
900248ac:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
900248b0:	f01e 0f01 	tst.w	lr, #1
900248b4:	f817 c00c 	ldrb.w	ip, [r7, ip]
900248b8:	bf0c      	ite	eq
900248ba:	f00c 0c0f 	andeq.w	ip, ip, #15
900248be:	ea4f 1c2c 	movne.w	ip, ip, asr #4
900248c2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
900248c6:	fa5f f58c 	uxtb.w	r5, ip
900248ca:	9512      	str	r5, [sp, #72]	; 0x48
900248cc:	b308      	cbz	r0, 90024912 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
900248ce:	9d0e      	ldr	r5, [sp, #56]	; 0x38
900248d0:	442b      	add	r3, r5
900248d2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
900248d6:	07dd      	lsls	r5, r3, #31
900248d8:	f103 0301 	add.w	r3, r3, #1
900248dc:	f817 c00c 	ldrb.w	ip, [r7, ip]
900248e0:	bf54      	ite	pl
900248e2:	f00c 0c0f 	andpl.w	ip, ip, #15
900248e6:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
900248ea:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
900248ee:	fa5f f58c 	uxtb.w	r5, ip
900248f2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
900248f6:	950c      	str	r5, [sp, #48]	; 0x30
900248f8:	07dd      	lsls	r5, r3, #31
900248fa:	f817 c00c 	ldrb.w	ip, [r7, ip]
900248fe:	bf54      	ite	pl
90024900:	f00c 0c0f 	andpl.w	ip, ip, #15
90024904:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90024908:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9002490c:	fa5f f38c 	uxtb.w	r3, ip
90024910:	9313      	str	r3, [sp, #76]	; 0x4c
90024912:	b289      	uxth	r1, r1
90024914:	9d12      	ldr	r5, [sp, #72]	; 0x48
90024916:	b280      	uxth	r0, r0
90024918:	fb01 f300 	mul.w	r3, r1, r0
9002491c:	0109      	lsls	r1, r1, #4
9002491e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
90024922:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
90024926:	1ac9      	subs	r1, r1, r3
90024928:	b280      	uxth	r0, r0
9002492a:	b289      	uxth	r1, r1
9002492c:	ebac 0c00 	sub.w	ip, ip, r0
90024930:	4369      	muls	r1, r5
90024932:	fa1f fc8c 	uxth.w	ip, ip
90024936:	fb02 120c 	mla	r2, r2, ip, r1
9002493a:	990c      	ldr	r1, [sp, #48]	; 0x30
9002493c:	fb00 2001 	mla	r0, r0, r1, r2
90024940:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90024942:	fb03 0302 	mla	r3, r3, r2, r0
90024946:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002494a:	b1d3      	cbz	r3, 90024982 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
9002494c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9002494e:	4353      	muls	r3, r2
90024950:	1c5a      	adds	r2, r3, #1
90024952:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90024956:	4a0f      	ldr	r2, [pc, #60]	; (90024994 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90024958:	121b      	asrs	r3, r3, #8
9002495a:	6812      	ldr	r2, [r2, #0]
9002495c:	2bff      	cmp	r3, #255	; 0xff
9002495e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90024962:	d12d      	bne.n	900249c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
90024964:	0953      	lsrs	r3, r2, #5
90024966:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
9002496a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002496e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90024972:	f02c 0c07 	bic.w	ip, ip, #7
90024976:	ea43 0c0c 	orr.w	ip, r3, ip
9002497a:	ea4c 0202 	orr.w	r2, ip, r2
9002497e:	f8a8 2000 	strh.w	r2, [r8]
90024982:	9b23      	ldr	r3, [sp, #140]	; 0x8c
90024984:	f108 0802 	add.w	r8, r8, #2
90024988:	f10b 3bff 	add.w	fp, fp, #4294967295
9002498c:	441c      	add	r4, r3
9002498e:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024990:	441e      	add	r6, r3
90024992:	e6b9      	b.n	90024708 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
90024994:	240235bc 	.word	0x240235bc
90024998:	2800      	cmp	r0, #0
9002499a:	d0ba      	beq.n	90024912 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
9002499c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9002499e:	442b      	add	r3, r5
900249a0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
900249a4:	07db      	lsls	r3, r3, #31
900249a6:	f817 c00c 	ldrb.w	ip, [r7, ip]
900249aa:	bf54      	ite	pl
900249ac:	f00c 0c0f 	andpl.w	ip, ip, #15
900249b0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
900249b4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
900249b8:	fa5f f38c 	uxtb.w	r3, ip
900249bc:	930c      	str	r3, [sp, #48]	; 0x30
900249be:	e7a8      	b.n	90024912 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
900249c0:	f8b8 e000 	ldrh.w	lr, [r8]
900249c4:	fa1f fa83 	uxth.w	sl, r3
900249c8:	f3c2 4107 	ubfx	r1, r2, #16, #8
900249cc:	43db      	mvns	r3, r3
900249ce:	ea4f 202e 	mov.w	r0, lr, asr #8
900249d2:	fb11 f10a 	smulbb	r1, r1, sl
900249d6:	b2db      	uxtb	r3, r3
900249d8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
900249dc:	b2d2      	uxtb	r2, r2
900249de:	fa5f fc8c 	uxtb.w	ip, ip
900249e2:	fb00 1003 	mla	r0, r0, r3, r1
900249e6:	ea4f 01ee 	mov.w	r1, lr, asr #3
900249ea:	fb12 f20a 	smulbb	r2, r2, sl
900249ee:	ea4f 0ece 	mov.w	lr, lr, lsl #3
900249f2:	b280      	uxth	r0, r0
900249f4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
900249f8:	fb1c fc0a 	smulbb	ip, ip, sl
900249fc:	fa5f fe8e 	uxtb.w	lr, lr
90024a00:	fb0e 2203 	mla	r2, lr, r3, r2
90024a04:	fb01 cc03 	mla	ip, r1, r3, ip
90024a08:	1c43      	adds	r3, r0, #1
90024a0a:	b292      	uxth	r2, r2
90024a0c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90024a10:	1c51      	adds	r1, r2, #1
90024a12:	fa1f fc8c 	uxth.w	ip, ip
90024a16:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
90024a1a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
90024a1e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
90024a22:	4308      	orrs	r0, r1
90024a24:	f10c 0101 	add.w	r1, ip, #1
90024a28:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90024a2c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90024a30:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90024a34:	ea40 000c 	orr.w	r0, r0, ip
90024a38:	f8a8 0000 	strh.w	r0, [r8]
90024a3c:	e7a1      	b.n	90024982 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
90024a3e:	b017      	add	sp, #92	; 0x5c
90024a40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90024a44 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
90024a44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90024a48:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
90024a4c:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90024a50:	2d00      	cmp	r5, #0
90024a52:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
90024a56:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
90024a5a:	fb05 0e03 	mla	lr, r5, r3, r0
90024a5e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
90024a62:	f2c0 80b0 	blt.w	90024bc6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90024a66:	45a9      	cmp	r9, r5
90024a68:	f340 80ad 	ble.w	90024bc6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90024a6c:	2800      	cmp	r0, #0
90024a6e:	f2c0 80a8 	blt.w	90024bc2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90024a72:	4580      	cmp	r8, r0
90024a74:	f340 80a5 	ble.w	90024bc2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90024a78:	ea4f 045e 	mov.w	r4, lr, lsr #1
90024a7c:	f01e 0f01 	tst.w	lr, #1
90024a80:	5d16      	ldrb	r6, [r2, r4]
90024a82:	bf0c      	ite	eq
90024a84:	f006 060f 	andeq.w	r6, r6, #15
90024a88:	1136      	asrne	r6, r6, #4
90024a8a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
90024a8e:	b2f6      	uxtb	r6, r6
90024a90:	1c44      	adds	r4, r0, #1
90024a92:	f100 809b 	bmi.w	90024bcc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90024a96:	45a0      	cmp	r8, r4
90024a98:	f340 8098 	ble.w	90024bcc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90024a9c:	2f00      	cmp	r7, #0
90024a9e:	f000 8097 	beq.w	90024bd0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
90024aa2:	f10e 0a01 	add.w	sl, lr, #1
90024aa6:	ea4f 045a 	mov.w	r4, sl, lsr #1
90024aaa:	f01a 0f01 	tst.w	sl, #1
90024aae:	5d14      	ldrb	r4, [r2, r4]
90024ab0:	bf0c      	ite	eq
90024ab2:	f004 040f 	andeq.w	r4, r4, #15
90024ab6:	1124      	asrne	r4, r4, #4
90024ab8:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90024abc:	b2e4      	uxtb	r4, r4
90024abe:	3501      	adds	r5, #1
90024ac0:	f100 808a 	bmi.w	90024bd8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90024ac4:	45a9      	cmp	r9, r5
90024ac6:	f340 8087 	ble.w	90024bd8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90024aca:	f1bc 0f00 	cmp.w	ip, #0
90024ace:	f000 8086 	beq.w	90024bde <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
90024ad2:	2800      	cmp	r0, #0
90024ad4:	db7e      	blt.n	90024bd4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90024ad6:	4580      	cmp	r8, r0
90024ad8:	dd7c      	ble.n	90024bd4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90024ada:	eb03 090e 	add.w	r9, r3, lr
90024ade:	ea4f 0559 	mov.w	r5, r9, lsr #1
90024ae2:	f019 0f01 	tst.w	r9, #1
90024ae6:	5d55      	ldrb	r5, [r2, r5]
90024ae8:	bf0c      	ite	eq
90024aea:	f005 050f 	andeq.w	r5, r5, #15
90024aee:	112d      	asrne	r5, r5, #4
90024af0:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90024af4:	b2ed      	uxtb	r5, r5
90024af6:	3001      	adds	r0, #1
90024af8:	d474      	bmi.n	90024be4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90024afa:	4580      	cmp	r8, r0
90024afc:	dd72      	ble.n	90024be4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90024afe:	2f00      	cmp	r7, #0
90024b00:	d072      	beq.n	90024be8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
90024b02:	3301      	adds	r3, #1
90024b04:	449e      	add	lr, r3
90024b06:	ea4f 035e 	mov.w	r3, lr, lsr #1
90024b0a:	f01e 0f01 	tst.w	lr, #1
90024b0e:	5cd0      	ldrb	r0, [r2, r3]
90024b10:	bf0c      	ite	eq
90024b12:	f000 000f 	andeq.w	r0, r0, #15
90024b16:	1100      	asrne	r0, r0, #4
90024b18:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90024b1c:	b2c3      	uxtb	r3, r0
90024b1e:	b2ba      	uxth	r2, r7
90024b20:	fa1f fc8c 	uxth.w	ip, ip
90024b24:	fb02 f00c 	mul.w	r0, r2, ip
90024b28:	0112      	lsls	r2, r2, #4
90024b2a:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
90024b2e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
90024b32:	1a12      	subs	r2, r2, r0
90024b34:	fa1f fc8c 	uxth.w	ip, ip
90024b38:	b292      	uxth	r2, r2
90024b3a:	eba7 070c 	sub.w	r7, r7, ip
90024b3e:	4362      	muls	r2, r4
90024b40:	b2bf      	uxth	r7, r7
90024b42:	fb06 2207 	mla	r2, r6, r7, r2
90024b46:	fb0c 2505 	mla	r5, ip, r5, r2
90024b4a:	fb00 5303 	mla	r3, r0, r3, r5
90024b4e:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024b52:	b3a3      	cbz	r3, 90024bbe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
90024b54:	4a25      	ldr	r2, [pc, #148]	; (90024bec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
90024b56:	880e      	ldrh	r6, [r1, #0]
90024b58:	6815      	ldr	r5, [r2, #0]
90024b5a:	b29a      	uxth	r2, r3
90024b5c:	1234      	asrs	r4, r6, #8
90024b5e:	43db      	mvns	r3, r3
90024b60:	f3c5 4007 	ubfx	r0, r5, #16, #8
90024b64:	f3c5 2707 	ubfx	r7, r5, #8, #8
90024b68:	b2db      	uxtb	r3, r3
90024b6a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
90024b6e:	fb10 f002 	smulbb	r0, r0, r2
90024b72:	b2ed      	uxtb	r5, r5
90024b74:	fb17 f702 	smulbb	r7, r7, r2
90024b78:	fb04 0403 	mla	r4, r4, r3, r0
90024b7c:	10f0      	asrs	r0, r6, #3
90024b7e:	fb15 f202 	smulbb	r2, r5, r2
90024b82:	00f6      	lsls	r6, r6, #3
90024b84:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90024b88:	b2a4      	uxth	r4, r4
90024b8a:	b2f6      	uxtb	r6, r6
90024b8c:	fb00 7003 	mla	r0, r0, r3, r7
90024b90:	fb06 2303 	mla	r3, r6, r3, r2
90024b94:	b280      	uxth	r0, r0
90024b96:	b29a      	uxth	r2, r3
90024b98:	1c63      	adds	r3, r4, #1
90024b9a:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90024b9e:	1c53      	adds	r3, r2, #1
90024ba0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024ba4:	1c42      	adds	r2, r0, #1
90024ba6:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
90024baa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90024bae:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024bb2:	0940      	lsrs	r0, r0, #5
90024bb4:	4323      	orrs	r3, r4
90024bb6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024bba:	4303      	orrs	r3, r0
90024bbc:	800b      	strh	r3, [r1, #0]
90024bbe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90024bc2:	2600      	movs	r6, #0
90024bc4:	e764      	b.n	90024a90 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
90024bc6:	2400      	movs	r4, #0
90024bc8:	4626      	mov	r6, r4
90024bca:	e778      	b.n	90024abe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90024bcc:	2400      	movs	r4, #0
90024bce:	e776      	b.n	90024abe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90024bd0:	463c      	mov	r4, r7
90024bd2:	e774      	b.n	90024abe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90024bd4:	2500      	movs	r5, #0
90024bd6:	e78e      	b.n	90024af6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
90024bd8:	2300      	movs	r3, #0
90024bda:	461d      	mov	r5, r3
90024bdc:	e79f      	b.n	90024b1e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90024bde:	4663      	mov	r3, ip
90024be0:	4665      	mov	r5, ip
90024be2:	e79c      	b.n	90024b1e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90024be4:	2300      	movs	r3, #0
90024be6:	e79a      	b.n	90024b1e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90024be8:	463b      	mov	r3, r7
90024bea:	e798      	b.n	90024b1e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90024bec:	240235bc 	.word	0x240235bc

90024bf0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024bf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024bf4:	b093      	sub	sp, #76	; 0x4c
90024bf6:	461d      	mov	r5, r3
90024bf8:	920c      	str	r2, [sp, #48]	; 0x30
90024bfa:	9a21      	ldr	r2, [sp, #132]	; 0x84
90024bfc:	9011      	str	r0, [sp, #68]	; 0x44
90024bfe:	9107      	str	r1, [sp, #28]
90024c00:	6850      	ldr	r0, [r2, #4]
90024c02:	6812      	ldr	r2, [r2, #0]
90024c04:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
90024c08:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
90024c0c:	fb00 1303 	mla	r3, r0, r3, r1
90024c10:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90024c14:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024c16:	689b      	ldr	r3, [r3, #8]
90024c18:	3301      	adds	r3, #1
90024c1a:	f023 0301 	bic.w	r3, r3, #1
90024c1e:	9306      	str	r3, [sp, #24]
90024c20:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024c22:	681f      	ldr	r7, [r3, #0]
90024c24:	9b07      	ldr	r3, [sp, #28]
90024c26:	2b00      	cmp	r3, #0
90024c28:	dc03      	bgt.n	90024c32 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90024c2a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90024c2c:	2b00      	cmp	r3, #0
90024c2e:	f340 8267 	ble.w	90025100 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90024c32:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024c34:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024c38:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024c3c:	1e48      	subs	r0, r1, #1
90024c3e:	f102 3cff 	add.w	ip, r2, #4294967295
90024c42:	2d00      	cmp	r5, #0
90024c44:	f340 80b7 	ble.w	90024db6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90024c48:	ea5f 4e24 	movs.w	lr, r4, asr #16
90024c4c:	ea4f 4326 	mov.w	r3, r6, asr #16
90024c50:	d406      	bmi.n	90024c60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90024c52:	4586      	cmp	lr, r0
90024c54:	da04      	bge.n	90024c60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90024c56:	2b00      	cmp	r3, #0
90024c58:	db02      	blt.n	90024c60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90024c5a:	4563      	cmp	r3, ip
90024c5c:	f2c0 80ac 	blt.w	90024db8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90024c60:	f11e 0e01 	adds.w	lr, lr, #1
90024c64:	f100 809f 	bmi.w	90024da6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90024c68:	4571      	cmp	r1, lr
90024c6a:	f2c0 809c 	blt.w	90024da6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90024c6e:	3301      	adds	r3, #1
90024c70:	f100 8099 	bmi.w	90024da6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90024c74:	429a      	cmp	r2, r3
90024c76:	f2c0 8096 	blt.w	90024da6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90024c7a:	46c8      	mov	r8, r9
90024c7c:	f9bd a018 	ldrsh.w	sl, [sp, #24]
90024c80:	9509      	str	r5, [sp, #36]	; 0x24
90024c82:	9b09      	ldr	r3, [sp, #36]	; 0x24
90024c84:	2b00      	cmp	r3, #0
90024c86:	f340 80b5 	ble.w	90024df4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90024c8a:	f3c4 3303 	ubfx	r3, r4, #12, #4
90024c8e:	1430      	asrs	r0, r6, #16
90024c90:	f3c6 3103 	ubfx	r1, r6, #12, #4
90024c94:	9308      	str	r3, [sp, #32]
90024c96:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024c98:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90024c9c:	1423      	asrs	r3, r4, #16
90024c9e:	f100 813f 	bmi.w	90024f20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90024ca2:	f10c 3bff 	add.w	fp, ip, #4294967295
90024ca6:	455b      	cmp	r3, fp
90024ca8:	f280 813a 	bge.w	90024f20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90024cac:	2800      	cmp	r0, #0
90024cae:	f2c0 8137 	blt.w	90024f20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90024cb2:	f10e 3bff 	add.w	fp, lr, #4294967295
90024cb6:	4558      	cmp	r0, fp
90024cb8:	f280 8132 	bge.w	90024f20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90024cbc:	9a06      	ldr	r2, [sp, #24]
90024cbe:	fb00 3302 	mla	r3, r0, r2, r3
90024cc2:	0858      	lsrs	r0, r3, #1
90024cc4:	07da      	lsls	r2, r3, #31
90024cc6:	9a08      	ldr	r2, [sp, #32]
90024cc8:	f817 c000 	ldrb.w	ip, [r7, r0]
90024ccc:	bf54      	ite	pl
90024cce:	f00c 0c0f 	andpl.w	ip, ip, #15
90024cd2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90024cd6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90024cda:	fa5f fc8c 	uxtb.w	ip, ip
90024cde:	2a00      	cmp	r2, #0
90024ce0:	f000 80cc 	beq.w	90024e7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90024ce4:	1c58      	adds	r0, r3, #1
90024ce6:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90024cea:	07c0      	lsls	r0, r0, #31
90024cec:	f817 e00e 	ldrb.w	lr, [r7, lr]
90024cf0:	bf54      	ite	pl
90024cf2:	f00e 0e0f 	andpl.w	lr, lr, #15
90024cf6:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90024cfa:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90024cfe:	fa5f fe8e 	uxtb.w	lr, lr
90024d02:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
90024d06:	b1b9      	cbz	r1, 90024d38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90024d08:	4453      	add	r3, sl
90024d0a:	0858      	lsrs	r0, r3, #1
90024d0c:	07da      	lsls	r2, r3, #31
90024d0e:	5c38      	ldrb	r0, [r7, r0]
90024d10:	bf54      	ite	pl
90024d12:	f000 000f 	andpl.w	r0, r0, #15
90024d16:	1100      	asrmi	r0, r0, #4
90024d18:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90024d1c:	b2c0      	uxtb	r0, r0
90024d1e:	900a      	str	r0, [sp, #40]	; 0x28
90024d20:	1c58      	adds	r0, r3, #1
90024d22:	0843      	lsrs	r3, r0, #1
90024d24:	07c2      	lsls	r2, r0, #31
90024d26:	5cfb      	ldrb	r3, [r7, r3]
90024d28:	bf54      	ite	pl
90024d2a:	f003 030f 	andpl.w	r3, r3, #15
90024d2e:	111b      	asrmi	r3, r3, #4
90024d30:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90024d34:	b2db      	uxtb	r3, r3
90024d36:	930e      	str	r3, [sp, #56]	; 0x38
90024d38:	f8bd 2020 	ldrh.w	r2, [sp, #32]
90024d3c:	b289      	uxth	r1, r1
90024d3e:	fb02 f301 	mul.w	r3, r2, r1
90024d42:	0112      	lsls	r2, r2, #4
90024d44:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90024d48:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
90024d4c:	1ad2      	subs	r2, r2, r3
90024d4e:	b289      	uxth	r1, r1
90024d50:	b292      	uxth	r2, r2
90024d52:	1a40      	subs	r0, r0, r1
90024d54:	fa1f fe80 	uxth.w	lr, r0
90024d58:	980d      	ldr	r0, [sp, #52]	; 0x34
90024d5a:	4342      	muls	r2, r0
90024d5c:	fb0c 2c0e 	mla	ip, ip, lr, r2
90024d60:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90024d62:	fb01 c102 	mla	r1, r1, r2, ip
90024d66:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90024d68:	fb03 1302 	mla	r3, r3, r2, r1
90024d6c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024d70:	2bff      	cmp	r3, #255	; 0xff
90024d72:	f040 8094 	bne.w	90024e9e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
90024d76:	4bbf      	ldr	r3, [pc, #764]	; (90025074 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90024d78:	681a      	ldr	r2, [r3, #0]
90024d7a:	4bbf      	ldr	r3, [pc, #764]	; (90025078 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
90024d7c:	0951      	lsrs	r1, r2, #5
90024d7e:	ea03 2312 	and.w	r3, r3, r2, lsr #8
90024d82:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90024d86:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90024d8a:	430b      	orrs	r3, r1
90024d8c:	4313      	orrs	r3, r2
90024d8e:	f8a8 3000 	strh.w	r3, [r8]
90024d92:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90024d94:	f108 0802 	add.w	r8, r8, #2
90024d98:	441c      	add	r4, r3
90024d9a:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024d9c:	441e      	add	r6, r3
90024d9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90024da0:	3b01      	subs	r3, #1
90024da2:	9309      	str	r3, [sp, #36]	; 0x24
90024da4:	e76d      	b.n	90024c82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024da6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90024da8:	3d01      	subs	r5, #1
90024daa:	f109 0902 	add.w	r9, r9, #2
90024dae:	441c      	add	r4, r3
90024db0:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024db2:	441e      	add	r6, r3
90024db4:	e745      	b.n	90024c42 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90024db6:	d021      	beq.n	90024dfc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90024db8:	1e6b      	subs	r3, r5, #1
90024dba:	981f      	ldr	r0, [sp, #124]	; 0x7c
90024dbc:	fb00 4003 	mla	r0, r0, r3, r4
90024dc0:	1400      	asrs	r0, r0, #16
90024dc2:	f53f af5a 	bmi.w	90024c7a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90024dc6:	3901      	subs	r1, #1
90024dc8:	4288      	cmp	r0, r1
90024dca:	f6bf af56 	bge.w	90024c7a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90024dce:	9920      	ldr	r1, [sp, #128]	; 0x80
90024dd0:	fb01 6303 	mla	r3, r1, r3, r6
90024dd4:	141b      	asrs	r3, r3, #16
90024dd6:	f53f af50 	bmi.w	90024c7a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90024dda:	3a01      	subs	r2, #1
90024ddc:	4293      	cmp	r3, r2
90024dde:	f6bf af4c 	bge.w	90024c7a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90024de2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90024de6:	46a8      	mov	r8, r5
90024de8:	46ce      	mov	lr, r9
90024dea:	9308      	str	r3, [sp, #32]
90024dec:	f1b8 0f00 	cmp.w	r8, #0
90024df0:	f300 80b6 	bgt.w	90024f60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024df4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90024df8:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90024dfc:	9b07      	ldr	r3, [sp, #28]
90024dfe:	2b00      	cmp	r3, #0
90024e00:	f340 817e 	ble.w	90025100 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90024e04:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90024e08:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90024e0a:	ee30 0a04 	vadd.f32	s0, s0, s8
90024e0e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024e12:	eef0 6a62 	vmov.f32	s13, s5
90024e16:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024e1a:	ee31 1a05 	vadd.f32	s2, s2, s10
90024e1e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024e22:	ee16 4a90 	vmov	r4, s13
90024e26:	eef0 6a43 	vmov.f32	s13, s6
90024e2a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024e2e:	ee16 6a90 	vmov	r6, s13
90024e32:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024e36:	ee61 7a27 	vmul.f32	s15, s2, s15
90024e3a:	ee77 2a62 	vsub.f32	s5, s14, s5
90024e3e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024e42:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024e46:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024e4a:	ee12 2a90 	vmov	r2, s5
90024e4e:	eef0 2a47 	vmov.f32	s5, s14
90024e52:	fb92 f3f3 	sdiv	r3, r2, r3
90024e56:	ee13 2a10 	vmov	r2, s6
90024e5a:	931f      	str	r3, [sp, #124]	; 0x7c
90024e5c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90024e5e:	eeb0 3a67 	vmov.f32	s6, s15
90024e62:	fb92 f3f3 	sdiv	r3, r2, r3
90024e66:	9320      	str	r3, [sp, #128]	; 0x80
90024e68:	9b07      	ldr	r3, [sp, #28]
90024e6a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90024e6c:	3b01      	subs	r3, #1
90024e6e:	9307      	str	r3, [sp, #28]
90024e70:	bf08      	it	eq
90024e72:	4615      	moveq	r5, r2
90024e74:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90024e76:	bf18      	it	ne
90024e78:	461d      	movne	r5, r3
90024e7a:	e6d3      	b.n	90024c24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
90024e7c:	2900      	cmp	r1, #0
90024e7e:	f43f af5b 	beq.w	90024d38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90024e82:	eb0a 0003 	add.w	r0, sl, r3
90024e86:	0843      	lsrs	r3, r0, #1
90024e88:	07c0      	lsls	r0, r0, #31
90024e8a:	5cfb      	ldrb	r3, [r7, r3]
90024e8c:	bf54      	ite	pl
90024e8e:	f003 030f 	andpl.w	r3, r3, #15
90024e92:	111b      	asrmi	r3, r3, #4
90024e94:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90024e98:	b2db      	uxtb	r3, r3
90024e9a:	930a      	str	r3, [sp, #40]	; 0x28
90024e9c:	e74c      	b.n	90024d38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90024e9e:	2b00      	cmp	r3, #0
90024ea0:	f43f af77 	beq.w	90024d92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90024ea4:	4a73      	ldr	r2, [pc, #460]	; (90025074 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90024ea6:	fa1f fe83 	uxth.w	lr, r3
90024eaa:	f8b8 c000 	ldrh.w	ip, [r8]
90024eae:	43db      	mvns	r3, r3
90024eb0:	6810      	ldr	r0, [r2, #0]
90024eb2:	ea4f 212c 	mov.w	r1, ip, asr #8
90024eb6:	f3c0 4207 	ubfx	r2, r0, #16, #8
90024eba:	b2db      	uxtb	r3, r3
90024ebc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90024ec0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90024ec4:	fb12 f20e 	smulbb	r2, r2, lr
90024ec8:	b2c0      	uxtb	r0, r0
90024eca:	fb1b fb0e 	smulbb	fp, fp, lr
90024ece:	fb01 2103 	mla	r1, r1, r3, r2
90024ed2:	ea4f 02ec 	mov.w	r2, ip, asr #3
90024ed6:	fb10 fe0e 	smulbb	lr, r0, lr
90024eda:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90024ede:	b289      	uxth	r1, r1
90024ee0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90024ee4:	fa5f fc8c 	uxtb.w	ip, ip
90024ee8:	fb02 b203 	mla	r2, r2, r3, fp
90024eec:	1c48      	adds	r0, r1, #1
90024eee:	fb0c e303 	mla	r3, ip, r3, lr
90024ef2:	b292      	uxth	r2, r2
90024ef4:	b29b      	uxth	r3, r3
90024ef6:	eb00 2111 	add.w	r1, r0, r1, lsr #8
90024efa:	f102 0b01 	add.w	fp, r2, #1
90024efe:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
90024f02:	1c59      	adds	r1, r3, #1
90024f04:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90024f08:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90024f0c:	0952      	lsrs	r2, r2, #5
90024f0e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
90024f12:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90024f16:	4301      	orrs	r1, r0
90024f18:	4311      	orrs	r1, r2
90024f1a:	f8a8 1000 	strh.w	r1, [r8]
90024f1e:	e738      	b.n	90024d92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90024f20:	f113 0b01 	adds.w	fp, r3, #1
90024f24:	f53f af35 	bmi.w	90024d92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90024f28:	45dc      	cmp	ip, fp
90024f2a:	f6ff af32 	blt.w	90024d92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90024f2e:	f110 0b01 	adds.w	fp, r0, #1
90024f32:	f53f af2e 	bmi.w	90024d92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90024f36:	45de      	cmp	lr, fp
90024f38:	f6ff af2b 	blt.w	90024d92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90024f3c:	9302      	str	r3, [sp, #8]
90024f3e:	fa0f f38e 	sxth.w	r3, lr
90024f42:	9a08      	ldr	r2, [sp, #32]
90024f44:	9301      	str	r3, [sp, #4]
90024f46:	fa0f f38c 	sxth.w	r3, ip
90024f4a:	9105      	str	r1, [sp, #20]
90024f4c:	4641      	mov	r1, r8
90024f4e:	9300      	str	r3, [sp, #0]
90024f50:	4653      	mov	r3, sl
90024f52:	e9cd 0203 	strd	r0, r2, [sp, #12]
90024f56:	463a      	mov	r2, r7
90024f58:	9811      	ldr	r0, [sp, #68]	; 0x44
90024f5a:	f7ff fd73 	bl	90024a44 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
90024f5e:	e718      	b.n	90024d92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90024f60:	1422      	asrs	r2, r4, #16
90024f62:	9906      	ldr	r1, [sp, #24]
90024f64:	1433      	asrs	r3, r6, #16
90024f66:	f3c4 3003 	ubfx	r0, r4, #12, #4
90024f6a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90024f6e:	fb01 2303 	mla	r3, r1, r3, r2
90024f72:	085a      	lsrs	r2, r3, #1
90024f74:	07d9      	lsls	r1, r3, #31
90024f76:	5cba      	ldrb	r2, [r7, r2]
90024f78:	bf54      	ite	pl
90024f7a:	f002 020f 	andpl.w	r2, r2, #15
90024f7e:	1112      	asrmi	r2, r2, #4
90024f80:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90024f84:	b2d2      	uxtb	r2, r2
90024f86:	2800      	cmp	r0, #0
90024f88:	d063      	beq.n	90025052 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
90024f8a:	f103 0a01 	add.w	sl, r3, #1
90024f8e:	ea4f 015a 	mov.w	r1, sl, lsr #1
90024f92:	f01a 0f01 	tst.w	sl, #1
90024f96:	5c79      	ldrb	r1, [r7, r1]
90024f98:	bf0c      	ite	eq
90024f9a:	f001 010f 	andeq.w	r1, r1, #15
90024f9e:	1109      	asrne	r1, r1, #4
90024fa0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90024fa4:	b2c9      	uxtb	r1, r1
90024fa6:	910f      	str	r1, [sp, #60]	; 0x3c
90024fa8:	f1bc 0f00 	cmp.w	ip, #0
90024fac:	d01a      	beq.n	90024fe4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90024fae:	9908      	ldr	r1, [sp, #32]
90024fb0:	440b      	add	r3, r1
90024fb2:	0859      	lsrs	r1, r3, #1
90024fb4:	f013 0f01 	tst.w	r3, #1
90024fb8:	f103 0301 	add.w	r3, r3, #1
90024fbc:	5c79      	ldrb	r1, [r7, r1]
90024fbe:	bf0c      	ite	eq
90024fc0:	f001 010f 	andeq.w	r1, r1, #15
90024fc4:	1109      	asrne	r1, r1, #4
90024fc6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90024fca:	b2c9      	uxtb	r1, r1
90024fcc:	910b      	str	r1, [sp, #44]	; 0x2c
90024fce:	0859      	lsrs	r1, r3, #1
90024fd0:	07db      	lsls	r3, r3, #31
90024fd2:	5c79      	ldrb	r1, [r7, r1]
90024fd4:	bf54      	ite	pl
90024fd6:	f001 010f 	andpl.w	r1, r1, #15
90024fda:	1109      	asrmi	r1, r1, #4
90024fdc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90024fe0:	b2c9      	uxtb	r1, r1
90024fe2:	9110      	str	r1, [sp, #64]	; 0x40
90024fe4:	b280      	uxth	r0, r0
90024fe6:	fa1f fc8c 	uxth.w	ip, ip
90024fea:	fb00 f30c 	mul.w	r3, r0, ip
90024fee:	0100      	lsls	r0, r0, #4
90024ff0:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
90024ff4:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
90024ff8:	1ac0      	subs	r0, r0, r3
90024ffa:	fa1f fc8c 	uxth.w	ip, ip
90024ffe:	b280      	uxth	r0, r0
90025000:	eba1 010c 	sub.w	r1, r1, ip
90025004:	fa1f fa81 	uxth.w	sl, r1
90025008:	990f      	ldr	r1, [sp, #60]	; 0x3c
9002500a:	4348      	muls	r0, r1
9002500c:	990b      	ldr	r1, [sp, #44]	; 0x2c
9002500e:	fb02 020a 	mla	r2, r2, sl, r0
90025012:	fb0c 2c01 	mla	ip, ip, r1, r2
90025016:	9a10      	ldr	r2, [sp, #64]	; 0x40
90025018:	fb03 c302 	mla	r3, r3, r2, ip
9002501c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025020:	2bff      	cmp	r3, #255	; 0xff
90025022:	d12b      	bne.n	9002507c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
90025024:	4b13      	ldr	r3, [pc, #76]	; (90025074 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90025026:	681a      	ldr	r2, [r3, #0]
90025028:	4b13      	ldr	r3, [pc, #76]	; (90025078 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
9002502a:	0951      	lsrs	r1, r2, #5
9002502c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
90025030:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90025034:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90025038:	430b      	orrs	r3, r1
9002503a:	4313      	orrs	r3, r2
9002503c:	f8ae 3000 	strh.w	r3, [lr]
90025040:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90025042:	f10e 0e02 	add.w	lr, lr, #2
90025046:	f108 38ff 	add.w	r8, r8, #4294967295
9002504a:	441c      	add	r4, r3
9002504c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002504e:	441e      	add	r6, r3
90025050:	e6cc      	b.n	90024dec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
90025052:	f1bc 0f00 	cmp.w	ip, #0
90025056:	d0c5      	beq.n	90024fe4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90025058:	9908      	ldr	r1, [sp, #32]
9002505a:	440b      	add	r3, r1
9002505c:	0859      	lsrs	r1, r3, #1
9002505e:	07db      	lsls	r3, r3, #31
90025060:	5c79      	ldrb	r1, [r7, r1]
90025062:	bf54      	ite	pl
90025064:	f001 010f 	andpl.w	r1, r1, #15
90025068:	1109      	asrmi	r1, r1, #4
9002506a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9002506e:	b2c9      	uxtb	r1, r1
90025070:	910b      	str	r1, [sp, #44]	; 0x2c
90025072:	e7b7      	b.n	90024fe4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90025074:	240235bc 	.word	0x240235bc
90025078:	fffff800 	.word	0xfffff800
9002507c:	2b00      	cmp	r3, #0
9002507e:	d0df      	beq.n	90025040 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90025080:	4a21      	ldr	r2, [pc, #132]	; (90025108 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
90025082:	fa1f fa83 	uxth.w	sl, r3
90025086:	f8be c000 	ldrh.w	ip, [lr]
9002508a:	43db      	mvns	r3, r3
9002508c:	6810      	ldr	r0, [r2, #0]
9002508e:	ea4f 212c 	mov.w	r1, ip, asr #8
90025092:	f3c0 4207 	ubfx	r2, r0, #16, #8
90025096:	b2db      	uxtb	r3, r3
90025098:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9002509c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
900250a0:	fb12 f20a 	smulbb	r2, r2, sl
900250a4:	b2c0      	uxtb	r0, r0
900250a6:	fb1b fb0a 	smulbb	fp, fp, sl
900250aa:	fb01 2103 	mla	r1, r1, r3, r2
900250ae:	ea4f 02ec 	mov.w	r2, ip, asr #3
900250b2:	fb10 f00a 	smulbb	r0, r0, sl
900250b6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
900250ba:	b289      	uxth	r1, r1
900250bc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
900250c0:	fa5f fc8c 	uxtb.w	ip, ip
900250c4:	fb02 b203 	mla	r2, r2, r3, fp
900250c8:	fb0c 0003 	mla	r0, ip, r3, r0
900250cc:	1c4b      	adds	r3, r1, #1
900250ce:	b292      	uxth	r2, r2
900250d0:	b280      	uxth	r0, r0
900250d2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
900250d6:	f100 0b01 	add.w	fp, r0, #1
900250da:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
900250de:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
900250e2:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
900250e6:	ea4b 0101 	orr.w	r1, fp, r1
900250ea:	f102 0b01 	add.w	fp, r2, #1
900250ee:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
900250f2:	0952      	lsrs	r2, r2, #5
900250f4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900250f8:	4311      	orrs	r1, r2
900250fa:	f8ae 1000 	strh.w	r1, [lr]
900250fe:	e79f      	b.n	90025040 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90025100:	b013      	add	sp, #76	; 0x4c
90025102:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90025106:	bf00      	nop
90025108:	240235bc 	.word	0x240235bc

9002510c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
9002510c:	b570      	push	{r4, r5, r6, lr}
9002510e:	1208      	asrs	r0, r1, #8
90025110:	f8bd 5010 	ldrh.w	r5, [sp, #16]
90025114:	b29e      	uxth	r6, r3
90025116:	1213      	asrs	r3, r2, #8
90025118:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9002511c:	10cc      	asrs	r4, r1, #3
9002511e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90025122:	00c9      	lsls	r1, r1, #3
90025124:	fb10 f006 	smulbb	r0, r0, r6
90025128:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
9002512c:	fb13 f305 	smulbb	r3, r3, r5
90025130:	fb14 f406 	smulbb	r4, r4, r6
90025134:	4418      	add	r0, r3
90025136:	10d3      	asrs	r3, r2, #3
90025138:	00d2      	lsls	r2, r2, #3
9002513a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
9002513e:	b280      	uxth	r0, r0
90025140:	b2d2      	uxtb	r2, r2
90025142:	fb13 f305 	smulbb	r3, r3, r5
90025146:	fb12 f205 	smulbb	r2, r2, r5
9002514a:	441c      	add	r4, r3
9002514c:	b2cb      	uxtb	r3, r1
9002514e:	fb13 f306 	smulbb	r3, r3, r6
90025152:	b2a4      	uxth	r4, r4
90025154:	4413      	add	r3, r2
90025156:	1c42      	adds	r2, r0, #1
90025158:	b29b      	uxth	r3, r3
9002515a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002515e:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
90025162:	1c58      	adds	r0, r3, #1
90025164:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90025168:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002516c:	4310      	orrs	r0, r2
9002516e:	1c62      	adds	r2, r4, #1
90025170:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90025174:	0964      	lsrs	r4, r4, #5
90025176:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9002517a:	4320      	orrs	r0, r4
9002517c:	bd70      	pop	{r4, r5, r6, pc}
	...

90025180 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
90025180:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025184:	b08f      	sub	sp, #60	; 0x3c
90025186:	461c      	mov	r4, r3
90025188:	460d      	mov	r5, r1
9002518a:	4616      	mov	r6, r2
9002518c:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
90025190:	9004      	str	r0, [sp, #16]
90025192:	9b18      	ldr	r3, [sp, #96]	; 0x60
90025194:	2f00      	cmp	r7, #0
90025196:	f000 80f6 	beq.w	90025386 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9002519a:	6820      	ldr	r0, [r4, #0]
9002519c:	aa0a      	add	r2, sp, #40	; 0x28
9002519e:	6861      	ldr	r1, [r4, #4]
900251a0:	f04f 0802 	mov.w	r8, #2
900251a4:	3604      	adds	r6, #4
900251a6:	c203      	stmia	r2!, {r0, r1}
900251a8:	6818      	ldr	r0, [r3, #0]
900251aa:	aa0c      	add	r2, sp, #48	; 0x30
900251ac:	6859      	ldr	r1, [r3, #4]
900251ae:	c203      	stmia	r2!, {r0, r1}
900251b0:	a80a      	add	r0, sp, #40	; 0x28
900251b2:	f7ef fd53 	bl	90014c5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900251b6:	4621      	mov	r1, r4
900251b8:	a80c      	add	r0, sp, #48	; 0x30
900251ba:	f7ef fd93 	bl	90014ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900251be:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
900251c2:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
900251c6:	f002 0301 	and.w	r3, r2, #1
900251ca:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
900251ce:	9306      	str	r3, [sp, #24]
900251d0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
900251d4:	f003 0101 	and.w	r1, r3, #1
900251d8:	9105      	str	r1, [sp, #20]
900251da:	9805      	ldr	r0, [sp, #20]
900251dc:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
900251e0:	4403      	add	r3, r0
900251e2:	fb01 2303 	mla	r3, r1, r3, r2
900251e6:	fb93 f3f8 	sdiv	r3, r3, r8
900251ea:	441d      	add	r5, r3
900251ec:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
900251f0:	441a      	add	r2, r3
900251f2:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
900251f6:	4419      	add	r1, r3
900251f8:	4b64      	ldr	r3, [pc, #400]	; (9002538c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
900251fa:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
900251fe:	6818      	ldr	r0, [r3, #0]
90025200:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
90025204:	6803      	ldr	r3, [r0, #0]
90025206:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90025208:	4798      	blx	r3
9002520a:	4a61      	ldr	r2, [pc, #388]	; (90025390 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
9002520c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
90025210:	2fff      	cmp	r7, #255	; 0xff
90025212:	8813      	ldrh	r3, [r2, #0]
90025214:	4611      	mov	r1, r2
90025216:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
9002521a:	fb03 fb0b 	mul.w	fp, r3, fp
9002521e:	fb03 a404 	mla	r4, r3, r4, sl
90025222:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90025226:	d06b      	beq.n	90025300 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
90025228:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
9002522c:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
90025230:	9303      	str	r3, [sp, #12]
90025232:	eb04 034b 	add.w	r3, r4, fp, lsl #1
90025236:	e9cd 3207 	strd	r3, r2, [sp, #28]
9002523a:	9b07      	ldr	r3, [sp, #28]
9002523c:	42a3      	cmp	r3, r4
9002523e:	f240 809d 	bls.w	9002537c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90025242:	9b06      	ldr	r3, [sp, #24]
90025244:	2b00      	cmp	r3, #0
90025246:	d039      	beq.n	900252bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
90025248:	782b      	ldrb	r3, [r5, #0]
9002524a:	f105 0801 	add.w	r8, r5, #1
9002524e:	f109 3bff 	add.w	fp, r9, #4294967295
90025252:	8822      	ldrh	r2, [r4, #0]
90025254:	f003 030f 	and.w	r3, r3, #15
90025258:	9804      	ldr	r0, [sp, #16]
9002525a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002525e:	9b03      	ldr	r3, [sp, #12]
90025260:	9300      	str	r3, [sp, #0]
90025262:	463b      	mov	r3, r7
90025264:	f7ff ff52 	bl	9002510c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90025268:	f824 0b02 	strh.w	r0, [r4], #2
9002526c:	f1bb 0f01 	cmp.w	fp, #1
90025270:	46a2      	mov	sl, r4
90025272:	f104 0404 	add.w	r4, r4, #4
90025276:	dd24      	ble.n	900252c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
90025278:	f898 3000 	ldrb.w	r3, [r8]
9002527c:	f1ab 0b02 	sub.w	fp, fp, #2
90025280:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90025284:	091b      	lsrs	r3, r3, #4
90025286:	9804      	ldr	r0, [sp, #16]
90025288:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002528c:	9b03      	ldr	r3, [sp, #12]
9002528e:	9300      	str	r3, [sp, #0]
90025290:	463b      	mov	r3, r7
90025292:	f7ff ff3b 	bl	9002510c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90025296:	f824 0c04 	strh.w	r0, [r4, #-4]
9002529a:	f818 3b01 	ldrb.w	r3, [r8], #1
9002529e:	f834 2c02 	ldrh.w	r2, [r4, #-2]
900252a2:	f003 030f 	and.w	r3, r3, #15
900252a6:	9804      	ldr	r0, [sp, #16]
900252a8:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
900252ac:	9b03      	ldr	r3, [sp, #12]
900252ae:	9300      	str	r3, [sp, #0]
900252b0:	463b      	mov	r3, r7
900252b2:	f7ff ff2b 	bl	9002510c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
900252b6:	f824 0c02 	strh.w	r0, [r4, #-2]
900252ba:	e7d7      	b.n	9002526c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
900252bc:	46a8      	mov	r8, r5
900252be:	46cb      	mov	fp, r9
900252c0:	e7d4      	b.n	9002526c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
900252c2:	d10e      	bne.n	900252e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
900252c4:	f898 3000 	ldrb.w	r3, [r8]
900252c8:	f8ba 2000 	ldrh.w	r2, [sl]
900252cc:	091b      	lsrs	r3, r3, #4
900252ce:	9804      	ldr	r0, [sp, #16]
900252d0:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
900252d4:	9b03      	ldr	r3, [sp, #12]
900252d6:	9300      	str	r3, [sp, #0]
900252d8:	463b      	mov	r3, r7
900252da:	f7ff ff17 	bl	9002510c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
900252de:	f82a 0b02 	strh.w	r0, [sl], #2
900252e2:	9b08      	ldr	r3, [sp, #32]
900252e4:	9a05      	ldr	r2, [sp, #20]
900252e6:	881c      	ldrh	r4, [r3, #0]
900252e8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
900252ec:	eba4 0409 	sub.w	r4, r4, r9
900252f0:	4413      	add	r3, r2
900252f2:	9a09      	ldr	r2, [sp, #36]	; 0x24
900252f4:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
900252f8:	fb93 f3f2 	sdiv	r3, r3, r2
900252fc:	441d      	add	r5, r3
900252fe:	e79c      	b.n	9002523a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
90025300:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
90025304:	45a3      	cmp	fp, r4
90025306:	d939      	bls.n	9002537c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90025308:	9b06      	ldr	r3, [sp, #24]
9002530a:	b1fb      	cbz	r3, 9002534c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
9002530c:	782b      	ldrb	r3, [r5, #0]
9002530e:	1c6a      	adds	r2, r5, #1
90025310:	f109 30ff 	add.w	r0, r9, #4294967295
90025314:	3402      	adds	r4, #2
90025316:	f003 030f 	and.w	r3, r3, #15
9002531a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002531e:	f824 3c02 	strh.w	r3, [r4, #-2]
90025322:	2801      	cmp	r0, #1
90025324:	4623      	mov	r3, r4
90025326:	f104 0404 	add.w	r4, r4, #4
9002532a:	dd12      	ble.n	90025352 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
9002532c:	7813      	ldrb	r3, [r2, #0]
9002532e:	3802      	subs	r0, #2
90025330:	091b      	lsrs	r3, r3, #4
90025332:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90025336:	f824 3c04 	strh.w	r3, [r4, #-4]
9002533a:	f812 3b01 	ldrb.w	r3, [r2], #1
9002533e:	f003 030f 	and.w	r3, r3, #15
90025342:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90025346:	f824 3c02 	strh.w	r3, [r4, #-2]
9002534a:	e7ea      	b.n	90025322 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
9002534c:	462a      	mov	r2, r5
9002534e:	4648      	mov	r0, r9
90025350:	e7e7      	b.n	90025322 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
90025352:	d106      	bne.n	90025362 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
90025354:	7812      	ldrb	r2, [r2, #0]
90025356:	3302      	adds	r3, #2
90025358:	0912      	lsrs	r2, r2, #4
9002535a:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
9002535e:	f823 2c02 	strh.w	r2, [r3, #-2]
90025362:	880c      	ldrh	r4, [r1, #0]
90025364:	9a05      	ldr	r2, [sp, #20]
90025366:	eba4 0409 	sub.w	r4, r4, r9
9002536a:	eb03 0444 	add.w	r4, r3, r4, lsl #1
9002536e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90025372:	4413      	add	r3, r2
90025374:	fb93 f3f8 	sdiv	r3, r3, r8
90025378:	441d      	add	r5, r3
9002537a:	e7c3      	b.n	90025304 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
9002537c:	4b03      	ldr	r3, [pc, #12]	; (9002538c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
9002537e:	6818      	ldr	r0, [r3, #0]
90025380:	6803      	ldr	r3, [r0, #0]
90025382:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90025384:	4798      	blx	r3
90025386:	b00f      	add	sp, #60	; 0x3c
90025388:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002538c:	240235ac 	.word	0x240235ac
90025390:	240235a6 	.word	0x240235a6

90025394 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
90025394:	b5f0      	push	{r4, r5, r6, r7, lr}
90025396:	f89d 5014 	ldrb.w	r5, [sp, #20]
9002539a:	0a0f      	lsrs	r7, r1, #8
9002539c:	2dff      	cmp	r5, #255	; 0xff
9002539e:	d10c      	bne.n	900253ba <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
900253a0:	2bff      	cmp	r3, #255	; 0xff
900253a2:	d10a      	bne.n	900253ba <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
900253a4:	0948      	lsrs	r0, r1, #5
900253a6:	4b25      	ldr	r3, [pc, #148]	; (9002543c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
900253a8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
900253ac:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900253b0:	403b      	ands	r3, r7
900253b2:	4318      	orrs	r0, r3
900253b4:	4308      	orrs	r0, r1
900253b6:	b280      	uxth	r0, r0
900253b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
900253ba:	fb15 f503 	smulbb	r5, r5, r3
900253be:	1214      	asrs	r4, r2, #8
900253c0:	10d6      	asrs	r6, r2, #3
900253c2:	b2ab      	uxth	r3, r5
900253c4:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
900253c8:	00d0      	lsls	r0, r2, #3
900253ca:	f3c1 4207 	ubfx	r2, r1, #16, #8
900253ce:	1c5d      	adds	r5, r3, #1
900253d0:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
900253d4:	b2c0      	uxtb	r0, r0
900253d6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
900253da:	eb05 2513 	add.w	r5, r5, r3, lsr #8
900253de:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
900253e2:	f3c5 2507 	ubfx	r5, r5, #8, #8
900253e6:	fa1f fc85 	uxth.w	ip, r5
900253ea:	43ed      	mvns	r5, r5
900253ec:	fb12 f20c 	smulbb	r2, r2, ip
900253f0:	b2eb      	uxtb	r3, r5
900253f2:	b2fd      	uxtb	r5, r7
900253f4:	fb04 2403 	mla	r4, r4, r3, r2
900253f8:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
900253fc:	fb15 f50c 	smulbb	r5, r5, ip
90025400:	b2c8      	uxtb	r0, r1
90025402:	b2a4      	uxth	r4, r4
90025404:	fb10 f00c 	smulbb	r0, r0, ip
90025408:	fb06 5503 	mla	r5, r6, r3, r5
9002540c:	fb02 0003 	mla	r0, r2, r3, r0
90025410:	b2ad      	uxth	r5, r5
90025412:	b283      	uxth	r3, r0
90025414:	1c60      	adds	r0, r4, #1
90025416:	eb00 2414 	add.w	r4, r0, r4, lsr #8
9002541a:	1c58      	adds	r0, r3, #1
9002541c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90025420:	1c6b      	adds	r3, r5, #1
90025422:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
90025426:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002542a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002542e:	096d      	lsrs	r5, r5, #5
90025430:	4320      	orrs	r0, r4
90025432:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90025436:	4328      	orrs	r0, r5
90025438:	e7be      	b.n	900253b8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
9002543a:	bf00      	nop
9002543c:	00fff800 	.word	0x00fff800

90025440 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
90025440:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025444:	461c      	mov	r4, r3
90025446:	b08d      	sub	sp, #52	; 0x34
90025448:	460d      	mov	r5, r1
9002544a:	4616      	mov	r6, r2
9002544c:	9b16      	ldr	r3, [sp, #88]	; 0x58
9002544e:	4680      	mov	r8, r0
90025450:	6861      	ldr	r1, [r4, #4]
90025452:	aa08      	add	r2, sp, #32
90025454:	6820      	ldr	r0, [r4, #0]
90025456:	f04f 0a02 	mov.w	sl, #2
9002545a:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
9002545e:	3604      	adds	r6, #4
90025460:	c203      	stmia	r2!, {r0, r1}
90025462:	6818      	ldr	r0, [r3, #0]
90025464:	aa0a      	add	r2, sp, #40	; 0x28
90025466:	6859      	ldr	r1, [r3, #4]
90025468:	c203      	stmia	r2!, {r0, r1}
9002546a:	a808      	add	r0, sp, #32
9002546c:	f7ef fbf6 	bl	90014c5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90025470:	4621      	mov	r1, r4
90025472:	a80a      	add	r0, sp, #40	; 0x28
90025474:	f7ef fc36 	bl	90014ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90025478:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
9002547c:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
90025480:	f002 0301 	and.w	r3, r2, #1
90025484:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
90025488:	9303      	str	r3, [sp, #12]
9002548a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
9002548e:	f003 0101 	and.w	r1, r3, #1
90025492:	9102      	str	r1, [sp, #8]
90025494:	9802      	ldr	r0, [sp, #8]
90025496:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
9002549a:	4403      	add	r3, r0
9002549c:	fb01 2303 	mla	r3, r1, r3, r2
900254a0:	fb93 f3fa 	sdiv	r3, r3, sl
900254a4:	441d      	add	r5, r3
900254a6:	f8bd 3020 	ldrh.w	r3, [sp, #32]
900254aa:	441a      	add	r2, r3
900254ac:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
900254b0:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
900254b4:	4419      	add	r1, r3
900254b6:	4a3e      	ldr	r2, [pc, #248]	; (900255b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
900254b8:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
900254bc:	6810      	ldr	r0, [r2, #0]
900254be:	9205      	str	r2, [sp, #20]
900254c0:	6803      	ldr	r3, [r0, #0]
900254c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900254c4:	4798      	blx	r3
900254c6:	4b3b      	ldr	r3, [pc, #236]	; (900255b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
900254c8:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
900254cc:	8819      	ldrh	r1, [r3, #0]
900254ce:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
900254d2:	434f      	muls	r7, r1
900254d4:	fb01 c404 	mla	r4, r1, r4, ip
900254d8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
900254dc:	eb04 0247 	add.w	r2, r4, r7, lsl #1
900254e0:	e9cd 3a06 	strd	r3, sl, [sp, #24]
900254e4:	9204      	str	r2, [sp, #16]
900254e6:	9b04      	ldr	r3, [sp, #16]
900254e8:	429c      	cmp	r4, r3
900254ea:	d258      	bcs.n	9002559e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
900254ec:	9b03      	ldr	r3, [sp, #12]
900254ee:	2b00      	cmp	r3, #0
900254f0:	d034      	beq.n	9002555c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
900254f2:	782b      	ldrb	r3, [r5, #0]
900254f4:	1c6f      	adds	r7, r5, #1
900254f6:	f003 030f 	and.w	r3, r3, #15
900254fa:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
900254fe:	0e0b      	lsrs	r3, r1, #24
90025500:	d006      	beq.n	90025510 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
90025502:	8822      	ldrh	r2, [r4, #0]
90025504:	4640      	mov	r0, r8
90025506:	9300      	str	r3, [sp, #0]
90025508:	464b      	mov	r3, r9
9002550a:	f7ff ff43 	bl	90025394 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
9002550e:	8020      	strh	r0, [r4, #0]
90025510:	3402      	adds	r4, #2
90025512:	f10b 3aff 	add.w	sl, fp, #4294967295
90025516:	f1ba 0f01 	cmp.w	sl, #1
9002551a:	dd22      	ble.n	90025562 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9002551c:	783b      	ldrb	r3, [r7, #0]
9002551e:	091b      	lsrs	r3, r3, #4
90025520:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90025524:	0e0b      	lsrs	r3, r1, #24
90025526:	d006      	beq.n	90025536 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
90025528:	8822      	ldrh	r2, [r4, #0]
9002552a:	4640      	mov	r0, r8
9002552c:	9300      	str	r3, [sp, #0]
9002552e:	464b      	mov	r3, r9
90025530:	f7ff ff30 	bl	90025394 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90025534:	8020      	strh	r0, [r4, #0]
90025536:	f817 3b01 	ldrb.w	r3, [r7], #1
9002553a:	f003 030f 	and.w	r3, r3, #15
9002553e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90025542:	0e0b      	lsrs	r3, r1, #24
90025544:	d006      	beq.n	90025554 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
90025546:	8862      	ldrh	r2, [r4, #2]
90025548:	4640      	mov	r0, r8
9002554a:	9300      	str	r3, [sp, #0]
9002554c:	464b      	mov	r3, r9
9002554e:	f7ff ff21 	bl	90025394 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90025552:	8060      	strh	r0, [r4, #2]
90025554:	3404      	adds	r4, #4
90025556:	f1aa 0a02 	sub.w	sl, sl, #2
9002555a:	e7dc      	b.n	90025516 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
9002555c:	462f      	mov	r7, r5
9002555e:	46da      	mov	sl, fp
90025560:	e7d9      	b.n	90025516 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
90025562:	d10d      	bne.n	90025580 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
90025564:	783b      	ldrb	r3, [r7, #0]
90025566:	091b      	lsrs	r3, r3, #4
90025568:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
9002556c:	0e0b      	lsrs	r3, r1, #24
9002556e:	d006      	beq.n	9002557e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
90025570:	8822      	ldrh	r2, [r4, #0]
90025572:	4640      	mov	r0, r8
90025574:	9300      	str	r3, [sp, #0]
90025576:	464b      	mov	r3, r9
90025578:	f7ff ff0c 	bl	90025394 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
9002557c:	8020      	strh	r0, [r4, #0]
9002557e:	3402      	adds	r4, #2
90025580:	9b06      	ldr	r3, [sp, #24]
90025582:	9a02      	ldr	r2, [sp, #8]
90025584:	881b      	ldrh	r3, [r3, #0]
90025586:	eba3 030b 	sub.w	r3, r3, fp
9002558a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9002558e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
90025592:	4413      	add	r3, r2
90025594:	9a07      	ldr	r2, [sp, #28]
90025596:	fb93 f3f2 	sdiv	r3, r3, r2
9002559a:	441d      	add	r5, r3
9002559c:	e7a3      	b.n	900254e6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
9002559e:	9b05      	ldr	r3, [sp, #20]
900255a0:	6818      	ldr	r0, [r3, #0]
900255a2:	6803      	ldr	r3, [r0, #0]
900255a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900255a6:	4798      	blx	r3
900255a8:	b00d      	add	sp, #52	; 0x34
900255aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900255ae:	bf00      	nop
900255b0:	240235ac 	.word	0x240235ac
900255b4:	240235a6 	.word	0x240235a6

900255b8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
900255b8:	b570      	push	{r4, r5, r6, lr}
900255ba:	1214      	asrs	r4, r2, #8
900255bc:	788d      	ldrb	r5, [r1, #2]
900255be:	f89d 6010 	ldrb.w	r6, [sp, #16]
900255c2:	10d0      	asrs	r0, r2, #3
900255c4:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
900255c8:	00d2      	lsls	r2, r2, #3
900255ca:	fb15 f503 	smulbb	r5, r5, r3
900255ce:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
900255d2:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
900255d6:	b2d2      	uxtb	r2, r2
900255d8:	fb04 5506 	mla	r5, r4, r6, r5
900255dc:	784c      	ldrb	r4, [r1, #1]
900255de:	7809      	ldrb	r1, [r1, #0]
900255e0:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
900255e4:	fb14 f403 	smulbb	r4, r4, r3
900255e8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
900255ec:	fb11 f303 	smulbb	r3, r1, r3
900255f0:	b2ad      	uxth	r5, r5
900255f2:	fb00 4406 	mla	r4, r0, r6, r4
900255f6:	fb02 3306 	mla	r3, r2, r6, r3
900255fa:	1c68      	adds	r0, r5, #1
900255fc:	b2a4      	uxth	r4, r4
900255fe:	b29b      	uxth	r3, r3
90025600:	eb00 2515 	add.w	r5, r0, r5, lsr #8
90025604:	1c62      	adds	r2, r4, #1
90025606:	1c58      	adds	r0, r3, #1
90025608:	eb02 2414 	add.w	r4, r2, r4, lsr #8
9002560c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90025610:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90025614:	0964      	lsrs	r4, r4, #5
90025616:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002561a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9002561e:	4328      	orrs	r0, r5
90025620:	4320      	orrs	r0, r4
90025622:	bd70      	pop	{r4, r5, r6, pc}

90025624 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
90025624:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025628:	b08f      	sub	sp, #60	; 0x3c
9002562a:	461c      	mov	r4, r3
9002562c:	4682      	mov	sl, r0
9002562e:	460e      	mov	r6, r1
90025630:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
90025634:	4615      	mov	r5, r2
90025636:	9b18      	ldr	r3, [sp, #96]	; 0x60
90025638:	2f00      	cmp	r7, #0
9002563a:	f000 8141 	beq.w	900258c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
9002563e:	6820      	ldr	r0, [r4, #0]
90025640:	aa0a      	add	r2, sp, #40	; 0x28
90025642:	6861      	ldr	r1, [r4, #4]
90025644:	f04f 0802 	mov.w	r8, #2
90025648:	3504      	adds	r5, #4
9002564a:	c203      	stmia	r2!, {r0, r1}
9002564c:	6818      	ldr	r0, [r3, #0]
9002564e:	aa0c      	add	r2, sp, #48	; 0x30
90025650:	6859      	ldr	r1, [r3, #4]
90025652:	c203      	stmia	r2!, {r0, r1}
90025654:	a80a      	add	r0, sp, #40	; 0x28
90025656:	f7ef fb01 	bl	90014c5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002565a:	4621      	mov	r1, r4
9002565c:	a80c      	add	r0, sp, #48	; 0x30
9002565e:	f7ef fb41 	bl	90014ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90025662:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
90025666:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
9002566a:	f002 0301 	and.w	r3, r2, #1
9002566e:	9306      	str	r3, [sp, #24]
90025670:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90025674:	f003 0101 	and.w	r1, r3, #1
90025678:	9105      	str	r1, [sp, #20]
9002567a:	9805      	ldr	r0, [sp, #20]
9002567c:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
90025680:	4403      	add	r3, r0
90025682:	fb01 2303 	mla	r3, r1, r3, r2
90025686:	fb93 f3f8 	sdiv	r3, r3, r8
9002568a:	441e      	add	r6, r3
9002568c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
90025690:	441a      	add	r2, r3
90025692:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
90025696:	4419      	add	r1, r3
90025698:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9002569c:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
900256a0:	9303      	str	r3, [sp, #12]
900256a2:	4b89      	ldr	r3, [pc, #548]	; (900258c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
900256a4:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
900256a8:	6818      	ldr	r0, [r3, #0]
900256aa:	6803      	ldr	r3, [r0, #0]
900256ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900256ae:	4798      	blx	r3
900256b0:	4a86      	ldr	r2, [pc, #536]	; (900258cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
900256b2:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
900256b6:	2fff      	cmp	r7, #255	; 0xff
900256b8:	8813      	ldrh	r3, [r2, #0]
900256ba:	4694      	mov	ip, r2
900256bc:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
900256c0:	fb03 9404 	mla	r4, r3, r4, r9
900256c4:	fb03 f30b 	mul.w	r3, r3, fp
900256c8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
900256cc:	d071      	beq.n	900257b2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
900256ce:	43f9      	mvns	r1, r7
900256d0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900256d4:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
900256d8:	b2c9      	uxtb	r1, r1
900256da:	e9cd 3207 	strd	r3, r2, [sp, #28]
900256de:	9104      	str	r1, [sp, #16]
900256e0:	9b07      	ldr	r3, [sp, #28]
900256e2:	42a3      	cmp	r3, r4
900256e4:	f240 80e7 	bls.w	900258b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
900256e8:	9b06      	ldr	r3, [sp, #24]
900256ea:	2b00      	cmp	r3, #0
900256ec:	d03d      	beq.n	9002576a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
900256ee:	7831      	ldrb	r1, [r6, #0]
900256f0:	4650      	mov	r0, sl
900256f2:	9b04      	ldr	r3, [sp, #16]
900256f4:	f106 0801 	add.w	r8, r6, #1
900256f8:	f001 010f 	and.w	r1, r1, #15
900256fc:	8822      	ldrh	r2, [r4, #0]
900256fe:	9300      	str	r3, [sp, #0]
90025700:	463b      	mov	r3, r7
90025702:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90025706:	4429      	add	r1, r5
90025708:	f7ff ff56 	bl	900255b8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
9002570c:	9b03      	ldr	r3, [sp, #12]
9002570e:	f824 0b02 	strh.w	r0, [r4], #2
90025712:	f103 3bff 	add.w	fp, r3, #4294967295
90025716:	f1bb 0f01 	cmp.w	fp, #1
9002571a:	46a1      	mov	r9, r4
9002571c:	f104 0404 	add.w	r4, r4, #4
90025720:	dd27      	ble.n	90025772 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
90025722:	f898 1000 	ldrb.w	r1, [r8]
90025726:	4650      	mov	r0, sl
90025728:	9b04      	ldr	r3, [sp, #16]
9002572a:	f1ab 0b02 	sub.w	fp, fp, #2
9002572e:	0909      	lsrs	r1, r1, #4
90025730:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90025734:	9300      	str	r3, [sp, #0]
90025736:	463b      	mov	r3, r7
90025738:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002573c:	4429      	add	r1, r5
9002573e:	f7ff ff3b 	bl	900255b8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90025742:	f824 0c04 	strh.w	r0, [r4, #-4]
90025746:	f818 1b01 	ldrb.w	r1, [r8], #1
9002574a:	4650      	mov	r0, sl
9002574c:	9b04      	ldr	r3, [sp, #16]
9002574e:	f001 010f 	and.w	r1, r1, #15
90025752:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90025756:	9300      	str	r3, [sp, #0]
90025758:	463b      	mov	r3, r7
9002575a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002575e:	4429      	add	r1, r5
90025760:	f7ff ff2a 	bl	900255b8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90025764:	f824 0c02 	strh.w	r0, [r4, #-2]
90025768:	e7d5      	b.n	90025716 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
9002576a:	46b0      	mov	r8, r6
9002576c:	f8dd b00c 	ldr.w	fp, [sp, #12]
90025770:	e7d1      	b.n	90025716 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
90025772:	d10f      	bne.n	90025794 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
90025774:	f898 1000 	ldrb.w	r1, [r8]
90025778:	4650      	mov	r0, sl
9002577a:	9b04      	ldr	r3, [sp, #16]
9002577c:	0909      	lsrs	r1, r1, #4
9002577e:	f8b9 2000 	ldrh.w	r2, [r9]
90025782:	9300      	str	r3, [sp, #0]
90025784:	463b      	mov	r3, r7
90025786:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002578a:	4429      	add	r1, r5
9002578c:	f7ff ff14 	bl	900255b8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90025790:	f829 0b02 	strh.w	r0, [r9], #2
90025794:	9b08      	ldr	r3, [sp, #32]
90025796:	9a05      	ldr	r2, [sp, #20]
90025798:	881c      	ldrh	r4, [r3, #0]
9002579a:	9b03      	ldr	r3, [sp, #12]
9002579c:	1ae4      	subs	r4, r4, r3
9002579e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
900257a2:	4413      	add	r3, r2
900257a4:	9a09      	ldr	r2, [sp, #36]	; 0x24
900257a6:	eb09 0444 	add.w	r4, r9, r4, lsl #1
900257aa:	fb93 f3f2 	sdiv	r3, r3, r2
900257ae:	441e      	add	r6, r3
900257b0:	e796      	b.n	900256e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
900257b2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900257b6:	4f46      	ldr	r7, [pc, #280]	; (900258d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
900257b8:	42a3      	cmp	r3, r4
900257ba:	d97c      	bls.n	900258b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
900257bc:	9a06      	ldr	r2, [sp, #24]
900257be:	2a00      	cmp	r2, #0
900257c0:	d054      	beq.n	9002586c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
900257c2:	7830      	ldrb	r0, [r6, #0]
900257c4:	1c71      	adds	r1, r6, #1
900257c6:	f000 000f 	and.w	r0, r0, #15
900257ca:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900257ce:	eb05 0e00 	add.w	lr, r5, r0
900257d2:	5c28      	ldrb	r0, [r5, r0]
900257d4:	f89e 2002 	ldrb.w	r2, [lr, #2]
900257d8:	f89e e001 	ldrb.w	lr, [lr, #1]
900257dc:	ea07 2202 	and.w	r2, r7, r2, lsl #8
900257e0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
900257e4:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
900257e8:	ea42 020e 	orr.w	r2, r2, lr
900257ec:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
900257f0:	f824 2b02 	strh.w	r2, [r4], #2
900257f4:	9a03      	ldr	r2, [sp, #12]
900257f6:	f102 3eff 	add.w	lr, r2, #4294967295
900257fa:	f1be 0f01 	cmp.w	lr, #1
900257fe:	4620      	mov	r0, r4
90025800:	f104 0404 	add.w	r4, r4, #4
90025804:	dd36      	ble.n	90025874 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
90025806:	7808      	ldrb	r0, [r1, #0]
90025808:	f1ae 0e02 	sub.w	lr, lr, #2
9002580c:	0900      	lsrs	r0, r0, #4
9002580e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90025812:	eb05 0a00 	add.w	sl, r5, r0
90025816:	f89a 2001 	ldrb.w	r2, [sl, #1]
9002581a:	f89a 9002 	ldrb.w	r9, [sl, #2]
9002581e:	00d2      	lsls	r2, r2, #3
90025820:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90025824:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90025828:	ea49 0202 	orr.w	r2, r9, r2
9002582c:	f815 9000 	ldrb.w	r9, [r5, r0]
90025830:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90025834:	f824 2c04 	strh.w	r2, [r4, #-4]
90025838:	f811 0b01 	ldrb.w	r0, [r1], #1
9002583c:	f000 000f 	and.w	r0, r0, #15
90025840:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90025844:	eb05 0a00 	add.w	sl, r5, r0
90025848:	f89a 2001 	ldrb.w	r2, [sl, #1]
9002584c:	f89a 9002 	ldrb.w	r9, [sl, #2]
90025850:	00d2      	lsls	r2, r2, #3
90025852:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90025856:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002585a:	ea49 0202 	orr.w	r2, r9, r2
9002585e:	f815 9000 	ldrb.w	r9, [r5, r0]
90025862:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90025866:	f824 2c02 	strh.w	r2, [r4, #-2]
9002586a:	e7c6      	b.n	900257fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
9002586c:	4631      	mov	r1, r6
9002586e:	f8dd e00c 	ldr.w	lr, [sp, #12]
90025872:	e7c2      	b.n	900257fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
90025874:	d111      	bne.n	9002589a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
90025876:	7809      	ldrb	r1, [r1, #0]
90025878:	0909      	lsrs	r1, r1, #4
9002587a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002587e:	186c      	adds	r4, r5, r1
90025880:	5c69      	ldrb	r1, [r5, r1]
90025882:	78a2      	ldrb	r2, [r4, #2]
90025884:	7864      	ldrb	r4, [r4, #1]
90025886:	ea07 2202 	and.w	r2, r7, r2, lsl #8
9002588a:	00e4      	lsls	r4, r4, #3
9002588c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
90025890:	4322      	orrs	r2, r4
90025892:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
90025896:	f820 2b02 	strh.w	r2, [r0], #2
9002589a:	9a03      	ldr	r2, [sp, #12]
9002589c:	f8bc 4000 	ldrh.w	r4, [ip]
900258a0:	9905      	ldr	r1, [sp, #20]
900258a2:	1aa4      	subs	r4, r4, r2
900258a4:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
900258a8:	440a      	add	r2, r1
900258aa:	eb00 0444 	add.w	r4, r0, r4, lsl #1
900258ae:	fb92 f2f8 	sdiv	r2, r2, r8
900258b2:	4416      	add	r6, r2
900258b4:	e780      	b.n	900257b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
900258b6:	4b04      	ldr	r3, [pc, #16]	; (900258c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
900258b8:	6818      	ldr	r0, [r3, #0]
900258ba:	6803      	ldr	r3, [r0, #0]
900258bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900258be:	4798      	blx	r3
900258c0:	b00f      	add	sp, #60	; 0x3c
900258c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900258c6:	bf00      	nop
900258c8:	240235ac 	.word	0x240235ac
900258cc:	240235a6 	.word	0x240235a6
900258d0:	fffff800 	.word	0xfffff800

900258d4 <CRC_Lock>:
900258d4:	4a20      	ldr	r2, [pc, #128]	; (90025958 <CRC_Lock+0x84>)
900258d6:	b530      	push	{r4, r5, lr}
900258d8:	6813      	ldr	r3, [r2, #0]
900258da:	f64f 74f0 	movw	r4, #65520	; 0xfff0
900258de:	f24c 2540 	movw	r5, #49728	; 0xc240
900258e2:	f023 0301 	bic.w	r3, r3, #1
900258e6:	6013      	str	r3, [r2, #0]
900258e8:	4b1c      	ldr	r3, [pc, #112]	; (9002595c <CRC_Lock+0x88>)
900258ea:	681a      	ldr	r2, [r3, #0]
900258ec:	4022      	ands	r2, r4
900258ee:	42aa      	cmp	r2, r5
900258f0:	d005      	beq.n	900258fe <CRC_Lock+0x2a>
900258f2:	681b      	ldr	r3, [r3, #0]
900258f4:	f24c 2270 	movw	r2, #49776	; 0xc270
900258f8:	4023      	ands	r3, r4
900258fa:	4293      	cmp	r3, r2
900258fc:	d124      	bne.n	90025948 <CRC_Lock+0x74>
900258fe:	4b18      	ldr	r3, [pc, #96]	; (90025960 <CRC_Lock+0x8c>)
90025900:	681b      	ldr	r3, [r3, #0]
90025902:	bb0b      	cbnz	r3, 90025948 <CRC_Lock+0x74>
90025904:	4b17      	ldr	r3, [pc, #92]	; (90025964 <CRC_Lock+0x90>)
90025906:	681a      	ldr	r2, [r3, #0]
90025908:	f3c2 020b 	ubfx	r2, r2, #0, #12
9002590c:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
90025910:	d00d      	beq.n	9002592e <CRC_Lock+0x5a>
90025912:	681a      	ldr	r2, [r3, #0]
90025914:	f240 4483 	movw	r4, #1155	; 0x483
90025918:	f3c2 020b 	ubfx	r2, r2, #0, #12
9002591c:	42a2      	cmp	r2, r4
9002591e:	d006      	beq.n	9002592e <CRC_Lock+0x5a>
90025920:	681b      	ldr	r3, [r3, #0]
90025922:	f240 4285 	movw	r2, #1157	; 0x485
90025926:	f3c3 030b 	ubfx	r3, r3, #0, #12
9002592a:	4293      	cmp	r3, r2
9002592c:	d10c      	bne.n	90025948 <CRC_Lock+0x74>
9002592e:	4b0e      	ldr	r3, [pc, #56]	; (90025968 <CRC_Lock+0x94>)
90025930:	2201      	movs	r2, #1
90025932:	601a      	str	r2, [r3, #0]
90025934:	681a      	ldr	r2, [r3, #0]
90025936:	2a00      	cmp	r2, #0
90025938:	d1fc      	bne.n	90025934 <CRC_Lock+0x60>
9002593a:	4b0c      	ldr	r3, [pc, #48]	; (9002596c <CRC_Lock+0x98>)
9002593c:	6018      	str	r0, [r3, #0]
9002593e:	6818      	ldr	r0, [r3, #0]
90025940:	1a43      	subs	r3, r0, r1
90025942:	4258      	negs	r0, r3
90025944:	4158      	adcs	r0, r3
90025946:	bd30      	pop	{r4, r5, pc}
90025948:	4b09      	ldr	r3, [pc, #36]	; (90025970 <CRC_Lock+0x9c>)
9002594a:	2201      	movs	r2, #1
9002594c:	601a      	str	r2, [r3, #0]
9002594e:	681a      	ldr	r2, [r3, #0]
90025950:	2a00      	cmp	r2, #0
90025952:	d1fc      	bne.n	9002594e <CRC_Lock+0x7a>
90025954:	4b07      	ldr	r3, [pc, #28]	; (90025974 <CRC_Lock+0xa0>)
90025956:	e7f1      	b.n	9002593c <CRC_Lock+0x68>
90025958:	e0002000 	.word	0xe0002000
9002595c:	e000ed00 	.word	0xe000ed00
90025960:	e0042000 	.word	0xe0042000
90025964:	5c001000 	.word	0x5c001000
90025968:	58024c08 	.word	0x58024c08
9002596c:	58024c00 	.word	0x58024c00
90025970:	40023008 	.word	0x40023008
90025974:	40023000 	.word	0x40023000

90025978 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
90025978:	6101      	str	r1, [r0, #16]
9002597a:	4770      	bx	lr

9002597c <_ZN8touchgfx8Gestures4tickEv>:
9002597c:	7b83      	ldrb	r3, [r0, #14]
9002597e:	b14b      	cbz	r3, 90025994 <_ZN8touchgfx8Gestures4tickEv+0x18>
90025980:	8903      	ldrh	r3, [r0, #8]
90025982:	3301      	adds	r3, #1
90025984:	b29b      	uxth	r3, r3
90025986:	2b07      	cmp	r3, #7
90025988:	8103      	strh	r3, [r0, #8]
9002598a:	bf81      	itttt	hi
9002598c:	2300      	movhi	r3, #0
9002598e:	8143      	strhhi	r3, [r0, #10]
90025990:	8183      	strhhi	r3, [r0, #12]
90025992:	7383      	strbhi	r3, [r0, #14]
90025994:	4770      	bx	lr
	...

90025998 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
90025998:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
9002599c:	4698      	mov	r8, r3
9002599e:	8883      	ldrh	r3, [r0, #4]
900259a0:	4604      	mov	r4, r0
900259a2:	4617      	mov	r7, r2
900259a4:	f8ad 3006 	strh.w	r3, [sp, #6]
900259a8:	eba8 0303 	sub.w	r3, r8, r3
900259ac:	4a19      	ldr	r2, [pc, #100]	; (90025a14 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
900259ae:	460e      	mov	r6, r1
900259b0:	b21b      	sxth	r3, r3
900259b2:	88c1      	ldrh	r1, [r0, #6]
900259b4:	9200      	str	r2, [sp, #0]
900259b6:	2000      	movs	r0, #0
900259b8:	2b00      	cmp	r3, #0
900259ba:	8aa2      	ldrh	r2, [r4, #20]
900259bc:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
900259c0:	bfb8      	it	lt
900259c2:	425b      	neglt	r3, r3
900259c4:	f88d 0004 	strb.w	r0, [sp, #4]
900259c8:	f8ad 1008 	strh.w	r1, [sp, #8]
900259cc:	b21b      	sxth	r3, r3
900259ce:	f8ad 800a 	strh.w	r8, [sp, #10]
900259d2:	f8ad 500c 	strh.w	r5, [sp, #12]
900259d6:	4293      	cmp	r3, r2
900259d8:	dc07      	bgt.n	900259ea <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
900259da:	1a69      	subs	r1, r5, r1
900259dc:	b209      	sxth	r1, r1
900259de:	2900      	cmp	r1, #0
900259e0:	bfb8      	it	lt
900259e2:	4249      	neglt	r1, r1
900259e4:	b209      	sxth	r1, r1
900259e6:	428a      	cmp	r2, r1
900259e8:	da10      	bge.n	90025a0c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
900259ea:	6920      	ldr	r0, [r4, #16]
900259ec:	4669      	mov	r1, sp
900259ee:	eba8 0606 	sub.w	r6, r8, r6
900259f2:	1bef      	subs	r7, r5, r7
900259f4:	6803      	ldr	r3, [r0, #0]
900259f6:	685b      	ldr	r3, [r3, #4]
900259f8:	4798      	blx	r3
900259fa:	2300      	movs	r3, #0
900259fc:	2001      	movs	r0, #1
900259fe:	8166      	strh	r6, [r4, #10]
90025a00:	8123      	strh	r3, [r4, #8]
90025a02:	81a7      	strh	r7, [r4, #12]
90025a04:	f8a4 8004 	strh.w	r8, [r4, #4]
90025a08:	80e5      	strh	r5, [r4, #6]
90025a0a:	73a0      	strb	r0, [r4, #14]
90025a0c:	b004      	add	sp, #16
90025a0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90025a12:	bf00      	nop
90025a14:	9002a910 	.word	0x9002a910

90025a18 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
90025a18:	b5f0      	push	{r4, r5, r6, r7, lr}
90025a1a:	461e      	mov	r6, r3
90025a1c:	1e4b      	subs	r3, r1, #1
90025a1e:	b085      	sub	sp, #20
90025a20:	4604      	mov	r4, r0
90025a22:	2b01      	cmp	r3, #1
90025a24:	460d      	mov	r5, r1
90025a26:	4617      	mov	r7, r2
90025a28:	d84b      	bhi.n	90025ac2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
90025a2a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90025a2e:	1cd3      	adds	r3, r2, #3
90025a30:	b29b      	uxth	r3, r3
90025a32:	2b06      	cmp	r3, #6
90025a34:	d916      	bls.n	90025a64 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
90025a36:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 90025ad8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
90025a3a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90025a3e:	f8cd c004 	str.w	ip, [sp, #4]
90025a42:	f04f 0c00 	mov.w	ip, #0
90025a46:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90025a4a:	6900      	ldr	r0, [r0, #16]
90025a4c:	f8ad 100c 	strh.w	r1, [sp, #12]
90025a50:	a901      	add	r1, sp, #4
90025a52:	f88d c008 	strb.w	ip, [sp, #8]
90025a56:	f8ad 200a 	strh.w	r2, [sp, #10]
90025a5a:	f8ad 300e 	strh.w	r3, [sp, #14]
90025a5e:	6803      	ldr	r3, [r0, #0]
90025a60:	689b      	ldr	r3, [r3, #8]
90025a62:	4798      	blx	r3
90025a64:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90025a68:	1cd3      	adds	r3, r2, #3
90025a6a:	b29b      	uxth	r3, r3
90025a6c:	2b06      	cmp	r3, #6
90025a6e:	d916      	bls.n	90025a9e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90025a70:	f8df c064 	ldr.w	ip, [pc, #100]	; 90025ad8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
90025a74:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90025a78:	f8cd c004 	str.w	ip, [sp, #4]
90025a7c:	f04f 0c01 	mov.w	ip, #1
90025a80:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90025a84:	6920      	ldr	r0, [r4, #16]
90025a86:	f8ad 100c 	strh.w	r1, [sp, #12]
90025a8a:	a901      	add	r1, sp, #4
90025a8c:	f88d c008 	strb.w	ip, [sp, #8]
90025a90:	f8ad 200a 	strh.w	r2, [sp, #10]
90025a94:	f8ad 300e 	strh.w	r3, [sp, #14]
90025a98:	6803      	ldr	r3, [r0, #0]
90025a9a:	689b      	ldr	r3, [r3, #8]
90025a9c:	4798      	blx	r3
90025a9e:	4b0d      	ldr	r3, [pc, #52]	; (90025ad4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
90025aa0:	a901      	add	r1, sp, #4
90025aa2:	6920      	ldr	r0, [r4, #16]
90025aa4:	9301      	str	r3, [sp, #4]
90025aa6:	2300      	movs	r3, #0
90025aa8:	f88d 5008 	strb.w	r5, [sp, #8]
90025aac:	f8ad 700a 	strh.w	r7, [sp, #10]
90025ab0:	f8ad 600c 	strh.w	r6, [sp, #12]
90025ab4:	f8ad 300e 	strh.w	r3, [sp, #14]
90025ab8:	6803      	ldr	r3, [r0, #0]
90025aba:	681b      	ldr	r3, [r3, #0]
90025abc:	4798      	blx	r3
90025abe:	b005      	add	sp, #20
90025ac0:	bdf0      	pop	{r4, r5, r6, r7, pc}
90025ac2:	2900      	cmp	r1, #0
90025ac4:	d1eb      	bne.n	90025a9e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90025ac6:	80a2      	strh	r2, [r4, #4]
90025ac8:	80c6      	strh	r6, [r0, #6]
90025aca:	60a1      	str	r1, [r4, #8]
90025acc:	81a1      	strh	r1, [r4, #12]
90025ace:	73a1      	strb	r1, [r4, #14]
90025ad0:	e7e5      	b.n	90025a9e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90025ad2:	bf00      	nop
90025ad4:	9002a8fc 	.word	0x9002a8fc
90025ad8:	9002a924 	.word	0x9002a924

90025adc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
90025adc:	10c9      	asrs	r1, r1, #3
90025ade:	2900      	cmp	r1, #0
90025ae0:	bfb8      	it	lt
90025ae2:	4249      	neglt	r1, r1
90025ae4:	2801      	cmp	r0, #1
90025ae6:	d108      	bne.n	90025afa <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
90025ae8:	f3c1 0008 	ubfx	r0, r1, #0, #9
90025aec:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
90025af0:	4601      	mov	r1, r0
90025af2:	dd02      	ble.n	90025afa <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
90025af4:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
90025af8:	4770      	bx	lr
90025afa:	29ff      	cmp	r1, #255	; 0xff
90025afc:	bfa8      	it	ge
90025afe:	21ff      	movge	r1, #255	; 0xff
90025b00:	4608      	mov	r0, r1
90025b02:	4770      	bx	lr

90025b04 <_ZN8touchgfx10Rasterizer6lineToEii>:
90025b04:	b410      	push	{r4}
90025b06:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90025b0a:	429c      	cmp	r4, r3
90025b0c:	d803      	bhi.n	90025b16 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
90025b0e:	f85d 4b04 	ldr.w	r4, [sp], #4
90025b12:	f7ed bb99 	b.w	90013248 <_ZN8touchgfx7Outline6lineToEii>
90025b16:	f85d 4b04 	ldr.w	r4, [sp], #4
90025b1a:	4770      	bx	lr

90025b1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
90025b1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025b20:	b08b      	sub	sp, #44	; 0x2c
90025b22:	4606      	mov	r6, r0
90025b24:	468a      	mov	sl, r1
90025b26:	e9cd 2306 	strd	r2, r3, [sp, #24]
90025b2a:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
90025b2e:	9308      	str	r3, [sp, #32]
90025b30:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
90025b34:	9309      	str	r3, [sp, #36]	; 0x24
90025b36:	f7ed fcf2 	bl	9001351e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
90025b3a:	68b5      	ldr	r5, [r6, #8]
90025b3c:	4604      	mov	r4, r0
90025b3e:	2d00      	cmp	r5, #0
90025b40:	d044      	beq.n	90025bcc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90025b42:	6873      	ldr	r3, [r6, #4]
90025b44:	42ab      	cmp	r3, r5
90025b46:	d33d      	bcc.n	90025bc4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
90025b48:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90025b4c:	f04f 0800 	mov.w	r8, #0
90025b50:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
90025b54:	eb02 0b03 	add.w	fp, r2, r3
90025b58:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
90025b5c:	fb02 1203 	mla	r2, r2, r3, r1
90025b60:	9205      	str	r2, [sp, #20]
90025b62:	1e6a      	subs	r2, r5, #1
90025b64:	9204      	str	r2, [sp, #16]
90025b66:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
90025b6a:	f9b4 7000 	ldrsh.w	r7, [r4]
90025b6e:	454b      	cmp	r3, r9
90025b70:	463a      	mov	r2, r7
90025b72:	d008      	beq.n	90025b86 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
90025b74:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
90025b78:	eb03 0b09 	add.w	fp, r3, r9
90025b7c:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
90025b80:	fb03 1309 	mla	r3, r3, r9, r1
90025b84:	9305      	str	r3, [sp, #20]
90025b86:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90025b8a:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
90025b8e:	4498      	add	r8, r3
90025b90:	9b04      	ldr	r3, [sp, #16]
90025b92:	3b01      	subs	r3, #1
90025b94:	9304      	str	r3, [sp, #16]
90025b96:	9b04      	ldr	r3, [sp, #16]
90025b98:	3301      	adds	r3, #1
90025b9a:	d015      	beq.n	90025bc8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
90025b9c:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
90025ba0:	42bb      	cmp	r3, r7
90025ba2:	d117      	bne.n	90025bd4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
90025ba4:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
90025ba8:	9b04      	ldr	r3, [sp, #16]
90025baa:	4548      	cmp	r0, r9
90025bac:	f103 33ff 	add.w	r3, r3, #4294967295
90025bb0:	d17d      	bne.n	90025cae <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
90025bb2:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
90025bb6:	4401      	add	r1, r0
90025bb8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90025bbc:	4480      	add	r8, r0
90025bbe:	e7e9      	b.n	90025b94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
90025bc0:	461f      	mov	r7, r3
90025bc2:	e042      	b.n	90025c4a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
90025bc4:	2000      	movs	r0, #0
90025bc6:	e002      	b.n	90025bce <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
90025bc8:	2900      	cmp	r1, #0
90025bca:	d16d      	bne.n	90025ca8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
90025bcc:	2001      	movs	r0, #1
90025bce:	b00b      	add	sp, #44	; 0x2c
90025bd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90025bd4:	b379      	cbz	r1, 90025c36 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
90025bd6:	2f00      	cmp	r7, #0
90025bd8:	db29      	blt.n	90025c2e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90025bda:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
90025bde:	42bb      	cmp	r3, r7
90025be0:	dd25      	ble.n	90025c2e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90025be2:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
90025be6:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
90025bea:	f7ff ff77 	bl	90025adc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
90025bee:	9b09      	ldr	r3, [sp, #36]	; 0x24
90025bf0:	fb10 f003 	smulbb	r0, r0, r3
90025bf4:	b280      	uxth	r0, r0
90025bf6:	1c41      	adds	r1, r0, #1
90025bf8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90025bfc:	1209      	asrs	r1, r1, #8
90025bfe:	f011 0fff 	tst.w	r1, #255	; 0xff
90025c02:	d014      	beq.n	90025c2e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90025c04:	b2c9      	uxtb	r1, r1
90025c06:	9808      	ldr	r0, [sp, #32]
90025c08:	b2ba      	uxth	r2, r7
90025c0a:	8e73      	ldrh	r3, [r6, #50]	; 0x32
90025c0c:	9102      	str	r1, [sp, #8]
90025c0e:	2101      	movs	r1, #1
90025c10:	4413      	add	r3, r2
90025c12:	4402      	add	r2, r0
90025c14:	9101      	str	r1, [sp, #4]
90025c16:	fa0f f18b 	sxth.w	r1, fp
90025c1a:	f8da 0000 	ldr.w	r0, [sl]
90025c1e:	b21b      	sxth	r3, r3
90025c20:	9100      	str	r1, [sp, #0]
90025c22:	b212      	sxth	r2, r2
90025c24:	6941      	ldr	r1, [r0, #20]
90025c26:	4650      	mov	r0, sl
90025c28:	460d      	mov	r5, r1
90025c2a:	9905      	ldr	r1, [sp, #20]
90025c2c:	47a8      	blx	r5
90025c2e:	9b04      	ldr	r3, [sp, #16]
90025c30:	1c7a      	adds	r2, r7, #1
90025c32:	3301      	adds	r3, #1
90025c34:	d0ca      	beq.n	90025bcc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90025c36:	f9b4 7000 	ldrsh.w	r7, [r4]
90025c3a:	1abb      	subs	r3, r7, r2
90025c3c:	2b00      	cmp	r3, #0
90025c3e:	dd31      	ble.n	90025ca4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90025c40:	2a00      	cmp	r2, #0
90025c42:	dabd      	bge.n	90025bc0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
90025c44:	2f00      	cmp	r7, #0
90025c46:	dd2d      	ble.n	90025ca4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90025c48:	2200      	movs	r2, #0
90025c4a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
90025c4e:	19d1      	adds	r1, r2, r7
90025c50:	4299      	cmp	r1, r3
90025c52:	db02      	blt.n	90025c5a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
90025c54:	1a9f      	subs	r7, r3, r2
90025c56:	2f00      	cmp	r7, #0
90025c58:	dd24      	ble.n	90025ca4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90025c5a:	ea4f 1188 	mov.w	r1, r8, lsl #6
90025c5e:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
90025c62:	f7ff ff3b 	bl	90025adc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
90025c66:	9b09      	ldr	r3, [sp, #36]	; 0x24
90025c68:	fb10 f003 	smulbb	r0, r0, r3
90025c6c:	b280      	uxth	r0, r0
90025c6e:	1c41      	adds	r1, r0, #1
90025c70:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90025c74:	1209      	asrs	r1, r1, #8
90025c76:	f011 0fff 	tst.w	r1, #255	; 0xff
90025c7a:	d013      	beq.n	90025ca4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90025c7c:	b292      	uxth	r2, r2
90025c7e:	9808      	ldr	r0, [sp, #32]
90025c80:	b2c9      	uxtb	r1, r1
90025c82:	8e73      	ldrh	r3, [r6, #50]	; 0x32
90025c84:	b23f      	sxth	r7, r7
90025c86:	4413      	add	r3, r2
90025c88:	9102      	str	r1, [sp, #8]
90025c8a:	4402      	add	r2, r0
90025c8c:	fa0f f18b 	sxth.w	r1, fp
90025c90:	f8da 0000 	ldr.w	r0, [sl]
90025c94:	b21b      	sxth	r3, r3
90025c96:	9100      	str	r1, [sp, #0]
90025c98:	b212      	sxth	r2, r2
90025c9a:	9701      	str	r7, [sp, #4]
90025c9c:	9905      	ldr	r1, [sp, #20]
90025c9e:	6947      	ldr	r7, [r0, #20]
90025ca0:	4650      	mov	r0, sl
90025ca2:	47b8      	blx	r7
90025ca4:	464b      	mov	r3, r9
90025ca6:	e75e      	b.n	90025b66 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
90025ca8:	2f00      	cmp	r7, #0
90025caa:	da96      	bge.n	90025bda <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
90025cac:	e78e      	b.n	90025bcc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90025cae:	2900      	cmp	r1, #0
90025cb0:	d0f8      	beq.n	90025ca4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90025cb2:	e790      	b.n	90025bd6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

90025cb4 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
90025cb4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90025cb8:	461e      	mov	r6, r3
90025cba:	4b36      	ldr	r3, [pc, #216]	; (90025d94 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
90025cbc:	2500      	movs	r5, #0
90025cbe:	f100 0814 	add.w	r8, r0, #20
90025cc2:	4604      	mov	r4, r0
90025cc4:	4617      	mov	r7, r2
90025cc6:	e9c0 3100 	strd	r3, r1, [r0]
90025cca:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
90025cce:	8185      	strh	r5, [r0, #12]
90025cd0:	8103      	strh	r3, [r0, #8]
90025cd2:	f89d 3020 	ldrb.w	r3, [sp, #32]
90025cd6:	81c5      	strh	r5, [r0, #14]
90025cd8:	7283      	strb	r3, [r0, #10]
90025cda:	8205      	strh	r5, [r0, #16]
90025cdc:	8245      	strh	r5, [r0, #18]
90025cde:	4640      	mov	r0, r8
90025ce0:	f7ec fdf8 	bl	900128d4 <_ZN8touchgfx7OutlineC1Ev>
90025ce4:	f884 5044 	strb.w	r5, [r4, #68]	; 0x44
90025ce8:	f8a4 5046 	strh.w	r5, [r4, #70]	; 0x46
90025cec:	466b      	mov	r3, sp
90025cee:	f8a4 5048 	strh.w	r5, [r4, #72]	; 0x48
90025cf2:	f8a4 504a 	strh.w	r5, [r4, #74]	; 0x4a
90025cf6:	f884 505c 	strb.w	r5, [r4, #92]	; 0x5c
90025cfa:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
90025cfe:	f8a4 5068 	strh.w	r5, [r4, #104]	; 0x68
90025d02:	e9c4 5513 	strd	r5, r5, [r4, #76]	; 0x4c
90025d06:	e9c4 5515 	strd	r5, r5, [r4, #84]	; 0x54
90025d0a:	e9c4 5518 	strd	r5, r5, [r4, #96]	; 0x60
90025d0e:	e9c4 551b 	strd	r5, r5, [r4, #108]	; 0x6c
90025d12:	6830      	ldr	r0, [r6, #0]
90025d14:	6871      	ldr	r1, [r6, #4]
90025d16:	8872      	ldrh	r2, [r6, #2]
90025d18:	8835      	ldrh	r5, [r6, #0]
90025d1a:	c303      	stmia	r3!, {r0, r1}
90025d1c:	887b      	ldrh	r3, [r7, #2]
90025d1e:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
90025d22:	4413      	add	r3, r2
90025d24:	883a      	ldrh	r2, [r7, #0]
90025d26:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
90025d2a:	442a      	add	r2, r5
90025d2c:	81e3      	strh	r3, [r4, #14]
90025d2e:	8220      	strh	r0, [r4, #16]
90025d30:	4668      	mov	r0, sp
90025d32:	81a2      	strh	r2, [r4, #12]
90025d34:	8261      	strh	r1, [r4, #18]
90025d36:	4639      	mov	r1, r7
90025d38:	f7ee ffd4 	bl	90014ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90025d3c:	f104 000c 	add.w	r0, r4, #12
90025d40:	f7ee ff8c 	bl	90014c5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90025d44:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90025d48:	f8bd 2000 	ldrh.w	r2, [sp]
90025d4c:	4640      	mov	r0, r8
90025d4e:	f8a4 3048 	strh.w	r3, [r4, #72]	; 0x48
90025d52:	f8a4 2046 	strh.w	r2, [r4, #70]	; 0x46
90025d56:	f7ec fda1 	bl	9001289c <_ZN8touchgfx7Outline5resetEv>
90025d5a:	f9bd 3000 	ldrsh.w	r3, [sp]
90025d5e:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
90025d62:	4620      	mov	r0, r4
90025d64:	015b      	lsls	r3, r3, #5
90025d66:	64e3      	str	r3, [r4, #76]	; 0x4c
90025d68:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90025d6c:	015b      	lsls	r3, r3, #5
90025d6e:	6523      	str	r3, [r4, #80]	; 0x50
90025d70:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90025d74:	015b      	lsls	r3, r3, #5
90025d76:	6563      	str	r3, [r4, #84]	; 0x54
90025d78:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90025d7c:	015b      	lsls	r3, r3, #5
90025d7e:	65a3      	str	r3, [r4, #88]	; 0x58
90025d80:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
90025d84:	f8a4 304a 	strh.w	r3, [r4, #74]	; 0x4a
90025d88:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
90025d8c:	b002      	add	sp, #8
90025d8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90025d92:	bf00      	nop
90025d94:	9002ac48 	.word	0x9002ac48

90025d98 <_ZN8touchgfx6Canvas5closeEv>:
90025d98:	b538      	push	{r3, r4, r5, lr}
90025d9a:	f890 305c 	ldrb.w	r3, [r0, #92]	; 0x5c
90025d9e:	4604      	mov	r4, r0
90025da0:	b193      	cbz	r3, 90025dc8 <_ZN8touchgfx6Canvas5closeEv+0x30>
90025da2:	f890 3068 	ldrb.w	r3, [r0, #104]	; 0x68
90025da6:	f890 2069 	ldrb.w	r2, [r0, #105]	; 0x69
90025daa:	4213      	tst	r3, r2
90025dac:	d10c      	bne.n	90025dc8 <_ZN8touchgfx6Canvas5closeEv+0x30>
90025dae:	f100 0514 	add.w	r5, r0, #20
90025db2:	b123      	cbz	r3, 90025dbe <_ZN8touchgfx6Canvas5closeEv+0x26>
90025db4:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	; 0x60
90025db8:	4628      	mov	r0, r5
90025dba:	f7ff fea3 	bl	90025b04 <_ZN8touchgfx10Rasterizer6lineToEii>
90025dbe:	4628      	mov	r0, r5
90025dc0:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	; 0x6c
90025dc4:	f7ff fe9e 	bl	90025b04 <_ZN8touchgfx10Rasterizer6lineToEii>
90025dc8:	2300      	movs	r3, #0
90025dca:	f884 305c 	strb.w	r3, [r4, #92]	; 0x5c
90025dce:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
90025dd2:	4298      	cmp	r0, r3
90025dd4:	bf34      	ite	cc
90025dd6:	2000      	movcc	r0, #0
90025dd8:	2001      	movcs	r0, #1
90025dda:	bd38      	pop	{r3, r4, r5, pc}

90025ddc <_ZN8touchgfx6Canvas6renderEh>:
90025ddc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90025de0:	7a85      	ldrb	r5, [r0, #10]
90025de2:	4604      	mov	r4, r0
90025de4:	4369      	muls	r1, r5
90025de6:	1c4d      	adds	r5, r1, #1
90025de8:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90025dec:	122d      	asrs	r5, r5, #8
90025dee:	f000 8098 	beq.w	90025f22 <_ZN8touchgfx6Canvas6renderEh+0x146>
90025df2:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
90025df6:	2b00      	cmp	r3, #0
90025df8:	f000 8093 	beq.w	90025f22 <_ZN8touchgfx6Canvas6renderEh+0x146>
90025dfc:	f7ff ffcc 	bl	90025d98 <_ZN8touchgfx6Canvas5closeEv>
90025e00:	4607      	mov	r7, r0
90025e02:	2800      	cmp	r0, #0
90025e04:	d045      	beq.n	90025e92 <_ZN8touchgfx6Canvas6renderEh+0xb6>
90025e06:	6860      	ldr	r0, [r4, #4]
90025e08:	4e47      	ldr	r6, [pc, #284]	; (90025f28 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
90025e0a:	6803      	ldr	r3, [r0, #0]
90025e0c:	6837      	ldr	r7, [r6, #0]
90025e0e:	689b      	ldr	r3, [r3, #8]
90025e10:	4798      	blx	r3
90025e12:	4601      	mov	r1, r0
90025e14:	4638      	mov	r0, r7
90025e16:	f7eb f8d7 	bl	90010fc8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
90025e1a:	4607      	mov	r7, r0
90025e1c:	f7ea fc98 	bl	90010750 <_ZN8touchgfx3HAL3lcdEv>
90025e20:	6803      	ldr	r3, [r0, #0]
90025e22:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90025e24:	4798      	blx	r3
90025e26:	4680      	mov	r8, r0
90025e28:	f7ea fc92 	bl	90010750 <_ZN8touchgfx3HAL3lcdEv>
90025e2c:	6803      	ldr	r3, [r0, #0]
90025e2e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90025e30:	4798      	blx	r3
90025e32:	280b      	cmp	r0, #11
90025e34:	d85a      	bhi.n	90025eec <_ZN8touchgfx6Canvas6renderEh+0x110>
90025e36:	e8df f000 	tbb	[pc, r0]
90025e3a:	5b50      	.short	0x5b50
90025e3c:	3059066b 	.word	0x3059066b
90025e40:	64646440 	.word	0x64646440
90025e44:	6464      	.short	0x6464
90025e46:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90025e4a:	2208      	movs	r2, #8
90025e4c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90025e50:	fb91 f2f2 	sdiv	r2, r1, r2
90025e54:	fb08 2303 	mla	r3, r8, r3, r2
90025e58:	441f      	add	r7, r3
90025e5a:	424b      	negs	r3, r1
90025e5c:	f001 0107 	and.w	r1, r1, #7
90025e60:	f003 0307 	and.w	r3, r3, #7
90025e64:	bf58      	it	pl
90025e66:	4259      	negpl	r1, r3
90025e68:	b2c9      	uxtb	r1, r1
90025e6a:	b2ed      	uxtb	r5, r5
90025e6c:	463a      	mov	r2, r7
90025e6e:	fa0f f388 	sxth.w	r3, r8
90025e72:	f104 0014 	add.w	r0, r4, #20
90025e76:	e9cd 1500 	strd	r1, r5, [sp]
90025e7a:	6861      	ldr	r1, [r4, #4]
90025e7c:	f7ff fe4e 	bl	90025b1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
90025e80:	4607      	mov	r7, r0
90025e82:	6860      	ldr	r0, [r4, #4]
90025e84:	6803      	ldr	r3, [r0, #0]
90025e86:	691b      	ldr	r3, [r3, #16]
90025e88:	4798      	blx	r3
90025e8a:	6830      	ldr	r0, [r6, #0]
90025e8c:	6803      	ldr	r3, [r0, #0]
90025e8e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90025e90:	4798      	blx	r3
90025e92:	4638      	mov	r0, r7
90025e94:	b002      	add	sp, #8
90025e96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90025e9a:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90025e9e:	2204      	movs	r2, #4
90025ea0:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90025ea4:	fb91 f2f2 	sdiv	r2, r1, r2
90025ea8:	fb08 2303 	mla	r3, r8, r3, r2
90025eac:	441f      	add	r7, r3
90025eae:	424b      	negs	r3, r1
90025eb0:	f001 0103 	and.w	r1, r1, #3
90025eb4:	f003 0303 	and.w	r3, r3, #3
90025eb8:	e7d4      	b.n	90025e64 <_ZN8touchgfx6Canvas6renderEh+0x88>
90025eba:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90025ebe:	2202      	movs	r2, #2
90025ec0:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90025ec4:	2900      	cmp	r1, #0
90025ec6:	fb91 f2f2 	sdiv	r2, r1, r2
90025eca:	f001 0101 	and.w	r1, r1, #1
90025ece:	fb08 2303 	mla	r3, r8, r3, r2
90025ed2:	bfb8      	it	lt
90025ed4:	4249      	neglt	r1, r1
90025ed6:	441f      	add	r7, r3
90025ed8:	e7c6      	b.n	90025e68 <_ZN8touchgfx6Canvas6renderEh+0x8c>
90025eda:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90025ede:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90025ee2:	fb08 f303 	mul.w	r3, r8, r3
90025ee6:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90025eea:	441f      	add	r7, r3
90025eec:	2100      	movs	r1, #0
90025eee:	e7bc      	b.n	90025e6a <_ZN8touchgfx6Canvas6renderEh+0x8e>
90025ef0:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90025ef4:	2103      	movs	r1, #3
90025ef6:	fb08 f203 	mul.w	r2, r8, r3
90025efa:	89a3      	ldrh	r3, [r4, #12]
90025efc:	fb13 2301 	smlabb	r3, r3, r1, r2
90025f00:	e7f3      	b.n	90025eea <_ZN8touchgfx6Canvas6renderEh+0x10e>
90025f02:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90025f06:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90025f0a:	fb08 2303 	mla	r3, r8, r3, r2
90025f0e:	e7ec      	b.n	90025eea <_ZN8touchgfx6Canvas6renderEh+0x10e>
90025f10:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90025f14:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90025f18:	fb08 f303 	mul.w	r3, r8, r3
90025f1c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90025f20:	e7e3      	b.n	90025eea <_ZN8touchgfx6Canvas6renderEh+0x10e>
90025f22:	2701      	movs	r7, #1
90025f24:	e7b5      	b.n	90025e92 <_ZN8touchgfx6Canvas6renderEh+0xb6>
90025f26:	bf00      	nop
90025f28:	240235ac 	.word	0x240235ac

90025f2c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
90025f2c:	4b06      	ldr	r3, [pc, #24]	; (90025f48 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
90025f2e:	b510      	push	{r4, lr}
90025f30:	781b      	ldrb	r3, [r3, #0]
90025f32:	2b01      	cmp	r3, #1
90025f34:	d107      	bne.n	90025f46 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
90025f36:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
90025f3a:	680b      	ldr	r3, [r1, #0]
90025f3c:	6814      	ldr	r4, [r2, #0]
90025f3e:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
90025f42:	6013      	str	r3, [r2, #0]
90025f44:	600c      	str	r4, [r1, #0]
90025f46:	bd10      	pop	{r4, pc}
90025f48:	240235a4 	.word	0x240235a4

90025f4c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
90025f4c:	b513      	push	{r0, r1, r4, lr}
90025f4e:	f890 305c 	ldrb.w	r3, [r0, #92]	; 0x5c
90025f52:	4604      	mov	r4, r0
90025f54:	e9cd 2100 	strd	r2, r1, [sp]
90025f58:	b9a3      	cbnz	r3, 90025f84 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
90025f5a:	466a      	mov	r2, sp
90025f5c:	a901      	add	r1, sp, #4
90025f5e:	4620      	mov	r0, r4
90025f60:	f7ff ffe4 	bl	90025f2c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
90025f64:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
90025f66:	9901      	ldr	r1, [sp, #4]
90025f68:	9a00      	ldr	r2, [sp, #0]
90025f6a:	1ac9      	subs	r1, r1, r3
90025f6c:	6d23      	ldr	r3, [r4, #80]	; 0x50
90025f6e:	1ad2      	subs	r2, r2, r3
90025f70:	9101      	str	r1, [sp, #4]
90025f72:	2a00      	cmp	r2, #0
90025f74:	9200      	str	r2, [sp, #0]
90025f76:	da0b      	bge.n	90025f90 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
90025f78:	2301      	movs	r3, #1
90025f7a:	2900      	cmp	r1, #0
90025f7c:	da0e      	bge.n	90025f9c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
90025f7e:	f043 0304 	orr.w	r3, r3, #4
90025f82:	e013      	b.n	90025fac <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
90025f84:	f7ff ff08 	bl	90025d98 <_ZN8touchgfx6Canvas5closeEv>
90025f88:	2800      	cmp	r0, #0
90025f8a:	d1e6      	bne.n	90025f5a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
90025f8c:	b002      	add	sp, #8
90025f8e:	bd10      	pop	{r4, pc}
90025f90:	6da3      	ldr	r3, [r4, #88]	; 0x58
90025f92:	429a      	cmp	r2, r3
90025f94:	bfac      	ite	ge
90025f96:	2302      	movge	r3, #2
90025f98:	2300      	movlt	r3, #0
90025f9a:	e7ee      	b.n	90025f7a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
90025f9c:	6d60      	ldr	r0, [r4, #84]	; 0x54
90025f9e:	4281      	cmp	r1, r0
90025fa0:	bfac      	ite	ge
90025fa2:	2008      	movge	r0, #8
90025fa4:	2000      	movlt	r0, #0
90025fa6:	4318      	orrs	r0, r3
90025fa8:	b2c3      	uxtb	r3, r0
90025faa:	b158      	cbz	r0, 90025fc4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
90025fac:	2200      	movs	r2, #0
90025fae:	f884 205c 	strb.w	r2, [r4, #92]	; 0x5c
90025fb2:	9901      	ldr	r1, [sp, #4]
90025fb4:	9a00      	ldr	r2, [sp, #0]
90025fb6:	66e1      	str	r1, [r4, #108]	; 0x6c
90025fb8:	6722      	str	r2, [r4, #112]	; 0x70
90025fba:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
90025fbe:	e9c4 1218 	strd	r1, r2, [r4, #96]	; 0x60
90025fc2:	e7e3      	b.n	90025f8c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
90025fc4:	f884 0069 	strb.w	r0, [r4, #105]	; 0x69
90025fc8:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
90025fcc:	4298      	cmp	r0, r3
90025fce:	d803      	bhi.n	90025fd8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
90025fd0:	f104 0014 	add.w	r0, r4, #20
90025fd4:	f7ed f952 	bl	9001327c <_ZN8touchgfx7Outline6moveToEii>
90025fd8:	2301      	movs	r3, #1
90025fda:	f884 305c 	strb.w	r3, [r4, #92]	; 0x5c
90025fde:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
90025fe2:	2300      	movs	r3, #0
90025fe4:	e7e5      	b.n	90025fb2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

90025fe6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
90025fe6:	b573      	push	{r0, r1, r4, r5, r6, lr}
90025fe8:	ab02      	add	r3, sp, #8
90025fea:	4604      	mov	r4, r0
90025fec:	9101      	str	r1, [sp, #4]
90025fee:	a901      	add	r1, sp, #4
90025ff0:	f843 2d08 	str.w	r2, [r3, #-8]!
90025ff4:	461a      	mov	r2, r3
90025ff6:	f7ff ff99 	bl	90025f2c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
90025ffa:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
90025ffc:	9901      	ldr	r1, [sp, #4]
90025ffe:	9a00      	ldr	r2, [sp, #0]
90026000:	1ac9      	subs	r1, r1, r3
90026002:	6d23      	ldr	r3, [r4, #80]	; 0x50
90026004:	1ad2      	subs	r2, r2, r3
90026006:	9101      	str	r1, [sp, #4]
90026008:	2a00      	cmp	r2, #0
9002600a:	9200      	str	r2, [sp, #0]
9002600c:	db1c      	blt.n	90026048 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
9002600e:	6da3      	ldr	r3, [r4, #88]	; 0x58
90026010:	429a      	cmp	r2, r3
90026012:	bfac      	ite	ge
90026014:	2002      	movge	r0, #2
90026016:	2000      	movlt	r0, #0
90026018:	2900      	cmp	r1, #0
9002601a:	db17      	blt.n	9002604c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
9002601c:	6d63      	ldr	r3, [r4, #84]	; 0x54
9002601e:	4299      	cmp	r1, r3
90026020:	bfac      	ite	ge
90026022:	2308      	movge	r3, #8
90026024:	2300      	movlt	r3, #0
90026026:	4303      	orrs	r3, r0
90026028:	f894 0068 	ldrb.w	r0, [r4, #104]	; 0x68
9002602c:	b2dd      	uxtb	r5, r3
9002602e:	b978      	cbnz	r0, 90026050 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
90026030:	f104 0014 	add.w	r0, r4, #20
90026034:	f7ff fd66 	bl	90025b04 <_ZN8touchgfx10Rasterizer6lineToEii>
90026038:	9b01      	ldr	r3, [sp, #4]
9002603a:	f884 5068 	strb.w	r5, [r4, #104]	; 0x68
9002603e:	6623      	str	r3, [r4, #96]	; 0x60
90026040:	9b00      	ldr	r3, [sp, #0]
90026042:	6663      	str	r3, [r4, #100]	; 0x64
90026044:	b002      	add	sp, #8
90026046:	bd70      	pop	{r4, r5, r6, pc}
90026048:	2001      	movs	r0, #1
9002604a:	e7e5      	b.n	90026018 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
9002604c:	2304      	movs	r3, #4
9002604e:	e7ea      	b.n	90026026 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
90026050:	b113      	cbz	r3, 90026058 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
90026052:	ea10 0305 	ands.w	r3, r0, r5
90026056:	d11c      	bne.n	90026092 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
90026058:	f894 305c 	ldrb.w	r3, [r4, #92]	; 0x5c
9002605c:	f104 0614 	add.w	r6, r4, #20
90026060:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	; 0x60
90026064:	b98b      	cbnz	r3, 9002608a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
90026066:	f884 0069 	strb.w	r0, [r4, #105]	; 0x69
9002606a:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
9002606e:	4298      	cmp	r0, r3
90026070:	d802      	bhi.n	90026078 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
90026072:	4630      	mov	r0, r6
90026074:	f7ed f902 	bl	9001327c <_ZN8touchgfx7Outline6moveToEii>
90026078:	2301      	movs	r3, #1
9002607a:	f884 305c 	strb.w	r3, [r4, #92]	; 0x5c
9002607e:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
90026082:	4630      	mov	r0, r6
90026084:	e9dd 2100 	ldrd	r2, r1, [sp]
90026088:	e7d4      	b.n	90026034 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
9002608a:	4630      	mov	r0, r6
9002608c:	f7ff fd3a 	bl	90025b04 <_ZN8touchgfx10Rasterizer6lineToEii>
90026090:	e7f7      	b.n	90026082 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
90026092:	461d      	mov	r5, r3
90026094:	e7d0      	b.n	90026038 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

90026098 <_ZN8touchgfx6CanvasD1Ev>:
90026098:	4b04      	ldr	r3, [pc, #16]	; (900260ac <_ZN8touchgfx6CanvasD1Ev+0x14>)
9002609a:	b510      	push	{r4, lr}
9002609c:	4604      	mov	r4, r0
9002609e:	f840 3b14 	str.w	r3, [r0], #20
900260a2:	f7ec fbf3 	bl	9001288c <_ZN8touchgfx7OutlineD1Ev>
900260a6:	4620      	mov	r0, r4
900260a8:	bd10      	pop	{r4, pc}
900260aa:	bf00      	nop
900260ac:	9002ac48 	.word	0x9002ac48

900260b0 <_ZN8touchgfx6CanvasD0Ev>:
900260b0:	b510      	push	{r4, lr}
900260b2:	4604      	mov	r4, r0
900260b4:	f7ff fff0 	bl	90026098 <_ZN8touchgfx6CanvasD1Ev>
900260b8:	2174      	movs	r1, #116	; 0x74
900260ba:	4620      	mov	r0, r4
900260bc:	f000 f8d1 	bl	90026262 <_ZdlPvj>
900260c0:	4620      	mov	r0, r4
900260c2:	bd10      	pop	{r4, pc}

900260c4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
900260c4:	790b      	ldrb	r3, [r1, #4]
900260c6:	2b00      	cmp	r3, #0
900260c8:	bf0c      	ite	eq
900260ca:	2301      	moveq	r3, #1
900260cc:	2300      	movne	r3, #0
900260ce:	b570      	push	{r4, r5, r6, lr}
900260d0:	4604      	mov	r4, r0
900260d2:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
900260d6:	460e      	mov	r6, r1
900260d8:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
900260dc:	d109      	bne.n	900260f2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
900260de:	b14d      	cbz	r5, 900260f4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
900260e0:	7933      	ldrb	r3, [r6, #4]
900260e2:	2b01      	cmp	r3, #1
900260e4:	d10c      	bne.n	90026100 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
900260e6:	6823      	ldr	r3, [r4, #0]
900260e8:	4620      	mov	r0, r4
900260ea:	6e1b      	ldr	r3, [r3, #96]	; 0x60
900260ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900260f0:	4718      	bx	r3
900260f2:	b12d      	cbz	r5, 90026100 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
900260f4:	6823      	ldr	r3, [r4, #0]
900260f6:	4620      	mov	r0, r4
900260f8:	695b      	ldr	r3, [r3, #20]
900260fa:	4798      	blx	r3
900260fc:	2d00      	cmp	r5, #0
900260fe:	d1ef      	bne.n	900260e0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
90026100:	bd70      	pop	{r4, r5, r6, pc}

90026102 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
90026102:	b570      	push	{r4, r5, r6, lr}
90026104:	880b      	ldrh	r3, [r1, #0]
90026106:	4605      	mov	r5, r0
90026108:	4604      	mov	r4, r0
9002610a:	85c3      	strh	r3, [r0, #46]	; 0x2e
9002610c:	8813      	ldrh	r3, [r2, #0]
9002610e:	f825 3f30 	strh.w	r3, [r5, #48]!
90026112:	4628      	mov	r0, r5
90026114:	f7f2 f898 	bl	90018248 <_ZNK8touchgfx6Bitmap8getWidthEv>
90026118:	4606      	mov	r6, r0
9002611a:	4628      	mov	r0, r5
9002611c:	f7f2 f8c8 	bl	900182b0 <_ZNK8touchgfx6Bitmap9getHeightEv>
90026120:	6823      	ldr	r3, [r4, #0]
90026122:	4605      	mov	r5, r0
90026124:	4631      	mov	r1, r6
90026126:	4620      	mov	r0, r4
90026128:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9002612a:	4798      	blx	r3
9002612c:	6823      	ldr	r3, [r4, #0]
9002612e:	4629      	mov	r1, r5
90026130:	4620      	mov	r0, r4
90026132:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90026134:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90026138:	4718      	bx	r3

9002613a <_ZNK8touchgfx6Button12getSolidRectEv>:
9002613a:	b510      	push	{r4, lr}
9002613c:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
90026140:	4604      	mov	r4, r0
90026142:	2bff      	cmp	r3, #255	; 0xff
90026144:	d006      	beq.n	90026154 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
90026146:	2300      	movs	r3, #0
90026148:	8003      	strh	r3, [r0, #0]
9002614a:	8043      	strh	r3, [r0, #2]
9002614c:	8083      	strh	r3, [r0, #4]
9002614e:	80c3      	strh	r3, [r0, #6]
90026150:	4620      	mov	r0, r4
90026152:	bd10      	pop	{r4, pc}
90026154:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
90026158:	b11b      	cbz	r3, 90026162 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
9002615a:	3130      	adds	r1, #48	; 0x30
9002615c:	f7f2 f8dc 	bl	90018318 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90026160:	e7f6      	b.n	90026150 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
90026162:	312e      	adds	r1, #46	; 0x2e
90026164:	e7fa      	b.n	9002615c <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

90026168 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
90026168:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002616c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
90026170:	b08a      	sub	sp, #40	; 0x28
90026172:	4604      	mov	r4, r0
90026174:	4688      	mov	r8, r1
90026176:	2b00      	cmp	r3, #0
90026178:	d066      	beq.n	90026248 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
9002617a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
9002617c:	a805      	add	r0, sp, #20
9002617e:	f8ad 3014 	strh.w	r3, [sp, #20]
90026182:	f7f2 f861 	bl	90018248 <_ZNK8touchgfx6Bitmap8getWidthEv>
90026186:	4607      	mov	r7, r0
90026188:	a805      	add	r0, sp, #20
9002618a:	f7f2 f891 	bl	900182b0 <_ZNK8touchgfx6Bitmap9getHeightEv>
9002618e:	f9b8 6000 	ldrsh.w	r6, [r8]
90026192:	f8b8 2004 	ldrh.w	r2, [r8, #4]
90026196:	2300      	movs	r3, #0
90026198:	4432      	add	r2, r6
9002619a:	9306      	str	r3, [sp, #24]
9002619c:	b292      	uxth	r2, r2
9002619e:	fa0f fc82 	sxth.w	ip, r2
900261a2:	459c      	cmp	ip, r3
900261a4:	dd52      	ble.n	9002624c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
900261a6:	42b7      	cmp	r7, r6
900261a8:	dd50      	ble.n	9002624c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
900261aa:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
900261ae:	f8b8 3006 	ldrh.w	r3, [r8, #6]
900261b2:	442b      	add	r3, r5
900261b4:	b29b      	uxth	r3, r3
900261b6:	b219      	sxth	r1, r3
900261b8:	2900      	cmp	r1, #0
900261ba:	dd47      	ble.n	9002624c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
900261bc:	42a8      	cmp	r0, r5
900261be:	dd45      	ble.n	9002624c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
900261c0:	4567      	cmp	r7, ip
900261c2:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
900261c6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
900261ca:	bfb8      	it	lt
900261cc:	b2ba      	uxthlt	r2, r7
900261ce:	4288      	cmp	r0, r1
900261d0:	f8ad 6018 	strh.w	r6, [sp, #24]
900261d4:	bfb8      	it	lt
900261d6:	b283      	uxthlt	r3, r0
900261d8:	1b92      	subs	r2, r2, r6
900261da:	f8ad 501a 	strh.w	r5, [sp, #26]
900261de:	1b5b      	subs	r3, r3, r5
900261e0:	f8ad 201c 	strh.w	r2, [sp, #28]
900261e4:	f8ad 301e 	strh.w	r3, [sp, #30]
900261e8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
900261ec:	f64f 73ff 	movw	r3, #65535	; 0xffff
900261f0:	429a      	cmp	r2, r3
900261f2:	d026      	beq.n	90026242 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
900261f4:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
900261f8:	2b00      	cmp	r3, #0
900261fa:	dd22      	ble.n	90026242 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
900261fc:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90026200:	2b00      	cmp	r3, #0
90026202:	dd1e      	ble.n	90026242 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90026204:	2300      	movs	r3, #0
90026206:	a908      	add	r1, sp, #32
90026208:	4620      	mov	r0, r4
9002620a:	e9cd 3308 	strd	r3, r3, [sp, #32]
9002620e:	6823      	ldr	r3, [r4, #0]
90026210:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90026212:	4798      	blx	r3
90026214:	4b0f      	ldr	r3, [pc, #60]	; (90026254 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
90026216:	681b      	ldr	r3, [r3, #0]
90026218:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
9002621c:	b10a      	cbz	r2, 90026222 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
9002621e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90026220:	b900      	cbnz	r0, 90026224 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
90026222:	6898      	ldr	r0, [r3, #8]
90026224:	2501      	movs	r5, #1
90026226:	6801      	ldr	r1, [r0, #0]
90026228:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
9002622c:	9502      	str	r5, [sp, #8]
9002622e:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
90026232:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
90026236:	9401      	str	r4, [sp, #4]
90026238:	ac06      	add	r4, sp, #24
9002623a:	9400      	str	r4, [sp, #0]
9002623c:	688c      	ldr	r4, [r1, #8]
9002623e:	a905      	add	r1, sp, #20
90026240:	47a0      	blx	r4
90026242:	b00a      	add	sp, #40	; 0x28
90026244:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90026248:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
9002624a:	e797      	b.n	9002617c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
9002624c:	2300      	movs	r3, #0
9002624e:	9307      	str	r3, [sp, #28]
90026250:	e7ca      	b.n	900261e8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
90026252:	bf00      	nop
90026254:	240235ac 	.word	0x240235ac

90026258 <__aeabi_atexit>:
90026258:	460b      	mov	r3, r1
9002625a:	4601      	mov	r1, r0
9002625c:	4618      	mov	r0, r3
9002625e:	f000 b94d 	b.w	900264fc <__cxa_atexit>

90026262 <_ZdlPvj>:
90026262:	f000 b812 	b.w	9002628a <_ZdlPv>

90026266 <__cxa_guard_acquire>:
90026266:	6803      	ldr	r3, [r0, #0]
90026268:	07db      	lsls	r3, r3, #31
9002626a:	d406      	bmi.n	9002627a <__cxa_guard_acquire+0x14>
9002626c:	7843      	ldrb	r3, [r0, #1]
9002626e:	b103      	cbz	r3, 90026272 <__cxa_guard_acquire+0xc>
90026270:	deff      	udf	#255	; 0xff
90026272:	2301      	movs	r3, #1
90026274:	7043      	strb	r3, [r0, #1]
90026276:	4618      	mov	r0, r3
90026278:	4770      	bx	lr
9002627a:	2000      	movs	r0, #0
9002627c:	4770      	bx	lr

9002627e <__cxa_guard_release>:
9002627e:	2301      	movs	r3, #1
90026280:	6003      	str	r3, [r0, #0]
90026282:	4770      	bx	lr

90026284 <__cxa_pure_virtual>:
90026284:	b508      	push	{r3, lr}
90026286:	f000 f80f 	bl	900262a8 <_ZSt9terminatev>

9002628a <_ZdlPv>:
9002628a:	f000 b845 	b.w	90026318 <free>

9002628e <_ZN10__cxxabiv111__terminateEPFvvE>:
9002628e:	b508      	push	{r3, lr}
90026290:	4780      	blx	r0
90026292:	f000 f80e 	bl	900262b2 <abort>
	...

90026298 <_ZSt13get_terminatev>:
90026298:	4b02      	ldr	r3, [pc, #8]	; (900262a4 <_ZSt13get_terminatev+0xc>)
9002629a:	6818      	ldr	r0, [r3, #0]
9002629c:	f3bf 8f5b 	dmb	ish
900262a0:	4770      	bx	lr
900262a2:	bf00      	nop
900262a4:	240000f0 	.word	0x240000f0

900262a8 <_ZSt9terminatev>:
900262a8:	b508      	push	{r3, lr}
900262aa:	f7ff fff5 	bl	90026298 <_ZSt13get_terminatev>
900262ae:	f7ff ffee 	bl	9002628e <_ZN10__cxxabiv111__terminateEPFvvE>

900262b2 <abort>:
900262b2:	b508      	push	{r3, lr}
900262b4:	2006      	movs	r0, #6
900262b6:	f000 fb1d 	bl	900268f4 <raise>
900262ba:	2001      	movs	r0, #1
900262bc:	f7dd fa5a 	bl	90003774 <_exit>

900262c0 <__assert_func>:
900262c0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
900262c2:	4614      	mov	r4, r2
900262c4:	461a      	mov	r2, r3
900262c6:	4b09      	ldr	r3, [pc, #36]	; (900262ec <__assert_func+0x2c>)
900262c8:	681b      	ldr	r3, [r3, #0]
900262ca:	4605      	mov	r5, r0
900262cc:	68d8      	ldr	r0, [r3, #12]
900262ce:	b14c      	cbz	r4, 900262e4 <__assert_func+0x24>
900262d0:	4b07      	ldr	r3, [pc, #28]	; (900262f0 <__assert_func+0x30>)
900262d2:	9100      	str	r1, [sp, #0]
900262d4:	e9cd 3401 	strd	r3, r4, [sp, #4]
900262d8:	4906      	ldr	r1, [pc, #24]	; (900262f4 <__assert_func+0x34>)
900262da:	462b      	mov	r3, r5
900262dc:	f000 f9c0 	bl	90026660 <fiprintf>
900262e0:	f7ff ffe7 	bl	900262b2 <abort>
900262e4:	4b04      	ldr	r3, [pc, #16]	; (900262f8 <__assert_func+0x38>)
900262e6:	461c      	mov	r4, r3
900262e8:	e7f3      	b.n	900262d2 <__assert_func+0x12>
900262ea:	bf00      	nop
900262ec:	2400014c 	.word	0x2400014c
900262f0:	9002ac54 	.word	0x9002ac54
900262f4:	9002ac61 	.word	0x9002ac61
900262f8:	9002ac8f 	.word	0x9002ac8f

900262fc <atexit>:
900262fc:	2300      	movs	r3, #0
900262fe:	4601      	mov	r1, r0
90026300:	461a      	mov	r2, r3
90026302:	4618      	mov	r0, r3
90026304:	f000 bba4 	b.w	90026a50 <__register_exitproc>

90026308 <malloc>:
90026308:	4b02      	ldr	r3, [pc, #8]	; (90026314 <malloc+0xc>)
9002630a:	4601      	mov	r1, r0
9002630c:	6818      	ldr	r0, [r3, #0]
9002630e:	f000 b82b 	b.w	90026368 <_malloc_r>
90026312:	bf00      	nop
90026314:	2400014c 	.word	0x2400014c

90026318 <free>:
90026318:	4b02      	ldr	r3, [pc, #8]	; (90026324 <free+0xc>)
9002631a:	4601      	mov	r1, r0
9002631c:	6818      	ldr	r0, [r3, #0]
9002631e:	f000 bbf5 	b.w	90026b0c <_free_r>
90026322:	bf00      	nop
90026324:	2400014c 	.word	0x2400014c

90026328 <sbrk_aligned>:
90026328:	b570      	push	{r4, r5, r6, lr}
9002632a:	4e0e      	ldr	r6, [pc, #56]	; (90026364 <sbrk_aligned+0x3c>)
9002632c:	460c      	mov	r4, r1
9002632e:	6831      	ldr	r1, [r6, #0]
90026330:	4605      	mov	r5, r0
90026332:	b911      	cbnz	r1, 9002633a <sbrk_aligned+0x12>
90026334:	f000 fb2e 	bl	90026994 <_sbrk_r>
90026338:	6030      	str	r0, [r6, #0]
9002633a:	4621      	mov	r1, r4
9002633c:	4628      	mov	r0, r5
9002633e:	f000 fb29 	bl	90026994 <_sbrk_r>
90026342:	1c43      	adds	r3, r0, #1
90026344:	d00a      	beq.n	9002635c <sbrk_aligned+0x34>
90026346:	1cc4      	adds	r4, r0, #3
90026348:	f024 0403 	bic.w	r4, r4, #3
9002634c:	42a0      	cmp	r0, r4
9002634e:	d007      	beq.n	90026360 <sbrk_aligned+0x38>
90026350:	1a21      	subs	r1, r4, r0
90026352:	4628      	mov	r0, r5
90026354:	f000 fb1e 	bl	90026994 <_sbrk_r>
90026358:	3001      	adds	r0, #1
9002635a:	d101      	bne.n	90026360 <sbrk_aligned+0x38>
9002635c:	f04f 34ff 	mov.w	r4, #4294967295
90026360:	4620      	mov	r0, r4
90026362:	bd70      	pop	{r4, r5, r6, pc}
90026364:	24023f04 	.word	0x24023f04

90026368 <_malloc_r>:
90026368:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002636c:	1ccd      	adds	r5, r1, #3
9002636e:	f025 0503 	bic.w	r5, r5, #3
90026372:	3508      	adds	r5, #8
90026374:	2d0c      	cmp	r5, #12
90026376:	bf38      	it	cc
90026378:	250c      	movcc	r5, #12
9002637a:	2d00      	cmp	r5, #0
9002637c:	4607      	mov	r7, r0
9002637e:	db01      	blt.n	90026384 <_malloc_r+0x1c>
90026380:	42a9      	cmp	r1, r5
90026382:	d905      	bls.n	90026390 <_malloc_r+0x28>
90026384:	230c      	movs	r3, #12
90026386:	603b      	str	r3, [r7, #0]
90026388:	2600      	movs	r6, #0
9002638a:	4630      	mov	r0, r6
9002638c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90026390:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 90026464 <_malloc_r+0xfc>
90026394:	f000 f868 	bl	90026468 <__malloc_lock>
90026398:	f8d8 3000 	ldr.w	r3, [r8]
9002639c:	461c      	mov	r4, r3
9002639e:	bb5c      	cbnz	r4, 900263f8 <_malloc_r+0x90>
900263a0:	4629      	mov	r1, r5
900263a2:	4638      	mov	r0, r7
900263a4:	f7ff ffc0 	bl	90026328 <sbrk_aligned>
900263a8:	1c43      	adds	r3, r0, #1
900263aa:	4604      	mov	r4, r0
900263ac:	d155      	bne.n	9002645a <_malloc_r+0xf2>
900263ae:	f8d8 4000 	ldr.w	r4, [r8]
900263b2:	4626      	mov	r6, r4
900263b4:	2e00      	cmp	r6, #0
900263b6:	d145      	bne.n	90026444 <_malloc_r+0xdc>
900263b8:	2c00      	cmp	r4, #0
900263ba:	d048      	beq.n	9002644e <_malloc_r+0xe6>
900263bc:	6823      	ldr	r3, [r4, #0]
900263be:	4631      	mov	r1, r6
900263c0:	4638      	mov	r0, r7
900263c2:	eb04 0903 	add.w	r9, r4, r3
900263c6:	f000 fae5 	bl	90026994 <_sbrk_r>
900263ca:	4581      	cmp	r9, r0
900263cc:	d13f      	bne.n	9002644e <_malloc_r+0xe6>
900263ce:	6821      	ldr	r1, [r4, #0]
900263d0:	1a6d      	subs	r5, r5, r1
900263d2:	4629      	mov	r1, r5
900263d4:	4638      	mov	r0, r7
900263d6:	f7ff ffa7 	bl	90026328 <sbrk_aligned>
900263da:	3001      	adds	r0, #1
900263dc:	d037      	beq.n	9002644e <_malloc_r+0xe6>
900263de:	6823      	ldr	r3, [r4, #0]
900263e0:	442b      	add	r3, r5
900263e2:	6023      	str	r3, [r4, #0]
900263e4:	f8d8 3000 	ldr.w	r3, [r8]
900263e8:	2b00      	cmp	r3, #0
900263ea:	d038      	beq.n	9002645e <_malloc_r+0xf6>
900263ec:	685a      	ldr	r2, [r3, #4]
900263ee:	42a2      	cmp	r2, r4
900263f0:	d12b      	bne.n	9002644a <_malloc_r+0xe2>
900263f2:	2200      	movs	r2, #0
900263f4:	605a      	str	r2, [r3, #4]
900263f6:	e00f      	b.n	90026418 <_malloc_r+0xb0>
900263f8:	6822      	ldr	r2, [r4, #0]
900263fa:	1b52      	subs	r2, r2, r5
900263fc:	d41f      	bmi.n	9002643e <_malloc_r+0xd6>
900263fe:	2a0b      	cmp	r2, #11
90026400:	d917      	bls.n	90026432 <_malloc_r+0xca>
90026402:	1961      	adds	r1, r4, r5
90026404:	42a3      	cmp	r3, r4
90026406:	6025      	str	r5, [r4, #0]
90026408:	bf18      	it	ne
9002640a:	6059      	strne	r1, [r3, #4]
9002640c:	6863      	ldr	r3, [r4, #4]
9002640e:	bf08      	it	eq
90026410:	f8c8 1000 	streq.w	r1, [r8]
90026414:	5162      	str	r2, [r4, r5]
90026416:	604b      	str	r3, [r1, #4]
90026418:	4638      	mov	r0, r7
9002641a:	f104 060b 	add.w	r6, r4, #11
9002641e:	f000 f829 	bl	90026474 <__malloc_unlock>
90026422:	f026 0607 	bic.w	r6, r6, #7
90026426:	1d23      	adds	r3, r4, #4
90026428:	1af2      	subs	r2, r6, r3
9002642a:	d0ae      	beq.n	9002638a <_malloc_r+0x22>
9002642c:	1b9b      	subs	r3, r3, r6
9002642e:	50a3      	str	r3, [r4, r2]
90026430:	e7ab      	b.n	9002638a <_malloc_r+0x22>
90026432:	42a3      	cmp	r3, r4
90026434:	6862      	ldr	r2, [r4, #4]
90026436:	d1dd      	bne.n	900263f4 <_malloc_r+0x8c>
90026438:	f8c8 2000 	str.w	r2, [r8]
9002643c:	e7ec      	b.n	90026418 <_malloc_r+0xb0>
9002643e:	4623      	mov	r3, r4
90026440:	6864      	ldr	r4, [r4, #4]
90026442:	e7ac      	b.n	9002639e <_malloc_r+0x36>
90026444:	4634      	mov	r4, r6
90026446:	6876      	ldr	r6, [r6, #4]
90026448:	e7b4      	b.n	900263b4 <_malloc_r+0x4c>
9002644a:	4613      	mov	r3, r2
9002644c:	e7cc      	b.n	900263e8 <_malloc_r+0x80>
9002644e:	230c      	movs	r3, #12
90026450:	603b      	str	r3, [r7, #0]
90026452:	4638      	mov	r0, r7
90026454:	f000 f80e 	bl	90026474 <__malloc_unlock>
90026458:	e797      	b.n	9002638a <_malloc_r+0x22>
9002645a:	6025      	str	r5, [r4, #0]
9002645c:	e7dc      	b.n	90026418 <_malloc_r+0xb0>
9002645e:	605b      	str	r3, [r3, #4]
90026460:	deff      	udf	#255	; 0xff
90026462:	bf00      	nop
90026464:	24023f00 	.word	0x24023f00

90026468 <__malloc_lock>:
90026468:	4801      	ldr	r0, [pc, #4]	; (90026470 <__malloc_lock+0x8>)
9002646a:	f000 bae0 	b.w	90026a2e <__retarget_lock_acquire_recursive>
9002646e:	bf00      	nop
90026470:	24024049 	.word	0x24024049

90026474 <__malloc_unlock>:
90026474:	4801      	ldr	r0, [pc, #4]	; (9002647c <__malloc_unlock+0x8>)
90026476:	f000 badb 	b.w	90026a30 <__retarget_lock_release_recursive>
9002647a:	bf00      	nop
9002647c:	24024049 	.word	0x24024049

90026480 <rand>:
90026480:	4b16      	ldr	r3, [pc, #88]	; (900264dc <rand+0x5c>)
90026482:	b510      	push	{r4, lr}
90026484:	681c      	ldr	r4, [r3, #0]
90026486:	6b23      	ldr	r3, [r4, #48]	; 0x30
90026488:	b9b3      	cbnz	r3, 900264b8 <rand+0x38>
9002648a:	2018      	movs	r0, #24
9002648c:	f7ff ff3c 	bl	90026308 <malloc>
90026490:	4602      	mov	r2, r0
90026492:	6320      	str	r0, [r4, #48]	; 0x30
90026494:	b920      	cbnz	r0, 900264a0 <rand+0x20>
90026496:	4b12      	ldr	r3, [pc, #72]	; (900264e0 <rand+0x60>)
90026498:	4812      	ldr	r0, [pc, #72]	; (900264e4 <rand+0x64>)
9002649a:	2152      	movs	r1, #82	; 0x52
9002649c:	f7ff ff10 	bl	900262c0 <__assert_func>
900264a0:	4911      	ldr	r1, [pc, #68]	; (900264e8 <rand+0x68>)
900264a2:	4b12      	ldr	r3, [pc, #72]	; (900264ec <rand+0x6c>)
900264a4:	e9c0 1300 	strd	r1, r3, [r0]
900264a8:	4b11      	ldr	r3, [pc, #68]	; (900264f0 <rand+0x70>)
900264aa:	6083      	str	r3, [r0, #8]
900264ac:	230b      	movs	r3, #11
900264ae:	8183      	strh	r3, [r0, #12]
900264b0:	2100      	movs	r1, #0
900264b2:	2001      	movs	r0, #1
900264b4:	e9c2 0104 	strd	r0, r1, [r2, #16]
900264b8:	6b21      	ldr	r1, [r4, #48]	; 0x30
900264ba:	480e      	ldr	r0, [pc, #56]	; (900264f4 <rand+0x74>)
900264bc:	690b      	ldr	r3, [r1, #16]
900264be:	694c      	ldr	r4, [r1, #20]
900264c0:	4a0d      	ldr	r2, [pc, #52]	; (900264f8 <rand+0x78>)
900264c2:	4358      	muls	r0, r3
900264c4:	fb02 0004 	mla	r0, r2, r4, r0
900264c8:	fba3 3202 	umull	r3, r2, r3, r2
900264cc:	3301      	adds	r3, #1
900264ce:	eb40 0002 	adc.w	r0, r0, r2
900264d2:	e9c1 3004 	strd	r3, r0, [r1, #16]
900264d6:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
900264da:	bd10      	pop	{r4, pc}
900264dc:	2400014c 	.word	0x2400014c
900264e0:	9002ac90 	.word	0x9002ac90
900264e4:	9002aca7 	.word	0x9002aca7
900264e8:	abcd330e 	.word	0xabcd330e
900264ec:	e66d1234 	.word	0xe66d1234
900264f0:	0005deec 	.word	0x0005deec
900264f4:	5851f42d 	.word	0x5851f42d
900264f8:	4c957f2d 	.word	0x4c957f2d

900264fc <__cxa_atexit>:
900264fc:	b510      	push	{r4, lr}
900264fe:	4c05      	ldr	r4, [pc, #20]	; (90026514 <__cxa_atexit+0x18>)
90026500:	4613      	mov	r3, r2
90026502:	b12c      	cbz	r4, 90026510 <__cxa_atexit+0x14>
90026504:	460a      	mov	r2, r1
90026506:	4601      	mov	r1, r0
90026508:	2002      	movs	r0, #2
9002650a:	f000 faa1 	bl	90026a50 <__register_exitproc>
9002650e:	bd10      	pop	{r4, pc}
90026510:	4620      	mov	r0, r4
90026512:	e7fc      	b.n	9002650e <__cxa_atexit+0x12>
90026514:	90026a51 	.word	0x90026a51

90026518 <std>:
90026518:	2300      	movs	r3, #0
9002651a:	b510      	push	{r4, lr}
9002651c:	4604      	mov	r4, r0
9002651e:	e9c0 3300 	strd	r3, r3, [r0]
90026522:	e9c0 3304 	strd	r3, r3, [r0, #16]
90026526:	6083      	str	r3, [r0, #8]
90026528:	8181      	strh	r1, [r0, #12]
9002652a:	6643      	str	r3, [r0, #100]	; 0x64
9002652c:	81c2      	strh	r2, [r0, #14]
9002652e:	6183      	str	r3, [r0, #24]
90026530:	4619      	mov	r1, r3
90026532:	2208      	movs	r2, #8
90026534:	305c      	adds	r0, #92	; 0x5c
90026536:	f000 f99b 	bl	90026870 <memset>
9002653a:	4b0d      	ldr	r3, [pc, #52]	; (90026570 <std+0x58>)
9002653c:	6263      	str	r3, [r4, #36]	; 0x24
9002653e:	4b0d      	ldr	r3, [pc, #52]	; (90026574 <std+0x5c>)
90026540:	62a3      	str	r3, [r4, #40]	; 0x28
90026542:	4b0d      	ldr	r3, [pc, #52]	; (90026578 <std+0x60>)
90026544:	62e3      	str	r3, [r4, #44]	; 0x2c
90026546:	4b0d      	ldr	r3, [pc, #52]	; (9002657c <std+0x64>)
90026548:	6323      	str	r3, [r4, #48]	; 0x30
9002654a:	4b0d      	ldr	r3, [pc, #52]	; (90026580 <std+0x68>)
9002654c:	6224      	str	r4, [r4, #32]
9002654e:	429c      	cmp	r4, r3
90026550:	d006      	beq.n	90026560 <std+0x48>
90026552:	f103 0268 	add.w	r2, r3, #104	; 0x68
90026556:	4294      	cmp	r4, r2
90026558:	d002      	beq.n	90026560 <std+0x48>
9002655a:	33d0      	adds	r3, #208	; 0xd0
9002655c:	429c      	cmp	r4, r3
9002655e:	d105      	bne.n	9002656c <std+0x54>
90026560:	f104 0058 	add.w	r0, r4, #88	; 0x58
90026564:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90026568:	f000 ba60 	b.w	90026a2c <__retarget_lock_init_recursive>
9002656c:	bd10      	pop	{r4, pc}
9002656e:	bf00      	nop
90026570:	900266c1 	.word	0x900266c1
90026574:	900266e3 	.word	0x900266e3
90026578:	9002671b 	.word	0x9002671b
9002657c:	9002673f 	.word	0x9002673f
90026580:	24023f08 	.word	0x24023f08

90026584 <stdio_exit_handler>:
90026584:	4a02      	ldr	r2, [pc, #8]	; (90026590 <stdio_exit_handler+0xc>)
90026586:	4903      	ldr	r1, [pc, #12]	; (90026594 <stdio_exit_handler+0x10>)
90026588:	4803      	ldr	r0, [pc, #12]	; (90026598 <stdio_exit_handler+0x14>)
9002658a:	f000 b87b 	b.w	90026684 <_fwalk_sglue>
9002658e:	bf00      	nop
90026590:	240000f4 	.word	0x240000f4
90026594:	90027259 	.word	0x90027259
90026598:	24000100 	.word	0x24000100

9002659c <cleanup_stdio>:
9002659c:	6841      	ldr	r1, [r0, #4]
9002659e:	4b0c      	ldr	r3, [pc, #48]	; (900265d0 <cleanup_stdio+0x34>)
900265a0:	4299      	cmp	r1, r3
900265a2:	b510      	push	{r4, lr}
900265a4:	4604      	mov	r4, r0
900265a6:	d001      	beq.n	900265ac <cleanup_stdio+0x10>
900265a8:	f000 fe56 	bl	90027258 <_fflush_r>
900265ac:	68a1      	ldr	r1, [r4, #8]
900265ae:	4b09      	ldr	r3, [pc, #36]	; (900265d4 <cleanup_stdio+0x38>)
900265b0:	4299      	cmp	r1, r3
900265b2:	d002      	beq.n	900265ba <cleanup_stdio+0x1e>
900265b4:	4620      	mov	r0, r4
900265b6:	f000 fe4f 	bl	90027258 <_fflush_r>
900265ba:	68e1      	ldr	r1, [r4, #12]
900265bc:	4b06      	ldr	r3, [pc, #24]	; (900265d8 <cleanup_stdio+0x3c>)
900265be:	4299      	cmp	r1, r3
900265c0:	d004      	beq.n	900265cc <cleanup_stdio+0x30>
900265c2:	4620      	mov	r0, r4
900265c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900265c8:	f000 be46 	b.w	90027258 <_fflush_r>
900265cc:	bd10      	pop	{r4, pc}
900265ce:	bf00      	nop
900265d0:	24023f08 	.word	0x24023f08
900265d4:	24023f70 	.word	0x24023f70
900265d8:	24023fd8 	.word	0x24023fd8

900265dc <global_stdio_init.part.0>:
900265dc:	b510      	push	{r4, lr}
900265de:	4b0b      	ldr	r3, [pc, #44]	; (9002660c <global_stdio_init.part.0+0x30>)
900265e0:	4c0b      	ldr	r4, [pc, #44]	; (90026610 <global_stdio_init.part.0+0x34>)
900265e2:	4a0c      	ldr	r2, [pc, #48]	; (90026614 <global_stdio_init.part.0+0x38>)
900265e4:	601a      	str	r2, [r3, #0]
900265e6:	4620      	mov	r0, r4
900265e8:	2200      	movs	r2, #0
900265ea:	2104      	movs	r1, #4
900265ec:	f7ff ff94 	bl	90026518 <std>
900265f0:	f104 0068 	add.w	r0, r4, #104	; 0x68
900265f4:	2201      	movs	r2, #1
900265f6:	2109      	movs	r1, #9
900265f8:	f7ff ff8e 	bl	90026518 <std>
900265fc:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
90026600:	2202      	movs	r2, #2
90026602:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90026606:	2112      	movs	r1, #18
90026608:	f7ff bf86 	b.w	90026518 <std>
9002660c:	24024040 	.word	0x24024040
90026610:	24023f08 	.word	0x24023f08
90026614:	90026585 	.word	0x90026585

90026618 <__sfp_lock_acquire>:
90026618:	4801      	ldr	r0, [pc, #4]	; (90026620 <__sfp_lock_acquire+0x8>)
9002661a:	f000 ba08 	b.w	90026a2e <__retarget_lock_acquire_recursive>
9002661e:	bf00      	nop
90026620:	2402404a 	.word	0x2402404a

90026624 <__sfp_lock_release>:
90026624:	4801      	ldr	r0, [pc, #4]	; (9002662c <__sfp_lock_release+0x8>)
90026626:	f000 ba03 	b.w	90026a30 <__retarget_lock_release_recursive>
9002662a:	bf00      	nop
9002662c:	2402404a 	.word	0x2402404a

90026630 <__sinit>:
90026630:	b510      	push	{r4, lr}
90026632:	4604      	mov	r4, r0
90026634:	f7ff fff0 	bl	90026618 <__sfp_lock_acquire>
90026638:	6a23      	ldr	r3, [r4, #32]
9002663a:	b11b      	cbz	r3, 90026644 <__sinit+0x14>
9002663c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90026640:	f7ff bff0 	b.w	90026624 <__sfp_lock_release>
90026644:	4b04      	ldr	r3, [pc, #16]	; (90026658 <__sinit+0x28>)
90026646:	6223      	str	r3, [r4, #32]
90026648:	4b04      	ldr	r3, [pc, #16]	; (9002665c <__sinit+0x2c>)
9002664a:	681b      	ldr	r3, [r3, #0]
9002664c:	2b00      	cmp	r3, #0
9002664e:	d1f5      	bne.n	9002663c <__sinit+0xc>
90026650:	f7ff ffc4 	bl	900265dc <global_stdio_init.part.0>
90026654:	e7f2      	b.n	9002663c <__sinit+0xc>
90026656:	bf00      	nop
90026658:	9002659d 	.word	0x9002659d
9002665c:	24024040 	.word	0x24024040

90026660 <fiprintf>:
90026660:	b40e      	push	{r1, r2, r3}
90026662:	b503      	push	{r0, r1, lr}
90026664:	4601      	mov	r1, r0
90026666:	ab03      	add	r3, sp, #12
90026668:	4805      	ldr	r0, [pc, #20]	; (90026680 <fiprintf+0x20>)
9002666a:	f853 2b04 	ldr.w	r2, [r3], #4
9002666e:	6800      	ldr	r0, [r0, #0]
90026670:	9301      	str	r3, [sp, #4]
90026672:	f000 fac1 	bl	90026bf8 <_vfiprintf_r>
90026676:	b002      	add	sp, #8
90026678:	f85d eb04 	ldr.w	lr, [sp], #4
9002667c:	b003      	add	sp, #12
9002667e:	4770      	bx	lr
90026680:	2400014c 	.word	0x2400014c

90026684 <_fwalk_sglue>:
90026684:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90026688:	4607      	mov	r7, r0
9002668a:	4688      	mov	r8, r1
9002668c:	4614      	mov	r4, r2
9002668e:	2600      	movs	r6, #0
90026690:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
90026694:	f1b9 0901 	subs.w	r9, r9, #1
90026698:	d505      	bpl.n	900266a6 <_fwalk_sglue+0x22>
9002669a:	6824      	ldr	r4, [r4, #0]
9002669c:	2c00      	cmp	r4, #0
9002669e:	d1f7      	bne.n	90026690 <_fwalk_sglue+0xc>
900266a0:	4630      	mov	r0, r6
900266a2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
900266a6:	89ab      	ldrh	r3, [r5, #12]
900266a8:	2b01      	cmp	r3, #1
900266aa:	d907      	bls.n	900266bc <_fwalk_sglue+0x38>
900266ac:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
900266b0:	3301      	adds	r3, #1
900266b2:	d003      	beq.n	900266bc <_fwalk_sglue+0x38>
900266b4:	4629      	mov	r1, r5
900266b6:	4638      	mov	r0, r7
900266b8:	47c0      	blx	r8
900266ba:	4306      	orrs	r6, r0
900266bc:	3568      	adds	r5, #104	; 0x68
900266be:	e7e9      	b.n	90026694 <_fwalk_sglue+0x10>

900266c0 <__sread>:
900266c0:	b510      	push	{r4, lr}
900266c2:	460c      	mov	r4, r1
900266c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
900266c8:	f000 f93e 	bl	90026948 <_read_r>
900266cc:	2800      	cmp	r0, #0
900266ce:	bfab      	itete	ge
900266d0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
900266d2:	89a3      	ldrhlt	r3, [r4, #12]
900266d4:	181b      	addge	r3, r3, r0
900266d6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
900266da:	bfac      	ite	ge
900266dc:	6563      	strge	r3, [r4, #84]	; 0x54
900266de:	81a3      	strhlt	r3, [r4, #12]
900266e0:	bd10      	pop	{r4, pc}

900266e2 <__swrite>:
900266e2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900266e6:	461f      	mov	r7, r3
900266e8:	898b      	ldrh	r3, [r1, #12]
900266ea:	05db      	lsls	r3, r3, #23
900266ec:	4605      	mov	r5, r0
900266ee:	460c      	mov	r4, r1
900266f0:	4616      	mov	r6, r2
900266f2:	d505      	bpl.n	90026700 <__swrite+0x1e>
900266f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
900266f8:	2302      	movs	r3, #2
900266fa:	2200      	movs	r2, #0
900266fc:	f000 f912 	bl	90026924 <_lseek_r>
90026700:	89a3      	ldrh	r3, [r4, #12]
90026702:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
90026706:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9002670a:	81a3      	strh	r3, [r4, #12]
9002670c:	4632      	mov	r2, r6
9002670e:	463b      	mov	r3, r7
90026710:	4628      	mov	r0, r5
90026712:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90026716:	f000 b94d 	b.w	900269b4 <_write_r>

9002671a <__sseek>:
9002671a:	b510      	push	{r4, lr}
9002671c:	460c      	mov	r4, r1
9002671e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90026722:	f000 f8ff 	bl	90026924 <_lseek_r>
90026726:	1c43      	adds	r3, r0, #1
90026728:	89a3      	ldrh	r3, [r4, #12]
9002672a:	bf15      	itete	ne
9002672c:	6560      	strne	r0, [r4, #84]	; 0x54
9002672e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
90026732:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
90026736:	81a3      	strheq	r3, [r4, #12]
90026738:	bf18      	it	ne
9002673a:	81a3      	strhne	r3, [r4, #12]
9002673c:	bd10      	pop	{r4, pc}

9002673e <__sclose>:
9002673e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90026742:	f000 b8df 	b.w	90026904 <_close_r>

90026746 <__swbuf_r>:
90026746:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90026748:	460e      	mov	r6, r1
9002674a:	4614      	mov	r4, r2
9002674c:	4605      	mov	r5, r0
9002674e:	b118      	cbz	r0, 90026758 <__swbuf_r+0x12>
90026750:	6a03      	ldr	r3, [r0, #32]
90026752:	b90b      	cbnz	r3, 90026758 <__swbuf_r+0x12>
90026754:	f7ff ff6c 	bl	90026630 <__sinit>
90026758:	69a3      	ldr	r3, [r4, #24]
9002675a:	60a3      	str	r3, [r4, #8]
9002675c:	89a3      	ldrh	r3, [r4, #12]
9002675e:	071a      	lsls	r2, r3, #28
90026760:	d525      	bpl.n	900267ae <__swbuf_r+0x68>
90026762:	6923      	ldr	r3, [r4, #16]
90026764:	b31b      	cbz	r3, 900267ae <__swbuf_r+0x68>
90026766:	6823      	ldr	r3, [r4, #0]
90026768:	6922      	ldr	r2, [r4, #16]
9002676a:	1a98      	subs	r0, r3, r2
9002676c:	6963      	ldr	r3, [r4, #20]
9002676e:	b2f6      	uxtb	r6, r6
90026770:	4283      	cmp	r3, r0
90026772:	4637      	mov	r7, r6
90026774:	dc04      	bgt.n	90026780 <__swbuf_r+0x3a>
90026776:	4621      	mov	r1, r4
90026778:	4628      	mov	r0, r5
9002677a:	f000 fd6d 	bl	90027258 <_fflush_r>
9002677e:	b9e0      	cbnz	r0, 900267ba <__swbuf_r+0x74>
90026780:	68a3      	ldr	r3, [r4, #8]
90026782:	3b01      	subs	r3, #1
90026784:	60a3      	str	r3, [r4, #8]
90026786:	6823      	ldr	r3, [r4, #0]
90026788:	1c5a      	adds	r2, r3, #1
9002678a:	6022      	str	r2, [r4, #0]
9002678c:	701e      	strb	r6, [r3, #0]
9002678e:	6962      	ldr	r2, [r4, #20]
90026790:	1c43      	adds	r3, r0, #1
90026792:	429a      	cmp	r2, r3
90026794:	d004      	beq.n	900267a0 <__swbuf_r+0x5a>
90026796:	89a3      	ldrh	r3, [r4, #12]
90026798:	07db      	lsls	r3, r3, #31
9002679a:	d506      	bpl.n	900267aa <__swbuf_r+0x64>
9002679c:	2e0a      	cmp	r6, #10
9002679e:	d104      	bne.n	900267aa <__swbuf_r+0x64>
900267a0:	4621      	mov	r1, r4
900267a2:	4628      	mov	r0, r5
900267a4:	f000 fd58 	bl	90027258 <_fflush_r>
900267a8:	b938      	cbnz	r0, 900267ba <__swbuf_r+0x74>
900267aa:	4638      	mov	r0, r7
900267ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900267ae:	4621      	mov	r1, r4
900267b0:	4628      	mov	r0, r5
900267b2:	f000 f805 	bl	900267c0 <__swsetup_r>
900267b6:	2800      	cmp	r0, #0
900267b8:	d0d5      	beq.n	90026766 <__swbuf_r+0x20>
900267ba:	f04f 37ff 	mov.w	r7, #4294967295
900267be:	e7f4      	b.n	900267aa <__swbuf_r+0x64>

900267c0 <__swsetup_r>:
900267c0:	b538      	push	{r3, r4, r5, lr}
900267c2:	4b2a      	ldr	r3, [pc, #168]	; (9002686c <__swsetup_r+0xac>)
900267c4:	4605      	mov	r5, r0
900267c6:	6818      	ldr	r0, [r3, #0]
900267c8:	460c      	mov	r4, r1
900267ca:	b118      	cbz	r0, 900267d4 <__swsetup_r+0x14>
900267cc:	6a03      	ldr	r3, [r0, #32]
900267ce:	b90b      	cbnz	r3, 900267d4 <__swsetup_r+0x14>
900267d0:	f7ff ff2e 	bl	90026630 <__sinit>
900267d4:	89a3      	ldrh	r3, [r4, #12]
900267d6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
900267da:	0718      	lsls	r0, r3, #28
900267dc:	d422      	bmi.n	90026824 <__swsetup_r+0x64>
900267de:	06d9      	lsls	r1, r3, #27
900267e0:	d407      	bmi.n	900267f2 <__swsetup_r+0x32>
900267e2:	2309      	movs	r3, #9
900267e4:	602b      	str	r3, [r5, #0]
900267e6:	f042 0340 	orr.w	r3, r2, #64	; 0x40
900267ea:	81a3      	strh	r3, [r4, #12]
900267ec:	f04f 30ff 	mov.w	r0, #4294967295
900267f0:	e034      	b.n	9002685c <__swsetup_r+0x9c>
900267f2:	0758      	lsls	r0, r3, #29
900267f4:	d512      	bpl.n	9002681c <__swsetup_r+0x5c>
900267f6:	6b61      	ldr	r1, [r4, #52]	; 0x34
900267f8:	b141      	cbz	r1, 9002680c <__swsetup_r+0x4c>
900267fa:	f104 0344 	add.w	r3, r4, #68	; 0x44
900267fe:	4299      	cmp	r1, r3
90026800:	d002      	beq.n	90026808 <__swsetup_r+0x48>
90026802:	4628      	mov	r0, r5
90026804:	f000 f982 	bl	90026b0c <_free_r>
90026808:	2300      	movs	r3, #0
9002680a:	6363      	str	r3, [r4, #52]	; 0x34
9002680c:	89a3      	ldrh	r3, [r4, #12]
9002680e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
90026812:	81a3      	strh	r3, [r4, #12]
90026814:	2300      	movs	r3, #0
90026816:	6063      	str	r3, [r4, #4]
90026818:	6923      	ldr	r3, [r4, #16]
9002681a:	6023      	str	r3, [r4, #0]
9002681c:	89a3      	ldrh	r3, [r4, #12]
9002681e:	f043 0308 	orr.w	r3, r3, #8
90026822:	81a3      	strh	r3, [r4, #12]
90026824:	6923      	ldr	r3, [r4, #16]
90026826:	b94b      	cbnz	r3, 9002683c <__swsetup_r+0x7c>
90026828:	89a3      	ldrh	r3, [r4, #12]
9002682a:	f403 7320 	and.w	r3, r3, #640	; 0x280
9002682e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
90026832:	d003      	beq.n	9002683c <__swsetup_r+0x7c>
90026834:	4621      	mov	r1, r4
90026836:	4628      	mov	r0, r5
90026838:	f000 fd5c 	bl	900272f4 <__smakebuf_r>
9002683c:	89a0      	ldrh	r0, [r4, #12]
9002683e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90026842:	f010 0301 	ands.w	r3, r0, #1
90026846:	d00a      	beq.n	9002685e <__swsetup_r+0x9e>
90026848:	2300      	movs	r3, #0
9002684a:	60a3      	str	r3, [r4, #8]
9002684c:	6963      	ldr	r3, [r4, #20]
9002684e:	425b      	negs	r3, r3
90026850:	61a3      	str	r3, [r4, #24]
90026852:	6923      	ldr	r3, [r4, #16]
90026854:	b943      	cbnz	r3, 90026868 <__swsetup_r+0xa8>
90026856:	f010 0080 	ands.w	r0, r0, #128	; 0x80
9002685a:	d1c4      	bne.n	900267e6 <__swsetup_r+0x26>
9002685c:	bd38      	pop	{r3, r4, r5, pc}
9002685e:	0781      	lsls	r1, r0, #30
90026860:	bf58      	it	pl
90026862:	6963      	ldrpl	r3, [r4, #20]
90026864:	60a3      	str	r3, [r4, #8]
90026866:	e7f4      	b.n	90026852 <__swsetup_r+0x92>
90026868:	2000      	movs	r0, #0
9002686a:	e7f7      	b.n	9002685c <__swsetup_r+0x9c>
9002686c:	2400014c 	.word	0x2400014c

90026870 <memset>:
90026870:	4402      	add	r2, r0
90026872:	4603      	mov	r3, r0
90026874:	4293      	cmp	r3, r2
90026876:	d100      	bne.n	9002687a <memset+0xa>
90026878:	4770      	bx	lr
9002687a:	f803 1b01 	strb.w	r1, [r3], #1
9002687e:	e7f9      	b.n	90026874 <memset+0x4>

90026880 <strncmp>:
90026880:	b510      	push	{r4, lr}
90026882:	b16a      	cbz	r2, 900268a0 <strncmp+0x20>
90026884:	3901      	subs	r1, #1
90026886:	1884      	adds	r4, r0, r2
90026888:	f810 2b01 	ldrb.w	r2, [r0], #1
9002688c:	f811 3f01 	ldrb.w	r3, [r1, #1]!
90026890:	429a      	cmp	r2, r3
90026892:	d103      	bne.n	9002689c <strncmp+0x1c>
90026894:	42a0      	cmp	r0, r4
90026896:	d001      	beq.n	9002689c <strncmp+0x1c>
90026898:	2a00      	cmp	r2, #0
9002689a:	d1f5      	bne.n	90026888 <strncmp+0x8>
9002689c:	1ad0      	subs	r0, r2, r3
9002689e:	bd10      	pop	{r4, pc}
900268a0:	4610      	mov	r0, r2
900268a2:	e7fc      	b.n	9002689e <strncmp+0x1e>

900268a4 <_raise_r>:
900268a4:	291f      	cmp	r1, #31
900268a6:	b538      	push	{r3, r4, r5, lr}
900268a8:	4604      	mov	r4, r0
900268aa:	460d      	mov	r5, r1
900268ac:	d904      	bls.n	900268b8 <_raise_r+0x14>
900268ae:	2316      	movs	r3, #22
900268b0:	6003      	str	r3, [r0, #0]
900268b2:	f04f 30ff 	mov.w	r0, #4294967295
900268b6:	bd38      	pop	{r3, r4, r5, pc}
900268b8:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
900268ba:	b112      	cbz	r2, 900268c2 <_raise_r+0x1e>
900268bc:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
900268c0:	b94b      	cbnz	r3, 900268d6 <_raise_r+0x32>
900268c2:	4620      	mov	r0, r4
900268c4:	f000 f864 	bl	90026990 <_getpid_r>
900268c8:	462a      	mov	r2, r5
900268ca:	4601      	mov	r1, r0
900268cc:	4620      	mov	r0, r4
900268ce:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
900268d2:	f000 b84b 	b.w	9002696c <_kill_r>
900268d6:	2b01      	cmp	r3, #1
900268d8:	d00a      	beq.n	900268f0 <_raise_r+0x4c>
900268da:	1c59      	adds	r1, r3, #1
900268dc:	d103      	bne.n	900268e6 <_raise_r+0x42>
900268de:	2316      	movs	r3, #22
900268e0:	6003      	str	r3, [r0, #0]
900268e2:	2001      	movs	r0, #1
900268e4:	e7e7      	b.n	900268b6 <_raise_r+0x12>
900268e6:	2400      	movs	r4, #0
900268e8:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
900268ec:	4628      	mov	r0, r5
900268ee:	4798      	blx	r3
900268f0:	2000      	movs	r0, #0
900268f2:	e7e0      	b.n	900268b6 <_raise_r+0x12>

900268f4 <raise>:
900268f4:	4b02      	ldr	r3, [pc, #8]	; (90026900 <raise+0xc>)
900268f6:	4601      	mov	r1, r0
900268f8:	6818      	ldr	r0, [r3, #0]
900268fa:	f7ff bfd3 	b.w	900268a4 <_raise_r>
900268fe:	bf00      	nop
90026900:	2400014c 	.word	0x2400014c

90026904 <_close_r>:
90026904:	b538      	push	{r3, r4, r5, lr}
90026906:	4d06      	ldr	r5, [pc, #24]	; (90026920 <_close_r+0x1c>)
90026908:	2300      	movs	r3, #0
9002690a:	4604      	mov	r4, r0
9002690c:	4608      	mov	r0, r1
9002690e:	602b      	str	r3, [r5, #0]
90026910:	f7dc ff52 	bl	900037b8 <_close>
90026914:	1c43      	adds	r3, r0, #1
90026916:	d102      	bne.n	9002691e <_close_r+0x1a>
90026918:	682b      	ldr	r3, [r5, #0]
9002691a:	b103      	cbz	r3, 9002691e <_close_r+0x1a>
9002691c:	6023      	str	r3, [r4, #0]
9002691e:	bd38      	pop	{r3, r4, r5, pc}
90026920:	24024044 	.word	0x24024044

90026924 <_lseek_r>:
90026924:	b538      	push	{r3, r4, r5, lr}
90026926:	4d07      	ldr	r5, [pc, #28]	; (90026944 <_lseek_r+0x20>)
90026928:	4604      	mov	r4, r0
9002692a:	4608      	mov	r0, r1
9002692c:	4611      	mov	r1, r2
9002692e:	2200      	movs	r2, #0
90026930:	602a      	str	r2, [r5, #0]
90026932:	461a      	mov	r2, r3
90026934:	f7dc ff4c 	bl	900037d0 <_lseek>
90026938:	1c43      	adds	r3, r0, #1
9002693a:	d102      	bne.n	90026942 <_lseek_r+0x1e>
9002693c:	682b      	ldr	r3, [r5, #0]
9002693e:	b103      	cbz	r3, 90026942 <_lseek_r+0x1e>
90026940:	6023      	str	r3, [r4, #0]
90026942:	bd38      	pop	{r3, r4, r5, pc}
90026944:	24024044 	.word	0x24024044

90026948 <_read_r>:
90026948:	b538      	push	{r3, r4, r5, lr}
9002694a:	4d07      	ldr	r5, [pc, #28]	; (90026968 <_read_r+0x20>)
9002694c:	4604      	mov	r4, r0
9002694e:	4608      	mov	r0, r1
90026950:	4611      	mov	r1, r2
90026952:	2200      	movs	r2, #0
90026954:	602a      	str	r2, [r5, #0]
90026956:	461a      	mov	r2, r3
90026958:	f7dc ff12 	bl	90003780 <_read>
9002695c:	1c43      	adds	r3, r0, #1
9002695e:	d102      	bne.n	90026966 <_read_r+0x1e>
90026960:	682b      	ldr	r3, [r5, #0]
90026962:	b103      	cbz	r3, 90026966 <_read_r+0x1e>
90026964:	6023      	str	r3, [r4, #0]
90026966:	bd38      	pop	{r3, r4, r5, pc}
90026968:	24024044 	.word	0x24024044

9002696c <_kill_r>:
9002696c:	b538      	push	{r3, r4, r5, lr}
9002696e:	4d07      	ldr	r5, [pc, #28]	; (9002698c <_kill_r+0x20>)
90026970:	2300      	movs	r3, #0
90026972:	4604      	mov	r4, r0
90026974:	4608      	mov	r0, r1
90026976:	4611      	mov	r1, r2
90026978:	602b      	str	r3, [r5, #0]
9002697a:	f7dc fef1 	bl	90003760 <_kill>
9002697e:	1c43      	adds	r3, r0, #1
90026980:	d102      	bne.n	90026988 <_kill_r+0x1c>
90026982:	682b      	ldr	r3, [r5, #0]
90026984:	b103      	cbz	r3, 90026988 <_kill_r+0x1c>
90026986:	6023      	str	r3, [r4, #0]
90026988:	bd38      	pop	{r3, r4, r5, pc}
9002698a:	bf00      	nop
9002698c:	24024044 	.word	0x24024044

90026990 <_getpid_r>:
90026990:	f7dc bee4 	b.w	9000375c <_getpid>

90026994 <_sbrk_r>:
90026994:	b538      	push	{r3, r4, r5, lr}
90026996:	4d06      	ldr	r5, [pc, #24]	; (900269b0 <_sbrk_r+0x1c>)
90026998:	2300      	movs	r3, #0
9002699a:	4604      	mov	r4, r0
9002699c:	4608      	mov	r0, r1
9002699e:	602b      	str	r3, [r5, #0]
900269a0:	f000 fd06 	bl	900273b0 <_sbrk>
900269a4:	1c43      	adds	r3, r0, #1
900269a6:	d102      	bne.n	900269ae <_sbrk_r+0x1a>
900269a8:	682b      	ldr	r3, [r5, #0]
900269aa:	b103      	cbz	r3, 900269ae <_sbrk_r+0x1a>
900269ac:	6023      	str	r3, [r4, #0]
900269ae:	bd38      	pop	{r3, r4, r5, pc}
900269b0:	24024044 	.word	0x24024044

900269b4 <_write_r>:
900269b4:	b538      	push	{r3, r4, r5, lr}
900269b6:	4d07      	ldr	r5, [pc, #28]	; (900269d4 <_write_r+0x20>)
900269b8:	4604      	mov	r4, r0
900269ba:	4608      	mov	r0, r1
900269bc:	4611      	mov	r1, r2
900269be:	2200      	movs	r2, #0
900269c0:	602a      	str	r2, [r5, #0]
900269c2:	461a      	mov	r2, r3
900269c4:	f7dc feea 	bl	9000379c <_write>
900269c8:	1c43      	adds	r3, r0, #1
900269ca:	d102      	bne.n	900269d2 <_write_r+0x1e>
900269cc:	682b      	ldr	r3, [r5, #0]
900269ce:	b103      	cbz	r3, 900269d2 <_write_r+0x1e>
900269d0:	6023      	str	r3, [r4, #0]
900269d2:	bd38      	pop	{r3, r4, r5, pc}
900269d4:	24024044 	.word	0x24024044

900269d8 <__errno>:
900269d8:	4b01      	ldr	r3, [pc, #4]	; (900269e0 <__errno+0x8>)
900269da:	6818      	ldr	r0, [r3, #0]
900269dc:	4770      	bx	lr
900269de:	bf00      	nop
900269e0:	2400014c 	.word	0x2400014c

900269e4 <__libc_init_array>:
900269e4:	b570      	push	{r4, r5, r6, lr}
900269e6:	4d0d      	ldr	r5, [pc, #52]	; (90026a1c <__libc_init_array+0x38>)
900269e8:	4c0d      	ldr	r4, [pc, #52]	; (90026a20 <__libc_init_array+0x3c>)
900269ea:	1b64      	subs	r4, r4, r5
900269ec:	10a4      	asrs	r4, r4, #2
900269ee:	2600      	movs	r6, #0
900269f0:	42a6      	cmp	r6, r4
900269f2:	d109      	bne.n	90026a08 <__libc_init_array+0x24>
900269f4:	4d0b      	ldr	r5, [pc, #44]	; (90026a24 <__libc_init_array+0x40>)
900269f6:	4c0c      	ldr	r4, [pc, #48]	; (90026a28 <__libc_init_array+0x44>)
900269f8:	f000 fce8 	bl	900273cc <_init>
900269fc:	1b64      	subs	r4, r4, r5
900269fe:	10a4      	asrs	r4, r4, #2
90026a00:	2600      	movs	r6, #0
90026a02:	42a6      	cmp	r6, r4
90026a04:	d105      	bne.n	90026a12 <__libc_init_array+0x2e>
90026a06:	bd70      	pop	{r4, r5, r6, pc}
90026a08:	f855 3b04 	ldr.w	r3, [r5], #4
90026a0c:	4798      	blx	r3
90026a0e:	3601      	adds	r6, #1
90026a10:	e7ee      	b.n	900269f0 <__libc_init_array+0xc>
90026a12:	f855 3b04 	ldr.w	r3, [r5], #4
90026a16:	4798      	blx	r3
90026a18:	3601      	adds	r6, #1
90026a1a:	e7f2      	b.n	90026a02 <__libc_init_array+0x1e>
90026a1c:	9002b390 	.word	0x9002b390
90026a20:	9002b390 	.word	0x9002b390
90026a24:	9002b390 	.word	0x9002b390
90026a28:	9002b3a8 	.word	0x9002b3a8

90026a2c <__retarget_lock_init_recursive>:
90026a2c:	4770      	bx	lr

90026a2e <__retarget_lock_acquire_recursive>:
90026a2e:	4770      	bx	lr

90026a30 <__retarget_lock_release_recursive>:
90026a30:	4770      	bx	lr

90026a32 <memcpy>:
90026a32:	440a      	add	r2, r1
90026a34:	4291      	cmp	r1, r2
90026a36:	f100 33ff 	add.w	r3, r0, #4294967295
90026a3a:	d100      	bne.n	90026a3e <memcpy+0xc>
90026a3c:	4770      	bx	lr
90026a3e:	b510      	push	{r4, lr}
90026a40:	f811 4b01 	ldrb.w	r4, [r1], #1
90026a44:	f803 4f01 	strb.w	r4, [r3, #1]!
90026a48:	4291      	cmp	r1, r2
90026a4a:	d1f9      	bne.n	90026a40 <memcpy+0xe>
90026a4c:	bd10      	pop	{r4, pc}
	...

90026a50 <__register_exitproc>:
90026a50:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90026a54:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 90026b08 <__register_exitproc+0xb8>
90026a58:	4606      	mov	r6, r0
90026a5a:	f8d8 0000 	ldr.w	r0, [r8]
90026a5e:	461f      	mov	r7, r3
90026a60:	460d      	mov	r5, r1
90026a62:	4691      	mov	r9, r2
90026a64:	f7ff ffe3 	bl	90026a2e <__retarget_lock_acquire_recursive>
90026a68:	4b23      	ldr	r3, [pc, #140]	; (90026af8 <__register_exitproc+0xa8>)
90026a6a:	681c      	ldr	r4, [r3, #0]
90026a6c:	b934      	cbnz	r4, 90026a7c <__register_exitproc+0x2c>
90026a6e:	4c23      	ldr	r4, [pc, #140]	; (90026afc <__register_exitproc+0xac>)
90026a70:	601c      	str	r4, [r3, #0]
90026a72:	4b23      	ldr	r3, [pc, #140]	; (90026b00 <__register_exitproc+0xb0>)
90026a74:	b113      	cbz	r3, 90026a7c <__register_exitproc+0x2c>
90026a76:	681b      	ldr	r3, [r3, #0]
90026a78:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
90026a7c:	6863      	ldr	r3, [r4, #4]
90026a7e:	2b1f      	cmp	r3, #31
90026a80:	dd07      	ble.n	90026a92 <__register_exitproc+0x42>
90026a82:	f8d8 0000 	ldr.w	r0, [r8]
90026a86:	f7ff ffd3 	bl	90026a30 <__retarget_lock_release_recursive>
90026a8a:	f04f 30ff 	mov.w	r0, #4294967295
90026a8e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90026a92:	b32e      	cbz	r6, 90026ae0 <__register_exitproc+0x90>
90026a94:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
90026a98:	b968      	cbnz	r0, 90026ab6 <__register_exitproc+0x66>
90026a9a:	4b1a      	ldr	r3, [pc, #104]	; (90026b04 <__register_exitproc+0xb4>)
90026a9c:	2b00      	cmp	r3, #0
90026a9e:	d0f0      	beq.n	90026a82 <__register_exitproc+0x32>
90026aa0:	f44f 7084 	mov.w	r0, #264	; 0x108
90026aa4:	f7ff fc30 	bl	90026308 <malloc>
90026aa8:	2800      	cmp	r0, #0
90026aaa:	d0ea      	beq.n	90026a82 <__register_exitproc+0x32>
90026aac:	2300      	movs	r3, #0
90026aae:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
90026ab2:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
90026ab6:	6863      	ldr	r3, [r4, #4]
90026ab8:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
90026abc:	2201      	movs	r2, #1
90026abe:	409a      	lsls	r2, r3
90026ac0:	eb00 0183 	add.w	r1, r0, r3, lsl #2
90026ac4:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
90026ac8:	4313      	orrs	r3, r2
90026aca:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
90026ace:	2e02      	cmp	r6, #2
90026ad0:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
90026ad4:	bf02      	ittt	eq
90026ad6:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
90026ada:	4313      	orreq	r3, r2
90026adc:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
90026ae0:	6863      	ldr	r3, [r4, #4]
90026ae2:	f8d8 0000 	ldr.w	r0, [r8]
90026ae6:	1c5a      	adds	r2, r3, #1
90026ae8:	3302      	adds	r3, #2
90026aea:	6062      	str	r2, [r4, #4]
90026aec:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
90026af0:	f7ff ff9e 	bl	90026a30 <__retarget_lock_release_recursive>
90026af4:	2000      	movs	r0, #0
90026af6:	e7ca      	b.n	90026a8e <__register_exitproc+0x3e>
90026af8:	240240d8 	.word	0x240240d8
90026afc:	2402404c 	.word	0x2402404c
90026b00:	9002ad00 	.word	0x9002ad00
90026b04:	90026309 	.word	0x90026309
90026b08:	24000150 	.word	0x24000150

90026b0c <_free_r>:
90026b0c:	b537      	push	{r0, r1, r2, r4, r5, lr}
90026b0e:	2900      	cmp	r1, #0
90026b10:	d044      	beq.n	90026b9c <_free_r+0x90>
90026b12:	f851 3c04 	ldr.w	r3, [r1, #-4]
90026b16:	9001      	str	r0, [sp, #4]
90026b18:	2b00      	cmp	r3, #0
90026b1a:	f1a1 0404 	sub.w	r4, r1, #4
90026b1e:	bfb8      	it	lt
90026b20:	18e4      	addlt	r4, r4, r3
90026b22:	f7ff fca1 	bl	90026468 <__malloc_lock>
90026b26:	4a1e      	ldr	r2, [pc, #120]	; (90026ba0 <_free_r+0x94>)
90026b28:	9801      	ldr	r0, [sp, #4]
90026b2a:	6813      	ldr	r3, [r2, #0]
90026b2c:	b933      	cbnz	r3, 90026b3c <_free_r+0x30>
90026b2e:	6063      	str	r3, [r4, #4]
90026b30:	6014      	str	r4, [r2, #0]
90026b32:	b003      	add	sp, #12
90026b34:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
90026b38:	f7ff bc9c 	b.w	90026474 <__malloc_unlock>
90026b3c:	42a3      	cmp	r3, r4
90026b3e:	d908      	bls.n	90026b52 <_free_r+0x46>
90026b40:	6825      	ldr	r5, [r4, #0]
90026b42:	1961      	adds	r1, r4, r5
90026b44:	428b      	cmp	r3, r1
90026b46:	bf01      	itttt	eq
90026b48:	6819      	ldreq	r1, [r3, #0]
90026b4a:	685b      	ldreq	r3, [r3, #4]
90026b4c:	1949      	addeq	r1, r1, r5
90026b4e:	6021      	streq	r1, [r4, #0]
90026b50:	e7ed      	b.n	90026b2e <_free_r+0x22>
90026b52:	461a      	mov	r2, r3
90026b54:	685b      	ldr	r3, [r3, #4]
90026b56:	b10b      	cbz	r3, 90026b5c <_free_r+0x50>
90026b58:	42a3      	cmp	r3, r4
90026b5a:	d9fa      	bls.n	90026b52 <_free_r+0x46>
90026b5c:	6811      	ldr	r1, [r2, #0]
90026b5e:	1855      	adds	r5, r2, r1
90026b60:	42a5      	cmp	r5, r4
90026b62:	d10b      	bne.n	90026b7c <_free_r+0x70>
90026b64:	6824      	ldr	r4, [r4, #0]
90026b66:	4421      	add	r1, r4
90026b68:	1854      	adds	r4, r2, r1
90026b6a:	42a3      	cmp	r3, r4
90026b6c:	6011      	str	r1, [r2, #0]
90026b6e:	d1e0      	bne.n	90026b32 <_free_r+0x26>
90026b70:	681c      	ldr	r4, [r3, #0]
90026b72:	685b      	ldr	r3, [r3, #4]
90026b74:	6053      	str	r3, [r2, #4]
90026b76:	440c      	add	r4, r1
90026b78:	6014      	str	r4, [r2, #0]
90026b7a:	e7da      	b.n	90026b32 <_free_r+0x26>
90026b7c:	d902      	bls.n	90026b84 <_free_r+0x78>
90026b7e:	230c      	movs	r3, #12
90026b80:	6003      	str	r3, [r0, #0]
90026b82:	e7d6      	b.n	90026b32 <_free_r+0x26>
90026b84:	6825      	ldr	r5, [r4, #0]
90026b86:	1961      	adds	r1, r4, r5
90026b88:	428b      	cmp	r3, r1
90026b8a:	bf04      	itt	eq
90026b8c:	6819      	ldreq	r1, [r3, #0]
90026b8e:	685b      	ldreq	r3, [r3, #4]
90026b90:	6063      	str	r3, [r4, #4]
90026b92:	bf04      	itt	eq
90026b94:	1949      	addeq	r1, r1, r5
90026b96:	6021      	streq	r1, [r4, #0]
90026b98:	6054      	str	r4, [r2, #4]
90026b9a:	e7ca      	b.n	90026b32 <_free_r+0x26>
90026b9c:	b003      	add	sp, #12
90026b9e:	bd30      	pop	{r4, r5, pc}
90026ba0:	24023f00 	.word	0x24023f00

90026ba4 <__sfputc_r>:
90026ba4:	6893      	ldr	r3, [r2, #8]
90026ba6:	3b01      	subs	r3, #1
90026ba8:	2b00      	cmp	r3, #0
90026baa:	b410      	push	{r4}
90026bac:	6093      	str	r3, [r2, #8]
90026bae:	da08      	bge.n	90026bc2 <__sfputc_r+0x1e>
90026bb0:	6994      	ldr	r4, [r2, #24]
90026bb2:	42a3      	cmp	r3, r4
90026bb4:	db01      	blt.n	90026bba <__sfputc_r+0x16>
90026bb6:	290a      	cmp	r1, #10
90026bb8:	d103      	bne.n	90026bc2 <__sfputc_r+0x1e>
90026bba:	f85d 4b04 	ldr.w	r4, [sp], #4
90026bbe:	f7ff bdc2 	b.w	90026746 <__swbuf_r>
90026bc2:	6813      	ldr	r3, [r2, #0]
90026bc4:	1c58      	adds	r0, r3, #1
90026bc6:	6010      	str	r0, [r2, #0]
90026bc8:	7019      	strb	r1, [r3, #0]
90026bca:	4608      	mov	r0, r1
90026bcc:	f85d 4b04 	ldr.w	r4, [sp], #4
90026bd0:	4770      	bx	lr

90026bd2 <__sfputs_r>:
90026bd2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90026bd4:	4606      	mov	r6, r0
90026bd6:	460f      	mov	r7, r1
90026bd8:	4614      	mov	r4, r2
90026bda:	18d5      	adds	r5, r2, r3
90026bdc:	42ac      	cmp	r4, r5
90026bde:	d101      	bne.n	90026be4 <__sfputs_r+0x12>
90026be0:	2000      	movs	r0, #0
90026be2:	e007      	b.n	90026bf4 <__sfputs_r+0x22>
90026be4:	f814 1b01 	ldrb.w	r1, [r4], #1
90026be8:	463a      	mov	r2, r7
90026bea:	4630      	mov	r0, r6
90026bec:	f7ff ffda 	bl	90026ba4 <__sfputc_r>
90026bf0:	1c43      	adds	r3, r0, #1
90026bf2:	d1f3      	bne.n	90026bdc <__sfputs_r+0xa>
90026bf4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

90026bf8 <_vfiprintf_r>:
90026bf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026bfc:	460d      	mov	r5, r1
90026bfe:	b09d      	sub	sp, #116	; 0x74
90026c00:	4614      	mov	r4, r2
90026c02:	4698      	mov	r8, r3
90026c04:	4606      	mov	r6, r0
90026c06:	b118      	cbz	r0, 90026c10 <_vfiprintf_r+0x18>
90026c08:	6a03      	ldr	r3, [r0, #32]
90026c0a:	b90b      	cbnz	r3, 90026c10 <_vfiprintf_r+0x18>
90026c0c:	f7ff fd10 	bl	90026630 <__sinit>
90026c10:	6e6b      	ldr	r3, [r5, #100]	; 0x64
90026c12:	07d9      	lsls	r1, r3, #31
90026c14:	d405      	bmi.n	90026c22 <_vfiprintf_r+0x2a>
90026c16:	89ab      	ldrh	r3, [r5, #12]
90026c18:	059a      	lsls	r2, r3, #22
90026c1a:	d402      	bmi.n	90026c22 <_vfiprintf_r+0x2a>
90026c1c:	6da8      	ldr	r0, [r5, #88]	; 0x58
90026c1e:	f7ff ff06 	bl	90026a2e <__retarget_lock_acquire_recursive>
90026c22:	89ab      	ldrh	r3, [r5, #12]
90026c24:	071b      	lsls	r3, r3, #28
90026c26:	d501      	bpl.n	90026c2c <_vfiprintf_r+0x34>
90026c28:	692b      	ldr	r3, [r5, #16]
90026c2a:	b99b      	cbnz	r3, 90026c54 <_vfiprintf_r+0x5c>
90026c2c:	4629      	mov	r1, r5
90026c2e:	4630      	mov	r0, r6
90026c30:	f7ff fdc6 	bl	900267c0 <__swsetup_r>
90026c34:	b170      	cbz	r0, 90026c54 <_vfiprintf_r+0x5c>
90026c36:	6e6b      	ldr	r3, [r5, #100]	; 0x64
90026c38:	07dc      	lsls	r4, r3, #31
90026c3a:	d504      	bpl.n	90026c46 <_vfiprintf_r+0x4e>
90026c3c:	f04f 30ff 	mov.w	r0, #4294967295
90026c40:	b01d      	add	sp, #116	; 0x74
90026c42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026c46:	89ab      	ldrh	r3, [r5, #12]
90026c48:	0598      	lsls	r0, r3, #22
90026c4a:	d4f7      	bmi.n	90026c3c <_vfiprintf_r+0x44>
90026c4c:	6da8      	ldr	r0, [r5, #88]	; 0x58
90026c4e:	f7ff feef 	bl	90026a30 <__retarget_lock_release_recursive>
90026c52:	e7f3      	b.n	90026c3c <_vfiprintf_r+0x44>
90026c54:	2300      	movs	r3, #0
90026c56:	9309      	str	r3, [sp, #36]	; 0x24
90026c58:	2320      	movs	r3, #32
90026c5a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
90026c5e:	f8cd 800c 	str.w	r8, [sp, #12]
90026c62:	2330      	movs	r3, #48	; 0x30
90026c64:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 90026e18 <_vfiprintf_r+0x220>
90026c68:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
90026c6c:	f04f 0901 	mov.w	r9, #1
90026c70:	4623      	mov	r3, r4
90026c72:	469a      	mov	sl, r3
90026c74:	f813 2b01 	ldrb.w	r2, [r3], #1
90026c78:	b10a      	cbz	r2, 90026c7e <_vfiprintf_r+0x86>
90026c7a:	2a25      	cmp	r2, #37	; 0x25
90026c7c:	d1f9      	bne.n	90026c72 <_vfiprintf_r+0x7a>
90026c7e:	ebba 0b04 	subs.w	fp, sl, r4
90026c82:	d00b      	beq.n	90026c9c <_vfiprintf_r+0xa4>
90026c84:	465b      	mov	r3, fp
90026c86:	4622      	mov	r2, r4
90026c88:	4629      	mov	r1, r5
90026c8a:	4630      	mov	r0, r6
90026c8c:	f7ff ffa1 	bl	90026bd2 <__sfputs_r>
90026c90:	3001      	adds	r0, #1
90026c92:	f000 80a9 	beq.w	90026de8 <_vfiprintf_r+0x1f0>
90026c96:	9a09      	ldr	r2, [sp, #36]	; 0x24
90026c98:	445a      	add	r2, fp
90026c9a:	9209      	str	r2, [sp, #36]	; 0x24
90026c9c:	f89a 3000 	ldrb.w	r3, [sl]
90026ca0:	2b00      	cmp	r3, #0
90026ca2:	f000 80a1 	beq.w	90026de8 <_vfiprintf_r+0x1f0>
90026ca6:	2300      	movs	r3, #0
90026ca8:	f04f 32ff 	mov.w	r2, #4294967295
90026cac:	e9cd 2305 	strd	r2, r3, [sp, #20]
90026cb0:	f10a 0a01 	add.w	sl, sl, #1
90026cb4:	9304      	str	r3, [sp, #16]
90026cb6:	9307      	str	r3, [sp, #28]
90026cb8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
90026cbc:	931a      	str	r3, [sp, #104]	; 0x68
90026cbe:	4654      	mov	r4, sl
90026cc0:	2205      	movs	r2, #5
90026cc2:	f814 1b01 	ldrb.w	r1, [r4], #1
90026cc6:	4854      	ldr	r0, [pc, #336]	; (90026e18 <_vfiprintf_r+0x220>)
90026cc8:	f7d9 fb0a 	bl	900002e0 <memchr>
90026ccc:	9a04      	ldr	r2, [sp, #16]
90026cce:	b9d8      	cbnz	r0, 90026d08 <_vfiprintf_r+0x110>
90026cd0:	06d1      	lsls	r1, r2, #27
90026cd2:	bf44      	itt	mi
90026cd4:	2320      	movmi	r3, #32
90026cd6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
90026cda:	0713      	lsls	r3, r2, #28
90026cdc:	bf44      	itt	mi
90026cde:	232b      	movmi	r3, #43	; 0x2b
90026ce0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
90026ce4:	f89a 3000 	ldrb.w	r3, [sl]
90026ce8:	2b2a      	cmp	r3, #42	; 0x2a
90026cea:	d015      	beq.n	90026d18 <_vfiprintf_r+0x120>
90026cec:	9a07      	ldr	r2, [sp, #28]
90026cee:	4654      	mov	r4, sl
90026cf0:	2000      	movs	r0, #0
90026cf2:	f04f 0c0a 	mov.w	ip, #10
90026cf6:	4621      	mov	r1, r4
90026cf8:	f811 3b01 	ldrb.w	r3, [r1], #1
90026cfc:	3b30      	subs	r3, #48	; 0x30
90026cfe:	2b09      	cmp	r3, #9
90026d00:	d94d      	bls.n	90026d9e <_vfiprintf_r+0x1a6>
90026d02:	b1b0      	cbz	r0, 90026d32 <_vfiprintf_r+0x13a>
90026d04:	9207      	str	r2, [sp, #28]
90026d06:	e014      	b.n	90026d32 <_vfiprintf_r+0x13a>
90026d08:	eba0 0308 	sub.w	r3, r0, r8
90026d0c:	fa09 f303 	lsl.w	r3, r9, r3
90026d10:	4313      	orrs	r3, r2
90026d12:	9304      	str	r3, [sp, #16]
90026d14:	46a2      	mov	sl, r4
90026d16:	e7d2      	b.n	90026cbe <_vfiprintf_r+0xc6>
90026d18:	9b03      	ldr	r3, [sp, #12]
90026d1a:	1d19      	adds	r1, r3, #4
90026d1c:	681b      	ldr	r3, [r3, #0]
90026d1e:	9103      	str	r1, [sp, #12]
90026d20:	2b00      	cmp	r3, #0
90026d22:	bfbb      	ittet	lt
90026d24:	425b      	neglt	r3, r3
90026d26:	f042 0202 	orrlt.w	r2, r2, #2
90026d2a:	9307      	strge	r3, [sp, #28]
90026d2c:	9307      	strlt	r3, [sp, #28]
90026d2e:	bfb8      	it	lt
90026d30:	9204      	strlt	r2, [sp, #16]
90026d32:	7823      	ldrb	r3, [r4, #0]
90026d34:	2b2e      	cmp	r3, #46	; 0x2e
90026d36:	d10c      	bne.n	90026d52 <_vfiprintf_r+0x15a>
90026d38:	7863      	ldrb	r3, [r4, #1]
90026d3a:	2b2a      	cmp	r3, #42	; 0x2a
90026d3c:	d134      	bne.n	90026da8 <_vfiprintf_r+0x1b0>
90026d3e:	9b03      	ldr	r3, [sp, #12]
90026d40:	1d1a      	adds	r2, r3, #4
90026d42:	681b      	ldr	r3, [r3, #0]
90026d44:	9203      	str	r2, [sp, #12]
90026d46:	2b00      	cmp	r3, #0
90026d48:	bfb8      	it	lt
90026d4a:	f04f 33ff 	movlt.w	r3, #4294967295
90026d4e:	3402      	adds	r4, #2
90026d50:	9305      	str	r3, [sp, #20]
90026d52:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 90026e28 <_vfiprintf_r+0x230>
90026d56:	7821      	ldrb	r1, [r4, #0]
90026d58:	2203      	movs	r2, #3
90026d5a:	4650      	mov	r0, sl
90026d5c:	f7d9 fac0 	bl	900002e0 <memchr>
90026d60:	b138      	cbz	r0, 90026d72 <_vfiprintf_r+0x17a>
90026d62:	9b04      	ldr	r3, [sp, #16]
90026d64:	eba0 000a 	sub.w	r0, r0, sl
90026d68:	2240      	movs	r2, #64	; 0x40
90026d6a:	4082      	lsls	r2, r0
90026d6c:	4313      	orrs	r3, r2
90026d6e:	3401      	adds	r4, #1
90026d70:	9304      	str	r3, [sp, #16]
90026d72:	f814 1b01 	ldrb.w	r1, [r4], #1
90026d76:	4829      	ldr	r0, [pc, #164]	; (90026e1c <_vfiprintf_r+0x224>)
90026d78:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
90026d7c:	2206      	movs	r2, #6
90026d7e:	f7d9 faaf 	bl	900002e0 <memchr>
90026d82:	2800      	cmp	r0, #0
90026d84:	d03f      	beq.n	90026e06 <_vfiprintf_r+0x20e>
90026d86:	4b26      	ldr	r3, [pc, #152]	; (90026e20 <_vfiprintf_r+0x228>)
90026d88:	bb1b      	cbnz	r3, 90026dd2 <_vfiprintf_r+0x1da>
90026d8a:	9b03      	ldr	r3, [sp, #12]
90026d8c:	3307      	adds	r3, #7
90026d8e:	f023 0307 	bic.w	r3, r3, #7
90026d92:	3308      	adds	r3, #8
90026d94:	9303      	str	r3, [sp, #12]
90026d96:	9b09      	ldr	r3, [sp, #36]	; 0x24
90026d98:	443b      	add	r3, r7
90026d9a:	9309      	str	r3, [sp, #36]	; 0x24
90026d9c:	e768      	b.n	90026c70 <_vfiprintf_r+0x78>
90026d9e:	fb0c 3202 	mla	r2, ip, r2, r3
90026da2:	460c      	mov	r4, r1
90026da4:	2001      	movs	r0, #1
90026da6:	e7a6      	b.n	90026cf6 <_vfiprintf_r+0xfe>
90026da8:	2300      	movs	r3, #0
90026daa:	3401      	adds	r4, #1
90026dac:	9305      	str	r3, [sp, #20]
90026dae:	4619      	mov	r1, r3
90026db0:	f04f 0c0a 	mov.w	ip, #10
90026db4:	4620      	mov	r0, r4
90026db6:	f810 2b01 	ldrb.w	r2, [r0], #1
90026dba:	3a30      	subs	r2, #48	; 0x30
90026dbc:	2a09      	cmp	r2, #9
90026dbe:	d903      	bls.n	90026dc8 <_vfiprintf_r+0x1d0>
90026dc0:	2b00      	cmp	r3, #0
90026dc2:	d0c6      	beq.n	90026d52 <_vfiprintf_r+0x15a>
90026dc4:	9105      	str	r1, [sp, #20]
90026dc6:	e7c4      	b.n	90026d52 <_vfiprintf_r+0x15a>
90026dc8:	fb0c 2101 	mla	r1, ip, r1, r2
90026dcc:	4604      	mov	r4, r0
90026dce:	2301      	movs	r3, #1
90026dd0:	e7f0      	b.n	90026db4 <_vfiprintf_r+0x1bc>
90026dd2:	ab03      	add	r3, sp, #12
90026dd4:	9300      	str	r3, [sp, #0]
90026dd6:	462a      	mov	r2, r5
90026dd8:	4b12      	ldr	r3, [pc, #72]	; (90026e24 <_vfiprintf_r+0x22c>)
90026dda:	a904      	add	r1, sp, #16
90026ddc:	4630      	mov	r0, r6
90026dde:	f3af 8000 	nop.w
90026de2:	4607      	mov	r7, r0
90026de4:	1c78      	adds	r0, r7, #1
90026de6:	d1d6      	bne.n	90026d96 <_vfiprintf_r+0x19e>
90026de8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
90026dea:	07d9      	lsls	r1, r3, #31
90026dec:	d405      	bmi.n	90026dfa <_vfiprintf_r+0x202>
90026dee:	89ab      	ldrh	r3, [r5, #12]
90026df0:	059a      	lsls	r2, r3, #22
90026df2:	d402      	bmi.n	90026dfa <_vfiprintf_r+0x202>
90026df4:	6da8      	ldr	r0, [r5, #88]	; 0x58
90026df6:	f7ff fe1b 	bl	90026a30 <__retarget_lock_release_recursive>
90026dfa:	89ab      	ldrh	r3, [r5, #12]
90026dfc:	065b      	lsls	r3, r3, #25
90026dfe:	f53f af1d 	bmi.w	90026c3c <_vfiprintf_r+0x44>
90026e02:	9809      	ldr	r0, [sp, #36]	; 0x24
90026e04:	e71c      	b.n	90026c40 <_vfiprintf_r+0x48>
90026e06:	ab03      	add	r3, sp, #12
90026e08:	9300      	str	r3, [sp, #0]
90026e0a:	462a      	mov	r2, r5
90026e0c:	4b05      	ldr	r3, [pc, #20]	; (90026e24 <_vfiprintf_r+0x22c>)
90026e0e:	a904      	add	r1, sp, #16
90026e10:	4630      	mov	r0, r6
90026e12:	f000 f879 	bl	90026f08 <_printf_i>
90026e16:	e7e4      	b.n	90026de2 <_vfiprintf_r+0x1ea>
90026e18:	9002ad04 	.word	0x9002ad04
90026e1c:	9002ad0e 	.word	0x9002ad0e
90026e20:	00000000 	.word	0x00000000
90026e24:	90026bd3 	.word	0x90026bd3
90026e28:	9002ad0a 	.word	0x9002ad0a

90026e2c <_printf_common>:
90026e2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90026e30:	4616      	mov	r6, r2
90026e32:	4699      	mov	r9, r3
90026e34:	688a      	ldr	r2, [r1, #8]
90026e36:	690b      	ldr	r3, [r1, #16]
90026e38:	f8dd 8020 	ldr.w	r8, [sp, #32]
90026e3c:	4293      	cmp	r3, r2
90026e3e:	bfb8      	it	lt
90026e40:	4613      	movlt	r3, r2
90026e42:	6033      	str	r3, [r6, #0]
90026e44:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
90026e48:	4607      	mov	r7, r0
90026e4a:	460c      	mov	r4, r1
90026e4c:	b10a      	cbz	r2, 90026e52 <_printf_common+0x26>
90026e4e:	3301      	adds	r3, #1
90026e50:	6033      	str	r3, [r6, #0]
90026e52:	6823      	ldr	r3, [r4, #0]
90026e54:	0699      	lsls	r1, r3, #26
90026e56:	bf42      	ittt	mi
90026e58:	6833      	ldrmi	r3, [r6, #0]
90026e5a:	3302      	addmi	r3, #2
90026e5c:	6033      	strmi	r3, [r6, #0]
90026e5e:	6825      	ldr	r5, [r4, #0]
90026e60:	f015 0506 	ands.w	r5, r5, #6
90026e64:	d106      	bne.n	90026e74 <_printf_common+0x48>
90026e66:	f104 0a19 	add.w	sl, r4, #25
90026e6a:	68e3      	ldr	r3, [r4, #12]
90026e6c:	6832      	ldr	r2, [r6, #0]
90026e6e:	1a9b      	subs	r3, r3, r2
90026e70:	42ab      	cmp	r3, r5
90026e72:	dc26      	bgt.n	90026ec2 <_printf_common+0x96>
90026e74:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
90026e78:	1e13      	subs	r3, r2, #0
90026e7a:	6822      	ldr	r2, [r4, #0]
90026e7c:	bf18      	it	ne
90026e7e:	2301      	movne	r3, #1
90026e80:	0692      	lsls	r2, r2, #26
90026e82:	d42b      	bmi.n	90026edc <_printf_common+0xb0>
90026e84:	f104 0243 	add.w	r2, r4, #67	; 0x43
90026e88:	4649      	mov	r1, r9
90026e8a:	4638      	mov	r0, r7
90026e8c:	47c0      	blx	r8
90026e8e:	3001      	adds	r0, #1
90026e90:	d01e      	beq.n	90026ed0 <_printf_common+0xa4>
90026e92:	6823      	ldr	r3, [r4, #0]
90026e94:	6922      	ldr	r2, [r4, #16]
90026e96:	f003 0306 	and.w	r3, r3, #6
90026e9a:	2b04      	cmp	r3, #4
90026e9c:	bf02      	ittt	eq
90026e9e:	68e5      	ldreq	r5, [r4, #12]
90026ea0:	6833      	ldreq	r3, [r6, #0]
90026ea2:	1aed      	subeq	r5, r5, r3
90026ea4:	68a3      	ldr	r3, [r4, #8]
90026ea6:	bf0c      	ite	eq
90026ea8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
90026eac:	2500      	movne	r5, #0
90026eae:	4293      	cmp	r3, r2
90026eb0:	bfc4      	itt	gt
90026eb2:	1a9b      	subgt	r3, r3, r2
90026eb4:	18ed      	addgt	r5, r5, r3
90026eb6:	2600      	movs	r6, #0
90026eb8:	341a      	adds	r4, #26
90026eba:	42b5      	cmp	r5, r6
90026ebc:	d11a      	bne.n	90026ef4 <_printf_common+0xc8>
90026ebe:	2000      	movs	r0, #0
90026ec0:	e008      	b.n	90026ed4 <_printf_common+0xa8>
90026ec2:	2301      	movs	r3, #1
90026ec4:	4652      	mov	r2, sl
90026ec6:	4649      	mov	r1, r9
90026ec8:	4638      	mov	r0, r7
90026eca:	47c0      	blx	r8
90026ecc:	3001      	adds	r0, #1
90026ece:	d103      	bne.n	90026ed8 <_printf_common+0xac>
90026ed0:	f04f 30ff 	mov.w	r0, #4294967295
90026ed4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90026ed8:	3501      	adds	r5, #1
90026eda:	e7c6      	b.n	90026e6a <_printf_common+0x3e>
90026edc:	18e1      	adds	r1, r4, r3
90026ede:	1c5a      	adds	r2, r3, #1
90026ee0:	2030      	movs	r0, #48	; 0x30
90026ee2:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
90026ee6:	4422      	add	r2, r4
90026ee8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
90026eec:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
90026ef0:	3302      	adds	r3, #2
90026ef2:	e7c7      	b.n	90026e84 <_printf_common+0x58>
90026ef4:	2301      	movs	r3, #1
90026ef6:	4622      	mov	r2, r4
90026ef8:	4649      	mov	r1, r9
90026efa:	4638      	mov	r0, r7
90026efc:	47c0      	blx	r8
90026efe:	3001      	adds	r0, #1
90026f00:	d0e6      	beq.n	90026ed0 <_printf_common+0xa4>
90026f02:	3601      	adds	r6, #1
90026f04:	e7d9      	b.n	90026eba <_printf_common+0x8e>
	...

90026f08 <_printf_i>:
90026f08:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
90026f0c:	7e0f      	ldrb	r7, [r1, #24]
90026f0e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90026f10:	2f78      	cmp	r7, #120	; 0x78
90026f12:	4691      	mov	r9, r2
90026f14:	4680      	mov	r8, r0
90026f16:	460c      	mov	r4, r1
90026f18:	469a      	mov	sl, r3
90026f1a:	f101 0243 	add.w	r2, r1, #67	; 0x43
90026f1e:	d807      	bhi.n	90026f30 <_printf_i+0x28>
90026f20:	2f62      	cmp	r7, #98	; 0x62
90026f22:	d80a      	bhi.n	90026f3a <_printf_i+0x32>
90026f24:	2f00      	cmp	r7, #0
90026f26:	f000 80d4 	beq.w	900270d2 <_printf_i+0x1ca>
90026f2a:	2f58      	cmp	r7, #88	; 0x58
90026f2c:	f000 80c0 	beq.w	900270b0 <_printf_i+0x1a8>
90026f30:	f104 0542 	add.w	r5, r4, #66	; 0x42
90026f34:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
90026f38:	e03a      	b.n	90026fb0 <_printf_i+0xa8>
90026f3a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
90026f3e:	2b15      	cmp	r3, #21
90026f40:	d8f6      	bhi.n	90026f30 <_printf_i+0x28>
90026f42:	a101      	add	r1, pc, #4	; (adr r1, 90026f48 <_printf_i+0x40>)
90026f44:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
90026f48:	90026fa1 	.word	0x90026fa1
90026f4c:	90026fb5 	.word	0x90026fb5
90026f50:	90026f31 	.word	0x90026f31
90026f54:	90026f31 	.word	0x90026f31
90026f58:	90026f31 	.word	0x90026f31
90026f5c:	90026f31 	.word	0x90026f31
90026f60:	90026fb5 	.word	0x90026fb5
90026f64:	90026f31 	.word	0x90026f31
90026f68:	90026f31 	.word	0x90026f31
90026f6c:	90026f31 	.word	0x90026f31
90026f70:	90026f31 	.word	0x90026f31
90026f74:	900270b9 	.word	0x900270b9
90026f78:	90026fe1 	.word	0x90026fe1
90026f7c:	90027073 	.word	0x90027073
90026f80:	90026f31 	.word	0x90026f31
90026f84:	90026f31 	.word	0x90026f31
90026f88:	900270db 	.word	0x900270db
90026f8c:	90026f31 	.word	0x90026f31
90026f90:	90026fe1 	.word	0x90026fe1
90026f94:	90026f31 	.word	0x90026f31
90026f98:	90026f31 	.word	0x90026f31
90026f9c:	9002707b 	.word	0x9002707b
90026fa0:	682b      	ldr	r3, [r5, #0]
90026fa2:	1d1a      	adds	r2, r3, #4
90026fa4:	681b      	ldr	r3, [r3, #0]
90026fa6:	602a      	str	r2, [r5, #0]
90026fa8:	f104 0542 	add.w	r5, r4, #66	; 0x42
90026fac:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
90026fb0:	2301      	movs	r3, #1
90026fb2:	e09f      	b.n	900270f4 <_printf_i+0x1ec>
90026fb4:	6820      	ldr	r0, [r4, #0]
90026fb6:	682b      	ldr	r3, [r5, #0]
90026fb8:	0607      	lsls	r7, r0, #24
90026fba:	f103 0104 	add.w	r1, r3, #4
90026fbe:	6029      	str	r1, [r5, #0]
90026fc0:	d501      	bpl.n	90026fc6 <_printf_i+0xbe>
90026fc2:	681e      	ldr	r6, [r3, #0]
90026fc4:	e003      	b.n	90026fce <_printf_i+0xc6>
90026fc6:	0646      	lsls	r6, r0, #25
90026fc8:	d5fb      	bpl.n	90026fc2 <_printf_i+0xba>
90026fca:	f9b3 6000 	ldrsh.w	r6, [r3]
90026fce:	2e00      	cmp	r6, #0
90026fd0:	da03      	bge.n	90026fda <_printf_i+0xd2>
90026fd2:	232d      	movs	r3, #45	; 0x2d
90026fd4:	4276      	negs	r6, r6
90026fd6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
90026fda:	485a      	ldr	r0, [pc, #360]	; (90027144 <_printf_i+0x23c>)
90026fdc:	230a      	movs	r3, #10
90026fde:	e012      	b.n	90027006 <_printf_i+0xfe>
90026fe0:	682b      	ldr	r3, [r5, #0]
90026fe2:	6820      	ldr	r0, [r4, #0]
90026fe4:	1d19      	adds	r1, r3, #4
90026fe6:	6029      	str	r1, [r5, #0]
90026fe8:	0605      	lsls	r5, r0, #24
90026fea:	d501      	bpl.n	90026ff0 <_printf_i+0xe8>
90026fec:	681e      	ldr	r6, [r3, #0]
90026fee:	e002      	b.n	90026ff6 <_printf_i+0xee>
90026ff0:	0641      	lsls	r1, r0, #25
90026ff2:	d5fb      	bpl.n	90026fec <_printf_i+0xe4>
90026ff4:	881e      	ldrh	r6, [r3, #0]
90026ff6:	4853      	ldr	r0, [pc, #332]	; (90027144 <_printf_i+0x23c>)
90026ff8:	2f6f      	cmp	r7, #111	; 0x6f
90026ffa:	bf0c      	ite	eq
90026ffc:	2308      	moveq	r3, #8
90026ffe:	230a      	movne	r3, #10
90027000:	2100      	movs	r1, #0
90027002:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
90027006:	6865      	ldr	r5, [r4, #4]
90027008:	60a5      	str	r5, [r4, #8]
9002700a:	2d00      	cmp	r5, #0
9002700c:	bfa2      	ittt	ge
9002700e:	6821      	ldrge	r1, [r4, #0]
90027010:	f021 0104 	bicge.w	r1, r1, #4
90027014:	6021      	strge	r1, [r4, #0]
90027016:	b90e      	cbnz	r6, 9002701c <_printf_i+0x114>
90027018:	2d00      	cmp	r5, #0
9002701a:	d04b      	beq.n	900270b4 <_printf_i+0x1ac>
9002701c:	4615      	mov	r5, r2
9002701e:	fbb6 f1f3 	udiv	r1, r6, r3
90027022:	fb03 6711 	mls	r7, r3, r1, r6
90027026:	5dc7      	ldrb	r7, [r0, r7]
90027028:	f805 7d01 	strb.w	r7, [r5, #-1]!
9002702c:	4637      	mov	r7, r6
9002702e:	42bb      	cmp	r3, r7
90027030:	460e      	mov	r6, r1
90027032:	d9f4      	bls.n	9002701e <_printf_i+0x116>
90027034:	2b08      	cmp	r3, #8
90027036:	d10b      	bne.n	90027050 <_printf_i+0x148>
90027038:	6823      	ldr	r3, [r4, #0]
9002703a:	07de      	lsls	r6, r3, #31
9002703c:	d508      	bpl.n	90027050 <_printf_i+0x148>
9002703e:	6923      	ldr	r3, [r4, #16]
90027040:	6861      	ldr	r1, [r4, #4]
90027042:	4299      	cmp	r1, r3
90027044:	bfde      	ittt	le
90027046:	2330      	movle	r3, #48	; 0x30
90027048:	f805 3c01 	strble.w	r3, [r5, #-1]
9002704c:	f105 35ff 	addle.w	r5, r5, #4294967295
90027050:	1b52      	subs	r2, r2, r5
90027052:	6122      	str	r2, [r4, #16]
90027054:	f8cd a000 	str.w	sl, [sp]
90027058:	464b      	mov	r3, r9
9002705a:	aa03      	add	r2, sp, #12
9002705c:	4621      	mov	r1, r4
9002705e:	4640      	mov	r0, r8
90027060:	f7ff fee4 	bl	90026e2c <_printf_common>
90027064:	3001      	adds	r0, #1
90027066:	d14a      	bne.n	900270fe <_printf_i+0x1f6>
90027068:	f04f 30ff 	mov.w	r0, #4294967295
9002706c:	b004      	add	sp, #16
9002706e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90027072:	6823      	ldr	r3, [r4, #0]
90027074:	f043 0320 	orr.w	r3, r3, #32
90027078:	6023      	str	r3, [r4, #0]
9002707a:	4833      	ldr	r0, [pc, #204]	; (90027148 <_printf_i+0x240>)
9002707c:	2778      	movs	r7, #120	; 0x78
9002707e:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
90027082:	6823      	ldr	r3, [r4, #0]
90027084:	6829      	ldr	r1, [r5, #0]
90027086:	061f      	lsls	r7, r3, #24
90027088:	f851 6b04 	ldr.w	r6, [r1], #4
9002708c:	d402      	bmi.n	90027094 <_printf_i+0x18c>
9002708e:	065f      	lsls	r7, r3, #25
90027090:	bf48      	it	mi
90027092:	b2b6      	uxthmi	r6, r6
90027094:	07df      	lsls	r7, r3, #31
90027096:	bf48      	it	mi
90027098:	f043 0320 	orrmi.w	r3, r3, #32
9002709c:	6029      	str	r1, [r5, #0]
9002709e:	bf48      	it	mi
900270a0:	6023      	strmi	r3, [r4, #0]
900270a2:	b91e      	cbnz	r6, 900270ac <_printf_i+0x1a4>
900270a4:	6823      	ldr	r3, [r4, #0]
900270a6:	f023 0320 	bic.w	r3, r3, #32
900270aa:	6023      	str	r3, [r4, #0]
900270ac:	2310      	movs	r3, #16
900270ae:	e7a7      	b.n	90027000 <_printf_i+0xf8>
900270b0:	4824      	ldr	r0, [pc, #144]	; (90027144 <_printf_i+0x23c>)
900270b2:	e7e4      	b.n	9002707e <_printf_i+0x176>
900270b4:	4615      	mov	r5, r2
900270b6:	e7bd      	b.n	90027034 <_printf_i+0x12c>
900270b8:	682b      	ldr	r3, [r5, #0]
900270ba:	6826      	ldr	r6, [r4, #0]
900270bc:	6961      	ldr	r1, [r4, #20]
900270be:	1d18      	adds	r0, r3, #4
900270c0:	6028      	str	r0, [r5, #0]
900270c2:	0635      	lsls	r5, r6, #24
900270c4:	681b      	ldr	r3, [r3, #0]
900270c6:	d501      	bpl.n	900270cc <_printf_i+0x1c4>
900270c8:	6019      	str	r1, [r3, #0]
900270ca:	e002      	b.n	900270d2 <_printf_i+0x1ca>
900270cc:	0670      	lsls	r0, r6, #25
900270ce:	d5fb      	bpl.n	900270c8 <_printf_i+0x1c0>
900270d0:	8019      	strh	r1, [r3, #0]
900270d2:	2300      	movs	r3, #0
900270d4:	6123      	str	r3, [r4, #16]
900270d6:	4615      	mov	r5, r2
900270d8:	e7bc      	b.n	90027054 <_printf_i+0x14c>
900270da:	682b      	ldr	r3, [r5, #0]
900270dc:	1d1a      	adds	r2, r3, #4
900270de:	602a      	str	r2, [r5, #0]
900270e0:	681d      	ldr	r5, [r3, #0]
900270e2:	6862      	ldr	r2, [r4, #4]
900270e4:	2100      	movs	r1, #0
900270e6:	4628      	mov	r0, r5
900270e8:	f7d9 f8fa 	bl	900002e0 <memchr>
900270ec:	b108      	cbz	r0, 900270f2 <_printf_i+0x1ea>
900270ee:	1b40      	subs	r0, r0, r5
900270f0:	6060      	str	r0, [r4, #4]
900270f2:	6863      	ldr	r3, [r4, #4]
900270f4:	6123      	str	r3, [r4, #16]
900270f6:	2300      	movs	r3, #0
900270f8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
900270fc:	e7aa      	b.n	90027054 <_printf_i+0x14c>
900270fe:	6923      	ldr	r3, [r4, #16]
90027100:	462a      	mov	r2, r5
90027102:	4649      	mov	r1, r9
90027104:	4640      	mov	r0, r8
90027106:	47d0      	blx	sl
90027108:	3001      	adds	r0, #1
9002710a:	d0ad      	beq.n	90027068 <_printf_i+0x160>
9002710c:	6823      	ldr	r3, [r4, #0]
9002710e:	079b      	lsls	r3, r3, #30
90027110:	d413      	bmi.n	9002713a <_printf_i+0x232>
90027112:	68e0      	ldr	r0, [r4, #12]
90027114:	9b03      	ldr	r3, [sp, #12]
90027116:	4298      	cmp	r0, r3
90027118:	bfb8      	it	lt
9002711a:	4618      	movlt	r0, r3
9002711c:	e7a6      	b.n	9002706c <_printf_i+0x164>
9002711e:	2301      	movs	r3, #1
90027120:	4632      	mov	r2, r6
90027122:	4649      	mov	r1, r9
90027124:	4640      	mov	r0, r8
90027126:	47d0      	blx	sl
90027128:	3001      	adds	r0, #1
9002712a:	d09d      	beq.n	90027068 <_printf_i+0x160>
9002712c:	3501      	adds	r5, #1
9002712e:	68e3      	ldr	r3, [r4, #12]
90027130:	9903      	ldr	r1, [sp, #12]
90027132:	1a5b      	subs	r3, r3, r1
90027134:	42ab      	cmp	r3, r5
90027136:	dcf2      	bgt.n	9002711e <_printf_i+0x216>
90027138:	e7eb      	b.n	90027112 <_printf_i+0x20a>
9002713a:	2500      	movs	r5, #0
9002713c:	f104 0619 	add.w	r6, r4, #25
90027140:	e7f5      	b.n	9002712e <_printf_i+0x226>
90027142:	bf00      	nop
90027144:	9002ad15 	.word	0x9002ad15
90027148:	9002ad26 	.word	0x9002ad26

9002714c <__sflush_r>:
9002714c:	898a      	ldrh	r2, [r1, #12]
9002714e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90027152:	4605      	mov	r5, r0
90027154:	0710      	lsls	r0, r2, #28
90027156:	460c      	mov	r4, r1
90027158:	d458      	bmi.n	9002720c <__sflush_r+0xc0>
9002715a:	684b      	ldr	r3, [r1, #4]
9002715c:	2b00      	cmp	r3, #0
9002715e:	dc05      	bgt.n	9002716c <__sflush_r+0x20>
90027160:	6c0b      	ldr	r3, [r1, #64]	; 0x40
90027162:	2b00      	cmp	r3, #0
90027164:	dc02      	bgt.n	9002716c <__sflush_r+0x20>
90027166:	2000      	movs	r0, #0
90027168:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002716c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9002716e:	2e00      	cmp	r6, #0
90027170:	d0f9      	beq.n	90027166 <__sflush_r+0x1a>
90027172:	2300      	movs	r3, #0
90027174:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
90027178:	682f      	ldr	r7, [r5, #0]
9002717a:	6a21      	ldr	r1, [r4, #32]
9002717c:	602b      	str	r3, [r5, #0]
9002717e:	d032      	beq.n	900271e6 <__sflush_r+0x9a>
90027180:	6d60      	ldr	r0, [r4, #84]	; 0x54
90027182:	89a3      	ldrh	r3, [r4, #12]
90027184:	075a      	lsls	r2, r3, #29
90027186:	d505      	bpl.n	90027194 <__sflush_r+0x48>
90027188:	6863      	ldr	r3, [r4, #4]
9002718a:	1ac0      	subs	r0, r0, r3
9002718c:	6b63      	ldr	r3, [r4, #52]	; 0x34
9002718e:	b10b      	cbz	r3, 90027194 <__sflush_r+0x48>
90027190:	6c23      	ldr	r3, [r4, #64]	; 0x40
90027192:	1ac0      	subs	r0, r0, r3
90027194:	2300      	movs	r3, #0
90027196:	4602      	mov	r2, r0
90027198:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9002719a:	6a21      	ldr	r1, [r4, #32]
9002719c:	4628      	mov	r0, r5
9002719e:	47b0      	blx	r6
900271a0:	1c43      	adds	r3, r0, #1
900271a2:	89a3      	ldrh	r3, [r4, #12]
900271a4:	d106      	bne.n	900271b4 <__sflush_r+0x68>
900271a6:	6829      	ldr	r1, [r5, #0]
900271a8:	291d      	cmp	r1, #29
900271aa:	d82b      	bhi.n	90027204 <__sflush_r+0xb8>
900271ac:	4a29      	ldr	r2, [pc, #164]	; (90027254 <__sflush_r+0x108>)
900271ae:	410a      	asrs	r2, r1
900271b0:	07d6      	lsls	r6, r2, #31
900271b2:	d427      	bmi.n	90027204 <__sflush_r+0xb8>
900271b4:	2200      	movs	r2, #0
900271b6:	6062      	str	r2, [r4, #4]
900271b8:	04d9      	lsls	r1, r3, #19
900271ba:	6922      	ldr	r2, [r4, #16]
900271bc:	6022      	str	r2, [r4, #0]
900271be:	d504      	bpl.n	900271ca <__sflush_r+0x7e>
900271c0:	1c42      	adds	r2, r0, #1
900271c2:	d101      	bne.n	900271c8 <__sflush_r+0x7c>
900271c4:	682b      	ldr	r3, [r5, #0]
900271c6:	b903      	cbnz	r3, 900271ca <__sflush_r+0x7e>
900271c8:	6560      	str	r0, [r4, #84]	; 0x54
900271ca:	6b61      	ldr	r1, [r4, #52]	; 0x34
900271cc:	602f      	str	r7, [r5, #0]
900271ce:	2900      	cmp	r1, #0
900271d0:	d0c9      	beq.n	90027166 <__sflush_r+0x1a>
900271d2:	f104 0344 	add.w	r3, r4, #68	; 0x44
900271d6:	4299      	cmp	r1, r3
900271d8:	d002      	beq.n	900271e0 <__sflush_r+0x94>
900271da:	4628      	mov	r0, r5
900271dc:	f7ff fc96 	bl	90026b0c <_free_r>
900271e0:	2000      	movs	r0, #0
900271e2:	6360      	str	r0, [r4, #52]	; 0x34
900271e4:	e7c0      	b.n	90027168 <__sflush_r+0x1c>
900271e6:	2301      	movs	r3, #1
900271e8:	4628      	mov	r0, r5
900271ea:	47b0      	blx	r6
900271ec:	1c41      	adds	r1, r0, #1
900271ee:	d1c8      	bne.n	90027182 <__sflush_r+0x36>
900271f0:	682b      	ldr	r3, [r5, #0]
900271f2:	2b00      	cmp	r3, #0
900271f4:	d0c5      	beq.n	90027182 <__sflush_r+0x36>
900271f6:	2b1d      	cmp	r3, #29
900271f8:	d001      	beq.n	900271fe <__sflush_r+0xb2>
900271fa:	2b16      	cmp	r3, #22
900271fc:	d101      	bne.n	90027202 <__sflush_r+0xb6>
900271fe:	602f      	str	r7, [r5, #0]
90027200:	e7b1      	b.n	90027166 <__sflush_r+0x1a>
90027202:	89a3      	ldrh	r3, [r4, #12]
90027204:	f043 0340 	orr.w	r3, r3, #64	; 0x40
90027208:	81a3      	strh	r3, [r4, #12]
9002720a:	e7ad      	b.n	90027168 <__sflush_r+0x1c>
9002720c:	690f      	ldr	r7, [r1, #16]
9002720e:	2f00      	cmp	r7, #0
90027210:	d0a9      	beq.n	90027166 <__sflush_r+0x1a>
90027212:	0793      	lsls	r3, r2, #30
90027214:	680e      	ldr	r6, [r1, #0]
90027216:	bf08      	it	eq
90027218:	694b      	ldreq	r3, [r1, #20]
9002721a:	600f      	str	r7, [r1, #0]
9002721c:	bf18      	it	ne
9002721e:	2300      	movne	r3, #0
90027220:	eba6 0807 	sub.w	r8, r6, r7
90027224:	608b      	str	r3, [r1, #8]
90027226:	f1b8 0f00 	cmp.w	r8, #0
9002722a:	dd9c      	ble.n	90027166 <__sflush_r+0x1a>
9002722c:	6a21      	ldr	r1, [r4, #32]
9002722e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
90027230:	4643      	mov	r3, r8
90027232:	463a      	mov	r2, r7
90027234:	4628      	mov	r0, r5
90027236:	47b0      	blx	r6
90027238:	2800      	cmp	r0, #0
9002723a:	dc06      	bgt.n	9002724a <__sflush_r+0xfe>
9002723c:	89a3      	ldrh	r3, [r4, #12]
9002723e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
90027242:	81a3      	strh	r3, [r4, #12]
90027244:	f04f 30ff 	mov.w	r0, #4294967295
90027248:	e78e      	b.n	90027168 <__sflush_r+0x1c>
9002724a:	4407      	add	r7, r0
9002724c:	eba8 0800 	sub.w	r8, r8, r0
90027250:	e7e9      	b.n	90027226 <__sflush_r+0xda>
90027252:	bf00      	nop
90027254:	dfbffffe 	.word	0xdfbffffe

90027258 <_fflush_r>:
90027258:	b538      	push	{r3, r4, r5, lr}
9002725a:	690b      	ldr	r3, [r1, #16]
9002725c:	4605      	mov	r5, r0
9002725e:	460c      	mov	r4, r1
90027260:	b913      	cbnz	r3, 90027268 <_fflush_r+0x10>
90027262:	2500      	movs	r5, #0
90027264:	4628      	mov	r0, r5
90027266:	bd38      	pop	{r3, r4, r5, pc}
90027268:	b118      	cbz	r0, 90027272 <_fflush_r+0x1a>
9002726a:	6a03      	ldr	r3, [r0, #32]
9002726c:	b90b      	cbnz	r3, 90027272 <_fflush_r+0x1a>
9002726e:	f7ff f9df 	bl	90026630 <__sinit>
90027272:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90027276:	2b00      	cmp	r3, #0
90027278:	d0f3      	beq.n	90027262 <_fflush_r+0xa>
9002727a:	6e62      	ldr	r2, [r4, #100]	; 0x64
9002727c:	07d0      	lsls	r0, r2, #31
9002727e:	d404      	bmi.n	9002728a <_fflush_r+0x32>
90027280:	0599      	lsls	r1, r3, #22
90027282:	d402      	bmi.n	9002728a <_fflush_r+0x32>
90027284:	6da0      	ldr	r0, [r4, #88]	; 0x58
90027286:	f7ff fbd2 	bl	90026a2e <__retarget_lock_acquire_recursive>
9002728a:	4628      	mov	r0, r5
9002728c:	4621      	mov	r1, r4
9002728e:	f7ff ff5d 	bl	9002714c <__sflush_r>
90027292:	6e63      	ldr	r3, [r4, #100]	; 0x64
90027294:	07da      	lsls	r2, r3, #31
90027296:	4605      	mov	r5, r0
90027298:	d4e4      	bmi.n	90027264 <_fflush_r+0xc>
9002729a:	89a3      	ldrh	r3, [r4, #12]
9002729c:	059b      	lsls	r3, r3, #22
9002729e:	d4e1      	bmi.n	90027264 <_fflush_r+0xc>
900272a0:	6da0      	ldr	r0, [r4, #88]	; 0x58
900272a2:	f7ff fbc5 	bl	90026a30 <__retarget_lock_release_recursive>
900272a6:	e7dd      	b.n	90027264 <_fflush_r+0xc>

900272a8 <__swhatbuf_r>:
900272a8:	b570      	push	{r4, r5, r6, lr}
900272aa:	460c      	mov	r4, r1
900272ac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
900272b0:	2900      	cmp	r1, #0
900272b2:	b096      	sub	sp, #88	; 0x58
900272b4:	4615      	mov	r5, r2
900272b6:	461e      	mov	r6, r3
900272b8:	da0d      	bge.n	900272d6 <__swhatbuf_r+0x2e>
900272ba:	89a3      	ldrh	r3, [r4, #12]
900272bc:	f013 0f80 	tst.w	r3, #128	; 0x80
900272c0:	f04f 0100 	mov.w	r1, #0
900272c4:	bf0c      	ite	eq
900272c6:	f44f 6380 	moveq.w	r3, #1024	; 0x400
900272ca:	2340      	movne	r3, #64	; 0x40
900272cc:	2000      	movs	r0, #0
900272ce:	6031      	str	r1, [r6, #0]
900272d0:	602b      	str	r3, [r5, #0]
900272d2:	b016      	add	sp, #88	; 0x58
900272d4:	bd70      	pop	{r4, r5, r6, pc}
900272d6:	466a      	mov	r2, sp
900272d8:	f000 f848 	bl	9002736c <_fstat_r>
900272dc:	2800      	cmp	r0, #0
900272de:	dbec      	blt.n	900272ba <__swhatbuf_r+0x12>
900272e0:	9901      	ldr	r1, [sp, #4]
900272e2:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
900272e6:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
900272ea:	4259      	negs	r1, r3
900272ec:	4159      	adcs	r1, r3
900272ee:	f44f 6380 	mov.w	r3, #1024	; 0x400
900272f2:	e7eb      	b.n	900272cc <__swhatbuf_r+0x24>

900272f4 <__smakebuf_r>:
900272f4:	898b      	ldrh	r3, [r1, #12]
900272f6:	b573      	push	{r0, r1, r4, r5, r6, lr}
900272f8:	079d      	lsls	r5, r3, #30
900272fa:	4606      	mov	r6, r0
900272fc:	460c      	mov	r4, r1
900272fe:	d507      	bpl.n	90027310 <__smakebuf_r+0x1c>
90027300:	f104 0347 	add.w	r3, r4, #71	; 0x47
90027304:	6023      	str	r3, [r4, #0]
90027306:	6123      	str	r3, [r4, #16]
90027308:	2301      	movs	r3, #1
9002730a:	6163      	str	r3, [r4, #20]
9002730c:	b002      	add	sp, #8
9002730e:	bd70      	pop	{r4, r5, r6, pc}
90027310:	ab01      	add	r3, sp, #4
90027312:	466a      	mov	r2, sp
90027314:	f7ff ffc8 	bl	900272a8 <__swhatbuf_r>
90027318:	9900      	ldr	r1, [sp, #0]
9002731a:	4605      	mov	r5, r0
9002731c:	4630      	mov	r0, r6
9002731e:	f7ff f823 	bl	90026368 <_malloc_r>
90027322:	b948      	cbnz	r0, 90027338 <__smakebuf_r+0x44>
90027324:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90027328:	059a      	lsls	r2, r3, #22
9002732a:	d4ef      	bmi.n	9002730c <__smakebuf_r+0x18>
9002732c:	f023 0303 	bic.w	r3, r3, #3
90027330:	f043 0302 	orr.w	r3, r3, #2
90027334:	81a3      	strh	r3, [r4, #12]
90027336:	e7e3      	b.n	90027300 <__smakebuf_r+0xc>
90027338:	89a3      	ldrh	r3, [r4, #12]
9002733a:	6020      	str	r0, [r4, #0]
9002733c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90027340:	81a3      	strh	r3, [r4, #12]
90027342:	9b00      	ldr	r3, [sp, #0]
90027344:	6163      	str	r3, [r4, #20]
90027346:	9b01      	ldr	r3, [sp, #4]
90027348:	6120      	str	r0, [r4, #16]
9002734a:	b15b      	cbz	r3, 90027364 <__smakebuf_r+0x70>
9002734c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
90027350:	4630      	mov	r0, r6
90027352:	f000 f81d 	bl	90027390 <_isatty_r>
90027356:	b128      	cbz	r0, 90027364 <__smakebuf_r+0x70>
90027358:	89a3      	ldrh	r3, [r4, #12]
9002735a:	f023 0303 	bic.w	r3, r3, #3
9002735e:	f043 0301 	orr.w	r3, r3, #1
90027362:	81a3      	strh	r3, [r4, #12]
90027364:	89a3      	ldrh	r3, [r4, #12]
90027366:	431d      	orrs	r5, r3
90027368:	81a5      	strh	r5, [r4, #12]
9002736a:	e7cf      	b.n	9002730c <__smakebuf_r+0x18>

9002736c <_fstat_r>:
9002736c:	b538      	push	{r3, r4, r5, lr}
9002736e:	4d07      	ldr	r5, [pc, #28]	; (9002738c <_fstat_r+0x20>)
90027370:	2300      	movs	r3, #0
90027372:	4604      	mov	r4, r0
90027374:	4608      	mov	r0, r1
90027376:	4611      	mov	r1, r2
90027378:	602b      	str	r3, [r5, #0]
9002737a:	f7dc fa21 	bl	900037c0 <_fstat>
9002737e:	1c43      	adds	r3, r0, #1
90027380:	d102      	bne.n	90027388 <_fstat_r+0x1c>
90027382:	682b      	ldr	r3, [r5, #0]
90027384:	b103      	cbz	r3, 90027388 <_fstat_r+0x1c>
90027386:	6023      	str	r3, [r4, #0]
90027388:	bd38      	pop	{r3, r4, r5, pc}
9002738a:	bf00      	nop
9002738c:	24024044 	.word	0x24024044

90027390 <_isatty_r>:
90027390:	b538      	push	{r3, r4, r5, lr}
90027392:	4d06      	ldr	r5, [pc, #24]	; (900273ac <_isatty_r+0x1c>)
90027394:	2300      	movs	r3, #0
90027396:	4604      	mov	r4, r0
90027398:	4608      	mov	r0, r1
9002739a:	602b      	str	r3, [r5, #0]
9002739c:	f7dc fa16 	bl	900037cc <_isatty>
900273a0:	1c43      	adds	r3, r0, #1
900273a2:	d102      	bne.n	900273aa <_isatty_r+0x1a>
900273a4:	682b      	ldr	r3, [r5, #0]
900273a6:	b103      	cbz	r3, 900273aa <_isatty_r+0x1a>
900273a8:	6023      	str	r3, [r4, #0]
900273aa:	bd38      	pop	{r3, r4, r5, pc}
900273ac:	24024044 	.word	0x24024044

900273b0 <_sbrk>:
900273b0:	4a04      	ldr	r2, [pc, #16]	; (900273c4 <_sbrk+0x14>)
900273b2:	6811      	ldr	r1, [r2, #0]
900273b4:	4603      	mov	r3, r0
900273b6:	b909      	cbnz	r1, 900273bc <_sbrk+0xc>
900273b8:	4903      	ldr	r1, [pc, #12]	; (900273c8 <_sbrk+0x18>)
900273ba:	6011      	str	r1, [r2, #0]
900273bc:	6810      	ldr	r0, [r2, #0]
900273be:	4403      	add	r3, r0
900273c0:	6013      	str	r3, [r2, #0]
900273c2:	4770      	bx	lr
900273c4:	240241e4 	.word	0x240241e4
900273c8:	240241e8 	.word	0x240241e8

900273cc <_init>:
900273cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900273ce:	bf00      	nop
900273d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
900273d2:	bc08      	pop	{r3}
900273d4:	469e      	mov	lr, r3
900273d6:	4770      	bx	lr

900273d8 <_fini>:
900273d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900273da:	bf00      	nop
900273dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
900273de:	bc08      	pop	{r3}
900273e0:	469e      	mov	lr, r3
900273e2:	4770      	bx	lr
